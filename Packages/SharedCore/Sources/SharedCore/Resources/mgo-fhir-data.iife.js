var MgoFhirData = function(exports) {
  "use strict";var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);

  var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
  function getAugmentedNamespace(n) {
    if (Object.prototype.hasOwnProperty.call(n, "__esModule")) return n;
    var f = n.default;
    if (typeof f == "function") {
      var a = function a2() {
        if (this instanceof a2) {
          return Reflect.construct(f, arguments, this.constructor);
        }
        return f.apply(this, arguments);
      };
      a.prototype = f.prototype;
    } else a = {};
    Object.defineProperty(a, "__esModule", { value: true });
    Object.keys(n).forEach(function(k) {
      var d = Object.getOwnPropertyDescriptor(n, k);
      Object.defineProperty(a, k, d.get ? d : {
        enumerable: true,
        get: function() {
          return n[k];
        }
      });
    });
    return a;
  }
  var core$2;
  var hasRequiredCore$2;
  function requireCore$2() {
    if (hasRequiredCore$2) return core$2;
    hasRequiredCore$2 = 1;
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
      return typeof obj;
    } : function(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    var jsx = function() {
      var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 60103;
      return function createRawReactElement(type, props, key, children) {
        var defaultProps = type && type.defaultProps;
        var childrenLength = arguments.length - 3;
        if (!props && childrenLength !== 0) {
          props = {};
        }
        if (props && defaultProps) {
          for (var propName in defaultProps) {
            if (props[propName] === void 0) {
              props[propName] = defaultProps[propName];
            }
          }
        } else if (!props) {
          props = defaultProps || {};
        }
        if (childrenLength === 1) {
          props.children = children;
        } else if (childrenLength > 1) {
          var childArray = Array(childrenLength);
          for (var i = 0; i < childrenLength; i++) {
            childArray[i] = arguments[i + 3];
          }
          props.children = childArray;
        }
        return {
          $$typeof: REACT_ELEMENT_TYPE,
          type,
          key: key === void 0 ? null : "" + key,
          ref: null,
          props,
          _owner: null
        };
      };
    }();
    var asyncToGenerator = function(fn) {
      return function() {
        var gen = fn.apply(this, arguments);
        return new Promise(function(resolve, reject) {
          function step(key, arg) {
            try {
              var info = gen[key](arg);
              var value2 = info.value;
            } catch (error) {
              reject(error);
              return;
            }
            if (info.done) {
              resolve(value2);
            } else {
              return Promise.resolve(value2).then(function(value3) {
                return step("next", value3);
              }, function(err) {
                return step("throw", err);
              });
            }
          }
          return step("next");
        });
      };
    };
    var classCallCheck = function(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    };
    var createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var defineEnumerableProperties = function(obj, descs) {
      for (var key in descs) {
        var desc = descs[key];
        desc.configurable = desc.enumerable = true;
        if ("value" in desc) desc.writable = true;
        Object.defineProperty(obj, key, desc);
      }
      return obj;
    };
    var defaults = function(obj, defaults2) {
      var keys = Object.getOwnPropertyNames(defaults2);
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        var value2 = Object.getOwnPropertyDescriptor(defaults2, key);
        if (value2 && value2.configurable && obj[key] === void 0) {
          Object.defineProperty(obj, key, value2);
        }
      }
      return obj;
    };
    var defineProperty$1 = function(obj, key, value2) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value2,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value2;
      }
      return obj;
    };
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var get = function get2(object, property, receiver) {
      if (object === null) object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === void 0) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return void 0;
        } else {
          return get2(parent, property, receiver);
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === void 0) {
          return void 0;
        }
        return getter.call(receiver);
      }
    };
    var inherits = function(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    };
    var _instanceof = function(left, right) {
      if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
        return right[Symbol.hasInstance](left);
      } else {
        return left instanceof right;
      }
    };
    var interopRequireDefault = function(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    };
    var interopRequireWildcard = function(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
          }
        }
        newObj.default = obj;
        return newObj;
      }
    };
    var newArrowCheck = function(innerThis, boundThis) {
      if (innerThis !== boundThis) {
        throw new TypeError("Cannot instantiate an arrow function");
      }
    };
    var objectDestructuringEmpty = function(obj) {
      if (obj == null) throw new TypeError("Cannot destructure undefined");
    };
    var objectWithoutProperties = function(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0) continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
        target[i] = obj[i];
      }
      return target;
    };
    var possibleConstructorReturn = function(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    };
    var selfGlobal = typeof commonjsGlobal === "undefined" ? self : commonjsGlobal;
    var set = function set2(object, property, value2, receiver) {
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === void 0) {
        var parent = Object.getPrototypeOf(object);
        if (parent !== null) {
          set2(parent, property, value2, receiver);
        }
      } else if ("value" in desc && desc.writable) {
        desc.value = value2;
      } else {
        var setter = desc.set;
        if (setter !== void 0) {
          setter.call(receiver, value2);
        }
      }
      return value2;
    };
    var slicedToArray = /* @__PURE__ */ function() {
      function sliceIterator(arr, i) {
        var _arr = [];
        var _n = true;
        var _d = false;
        var _e = void 0;
        try {
          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
          }
        } catch (err) {
          _d = true;
          _e = err;
        } finally {
          try {
            if (!_n && _i["return"]) _i["return"]();
          } finally {
            if (_d) throw _e;
          }
        }
        return _arr;
      }
      return function(arr, i) {
        if (Array.isArray(arr)) {
          return arr;
        } else if (Symbol.iterator in Object(arr)) {
          return sliceIterator(arr, i);
        } else {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }
      };
    }();
    var slicedToArrayLoose = function(arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if (Symbol.iterator in Object(arr)) {
        var _arr = [];
        for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done; ) {
          _arr.push(_step.value);
          if (i && _arr.length === i) break;
        }
        return _arr;
      } else {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }
    };
    var taggedTemplateLiteral = function(strings, raw) {
      return Object.freeze(Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw)
        }
      }));
    };
    var taggedTemplateLiteralLoose = function(strings, raw) {
      strings.raw = raw;
      return strings;
    };
    var temporalRef = function(val, name, undef) {
      if (val === undef) {
        throw new ReferenceError(name + " is not defined - temporal dead zone");
      } else {
        return val;
      }
    };
    var temporalUndefined = {};
    var toArray = function(arr) {
      return Array.isArray(arr) ? arr : Array.from(arr);
    };
    var toConsumableArray = function(arr) {
      if (Array.isArray(arr)) {
        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];
        return arr2;
      } else {
        return Array.from(arr);
      }
    };
    var babelHelpers$1 = Object.freeze({
      jsx,
      asyncToGenerator,
      classCallCheck,
      createClass,
      defineEnumerableProperties,
      defaults,
      defineProperty: defineProperty$1,
      get,
      inherits,
      interopRequireDefault,
      interopRequireWildcard,
      newArrowCheck,
      objectDestructuringEmpty,
      objectWithoutProperties,
      possibleConstructorReturn,
      selfGlobal,
      set,
      slicedToArray,
      slicedToArrayLoose,
      taggedTemplateLiteral,
      taggedTemplateLiteralLoose,
      temporalRef,
      temporalUndefined,
      toArray,
      toConsumableArray,
      typeof: _typeof,
      extends: _extends,
      instanceof: _instanceof
    });
    var realDefineProp = function() {
      var sentinel = function sentinel2() {
      };
      try {
        Object.defineProperty(sentinel, "a", {
          get: function get2() {
            return 1;
          }
        });
        Object.defineProperty(sentinel, "prototype", { writable: false });
        return sentinel.a === 1 && sentinel.prototype instanceof Object;
      } catch (e) {
        return false;
      }
    }();
    var es3 = !realDefineProp && !Object.prototype.__defineGetter__;
    var hop = Object.prototype.hasOwnProperty;
    var defineProperty2 = realDefineProp ? Object.defineProperty : function(obj, name, desc) {
      if ("get" in desc && obj.__defineGetter__) obj.__defineGetter__(name, desc.get);
      else if (!hop.call(obj, name) || "value" in desc) obj[name] = desc.value;
    };
    var arrIndexOf = Array.prototype.indexOf || function(search) {
      var t = this;
      if (!t.length) return -1;
      for (var i = arguments[1] || 0, max2 = t.length; i < max2; i++) {
        if (t[i] === search) return i;
      }
      return -1;
    };
    var objCreate = Object.create || function(proto, props) {
      var obj = void 0;
      function F() {
      }
      F.prototype = proto;
      obj = new F();
      for (var k in props) {
        if (hop.call(props, k)) defineProperty2(obj, k, props[k]);
      }
      return obj;
    };
    var arrSlice = Array.prototype.slice;
    var arrConcat = Array.prototype.concat;
    var arrPush = Array.prototype.push;
    var arrJoin = Array.prototype.join;
    var arrShift = Array.prototype.shift;
    var fnBind = Function.prototype.bind || function(thisObj) {
      var fn = this, args = arrSlice.call(arguments, 1);
      if (fn.length === 1) {
        return function() {
          return fn.apply(thisObj, arrConcat.call(args, arrSlice.call(arguments)));
        };
      }
      return function() {
        return fn.apply(thisObj, arrConcat.call(args, arrSlice.call(arguments)));
      };
    };
    var internals = objCreate(null);
    var secret = Math.random();
    function log10Floor(n) {
      if (typeof Math.log10 === "function") return Math.floor(Math.log10(n));
      var x = Math.round(Math.log(n) * Math.LOG10E);
      return x - (Number("1e" + x) > n);
    }
    function Record(obj) {
      for (var k in obj) {
        if (obj instanceof Record || hop.call(obj, k)) defineProperty2(this, k, { value: obj[k], enumerable: true, writable: true, configurable: true });
      }
    }
    Record.prototype = objCreate(null);
    function List() {
      defineProperty2(this, "length", { writable: true, value: 0 });
      if (arguments.length) arrPush.apply(this, arrSlice.call(arguments));
    }
    List.prototype = objCreate(null);
    function createRegExpRestore() {
      if (internals.disableRegExpRestore) {
        return function() {
        };
      }
      var regExpCache = {
        lastMatch: RegExp.lastMatch || "",
        leftContext: RegExp.leftContext,
        multiline: RegExp.multiline,
        input: RegExp.input
      }, has = false;
      for (var i = 1; i <= 9; i++) {
        has = (regExpCache["$" + i] = RegExp["$" + i]) || has;
      }
      return function() {
        var esc = /[.?*+^$[\]\\(){}|-]/g, lm = regExpCache.lastMatch.replace(esc, "\\$&"), reg = new List();
        if (has) {
          for (var _i = 1; _i <= 9; _i++) {
            var m = regExpCache["$" + _i];
            if (!m) lm = "()" + lm;
            else {
              m = m.replace(esc, "\\$&");
              lm = lm.replace(m, "(" + m + ")");
            }
            arrPush.call(reg, lm.slice(0, lm.indexOf("(") + 1));
            lm = lm.slice(lm.indexOf("(") + 1);
          }
        }
        var exprStr = arrJoin.call(reg, "") + lm;
        exprStr = exprStr.replace(/(\\\(|\\\)|[^()])+/g, function(match2) {
          return "[\\s\\S]{" + match2.replace("\\", "").length + "}";
        });
        var expr = new RegExp(exprStr, regExpCache.multiline ? "gm" : "g");
        expr.lastIndex = regExpCache.leftContext.length;
        expr.exec(regExpCache.input);
      };
    }
    function toObject(arg) {
      if (arg === null) throw new TypeError("Cannot convert null or undefined to object");
      if ((typeof arg === "undefined" ? "undefined" : babelHelpers$1["typeof"](arg)) === "object") return arg;
      return Object(arg);
    }
    function toNumber(arg) {
      if (typeof arg === "number") return arg;
      return Number(arg);
    }
    function toInteger(arg) {
      var number = toNumber(arg);
      if (isNaN(number)) return 0;
      if (number === 0 || number === -0 || number === Infinity || number === -Infinity) return number;
      if (number < 0) return Math.floor(Math.abs(number)) * -1;
      return Math.floor(Math.abs(number));
    }
    function toLength(arg) {
      var len = toInteger(arg);
      if (len <= 0) return 0;
      if (len === Infinity) return Math.pow(2, 53) - 1;
      return Math.min(len, Math.pow(2, 53) - 1);
    }
    function getInternalProperties(obj) {
      if (hop.call(obj, "__getInternalProperties")) return obj.__getInternalProperties(secret);
      return objCreate(null);
    }
    var extlang = "[a-z]{3}(?:-[a-z]{3}){0,2}";
    var language = "(?:[a-z]{2,3}(?:-" + extlang + ")?|[a-z]{4}|[a-z]{5,8})";
    var script = "[a-z]{4}";
    var region = "(?:[a-z]{2}|\\d{3})";
    var variant = "(?:[a-z0-9]{5,8}|\\d[a-z0-9]{3})";
    var singleton = "[0-9a-wy-z]";
    var extension2 = singleton + "(?:-[a-z0-9]{2,8})+";
    var privateuse = "x(?:-[a-z0-9]{1,8})+";
    var irregular = "(?:en-GB-oed|i-(?:ami|bnn|default|enochian|hak|klingon|lux|mingo|navajo|pwn|tao|tay|tsu)|sgn-(?:BE-FR|BE-NL|CH-DE))";
    var regular = "(?:art-lojban|cel-gaulish|no-bok|no-nyn|zh-(?:guoyu|hakka|min|min-nan|xiang))";
    var grandfathered = "(?:" + irregular + "|" + regular + ")";
    var langtag = language + "(?:-" + script + ")?(?:-" + region + ")?(?:-" + variant + ")*(?:-" + extension2 + ")*(?:-" + privateuse + ")?";
    var expBCP47Syntax = RegExp("^(?:" + langtag + "|" + privateuse + "|" + grandfathered + ")$", "i");
    var expVariantDupes = RegExp("^(?!x).*?-(" + variant + ")-(?:\\w{4,8}-(?!x-))*\\1\\b", "i");
    var expSingletonDupes = RegExp("^(?!x).*?-(" + singleton + ")-(?:\\w+-(?!x-))*\\1\\b", "i");
    var expExtSequences = RegExp("-" + extension2, "ig");
    var defaultLocale = void 0;
    function setDefaultLocale(locale) {
      defaultLocale = locale;
    }
    var redundantTags = {
      tags: {
        "art-lojban": "jbo",
        "i-ami": "ami",
        "i-bnn": "bnn",
        "i-hak": "hak",
        "i-klingon": "tlh",
        "i-lux": "lb",
        "i-navajo": "nv",
        "i-pwn": "pwn",
        "i-tao": "tao",
        "i-tay": "tay",
        "i-tsu": "tsu",
        "no-bok": "nb",
        "no-nyn": "nn",
        "sgn-BE-FR": "sfb",
        "sgn-BE-NL": "vgt",
        "sgn-CH-DE": "sgg",
        "zh-guoyu": "cmn",
        "zh-hakka": "hak",
        "zh-min-nan": "nan",
        "zh-xiang": "hsn",
        "sgn-BR": "bzs",
        "sgn-CO": "csn",
        "sgn-DE": "gsg",
        "sgn-DK": "dsl",
        "sgn-ES": "ssp",
        "sgn-FR": "fsl",
        "sgn-GB": "bfi",
        "sgn-GR": "gss",
        "sgn-IE": "isg",
        "sgn-IT": "ise",
        "sgn-JP": "jsl",
        "sgn-MX": "mfs",
        "sgn-NI": "ncs",
        "sgn-NL": "dse",
        "sgn-NO": "nsl",
        "sgn-PT": "psr",
        "sgn-SE": "swl",
        "sgn-US": "ase",
        "sgn-ZA": "sfs",
        "zh-cmn": "cmn",
        "zh-cmn-Hans": "cmn-Hans",
        "zh-cmn-Hant": "cmn-Hant",
        "zh-gan": "gan",
        "zh-wuu": "wuu",
        "zh-yue": "yue"
      },
      subtags: {
        BU: "MM",
        DD: "DE",
        FX: "FR",
        TP: "TL",
        YD: "YE",
        ZR: "CD",
        heploc: "alalc97",
        "in": "id",
        iw: "he",
        ji: "yi",
        jw: "jv",
        mo: "ro",
        ayx: "nun",
        bjd: "drl",
        ccq: "rki",
        cjr: "mom",
        cka: "cmr",
        cmk: "xch",
        drh: "khk",
        drw: "prs",
        gav: "dev",
        hrr: "jal",
        ibi: "opa",
        kgh: "kml",
        lcq: "ppr",
        mst: "mry",
        myt: "mry",
        sca: "hle",
        tie: "ras",
        tkk: "twm",
        tlw: "weo",
        tnf: "prs",
        ybd: "rki",
        yma: "lrr"
      },
      extLang: {
        aao: ["aao", "ar"],
        abh: ["abh", "ar"],
        abv: ["abv", "ar"],
        acm: ["acm", "ar"],
        acq: ["acq", "ar"],
        acw: ["acw", "ar"],
        acx: ["acx", "ar"],
        acy: ["acy", "ar"],
        adf: ["adf", "ar"],
        ads: ["ads", "sgn"],
        aeb: ["aeb", "ar"],
        aec: ["aec", "ar"],
        aed: ["aed", "sgn"],
        aen: ["aen", "sgn"],
        afb: ["afb", "ar"],
        afg: ["afg", "sgn"],
        ajp: ["ajp", "ar"],
        apc: ["apc", "ar"],
        apd: ["apd", "ar"],
        arb: ["arb", "ar"],
        arq: ["arq", "ar"],
        ars: ["ars", "ar"],
        ary: ["ary", "ar"],
        arz: ["arz", "ar"],
        ase: ["ase", "sgn"],
        asf: ["asf", "sgn"],
        asp: ["asp", "sgn"],
        asq: ["asq", "sgn"],
        asw: ["asw", "sgn"],
        auz: ["auz", "ar"],
        avl: ["avl", "ar"],
        ayh: ["ayh", "ar"],
        ayl: ["ayl", "ar"],
        ayn: ["ayn", "ar"],
        ayp: ["ayp", "ar"],
        bbz: ["bbz", "ar"],
        bfi: ["bfi", "sgn"],
        bfk: ["bfk", "sgn"],
        bjn: ["bjn", "ms"],
        bog: ["bog", "sgn"],
        bqn: ["bqn", "sgn"],
        bqy: ["bqy", "sgn"],
        btj: ["btj", "ms"],
        bve: ["bve", "ms"],
        bvl: ["bvl", "sgn"],
        bvu: ["bvu", "ms"],
        bzs: ["bzs", "sgn"],
        cdo: ["cdo", "zh"],
        cds: ["cds", "sgn"],
        cjy: ["cjy", "zh"],
        cmn: ["cmn", "zh"],
        coa: ["coa", "ms"],
        cpx: ["cpx", "zh"],
        csc: ["csc", "sgn"],
        csd: ["csd", "sgn"],
        cse: ["cse", "sgn"],
        csf: ["csf", "sgn"],
        csg: ["csg", "sgn"],
        csl: ["csl", "sgn"],
        csn: ["csn", "sgn"],
        csq: ["csq", "sgn"],
        csr: ["csr", "sgn"],
        czh: ["czh", "zh"],
        czo: ["czo", "zh"],
        doq: ["doq", "sgn"],
        dse: ["dse", "sgn"],
        dsl: ["dsl", "sgn"],
        dup: ["dup", "ms"],
        ecs: ["ecs", "sgn"],
        esl: ["esl", "sgn"],
        esn: ["esn", "sgn"],
        eso: ["eso", "sgn"],
        eth: ["eth", "sgn"],
        fcs: ["fcs", "sgn"],
        fse: ["fse", "sgn"],
        fsl: ["fsl", "sgn"],
        fss: ["fss", "sgn"],
        gan: ["gan", "zh"],
        gds: ["gds", "sgn"],
        gom: ["gom", "kok"],
        gse: ["gse", "sgn"],
        gsg: ["gsg", "sgn"],
        gsm: ["gsm", "sgn"],
        gss: ["gss", "sgn"],
        gus: ["gus", "sgn"],
        hab: ["hab", "sgn"],
        haf: ["haf", "sgn"],
        hak: ["hak", "zh"],
        hds: ["hds", "sgn"],
        hji: ["hji", "ms"],
        hks: ["hks", "sgn"],
        hos: ["hos", "sgn"],
        hps: ["hps", "sgn"],
        hsh: ["hsh", "sgn"],
        hsl: ["hsl", "sgn"],
        hsn: ["hsn", "zh"],
        icl: ["icl", "sgn"],
        ils: ["ils", "sgn"],
        inl: ["inl", "sgn"],
        ins: ["ins", "sgn"],
        ise: ["ise", "sgn"],
        isg: ["isg", "sgn"],
        isr: ["isr", "sgn"],
        jak: ["jak", "ms"],
        jax: ["jax", "ms"],
        jcs: ["jcs", "sgn"],
        jhs: ["jhs", "sgn"],
        jls: ["jls", "sgn"],
        jos: ["jos", "sgn"],
        jsl: ["jsl", "sgn"],
        jus: ["jus", "sgn"],
        kgi: ["kgi", "sgn"],
        knn: ["knn", "kok"],
        kvb: ["kvb", "ms"],
        kvk: ["kvk", "sgn"],
        kvr: ["kvr", "ms"],
        kxd: ["kxd", "ms"],
        lbs: ["lbs", "sgn"],
        lce: ["lce", "ms"],
        lcf: ["lcf", "ms"],
        liw: ["liw", "ms"],
        lls: ["lls", "sgn"],
        lsg: ["lsg", "sgn"],
        lsl: ["lsl", "sgn"],
        lso: ["lso", "sgn"],
        lsp: ["lsp", "sgn"],
        lst: ["lst", "sgn"],
        lsy: ["lsy", "sgn"],
        ltg: ["ltg", "lv"],
        lvs: ["lvs", "lv"],
        lzh: ["lzh", "zh"],
        max: ["max", "ms"],
        mdl: ["mdl", "sgn"],
        meo: ["meo", "ms"],
        mfa: ["mfa", "ms"],
        mfb: ["mfb", "ms"],
        mfs: ["mfs", "sgn"],
        min: ["min", "ms"],
        mnp: ["mnp", "zh"],
        mqg: ["mqg", "ms"],
        mre: ["mre", "sgn"],
        msd: ["msd", "sgn"],
        msi: ["msi", "ms"],
        msr: ["msr", "sgn"],
        mui: ["mui", "ms"],
        mzc: ["mzc", "sgn"],
        mzg: ["mzg", "sgn"],
        mzy: ["mzy", "sgn"],
        nan: ["nan", "zh"],
        nbs: ["nbs", "sgn"],
        ncs: ["ncs", "sgn"],
        nsi: ["nsi", "sgn"],
        nsl: ["nsl", "sgn"],
        nsp: ["nsp", "sgn"],
        nsr: ["nsr", "sgn"],
        nzs: ["nzs", "sgn"],
        okl: ["okl", "sgn"],
        orn: ["orn", "ms"],
        ors: ["ors", "ms"],
        pel: ["pel", "ms"],
        pga: ["pga", "ar"],
        pks: ["pks", "sgn"],
        prl: ["prl", "sgn"],
        prz: ["prz", "sgn"],
        psc: ["psc", "sgn"],
        psd: ["psd", "sgn"],
        pse: ["pse", "ms"],
        psg: ["psg", "sgn"],
        psl: ["psl", "sgn"],
        pso: ["pso", "sgn"],
        psp: ["psp", "sgn"],
        psr: ["psr", "sgn"],
        pys: ["pys", "sgn"],
        rms: ["rms", "sgn"],
        rsi: ["rsi", "sgn"],
        rsl: ["rsl", "sgn"],
        sdl: ["sdl", "sgn"],
        sfb: ["sfb", "sgn"],
        sfs: ["sfs", "sgn"],
        sgg: ["sgg", "sgn"],
        sgx: ["sgx", "sgn"],
        shu: ["shu", "ar"],
        slf: ["slf", "sgn"],
        sls: ["sls", "sgn"],
        sqk: ["sqk", "sgn"],
        sqs: ["sqs", "sgn"],
        ssh: ["ssh", "ar"],
        ssp: ["ssp", "sgn"],
        ssr: ["ssr", "sgn"],
        svk: ["svk", "sgn"],
        swc: ["swc", "sw"],
        swh: ["swh", "sw"],
        swl: ["swl", "sgn"],
        syy: ["syy", "sgn"],
        tmw: ["tmw", "ms"],
        tse: ["tse", "sgn"],
        tsm: ["tsm", "sgn"],
        tsq: ["tsq", "sgn"],
        tss: ["tss", "sgn"],
        tsy: ["tsy", "sgn"],
        tza: ["tza", "sgn"],
        ugn: ["ugn", "sgn"],
        ugy: ["ugy", "sgn"],
        ukl: ["ukl", "sgn"],
        uks: ["uks", "sgn"],
        urk: ["urk", "ms"],
        uzn: ["uzn", "uz"],
        uzs: ["uzs", "uz"],
        vgt: ["vgt", "sgn"],
        vkk: ["vkk", "ms"],
        vkt: ["vkt", "ms"],
        vsi: ["vsi", "sgn"],
        vsl: ["vsl", "sgn"],
        vsv: ["vsv", "sgn"],
        wuu: ["wuu", "zh"],
        xki: ["xki", "sgn"],
        xml: ["xml", "sgn"],
        xmm: ["xmm", "ms"],
        xms: ["xms", "sgn"],
        yds: ["yds", "sgn"],
        ysl: ["ysl", "sgn"],
        yue: ["yue", "zh"],
        zib: ["zib", "sgn"],
        zlm: ["zlm", "ms"],
        zmi: ["zmi", "ms"],
        zsl: ["zsl", "sgn"],
        zsm: ["zsm", "ms"]
      }
    };
    function toLatinUpperCase(str) {
      var i = str.length;
      while (i--) {
        var ch = str.charAt(i);
        if (ch >= "a" && ch <= "z") str = str.slice(0, i) + ch.toUpperCase() + str.slice(i + 1);
      }
      return str;
    }
    function IsStructurallyValidLanguageTag(locale) {
      if (!expBCP47Syntax.test(locale)) return false;
      if (expVariantDupes.test(locale)) return false;
      if (expSingletonDupes.test(locale)) return false;
      return true;
    }
    function CanonicalizeLanguageTag(locale) {
      var match2 = void 0, parts = void 0;
      locale = locale.toLowerCase();
      parts = locale.split("-");
      for (var i = 1, max2 = parts.length; i < max2; i++) {
        if (parts[i].length === 2) parts[i] = parts[i].toUpperCase();
        else if (parts[i].length === 4) parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].slice(1);
        else if (parts[i].length === 1 && parts[i] !== "x") break;
      }
      locale = arrJoin.call(parts, "-");
      if ((match2 = locale.match(expExtSequences)) && match2.length > 1) {
        match2.sort();
        locale = locale.replace(RegExp("(?:" + expExtSequences.source + ")+", "i"), arrJoin.call(match2, ""));
      }
      if (hop.call(redundantTags.tags, locale)) locale = redundantTags.tags[locale];
      parts = locale.split("-");
      for (var _i = 1, _max = parts.length; _i < _max; _i++) {
        if (hop.call(redundantTags.subtags, parts[_i])) parts[_i] = redundantTags.subtags[parts[_i]];
        else if (hop.call(redundantTags.extLang, parts[_i])) {
          parts[_i] = redundantTags.extLang[parts[_i]][0];
          if (_i === 1 && redundantTags.extLang[parts[1]][1] === parts[0]) {
            parts = arrSlice.call(parts, _i++);
            _max -= 1;
          }
        }
      }
      return arrJoin.call(parts, "-");
    }
    function DefaultLocale() {
      return defaultLocale;
    }
    var expCurrencyCode = /^[A-Z]{3}$/;
    function IsWellFormedCurrencyCode2(currency) {
      var c = String(currency);
      var normalized = toLatinUpperCase(c);
      if (expCurrencyCode.test(normalized) === false) return false;
      return true;
    }
    var expUnicodeExSeq = /-u(?:-[0-9a-z]{2,8})+/gi;
    function CanonicalizeLocaleList2(locales) {
      if (locales === void 0) return new List();
      var seen = new List();
      locales = typeof locales === "string" ? [locales] : locales;
      var O = toObject(locales);
      var len = toLength(O.length);
      var k = 0;
      while (k < len) {
        var Pk = String(k);
        var kPresent = Pk in O;
        if (kPresent) {
          var kValue = O[Pk];
          if (kValue === null || typeof kValue !== "string" && (typeof kValue === "undefined" ? "undefined" : babelHelpers$1["typeof"](kValue)) !== "object") throw new TypeError("String or Object type expected");
          var tag2 = String(kValue);
          if (!IsStructurallyValidLanguageTag(tag2)) throw new RangeError("'" + tag2 + "' is not a structurally valid language tag");
          tag2 = CanonicalizeLanguageTag(tag2);
          if (arrIndexOf.call(seen, tag2) === -1) arrPush.call(seen, tag2);
        }
        k++;
      }
      return seen;
    }
    function BestAvailableLocale2(availableLocales, locale) {
      var candidate = locale;
      while (candidate) {
        if (arrIndexOf.call(availableLocales, candidate) > -1) return candidate;
        var pos = candidate.lastIndexOf("-");
        if (pos < 0) return;
        if (pos >= 2 && candidate.charAt(pos - 2) === "-") pos -= 2;
        candidate = candidate.substring(0, pos);
      }
    }
    function LookupMatcher2(availableLocales, requestedLocales) {
      var i = 0;
      var len = requestedLocales.length;
      var availableLocale = void 0;
      var locale = void 0, noExtensionsLocale = void 0;
      while (i < len && !availableLocale) {
        locale = requestedLocales[i];
        noExtensionsLocale = String(locale).replace(expUnicodeExSeq, "");
        availableLocale = BestAvailableLocale2(availableLocales, noExtensionsLocale);
        i++;
      }
      var result = new Record();
      if (availableLocale !== void 0) {
        result["[[locale]]"] = availableLocale;
        if (String(locale) !== String(noExtensionsLocale)) {
          var extension3 = locale.match(expUnicodeExSeq)[0];
          var extensionIndex = locale.indexOf("-u-");
          result["[[extension]]"] = extension3;
          result["[[extensionIndex]]"] = extensionIndex;
        }
      } else
        result["[[locale]]"] = DefaultLocale();
      return result;
    }
    function BestFitMatcher2(availableLocales, requestedLocales) {
      return LookupMatcher2(availableLocales, requestedLocales);
    }
    function ResolveLocale2(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData) {
      if (availableLocales.length === 0) {
        throw new ReferenceError("No locale data has been provided for this object yet.");
      }
      var matcher = options["[[localeMatcher]]"];
      var r = void 0;
      if (matcher === "lookup")
        r = LookupMatcher2(availableLocales, requestedLocales);
      else
        r = BestFitMatcher2(availableLocales, requestedLocales);
      var foundLocale = r["[[locale]]"];
      var extensionSubtags = void 0, extensionSubtagsLength = void 0;
      if (hop.call(r, "[[extension]]")) {
        var extension3 = r["[[extension]]"];
        var split = String.prototype.split;
        extensionSubtags = split.call(extension3, "-");
        extensionSubtagsLength = extensionSubtags.length;
      }
      var result = new Record();
      result["[[dataLocale]]"] = foundLocale;
      var supportedExtension = "-u";
      var i = 0;
      var len = relevantExtensionKeys.length;
      while (i < len) {
        var key = relevantExtensionKeys[i];
        var foundLocaleData = localeData[foundLocale];
        var keyLocaleData = foundLocaleData[key];
        var value2 = keyLocaleData["0"];
        var supportedExtensionAddition = "";
        var indexOf = arrIndexOf;
        if (extensionSubtags !== void 0) {
          var keyPos = indexOf.call(extensionSubtags, key);
          if (keyPos !== -1) {
            if (keyPos + 1 < extensionSubtagsLength && extensionSubtags[keyPos + 1].length > 2) {
              var requestedValue = extensionSubtags[keyPos + 1];
              var valuePos = indexOf.call(keyLocaleData, requestedValue);
              if (valuePos !== -1) {
                value2 = requestedValue, // ii. Let supportedExtensionAddition be the
                //     concatenation of "-", key, "-", and value.
                supportedExtensionAddition = "-" + key + "-" + value2;
              }
            } else {
              var _valuePos = indexOf(keyLocaleData, "true");
              if (_valuePos !== -1)
                value2 = "true";
            }
          }
        }
        if (hop.call(options, "[[" + key + "]]")) {
          var optionsValue = options["[[" + key + "]]"];
          if (indexOf.call(keyLocaleData, optionsValue) !== -1) {
            if (optionsValue !== value2) {
              value2 = optionsValue;
              supportedExtensionAddition = "";
            }
          }
        }
        result["[[" + key + "]]"] = value2;
        supportedExtension += supportedExtensionAddition;
        i++;
      }
      if (supportedExtension.length > 2) {
        var privateIndex = foundLocale.indexOf("-x-");
        if (privateIndex === -1) {
          foundLocale = foundLocale + supportedExtension;
        } else {
          var preExtension = foundLocale.substring(0, privateIndex);
          var postExtension = foundLocale.substring(privateIndex);
          foundLocale = preExtension + supportedExtension + postExtension;
        }
        foundLocale = CanonicalizeLanguageTag(foundLocale);
      }
      result["[[locale]]"] = foundLocale;
      return result;
    }
    function LookupSupportedLocales2(availableLocales, requestedLocales) {
      var len = requestedLocales.length;
      var subset = new List();
      var k = 0;
      while (k < len) {
        var locale = requestedLocales[k];
        var noExtensionsLocale = String(locale).replace(expUnicodeExSeq, "");
        var availableLocale = BestAvailableLocale2(availableLocales, noExtensionsLocale);
        if (availableLocale !== void 0) arrPush.call(subset, locale);
        k++;
      }
      var subsetArray = arrSlice.call(subset);
      return subsetArray;
    }
    function BestFitSupportedLocales(availableLocales, requestedLocales) {
      return LookupSupportedLocales2(availableLocales, requestedLocales);
    }
    function SupportedLocales2(availableLocales, requestedLocales, options) {
      var matcher = void 0, subset = void 0;
      if (options !== void 0) {
        options = new Record(toObject(options));
        matcher = options.localeMatcher;
        if (matcher !== void 0) {
          matcher = String(matcher);
          if (matcher !== "lookup" && matcher !== "best fit") throw new RangeError('matcher should be "lookup" or "best fit"');
        }
      }
      if (matcher === void 0 || matcher === "best fit")
        subset = BestFitSupportedLocales(availableLocales, requestedLocales);
      else
        subset = LookupSupportedLocales2(availableLocales, requestedLocales);
      for (var P2 in subset) {
        if (!hop.call(subset, P2)) continue;
        defineProperty2(subset, P2, {
          writable: false,
          configurable: false,
          value: subset[P2]
        });
      }
      defineProperty2(subset, "length", { writable: false });
      return subset;
    }
    function GetOption2(options, property, type, values, fallback) {
      var value2 = options[property];
      if (value2 !== void 0) {
        value2 = type === "boolean" ? Boolean(value2) : type === "string" ? String(value2) : value2;
        if (values !== void 0) {
          if (arrIndexOf.call(values, value2) === -1) throw new RangeError("'" + value2 + "' is not an allowed value for `" + property + "`");
        }
        return value2;
      }
      return fallback;
    }
    function GetNumberOption2(options, property, minimum, maximum, fallback) {
      var value2 = options[property];
      if (value2 !== void 0) {
        value2 = Number(value2);
        if (isNaN(value2) || value2 < minimum || value2 > maximum) throw new RangeError("Value is not a number or outside accepted range");
        return Math.floor(value2);
      }
      return fallback;
    }
    var Intl2 = {};
    function getCanonicalLocales(locales) {
      var ll = CanonicalizeLocaleList2(locales);
      {
        var result = [];
        var len = ll.length;
        var k = 0;
        while (k < len) {
          result[k] = ll[k];
          k++;
        }
        return result;
      }
    }
    Object.defineProperty(Intl2, "getCanonicalLocales", {
      enumerable: false,
      configurable: true,
      writable: true,
      value: getCanonicalLocales
    });
    var currencyMinorUnits = {
      BHD: 3,
      BYR: 0,
      XOF: 0,
      BIF: 0,
      XAF: 0,
      CLF: 4,
      CLP: 0,
      KMF: 0,
      DJF: 0,
      XPF: 0,
      GNF: 0,
      ISK: 0,
      IQD: 3,
      JPY: 0,
      JOD: 3,
      KRW: 0,
      KWD: 3,
      LYD: 3,
      OMR: 3,
      PYG: 0,
      RWF: 0,
      TND: 3,
      UGX: 0,
      UYI: 0,
      VUV: 0,
      VND: 0
    };
    function NumberFormatConstructor() {
      var locales = arguments[0];
      var options = arguments[1];
      if (!this || this === Intl2) {
        return new Intl2.NumberFormat(locales, options);
      }
      return InitializeNumberFormat2(toObject(this), locales, options);
    }
    defineProperty2(Intl2, "NumberFormat", {
      configurable: true,
      writable: true,
      value: NumberFormatConstructor
    });
    defineProperty2(Intl2.NumberFormat, "prototype", {
      writable: false
    });
    function InitializeNumberFormat2(numberFormat, locales, options) {
      var internal = getInternalProperties(numberFormat);
      var regexpRestore = createRegExpRestore();
      if (internal["[[initializedIntlObject]]"] === true) throw new TypeError("`this` object has already been initialized as an Intl object");
      defineProperty2(numberFormat, "__getInternalProperties", {
        value: function value2() {
          if (arguments[0] === secret) return internal;
        }
      });
      internal["[[initializedIntlObject]]"] = true;
      var requestedLocales = CanonicalizeLocaleList2(locales);
      if (options === void 0)
        options = {};
      else
        options = toObject(options);
      var opt = new Record(), matcher = GetOption2(options, "localeMatcher", "string", new List("lookup", "best fit"), "best fit");
      opt["[[localeMatcher]]"] = matcher;
      var localeData = internals.NumberFormat["[[localeData]]"];
      var r = ResolveLocale2(internals.NumberFormat["[[availableLocales]]"], requestedLocales, opt, internals.NumberFormat["[[relevantExtensionKeys]]"], localeData);
      internal["[[locale]]"] = r["[[locale]]"];
      internal["[[numberingSystem]]"] = r["[[nu]]"];
      internal["[[dataLocale]]"] = r["[[dataLocale]]"];
      var dataLocale = r["[[dataLocale]]"];
      var s = GetOption2(options, "style", "string", new List("decimal", "percent", "currency"), "decimal");
      internal["[[style]]"] = s;
      var c = GetOption2(options, "currency", "string");
      if (c !== void 0 && !IsWellFormedCurrencyCode2(c)) throw new RangeError("'" + c + "' is not a valid currency code");
      if (s === "currency" && c === void 0) throw new TypeError("Currency code is required when style is currency");
      var cDigits = void 0;
      if (s === "currency") {
        c = c.toUpperCase();
        internal["[[currency]]"] = c;
        cDigits = CurrencyDigits2(c);
      }
      var cd = GetOption2(options, "currencyDisplay", "string", new List("code", "symbol", "name"), "symbol");
      if (s === "currency") internal["[[currencyDisplay]]"] = cd;
      var mnid = GetNumberOption2(options, "minimumIntegerDigits", 1, 21, 1);
      internal["[[minimumIntegerDigits]]"] = mnid;
      var mnfdDefault = s === "currency" ? cDigits : 0;
      var mnfd = GetNumberOption2(options, "minimumFractionDigits", 0, 20, mnfdDefault);
      internal["[[minimumFractionDigits]]"] = mnfd;
      var mxfdDefault = s === "currency" ? Math.max(mnfd, cDigits) : s === "percent" ? Math.max(mnfd, 0) : Math.max(mnfd, 3);
      var mxfd = GetNumberOption2(options, "maximumFractionDigits", mnfd, 20, mxfdDefault);
      internal["[[maximumFractionDigits]]"] = mxfd;
      var mnsd = options.minimumSignificantDigits;
      var mxsd = options.maximumSignificantDigits;
      if (mnsd !== void 0 || mxsd !== void 0) {
        mnsd = GetNumberOption2(options, "minimumSignificantDigits", 1, 21, 1);
        mxsd = GetNumberOption2(options, "maximumSignificantDigits", mnsd, 21, 21);
        internal["[[minimumSignificantDigits]]"] = mnsd;
        internal["[[maximumSignificantDigits]]"] = mxsd;
      }
      var g = GetOption2(options, "useGrouping", "boolean", void 0, true);
      internal["[[useGrouping]]"] = g;
      var dataLocaleData = localeData[dataLocale];
      var patterns = dataLocaleData.patterns;
      var stylePatterns = patterns[s];
      internal["[[positivePattern]]"] = stylePatterns.positivePattern;
      internal["[[negativePattern]]"] = stylePatterns.negativePattern;
      internal["[[boundFormat]]"] = void 0;
      internal["[[initializedNumberFormat]]"] = true;
      if (es3) numberFormat.format = GetFormatNumber.call(numberFormat);
      regexpRestore();
      return numberFormat;
    }
    function CurrencyDigits2(currency) {
      return currencyMinorUnits[currency] !== void 0 ? currencyMinorUnits[currency] : 2;
    }
    internals.NumberFormat = {
      "[[availableLocales]]": [],
      "[[relevantExtensionKeys]]": ["nu"],
      "[[localeData]]": {}
    };
    defineProperty2(Intl2.NumberFormat, "supportedLocalesOf", {
      configurable: true,
      writable: true,
      value: fnBind.call(function(locales) {
        if (!hop.call(this, "[[availableLocales]]")) throw new TypeError("supportedLocalesOf() is not a constructor");
        var regexpRestore = createRegExpRestore(), options = arguments[1], availableLocales = this["[[availableLocales]]"], requestedLocales = CanonicalizeLocaleList2(locales);
        regexpRestore();
        return SupportedLocales2(availableLocales, requestedLocales, options);
      }, internals.NumberFormat)
    });
    defineProperty2(Intl2.NumberFormat.prototype, "format", {
      configurable: true,
      get: GetFormatNumber
    });
    function GetFormatNumber() {
      var internal = this !== null && babelHelpers$1["typeof"](this) === "object" && getInternalProperties(this);
      if (!internal || !internal["[[initializedNumberFormat]]"]) throw new TypeError("`this` value for format() is not an initialized Intl.NumberFormat object.");
      if (internal["[[boundFormat]]"] === void 0) {
        var F = function F2(value2) {
          return FormatNumber(
            this,
            /* x = */
            Number(value2)
          );
        };
        var bf = fnBind.call(F, this);
        internal["[[boundFormat]]"] = bf;
      }
      return internal["[[boundFormat]]"];
    }
    function formatToParts2() {
      var value2 = arguments.length <= 0 || arguments[0] === void 0 ? void 0 : arguments[0];
      var internal = this !== null && babelHelpers$1["typeof"](this) === "object" && getInternalProperties(this);
      if (!internal || !internal["[[initializedNumberFormat]]"]) throw new TypeError("`this` value for formatToParts() is not an initialized Intl.NumberFormat object.");
      var x = Number(value2);
      return FormatNumberToParts(this, x);
    }
    Object.defineProperty(Intl2.NumberFormat.prototype, "formatToParts", {
      configurable: true,
      enumerable: false,
      writable: true,
      value: formatToParts2
    });
    function FormatNumberToParts(numberFormat, x) {
      var parts = PartitionNumberPattern2(numberFormat, x);
      var result = [];
      var n = 0;
      for (var i = 0; parts.length > i; i++) {
        var part = parts[i];
        var O = {};
        O.type = part["[[type]]"];
        O.value = part["[[value]]"];
        result[n] = O;
        n += 1;
      }
      return result;
    }
    function PartitionNumberPattern2(numberFormat, x) {
      var internal = getInternalProperties(numberFormat), locale = internal["[[dataLocale]]"], nums = internal["[[numberingSystem]]"], data2 = internals.NumberFormat["[[localeData]]"][locale], ild = data2.symbols[nums] || data2.symbols.latn, pattern = void 0;
      if (!isNaN(x) && x < 0) {
        x = -x;
        pattern = internal["[[negativePattern]]"];
      } else {
        pattern = internal["[[positivePattern]]"];
      }
      var result = new List();
      var beginIndex = pattern.indexOf("{", 0);
      var endIndex = 0;
      var nextIndex = 0;
      var length = pattern.length;
      while (beginIndex > -1 && beginIndex < length) {
        endIndex = pattern.indexOf("}", beginIndex);
        if (endIndex === -1) throw new Error();
        if (beginIndex > nextIndex) {
          var literal = pattern.substring(nextIndex, beginIndex);
          arrPush.call(result, { "[[type]]": "literal", "[[value]]": literal });
        }
        var p = pattern.substring(beginIndex + 1, endIndex);
        if (p === "number") {
          if (isNaN(x)) {
            var n = ild.nan;
            arrPush.call(result, { "[[type]]": "nan", "[[value]]": n });
          } else if (!isFinite(x)) {
            var _n = ild.infinity;
            arrPush.call(result, { "[[type]]": "infinity", "[[value]]": _n });
          } else {
            if (internal["[[style]]"] === "percent" && isFinite(x)) x *= 100;
            var _n2 = void 0;
            if (hop.call(internal, "[[minimumSignificantDigits]]") && hop.call(internal, "[[maximumSignificantDigits]]")) {
              _n2 = ToRawPrecision2(x, internal["[[minimumSignificantDigits]]"], internal["[[maximumSignificantDigits]]"]);
            } else {
              _n2 = ToRawFixed2(x, internal["[[minimumIntegerDigits]]"], internal["[[minimumFractionDigits]]"], internal["[[maximumFractionDigits]]"]);
            }
            if (numSys[nums]) {
              (function() {
                var digits = numSys[nums];
                _n2 = String(_n2).replace(/\d/g, function(digit) {
                  return digits[digit];
                });
              })();
            } else _n2 = String(_n2);
            var integer2 = void 0;
            var fraction = void 0;
            var decimalSepIndex = _n2.indexOf(".", 0);
            if (decimalSepIndex > 0) {
              integer2 = _n2.substring(0, decimalSepIndex);
              fraction = _n2.substring(decimalSepIndex + 1, decimalSepIndex.length);
            } else {
              integer2 = _n2;
              fraction = void 0;
            }
            if (internal["[[useGrouping]]"] === true) {
              var groupSepSymbol = ild.group;
              var groups = [];
              var pgSize = data2.patterns.primaryGroupSize || 3;
              var sgSize = data2.patterns.secondaryGroupSize || pgSize;
              if (integer2.length > pgSize) {
                var end = integer2.length - pgSize;
                var idx = end % sgSize;
                var start = integer2.slice(0, idx);
                if (start.length) arrPush.call(groups, start);
                while (idx < end) {
                  arrPush.call(groups, integer2.slice(idx, idx + sgSize));
                  idx += sgSize;
                }
                arrPush.call(groups, integer2.slice(end));
              } else {
                arrPush.call(groups, integer2);
              }
              if (groups.length === 0) throw new Error();
              while (groups.length) {
                var integerGroup = arrShift.call(groups);
                arrPush.call(result, { "[[type]]": "integer", "[[value]]": integerGroup });
                if (groups.length) {
                  arrPush.call(result, { "[[type]]": "group", "[[value]]": groupSepSymbol });
                }
              }
            } else {
              arrPush.call(result, { "[[type]]": "integer", "[[value]]": integer2 });
            }
            if (fraction !== void 0) {
              var decimalSepSymbol = ild.decimal;
              arrPush.call(result, { "[[type]]": "decimal", "[[value]]": decimalSepSymbol });
              arrPush.call(result, { "[[type]]": "fraction", "[[value]]": fraction });
            }
          }
        } else if (p === "plusSign") {
          var plusSignSymbol = ild.plusSign;
          arrPush.call(result, { "[[type]]": "plusSign", "[[value]]": plusSignSymbol });
        } else if (p === "minusSign") {
          var minusSignSymbol = ild.minusSign;
          arrPush.call(result, { "[[type]]": "minusSign", "[[value]]": minusSignSymbol });
        } else if (p === "percentSign" && internal["[[style]]"] === "percent") {
          var percentSignSymbol = ild.percentSign;
          arrPush.call(result, { "[[type]]": "literal", "[[value]]": percentSignSymbol });
        } else if (p === "currency" && internal["[[style]]"] === "currency") {
          var currency = internal["[[currency]]"];
          var cd = void 0;
          if (internal["[[currencyDisplay]]"] === "code") {
            cd = currency;
          } else if (internal["[[currencyDisplay]]"] === "symbol") {
            cd = data2.currencies[currency] || currency;
          } else if (internal["[[currencyDisplay]]"] === "name") {
            cd = currency;
          }
          arrPush.call(result, { "[[type]]": "currency", "[[value]]": cd });
        } else {
          var _literal = pattern.substring(beginIndex, endIndex);
          arrPush.call(result, { "[[type]]": "literal", "[[value]]": _literal });
        }
        nextIndex = endIndex + 1;
        beginIndex = pattern.indexOf("{", nextIndex);
      }
      if (nextIndex < length) {
        var _literal2 = pattern.substring(nextIndex, length);
        arrPush.call(result, { "[[type]]": "literal", "[[value]]": _literal2 });
      }
      return result;
    }
    function FormatNumber(numberFormat, x) {
      var parts = PartitionNumberPattern2(numberFormat, x);
      var result = "";
      for (var i = 0; parts.length > i; i++) {
        var part = parts[i];
        result += part["[[value]]"];
      }
      return result;
    }
    function ToRawPrecision2(x, minPrecision, maxPrecision) {
      var p = maxPrecision;
      var m = void 0, e = void 0;
      if (x === 0) {
        m = arrJoin.call(Array(p + 1), "0");
        e = 0;
      } else {
        e = log10Floor(Math.abs(x));
        var f = Math.round(Math.exp(Math.abs(e - p + 1) * Math.LN10));
        m = String(Math.round(e - p + 1 < 0 ? x * f : x / f));
      }
      if (e >= p)
        return m + arrJoin.call(Array(e - p + 1 + 1), "0");
      else if (e === p - 1)
        return m;
      else if (e >= 0)
        m = m.slice(0, e + 1) + "." + m.slice(e + 1);
      else if (e < 0)
        m = "0." + arrJoin.call(Array(-(e + 1) + 1), "0") + m;
      if (m.indexOf(".") >= 0 && maxPrecision > minPrecision) {
        var cut = maxPrecision - minPrecision;
        while (cut > 0 && m.charAt(m.length - 1) === "0") {
          m = m.slice(0, -1);
          cut--;
        }
        if (m.charAt(m.length - 1) === ".")
          m = m.slice(0, -1);
      }
      return m;
    }
    function ToRawFixed2(x, minInteger, minFraction, maxFraction) {
      var f = maxFraction;
      var n = Math.pow(10, f) * x;
      var m = n === 0 ? "0" : n.toFixed(0);
      {
        var idx = void 0;
        var exp2 = (idx = m.indexOf("e")) > -1 ? m.slice(idx + 1) : 0;
        if (exp2) {
          m = m.slice(0, idx).replace(".", "");
          m += arrJoin.call(Array(exp2 - (m.length - 1) + 1), "0");
        }
      }
      var int = void 0;
      if (f !== 0) {
        var k = m.length;
        if (k <= f) {
          var z = arrJoin.call(Array(f + 1 - k + 1), "0");
          m = z + m;
          k = f + 1;
        }
        var a = m.substring(0, k - f), b = m.substring(k - f, m.length);
        m = a + "." + b;
        int = a.length;
      } else int = m.length;
      var cut = maxFraction - minFraction;
      while (cut > 0 && m.slice(-1) === "0") {
        m = m.slice(0, -1);
        cut--;
      }
      if (m.slice(-1) === ".") {
        m = m.slice(0, -1);
      }
      if (int < minInteger) {
        var _z = arrJoin.call(Array(minInteger - int + 1), "0");
        m = _z + m;
      }
      return m;
    }
    var numSys = {
      arab: ["٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩"],
      arabext: ["۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹"],
      bali: ["᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙"],
      beng: ["০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯"],
      deva: ["०", "१", "२", "३", "४", "५", "६", "७", "८", "९"],
      fullwide: ["０", "１", "２", "３", "４", "５", "６", "７", "８", "９"],
      gujr: ["૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯"],
      guru: ["੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯"],
      hanidec: ["〇", "一", "二", "三", "四", "五", "六", "七", "八", "九"],
      khmr: ["០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩"],
      knda: ["೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯"],
      laoo: ["໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙"],
      latn: ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"],
      limb: ["᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏"],
      mlym: ["൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯"],
      mong: ["᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙"],
      mymr: ["၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉"],
      orya: ["୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯"],
      tamldec: ["௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯"],
      telu: ["౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯"],
      thai: ["๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙"],
      tibt: ["༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩"]
    };
    defineProperty2(Intl2.NumberFormat.prototype, "resolvedOptions", {
      configurable: true,
      writable: true,
      value: function value2() {
        var prop = void 0, descs = new Record(), props = ["locale", "numberingSystem", "style", "currency", "currencyDisplay", "minimumIntegerDigits", "minimumFractionDigits", "maximumFractionDigits", "minimumSignificantDigits", "maximumSignificantDigits", "useGrouping"], internal = this !== null && babelHelpers$1["typeof"](this) === "object" && getInternalProperties(this);
        if (!internal || !internal["[[initializedNumberFormat]]"]) throw new TypeError("`this` value for resolvedOptions() is not an initialized Intl.NumberFormat object.");
        for (var i = 0, max2 = props.length; i < max2; i++) {
          if (hop.call(internal, prop = "[[" + props[i] + "]]")) descs[props[i]] = { value: internal[prop], writable: true, configurable: true, enumerable: true };
        }
        return objCreate({}, descs);
      }
    });
    var expDTComponents = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
    var expPatternTrimmer = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
    var unwantedDTCs = /[rqQASjJgwWIQq]/;
    var dtKeys = ["era", "year", "month", "day", "weekday", "quarter"];
    var tmKeys = ["hour", "minute", "second", "hour12", "timeZoneName"];
    function isDateFormatOnly(obj) {
      for (var i = 0; i < tmKeys.length; i += 1) {
        if (obj.hasOwnProperty(tmKeys[i])) {
          return false;
        }
      }
      return true;
    }
    function isTimeFormatOnly(obj) {
      for (var i = 0; i < dtKeys.length; i += 1) {
        if (obj.hasOwnProperty(dtKeys[i])) {
          return false;
        }
      }
      return true;
    }
    function joinDateAndTimeFormats(dateFormatObj, timeFormatObj) {
      var o = { _: {} };
      for (var i = 0; i < dtKeys.length; i += 1) {
        if (dateFormatObj[dtKeys[i]]) {
          o[dtKeys[i]] = dateFormatObj[dtKeys[i]];
        }
        if (dateFormatObj._[dtKeys[i]]) {
          o._[dtKeys[i]] = dateFormatObj._[dtKeys[i]];
        }
      }
      for (var j = 0; j < tmKeys.length; j += 1) {
        if (timeFormatObj[tmKeys[j]]) {
          o[tmKeys[j]] = timeFormatObj[tmKeys[j]];
        }
        if (timeFormatObj._[tmKeys[j]]) {
          o._[tmKeys[j]] = timeFormatObj._[tmKeys[j]];
        }
      }
      return o;
    }
    function computeFinalPatterns(formatObj) {
      formatObj.pattern12 = formatObj.extendedPattern.replace(/'([^']*)'/g, function($0, literal) {
        return literal ? literal : "'";
      });
      formatObj.pattern = formatObj.pattern12.replace("{ampm}", "").replace(expPatternTrimmer, "");
      return formatObj;
    }
    function expDTComponentsMeta($0, formatObj) {
      switch ($0.charAt(0)) {
        // --- Era
        case "G":
          formatObj.era = ["short", "short", "short", "long", "narrow"][$0.length - 1];
          return "{era}";
        // --- Year
        case "y":
        case "Y":
        case "u":
        case "U":
        case "r":
          formatObj.year = $0.length === 2 ? "2-digit" : "numeric";
          return "{year}";
        // --- Quarter (not supported in this polyfill)
        case "Q":
        case "q":
          formatObj.quarter = ["numeric", "2-digit", "short", "long", "narrow"][$0.length - 1];
          return "{quarter}";
        // --- Month
        case "M":
        case "L":
          formatObj.month = ["numeric", "2-digit", "short", "long", "narrow"][$0.length - 1];
          return "{month}";
        // --- Week (not supported in this polyfill)
        case "w":
          formatObj.week = $0.length === 2 ? "2-digit" : "numeric";
          return "{weekday}";
        case "W":
          formatObj.week = "numeric";
          return "{weekday}";
        // --- Day
        case "d":
          formatObj.day = $0.length === 2 ? "2-digit" : "numeric";
          return "{day}";
        case "D":
        // day of the year
        case "F":
        // day of the week
        case "g":
          formatObj.day = "numeric";
          return "{day}";
        // --- Week Day
        case "E":
          formatObj.weekday = ["short", "short", "short", "long", "narrow", "short"][$0.length - 1];
          return "{weekday}";
        case "e":
          formatObj.weekday = ["numeric", "2-digit", "short", "long", "narrow", "short"][$0.length - 1];
          return "{weekday}";
        case "c":
          formatObj.weekday = ["numeric", void 0, "short", "long", "narrow", "short"][$0.length - 1];
          return "{weekday}";
        // --- Period
        case "a":
        // AM, PM
        case "b":
        // am, pm, noon, midnight
        case "B":
          formatObj.hour12 = true;
          return "{ampm}";
        // --- Hour
        case "h":
        case "H":
          formatObj.hour = $0.length === 2 ? "2-digit" : "numeric";
          return "{hour}";
        case "k":
        case "K":
          formatObj.hour12 = true;
          formatObj.hour = $0.length === 2 ? "2-digit" : "numeric";
          return "{hour}";
        // --- Minute
        case "m":
          formatObj.minute = $0.length === 2 ? "2-digit" : "numeric";
          return "{minute}";
        // --- Second
        case "s":
          formatObj.second = $0.length === 2 ? "2-digit" : "numeric";
          return "{second}";
        case "S":
        case "A":
          formatObj.second = "numeric";
          return "{second}";
        // --- Timezone
        case "z":
        // 1..3, 4: specific non-location format
        case "Z":
        // 1..3, 4, 5: The ISO8601 varios formats
        case "O":
        // 1, 4: miliseconds in day short, long
        case "v":
        // 1, 4: generic non-location format
        case "V":
        // 1, 2, 3, 4: time zone ID or city
        case "X":
        // 1, 2, 3, 4: The ISO8601 varios formats
        case "x":
          formatObj.timeZoneName = $0.length < 4 ? "short" : "long";
          return "{timeZoneName}";
      }
    }
    function createDateTimeFormat(skeleton2, pattern) {
      if (unwantedDTCs.test(pattern)) return void 0;
      var formatObj = {
        originalPattern: pattern,
        _: {}
      };
      formatObj.extendedPattern = pattern.replace(expDTComponents, function($0) {
        return expDTComponentsMeta($0, formatObj._);
      });
      skeleton2.replace(expDTComponents, function($0) {
        return expDTComponentsMeta($0, formatObj);
      });
      return computeFinalPatterns(formatObj);
    }
    function createDateTimeFormats(formats) {
      var availableFormats = formats.availableFormats;
      var timeFormats = formats.timeFormats;
      var dateFormats = formats.dateFormats;
      var result = [];
      var skeleton2 = void 0, pattern = void 0, computed = void 0, i = void 0, j = void 0;
      var timeRelatedFormats = [];
      var dateRelatedFormats = [];
      for (skeleton2 in availableFormats) {
        if (availableFormats.hasOwnProperty(skeleton2)) {
          pattern = availableFormats[skeleton2];
          computed = createDateTimeFormat(skeleton2, pattern);
          if (computed) {
            result.push(computed);
            if (isDateFormatOnly(computed)) {
              dateRelatedFormats.push(computed);
            } else if (isTimeFormatOnly(computed)) {
              timeRelatedFormats.push(computed);
            }
          }
        }
      }
      for (skeleton2 in timeFormats) {
        if (timeFormats.hasOwnProperty(skeleton2)) {
          pattern = timeFormats[skeleton2];
          computed = createDateTimeFormat(skeleton2, pattern);
          if (computed) {
            result.push(computed);
            timeRelatedFormats.push(computed);
          }
        }
      }
      for (skeleton2 in dateFormats) {
        if (dateFormats.hasOwnProperty(skeleton2)) {
          pattern = dateFormats[skeleton2];
          computed = createDateTimeFormat(skeleton2, pattern);
          if (computed) {
            result.push(computed);
            dateRelatedFormats.push(computed);
          }
        }
      }
      for (i = 0; i < timeRelatedFormats.length; i += 1) {
        for (j = 0; j < dateRelatedFormats.length; j += 1) {
          if (dateRelatedFormats[j].month === "long") {
            pattern = dateRelatedFormats[j].weekday ? formats.full : formats.long;
          } else if (dateRelatedFormats[j].month === "short") {
            pattern = formats.medium;
          } else {
            pattern = formats.short;
          }
          computed = joinDateAndTimeFormats(dateRelatedFormats[j], timeRelatedFormats[i]);
          computed.originalPattern = pattern;
          computed.extendedPattern = pattern.replace("{0}", timeRelatedFormats[i].extendedPattern).replace("{1}", dateRelatedFormats[j].extendedPattern).replace(/^[,\s]+|[,\s]+$/gi, "");
          result.push(computeFinalPatterns(computed));
        }
      }
      return result;
    }
    var validSyntheticProps = {
      second: {
        numeric: "s",
        "2-digit": "ss"
      },
      minute: {
        numeric: "m",
        "2-digit": "mm"
      },
      year: {
        numeric: "y",
        "2-digit": "yy"
      },
      day: {
        numeric: "d",
        "2-digit": "dd"
      },
      month: {
        numeric: "L",
        "2-digit": "LL",
        narrow: "LLLLL",
        short: "LLL",
        long: "LLLL"
      },
      weekday: {
        narrow: "ccccc",
        short: "ccc",
        long: "cccc"
      }
    };
    function generateSyntheticFormat(propName, propValue) {
      if (validSyntheticProps[propName] && validSyntheticProps[propName][propValue]) {
        var _ref2;
        return _ref2 = {
          originalPattern: validSyntheticProps[propName][propValue],
          _: defineProperty$1({}, propName, propValue),
          extendedPattern: "{" + propName + "}"
        }, defineProperty$1(_ref2, propName, propValue), defineProperty$1(_ref2, "pattern12", "{" + propName + "}"), defineProperty$1(_ref2, "pattern", "{" + propName + "}"), _ref2;
      }
    }
    var dateWidths = objCreate(null, { narrow: {}, short: {}, long: {} });
    function resolveDateString(data2, ca, component, width, key) {
      var obj = data2[ca] && data2[ca][component] ? data2[ca][component] : data2.gregory[component], alts = {
        narrow: ["short", "long"],
        short: ["long", "narrow"],
        long: ["short", "narrow"]
      }, resolved = hop.call(obj, width) ? obj[width] : hop.call(obj, alts[width][0]) ? obj[alts[width][0]] : obj[alts[width][1]];
      return key !== null ? resolved[key] : resolved;
    }
    function DateTimeFormatConstructor() {
      var locales = arguments[0];
      var options = arguments[1];
      if (!this || this === Intl2) {
        return new Intl2.DateTimeFormat(locales, options);
      }
      return InitializeDateTimeFormat2(toObject(this), locales, options);
    }
    defineProperty2(Intl2, "DateTimeFormat", {
      configurable: true,
      writable: true,
      value: DateTimeFormatConstructor
    });
    defineProperty2(DateTimeFormatConstructor, "prototype", {
      writable: false
    });
    function InitializeDateTimeFormat2(dateTimeFormat, locales, options) {
      var internal = getInternalProperties(dateTimeFormat);
      var regexpRestore = createRegExpRestore();
      if (internal["[[initializedIntlObject]]"] === true) throw new TypeError("`this` object has already been initialized as an Intl object");
      defineProperty2(dateTimeFormat, "__getInternalProperties", {
        value: function value3() {
          if (arguments[0] === secret) return internal;
        }
      });
      internal["[[initializedIntlObject]]"] = true;
      var requestedLocales = CanonicalizeLocaleList2(locales);
      options = ToDateTimeOptions2(options, "any", "date");
      var opt = new Record();
      var matcher = GetOption2(options, "localeMatcher", "string", new List("lookup", "best fit"), "best fit");
      opt["[[localeMatcher]]"] = matcher;
      var DateTimeFormat = internals.DateTimeFormat;
      var localeData = DateTimeFormat["[[localeData]]"];
      var r = ResolveLocale2(DateTimeFormat["[[availableLocales]]"], requestedLocales, opt, DateTimeFormat["[[relevantExtensionKeys]]"], localeData);
      internal["[[locale]]"] = r["[[locale]]"];
      internal["[[calendar]]"] = r["[[ca]]"];
      internal["[[numberingSystem]]"] = r["[[nu]]"];
      internal["[[dataLocale]]"] = r["[[dataLocale]]"];
      var dataLocale = r["[[dataLocale]]"];
      var tz = options.timeZone;
      if (tz !== void 0) {
        tz = toLatinUpperCase(tz);
        if (tz !== "UTC") throw new RangeError("timeZone is not supported.");
      }
      internal["[[timeZone]]"] = tz;
      opt = new Record();
      for (var prop in dateTimeComponents) {
        if (!hop.call(dateTimeComponents, prop)) continue;
        var value2 = GetOption2(options, prop, "string", dateTimeComponents[prop]);
        opt["[[" + prop + "]]"] = value2;
      }
      var bestFormat = void 0;
      var dataLocaleData = localeData[dataLocale];
      var formats = ToDateTimeFormats(dataLocaleData.formats);
      matcher = GetOption2(options, "formatMatcher", "string", new List("basic", "best fit"), "best fit");
      dataLocaleData.formats = formats;
      if (matcher === "basic") {
        bestFormat = BasicFormatMatcher2(opt, formats);
      } else {
        {
          var _hr = GetOption2(
            options,
            "hour12",
            "boolean"
            /*, undefined, undefined*/
          );
          opt.hour12 = _hr === void 0 ? dataLocaleData.hour12 : _hr;
        }
        bestFormat = BestFitFormatMatcher2(opt, formats);
      }
      for (var _prop in dateTimeComponents) {
        if (!hop.call(dateTimeComponents, _prop)) continue;
        if (hop.call(bestFormat, _prop)) {
          var p = bestFormat[_prop];
          {
            p = bestFormat._ && hop.call(bestFormat._, _prop) ? bestFormat._[_prop] : p;
          }
          internal["[[" + _prop + "]]"] = p;
        }
      }
      var pattern = void 0;
      var hr12 = GetOption2(
        options,
        "hour12",
        "boolean"
        /*, undefined, undefined*/
      );
      if (internal["[[hour]]"]) {
        hr12 = hr12 === void 0 ? dataLocaleData.hour12 : hr12;
        internal["[[hour12]]"] = hr12;
        if (hr12 === true) {
          var hourNo0 = dataLocaleData.hourNo0;
          internal["[[hourNo0]]"] = hourNo0;
          pattern = bestFormat.pattern12;
        } else
          pattern = bestFormat.pattern;
      } else
        pattern = bestFormat.pattern;
      internal["[[pattern]]"] = pattern;
      internal["[[boundFormat]]"] = void 0;
      internal["[[initializedDateTimeFormat]]"] = true;
      if (es3) dateTimeFormat.format = GetFormatDateTime.call(dateTimeFormat);
      regexpRestore();
      return dateTimeFormat;
    }
    var dateTimeComponents = {
      weekday: ["narrow", "short", "long"],
      era: ["narrow", "short", "long"],
      year: ["2-digit", "numeric"],
      month: ["2-digit", "numeric", "narrow", "short", "long"],
      day: ["2-digit", "numeric"],
      hour: ["2-digit", "numeric"],
      minute: ["2-digit", "numeric"],
      second: ["2-digit", "numeric"],
      timeZoneName: ["short", "long"]
    };
    function ToDateTimeFormats(formats) {
      if (Object.prototype.toString.call(formats) === "[object Array]") {
        return formats;
      }
      return createDateTimeFormats(formats);
    }
    function ToDateTimeOptions2(options, required, defaults2) {
      if (options === void 0) options = null;
      else {
        var opt2 = toObject(options);
        options = new Record();
        for (var k in opt2) {
          options[k] = opt2[k];
        }
      }
      var create = objCreate;
      options = create(options);
      var needDefaults = true;
      if (required === "date" || required === "any") {
        if (options.weekday !== void 0 || options.year !== void 0 || options.month !== void 0 || options.day !== void 0) needDefaults = false;
      }
      if (required === "time" || required === "any") {
        if (options.hour !== void 0 || options.minute !== void 0 || options.second !== void 0) needDefaults = false;
      }
      if (needDefaults && (defaults2 === "date" || defaults2 === "all"))
        options.year = options.month = options.day = "numeric";
      if (needDefaults && (defaults2 === "time" || defaults2 === "all"))
        options.hour = options.minute = options.second = "numeric";
      return options;
    }
    function BasicFormatMatcher2(options, formats) {
      var removalPenalty = 120;
      var additionPenalty = 20;
      var longLessPenalty = 8;
      var longMorePenalty = 6;
      var shortLessPenalty = 6;
      var shortMorePenalty = 3;
      var bestScore = -Infinity;
      var bestFormat = void 0;
      var i = 0;
      var len = formats.length;
      while (i < len) {
        var format2 = formats[i];
        var score = 0;
        for (var property in dateTimeComponents) {
          if (!hop.call(dateTimeComponents, property)) continue;
          var optionsProp = options["[[" + property + "]]"];
          var formatProp = hop.call(format2, property) ? format2[property] : void 0;
          if (optionsProp === void 0 && formatProp !== void 0) score -= additionPenalty;
          else if (optionsProp !== void 0 && formatProp === void 0) score -= removalPenalty;
          else {
            var values = ["2-digit", "numeric", "narrow", "short", "long"];
            var optionsPropIndex = arrIndexOf.call(values, optionsProp);
            var formatPropIndex = arrIndexOf.call(values, formatProp);
            var delta = Math.max(Math.min(formatPropIndex - optionsPropIndex, 2), -2);
            if (delta === 2) score -= longMorePenalty;
            else if (delta === 1) score -= shortMorePenalty;
            else if (delta === -1) score -= shortLessPenalty;
            else if (delta === -2) score -= longLessPenalty;
          }
        }
        if (score > bestScore) {
          bestScore = score;
          bestFormat = format2;
        }
        i++;
      }
      return bestFormat;
    }
    function BestFitFormatMatcher2(options, formats) {
      {
        var optionsPropNames = [];
        for (var property in dateTimeComponents) {
          if (!hop.call(dateTimeComponents, property)) continue;
          if (options["[[" + property + "]]"] !== void 0) {
            optionsPropNames.push(property);
          }
        }
        if (optionsPropNames.length === 1) {
          var _bestFormat = generateSyntheticFormat(optionsPropNames[0], options["[[" + optionsPropNames[0] + "]]"]);
          if (_bestFormat) {
            return _bestFormat;
          }
        }
      }
      var removalPenalty = 120;
      var additionPenalty = 20;
      var longLessPenalty = 8;
      var longMorePenalty = 6;
      var shortLessPenalty = 6;
      var shortMorePenalty = 3;
      var patternPenalty = 2;
      var hour12Penalty = 1;
      var bestScore = -Infinity;
      var bestFormat = void 0;
      var i = 0;
      var len = formats.length;
      while (i < len) {
        var format2 = formats[i];
        var score = 0;
        for (var _property in dateTimeComponents) {
          if (!hop.call(dateTimeComponents, _property)) continue;
          var optionsProp = options["[[" + _property + "]]"];
          var formatProp = hop.call(format2, _property) ? format2[_property] : void 0;
          var patternProp = hop.call(format2._, _property) ? format2._[_property] : void 0;
          if (optionsProp !== patternProp) {
            score -= patternPenalty;
          }
          if (optionsProp === void 0 && formatProp !== void 0) score -= additionPenalty;
          else if (optionsProp !== void 0 && formatProp === void 0) score -= removalPenalty;
          else {
            var values = ["2-digit", "numeric", "narrow", "short", "long"];
            var optionsPropIndex = arrIndexOf.call(values, optionsProp);
            var formatPropIndex = arrIndexOf.call(values, formatProp);
            var delta = Math.max(Math.min(formatPropIndex - optionsPropIndex, 2), -2);
            {
              if (formatPropIndex <= 1 && optionsPropIndex >= 2 || formatPropIndex >= 2 && optionsPropIndex <= 1) {
                if (delta > 0) score -= longMorePenalty;
                else if (delta < 0) score -= longLessPenalty;
              } else {
                if (delta > 1) score -= shortMorePenalty;
                else if (delta < -1) score -= shortLessPenalty;
              }
            }
          }
        }
        {
          if (format2._.hour12 !== options.hour12) {
            score -= hour12Penalty;
          }
        }
        if (score > bestScore) {
          bestScore = score;
          bestFormat = format2;
        }
        i++;
      }
      return bestFormat;
    }
    internals.DateTimeFormat = {
      "[[availableLocales]]": [],
      "[[relevantExtensionKeys]]": ["ca", "nu"],
      "[[localeData]]": {}
    };
    defineProperty2(Intl2.DateTimeFormat, "supportedLocalesOf", {
      configurable: true,
      writable: true,
      value: fnBind.call(function(locales) {
        if (!hop.call(this, "[[availableLocales]]")) throw new TypeError("supportedLocalesOf() is not a constructor");
        var regexpRestore = createRegExpRestore(), options = arguments[1], availableLocales = this["[[availableLocales]]"], requestedLocales = CanonicalizeLocaleList2(locales);
        regexpRestore();
        return SupportedLocales2(availableLocales, requestedLocales, options);
      }, internals.NumberFormat)
    });
    defineProperty2(Intl2.DateTimeFormat.prototype, "format", {
      configurable: true,
      get: GetFormatDateTime
    });
    function GetFormatDateTime() {
      var internal = this !== null && babelHelpers$1["typeof"](this) === "object" && getInternalProperties(this);
      if (!internal || !internal["[[initializedDateTimeFormat]]"]) throw new TypeError("`this` value for format() is not an initialized Intl.DateTimeFormat object.");
      if (internal["[[boundFormat]]"] === void 0) {
        var F = function F2() {
          var date2 = arguments.length <= 0 || arguments[0] === void 0 ? void 0 : arguments[0];
          var x = date2 === void 0 ? Date.now() : toNumber(date2);
          return FormatDateTime2(this, x);
        };
        var bf = fnBind.call(F, this);
        internal["[[boundFormat]]"] = bf;
      }
      return internal["[[boundFormat]]"];
    }
    function formatToParts$12() {
      var date2 = arguments.length <= 0 || arguments[0] === void 0 ? void 0 : arguments[0];
      var internal = this !== null && babelHelpers$1["typeof"](this) === "object" && getInternalProperties(this);
      if (!internal || !internal["[[initializedDateTimeFormat]]"]) throw new TypeError("`this` value for formatToParts() is not an initialized Intl.DateTimeFormat object.");
      var x = date2 === void 0 ? Date.now() : toNumber(date2);
      return FormatToPartsDateTime(this, x);
    }
    Object.defineProperty(Intl2.DateTimeFormat.prototype, "formatToParts", {
      enumerable: false,
      writable: true,
      configurable: true,
      value: formatToParts$12
    });
    function CreateDateTimeParts(dateTimeFormat, x) {
      if (!isFinite(x)) throw new RangeError("Invalid valid date passed to format");
      var internal = dateTimeFormat.__getInternalProperties(secret);
      createRegExpRestore();
      var locale = internal["[[locale]]"];
      var nf = new Intl2.NumberFormat([locale], { useGrouping: false });
      var nf2 = new Intl2.NumberFormat([locale], { minimumIntegerDigits: 2, useGrouping: false });
      var tm = ToLocalTime2(x, internal["[[calendar]]"], internal["[[timeZone]]"]);
      var pattern = internal["[[pattern]]"];
      var result = new List();
      var index = 0;
      var beginIndex = pattern.indexOf("{");
      var endIndex = 0;
      var dataLocale = internal["[[dataLocale]]"];
      var localeData = internals.DateTimeFormat["[[localeData]]"][dataLocale].calendars;
      var ca = internal["[[calendar]]"];
      while (beginIndex !== -1) {
        var fv = void 0;
        endIndex = pattern.indexOf("}", beginIndex);
        if (endIndex === -1) {
          throw new Error("Unclosed pattern");
        }
        if (beginIndex > index) {
          arrPush.call(result, {
            type: "literal",
            value: pattern.substring(index, beginIndex)
          });
        }
        var p = pattern.substring(beginIndex + 1, endIndex);
        if (dateTimeComponents.hasOwnProperty(p)) {
          var f = internal["[[" + p + "]]"];
          var v = tm["[[" + p + "]]"];
          if (p === "year" && v <= 0) {
            v = 1 - v;
          } else if (p === "month") {
            v++;
          } else if (p === "hour" && internal["[[hour12]]"] === true) {
            v = v % 12;
            if (v === 0 && internal["[[hourNo0]]"] === true) {
              v = 12;
            }
          }
          if (f === "numeric") {
            fv = FormatNumber(nf, v);
          } else if (f === "2-digit") {
            fv = FormatNumber(nf2, v);
            if (fv.length > 2) {
              fv = fv.slice(-2);
            }
          } else if (f in dateWidths) {
            switch (p) {
              case "month":
                fv = resolveDateString(localeData, ca, "months", f, tm["[[" + p + "]]"]);
                break;
              case "weekday":
                try {
                  fv = resolveDateString(localeData, ca, "days", f, tm["[[" + p + "]]"]);
                } catch (e) {
                  throw new Error("Could not find weekday data for locale " + locale);
                }
                break;
              case "timeZoneName":
                fv = "";
                break;
              case "era":
                try {
                  fv = resolveDateString(localeData, ca, "eras", f, tm["[[" + p + "]]"]);
                } catch (e) {
                  throw new Error("Could not find era data for locale " + locale);
                }
                break;
              default:
                fv = tm["[[" + p + "]]"];
            }
          }
          arrPush.call(result, {
            type: p,
            value: fv
          });
        } else if (p === "ampm") {
          var _v = tm["[[hour]]"];
          fv = resolveDateString(localeData, ca, "dayPeriods", _v > 11 ? "pm" : "am", null);
          arrPush.call(result, {
            type: "dayPeriod",
            value: fv
          });
        } else {
          arrPush.call(result, {
            type: "literal",
            value: pattern.substring(beginIndex, endIndex + 1)
          });
        }
        index = endIndex + 1;
        beginIndex = pattern.indexOf("{", index);
      }
      if (endIndex < pattern.length - 1) {
        arrPush.call(result, {
          type: "literal",
          value: pattern.substr(endIndex + 1)
        });
      }
      return result;
    }
    function FormatDateTime2(dateTimeFormat, x) {
      var parts = CreateDateTimeParts(dateTimeFormat, x);
      var result = "";
      for (var i = 0; parts.length > i; i++) {
        var part = parts[i];
        result += part.value;
      }
      return result;
    }
    function FormatToPartsDateTime(dateTimeFormat, x) {
      var parts = CreateDateTimeParts(dateTimeFormat, x);
      var result = [];
      for (var i = 0; parts.length > i; i++) {
        var part = parts[i];
        result.push({
          type: part.type,
          value: part.value
        });
      }
      return result;
    }
    function ToLocalTime2(date2, calendar, timeZone) {
      var d = new Date(date2), m = "get" + (timeZone || "");
      return new Record({
        "[[weekday]]": d[m + "Day"](),
        "[[era]]": +(d[m + "FullYear"]() >= 0),
        "[[year]]": d[m + "FullYear"](),
        "[[month]]": d[m + "Month"](),
        "[[day]]": d[m + "Date"](),
        "[[hour]]": d[m + "Hours"](),
        "[[minute]]": d[m + "Minutes"](),
        "[[second]]": d[m + "Seconds"](),
        "[[inDST]]": false
        // ###TODO###
      });
    }
    defineProperty2(Intl2.DateTimeFormat.prototype, "resolvedOptions", {
      writable: true,
      configurable: true,
      value: function value2() {
        var prop = void 0, descs = new Record(), props = ["locale", "calendar", "numberingSystem", "timeZone", "hour12", "weekday", "era", "year", "month", "day", "hour", "minute", "second", "timeZoneName"], internal = this !== null && babelHelpers$1["typeof"](this) === "object" && getInternalProperties(this);
        if (!internal || !internal["[[initializedDateTimeFormat]]"]) throw new TypeError("`this` value for resolvedOptions() is not an initialized Intl.DateTimeFormat object.");
        for (var i = 0, max2 = props.length; i < max2; i++) {
          if (hop.call(internal, prop = "[[" + props[i] + "]]")) descs[props[i]] = { value: internal[prop], writable: true, configurable: true, enumerable: true };
        }
        return objCreate({}, descs);
      }
    });
    var ls = Intl2.__localeSensitiveProtos = {
      Number: {},
      Date: {}
    };
    ls.Number.toLocaleString = function() {
      if (Object.prototype.toString.call(this) !== "[object Number]") throw new TypeError("`this` value must be a number for Number.prototype.toLocaleString()");
      return FormatNumber(new NumberFormatConstructor(arguments[0], arguments[1]), this);
    };
    ls.Date.toLocaleString = function() {
      if (Object.prototype.toString.call(this) !== "[object Date]") throw new TypeError("`this` value must be a Date instance for Date.prototype.toLocaleString()");
      var x = +this;
      if (isNaN(x)) return "Invalid Date";
      var locales = arguments[0];
      var options = arguments[1];
      options = ToDateTimeOptions2(options, "any", "all");
      var dateTimeFormat = new DateTimeFormatConstructor(locales, options);
      return FormatDateTime2(dateTimeFormat, x);
    };
    ls.Date.toLocaleDateString = function() {
      if (Object.prototype.toString.call(this) !== "[object Date]") throw new TypeError("`this` value must be a Date instance for Date.prototype.toLocaleDateString()");
      var x = +this;
      if (isNaN(x)) return "Invalid Date";
      var locales = arguments[0], options = arguments[1];
      options = ToDateTimeOptions2(options, "date", "date");
      var dateTimeFormat = new DateTimeFormatConstructor(locales, options);
      return FormatDateTime2(dateTimeFormat, x);
    };
    ls.Date.toLocaleTimeString = function() {
      if (Object.prototype.toString.call(this) !== "[object Date]") throw new TypeError("`this` value must be a Date instance for Date.prototype.toLocaleTimeString()");
      var x = +this;
      if (isNaN(x)) return "Invalid Date";
      var locales = arguments[0];
      var options = arguments[1];
      options = ToDateTimeOptions2(options, "time", "time");
      var dateTimeFormat = new DateTimeFormatConstructor(locales, options);
      return FormatDateTime2(dateTimeFormat, x);
    };
    defineProperty2(Intl2, "__applyLocaleSensitivePrototypes", {
      writable: true,
      configurable: true,
      value: function value2() {
        defineProperty2(Number.prototype, "toLocaleString", { writable: true, configurable: true, value: ls.Number.toLocaleString });
        defineProperty2(Date.prototype, "toLocaleString", { writable: true, configurable: true, value: ls.Date.toLocaleString });
        for (var k in ls.Date) {
          if (hop.call(ls.Date, k)) defineProperty2(Date.prototype, k, { writable: true, configurable: true, value: ls.Date[k] });
        }
      }
    });
    defineProperty2(Intl2, "__addLocaleData", {
      value: function value2(data2) {
        if (!IsStructurallyValidLanguageTag(data2.locale)) throw new Error("Object passed doesn't identify itself with a valid language tag");
        addLocaleData(data2, data2.locale);
      }
    });
    function addLocaleData(data2, tag2) {
      if (!data2.number) throw new Error("Object passed doesn't contain locale data for Intl.NumberFormat");
      var locale = void 0, locales = [tag2], parts = tag2.split("-");
      if (parts.length > 2 && parts[1].length === 4) arrPush.call(locales, parts[0] + "-" + parts[2]);
      while (locale = arrShift.call(locales)) {
        arrPush.call(internals.NumberFormat["[[availableLocales]]"], locale);
        internals.NumberFormat["[[localeData]]"][locale] = data2.number;
        if (data2.date) {
          data2.date.nu = data2.number.nu;
          arrPush.call(internals.DateTimeFormat["[[availableLocales]]"], locale);
          internals.DateTimeFormat["[[localeData]]"][locale] = data2.date;
        }
      }
      if (defaultLocale === void 0) setDefaultLocale(tag2);
    }
    defineProperty2(Intl2, "__disableRegExpRestore", {
      value: function value2() {
        internals.disableRegExpRestore = true;
      }
    });
    core$2 = Intl2;
    return core$2;
  }
  var intl;
  var hasRequiredIntl;
  function requireIntl() {
    if (hasRequiredIntl) return intl;
    hasRequiredIntl = 1;
    commonjsGlobal.IntlPolyfill = requireCore$2();
    if (!commonjsGlobal.Intl) {
      commonjsGlobal.Intl = commonjsGlobal.IntlPolyfill;
      commonjsGlobal.IntlPolyfill.__applyLocaleSensitivePrototypes();
    }
    intl = commonjsGlobal.IntlPolyfill;
    return intl;
  }
  requireIntl();
  var polyfill$4 = {};
  var intlLocale = {};
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  function __extends(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  }
  var __assign = function() {
    __assign = Object.assign || function __assign2(t) {
      for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
      return t;
    };
    return __assign.apply(this, arguments);
  };
  function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
          t[p[i]] = s[p[i]];
      }
    return t;
  }
  function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  }
  function __param(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  }
  function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) {
      if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected");
      return f;
    }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
      var context = {};
      for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
      for (var p in contextIn.access) context.access[p] = contextIn.access[p];
      context.addInitializer = function(f) {
        if (done) throw new TypeError("Cannot add initializers after decoration has completed");
        extraInitializers.push(accept(f || null));
      };
      var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
      if (kind === "accessor") {
        if (result === void 0) continue;
        if (result === null || typeof result !== "object") throw new TypeError("Object expected");
        if (_ = accept(result.get)) descriptor.get = _;
        if (_ = accept(result.set)) descriptor.set = _;
        if (_ = accept(result.init)) initializers.unshift(_);
      } else if (_ = accept(result)) {
        if (kind === "field") initializers.unshift(_);
        else descriptor[key] = _;
      }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
  }
  function __runInitializers(thisArg, initializers, value2) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
      value2 = useValue ? initializers[i].call(thisArg, value2) : initializers[i].call(thisArg);
    }
    return useValue ? value2 : void 0;
  }
  function __propKey(x) {
    return typeof x === "symbol" ? x : "".concat(x);
  }
  function __setFunctionName(f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
  }
  function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
  }
  function __awaiter(thisArg, _arguments, P2, generator) {
    function adopt(value2) {
      return value2 instanceof P2 ? value2 : new P2(function(resolve) {
        resolve(value2);
      });
    }
    return new (P2 || (P2 = Promise))(function(resolve, reject) {
      function fulfilled(value2) {
        try {
          step(generator.next(value2));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value2) {
        try {
          step(generator["throw"](value2));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  }
  function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() {
      if (t[0] & 1) throw t[1];
      return t[1];
    }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
      return this;
    }), g;
    function verb(n) {
      return function(v) {
        return step([n, v]);
      };
    }
    function step(op) {
      if (f) throw new TypeError("Generator is already executing.");
      while (g && (g = 0, op[0] && (_ = 0)), _) try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2]) _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
      if (op[0] & 5) throw op[1];
      return { value: op[0] ? op[1] : void 0, done: true };
    }
  }
  var __createBinding = Object.create ? function(o, m, k, k2) {
    if (k2 === void 0) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() {
        return m[k];
      } };
    }
    Object.defineProperty(o, k2, desc);
  } : function(o, m, k, k2) {
    if (k2 === void 0) k2 = k;
    o[k2] = m[k];
  };
  function __exportStar(m, o) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
  }
  function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
      next: function() {
        if (o && i >= o.length) o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }
  function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    } catch (error) {
      e = { error };
    } finally {
      try {
        if (r && !r.done && (m = i["return"])) m.call(i);
      } finally {
        if (e) throw e.error;
      }
    }
    return ar;
  }
  function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
      ar = ar.concat(__read(arguments[i]));
    return ar;
  }
  function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
        r[k] = a[j];
    return r;
  }
  function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar) ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
  }
  function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
  }
  function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
      return this;
    }, i;
    function awaitReturn(f) {
      return function(v) {
        return Promise.resolve(v).then(f, reject);
      };
    }
    function verb(n, f) {
      if (g[n]) {
        i[n] = function(v) {
          return new Promise(function(a, b) {
            q.push([n, v, a, b]) > 1 || resume(n, v);
          });
        };
        if (f) i[n] = f(i[n]);
      }
    }
    function resume(n, v) {
      try {
        step(g[n](v));
      } catch (e) {
        settle(q[0][3], e);
      }
    }
    function step(r) {
      r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value2) {
      resume("next", value2);
    }
    function reject(value2) {
      resume("throw", value2);
    }
    function settle(f, v) {
      if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
  }
  function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function(e) {
      throw e;
    }), verb("return"), i[Symbol.iterator] = function() {
      return this;
    }, i;
    function verb(n, f) {
      i[n] = o[n] ? function(v) {
        return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v;
      } : f;
    }
  }
  function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
      return this;
    }, i);
    function verb(n) {
      i[n] = o[n] && function(v) {
        return new Promise(function(resolve, reject) {
          v = o[n](v), settle(resolve, reject, v.done, v.value);
        });
      };
    }
    function settle(resolve, reject, d, v) {
      Promise.resolve(v).then(function(v2) {
        resolve({ value: v2, done: d });
      }, reject);
    }
  }
  function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) {
      Object.defineProperty(cooked, "raw", { value: raw });
    } else {
      cooked.raw = raw;
    }
    return cooked;
  }
  var __setModuleDefault = Object.create ? function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
  } : function(o, v) {
    o["default"] = v;
  };
  var ownKeys = function(o) {
    ownKeys = Object.getOwnPropertyNames || function(o2) {
      var ar = [];
      for (var k in o2) if (Object.prototype.hasOwnProperty.call(o2, k)) ar[ar.length] = k;
      return ar;
    };
    return ownKeys(o);
  };
  function __importStar(mod2) {
    if (mod2 && mod2.__esModule) return mod2;
    var result = {};
    if (mod2 != null) {
      for (var k = ownKeys(mod2), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod2, k[i]);
    }
    __setModuleDefault(result, mod2);
    return result;
  }
  function __importDefault(mod2) {
    return mod2 && mod2.__esModule ? mod2 : { default: mod2 };
  }
  function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
  }
  function __classPrivateFieldSet(receiver, state, value2, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value2) : f ? f.value = value2 : state.set(receiver, value2), value2;
  }
  function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
  }
  function __addDisposableResource(env, value2, async) {
    if (value2 !== null && value2 !== void 0) {
      if (typeof value2 !== "object" && typeof value2 !== "function") throw new TypeError("Object expected.");
      var dispose, inner;
      if (async) {
        if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
        dispose = value2[Symbol.asyncDispose];
      }
      if (dispose === void 0) {
        if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
        dispose = value2[Symbol.dispose];
        if (async) inner = dispose;
      }
      if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
      if (inner) dispose = function() {
        try {
          inner.call(this);
        } catch (e) {
          return Promise.reject(e);
        }
      };
      env.stack.push({ value: value2, dispose, async });
    } else if (async) {
      env.stack.push({ async: true });
    }
    return value2;
  }
  var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
  };
  function __disposeResources(env) {
    function fail(e) {
      env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
      env.hasError = true;
    }
    var r, s = 0;
    function next() {
      while (r = env.stack.pop()) {
        try {
          if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);
          if (r.dispose) {
            var result = r.dispose.call(r.value);
            if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) {
              fail(e);
              return next();
            });
          } else s |= 1;
        } catch (e) {
          fail(e);
        }
      }
      if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();
      if (env.hasError) throw env.error;
    }
    return next();
  }
  function __rewriteRelativeImportExtension(path, preserveJsx) {
    if (typeof path === "string" && /^\.\.?\//.test(path)) {
      return path.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i, function(m, tsx, d, ext, cm) {
        return tsx ? preserveJsx ? ".jsx" : ".js" : d && (!ext || !cm) ? m : d + ext + "." + cm.toLowerCase() + "js";
      });
    }
    return path;
  }
  const tslib_es6 = {
    __extends,
    __assign,
    __rest,
    __decorate,
    __param,
    __esDecorate,
    __runInitializers,
    __propKey,
    __setFunctionName,
    __metadata,
    __awaiter,
    __generator,
    __createBinding,
    __exportStar,
    __values,
    __read,
    __spread,
    __spreadArrays,
    __spreadArray,
    __await,
    __asyncGenerator,
    __asyncDelegator,
    __asyncValues,
    __makeTemplateObject,
    __importStar,
    __importDefault,
    __classPrivateFieldGet,
    __classPrivateFieldSet,
    __classPrivateFieldIn,
    __addDisposableResource,
    __disposeResources,
    __rewriteRelativeImportExtension
  };
  const tslib_es6$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    __addDisposableResource,
    get __assign() {
      return __assign;
    },
    __asyncDelegator,
    __asyncGenerator,
    __asyncValues,
    __await,
    __awaiter,
    __classPrivateFieldGet,
    __classPrivateFieldIn,
    __classPrivateFieldSet,
    __createBinding,
    __decorate,
    __disposeResources,
    __esDecorate,
    __exportStar,
    __extends,
    __generator,
    __importDefault,
    __importStar,
    __makeTemplateObject,
    __metadata,
    __param,
    __propKey,
    __read,
    __rest,
    __rewriteRelativeImportExtension,
    __runInitializers,
    __setFunctionName,
    __spread,
    __spreadArray,
    __spreadArrays,
    __values,
    default: tslib_es6
  }, Symbol.toStringTag, { value: "Module" }));
  const require$$0$1 = /* @__PURE__ */ getAugmentedNamespace(tslib_es6$1);
  function CanonicalizeLocaleList$1(locales) {
    return Intl.getCanonicalLocales(locales);
  }
  function CanonicalizeTimeZoneName(tz, _a2) {
    var zoneNames = _a2.zoneNames, uppercaseLinks = _a2.uppercaseLinks;
    var uppercasedTz = tz.toUpperCase();
    var uppercasedZones = zoneNames.reduce(function(all, z) {
      all[z.toUpperCase()] = z;
      return all;
    }, {});
    var ianaTimeZone = uppercaseLinks[uppercasedTz] || uppercasedZones[uppercasedTz];
    if (ianaTimeZone === "Etc/UTC" || ianaTimeZone === "Etc/GMT") {
      return "UTC";
    }
    return ianaTimeZone;
  }
  /*!
   *  decimal.js v10.5.0
   *  An arbitrary-precision Decimal type for JavaScript.
   *  https://github.com/MikeMcl/decimal.js
   *  Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>
   *  MIT Licence
   */
  var EXP_LIMIT = 9e15, MAX_DIGITS = 1e9, NUMERALS = "0123456789abcdef", LN10 = "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058", PI = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789", DEFAULTS = {
    // These values must be integers within the stated ranges (inclusive).
    // Most of these values can be changed at run-time using the `Decimal.config` method.
    // The maximum number of significant digits of the result of a calculation or base conversion.
    // E.g. `Decimal.config({ precision: 20 });`
    precision: 20,
    // 1 to MAX_DIGITS
    // The rounding mode used when rounding to `precision`.
    //
    // ROUND_UP         0 Away from zero.
    // ROUND_DOWN       1 Towards zero.
    // ROUND_CEIL       2 Towards +Infinity.
    // ROUND_FLOOR      3 Towards -Infinity.
    // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.
    // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
    // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
    // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
    // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
    //
    // E.g.
    // `Decimal.rounding = 4;`
    // `Decimal.rounding = Decimal.ROUND_HALF_UP;`
    rounding: 4,
    // 0 to 8
    // The modulo mode used when calculating the modulus: a mod n.
    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.
    // The remainder (r) is calculated as: r = a - n * q.
    //
    // UP         0 The remainder is positive if the dividend is negative, else is negative.
    // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).
    // FLOOR      3 The remainder has the same sign as the divisor (Python %).
    // HALF_EVEN  6 The IEEE 754 remainder function.
    // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.
    //
    // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian
    // division (9) are commonly used for the modulus operation. The other rounding modes can also
    // be used, but they may not give useful results.
    modulo: 1,
    // 0 to 9
    // The exponent value at and beneath which `toString` returns exponential notation.
    // JavaScript numbers: -7
    toExpNeg: -7,
    // 0 to -EXP_LIMIT
    // The exponent value at and above which `toString` returns exponential notation.
    // JavaScript numbers: 21
    toExpPos: 21,
    // 0 to EXP_LIMIT
    // The minimum exponent value, beneath which underflow to zero occurs.
    // JavaScript numbers: -324  (5e-324)
    minE: -9e15,
    // -1 to -EXP_LIMIT
    // The maximum exponent value, above which overflow to Infinity occurs.
    // JavaScript numbers: 308  (1.7976931348623157e+308)
    maxE: EXP_LIMIT,
    // 1 to EXP_LIMIT
    // Whether to use cryptographically-secure random number generation, if available.
    crypto: false
    // true/false
  }, inexact, quadrant, external = true, decimalError = "[DecimalError] ", invalidArgument = decimalError + "Invalid argument: ", precisionLimitExceeded = decimalError + "Precision limit exceeded", cryptoUnavailable = decimalError + "crypto unavailable", tag = "[object Decimal]", mathfloor = Math.floor, mathpow = Math.pow, isBinary = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i, isHex$1 = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i, isOctal = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i, isDecimal = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i, BASE = 1e7, LOG_BASE = 7, MAX_SAFE_INTEGER = 9007199254740991, LN10_PRECISION = LN10.length - 1, PI_PRECISION = PI.length - 1, P = { toStringTag: tag };
  P.absoluteValue = P.abs = function() {
    var x = new this.constructor(this);
    if (x.s < 0) x.s = 1;
    return finalise(x);
  };
  P.ceil = function() {
    return finalise(new this.constructor(this), this.e + 1, 2);
  };
  P.clampedTo = P.clamp = function(min2, max2) {
    var k, x = this, Ctor = x.constructor;
    min2 = new Ctor(min2);
    max2 = new Ctor(max2);
    if (!min2.s || !max2.s) return new Ctor(NaN);
    if (min2.gt(max2)) throw Error(invalidArgument + max2);
    k = x.cmp(min2);
    return k < 0 ? min2 : x.cmp(max2) > 0 ? max2 : new Ctor(x);
  };
  P.comparedTo = P.cmp = function(y) {
    var i, j, xdL, ydL, x = this, xd = x.d, yd = (y = new x.constructor(y)).d, xs = x.s, ys = y.s;
    if (!xd || !yd) {
      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;
    }
    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;
    if (xs !== ys) return xs;
    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;
    xdL = xd.length;
    ydL = yd.length;
    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {
      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;
    }
    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;
  };
  P.cosine = P.cos = function() {
    var pr, rm, x = this, Ctor = x.constructor;
    if (!x.d) return new Ctor(NaN);
    if (!x.d[0]) return new Ctor(1);
    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;
    Ctor.rounding = 1;
    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));
    Ctor.precision = pr;
    Ctor.rounding = rm;
    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);
  };
  P.cubeRoot = P.cbrt = function() {
    var e, m, n, r, rep, s, sd, t, t3, t3plusx, x = this, Ctor = x.constructor;
    if (!x.isFinite() || x.isZero()) return new Ctor(x);
    external = false;
    s = x.s * mathpow(x.s * x, 1 / 3);
    if (!s || Math.abs(s) == 1 / 0) {
      n = digitsToString(x.d);
      e = x.e;
      if (s = (e - n.length + 1) % 3) n += s == 1 || s == -2 ? "0" : "00";
      s = mathpow(n, 1 / 3);
      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));
      if (s == 1 / 0) {
        n = "5e" + e;
      } else {
        n = s.toExponential();
        n = n.slice(0, n.indexOf("e") + 1) + e;
      }
      r = new Ctor(n);
      r.s = x.s;
    } else {
      r = new Ctor(s.toString());
    }
    sd = (e = Ctor.precision) + 3;
    for (; ; ) {
      t = r;
      t3 = t.times(t).times(t);
      t3plusx = t3.plus(x);
      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);
      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {
        n = n.slice(sd - 3, sd + 1);
        if (n == "9999" || !rep && n == "4999") {
          if (!rep) {
            finalise(t, e + 1, 0);
            if (t.times(t).times(t).eq(x)) {
              r = t;
              break;
            }
          }
          sd += 4;
          rep = 1;
        } else {
          if (!+n || !+n.slice(1) && n.charAt(0) == "5") {
            finalise(r, e + 1, 1);
            m = !r.times(r).times(r).eq(x);
          }
          break;
        }
      }
    }
    external = true;
    return finalise(r, e, Ctor.rounding, m);
  };
  P.decimalPlaces = P.dp = function() {
    var w, d = this.d, n = NaN;
    if (d) {
      w = d.length - 1;
      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;
      w = d[w];
      if (w) for (; w % 10 == 0; w /= 10) n--;
      if (n < 0) n = 0;
    }
    return n;
  };
  P.dividedBy = P.div = function(y) {
    return divide(this, new this.constructor(y));
  };
  P.dividedToIntegerBy = P.divToInt = function(y) {
    var x = this, Ctor = x.constructor;
    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);
  };
  P.equals = P.eq = function(y) {
    return this.cmp(y) === 0;
  };
  P.floor = function() {
    return finalise(new this.constructor(this), this.e + 1, 3);
  };
  P.greaterThan = P.gt = function(y) {
    return this.cmp(y) > 0;
  };
  P.greaterThanOrEqualTo = P.gte = function(y) {
    var k = this.cmp(y);
    return k == 1 || k === 0;
  };
  P.hyperbolicCosine = P.cosh = function() {
    var k, n, pr, rm, len, x = this, Ctor = x.constructor, one = new Ctor(1);
    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);
    if (x.isZero()) return one;
    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;
    Ctor.rounding = 1;
    len = x.d.length;
    if (len < 32) {
      k = Math.ceil(len / 3);
      n = (1 / tinyPow(4, k)).toString();
    } else {
      k = 16;
      n = "2.3283064365386962890625e-10";
    }
    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);
    var cosh2_x, i = k, d8 = new Ctor(8);
    for (; i--; ) {
      cosh2_x = x.times(x);
      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));
    }
    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);
  };
  P.hyperbolicSine = P.sinh = function() {
    var k, pr, rm, len, x = this, Ctor = x.constructor;
    if (!x.isFinite() || x.isZero()) return new Ctor(x);
    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;
    Ctor.rounding = 1;
    len = x.d.length;
    if (len < 3) {
      x = taylorSeries(Ctor, 2, x, x, true);
    } else {
      k = 1.4 * Math.sqrt(len);
      k = k > 16 ? 16 : k | 0;
      x = x.times(1 / tinyPow(5, k));
      x = taylorSeries(Ctor, 2, x, x, true);
      var sinh2_x, d5 = new Ctor(5), d16 = new Ctor(16), d20 = new Ctor(20);
      for (; k--; ) {
        sinh2_x = x.times(x);
        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));
      }
    }
    Ctor.precision = pr;
    Ctor.rounding = rm;
    return finalise(x, pr, rm, true);
  };
  P.hyperbolicTangent = P.tanh = function() {
    var pr, rm, x = this, Ctor = x.constructor;
    if (!x.isFinite()) return new Ctor(x.s);
    if (x.isZero()) return new Ctor(x);
    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + 7;
    Ctor.rounding = 1;
    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);
  };
  P.inverseCosine = P.acos = function() {
    var x = this, Ctor = x.constructor, k = x.abs().cmp(1), pr = Ctor.precision, rm = Ctor.rounding;
    if (k !== -1) {
      return k === 0 ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0) : new Ctor(NaN);
    }
    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);
    Ctor.precision = pr + 6;
    Ctor.rounding = 1;
    x = new Ctor(1).minus(x).div(x.plus(1)).sqrt().atan();
    Ctor.precision = pr;
    Ctor.rounding = rm;
    return x.times(2);
  };
  P.inverseHyperbolicCosine = P.acosh = function() {
    var pr, rm, x = this, Ctor = x.constructor;
    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);
    if (!x.isFinite()) return new Ctor(x);
    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;
    Ctor.rounding = 1;
    external = false;
    x = x.times(x).minus(1).sqrt().plus(x);
    external = true;
    Ctor.precision = pr;
    Ctor.rounding = rm;
    return x.ln();
  };
  P.inverseHyperbolicSine = P.asinh = function() {
    var pr, rm, x = this, Ctor = x.constructor;
    if (!x.isFinite() || x.isZero()) return new Ctor(x);
    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;
    Ctor.rounding = 1;
    external = false;
    x = x.times(x).plus(1).sqrt().plus(x);
    external = true;
    Ctor.precision = pr;
    Ctor.rounding = rm;
    return x.ln();
  };
  P.inverseHyperbolicTangent = P.atanh = function() {
    var pr, rm, wpr, xsd, x = this, Ctor = x.constructor;
    if (!x.isFinite()) return new Ctor(NaN);
    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);
    pr = Ctor.precision;
    rm = Ctor.rounding;
    xsd = x.sd();
    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);
    Ctor.precision = wpr = xsd - x.e;
    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);
    Ctor.precision = pr + 4;
    Ctor.rounding = 1;
    x = x.ln();
    Ctor.precision = pr;
    Ctor.rounding = rm;
    return x.times(0.5);
  };
  P.inverseSine = P.asin = function() {
    var halfPi, k, pr, rm, x = this, Ctor = x.constructor;
    if (x.isZero()) return new Ctor(x);
    k = x.abs().cmp(1);
    pr = Ctor.precision;
    rm = Ctor.rounding;
    if (k !== -1) {
      if (k === 0) {
        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);
        halfPi.s = x.s;
        return halfPi;
      }
      return new Ctor(NaN);
    }
    Ctor.precision = pr + 6;
    Ctor.rounding = 1;
    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();
    Ctor.precision = pr;
    Ctor.rounding = rm;
    return x.times(2);
  };
  P.inverseTangent = P.atan = function() {
    var i, j, k, n, px, t, r, wpr, x2, x = this, Ctor = x.constructor, pr = Ctor.precision, rm = Ctor.rounding;
    if (!x.isFinite()) {
      if (!x.s) return new Ctor(NaN);
      if (pr + 4 <= PI_PRECISION) {
        r = getPi(Ctor, pr + 4, rm).times(0.5);
        r.s = x.s;
        return r;
      }
    } else if (x.isZero()) {
      return new Ctor(x);
    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {
      r = getPi(Ctor, pr + 4, rm).times(0.25);
      r.s = x.s;
      return r;
    }
    Ctor.precision = wpr = pr + 10;
    Ctor.rounding = 1;
    k = Math.min(28, wpr / LOG_BASE + 2 | 0);
    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));
    external = false;
    j = Math.ceil(wpr / LOG_BASE);
    n = 1;
    x2 = x.times(x);
    r = new Ctor(x);
    px = x;
    for (; i !== -1; ) {
      px = px.times(x2);
      t = r.minus(px.div(n += 2));
      px = px.times(x2);
      r = t.plus(px.div(n += 2));
      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--; ) ;
    }
    if (k) r = r.times(2 << k - 1);
    external = true;
    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);
  };
  P.isFinite = function() {
    return !!this.d;
  };
  P.isInteger = P.isInt = function() {
    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;
  };
  P.isNaN = function() {
    return !this.s;
  };
  P.isNegative = P.isNeg = function() {
    return this.s < 0;
  };
  P.isPositive = P.isPos = function() {
    return this.s > 0;
  };
  P.isZero = function() {
    return !!this.d && this.d[0] === 0;
  };
  P.lessThan = P.lt = function(y) {
    return this.cmp(y) < 0;
  };
  P.lessThanOrEqualTo = P.lte = function(y) {
    return this.cmp(y) < 1;
  };
  P.logarithm = P.log = function(base) {
    var isBase10, d, denominator, k, inf, num, sd, r, arg = this, Ctor = arg.constructor, pr = Ctor.precision, rm = Ctor.rounding, guard = 5;
    if (base == null) {
      base = new Ctor(10);
      isBase10 = true;
    } else {
      base = new Ctor(base);
      d = base.d;
      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);
      isBase10 = base.eq(10);
    }
    d = arg.d;
    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {
      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);
    }
    if (isBase10) {
      if (d.length > 1) {
        inf = true;
      } else {
        for (k = d[0]; k % 10 === 0; ) k /= 10;
        inf = k !== 1;
      }
    }
    external = false;
    sd = pr + guard;
    num = naturalLogarithm(arg, sd);
    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);
    r = divide(num, denominator, sd, 1);
    if (checkRoundingDigits(r.d, k = pr, rm)) {
      do {
        sd += 10;
        num = naturalLogarithm(arg, sd);
        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);
        r = divide(num, denominator, sd, 1);
        if (!inf) {
          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {
            r = finalise(r, pr + 1, 0);
          }
          break;
        }
      } while (checkRoundingDigits(r.d, k += 10, rm));
    }
    external = true;
    return finalise(r, pr, rm);
  };
  P.minus = P.sub = function(y) {
    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd, x = this, Ctor = x.constructor;
    y = new Ctor(y);
    if (!x.d || !y.d) {
      if (!x.s || !y.s) y = new Ctor(NaN);
      else if (x.d) y.s = -y.s;
      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);
      return y;
    }
    if (x.s != y.s) {
      y.s = -y.s;
      return x.plus(y);
    }
    xd = x.d;
    yd = y.d;
    pr = Ctor.precision;
    rm = Ctor.rounding;
    if (!xd[0] || !yd[0]) {
      if (yd[0]) y.s = -y.s;
      else if (xd[0]) y = new Ctor(x);
      else return new Ctor(rm === 3 ? -0 : 0);
      return external ? finalise(y, pr, rm) : y;
    }
    e = mathfloor(y.e / LOG_BASE);
    xe = mathfloor(x.e / LOG_BASE);
    xd = xd.slice();
    k = xe - e;
    if (k) {
      xLTy = k < 0;
      if (xLTy) {
        d = xd;
        k = -k;
        len = yd.length;
      } else {
        d = yd;
        e = xe;
        len = xd.length;
      }
      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;
      if (k > i) {
        k = i;
        d.length = 1;
      }
      d.reverse();
      for (i = k; i--; ) d.push(0);
      d.reverse();
    } else {
      i = xd.length;
      len = yd.length;
      xLTy = i < len;
      if (xLTy) len = i;
      for (i = 0; i < len; i++) {
        if (xd[i] != yd[i]) {
          xLTy = xd[i] < yd[i];
          break;
        }
      }
      k = 0;
    }
    if (xLTy) {
      d = xd;
      xd = yd;
      yd = d;
      y.s = -y.s;
    }
    len = xd.length;
    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;
    for (i = yd.length; i > k; ) {
      if (xd[--i] < yd[i]) {
        for (j = i; j && xd[--j] === 0; ) xd[j] = BASE - 1;
        --xd[j];
        xd[i] += BASE;
      }
      xd[i] -= yd[i];
    }
    for (; xd[--len] === 0; ) xd.pop();
    for (; xd[0] === 0; xd.shift()) --e;
    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);
    y.d = xd;
    y.e = getBase10Exponent(xd, e);
    return external ? finalise(y, pr, rm) : y;
  };
  P.modulo = P.mod = function(y) {
    var q, x = this, Ctor = x.constructor;
    y = new Ctor(y);
    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);
    if (!y.d || x.d && !x.d[0]) {
      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);
    }
    external = false;
    if (Ctor.modulo == 9) {
      q = divide(x, y.abs(), 0, 3, 1);
      q.s *= y.s;
    } else {
      q = divide(x, y, 0, Ctor.modulo, 1);
    }
    q = q.times(y);
    external = true;
    return x.minus(q);
  };
  P.naturalExponential = P.exp = function() {
    return naturalExponential(this);
  };
  P.naturalLogarithm = P.ln = function() {
    return naturalLogarithm(this);
  };
  P.negated = P.neg = function() {
    var x = new this.constructor(this);
    x.s = -x.s;
    return finalise(x);
  };
  P.plus = P.add = function(y) {
    var carry, d, e, i, k, len, pr, rm, xd, yd, x = this, Ctor = x.constructor;
    y = new Ctor(y);
    if (!x.d || !y.d) {
      if (!x.s || !y.s) y = new Ctor(NaN);
      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);
      return y;
    }
    if (x.s != y.s) {
      y.s = -y.s;
      return x.minus(y);
    }
    xd = x.d;
    yd = y.d;
    pr = Ctor.precision;
    rm = Ctor.rounding;
    if (!xd[0] || !yd[0]) {
      if (!yd[0]) y = new Ctor(x);
      return external ? finalise(y, pr, rm) : y;
    }
    k = mathfloor(x.e / LOG_BASE);
    e = mathfloor(y.e / LOG_BASE);
    xd = xd.slice();
    i = k - e;
    if (i) {
      if (i < 0) {
        d = xd;
        i = -i;
        len = yd.length;
      } else {
        d = yd;
        e = k;
        len = xd.length;
      }
      k = Math.ceil(pr / LOG_BASE);
      len = k > len ? k + 1 : len + 1;
      if (i > len) {
        i = len;
        d.length = 1;
      }
      d.reverse();
      for (; i--; ) d.push(0);
      d.reverse();
    }
    len = xd.length;
    i = yd.length;
    if (len - i < 0) {
      i = len;
      d = yd;
      yd = xd;
      xd = d;
    }
    for (carry = 0; i; ) {
      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;
      xd[i] %= BASE;
    }
    if (carry) {
      xd.unshift(carry);
      ++e;
    }
    for (len = xd.length; xd[--len] == 0; ) xd.pop();
    y.d = xd;
    y.e = getBase10Exponent(xd, e);
    return external ? finalise(y, pr, rm) : y;
  };
  P.precision = P.sd = function(z) {
    var k, x = this;
    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);
    if (x.d) {
      k = getPrecision(x.d);
      if (z && x.e + 1 > k) k = x.e + 1;
    } else {
      k = NaN;
    }
    return k;
  };
  P.round = function() {
    var x = this, Ctor = x.constructor;
    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);
  };
  P.sine = P.sin = function() {
    var pr, rm, x = this, Ctor = x.constructor;
    if (!x.isFinite()) return new Ctor(NaN);
    if (x.isZero()) return new Ctor(x);
    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;
    Ctor.rounding = 1;
    x = sine(Ctor, toLessThanHalfPi(Ctor, x));
    Ctor.precision = pr;
    Ctor.rounding = rm;
    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);
  };
  P.squareRoot = P.sqrt = function() {
    var m, n, sd, r, rep, t, x = this, d = x.d, e = x.e, s = x.s, Ctor = x.constructor;
    if (s !== 1 || !d || !d[0]) {
      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);
    }
    external = false;
    s = Math.sqrt(+x);
    if (s == 0 || s == 1 / 0) {
      n = digitsToString(d);
      if ((n.length + e) % 2 == 0) n += "0";
      s = Math.sqrt(n);
      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);
      if (s == 1 / 0) {
        n = "5e" + e;
      } else {
        n = s.toExponential();
        n = n.slice(0, n.indexOf("e") + 1) + e;
      }
      r = new Ctor(n);
    } else {
      r = new Ctor(s.toString());
    }
    sd = (e = Ctor.precision) + 3;
    for (; ; ) {
      t = r;
      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);
      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {
        n = n.slice(sd - 3, sd + 1);
        if (n == "9999" || !rep && n == "4999") {
          if (!rep) {
            finalise(t, e + 1, 0);
            if (t.times(t).eq(x)) {
              r = t;
              break;
            }
          }
          sd += 4;
          rep = 1;
        } else {
          if (!+n || !+n.slice(1) && n.charAt(0) == "5") {
            finalise(r, e + 1, 1);
            m = !r.times(r).eq(x);
          }
          break;
        }
      }
    }
    external = true;
    return finalise(r, e, Ctor.rounding, m);
  };
  P.tangent = P.tan = function() {
    var pr, rm, x = this, Ctor = x.constructor;
    if (!x.isFinite()) return new Ctor(NaN);
    if (x.isZero()) return new Ctor(x);
    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + 10;
    Ctor.rounding = 1;
    x = x.sin();
    x.s = 1;
    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);
    Ctor.precision = pr;
    Ctor.rounding = rm;
    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);
  };
  P.times = P.mul = function(y) {
    var carry, e, i, k, r, rL, t, xdL, ydL, x = this, Ctor = x.constructor, xd = x.d, yd = (y = new Ctor(y)).d;
    y.s *= x.s;
    if (!xd || !xd[0] || !yd || !yd[0]) {
      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd ? NaN : !xd || !yd ? y.s / 0 : y.s * 0);
    }
    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);
    xdL = xd.length;
    ydL = yd.length;
    if (xdL < ydL) {
      r = xd;
      xd = yd;
      yd = r;
      rL = xdL;
      xdL = ydL;
      ydL = rL;
    }
    r = [];
    rL = xdL + ydL;
    for (i = rL; i--; ) r.push(0);
    for (i = ydL; --i >= 0; ) {
      carry = 0;
      for (k = xdL + i; k > i; ) {
        t = r[k] + yd[i] * xd[k - i - 1] + carry;
        r[k--] = t % BASE | 0;
        carry = t / BASE | 0;
      }
      r[k] = (r[k] + carry) % BASE | 0;
    }
    for (; !r[--rL]; ) r.pop();
    if (carry) ++e;
    else r.shift();
    y.d = r;
    y.e = getBase10Exponent(r, e);
    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;
  };
  P.toBinary = function(sd, rm) {
    return toStringBinary(this, 2, sd, rm);
  };
  P.toDecimalPlaces = P.toDP = function(dp, rm) {
    var x = this, Ctor = x.constructor;
    x = new Ctor(x);
    if (dp === void 0) return x;
    checkInt32(dp, 0, MAX_DIGITS);
    if (rm === void 0) rm = Ctor.rounding;
    else checkInt32(rm, 0, 8);
    return finalise(x, dp + x.e + 1, rm);
  };
  P.toExponential = function(dp, rm) {
    var str, x = this, Ctor = x.constructor;
    if (dp === void 0) {
      str = finiteToString(x, true);
    } else {
      checkInt32(dp, 0, MAX_DIGITS);
      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);
      x = finalise(new Ctor(x), dp + 1, rm);
      str = finiteToString(x, true, dp + 1);
    }
    return x.isNeg() && !x.isZero() ? "-" + str : str;
  };
  P.toFixed = function(dp, rm) {
    var str, y, x = this, Ctor = x.constructor;
    if (dp === void 0) {
      str = finiteToString(x);
    } else {
      checkInt32(dp, 0, MAX_DIGITS);
      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);
      y = finalise(new Ctor(x), dp + x.e + 1, rm);
      str = finiteToString(y, false, dp + y.e + 1);
    }
    return x.isNeg() && !x.isZero() ? "-" + str : str;
  };
  P.toFraction = function(maxD) {
    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r, x = this, xd = x.d, Ctor = x.constructor;
    if (!xd) return new Ctor(x);
    n1 = d0 = new Ctor(1);
    d1 = n0 = new Ctor(0);
    d = new Ctor(d1);
    e = d.e = getPrecision(xd) - x.e - 1;
    k = e % LOG_BASE;
    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);
    if (maxD == null) {
      maxD = e > 0 ? d : n1;
    } else {
      n = new Ctor(maxD);
      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);
      maxD = n.gt(d) ? e > 0 ? d : n1 : n;
    }
    external = false;
    n = new Ctor(digitsToString(xd));
    pr = Ctor.precision;
    Ctor.precision = e = xd.length * LOG_BASE * 2;
    for (; ; ) {
      q = divide(n, d, 0, 1, 1);
      d2 = d0.plus(q.times(d1));
      if (d2.cmp(maxD) == 1) break;
      d0 = d1;
      d1 = d2;
      d2 = n1;
      n1 = n0.plus(q.times(d2));
      n0 = d2;
      d2 = d;
      d = n.minus(q.times(d2));
      n = d2;
    }
    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);
    n0 = n0.plus(d2.times(n1));
    d0 = d0.plus(d2.times(d1));
    n0.s = n1.s = x.s;
    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];
    Ctor.precision = pr;
    external = true;
    return r;
  };
  P.toHexadecimal = P.toHex = function(sd, rm) {
    return toStringBinary(this, 16, sd, rm);
  };
  P.toNearest = function(y, rm) {
    var x = this, Ctor = x.constructor;
    x = new Ctor(x);
    if (y == null) {
      if (!x.d) return x;
      y = new Ctor(1);
      rm = Ctor.rounding;
    } else {
      y = new Ctor(y);
      if (rm === void 0) {
        rm = Ctor.rounding;
      } else {
        checkInt32(rm, 0, 8);
      }
      if (!x.d) return y.s ? x : y;
      if (!y.d) {
        if (y.s) y.s = x.s;
        return y;
      }
    }
    if (y.d[0]) {
      external = false;
      x = divide(x, y, 0, rm, 1).times(y);
      external = true;
      finalise(x);
    } else {
      y.s = x.s;
      x = y;
    }
    return x;
  };
  P.toNumber = function() {
    return +this;
  };
  P.toOctal = function(sd, rm) {
    return toStringBinary(this, 8, sd, rm);
  };
  P.toPower = P.pow = function(y) {
    var e, k, pr, r, rm, s, x = this, Ctor = x.constructor, yn = +(y = new Ctor(y));
    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));
    x = new Ctor(x);
    if (x.eq(1)) return x;
    pr = Ctor.precision;
    rm = Ctor.rounding;
    if (y.eq(1)) return finalise(x, pr, rm);
    e = mathfloor(y.e / LOG_BASE);
    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {
      r = intPow(Ctor, x, k, pr);
      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);
    }
    s = x.s;
    if (s < 0) {
      if (e < y.d.length - 1) return new Ctor(NaN);
      if ((y.d[e] & 1) == 0) s = 1;
      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {
        x.s = s;
        return x;
      }
    }
    k = mathpow(+x, yn);
    e = k == 0 || !isFinite(k) ? mathfloor(yn * (Math.log("0." + digitsToString(x.d)) / Math.LN10 + x.e + 1)) : new Ctor(k + "").e;
    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);
    external = false;
    Ctor.rounding = x.s = 1;
    k = Math.min(12, (e + "").length);
    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);
    if (r.d) {
      r = finalise(r, pr + 5, 1);
      if (checkRoundingDigits(r.d, pr, rm)) {
        e = pr + 10;
        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);
        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {
          r = finalise(r, pr + 1, 0);
        }
      }
    }
    r.s = s;
    external = true;
    Ctor.rounding = rm;
    return finalise(r, pr, rm);
  };
  P.toPrecision = function(sd, rm) {
    var str, x = this, Ctor = x.constructor;
    if (sd === void 0) {
      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
    } else {
      checkInt32(sd, 1, MAX_DIGITS);
      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);
      x = finalise(new Ctor(x), sd, rm);
      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);
    }
    return x.isNeg() && !x.isZero() ? "-" + str : str;
  };
  P.toSignificantDigits = P.toSD = function(sd, rm) {
    var x = this, Ctor = x.constructor;
    if (sd === void 0) {
      sd = Ctor.precision;
      rm = Ctor.rounding;
    } else {
      checkInt32(sd, 1, MAX_DIGITS);
      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);
    }
    return finalise(new Ctor(x), sd, rm);
  };
  P.toString = function() {
    var x = this, Ctor = x.constructor, str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
    return x.isNeg() && !x.isZero() ? "-" + str : str;
  };
  P.truncated = P.trunc = function() {
    return finalise(new this.constructor(this), this.e + 1, 1);
  };
  P.valueOf = P.toJSON = function() {
    var x = this, Ctor = x.constructor, str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
    return x.isNeg() ? "-" + str : str;
  };
  function digitsToString(d) {
    var i, k, ws, indexOfLastWord = d.length - 1, str = "", w = d[0];
    if (indexOfLastWord > 0) {
      str += w;
      for (i = 1; i < indexOfLastWord; i++) {
        ws = d[i] + "";
        k = LOG_BASE - ws.length;
        if (k) str += getZeroString(k);
        str += ws;
      }
      w = d[i];
      ws = w + "";
      k = LOG_BASE - ws.length;
      if (k) str += getZeroString(k);
    } else if (w === 0) {
      return "0";
    }
    for (; w % 10 === 0; ) w /= 10;
    return str + w;
  }
  function checkInt32(i, min2, max2) {
    if (i !== ~~i || i < min2 || i > max2) {
      throw Error(invalidArgument + i);
    }
  }
  function checkRoundingDigits(d, i, rm, repeating) {
    var di, k, r, rd;
    for (k = d[0]; k >= 10; k /= 10) --i;
    if (--i < 0) {
      i += LOG_BASE;
      di = 0;
    } else {
      di = Math.ceil((i + 1) / LOG_BASE);
      i %= LOG_BASE;
    }
    k = mathpow(10, LOG_BASE - i);
    rd = d[di] % k | 0;
    if (repeating == null) {
      if (i < 3) {
        if (i == 0) rd = rd / 100 | 0;
        else if (i == 1) rd = rd / 10 | 0;
        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 5e4 || rd == 0;
      } else {
        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 || (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;
      }
    } else {
      if (i < 4) {
        if (i == 0) rd = rd / 1e3 | 0;
        else if (i == 1) rd = rd / 100 | 0;
        else if (i == 2) rd = rd / 10 | 0;
        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;
      } else {
        r = ((repeating || rm < 4) && rd + 1 == k || !repeating && rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 1e3 | 0) == mathpow(10, i - 3) - 1;
      }
    }
    return r;
  }
  function convertBase(str, baseIn, baseOut) {
    var j, arr = [0], arrL, i = 0, strL = str.length;
    for (; i < strL; ) {
      for (arrL = arr.length; arrL--; ) arr[arrL] *= baseIn;
      arr[0] += NUMERALS.indexOf(str.charAt(i++));
      for (j = 0; j < arr.length; j++) {
        if (arr[j] > baseOut - 1) {
          if (arr[j + 1] === void 0) arr[j + 1] = 0;
          arr[j + 1] += arr[j] / baseOut | 0;
          arr[j] %= baseOut;
        }
      }
    }
    return arr.reverse();
  }
  function cosine(Ctor, x) {
    var k, len, y;
    if (x.isZero()) return x;
    len = x.d.length;
    if (len < 32) {
      k = Math.ceil(len / 3);
      y = (1 / tinyPow(4, k)).toString();
    } else {
      k = 16;
      y = "2.3283064365386962890625e-10";
    }
    Ctor.precision += k;
    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));
    for (var i = k; i--; ) {
      var cos2x = x.times(x);
      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);
    }
    Ctor.precision -= k;
    return x;
  }
  var divide = /* @__PURE__ */ function() {
    function multiplyInteger(x, k, base) {
      var temp, carry = 0, i = x.length;
      for (x = x.slice(); i--; ) {
        temp = x[i] * k + carry;
        x[i] = temp % base | 0;
        carry = temp / base | 0;
      }
      if (carry) x.unshift(carry);
      return x;
    }
    function compare(a, b, aL, bL) {
      var i, r;
      if (aL != bL) {
        r = aL > bL ? 1 : -1;
      } else {
        for (i = r = 0; i < aL; i++) {
          if (a[i] != b[i]) {
            r = a[i] > b[i] ? 1 : -1;
            break;
          }
        }
      }
      return r;
    }
    function subtract(a, b, aL, base) {
      var i = 0;
      for (; aL--; ) {
        a[aL] -= i;
        i = a[aL] < b[aL] ? 1 : 0;
        a[aL] = i * base + a[aL] - b[aL];
      }
      for (; !a[0] && a.length > 1; ) a.shift();
    }
    return function(x, y, pr, rm, dp, base) {
      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz, Ctor = x.constructor, sign2 = x.s == y.s ? 1 : -1, xd = x.d, yd = y.d;
      if (!xd || !xd[0] || !yd || !yd[0]) {
        return new Ctor(
          // Return NaN if either NaN, or both Infinity or 0.
          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN : (
            // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.
            xd && xd[0] == 0 || !yd ? sign2 * 0 : sign2 / 0
          )
        );
      }
      if (base) {
        logBase = 1;
        e = x.e - y.e;
      } else {
        base = BASE;
        logBase = LOG_BASE;
        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);
      }
      yL = yd.length;
      xL = xd.length;
      q = new Ctor(sign2);
      qd = q.d = [];
      for (i = 0; yd[i] == (xd[i] || 0); i++) ;
      if (yd[i] > (xd[i] || 0)) e--;
      if (pr == null) {
        sd = pr = Ctor.precision;
        rm = Ctor.rounding;
      } else if (dp) {
        sd = pr + (x.e - y.e) + 1;
      } else {
        sd = pr;
      }
      if (sd < 0) {
        qd.push(1);
        more = true;
      } else {
        sd = sd / logBase + 2 | 0;
        i = 0;
        if (yL == 1) {
          k = 0;
          yd = yd[0];
          sd++;
          for (; (i < xL || k) && sd--; i++) {
            t = k * base + (xd[i] || 0);
            qd[i] = t / yd | 0;
            k = t % yd | 0;
          }
          more = k || i < xL;
        } else {
          k = base / (yd[0] + 1) | 0;
          if (k > 1) {
            yd = multiplyInteger(yd, k, base);
            xd = multiplyInteger(xd, k, base);
            yL = yd.length;
            xL = xd.length;
          }
          xi = yL;
          rem = xd.slice(0, yL);
          remL = rem.length;
          for (; remL < yL; ) rem[remL++] = 0;
          yz = yd.slice();
          yz.unshift(0);
          yd0 = yd[0];
          if (yd[1] >= base / 2) ++yd0;
          do {
            k = 0;
            cmp = compare(yd, rem, yL, remL);
            if (cmp < 0) {
              rem0 = rem[0];
              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);
              k = rem0 / yd0 | 0;
              if (k > 1) {
                if (k >= base) k = base - 1;
                prod = multiplyInteger(yd, k, base);
                prodL = prod.length;
                remL = rem.length;
                cmp = compare(prod, rem, prodL, remL);
                if (cmp == 1) {
                  k--;
                  subtract(prod, yL < prodL ? yz : yd, prodL, base);
                }
              } else {
                if (k == 0) cmp = k = 1;
                prod = yd.slice();
              }
              prodL = prod.length;
              if (prodL < remL) prod.unshift(0);
              subtract(rem, prod, remL, base);
              if (cmp == -1) {
                remL = rem.length;
                cmp = compare(yd, rem, yL, remL);
                if (cmp < 1) {
                  k++;
                  subtract(rem, yL < remL ? yz : yd, remL, base);
                }
              }
              remL = rem.length;
            } else if (cmp === 0) {
              k++;
              rem = [0];
            }
            qd[i++] = k;
            if (cmp && rem[0]) {
              rem[remL++] = xd[xi] || 0;
            } else {
              rem = [xd[xi]];
              remL = 1;
            }
          } while ((xi++ < xL || rem[0] !== void 0) && sd--);
          more = rem[0] !== void 0;
        }
        if (!qd[0]) qd.shift();
      }
      if (logBase == 1) {
        q.e = e;
        inexact = more;
      } else {
        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;
        q.e = i + e * logBase - 1;
        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);
      }
      return q;
    };
  }();
  function finalise(x, sd, rm, isTruncated) {
    var digits, i, j, k, rd, roundUp, w, xd, xdi, Ctor = x.constructor;
    out: if (sd != null) {
      xd = x.d;
      if (!xd) return x;
      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;
      i = sd - digits;
      if (i < 0) {
        i += LOG_BASE;
        j = sd;
        w = xd[xdi = 0];
        rd = w / mathpow(10, digits - j - 1) % 10 | 0;
      } else {
        xdi = Math.ceil((i + 1) / LOG_BASE);
        k = xd.length;
        if (xdi >= k) {
          if (isTruncated) {
            for (; k++ <= xdi; ) xd.push(0);
            w = rd = 0;
            digits = 1;
            i %= LOG_BASE;
            j = i - LOG_BASE + 1;
          } else {
            break out;
          }
        } else {
          w = k = xd[xdi];
          for (digits = 1; k >= 10; k /= 10) digits++;
          i %= LOG_BASE;
          j = i - LOG_BASE + digits;
          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;
        }
      }
      isTruncated = isTruncated || sd < 0 || xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));
      roundUp = rm < 4 ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 && // Check whether the digit to the left of the rounding digit is odd.
      (i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));
      if (sd < 1 || !xd[0]) {
        xd.length = 0;
        if (roundUp) {
          sd -= x.e + 1;
          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);
          x.e = -sd || 0;
        } else {
          xd[0] = x.e = 0;
        }
        return x;
      }
      if (i == 0) {
        xd.length = xdi;
        k = 1;
        xdi--;
      } else {
        xd.length = xdi + 1;
        k = mathpow(10, LOG_BASE - i);
        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;
      }
      if (roundUp) {
        for (; ; ) {
          if (xdi == 0) {
            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;
            j = xd[0] += k;
            for (k = 1; j >= 10; j /= 10) k++;
            if (i != k) {
              x.e++;
              if (xd[0] == BASE) xd[0] = 1;
            }
            break;
          } else {
            xd[xdi] += k;
            if (xd[xdi] != BASE) break;
            xd[xdi--] = 0;
            k = 1;
          }
        }
      }
      for (i = xd.length; xd[--i] === 0; ) xd.pop();
    }
    if (external) {
      if (x.e > Ctor.maxE) {
        x.d = null;
        x.e = NaN;
      } else if (x.e < Ctor.minE) {
        x.e = 0;
        x.d = [0];
      }
    }
    return x;
  }
  function finiteToString(x, isExp, sd) {
    if (!x.isFinite()) return nonFiniteToString(x);
    var k, e = x.e, str = digitsToString(x.d), len = str.length;
    if (isExp) {
      if (sd && (k = sd - len) > 0) {
        str = str.charAt(0) + "." + str.slice(1) + getZeroString(k);
      } else if (len > 1) {
        str = str.charAt(0) + "." + str.slice(1);
      }
      str = str + (x.e < 0 ? "e" : "e+") + x.e;
    } else if (e < 0) {
      str = "0." + getZeroString(-e - 1) + str;
      if (sd && (k = sd - len) > 0) str += getZeroString(k);
    } else if (e >= len) {
      str += getZeroString(e + 1 - len);
      if (sd && (k = sd - e - 1) > 0) str = str + "." + getZeroString(k);
    } else {
      if ((k = e + 1) < len) str = str.slice(0, k) + "." + str.slice(k);
      if (sd && (k = sd - len) > 0) {
        if (e + 1 === len) str += ".";
        str += getZeroString(k);
      }
    }
    return str;
  }
  function getBase10Exponent(digits, e) {
    var w = digits[0];
    for (e *= LOG_BASE; w >= 10; w /= 10) e++;
    return e;
  }
  function getLn10(Ctor, sd, pr) {
    if (sd > LN10_PRECISION) {
      external = true;
      if (pr) Ctor.precision = pr;
      throw Error(precisionLimitExceeded);
    }
    return finalise(new Ctor(LN10), sd, 1, true);
  }
  function getPi(Ctor, sd, rm) {
    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);
    return finalise(new Ctor(PI), sd, rm, true);
  }
  function getPrecision(digits) {
    var w = digits.length - 1, len = w * LOG_BASE + 1;
    w = digits[w];
    if (w) {
      for (; w % 10 == 0; w /= 10) len--;
      for (w = digits[0]; w >= 10; w /= 10) len++;
    }
    return len;
  }
  function getZeroString(k) {
    var zs = "";
    for (; k--; ) zs += "0";
    return zs;
  }
  function intPow(Ctor, x, n, pr) {
    var isTruncated, r = new Ctor(1), k = Math.ceil(pr / LOG_BASE + 4);
    external = false;
    for (; ; ) {
      if (n % 2) {
        r = r.times(x);
        if (truncate(r.d, k)) isTruncated = true;
      }
      n = mathfloor(n / 2);
      if (n === 0) {
        n = r.d.length - 1;
        if (isTruncated && r.d[n] === 0) ++r.d[n];
        break;
      }
      x = x.times(x);
      truncate(x.d, k);
    }
    external = true;
    return r;
  }
  function isOdd(n) {
    return n.d[n.d.length - 1] & 1;
  }
  function maxOrMin(Ctor, args, n) {
    var k, y, x = new Ctor(args[0]), i = 0;
    for (; ++i < args.length; ) {
      y = new Ctor(args[i]);
      if (!y.s) {
        x = y;
        break;
      }
      k = x.cmp(y);
      if (k === n || k === 0 && x.s === n) {
        x = y;
      }
    }
    return x;
  }
  function naturalExponential(x, sd) {
    var denominator, guard, j, pow2, sum2, t, wpr, rep = 0, i = 0, k = 0, Ctor = x.constructor, rm = Ctor.rounding, pr = Ctor.precision;
    if (!x.d || !x.d[0] || x.e > 17) {
      return new Ctor(x.d ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0 : x.s ? x.s < 0 ? 0 : x : 0 / 0);
    }
    if (sd == null) {
      external = false;
      wpr = pr;
    } else {
      wpr = sd;
    }
    t = new Ctor(0.03125);
    while (x.e > -2) {
      x = x.times(t);
      k += 5;
    }
    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;
    wpr += guard;
    denominator = pow2 = sum2 = new Ctor(1);
    Ctor.precision = wpr;
    for (; ; ) {
      pow2 = finalise(pow2.times(x), wpr, 1);
      denominator = denominator.times(++i);
      t = sum2.plus(divide(pow2, denominator, wpr, 1));
      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum2.d).slice(0, wpr)) {
        j = k;
        while (j--) sum2 = finalise(sum2.times(sum2), wpr, 1);
        if (sd == null) {
          if (rep < 3 && checkRoundingDigits(sum2.d, wpr - guard, rm, rep)) {
            Ctor.precision = wpr += 10;
            denominator = pow2 = t = new Ctor(1);
            i = 0;
            rep++;
          } else {
            return finalise(sum2, Ctor.precision = pr, rm, external = true);
          }
        } else {
          Ctor.precision = pr;
          return sum2;
        }
      }
      sum2 = t;
    }
  }
  function naturalLogarithm(y, sd) {
    var c, c0, denominator, e, numerator, rep, sum2, t, wpr, x1, x2, n = 1, guard = 10, x = y, xd = x.d, Ctor = x.constructor, rm = Ctor.rounding, pr = Ctor.precision;
    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {
      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);
    }
    if (sd == null) {
      external = false;
      wpr = pr;
    } else {
      wpr = sd;
    }
    Ctor.precision = wpr += guard;
    c = digitsToString(xd);
    c0 = c.charAt(0);
    if (Math.abs(e = x.e) < 15e14) {
      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {
        x = x.times(y);
        c = digitsToString(x.d);
        c0 = c.charAt(0);
        n++;
      }
      e = x.e;
      if (c0 > 1) {
        x = new Ctor("0." + c);
        e++;
      } else {
        x = new Ctor(c0 + "." + c.slice(1));
      }
    } else {
      t = getLn10(Ctor, wpr + 2, pr).times(e + "");
      x = naturalLogarithm(new Ctor(c0 + "." + c.slice(1)), wpr - guard).plus(t);
      Ctor.precision = pr;
      return sd == null ? finalise(x, pr, rm, external = true) : x;
    }
    x1 = x;
    sum2 = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);
    x2 = finalise(x.times(x), wpr, 1);
    denominator = 3;
    for (; ; ) {
      numerator = finalise(numerator.times(x2), wpr, 1);
      t = sum2.plus(divide(numerator, new Ctor(denominator), wpr, 1));
      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum2.d).slice(0, wpr)) {
        sum2 = sum2.times(2);
        if (e !== 0) sum2 = sum2.plus(getLn10(Ctor, wpr + 2, pr).times(e + ""));
        sum2 = divide(sum2, new Ctor(n), wpr, 1);
        if (sd == null) {
          if (checkRoundingDigits(sum2.d, wpr - guard, rm, rep)) {
            Ctor.precision = wpr += guard;
            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);
            x2 = finalise(x.times(x), wpr, 1);
            denominator = rep = 1;
          } else {
            return finalise(sum2, Ctor.precision = pr, rm, external = true);
          }
        } else {
          Ctor.precision = pr;
          return sum2;
        }
      }
      sum2 = t;
      denominator += 2;
    }
  }
  function nonFiniteToString(x) {
    return String(x.s * x.s / 0);
  }
  function parseDecimal(x, str) {
    var e, i, len;
    if ((e = str.indexOf(".")) > -1) str = str.replace(".", "");
    if ((i = str.search(/e/i)) > 0) {
      if (e < 0) e = i;
      e += +str.slice(i + 1);
      str = str.substring(0, i);
    } else if (e < 0) {
      e = str.length;
    }
    for (i = 0; str.charCodeAt(i) === 48; i++) ;
    for (len = str.length; str.charCodeAt(len - 1) === 48; --len) ;
    str = str.slice(i, len);
    if (str) {
      len -= i;
      x.e = e = e - i - 1;
      x.d = [];
      i = (e + 1) % LOG_BASE;
      if (e < 0) i += LOG_BASE;
      if (i < len) {
        if (i) x.d.push(+str.slice(0, i));
        for (len -= LOG_BASE; i < len; ) x.d.push(+str.slice(i, i += LOG_BASE));
        str = str.slice(i);
        i = LOG_BASE - str.length;
      } else {
        i -= len;
      }
      for (; i--; ) str += "0";
      x.d.push(+str);
      if (external) {
        if (x.e > x.constructor.maxE) {
          x.d = null;
          x.e = NaN;
        } else if (x.e < x.constructor.minE) {
          x.e = 0;
          x.d = [0];
        }
      }
    } else {
      x.e = 0;
      x.d = [0];
    }
    return x;
  }
  function parseOther(x, str) {
    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;
    if (str.indexOf("_") > -1) {
      str = str.replace(/(\d)_(?=\d)/g, "$1");
      if (isDecimal.test(str)) return parseDecimal(x, str);
    } else if (str === "Infinity" || str === "NaN") {
      if (!+str) x.s = NaN;
      x.e = NaN;
      x.d = null;
      return x;
    }
    if (isHex$1.test(str)) {
      base = 16;
      str = str.toLowerCase();
    } else if (isBinary.test(str)) {
      base = 2;
    } else if (isOctal.test(str)) {
      base = 8;
    } else {
      throw Error(invalidArgument + str);
    }
    i = str.search(/p/i);
    if (i > 0) {
      p = +str.slice(i + 1);
      str = str.substring(2, i);
    } else {
      str = str.slice(2);
    }
    i = str.indexOf(".");
    isFloat = i >= 0;
    Ctor = x.constructor;
    if (isFloat) {
      str = str.replace(".", "");
      len = str.length;
      i = len - i;
      divisor = intPow(Ctor, new Ctor(base), i, i * 2);
    }
    xd = convertBase(str, base, BASE);
    xe = xd.length - 1;
    for (i = xe; xd[i] === 0; --i) xd.pop();
    if (i < 0) return new Ctor(x.s * 0);
    x.e = getBase10Exponent(xd, xe);
    x.d = xd;
    external = false;
    if (isFloat) x = divide(x, divisor, len * 4);
    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));
    external = true;
    return x;
  }
  function sine(Ctor, x) {
    var k, len = x.d.length;
    if (len < 3) {
      return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);
    }
    k = 1.4 * Math.sqrt(len);
    k = k > 16 ? 16 : k | 0;
    x = x.times(1 / tinyPow(5, k));
    x = taylorSeries(Ctor, 2, x, x);
    var sin2_x, d5 = new Ctor(5), d16 = new Ctor(16), d20 = new Ctor(20);
    for (; k--; ) {
      sin2_x = x.times(x);
      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));
    }
    return x;
  }
  function taylorSeries(Ctor, n, x, y, isHyperbolic) {
    var j, t, u, x2, pr = Ctor.precision, k = Math.ceil(pr / LOG_BASE);
    external = false;
    x2 = x.times(x);
    u = new Ctor(y);
    for (; ; ) {
      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);
      u = isHyperbolic ? y.plus(t) : y.minus(t);
      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);
      t = u.plus(y);
      if (t.d[k] !== void 0) {
        for (j = k; t.d[j] === u.d[j] && j--; ) ;
        if (j == -1) break;
      }
      j = u;
      u = y;
      y = t;
      t = j;
    }
    external = true;
    t.d.length = k + 1;
    return t;
  }
  function tinyPow(b, e) {
    var n = b;
    while (--e) n *= b;
    return n;
  }
  function toLessThanHalfPi(Ctor, x) {
    var t, isNeg = x.s < 0, pi = getPi(Ctor, Ctor.precision, 1), halfPi = pi.times(0.5);
    x = x.abs();
    if (x.lte(halfPi)) {
      quadrant = isNeg ? 4 : 1;
      return x;
    }
    t = x.divToInt(pi);
    if (t.isZero()) {
      quadrant = isNeg ? 3 : 2;
    } else {
      x = x.minus(t.times(pi));
      if (x.lte(halfPi)) {
        quadrant = isOdd(t) ? isNeg ? 2 : 3 : isNeg ? 4 : 1;
        return x;
      }
      quadrant = isOdd(t) ? isNeg ? 1 : 4 : isNeg ? 3 : 2;
    }
    return x.minus(pi).abs();
  }
  function toStringBinary(x, baseOut, sd, rm) {
    var base, e, i, k, len, roundUp, str, xd, y, Ctor = x.constructor, isExp = sd !== void 0;
    if (isExp) {
      checkInt32(sd, 1, MAX_DIGITS);
      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);
    } else {
      sd = Ctor.precision;
      rm = Ctor.rounding;
    }
    if (!x.isFinite()) {
      str = nonFiniteToString(x);
    } else {
      str = finiteToString(x);
      i = str.indexOf(".");
      if (isExp) {
        base = 2;
        if (baseOut == 16) {
          sd = sd * 4 - 3;
        } else if (baseOut == 8) {
          sd = sd * 3 - 2;
        }
      } else {
        base = baseOut;
      }
      if (i >= 0) {
        str = str.replace(".", "");
        y = new Ctor(1);
        y.e = str.length - i;
        y.d = convertBase(finiteToString(y), 10, base);
        y.e = y.d.length;
      }
      xd = convertBase(str, 10, base);
      e = len = xd.length;
      for (; xd[--len] == 0; ) xd.pop();
      if (!xd[0]) {
        str = isExp ? "0p+0" : "0";
      } else {
        if (i < 0) {
          e--;
        } else {
          x = new Ctor(x);
          x.d = xd;
          x.e = e;
          x = divide(x, y, sd, rm, 0, base);
          xd = x.d;
          e = x.e;
          roundUp = inexact;
        }
        i = xd[sd];
        k = base / 2;
        roundUp = roundUp || xd[sd + 1] !== void 0;
        roundUp = rm < 4 ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2)) : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 || rm === (x.s < 0 ? 8 : 7));
        xd.length = sd;
        if (roundUp) {
          for (; ++xd[--sd] > base - 1; ) {
            xd[sd] = 0;
            if (!sd) {
              ++e;
              xd.unshift(1);
            }
          }
        }
        for (len = xd.length; !xd[len - 1]; --len) ;
        for (i = 0, str = ""; i < len; i++) str += NUMERALS.charAt(xd[i]);
        if (isExp) {
          if (len > 1) {
            if (baseOut == 16 || baseOut == 8) {
              i = baseOut == 16 ? 4 : 3;
              for (--len; len % i; len++) str += "0";
              xd = convertBase(str, base, baseOut);
              for (len = xd.length; !xd[len - 1]; --len) ;
              for (i = 1, str = "1."; i < len; i++) str += NUMERALS.charAt(xd[i]);
            } else {
              str = str.charAt(0) + "." + str.slice(1);
            }
          }
          str = str + (e < 0 ? "p" : "p+") + e;
        } else if (e < 0) {
          for (; ++e; ) str = "0" + str;
          str = "0." + str;
        } else {
          if (++e > len) for (e -= len; e--; ) str += "0";
          else if (e < len) str = str.slice(0, e) + "." + str.slice(e);
        }
      }
      str = (baseOut == 16 ? "0x" : baseOut == 2 ? "0b" : baseOut == 8 ? "0o" : "") + str;
    }
    return x.s < 0 ? "-" + str : str;
  }
  function truncate(arr, len) {
    if (arr.length > len) {
      arr.length = len;
      return true;
    }
  }
  function abs(x) {
    return new this(x).abs();
  }
  function acos(x) {
    return new this(x).acos();
  }
  function acosh(x) {
    return new this(x).acosh();
  }
  function add(x, y) {
    return new this(x).plus(y);
  }
  function asin(x) {
    return new this(x).asin();
  }
  function asinh(x) {
    return new this(x).asinh();
  }
  function atan(x) {
    return new this(x).atan();
  }
  function atanh(x) {
    return new this(x).atanh();
  }
  function atan2(y, x) {
    y = new this(y);
    x = new this(x);
    var r, pr = this.precision, rm = this.rounding, wpr = pr + 4;
    if (!y.s || !x.s) {
      r = new this(NaN);
    } else if (!y.d && !x.d) {
      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);
      r.s = y.s;
    } else if (!x.d || y.isZero()) {
      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);
      r.s = y.s;
    } else if (!y.d || x.isZero()) {
      r = getPi(this, wpr, 1).times(0.5);
      r.s = y.s;
    } else if (x.s < 0) {
      this.precision = wpr;
      this.rounding = 1;
      r = this.atan(divide(y, x, wpr, 1));
      x = getPi(this, wpr, 1);
      this.precision = pr;
      this.rounding = rm;
      r = y.s < 0 ? r.minus(x) : r.plus(x);
    } else {
      r = this.atan(divide(y, x, wpr, 1));
    }
    return r;
  }
  function cbrt(x) {
    return new this(x).cbrt();
  }
  function ceil(x) {
    return finalise(x = new this(x), x.e + 1, 2);
  }
  function clamp(x, min2, max2) {
    return new this(x).clamp(min2, max2);
  }
  function config(obj) {
    if (!obj || typeof obj !== "object") throw Error(decimalError + "Object expected");
    var i, p, v, useDefaults = obj.defaults === true, ps = [
      "precision",
      1,
      MAX_DIGITS,
      "rounding",
      0,
      8,
      "toExpNeg",
      -9e15,
      0,
      "toExpPos",
      0,
      EXP_LIMIT,
      "maxE",
      0,
      EXP_LIMIT,
      "minE",
      -9e15,
      0,
      "modulo",
      0,
      9
    ];
    for (i = 0; i < ps.length; i += 3) {
      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];
      if ((v = obj[p]) !== void 0) {
        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;
        else throw Error(invalidArgument + p + ": " + v);
      }
    }
    if (p = "crypto", useDefaults) this[p] = DEFAULTS[p];
    if ((v = obj[p]) !== void 0) {
      if (v === true || v === false || v === 0 || v === 1) {
        if (v) {
          if (typeof crypto != "undefined" && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
            this[p] = true;
          } else {
            throw Error(cryptoUnavailable);
          }
        } else {
          this[p] = false;
        }
      } else {
        throw Error(invalidArgument + p + ": " + v);
      }
    }
    return this;
  }
  function cos(x) {
    return new this(x).cos();
  }
  function cosh(x) {
    return new this(x).cosh();
  }
  function clone(obj) {
    var i, p, ps;
    function Decimal2(v) {
      var e, i2, t, x = this;
      if (!(x instanceof Decimal2)) return new Decimal2(v);
      x.constructor = Decimal2;
      if (isDecimalInstance(v)) {
        x.s = v.s;
        if (external) {
          if (!v.d || v.e > Decimal2.maxE) {
            x.e = NaN;
            x.d = null;
          } else if (v.e < Decimal2.minE) {
            x.e = 0;
            x.d = [0];
          } else {
            x.e = v.e;
            x.d = v.d.slice();
          }
        } else {
          x.e = v.e;
          x.d = v.d ? v.d.slice() : v.d;
        }
        return;
      }
      t = typeof v;
      if (t === "number") {
        if (v === 0) {
          x.s = 1 / v < 0 ? -1 : 1;
          x.e = 0;
          x.d = [0];
          return;
        }
        if (v < 0) {
          v = -v;
          x.s = -1;
        } else {
          x.s = 1;
        }
        if (v === ~~v && v < 1e7) {
          for (e = 0, i2 = v; i2 >= 10; i2 /= 10) e++;
          if (external) {
            if (e > Decimal2.maxE) {
              x.e = NaN;
              x.d = null;
            } else if (e < Decimal2.minE) {
              x.e = 0;
              x.d = [0];
            } else {
              x.e = e;
              x.d = [v];
            }
          } else {
            x.e = e;
            x.d = [v];
          }
          return;
        }
        if (v * 0 !== 0) {
          if (!v) x.s = NaN;
          x.e = NaN;
          x.d = null;
          return;
        }
        return parseDecimal(x, v.toString());
      }
      if (t === "string") {
        if ((i2 = v.charCodeAt(0)) === 45) {
          v = v.slice(1);
          x.s = -1;
        } else {
          if (i2 === 43) v = v.slice(1);
          x.s = 1;
        }
        return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);
      }
      if (t === "bigint") {
        if (v < 0) {
          v = -v;
          x.s = -1;
        } else {
          x.s = 1;
        }
        return parseDecimal(x, v.toString());
      }
      throw Error(invalidArgument + v);
    }
    Decimal2.prototype = P;
    Decimal2.ROUND_UP = 0;
    Decimal2.ROUND_DOWN = 1;
    Decimal2.ROUND_CEIL = 2;
    Decimal2.ROUND_FLOOR = 3;
    Decimal2.ROUND_HALF_UP = 4;
    Decimal2.ROUND_HALF_DOWN = 5;
    Decimal2.ROUND_HALF_EVEN = 6;
    Decimal2.ROUND_HALF_CEIL = 7;
    Decimal2.ROUND_HALF_FLOOR = 8;
    Decimal2.EUCLID = 9;
    Decimal2.config = Decimal2.set = config;
    Decimal2.clone = clone;
    Decimal2.isDecimal = isDecimalInstance;
    Decimal2.abs = abs;
    Decimal2.acos = acos;
    Decimal2.acosh = acosh;
    Decimal2.add = add;
    Decimal2.asin = asin;
    Decimal2.asinh = asinh;
    Decimal2.atan = atan;
    Decimal2.atanh = atanh;
    Decimal2.atan2 = atan2;
    Decimal2.cbrt = cbrt;
    Decimal2.ceil = ceil;
    Decimal2.clamp = clamp;
    Decimal2.cos = cos;
    Decimal2.cosh = cosh;
    Decimal2.div = div;
    Decimal2.exp = exp;
    Decimal2.floor = floor;
    Decimal2.hypot = hypot;
    Decimal2.ln = ln;
    Decimal2.log = log;
    Decimal2.log10 = log10;
    Decimal2.log2 = log2;
    Decimal2.max = max;
    Decimal2.min = min;
    Decimal2.mod = mod$1;
    Decimal2.mul = mul;
    Decimal2.pow = pow;
    Decimal2.random = random;
    Decimal2.round = round;
    Decimal2.sign = sign;
    Decimal2.sin = sin;
    Decimal2.sinh = sinh;
    Decimal2.sqrt = sqrt;
    Decimal2.sub = sub;
    Decimal2.sum = sum;
    Decimal2.tan = tan;
    Decimal2.tanh = tanh;
    Decimal2.trunc = trunc;
    if (obj === void 0) obj = {};
    if (obj) {
      if (obj.defaults !== true) {
        ps = ["precision", "rounding", "toExpNeg", "toExpPos", "maxE", "minE", "modulo", "crypto"];
        for (i = 0; i < ps.length; ) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];
      }
    }
    Decimal2.config(obj);
    return Decimal2;
  }
  function div(x, y) {
    return new this(x).div(y);
  }
  function exp(x) {
    return new this(x).exp();
  }
  function floor(x) {
    return finalise(x = new this(x), x.e + 1, 3);
  }
  function hypot() {
    var i, n, t = new this(0);
    external = false;
    for (i = 0; i < arguments.length; ) {
      n = new this(arguments[i++]);
      if (!n.d) {
        if (n.s) {
          external = true;
          return new this(1 / 0);
        }
        t = n;
      } else if (t.d) {
        t = t.plus(n.times(n));
      }
    }
    external = true;
    return t.sqrt();
  }
  function isDecimalInstance(obj) {
    return obj instanceof Decimal || obj && obj.toStringTag === tag || false;
  }
  function ln(x) {
    return new this(x).ln();
  }
  function log(x, y) {
    return new this(x).log(y);
  }
  function log2(x) {
    return new this(x).log(2);
  }
  function log10(x) {
    return new this(x).log(10);
  }
  function max() {
    return maxOrMin(this, arguments, -1);
  }
  function min() {
    return maxOrMin(this, arguments, 1);
  }
  function mod$1(x, y) {
    return new this(x).mod(y);
  }
  function mul(x, y) {
    return new this(x).mul(y);
  }
  function pow(x, y) {
    return new this(x).pow(y);
  }
  function random(sd) {
    var d, e, k, n, i = 0, r = new this(1), rd = [];
    if (sd === void 0) sd = this.precision;
    else checkInt32(sd, 1, MAX_DIGITS);
    k = Math.ceil(sd / LOG_BASE);
    if (!this.crypto) {
      for (; i < k; ) rd[i++] = Math.random() * 1e7 | 0;
    } else if (crypto.getRandomValues) {
      d = crypto.getRandomValues(new Uint32Array(k));
      for (; i < k; ) {
        n = d[i];
        if (n >= 429e7) {
          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];
        } else {
          rd[i++] = n % 1e7;
        }
      }
    } else if (crypto.randomBytes) {
      d = crypto.randomBytes(k *= 4);
      for (; i < k; ) {
        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 127) << 24);
        if (n >= 214e7) {
          crypto.randomBytes(4).copy(d, i);
        } else {
          rd.push(n % 1e7);
          i += 4;
        }
      }
      i = k / 4;
    } else {
      throw Error(cryptoUnavailable);
    }
    k = rd[--i];
    sd %= LOG_BASE;
    if (k && sd) {
      n = mathpow(10, LOG_BASE - sd);
      rd[i] = (k / n | 0) * n;
    }
    for (; rd[i] === 0; i--) rd.pop();
    if (i < 0) {
      e = 0;
      rd = [0];
    } else {
      e = -1;
      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();
      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;
      if (k < LOG_BASE) e -= LOG_BASE - k;
    }
    r.e = e;
    r.d = rd;
    return r;
  }
  function round(x) {
    return finalise(x = new this(x), x.e + 1, this.rounding);
  }
  function sign(x) {
    x = new this(x);
    return x.d ? x.d[0] ? x.s : 0 * x.s : x.s || NaN;
  }
  function sin(x) {
    return new this(x).sin();
  }
  function sinh(x) {
    return new this(x).sinh();
  }
  function sqrt(x) {
    return new this(x).sqrt();
  }
  function sub(x, y) {
    return new this(x).sub(y);
  }
  function sum() {
    var i = 0, args = arguments, x = new this(args[i]);
    external = false;
    for (; x.s && ++i < args.length; ) x = x.plus(args[i]);
    external = true;
    return finalise(x, this.precision, this.rounding);
  }
  function tan(x) {
    return new this(x).tan();
  }
  function tanh(x) {
    return new this(x).tanh();
  }
  function trunc(x) {
    return finalise(x = new this(x), x.e + 1, 1);
  }
  P[Symbol.for("nodejs.util.inspect.custom")] = P.toString;
  P[Symbol.toStringTag] = "Decimal";
  var Decimal = P.constructor = clone(DEFAULTS);
  LN10 = new Decimal(LN10);
  PI = new Decimal(PI);
  new Decimal(10);
  var ZERO = new Decimal(0);
  var NEGATIVE_ZERO = new Decimal(-0);
  function memoize(fn, options) {
    var cache = options && options.cache ? options.cache : cacheDefault;
    var serializer = options && options.serializer ? options.serializer : serializerDefault;
    var strategy = options && options.strategy ? options.strategy : strategyDefault;
    return strategy(fn, {
      cache,
      serializer
    });
  }
  function isPrimitive(value2) {
    return value2 == null || typeof value2 === "number" || typeof value2 === "boolean";
  }
  function monadic(fn, cache, serializer, arg) {
    var cacheKey = isPrimitive(arg) ? arg : serializer(arg);
    var computedValue = cache.get(cacheKey);
    if (typeof computedValue === "undefined") {
      computedValue = fn.call(this, arg);
      cache.set(cacheKey, computedValue);
    }
    return computedValue;
  }
  function variadic(fn, cache, serializer) {
    var args = Array.prototype.slice.call(arguments, 3);
    var cacheKey = serializer(args);
    var computedValue = cache.get(cacheKey);
    if (typeof computedValue === "undefined") {
      computedValue = fn.apply(this, args);
      cache.set(cacheKey, computedValue);
    }
    return computedValue;
  }
  function assemble(fn, context, strategy, cache, serialize) {
    return strategy.bind(context, fn, cache, serialize);
  }
  function strategyDefault(fn, options) {
    var strategy = fn.length === 1 ? monadic : variadic;
    return assemble(fn, this, strategy, options.cache.create(), options.serializer);
  }
  function strategyVariadic(fn, options) {
    return assemble(fn, this, variadic, options.cache.create(), options.serializer);
  }
  var serializerDefault = function() {
    return JSON.stringify(arguments);
  };
  var ObjectWithoutPrototypeCache = (
    /** @class */
    function() {
      function ObjectWithoutPrototypeCache2() {
        this.cache = /* @__PURE__ */ Object.create(null);
      }
      ObjectWithoutPrototypeCache2.prototype.get = function(key) {
        return this.cache[key];
      };
      ObjectWithoutPrototypeCache2.prototype.set = function(key, value2) {
        this.cache[key] = value2;
      };
      return ObjectWithoutPrototypeCache2;
    }()
  );
  var cacheDefault = {
    create: function create() {
      return new ObjectWithoutPrototypeCache();
    }
  };
  var strategies = {
    variadic: strategyVariadic
  };
  function repeat(s, times) {
    if (typeof s.repeat === "function") {
      return s.repeat(times);
    }
    var arr = new Array(times);
    for (var i = 0; i < arr.length; i++) {
      arr[i] = s;
    }
    return arr.join("");
  }
  function setInternalSlot(map2, pl, field, value2) {
    if (!map2.get(pl)) {
      map2.set(pl, /* @__PURE__ */ Object.create(null));
    }
    var slots = map2.get(pl);
    slots[field] = value2;
  }
  function setMultiInternalSlots(map2, pl, props) {
    for (var _i = 0, _a2 = Object.keys(props); _i < _a2.length; _i++) {
      var k = _a2[_i];
      setInternalSlot(map2, pl, k, props[k]);
    }
  }
  function getInternalSlot(map2, pl, field) {
    return getMultiInternalSlots(map2, pl, field)[field];
  }
  function getMultiInternalSlots(map2, pl) {
    var fields = [];
    for (var _i = 2; _i < arguments.length; _i++) {
      fields[_i - 2] = arguments[_i];
    }
    var slots = map2.get(pl);
    if (!slots) {
      throw new TypeError("".concat(pl, " InternalSlot has not been initialized"));
    }
    return fields.reduce(function(all, f) {
      all[f] = slots[f];
      return all;
    }, /* @__PURE__ */ Object.create(null));
  }
  function isLiteralPart(patternPart) {
    return patternPart.type === "literal";
  }
  function defineProperty(target, name, _a2) {
    var value2 = _a2.value;
    Object.defineProperty(target, name, {
      configurable: true,
      enumerable: false,
      writable: true,
      value: value2
    });
  }
  function createDataProperty(target, name, value2) {
    Object.defineProperty(target, name, {
      configurable: true,
      enumerable: true,
      writable: true,
      value: value2
    });
  }
  function invariant$2(condition, message, Err) {
    if (Err === void 0) {
      Err = Error;
    }
    if (!condition) {
      throw new Err(message);
    }
  }
  var createMemoizedNumberFormat = memoize(function() {
    var _a2;
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    return new ((_a2 = Intl.NumberFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
  }, {
    strategy: strategies.variadic
  });
  var createMemoizedDateTimeFormat = memoize(function() {
    var _a2;
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    return new ((_a2 = Intl.DateTimeFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
  }, {
    strategy: strategies.variadic
  });
  var createMemoizedPluralRules = memoize(function() {
    var _a2;
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    return new ((_a2 = Intl.PluralRules).bind.apply(_a2, __spreadArray([void 0], args, false)))();
  }, {
    strategy: strategies.variadic
  });
  var createMemoizedLocale = memoize(function() {
    var _a2;
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    return new ((_a2 = Intl.Locale).bind.apply(_a2, __spreadArray([void 0], args, false)))();
  }, {
    strategy: strategies.variadic
  });
  var createMemoizedListFormat = memoize(function() {
    var _a2;
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    return new ((_a2 = Intl.ListFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
  }, {
    strategy: strategies.variadic
  });
  function ToString(o) {
    if (typeof o === "symbol") {
      throw TypeError("Cannot convert a Symbol value to a string");
    }
    return String(o);
  }
  function ToNumber(arg) {
    if (typeof arg === "number") {
      return new Decimal(arg);
    }
    invariant$2(typeof arg !== "bigint" && typeof arg !== "symbol", "BigInt and Symbol are not supported", TypeError);
    if (arg === void 0) {
      return new Decimal(NaN);
    }
    if (arg === null || arg === 0) {
      return ZERO;
    }
    if (arg === true) {
      return new Decimal(1);
    }
    if (typeof arg === "string") {
      try {
        return new Decimal(arg);
      } catch (e) {
        return new Decimal(NaN);
      }
    }
    invariant$2(typeof arg === "object", "object expected", TypeError);
    var primValue = ToPrimitive(arg, "number");
    invariant$2(typeof primValue !== "object", "object expected", TypeError);
    return ToNumber(primValue);
  }
  function ToInteger(n) {
    var number = ToNumber(n);
    if (number.isNaN() || number.isZero()) {
      return ZERO;
    }
    if (number.isFinite()) {
      return number;
    }
    var integer2 = number.abs().floor();
    if (number.isNegative()) {
      integer2 = integer2.negated();
    }
    return integer2;
  }
  function TimeClip(time) {
    if (!time.isFinite()) {
      return new Decimal(NaN);
    }
    if (time.abs().greaterThan(8.64 * 1e15)) {
      return new Decimal(NaN);
    }
    return ToInteger(time);
  }
  function ToObject(arg) {
    if (arg == null) {
      throw new TypeError("undefined/null cannot be converted to object");
    }
    return Object(arg);
  }
  function SameValue(x, y) {
    if (Object.is) {
      return Object.is(x, y);
    }
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    }
    return x !== x && y !== y;
  }
  function ArrayCreate(len) {
    return new Array(len);
  }
  function HasOwnProperty(o, prop) {
    return Object.prototype.hasOwnProperty.call(o, prop);
  }
  function Type(x) {
    if (x === null) {
      return "Null";
    }
    if (typeof x === "undefined") {
      return "Undefined";
    }
    if (typeof x === "function" || typeof x === "object") {
      return "Object";
    }
    if (typeof x === "number") {
      return "Number";
    }
    if (typeof x === "boolean") {
      return "Boolean";
    }
    if (typeof x === "string") {
      return "String";
    }
    if (typeof x === "symbol") {
      return "Symbol";
    }
    if (typeof x === "bigint") {
      return "BigInt";
    }
  }
  var MS_PER_DAY = 864e5;
  function mod(x, y) {
    return x - Math.floor(x / y) * y;
  }
  function Day(t) {
    return Math.floor(t / MS_PER_DAY);
  }
  function WeekDay(t) {
    return mod(Day(t) + 4, 7);
  }
  function DayFromYear(y) {
    return Date.UTC(y, 0) / MS_PER_DAY;
  }
  function TimeFromYear(y) {
    return Date.UTC(y, 0);
  }
  function YearFromTime(t) {
    return new Date(t).getUTCFullYear();
  }
  function DaysInYear(y) {
    if (y % 4 !== 0) {
      return 365;
    }
    if (y % 100 !== 0) {
      return 366;
    }
    if (y % 400 !== 0) {
      return 365;
    }
    return 366;
  }
  function DayWithinYear(t) {
    return Day(t) - DayFromYear(YearFromTime(t));
  }
  function InLeapYear(t) {
    return DaysInYear(YearFromTime(t)) === 365 ? 0 : 1;
  }
  function MonthFromTime(t) {
    var dwy = DayWithinYear(t);
    var leap = InLeapYear(t);
    if (dwy >= 0 && dwy < 31) {
      return 0;
    }
    if (dwy < 59 + leap) {
      return 1;
    }
    if (dwy < 90 + leap) {
      return 2;
    }
    if (dwy < 120 + leap) {
      return 3;
    }
    if (dwy < 151 + leap) {
      return 4;
    }
    if (dwy < 181 + leap) {
      return 5;
    }
    if (dwy < 212 + leap) {
      return 6;
    }
    if (dwy < 243 + leap) {
      return 7;
    }
    if (dwy < 273 + leap) {
      return 8;
    }
    if (dwy < 304 + leap) {
      return 9;
    }
    if (dwy < 334 + leap) {
      return 10;
    }
    if (dwy < 365 + leap) {
      return 11;
    }
    throw new Error("Invalid time");
  }
  function DateFromTime(t) {
    var dwy = DayWithinYear(t);
    var mft = MonthFromTime(t);
    var leap = InLeapYear(t);
    if (mft === 0) {
      return dwy + 1;
    }
    if (mft === 1) {
      return dwy - 30;
    }
    if (mft === 2) {
      return dwy - 58 - leap;
    }
    if (mft === 3) {
      return dwy - 89 - leap;
    }
    if (mft === 4) {
      return dwy - 119 - leap;
    }
    if (mft === 5) {
      return dwy - 150 - leap;
    }
    if (mft === 6) {
      return dwy - 180 - leap;
    }
    if (mft === 7) {
      return dwy - 211 - leap;
    }
    if (mft === 8) {
      return dwy - 242 - leap;
    }
    if (mft === 9) {
      return dwy - 272 - leap;
    }
    if (mft === 10) {
      return dwy - 303 - leap;
    }
    if (mft === 11) {
      return dwy - 333 - leap;
    }
    throw new Error("Invalid time");
  }
  var HOURS_PER_DAY = 24;
  var MINUTES_PER_HOUR = 60;
  var SECONDS_PER_MINUTE = 60;
  var MS_PER_SECOND = 1e3;
  var MS_PER_MINUTE = MS_PER_SECOND * SECONDS_PER_MINUTE;
  var MS_PER_HOUR = MS_PER_MINUTE * MINUTES_PER_HOUR;
  function HourFromTime(t) {
    return mod(Math.floor(t / MS_PER_HOUR), HOURS_PER_DAY);
  }
  function MinFromTime(t) {
    return mod(Math.floor(t / MS_PER_MINUTE), MINUTES_PER_HOUR);
  }
  function SecFromTime(t) {
    return mod(Math.floor(t / MS_PER_SECOND), SECONDS_PER_MINUTE);
  }
  function IsCallable(fn) {
    return typeof fn === "function";
  }
  function OrdinaryHasInstance(C, O, internalSlots) {
    if (!IsCallable(C)) {
      return false;
    }
    if (internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction) {
      var BC = internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction;
      return O instanceof BC;
    }
    if (typeof O !== "object") {
      return false;
    }
    var P2 = C.prototype;
    if (typeof P2 !== "object") {
      throw new TypeError("OrdinaryHasInstance called on an object with an invalid prototype property.");
    }
    return Object.prototype.isPrototypeOf.call(P2, O);
  }
  function msFromTime(t) {
    return mod(t, MS_PER_SECOND);
  }
  function OrdinaryToPrimitive(O, hint) {
    var methodNames;
    if (hint === "string") {
      methodNames = ["toString", "valueOf"];
    } else {
      methodNames = ["valueOf", "toString"];
    }
    for (var _i = 0, methodNames_1 = methodNames; _i < methodNames_1.length; _i++) {
      var name_1 = methodNames_1[_i];
      var method = O[name_1];
      if (IsCallable(method)) {
        var result = method.call(O);
        if (typeof result !== "object") {
          return result;
        }
      }
    }
    throw new TypeError("Cannot convert object to primitive value");
  }
  function ToPrimitive(input, preferredType) {
    if (typeof input === "object" && input != null) {
      var exoticToPrim = Symbol.toPrimitive in input ? input[Symbol.toPrimitive] : void 0;
      var hint = void 0;
      if (exoticToPrim !== void 0) {
        if (preferredType === void 0) {
          hint = "default";
        } else if (preferredType === "string") {
          hint = "string";
        } else {
          invariant$2(preferredType === "number", 'preferredType must be "string" or "number"');
          hint = "number";
        }
        var result = exoticToPrim.call(input, hint);
        if (typeof result !== "object") {
          return result;
        }
        throw new TypeError("Cannot convert exotic object to primitive.");
      }
      if (preferredType === void 0) {
        preferredType = "number";
      }
      return OrdinaryToPrimitive(input, preferredType);
    }
    return input;
  }
  function CoerceOptionsToObject(options) {
    if (typeof options === "undefined") {
      return /* @__PURE__ */ Object.create(null);
    }
    return ToObject(options);
  }
  function DefaultNumberOption(inputVal, min2, max2, fallback) {
    if (inputVal === void 0) {
      return fallback;
    }
    var val = Number(inputVal);
    if (isNaN(val) || val < min2 || val > max2) {
      throw new RangeError("".concat(val, " is outside of range [").concat(min2, ", ").concat(max2, "]"));
    }
    return Math.floor(val);
  }
  function GetNumberOption(options, property, minimum, maximum, fallback) {
    var val = options[property];
    return DefaultNumberOption(val, minimum, maximum, fallback);
  }
  function GetOption(opts, prop, type, values, fallback) {
    if (typeof opts !== "object") {
      throw new TypeError("Options must be an object");
    }
    var value2 = opts[prop];
    if (value2 !== void 0) {
      if (type !== "boolean" && type !== "string") {
        throw new TypeError("invalid type");
      }
      if (type === "boolean") {
        value2 = Boolean(value2);
      }
      if (type === "string") {
        value2 = ToString(value2);
      }
      if (values !== void 0 && !values.filter(function(val) {
        return val == value2;
      }).length) {
        throw new RangeError("".concat(value2, " is not within ").concat(values.join(", ")));
      }
      return value2;
    }
    return fallback;
  }
  function GetOptionsObject(options) {
    if (typeof options === "undefined") {
      return /* @__PURE__ */ Object.create(null);
    }
    if (typeof options === "object") {
      return options;
    }
    throw new TypeError("Options must be an object");
  }
  function GetStringOrBooleanOption(opts, prop, values, trueValue, falsyValue, fallback) {
    var value2 = opts[prop];
    if (value2 === void 0) {
      return fallback;
    }
    if (value2 === true) {
      return trueValue;
    }
    var valueBoolean = Boolean(value2);
    if (valueBoolean === false) {
      return falsyValue;
    }
    value2 = ToString(value2);
    if (value2 === "true" || value2 === "false") {
      return fallback;
    }
    if ((values || []).indexOf(value2) === -1) {
      throw new RangeError("Invalid value ".concat(value2));
    }
    return value2;
  }
  var SANCTIONED_UNITS = [
    "angle-degree",
    "area-acre",
    "area-hectare",
    "concentr-percent",
    "digital-bit",
    "digital-byte",
    "digital-gigabit",
    "digital-gigabyte",
    "digital-kilobit",
    "digital-kilobyte",
    "digital-megabit",
    "digital-megabyte",
    "digital-petabyte",
    "digital-terabit",
    "digital-terabyte",
    "duration-day",
    "duration-hour",
    "duration-millisecond",
    "duration-minute",
    "duration-month",
    "duration-second",
    "duration-week",
    "duration-year",
    "length-centimeter",
    "length-foot",
    "length-inch",
    "length-kilometer",
    "length-meter",
    "length-mile-scandinavian",
    "length-mile",
    "length-millimeter",
    "length-yard",
    "mass-gram",
    "mass-kilogram",
    "mass-ounce",
    "mass-pound",
    "mass-stone",
    "temperature-celsius",
    "temperature-fahrenheit",
    "volume-fluid-ounce",
    "volume-gallon",
    "volume-liter",
    "volume-milliliter"
  ];
  function removeUnitNamespace(unit) {
    return unit.slice(unit.indexOf("-") + 1);
  }
  var SIMPLE_UNITS = SANCTIONED_UNITS.map(removeUnitNamespace);
  function IsSanctionedSimpleUnitIdentifier(unitIdentifier) {
    return SIMPLE_UNITS.indexOf(unitIdentifier) > -1;
  }
  function IsValidTimeZoneName(tz, _a2) {
    var zoneNamesFromData = _a2.zoneNamesFromData, uppercaseLinks = _a2.uppercaseLinks;
    var uppercasedTz = tz.toUpperCase();
    var zoneNames = /* @__PURE__ */ new Set();
    var linkNames = /* @__PURE__ */ new Set();
    zoneNamesFromData.map(function(z) {
      return z.toUpperCase();
    }).forEach(function(z) {
      return zoneNames.add(z);
    });
    Object.keys(uppercaseLinks).forEach(function(linkName) {
      linkNames.add(linkName.toUpperCase());
      zoneNames.add(uppercaseLinks[linkName].toUpperCase());
    });
    return zoneNames.has(uppercasedTz) || linkNames.has(uppercasedTz);
  }
  function toUpperCase(str) {
    return str.replace(/([a-z])/g, function(_, c) {
      return c.toUpperCase();
    });
  }
  var NOT_A_Z_REGEX = /[^A-Z]/;
  function IsWellFormedCurrencyCode(currency) {
    currency = toUpperCase(currency);
    if (currency.length !== 3) {
      return false;
    }
    if (NOT_A_Z_REGEX.test(currency)) {
      return false;
    }
    return true;
  }
  function toLowerCase(str) {
    return str.replace(/([A-Z])/g, function(_, c) {
      return c.toLowerCase();
    });
  }
  function IsWellFormedUnitIdentifier(unit) {
    unit = toLowerCase(unit);
    if (IsSanctionedSimpleUnitIdentifier(unit)) {
      return true;
    }
    var units = unit.split("-per-");
    if (units.length !== 2) {
      return false;
    }
    var numerator = units[0], denominator = units[1];
    if (!IsSanctionedSimpleUnitIdentifier(numerator) || !IsSanctionedSimpleUnitIdentifier(denominator)) {
      return false;
    }
    return true;
  }
  function ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode) {
    if (x.eq(r1))
      return r1;
    invariant$2(r1.lessThan(x) && x.lessThan(r2), "x should be between r1 and r2 but x=".concat(x, ", r1=").concat(r1, ", r2=").concat(r2));
    if (unsignedRoundingMode === "zero") {
      return r1;
    }
    if (unsignedRoundingMode === "infinity") {
      return r2;
    }
    var d1 = x.minus(r1);
    var d2 = r2.minus(x);
    if (d1.lessThan(d2)) {
      return r1;
    }
    if (d2.lessThan(d1)) {
      return r2;
    }
    invariant$2(d1.eq(d2), "d1 should be equal to d2");
    if (unsignedRoundingMode === "half-zero") {
      return r1;
    }
    if (unsignedRoundingMode === "half-infinity") {
      return r2;
    }
    invariant$2(unsignedRoundingMode === "half-even", "unsignedRoundingMode should be half-even");
    var cardinality = r1.div(r2.minus(r1)).mod(2);
    if (cardinality.isZero()) {
      return r1;
    }
    return r2;
  }
  var PART_TYPES_TO_COLLAPSE = /* @__PURE__ */ new Set([
    "unit",
    "exponentMinusSign",
    "minusSign",
    "plusSign",
    "percentSign",
    "exponentSeparator",
    "percent",
    "percentSign",
    "currency",
    "literal"
  ]);
  function CollapseNumberRange(numberFormat, result, _a2) {
    var getInternalSlots = _a2.getInternalSlots;
    var internalSlots = getInternalSlots(numberFormat);
    var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];
    var rangeSignRegex = new RegExp("s?[".concat(symbols.rangeSign, "]s?"));
    var rangeSignIndex = result.findIndex(function(r) {
      return r.type === "literal" && rangeSignRegex.test(r.value);
    });
    var prefixSignParts = [];
    for (var i = rangeSignIndex - 1; i >= 0; i--) {
      if (!PART_TYPES_TO_COLLAPSE.has(result[i].type)) {
        break;
      }
      prefixSignParts.unshift(result[i]);
    }
    if (Array.from(prefixSignParts.map(function(p) {
      return p.value;
    }).join("")).length > 1) {
      var newResult = Array.from(result);
      newResult.splice(rangeSignIndex - prefixSignParts.length, prefixSignParts.length);
      return newResult;
    }
    var suffixSignParts = [];
    for (var i = rangeSignIndex + 1; i < result.length; i++) {
      if (!PART_TYPES_TO_COLLAPSE.has(result[i].type)) {
        break;
      }
      suffixSignParts.push(result[i]);
    }
    if (Array.from(suffixSignParts.map(function(p) {
      return p.value;
    }).join("")).length > 1) {
      var newResult = Array.from(result);
      newResult.splice(rangeSignIndex + 1, suffixSignParts.length);
      return newResult;
    }
    return result;
  }
  Decimal.set({
    toExpPos: 100
  });
  function ComputeExponentForMagnitude(internalSlots, magnitude) {
    var notation = internalSlots.notation, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;
    switch (notation) {
      case "standard":
        return 0;
      case "scientific":
        return magnitude.toNumber();
      case "engineering":
        var thousands = magnitude.div(3).floor();
        return thousands.times(3).toNumber();
      default: {
        invariant$2(notation === "compact", "Invalid notation");
        var compactDisplay = internalSlots.compactDisplay, style = internalSlots.style, currencyDisplay = internalSlots.currencyDisplay;
        var thresholdMap = void 0;
        if (style === "currency" && currencyDisplay !== "name") {
          var currency = dataLocaleData.numbers.currency[numberingSystem] || dataLocaleData.numbers.currency[dataLocaleData.numbers.nu[0]];
          thresholdMap = currency.short;
        } else {
          var decimal2 = dataLocaleData.numbers.decimal[numberingSystem] || dataLocaleData.numbers.decimal[dataLocaleData.numbers.nu[0]];
          thresholdMap = compactDisplay === "long" ? decimal2.long : decimal2.short;
        }
        if (!thresholdMap) {
          return 0;
        }
        var num = Decimal.pow(10, magnitude).toString();
        var thresholds = Object.keys(thresholdMap);
        if (num < thresholds[0]) {
          return 0;
        }
        if (num > thresholds[thresholds.length - 1]) {
          return thresholds[thresholds.length - 1].length - 1;
        }
        var i = thresholds.indexOf(num);
        if (i === -1) {
          return 0;
        }
        var magnitudeKey = thresholds[i];
        var compactPattern = thresholdMap[magnitudeKey].other;
        if (compactPattern === "0") {
          return 0;
        }
        return magnitudeKey.length - thresholdMap[magnitudeKey].other.match(/0+/)[0].length;
      }
    }
  }
  var negativeMapping = {
    ceil: "zero",
    floor: "infinity",
    expand: "infinity",
    trunc: "zero",
    halfCeil: "half-zero",
    halfFloor: "half-infinity",
    halfExpand: "half-infinity",
    halfTrunc: "half-zero",
    halfEven: "half-even"
  };
  var positiveMapping = {
    ceil: "infinity",
    floor: "zero",
    expand: "infinity",
    trunc: "zero",
    halfCeil: "half-infinity",
    halfFloor: "half-zero",
    halfExpand: "half-infinity",
    halfTrunc: "half-zero",
    halfEven: "half-even"
  };
  function GetUnsignedRoundingMode(roundingMode, isNegative) {
    if (isNegative) {
      return negativeMapping[roundingMode];
    }
    return positiveMapping[roundingMode];
  }
  Decimal.set({
    toExpPos: 100
  });
  function ToRawFixedFn(n, f) {
    return n.times(Decimal.pow(10, -f));
  }
  function findN1R1(x, f, roundingIncrement) {
    var nx = x.times(Decimal.pow(10, f)).floor();
    var n1 = nx.div(roundingIncrement).floor().times(roundingIncrement);
    var r1 = ToRawFixedFn(n1, f);
    return {
      n1,
      r1
    };
  }
  function findN2R2(x, f, roundingIncrement) {
    var nx = x.times(Decimal.pow(10, f)).ceil();
    var n2 = nx.div(roundingIncrement).ceil().times(roundingIncrement);
    var r2 = ToRawFixedFn(n2, f);
    return {
      n2,
      r2
    };
  }
  function ToRawFixed(x, minFraction, maxFraction, roundingIncrement, unsignedRoundingMode) {
    var f = maxFraction;
    var _a2 = findN1R1(x, f, roundingIncrement), n1 = _a2.n1, r1 = _a2.r1;
    var _b = findN2R2(x, f, roundingIncrement), n2 = _b.n2, r2 = _b.r2;
    var r = ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode);
    var n, xFinal;
    var m;
    if (r.eq(r1)) {
      n = n1;
      xFinal = r1;
    } else {
      n = n2;
      xFinal = r2;
    }
    if (n.isZero()) {
      m = "0";
    } else {
      m = n.toString();
    }
    var int;
    if (f !== 0) {
      var k = m.length;
      if (k <= f) {
        var z = repeat("0", f - k + 1);
        m = z + m;
        k = f + 1;
      }
      var a = m.slice(0, k - f);
      var b = m.slice(m.length - f);
      m = a + "." + b;
      int = a.length;
    } else {
      int = m.length;
    }
    var cut = maxFraction - minFraction;
    while (cut > 0 && m[m.length - 1] === "0") {
      m = m.slice(0, m.length - 1);
      cut--;
    }
    if (m[m.length - 1] === ".") {
      m = m.slice(0, m.length - 1);
    }
    return {
      formattedString: m,
      roundedNumber: xFinal,
      integerDigitsCount: int,
      roundingMagnitude: -f
    };
  }
  function findN1E1R1(x, p) {
    var maxN1 = Decimal.pow(10, p);
    var minN1 = Decimal.pow(10, p - 1);
    var maxE1 = x.div(minN1).log(10).plus(p).minus(1).ceil();
    var currentE1 = maxE1;
    while (true) {
      var currentN1 = x.div(Decimal.pow(10, currentE1.minus(p).plus(1))).floor();
      if (currentN1.lessThan(maxN1) && currentN1.greaterThanOrEqualTo(minN1)) {
        var currentR1 = currentN1.times(Decimal.pow(10, currentE1.minus(p).plus(1)));
        if (currentR1.lessThanOrEqualTo(x)) {
          return {
            n1: currentN1,
            e1: currentE1,
            r1: currentR1
          };
        }
      }
      currentE1 = currentE1.minus(1);
    }
  }
  function findN2E2R2(x, p) {
    var maxN2 = Decimal.pow(10, p);
    var minN2 = Decimal.pow(10, p - 1);
    var minE2 = x.div(maxN2).log(10).plus(p).minus(1).floor();
    var currentE2 = minE2;
    while (true) {
      var currentN2 = x.div(Decimal.pow(10, currentE2.minus(p).plus(1))).ceil();
      if (currentN2.lessThan(maxN2) && currentN2.greaterThanOrEqualTo(minN2)) {
        var currentR2 = currentN2.times(Decimal.pow(10, currentE2.minus(p).plus(1)));
        if (currentR2.greaterThanOrEqualTo(x)) {
          return {
            n2: currentN2,
            e2: currentE2,
            r2: currentR2
          };
        }
      }
      currentE2 = currentE2.plus(1);
    }
  }
  function ToRawPrecision(x, minPrecision, maxPrecision, unsignedRoundingMode) {
    var p = maxPrecision;
    var m;
    var e;
    var xFinal;
    if (x.isZero()) {
      m = repeat("0", p);
      e = 0;
      xFinal = ZERO;
    } else {
      var _a2 = findN1E1R1(x, p), n1 = _a2.n1, e1 = _a2.e1, r1 = _a2.r1;
      var _b = findN2E2R2(x, p), n2 = _b.n2, e2 = _b.e2, r2 = _b.r2;
      var r = ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode);
      var n = void 0;
      if (r.eq(r1)) {
        n = n1;
        e = e1.toNumber();
        xFinal = r1;
      } else {
        n = n2;
        e = e2.toNumber();
        xFinal = r2;
      }
      m = n.toString();
    }
    var int;
    if (e >= p - 1) {
      m = m + repeat("0", e - p + 1);
      int = e + 1;
    } else if (e >= 0) {
      m = m.slice(0, e + 1) + "." + m.slice(m.length - (p - (e + 1)));
      int = e + 1;
    } else {
      invariant$2(e < 0, "e should be less than 0");
      m = "0." + repeat("0", -e - 1) + m;
      int = 1;
    }
    if (m.includes(".") && maxPrecision > minPrecision) {
      var cut = maxPrecision - minPrecision;
      while (cut > 0 && m[m.length - 1] === "0") {
        m = m.slice(0, m.length - 1);
        cut--;
      }
      if (m[m.length - 1] === ".") {
        m = m.slice(0, m.length - 1);
      }
    }
    return {
      formattedString: m,
      roundedNumber: xFinal,
      integerDigitsCount: int,
      roundingMagnitude: e
    };
  }
  function FormatNumericToString(intlObject, _x) {
    var x = _x;
    var sign2;
    if (x.isZero() && x.isNegative()) {
      sign2 = "negative";
      x = ZERO;
    } else {
      invariant$2(x.isFinite(), "NumberFormatDigitInternalSlots value is not finite");
      if (x.lessThan(0)) {
        sign2 = "negative";
      } else {
        sign2 = "positive";
      }
      if (sign2 === "negative") {
        x = x.negated();
      }
    }
    var result;
    var roundingType = intlObject.roundingType;
    var unsignedRoundingMode = GetUnsignedRoundingMode(intlObject.roundingMode, sign2 === "negative");
    switch (roundingType) {
      case "significantDigits":
        result = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits, unsignedRoundingMode);
        break;
      case "fractionDigits":
        result = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits, intlObject.roundingIncrement, unsignedRoundingMode);
        break;
      default:
        var sResult = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits, unsignedRoundingMode);
        var fResult = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits, intlObject.roundingIncrement, unsignedRoundingMode);
        if (intlObject.roundingType === "morePrecision") {
          if (sResult.roundingMagnitude <= fResult.roundingMagnitude) {
            result = sResult;
          } else {
            result = fResult;
          }
        } else {
          invariant$2(intlObject.roundingType === "lessPrecision", "Invalid roundingType");
          if (sResult.roundingMagnitude <= fResult.roundingMagnitude) {
            result = fResult;
          } else {
            result = sResult;
          }
        }
        break;
    }
    x = result.roundedNumber;
    var string2 = result.formattedString;
    if (intlObject.trailingZeroDisplay === "stripIfInteger" && x.isInteger()) {
      var i = string2.indexOf(".");
      if (i > -1) {
        string2 = string2.slice(0, i);
      }
    }
    var int = result.integerDigitsCount;
    var minInteger = intlObject.minimumIntegerDigits;
    if (int < minInteger) {
      var forwardZeros = repeat("0", minInteger - int);
      string2 = forwardZeros + string2;
    }
    if (sign2 === "negative") {
      if (x.isZero()) {
        x = NEGATIVE_ZERO;
      } else {
        x = x.negated();
      }
    }
    return { roundedNumber: x, formattedString: string2 };
  }
  function ComputeExponent(internalSlots, x) {
    if (x.isZero()) {
      return [0, 0];
    }
    if (x.isNegative()) {
      x = x.negated();
    }
    var magnitude = x.log(10).floor();
    var exponent = ComputeExponentForMagnitude(internalSlots, magnitude);
    x = x.times(Decimal.pow(10, -exponent));
    var formatNumberResult = FormatNumericToString(internalSlots, x);
    if (formatNumberResult.roundedNumber.isZero()) {
      return [exponent, magnitude.toNumber()];
    }
    var newMagnitude = formatNumberResult.roundedNumber.log(10).floor();
    if (newMagnitude.eq(magnitude.minus(exponent))) {
      return [exponent, magnitude.toNumber()];
    }
    return [
      ComputeExponentForMagnitude(internalSlots, magnitude.plus(1)),
      magnitude.plus(1).toNumber()
    ];
  }
  function CurrencyDigits(c, _a2) {
    var currencyDigitsData = _a2.currencyDigitsData;
    return HasOwnProperty(currencyDigitsData, c) ? currencyDigitsData[c] : 2;
  }
  var S_UNICODE_REGEX = /[\$\+<->\^`\|~\xA2-\xA6\xA8\xA9\xAC\xAE-\xB1\xB4\xB8\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0384\u0385\u03F6\u0482\u058D-\u058F\u0606-\u0608\u060B\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u07FE\u07FF\u09F2\u09F3\u09FA\u09FB\u0AF1\u0B70\u0BF3-\u0BFA\u0C7F\u0D4F\u0D79\u0E3F\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u166D\u17DB\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2044\u2052\u207A-\u207C\u208A-\u208C\u20A0-\u20BF\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2307\u230C-\u2328\u232B-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2767\u2794-\u27C4\u27C7-\u27E5\u27F0-\u2982\u2999-\u29D7\u29DC-\u29FB\u29FE-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2E50\u2E51\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFB\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u309B\u309C\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uAA77-\uAA79\uAB5B\uAB6A\uAB6B\uFB29\uFBB2-\uFBC1\uFDFC\uFDFD\uFE62\uFE64-\uFE66\uFE69\uFF04\uFF0B\uFF1C-\uFF1E\uFF3E\uFF40\uFF5C\uFF5E\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|\uD805\uDF3F|\uD807[\uDFD5-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|\uD82F\uDC9C|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDE8\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|\uD838[\uDD4F\uDEFF]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEE0-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF73\uDF80-\uDFD8\uDFE0-\uDFEB]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDD78\uDD7A-\uDDCB\uDDCD-\uDE53\uDE60-\uDE6D\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6\uDF00-\uDF92\uDF94-\uDFCA]/;
  var digitMapping = {
    "adlm": [
      "𞥐",
      "𞥑",
      "𞥒",
      "𞥓",
      "𞥔",
      "𞥕",
      "𞥖",
      "𞥗",
      "𞥘",
      "𞥙"
    ],
    "ahom": [
      "𑜰",
      "𑜱",
      "𑜲",
      "𑜳",
      "𑜴",
      "𑜵",
      "𑜶",
      "𑜷",
      "𑜸",
      "𑜹"
    ],
    "arab": [
      "٠",
      "١",
      "٢",
      "٣",
      "٤",
      "٥",
      "٦",
      "٧",
      "٨",
      "٩"
    ],
    "arabext": [
      "۰",
      "۱",
      "۲",
      "۳",
      "۴",
      "۵",
      "۶",
      "۷",
      "۸",
      "۹"
    ],
    "bali": [
      "᭐",
      "᭑",
      "᭒",
      "᭓",
      "᭔",
      "᭕",
      "᭖",
      "᭗",
      "᭘",
      "᭙"
    ],
    "beng": [
      "০",
      "১",
      "২",
      "৩",
      "৪",
      "৫",
      "৬",
      "৭",
      "৮",
      "৯"
    ],
    "bhks": [
      "𑱐",
      "𑱑",
      "𑱒",
      "𑱓",
      "𑱔",
      "𑱕",
      "𑱖",
      "𑱗",
      "𑱘",
      "𑱙"
    ],
    "brah": [
      "𑁦",
      "𑁧",
      "𑁨",
      "𑁩",
      "𑁪",
      "𑁫",
      "𑁬",
      "𑁭",
      "𑁮",
      "𑁯"
    ],
    "cakm": [
      "𑄶",
      "𑄷",
      "𑄸",
      "𑄹",
      "𑄺",
      "𑄻",
      "𑄼",
      "𑄽",
      "𑄾",
      "𑄿"
    ],
    "cham": [
      "꩐",
      "꩑",
      "꩒",
      "꩓",
      "꩔",
      "꩕",
      "꩖",
      "꩗",
      "꩘",
      "꩙"
    ],
    "deva": [
      "०",
      "१",
      "२",
      "३",
      "४",
      "५",
      "६",
      "७",
      "८",
      "९"
    ],
    "diak": [
      "𑥐",
      "𑥑",
      "𑥒",
      "𑥓",
      "𑥔",
      "𑥕",
      "𑥖",
      "𑥗",
      "𑥘",
      "𑥙"
    ],
    "fullwide": [
      "０",
      "１",
      "２",
      "３",
      "４",
      "５",
      "６",
      "７",
      "８",
      "９"
    ],
    "gong": [
      "𑶠",
      "𑶡",
      "𑶢",
      "𑶣",
      "𑶤",
      "𑶥",
      "𑶦",
      "𑶧",
      "𑶨",
      "𑶩"
    ],
    "gonm": [
      "𑵐",
      "𑵑",
      "𑵒",
      "𑵓",
      "𑵔",
      "𑵕",
      "𑵖",
      "𑵗",
      "𑵘",
      "𑵙"
    ],
    "gujr": [
      "૦",
      "૧",
      "૨",
      "૩",
      "૪",
      "૫",
      "૬",
      "૭",
      "૮",
      "૯"
    ],
    "guru": [
      "੦",
      "੧",
      "੨",
      "੩",
      "੪",
      "੫",
      "੬",
      "੭",
      "੮",
      "੯"
    ],
    "hanidec": [
      "〇",
      "一",
      "二",
      "三",
      "四",
      "五",
      "六",
      "七",
      "八",
      "九"
    ],
    "hmng": [
      "𖭐",
      "𖭑",
      "𖭒",
      "𖭓",
      "𖭔",
      "𖭕",
      "𖭖",
      "𖭗",
      "𖭘",
      "𖭙"
    ],
    "hmnp": [
      "𞅀",
      "𞅁",
      "𞅂",
      "𞅃",
      "𞅄",
      "𞅅",
      "𞅆",
      "𞅇",
      "𞅈",
      "𞅉"
    ],
    "java": [
      "꧐",
      "꧑",
      "꧒",
      "꧓",
      "꧔",
      "꧕",
      "꧖",
      "꧗",
      "꧘",
      "꧙"
    ],
    "kali": [
      "꤀",
      "꤁",
      "꤂",
      "꤃",
      "꤄",
      "꤅",
      "꤆",
      "꤇",
      "꤈",
      "꤉"
    ],
    "khmr": [
      "០",
      "១",
      "២",
      "៣",
      "៤",
      "៥",
      "៦",
      "៧",
      "៨",
      "៩"
    ],
    "knda": [
      "೦",
      "೧",
      "೨",
      "೩",
      "೪",
      "೫",
      "೬",
      "೭",
      "೮",
      "೯"
    ],
    "lana": [
      "᪀",
      "᪁",
      "᪂",
      "᪃",
      "᪄",
      "᪅",
      "᪆",
      "᪇",
      "᪈",
      "᪉"
    ],
    "lanatham": [
      "᪐",
      "᪑",
      "᪒",
      "᪓",
      "᪔",
      "᪕",
      "᪖",
      "᪗",
      "᪘",
      "᪙"
    ],
    "laoo": [
      "໐",
      "໑",
      "໒",
      "໓",
      "໔",
      "໕",
      "໖",
      "໗",
      "໘",
      "໙"
    ],
    "lepc": [
      "᪐",
      "᪑",
      "᪒",
      "᪓",
      "᪔",
      "᪕",
      "᪖",
      "᪗",
      "᪘",
      "᪙"
    ],
    "limb": [
      "᥆",
      "᥇",
      "᥈",
      "᥉",
      "᥊",
      "᥋",
      "᥌",
      "᥍",
      "᥎",
      "᥏"
    ],
    "mathbold": [
      "𝟎",
      "𝟏",
      "𝟐",
      "𝟑",
      "𝟒",
      "𝟓",
      "𝟔",
      "𝟕",
      "𝟖",
      "𝟗"
    ],
    "mathdbl": [
      "𝟘",
      "𝟙",
      "𝟚",
      "𝟛",
      "𝟜",
      "𝟝",
      "𝟞",
      "𝟟",
      "𝟠",
      "𝟡"
    ],
    "mathmono": [
      "𝟶",
      "𝟷",
      "𝟸",
      "𝟹",
      "𝟺",
      "𝟻",
      "𝟼",
      "𝟽",
      "𝟾",
      "𝟿"
    ],
    "mathsanb": [
      "𝟬",
      "𝟭",
      "𝟮",
      "𝟯",
      "𝟰",
      "𝟱",
      "𝟲",
      "𝟳",
      "𝟴",
      "𝟵"
    ],
    "mathsans": [
      "𝟢",
      "𝟣",
      "𝟤",
      "𝟥",
      "𝟦",
      "𝟧",
      "𝟨",
      "𝟩",
      "𝟪",
      "𝟫"
    ],
    "mlym": [
      "൦",
      "൧",
      "൨",
      "൩",
      "൪",
      "൫",
      "൬",
      "൭",
      "൮",
      "൯"
    ],
    "modi": [
      "𑙐",
      "𑙑",
      "𑙒",
      "𑙓",
      "𑙔",
      "𑙕",
      "𑙖",
      "𑙗",
      "𑙘",
      "𑙙"
    ],
    "mong": [
      "᠐",
      "᠑",
      "᠒",
      "᠓",
      "᠔",
      "᠕",
      "᠖",
      "᠗",
      "᠘",
      "᠙"
    ],
    "mroo": [
      "𖩠",
      "𖩡",
      "𖩢",
      "𖩣",
      "𖩤",
      "𖩥",
      "𖩦",
      "𖩧",
      "𖩨",
      "𖩩"
    ],
    "mtei": [
      "꯰",
      "꯱",
      "꯲",
      "꯳",
      "꯴",
      "꯵",
      "꯶",
      "꯷",
      "꯸",
      "꯹"
    ],
    "mymr": [
      "၀",
      "၁",
      "၂",
      "၃",
      "၄",
      "၅",
      "၆",
      "၇",
      "၈",
      "၉"
    ],
    "mymrshan": [
      "႐",
      "႑",
      "႒",
      "႓",
      "႔",
      "႕",
      "႖",
      "႗",
      "႘",
      "႙"
    ],
    "mymrtlng": [
      "꧰",
      "꧱",
      "꧲",
      "꧳",
      "꧴",
      "꧵",
      "꧶",
      "꧷",
      "꧸",
      "꧹"
    ],
    "newa": [
      "𑑐",
      "𑑑",
      "𑑒",
      "𑑓",
      "𑑔",
      "𑑕",
      "𑑖",
      "𑑗",
      "𑑘",
      "𑑙"
    ],
    "nkoo": [
      "߀",
      "߁",
      "߂",
      "߃",
      "߄",
      "߅",
      "߆",
      "߇",
      "߈",
      "߉"
    ],
    "olck": [
      "᱐",
      "᱑",
      "᱒",
      "᱓",
      "᱔",
      "᱕",
      "᱖",
      "᱗",
      "᱘",
      "᱙"
    ],
    "orya": [
      "୦",
      "୧",
      "୨",
      "୩",
      "୪",
      "୫",
      "୬",
      "୭",
      "୮",
      "୯"
    ],
    "osma": [
      "𐒠",
      "𐒡",
      "𐒢",
      "𐒣",
      "𐒤",
      "𐒥",
      "𐒦",
      "𐒧",
      "𐒨",
      "𐒩"
    ],
    "rohg": [
      "𐴰",
      "𐴱",
      "𐴲",
      "𐴳",
      "𐴴",
      "𐴵",
      "𐴶",
      "𐴷",
      "𐴸",
      "𐴹"
    ],
    "saur": [
      "꣐",
      "꣑",
      "꣒",
      "꣓",
      "꣔",
      "꣕",
      "꣖",
      "꣗",
      "꣘",
      "꣙"
    ],
    "segment": [
      "🯰",
      "🯱",
      "🯲",
      "🯳",
      "🯴",
      "🯵",
      "🯶",
      "🯷",
      "🯸",
      "🯹"
    ],
    "shrd": [
      "𑇐",
      "𑇑",
      "𑇒",
      "𑇓",
      "𑇔",
      "𑇕",
      "𑇖",
      "𑇗",
      "𑇘",
      "𑇙"
    ],
    "sind": [
      "𑋰",
      "𑋱",
      "𑋲",
      "𑋳",
      "𑋴",
      "𑋵",
      "𑋶",
      "𑋷",
      "𑋸",
      "𑋹"
    ],
    "sinh": [
      "෦",
      "෧",
      "෨",
      "෩",
      "෪",
      "෫",
      "෬",
      "෭",
      "෮",
      "෯"
    ],
    "sora": [
      "𑃰",
      "𑃱",
      "𑃲",
      "𑃳",
      "𑃴",
      "𑃵",
      "𑃶",
      "𑃷",
      "𑃸",
      "𑃹"
    ],
    "sund": [
      "᮰",
      "᮱",
      "᮲",
      "᮳",
      "᮴",
      "᮵",
      "᮶",
      "᮷",
      "᮸",
      "᮹"
    ],
    "takr": [
      "𑛀",
      "𑛁",
      "𑛂",
      "𑛃",
      "𑛄",
      "𑛅",
      "𑛆",
      "𑛇",
      "𑛈",
      "𑛉"
    ],
    "talu": [
      "᧐",
      "᧑",
      "᧒",
      "᧓",
      "᧔",
      "᧕",
      "᧖",
      "᧗",
      "᧘",
      "᧙"
    ],
    "tamldec": [
      "௦",
      "௧",
      "௨",
      "௩",
      "௪",
      "௫",
      "௬",
      "௭",
      "௮",
      "௯"
    ],
    "telu": [
      "౦",
      "౧",
      "౨",
      "౩",
      "౪",
      "౫",
      "౬",
      "౭",
      "౮",
      "౯"
    ],
    "thai": [
      "๐",
      "๑",
      "๒",
      "๓",
      "๔",
      "๕",
      "๖",
      "๗",
      "๘",
      "๙"
    ],
    "tibt": [
      "༠",
      "༡",
      "༢",
      "༣",
      "༤",
      "༥",
      "༦",
      "༧",
      "༨",
      "༩"
    ],
    "tirh": [
      "𑓐",
      "𑓑",
      "𑓒",
      "𑓓",
      "𑓔",
      "𑓕",
      "𑓖",
      "𑓗",
      "𑓘",
      "𑓙"
    ],
    "vaii": [
      "ᘠ",
      "ᘡ",
      "ᘢ",
      "ᘣ",
      "ᘤ",
      "ᘥ",
      "ᘦ",
      "ᘧ",
      "ᘨ",
      "ᘩ"
    ],
    "wara": [
      "𑣠",
      "𑣡",
      "𑣢",
      "𑣣",
      "𑣤",
      "𑣥",
      "𑣦",
      "𑣧",
      "𑣨",
      "𑣩"
    ],
    "wcho": [
      "𞋰",
      "𞋱",
      "𞋲",
      "𞋳",
      "𞋴",
      "𞋵",
      "𞋶",
      "𞋷",
      "𞋸",
      "𞋹"
    ]
  };
  var CARET_S_UNICODE_REGEX = new RegExp("^".concat(S_UNICODE_REGEX.source));
  var S_DOLLAR_UNICODE_REGEX = new RegExp("".concat(S_UNICODE_REGEX.source, "$"));
  var CLDR_NUMBER_PATTERN = /[#0](?:[\.,][#0]+)*/g;
  function formatToParts$1(numberResult, data2, pl, options) {
    var _a2;
    var sign2 = numberResult.sign, exponent = numberResult.exponent, magnitude = numberResult.magnitude;
    var notation = options.notation, style = options.style, numberingSystem = options.numberingSystem;
    var defaultNumberingSystem = data2.numbers.nu[0];
    var compactNumberPattern = null;
    if (notation === "compact" && magnitude) {
      compactNumberPattern = getCompactDisplayPattern(numberResult, pl, data2, style, options.compactDisplay, options.currencyDisplay, numberingSystem);
    }
    var nonNameCurrencyPart;
    if (style === "currency" && options.currencyDisplay !== "name") {
      var byCurrencyDisplay = data2.currencies[options.currency];
      if (byCurrencyDisplay) {
        switch (options.currencyDisplay) {
          case "code":
            nonNameCurrencyPart = options.currency;
            break;
          case "symbol":
            nonNameCurrencyPart = byCurrencyDisplay.symbol;
            break;
          default:
            nonNameCurrencyPart = byCurrencyDisplay.narrow;
            break;
        }
      } else {
        nonNameCurrencyPart = options.currency;
      }
    }
    var numberPattern;
    if (!compactNumberPattern) {
      if (style === "decimal" || style === "unit" || style === "currency" && options.currencyDisplay === "name") {
        var decimalData = data2.numbers.decimal[numberingSystem] || data2.numbers.decimal[defaultNumberingSystem];
        numberPattern = getPatternForSign(decimalData.standard, sign2);
      } else if (style === "currency") {
        var currencyData = data2.numbers.currency[numberingSystem] || data2.numbers.currency[defaultNumberingSystem];
        numberPattern = getPatternForSign(currencyData[options.currencySign], sign2);
      } else {
        var percentPattern = data2.numbers.percent[numberingSystem] || data2.numbers.percent[defaultNumberingSystem];
        numberPattern = getPatternForSign(percentPattern, sign2);
      }
    } else {
      numberPattern = compactNumberPattern;
    }
    var decimalNumberPattern = CLDR_NUMBER_PATTERN.exec(numberPattern)[0];
    numberPattern = numberPattern.replace(CLDR_NUMBER_PATTERN, "{0}").replace(/'(.)'/g, "$1");
    if (style === "currency" && options.currencyDisplay !== "name") {
      var currencyData = data2.numbers.currency[numberingSystem] || data2.numbers.currency[defaultNumberingSystem];
      var afterCurrency = currencyData.currencySpacing.afterInsertBetween;
      if (afterCurrency && !S_DOLLAR_UNICODE_REGEX.test(nonNameCurrencyPart)) {
        numberPattern = numberPattern.replace("¤{0}", "¤".concat(afterCurrency, "{0}"));
      }
      var beforeCurrency = currencyData.currencySpacing.beforeInsertBetween;
      if (beforeCurrency && !CARET_S_UNICODE_REGEX.test(nonNameCurrencyPart)) {
        numberPattern = numberPattern.replace("{0}¤", "{0}".concat(beforeCurrency, "¤"));
      }
    }
    var numberPatternParts = numberPattern.split(/({c:[^}]+}|\{0\}|[¤%\-\+])/g);
    var numberParts = [];
    var symbols = data2.numbers.symbols[numberingSystem] || data2.numbers.symbols[defaultNumberingSystem];
    for (var _i = 0, numberPatternParts_1 = numberPatternParts; _i < numberPatternParts_1.length; _i++) {
      var part = numberPatternParts_1[_i];
      if (!part) {
        continue;
      }
      switch (part) {
        case "{0}": {
          numberParts.push.apply(numberParts, partitionNumberIntoParts(
            symbols,
            numberResult,
            notation,
            exponent,
            numberingSystem,
            // If compact number pattern exists, do not insert group separators.
            !compactNumberPattern && ((_a2 = options.useGrouping) !== null && _a2 !== void 0 ? _a2 : true),
            decimalNumberPattern,
            style,
            options.roundingIncrement,
            GetUnsignedRoundingMode(options.roundingMode, sign2 === -1)
          ));
          break;
        }
        case "-":
          numberParts.push({ type: "minusSign", value: symbols.minusSign });
          break;
        case "+":
          numberParts.push({ type: "plusSign", value: symbols.plusSign });
          break;
        case "%":
          numberParts.push({ type: "percentSign", value: symbols.percentSign });
          break;
        case "¤":
          numberParts.push({ type: "currency", value: nonNameCurrencyPart });
          break;
        default:
          if (/^\{c:/.test(part)) {
            numberParts.push({
              type: "compact",
              value: part.substring(3, part.length - 1)
            });
          } else {
            numberParts.push({ type: "literal", value: part });
          }
          break;
      }
    }
    switch (style) {
      case "currency": {
        if (options.currencyDisplay === "name") {
          var unitPattern = (data2.numbers.currency[numberingSystem] || data2.numbers.currency[defaultNumberingSystem]).unitPattern;
          var unitName = void 0;
          var currencyNameData = data2.currencies[options.currency];
          if (currencyNameData) {
            unitName = selectPlural(pl, numberResult.roundedNumber.times(Decimal.pow(10, exponent)).toNumber(), currencyNameData.displayName);
          } else {
            unitName = options.currency;
          }
          var unitPatternParts = unitPattern.split(/(\{[01]\})/g);
          var result = [];
          for (var _b = 0, unitPatternParts_1 = unitPatternParts; _b < unitPatternParts_1.length; _b++) {
            var part = unitPatternParts_1[_b];
            switch (part) {
              case "{0}":
                result.push.apply(result, numberParts);
                break;
              case "{1}":
                result.push({ type: "currency", value: unitName });
                break;
              default:
                if (part) {
                  result.push({ type: "literal", value: part });
                }
                break;
            }
          }
          return result;
        } else {
          return numberParts;
        }
      }
      case "unit": {
        var unit = options.unit, unitDisplay = options.unitDisplay;
        var unitData = data2.units.simple[unit];
        var unitPattern = void 0;
        if (unitData) {
          unitPattern = selectPlural(pl, numberResult.roundedNumber.times(Decimal.pow(10, exponent)).toNumber(), data2.units.simple[unit][unitDisplay]);
        } else {
          var _c = unit.split("-per-"), numeratorUnit = _c[0], denominatorUnit = _c[1];
          unitData = data2.units.simple[numeratorUnit];
          var numeratorUnitPattern = selectPlural(pl, numberResult.roundedNumber.times(Decimal.pow(10, exponent)).toNumber(), data2.units.simple[numeratorUnit][unitDisplay]);
          var perUnitPattern = data2.units.simple[denominatorUnit].perUnit[unitDisplay];
          if (perUnitPattern) {
            unitPattern = perUnitPattern.replace("{0}", numeratorUnitPattern);
          } else {
            var perPattern = data2.units.compound.per[unitDisplay];
            var denominatorPattern = selectPlural(pl, 1, data2.units.simple[denominatorUnit][unitDisplay]);
            unitPattern = unitPattern = perPattern.replace("{0}", numeratorUnitPattern).replace("{1}", denominatorPattern.replace("{0}", ""));
          }
        }
        var result = [];
        for (var _d = 0, _e = unitPattern.split(/(\s*\{0\}\s*)/); _d < _e.length; _d++) {
          var part = _e[_d];
          var interpolateMatch = /^(\s*)\{0\}(\s*)$/.exec(part);
          if (interpolateMatch) {
            if (interpolateMatch[1]) {
              result.push({ type: "literal", value: interpolateMatch[1] });
            }
            result.push.apply(result, numberParts);
            if (interpolateMatch[2]) {
              result.push({ type: "literal", value: interpolateMatch[2] });
            }
          } else if (part) {
            result.push({ type: "unit", value: part });
          }
        }
        return result;
      }
      default:
        return numberParts;
    }
  }
  function partitionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, useGrouping, decimalNumberPattern, style, roundingIncrement, unsignedRoundingMode) {
    var result = [];
    var n = numberResult.formattedString, x = numberResult.roundedNumber;
    if (x.isNaN()) {
      return [{ type: "nan", value: n }];
    } else if (!x.isFinite()) {
      return [{ type: "infinity", value: n }];
    }
    var digitReplacementTable = digitMapping[numberingSystem];
    if (digitReplacementTable) {
      n = n.replace(/\d/g, function(digit) {
        return digitReplacementTable[+digit] || digit;
      });
    }
    var decimalSepIndex = n.indexOf(".");
    var integer2;
    var fraction;
    if (decimalSepIndex > 0) {
      integer2 = n.slice(0, decimalSepIndex);
      fraction = n.slice(decimalSepIndex + 1);
    } else {
      integer2 = n;
    }
    var shouldUseGrouping = false;
    if (useGrouping === "always") {
      shouldUseGrouping = true;
    } else if (useGrouping === "min2") {
      shouldUseGrouping = x.greaterThanOrEqualTo(1e4);
    } else if (useGrouping === "auto" || useGrouping) {
      shouldUseGrouping = notation !== "compact" || x.greaterThanOrEqualTo(1e4);
    }
    if (shouldUseGrouping) {
      var groupSepSymbol = style === "currency" && symbols.currencyGroup != null ? symbols.currencyGroup : symbols.group;
      var groups = [];
      var integerNumberPattern = decimalNumberPattern.split(".")[0];
      var patternGroups = integerNumberPattern.split(",");
      var primaryGroupingSize = 3;
      var secondaryGroupingSize = 3;
      if (patternGroups.length > 1) {
        primaryGroupingSize = patternGroups[patternGroups.length - 1].length;
      }
      if (patternGroups.length > 2) {
        secondaryGroupingSize = patternGroups[patternGroups.length - 2].length;
      }
      var i = integer2.length - primaryGroupingSize;
      if (i > 0) {
        groups.push(integer2.slice(i, i + primaryGroupingSize));
        for (i -= secondaryGroupingSize; i > 0; i -= secondaryGroupingSize) {
          groups.push(integer2.slice(i, i + secondaryGroupingSize));
        }
        groups.push(integer2.slice(0, i + secondaryGroupingSize));
      } else {
        groups.push(integer2);
      }
      while (groups.length > 0) {
        var integerGroup = groups.pop();
        result.push({ type: "integer", value: integerGroup });
        if (groups.length > 0) {
          result.push({ type: "group", value: groupSepSymbol });
        }
      }
    } else {
      result.push({ type: "integer", value: integer2 });
    }
    if (fraction !== void 0) {
      var decimalSepSymbol = style === "currency" && symbols.currencyDecimal != null ? symbols.currencyDecimal : symbols.decimal;
      result.push({ type: "decimal", value: decimalSepSymbol }, { type: "fraction", value: fraction });
    }
    if ((notation === "scientific" || notation === "engineering") && x.isFinite()) {
      result.push({ type: "exponentSeparator", value: symbols.exponential });
      if (exponent < 0) {
        result.push({ type: "exponentMinusSign", value: symbols.minusSign });
        exponent = -exponent;
      }
      var exponentResult = ToRawFixed(new Decimal(exponent), 0, 0, roundingIncrement, unsignedRoundingMode);
      result.push({
        type: "exponentInteger",
        value: exponentResult.formattedString
      });
    }
    return result;
  }
  function getPatternForSign(pattern, sign2) {
    if (pattern.indexOf(";") < 0) {
      pattern = "".concat(pattern, ";-").concat(pattern);
    }
    var _a2 = pattern.split(";"), zeroPattern = _a2[0], negativePattern = _a2[1];
    switch (sign2) {
      case 0:
        return zeroPattern;
      case -1:
        return negativePattern;
      default:
        return negativePattern.indexOf("-") >= 0 ? negativePattern.replace(/-/g, "+") : "+".concat(zeroPattern);
    }
  }
  function getCompactDisplayPattern(numberResult, pl, data2, style, compactDisplay, currencyDisplay, numberingSystem) {
    var _a2;
    var roundedNumber = numberResult.roundedNumber, sign2 = numberResult.sign, magnitude = numberResult.magnitude;
    var magnitudeKey = String(Math.pow(10, magnitude));
    var defaultNumberingSystem = data2.numbers.nu[0];
    var pattern;
    if (style === "currency" && currencyDisplay !== "name") {
      var byNumberingSystem = data2.numbers.currency;
      var currencyData = byNumberingSystem[numberingSystem] || byNumberingSystem[defaultNumberingSystem];
      var compactPluralRules = (_a2 = currencyData.short) === null || _a2 === void 0 ? void 0 : _a2[magnitudeKey];
      if (!compactPluralRules) {
        return null;
      }
      pattern = selectPlural(pl, roundedNumber.toNumber(), compactPluralRules);
    } else {
      var byNumberingSystem = data2.numbers.decimal;
      var byCompactDisplay = byNumberingSystem[numberingSystem] || byNumberingSystem[defaultNumberingSystem];
      var compactPlaralRule = byCompactDisplay[compactDisplay][magnitudeKey];
      if (!compactPlaralRule) {
        return null;
      }
      pattern = selectPlural(pl, roundedNumber.toNumber(), compactPlaralRule);
    }
    if (pattern === "0") {
      return null;
    }
    pattern = getPatternForSign(pattern, sign2).replace(/([^\s;\-\+\d¤]+)/g, "{c:$1}").replace(/0+/, "0");
    return pattern;
  }
  function selectPlural(pl, x, rules) {
    return rules[pl.select(x)] || rules.other;
  }
  function FormatApproximately(internalSlots, result) {
    var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];
    var approximatelySign = symbols.approximatelySign;
    result.push({ type: "approximatelySign", value: approximatelySign });
    return result;
  }
  function PartitionNumberPattern(internalSlots, _x) {
    var _a2;
    var x = _x;
    var magnitude = 0;
    var pl = internalSlots.pl, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;
    var symbols = dataLocaleData.numbers.symbols[numberingSystem] || dataLocaleData.numbers.symbols[dataLocaleData.numbers.nu[0]];
    var exponent = 0;
    var n;
    if (x.isNaN()) {
      n = symbols.nan;
    } else if (!x.isFinite()) {
      n = symbols.infinity;
    } else {
      if (!x.isZero()) {
        invariant$2(x.isFinite(), "Input must be a mathematical value");
        if (internalSlots.style == "percent") {
          x = x.times(100);
        }
        _a2 = ComputeExponent(internalSlots, x), exponent = _a2[0], // IMPL: We need to record the magnitude of the number
        magnitude = _a2[1];
        x = x.times(Decimal.pow(10, -exponent));
      }
      var formatNumberResult = FormatNumericToString(internalSlots, x);
      n = formatNumberResult.formattedString;
      x = formatNumberResult.roundedNumber;
    }
    var sign2;
    var signDisplay = internalSlots.signDisplay;
    switch (signDisplay) {
      case "never":
        sign2 = 0;
        break;
      case "auto":
        if (x.isPositive() || x.isNaN()) {
          sign2 = 0;
        } else {
          sign2 = -1;
        }
        break;
      case "always":
        if (x.isPositive() || x.isNaN()) {
          sign2 = 1;
        } else {
          sign2 = -1;
        }
        break;
      case "exceptZero":
        if (x.isZero()) {
          sign2 = 0;
        } else if (x.isNegative()) {
          sign2 = -1;
        } else {
          sign2 = 1;
        }
        break;
      default:
        invariant$2(signDisplay === "negative", 'signDisplay must be "negative"');
        if (x.isNegative() && !x.isZero()) {
          sign2 = -1;
        } else {
          sign2 = 0;
        }
        break;
    }
    return formatToParts$1({
      roundedNumber: x,
      formattedString: n,
      exponent,
      // IMPL: We're returning this for our implementation of formatToParts
      magnitude,
      sign: sign2
    }, internalSlots.dataLocaleData, pl, internalSlots);
  }
  function FormatNumeric(internalSlots, x) {
    var parts = PartitionNumberPattern(internalSlots, x);
    return parts.map(function(p) {
      return p.value;
    }).join("");
  }
  function PartitionNumberRangePattern(numberFormat, x, y, _a2) {
    var getInternalSlots = _a2.getInternalSlots;
    invariant$2(!x.isNaN() && !y.isNaN(), "Input must be a number", RangeError);
    var internalSlots = getInternalSlots(numberFormat);
    var xResult = PartitionNumberPattern(internalSlots, x);
    var yResult = PartitionNumberPattern(internalSlots, y);
    if (FormatNumeric(internalSlots, x) === FormatNumeric(internalSlots, y)) {
      var appxResult = FormatApproximately(internalSlots, xResult);
      appxResult.forEach(function(el) {
        el.source = "shared";
      });
      return appxResult;
    }
    var result = [];
    xResult.forEach(function(el) {
      el.source = "startRange";
      result.push(el);
    });
    var rangeSeparator = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem].rangeSign;
    result.push({ type: "literal", value: rangeSeparator, source: "shared" });
    yResult.forEach(function(el) {
      el.source = "endRange";
      result.push(el);
    });
    return CollapseNumberRange(numberFormat, result, { getInternalSlots });
  }
  function FormatNumericRange(numberFormat, x, y, _a2) {
    var getInternalSlots = _a2.getInternalSlots;
    var parts = PartitionNumberRangePattern(numberFormat, x, y, {
      getInternalSlots
    });
    return parts.map(function(part) {
      return part.value;
    }).join("");
  }
  function FormatNumericRangeToParts(numberFormat, x, y, _a2) {
    var getInternalSlots = _a2.getInternalSlots;
    var parts = PartitionNumberRangePattern(numberFormat, x, y, {
      getInternalSlots
    });
    return parts.map(function(part, index) {
      return {
        type: part.type,
        value: part.value,
        source: part.source,
        result: index.toString()
      };
    });
  }
  function FormatNumericToParts(nf, x, implDetails) {
    var parts = PartitionNumberPattern(implDetails.getInternalSlots(nf), x);
    var result = ArrayCreate(0);
    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {
      var part = parts_1[_i];
      result.push({
        type: part.type,
        value: part.value
      });
    }
    return result;
  }
  function CanonicalizeLocaleList(locales) {
    return Intl.getCanonicalLocales(locales);
  }
  var data$1 = {
    supplemental: {
      languageMatching: {
        "written-new": [
          {
            paradigmLocales: {
              _locales: "en en_GB es es_419 pt_BR pt_PT"
            }
          },
          {
            $enUS: {
              _value: "AS+CA+GU+MH+MP+PH+PR+UM+US+VI"
            }
          },
          {
            $cnsar: {
              _value: "HK+MO"
            }
          },
          {
            $americas: {
              _value: "019"
            }
          },
          {
            $maghreb: {
              _value: "MA+DZ+TN+LY+MR+EH"
            }
          },
          {
            no: {
              _desired: "nb",
              _distance: "1"
            }
          },
          {
            bs: {
              _desired: "hr",
              _distance: "4"
            }
          },
          {
            bs: {
              _desired: "sh",
              _distance: "4"
            }
          },
          {
            hr: {
              _desired: "sh",
              _distance: "4"
            }
          },
          {
            sr: {
              _desired: "sh",
              _distance: "4"
            }
          },
          {
            aa: {
              _desired: "ssy",
              _distance: "4"
            }
          },
          {
            de: {
              _desired: "gsw",
              _distance: "4",
              _oneway: "true"
            }
          },
          {
            de: {
              _desired: "lb",
              _distance: "4",
              _oneway: "true"
            }
          },
          {
            no: {
              _desired: "da",
              _distance: "8"
            }
          },
          {
            nb: {
              _desired: "da",
              _distance: "8"
            }
          },
          {
            ru: {
              _desired: "ab",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ach",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            nl: {
              _desired: "af",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ak",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "am",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            es: {
              _desired: "ay",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            ru: {
              _desired: "az",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            ur: {
              _desired: "bal",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            ru: {
              _desired: "be",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "bem",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            hi: {
              _desired: "bh",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "bn",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "bo",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            fr: {
              _desired: "br",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            es: {
              _desired: "ca",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            fil: {
              _desired: "ceb",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "chr",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "ckb",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            fr: {
              _desired: "co",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            fr: {
              _desired: "crs",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            sk: {
              _desired: "cs",
              _distance: "20"
            }
          },
          {
            en: {
              _desired: "cy",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ee",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "eo",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            es: {
              _desired: "eu",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            da: {
              _desired: "fo",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            nl: {
              _desired: "fy",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ga",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "gaa",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "gd",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            es: {
              _desired: "gl",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            es: {
              _desired: "gn",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            hi: {
              _desired: "gu",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ha",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "haw",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            fr: {
              _desired: "ht",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            ru: {
              _desired: "hy",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ia",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ig",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "is",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            id: {
              _desired: "jv",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ka",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            fr: {
              _desired: "kg",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            ru: {
              _desired: "kk",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "km",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "kn",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "kri",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            tr: {
              _desired: "ku",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            ru: {
              _desired: "ky",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            it: {
              _desired: "la",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "lg",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            fr: {
              _desired: "ln",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "lo",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "loz",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            fr: {
              _desired: "lua",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            hi: {
              _desired: "mai",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "mfe",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            fr: {
              _desired: "mg",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "mi",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ml",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            ru: {
              _desired: "mn",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            hi: {
              _desired: "mr",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            id: {
              _desired: "ms",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "mt",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "my",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ne",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            nb: {
              _desired: "nn",
              _distance: "20"
            }
          },
          {
            no: {
              _desired: "nn",
              _distance: "20"
            }
          },
          {
            en: {
              _desired: "nso",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ny",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "nyn",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            fr: {
              _desired: "oc",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "om",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "or",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "pa",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "pcm",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ps",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            es: {
              _desired: "qu",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            de: {
              _desired: "rm",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "rn",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            fr: {
              _desired: "rw",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            hi: {
              _desired: "sa",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "sd",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "si",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "sn",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "so",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "sq",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "st",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            id: {
              _desired: "su",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "sw",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ta",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "te",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            ru: {
              _desired: "tg",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ti",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            ru: {
              _desired: "tk",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "tlh",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "tn",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "to",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            ru: {
              _desired: "tt",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "tum",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "ug",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            ru: {
              _desired: "uk",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "ur",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            ru: {
              _desired: "uz",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            fr: {
              _desired: "wo",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "xh",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "yi",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "yo",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "za",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            en: {
              _desired: "zu",
              _distance: "30",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "aao",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "abh",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "abv",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "acm",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "acq",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "acw",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "acx",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "acy",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "adf",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "aeb",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "aec",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "afb",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "ajp",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "apc",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "apd",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "arq",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "ars",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "ary",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "arz",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "auz",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "avl",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "ayh",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "ayl",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "ayn",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "ayp",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "bbz",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "pga",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "shu",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ar: {
              _desired: "ssh",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            az: {
              _desired: "azb",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            et: {
              _desired: "vro",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ff: {
              _desired: "ffm",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ff: {
              _desired: "fub",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ff: {
              _desired: "fue",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ff: {
              _desired: "fuf",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ff: {
              _desired: "fuh",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ff: {
              _desired: "fui",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ff: {
              _desired: "fuq",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ff: {
              _desired: "fuv",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            gn: {
              _desired: "gnw",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            gn: {
              _desired: "gui",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            gn: {
              _desired: "gun",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            gn: {
              _desired: "nhd",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            iu: {
              _desired: "ikt",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            kln: {
              _desired: "enb",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            kln: {
              _desired: "eyo",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            kln: {
              _desired: "niq",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            kln: {
              _desired: "oki",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            kln: {
              _desired: "pko",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            kln: {
              _desired: "sgc",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            kln: {
              _desired: "tec",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            kln: {
              _desired: "tuy",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            kok: {
              _desired: "gom",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            kpe: {
              _desired: "gkp",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            luy: {
              _desired: "ida",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            luy: {
              _desired: "lkb",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            luy: {
              _desired: "lko",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            luy: {
              _desired: "lks",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            luy: {
              _desired: "lri",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            luy: {
              _desired: "lrm",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            luy: {
              _desired: "lsm",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            luy: {
              _desired: "lto",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            luy: {
              _desired: "lts",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            luy: {
              _desired: "lwg",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            luy: {
              _desired: "nle",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            luy: {
              _desired: "nyd",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            luy: {
              _desired: "rag",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            lv: {
              _desired: "ltg",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            mg: {
              _desired: "bhr",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            mg: {
              _desired: "bjq",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            mg: {
              _desired: "bmm",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            mg: {
              _desired: "bzc",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            mg: {
              _desired: "msh",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            mg: {
              _desired: "skg",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            mg: {
              _desired: "tdx",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            mg: {
              _desired: "tkg",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            mg: {
              _desired: "txy",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            mg: {
              _desired: "xmv",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            mg: {
              _desired: "xmw",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            mn: {
              _desired: "mvf",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "bjn",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "btj",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "bve",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "bvu",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "coa",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "dup",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "hji",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "id",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "jak",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "jax",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "kvb",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "kvr",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "kxd",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "lce",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "lcf",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "liw",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "max",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "meo",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "mfa",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "mfb",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "min",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "mqg",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "msi",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "mui",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "orn",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "ors",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "pel",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "pse",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "tmw",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "urk",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "vkk",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "vkt",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "xmm",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "zlm",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ms: {
              _desired: "zmi",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ne: {
              _desired: "dty",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            om: {
              _desired: "gax",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            om: {
              _desired: "hae",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            om: {
              _desired: "orc",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            or: {
              _desired: "spv",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ps: {
              _desired: "pbt",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            ps: {
              _desired: "pst",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qub",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qud",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "quf",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qug",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "quh",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "quk",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qul",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qup",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qur",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qus",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "quw",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qux",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "quy",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qva",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qvc",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qve",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qvh",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qvi",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qvj",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qvl",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qvm",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qvn",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qvo",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qvp",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qvs",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qvw",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qvz",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qwa",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qwc",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qwh",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qws",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qxa",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qxc",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qxh",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qxl",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qxn",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qxo",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qxp",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qxr",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qxt",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qxu",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            qu: {
              _desired: "qxw",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            sc: {
              _desired: "sdc",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            sc: {
              _desired: "sdn",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            sc: {
              _desired: "sro",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            sq: {
              _desired: "aae",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            sq: {
              _desired: "aat",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            sq: {
              _desired: "aln",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            syr: {
              _desired: "aii",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            uz: {
              _desired: "uzs",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            yi: {
              _desired: "yih",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "cdo",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "cjy",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "cpx",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "czh",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "czo",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "gan",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "hak",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "hsn",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "lzh",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "mnp",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "nan",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "wuu",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            zh: {
              _desired: "yue",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "*": {
              _desired: "*",
              _distance: "80"
            }
          },
          {
            "en-Latn": {
              _desired: "am-Ethi",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "ru-Cyrl": {
              _desired: "az-Latn",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "bn-Beng",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "zh-Hans": {
              _desired: "bo-Tibt",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "ru-Cyrl": {
              _desired: "hy-Armn",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "ka-Geor",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "km-Khmr",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "kn-Knda",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "lo-Laoo",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "ml-Mlym",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "my-Mymr",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "ne-Deva",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "or-Orya",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "pa-Guru",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "ps-Arab",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "sd-Arab",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "si-Sinh",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "ta-Taml",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "te-Telu",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "ti-Ethi",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "ru-Cyrl": {
              _desired: "tk-Latn",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "ur-Arab",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "ru-Cyrl": {
              _desired: "uz-Latn",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "en-Latn": {
              _desired: "yi-Hebr",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "sr-Cyrl": {
              _desired: "sr-Latn",
              _distance: "5"
            }
          },
          {
            "zh-Hans": {
              _desired: "za-Latn",
              _distance: "10",
              _oneway: "true"
            }
          },
          {
            "zh-Hans": {
              _desired: "zh-Hani",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            "zh-Hant": {
              _desired: "zh-Hani",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            "ar-Arab": {
              _desired: "ar-Latn",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            "bn-Beng": {
              _desired: "bn-Latn",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            "gu-Gujr": {
              _desired: "gu-Latn",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            "hi-Deva": {
              _desired: "hi-Latn",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            "kn-Knda": {
              _desired: "kn-Latn",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            "ml-Mlym": {
              _desired: "ml-Latn",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            "mr-Deva": {
              _desired: "mr-Latn",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            "ta-Taml": {
              _desired: "ta-Latn",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            "te-Telu": {
              _desired: "te-Latn",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            "zh-Hans": {
              _desired: "zh-Latn",
              _distance: "20",
              _oneway: "true"
            }
          },
          {
            "ja-Jpan": {
              _desired: "ja-Latn",
              _distance: "5",
              _oneway: "true"
            }
          },
          {
            "ja-Jpan": {
              _desired: "ja-Hani",
              _distance: "5",
              _oneway: "true"
            }
          },
          {
            "ja-Jpan": {
              _desired: "ja-Hira",
              _distance: "5",
              _oneway: "true"
            }
          },
          {
            "ja-Jpan": {
              _desired: "ja-Kana",
              _distance: "5",
              _oneway: "true"
            }
          },
          {
            "ja-Jpan": {
              _desired: "ja-Hrkt",
              _distance: "5",
              _oneway: "true"
            }
          },
          {
            "ja-Hrkt": {
              _desired: "ja-Hira",
              _distance: "5",
              _oneway: "true"
            }
          },
          {
            "ja-Hrkt": {
              _desired: "ja-Kana",
              _distance: "5",
              _oneway: "true"
            }
          },
          {
            "ko-Kore": {
              _desired: "ko-Hani",
              _distance: "5",
              _oneway: "true"
            }
          },
          {
            "ko-Kore": {
              _desired: "ko-Hang",
              _distance: "5",
              _oneway: "true"
            }
          },
          {
            "ko-Kore": {
              _desired: "ko-Jamo",
              _distance: "5",
              _oneway: "true"
            }
          },
          {
            "ko-Hang": {
              _desired: "ko-Jamo",
              _distance: "5",
              _oneway: "true"
            }
          },
          {
            "*-*": {
              _desired: "*-*",
              _distance: "50"
            }
          },
          {
            "ar-*-$maghreb": {
              _desired: "ar-*-$maghreb",
              _distance: "4"
            }
          },
          {
            "ar-*-$!maghreb": {
              _desired: "ar-*-$!maghreb",
              _distance: "4"
            }
          },
          {
            "ar-*-*": {
              _desired: "ar-*-*",
              _distance: "5"
            }
          },
          {
            "en-*-$enUS": {
              _desired: "en-*-$enUS",
              _distance: "4"
            }
          },
          {
            "en-*-GB": {
              _desired: "en-*-$!enUS",
              _distance: "3"
            }
          },
          {
            "en-*-$!enUS": {
              _desired: "en-*-$!enUS",
              _distance: "4"
            }
          },
          {
            "en-*-*": {
              _desired: "en-*-*",
              _distance: "5"
            }
          },
          {
            "es-*-$americas": {
              _desired: "es-*-$americas",
              _distance: "4"
            }
          },
          {
            "es-*-$!americas": {
              _desired: "es-*-$!americas",
              _distance: "4"
            }
          },
          {
            "es-*-*": {
              _desired: "es-*-*",
              _distance: "5"
            }
          },
          {
            "pt-*-$americas": {
              _desired: "pt-*-$americas",
              _distance: "4"
            }
          },
          {
            "pt-*-$!americas": {
              _desired: "pt-*-$!americas",
              _distance: "4"
            }
          },
          {
            "pt-*-*": {
              _desired: "pt-*-*",
              _distance: "5"
            }
          },
          {
            "zh-Hant-$cnsar": {
              _desired: "zh-Hant-$cnsar",
              _distance: "4"
            }
          },
          {
            "zh-Hant-$!cnsar": {
              _desired: "zh-Hant-$!cnsar",
              _distance: "4"
            }
          },
          {
            "zh-Hant-*": {
              _desired: "zh-Hant-*",
              _distance: "5"
            }
          },
          {
            "*-*-*": {
              _desired: "*-*-*",
              _distance: "4"
            }
          }
        ]
      }
    }
  };
  var regions = {
    "001": [
      "001",
      "001-status-grouping",
      "002",
      "005",
      "009",
      "011",
      "013",
      "014",
      "015",
      "017",
      "018",
      "019",
      "021",
      "029",
      "030",
      "034",
      "035",
      "039",
      "053",
      "054",
      "057",
      "061",
      "142",
      "143",
      "145",
      "150",
      "151",
      "154",
      "155",
      "AC",
      "AD",
      "AE",
      "AF",
      "AG",
      "AI",
      "AL",
      "AM",
      "AO",
      "AQ",
      "AR",
      "AS",
      "AT",
      "AU",
      "AW",
      "AX",
      "AZ",
      "BA",
      "BB",
      "BD",
      "BE",
      "BF",
      "BG",
      "BH",
      "BI",
      "BJ",
      "BL",
      "BM",
      "BN",
      "BO",
      "BQ",
      "BR",
      "BS",
      "BT",
      "BV",
      "BW",
      "BY",
      "BZ",
      "CA",
      "CC",
      "CD",
      "CF",
      "CG",
      "CH",
      "CI",
      "CK",
      "CL",
      "CM",
      "CN",
      "CO",
      "CP",
      "CQ",
      "CR",
      "CU",
      "CV",
      "CW",
      "CX",
      "CY",
      "CZ",
      "DE",
      "DG",
      "DJ",
      "DK",
      "DM",
      "DO",
      "DZ",
      "EA",
      "EC",
      "EE",
      "EG",
      "EH",
      "ER",
      "ES",
      "ET",
      "EU",
      "EZ",
      "FI",
      "FJ",
      "FK",
      "FM",
      "FO",
      "FR",
      "GA",
      "GB",
      "GD",
      "GE",
      "GF",
      "GG",
      "GH",
      "GI",
      "GL",
      "GM",
      "GN",
      "GP",
      "GQ",
      "GR",
      "GS",
      "GT",
      "GU",
      "GW",
      "GY",
      "HK",
      "HM",
      "HN",
      "HR",
      "HT",
      "HU",
      "IC",
      "ID",
      "IE",
      "IL",
      "IM",
      "IN",
      "IO",
      "IQ",
      "IR",
      "IS",
      "IT",
      "JE",
      "JM",
      "JO",
      "JP",
      "KE",
      "KG",
      "KH",
      "KI",
      "KM",
      "KN",
      "KP",
      "KR",
      "KW",
      "KY",
      "KZ",
      "LA",
      "LB",
      "LC",
      "LI",
      "LK",
      "LR",
      "LS",
      "LT",
      "LU",
      "LV",
      "LY",
      "MA",
      "MC",
      "MD",
      "ME",
      "MF",
      "MG",
      "MH",
      "MK",
      "ML",
      "MM",
      "MN",
      "MO",
      "MP",
      "MQ",
      "MR",
      "MS",
      "MT",
      "MU",
      "MV",
      "MW",
      "MX",
      "MY",
      "MZ",
      "NA",
      "NC",
      "NE",
      "NF",
      "NG",
      "NI",
      "NL",
      "NO",
      "NP",
      "NR",
      "NU",
      "NZ",
      "OM",
      "PA",
      "PE",
      "PF",
      "PG",
      "PH",
      "PK",
      "PL",
      "PM",
      "PN",
      "PR",
      "PS",
      "PT",
      "PW",
      "PY",
      "QA",
      "QO",
      "RE",
      "RO",
      "RS",
      "RU",
      "RW",
      "SA",
      "SB",
      "SC",
      "SD",
      "SE",
      "SG",
      "SH",
      "SI",
      "SJ",
      "SK",
      "SL",
      "SM",
      "SN",
      "SO",
      "SR",
      "SS",
      "ST",
      "SV",
      "SX",
      "SY",
      "SZ",
      "TA",
      "TC",
      "TD",
      "TF",
      "TG",
      "TH",
      "TJ",
      "TK",
      "TL",
      "TM",
      "TN",
      "TO",
      "TR",
      "TT",
      "TV",
      "TW",
      "TZ",
      "UA",
      "UG",
      "UM",
      "UN",
      "US",
      "UY",
      "UZ",
      "VA",
      "VC",
      "VE",
      "VG",
      "VI",
      "VN",
      "VU",
      "WF",
      "WS",
      "XK",
      "YE",
      "YT",
      "ZA",
      "ZM",
      "ZW"
    ],
    "002": [
      "002",
      "002-status-grouping",
      "011",
      "014",
      "015",
      "017",
      "018",
      "202",
      "AO",
      "BF",
      "BI",
      "BJ",
      "BW",
      "CD",
      "CF",
      "CG",
      "CI",
      "CM",
      "CV",
      "DJ",
      "DZ",
      "EA",
      "EG",
      "EH",
      "ER",
      "ET",
      "GA",
      "GH",
      "GM",
      "GN",
      "GQ",
      "GW",
      "IC",
      "IO",
      "KE",
      "KM",
      "LR",
      "LS",
      "LY",
      "MA",
      "MG",
      "ML",
      "MR",
      "MU",
      "MW",
      "MZ",
      "NA",
      "NE",
      "NG",
      "RE",
      "RW",
      "SC",
      "SD",
      "SH",
      "SL",
      "SN",
      "SO",
      "SS",
      "ST",
      "SZ",
      "TD",
      "TF",
      "TG",
      "TN",
      "TZ",
      "UG",
      "YT",
      "ZA",
      "ZM",
      "ZW"
    ],
    "003": [
      "003",
      "013",
      "021",
      "029",
      "AG",
      "AI",
      "AW",
      "BB",
      "BL",
      "BM",
      "BQ",
      "BS",
      "BZ",
      "CA",
      "CR",
      "CU",
      "CW",
      "DM",
      "DO",
      "GD",
      "GL",
      "GP",
      "GT",
      "HN",
      "HT",
      "JM",
      "KN",
      "KY",
      "LC",
      "MF",
      "MQ",
      "MS",
      "MX",
      "NI",
      "PA",
      "PM",
      "PR",
      "SV",
      "SX",
      "TC",
      "TT",
      "US",
      "VC",
      "VG",
      "VI"
    ],
    "005": [
      "005",
      "AR",
      "BO",
      "BR",
      "BV",
      "CL",
      "CO",
      "EC",
      "FK",
      "GF",
      "GS",
      "GY",
      "PE",
      "PY",
      "SR",
      "UY",
      "VE"
    ],
    "009": [
      "009",
      "053",
      "054",
      "057",
      "061",
      "AC",
      "AQ",
      "AS",
      "AU",
      "CC",
      "CK",
      "CP",
      "CX",
      "DG",
      "FJ",
      "FM",
      "GU",
      "HM",
      "KI",
      "MH",
      "MP",
      "NC",
      "NF",
      "NR",
      "NU",
      "NZ",
      "PF",
      "PG",
      "PN",
      "PW",
      "QO",
      "SB",
      "TA",
      "TK",
      "TO",
      "TV",
      "UM",
      "VU",
      "WF",
      "WS"
    ],
    "011": [
      "011",
      "BF",
      "BJ",
      "CI",
      "CV",
      "GH",
      "GM",
      "GN",
      "GW",
      "LR",
      "ML",
      "MR",
      "NE",
      "NG",
      "SH",
      "SL",
      "SN",
      "TG"
    ],
    "013": [
      "013",
      "BZ",
      "CR",
      "GT",
      "HN",
      "MX",
      "NI",
      "PA",
      "SV"
    ],
    "014": [
      "014",
      "BI",
      "DJ",
      "ER",
      "ET",
      "IO",
      "KE",
      "KM",
      "MG",
      "MU",
      "MW",
      "MZ",
      "RE",
      "RW",
      "SC",
      "SO",
      "SS",
      "TF",
      "TZ",
      "UG",
      "YT",
      "ZM",
      "ZW"
    ],
    "015": [
      "015",
      "DZ",
      "EA",
      "EG",
      "EH",
      "IC",
      "LY",
      "MA",
      "SD",
      "TN"
    ],
    "017": [
      "017",
      "AO",
      "CD",
      "CF",
      "CG",
      "CM",
      "GA",
      "GQ",
      "ST",
      "TD"
    ],
    "018": [
      "018",
      "BW",
      "LS",
      "NA",
      "SZ",
      "ZA"
    ],
    "019": [
      "003",
      "005",
      "013",
      "019",
      "019-status-grouping",
      "021",
      "029",
      "419",
      "AG",
      "AI",
      "AR",
      "AW",
      "BB",
      "BL",
      "BM",
      "BO",
      "BQ",
      "BR",
      "BS",
      "BV",
      "BZ",
      "CA",
      "CL",
      "CO",
      "CR",
      "CU",
      "CW",
      "DM",
      "DO",
      "EC",
      "FK",
      "GD",
      "GF",
      "GL",
      "GP",
      "GS",
      "GT",
      "GY",
      "HN",
      "HT",
      "JM",
      "KN",
      "KY",
      "LC",
      "MF",
      "MQ",
      "MS",
      "MX",
      "NI",
      "PA",
      "PE",
      "PM",
      "PR",
      "PY",
      "SR",
      "SV",
      "SX",
      "TC",
      "TT",
      "US",
      "UY",
      "VC",
      "VE",
      "VG",
      "VI"
    ],
    "021": [
      "021",
      "BM",
      "CA",
      "GL",
      "PM",
      "US"
    ],
    "029": [
      "029",
      "AG",
      "AI",
      "AW",
      "BB",
      "BL",
      "BQ",
      "BS",
      "CU",
      "CW",
      "DM",
      "DO",
      "GD",
      "GP",
      "HT",
      "JM",
      "KN",
      "KY",
      "LC",
      "MF",
      "MQ",
      "MS",
      "PR",
      "SX",
      "TC",
      "TT",
      "VC",
      "VG",
      "VI"
    ],
    "030": [
      "030",
      "CN",
      "HK",
      "JP",
      "KP",
      "KR",
      "MN",
      "MO",
      "TW"
    ],
    "034": [
      "034",
      "AF",
      "BD",
      "BT",
      "IN",
      "IR",
      "LK",
      "MV",
      "NP",
      "PK"
    ],
    "035": [
      "035",
      "BN",
      "ID",
      "KH",
      "LA",
      "MM",
      "MY",
      "PH",
      "SG",
      "TH",
      "TL",
      "VN"
    ],
    "039": [
      "039",
      "AD",
      "AL",
      "BA",
      "ES",
      "GI",
      "GR",
      "HR",
      "IT",
      "ME",
      "MK",
      "MT",
      "PT",
      "RS",
      "SI",
      "SM",
      "VA",
      "XK"
    ],
    "053": [
      "053",
      "AU",
      "CC",
      "CX",
      "HM",
      "NF",
      "NZ"
    ],
    "054": [
      "054",
      "FJ",
      "NC",
      "PG",
      "SB",
      "VU"
    ],
    "057": [
      "057",
      "FM",
      "GU",
      "KI",
      "MH",
      "MP",
      "NR",
      "PW",
      "UM"
    ],
    "061": [
      "061",
      "AS",
      "CK",
      "NU",
      "PF",
      "PN",
      "TK",
      "TO",
      "TV",
      "WF",
      "WS"
    ],
    "142": [
      "030",
      "034",
      "035",
      "142",
      "143",
      "145",
      "AE",
      "AF",
      "AM",
      "AZ",
      "BD",
      "BH",
      "BN",
      "BT",
      "CN",
      "CY",
      "GE",
      "HK",
      "ID",
      "IL",
      "IN",
      "IQ",
      "IR",
      "JO",
      "JP",
      "KG",
      "KH",
      "KP",
      "KR",
      "KW",
      "KZ",
      "LA",
      "LB",
      "LK",
      "MM",
      "MN",
      "MO",
      "MV",
      "MY",
      "NP",
      "OM",
      "PH",
      "PK",
      "PS",
      "QA",
      "SA",
      "SG",
      "SY",
      "TH",
      "TJ",
      "TL",
      "TM",
      "TR",
      "TW",
      "UZ",
      "VN",
      "YE"
    ],
    "143": [
      "143",
      "KG",
      "KZ",
      "TJ",
      "TM",
      "UZ"
    ],
    "145": [
      "145",
      "AE",
      "AM",
      "AZ",
      "BH",
      "CY",
      "GE",
      "IL",
      "IQ",
      "JO",
      "KW",
      "LB",
      "OM",
      "PS",
      "QA",
      "SA",
      "SY",
      "TR",
      "YE"
    ],
    "150": [
      "039",
      "150",
      "151",
      "154",
      "155",
      "AD",
      "AL",
      "AT",
      "AX",
      "BA",
      "BE",
      "BG",
      "BY",
      "CH",
      "CQ",
      "CZ",
      "DE",
      "DK",
      "EE",
      "ES",
      "FI",
      "FO",
      "FR",
      "GB",
      "GG",
      "GI",
      "GR",
      "HR",
      "HU",
      "IE",
      "IM",
      "IS",
      "IT",
      "JE",
      "LI",
      "LT",
      "LU",
      "LV",
      "MC",
      "MD",
      "ME",
      "MK",
      "MT",
      "NL",
      "NO",
      "PL",
      "PT",
      "RO",
      "RS",
      "RU",
      "SE",
      "SI",
      "SJ",
      "SK",
      "SM",
      "UA",
      "VA",
      "XK"
    ],
    "151": [
      "151",
      "BG",
      "BY",
      "CZ",
      "HU",
      "MD",
      "PL",
      "RO",
      "RU",
      "SK",
      "UA"
    ],
    "154": [
      "154",
      "AX",
      "CQ",
      "DK",
      "EE",
      "FI",
      "FO",
      "GB",
      "GG",
      "IE",
      "IM",
      "IS",
      "JE",
      "LT",
      "LV",
      "NO",
      "SE",
      "SJ"
    ],
    "155": [
      "155",
      "AT",
      "BE",
      "CH",
      "DE",
      "FR",
      "LI",
      "LU",
      "MC",
      "NL"
    ],
    "202": [
      "011",
      "014",
      "017",
      "018",
      "202",
      "AO",
      "BF",
      "BI",
      "BJ",
      "BW",
      "CD",
      "CF",
      "CG",
      "CI",
      "CM",
      "CV",
      "DJ",
      "ER",
      "ET",
      "GA",
      "GH",
      "GM",
      "GN",
      "GQ",
      "GW",
      "IO",
      "KE",
      "KM",
      "LR",
      "LS",
      "MG",
      "ML",
      "MR",
      "MU",
      "MW",
      "MZ",
      "NA",
      "NE",
      "NG",
      "RE",
      "RW",
      "SC",
      "SH",
      "SL",
      "SN",
      "SO",
      "SS",
      "ST",
      "SZ",
      "TD",
      "TF",
      "TG",
      "TZ",
      "UG",
      "YT",
      "ZA",
      "ZM",
      "ZW"
    ],
    "419": [
      "005",
      "013",
      "029",
      "419",
      "AG",
      "AI",
      "AR",
      "AW",
      "BB",
      "BL",
      "BO",
      "BQ",
      "BR",
      "BS",
      "BV",
      "BZ",
      "CL",
      "CO",
      "CR",
      "CU",
      "CW",
      "DM",
      "DO",
      "EC",
      "FK",
      "GD",
      "GF",
      "GP",
      "GS",
      "GT",
      "GY",
      "HN",
      "HT",
      "JM",
      "KN",
      "KY",
      "LC",
      "MF",
      "MQ",
      "MS",
      "MX",
      "NI",
      "PA",
      "PE",
      "PR",
      "PY",
      "SR",
      "SV",
      "SX",
      "TC",
      "TT",
      "UY",
      "VC",
      "VE",
      "VG",
      "VI"
    ],
    "EU": [
      "AT",
      "BE",
      "BG",
      "CY",
      "CZ",
      "DE",
      "DK",
      "EE",
      "ES",
      "EU",
      "FI",
      "FR",
      "GR",
      "HR",
      "HU",
      "IE",
      "IT",
      "LT",
      "LU",
      "LV",
      "MT",
      "NL",
      "PL",
      "PT",
      "RO",
      "SE",
      "SI",
      "SK"
    ],
    "EZ": [
      "AT",
      "BE",
      "CY",
      "DE",
      "EE",
      "ES",
      "EZ",
      "FI",
      "FR",
      "GR",
      "IE",
      "IT",
      "LT",
      "LU",
      "LV",
      "MT",
      "NL",
      "PT",
      "SI",
      "SK"
    ],
    "QO": [
      "AC",
      "AQ",
      "CP",
      "DG",
      "QO",
      "TA"
    ],
    "UN": [
      "AD",
      "AE",
      "AF",
      "AG",
      "AL",
      "AM",
      "AO",
      "AR",
      "AT",
      "AU",
      "AZ",
      "BA",
      "BB",
      "BD",
      "BE",
      "BF",
      "BG",
      "BH",
      "BI",
      "BJ",
      "BN",
      "BO",
      "BR",
      "BS",
      "BT",
      "BW",
      "BY",
      "BZ",
      "CA",
      "CD",
      "CF",
      "CG",
      "CH",
      "CI",
      "CL",
      "CM",
      "CN",
      "CO",
      "CR",
      "CU",
      "CV",
      "CY",
      "CZ",
      "DE",
      "DJ",
      "DK",
      "DM",
      "DO",
      "DZ",
      "EC",
      "EE",
      "EG",
      "ER",
      "ES",
      "ET",
      "FI",
      "FJ",
      "FM",
      "FR",
      "GA",
      "GB",
      "GD",
      "GE",
      "GH",
      "GM",
      "GN",
      "GQ",
      "GR",
      "GT",
      "GW",
      "GY",
      "HN",
      "HR",
      "HT",
      "HU",
      "ID",
      "IE",
      "IL",
      "IN",
      "IQ",
      "IR",
      "IS",
      "IT",
      "JM",
      "JO",
      "JP",
      "KE",
      "KG",
      "KH",
      "KI",
      "KM",
      "KN",
      "KP",
      "KR",
      "KW",
      "KZ",
      "LA",
      "LB",
      "LC",
      "LI",
      "LK",
      "LR",
      "LS",
      "LT",
      "LU",
      "LV",
      "LY",
      "MA",
      "MC",
      "MD",
      "ME",
      "MG",
      "MH",
      "MK",
      "ML",
      "MM",
      "MN",
      "MR",
      "MT",
      "MU",
      "MV",
      "MW",
      "MX",
      "MY",
      "MZ",
      "NA",
      "NE",
      "NG",
      "NI",
      "NL",
      "NO",
      "NP",
      "NR",
      "NZ",
      "OM",
      "PA",
      "PE",
      "PG",
      "PH",
      "PK",
      "PL",
      "PT",
      "PW",
      "PY",
      "QA",
      "RO",
      "RS",
      "RU",
      "RW",
      "SA",
      "SB",
      "SC",
      "SD",
      "SE",
      "SG",
      "SI",
      "SK",
      "SL",
      "SM",
      "SN",
      "SO",
      "SR",
      "SS",
      "ST",
      "SV",
      "SY",
      "SZ",
      "TD",
      "TG",
      "TH",
      "TJ",
      "TL",
      "TM",
      "TN",
      "TO",
      "TR",
      "TT",
      "TV",
      "TZ",
      "UA",
      "UG",
      "UN",
      "US",
      "UY",
      "UZ",
      "VC",
      "VE",
      "VN",
      "VU",
      "WS",
      "YE",
      "ZA",
      "ZM",
      "ZW"
    ]
  };
  var UNICODE_EXTENSION_SEQUENCE_REGEX = /-u(?:-[0-9a-z]{2,8})+/gi;
  function invariant$1(condition, message, Err) {
    if (Err === void 0) {
      Err = Error;
    }
    if (!condition) {
      throw new Err(message);
    }
  }
  var DEFAULT_MATCHING_THRESHOLD = 838;
  var PROCESSED_DATA;
  function processData() {
    var _a2, _b;
    if (!PROCESSED_DATA) {
      var paradigmLocales = (_b = (_a2 = data$1.supplemental.languageMatching["written-new"][0]) === null || _a2 === void 0 ? void 0 : _a2.paradigmLocales) === null || _b === void 0 ? void 0 : _b._locales.split(" ");
      var matchVariables = data$1.supplemental.languageMatching["written-new"].slice(1, 5);
      var data2 = data$1.supplemental.languageMatching["written-new"].slice(5);
      var matches = data2.map(function(d) {
        var key = Object.keys(d)[0];
        var value2 = d[key];
        return {
          supported: key,
          desired: value2._desired,
          distance: +value2._distance,
          oneway: value2.oneway === "true" ? true : false
        };
      }, {});
      PROCESSED_DATA = {
        matches,
        matchVariables: matchVariables.reduce(function(all, d) {
          var key = Object.keys(d)[0];
          var value2 = d[key];
          all[key.slice(1)] = value2._value.split("+");
          return all;
        }, {}),
        paradigmLocales: __spreadArray(__spreadArray([], paradigmLocales, true), paradigmLocales.map(function(l) {
          return new Intl.Locale(l.replace(/_/g, "-")).maximize().toString();
        }), true)
      };
    }
    return PROCESSED_DATA;
  }
  function isMatched(locale, languageMatchInfoLocale, matchVariables) {
    var _a2 = languageMatchInfoLocale.split("-"), language = _a2[0], script = _a2[1], region = _a2[2];
    var matches = true;
    if (region && region[0] === "$") {
      var shouldInclude = region[1] !== "!";
      var matchRegions = shouldInclude ? matchVariables[region.slice(1)] : matchVariables[region.slice(2)];
      var expandedMatchedRegions = matchRegions.map(function(r) {
        return regions[r] || [r];
      }).reduce(function(all, list) {
        return __spreadArray(__spreadArray([], all, true), list, true);
      }, []);
      matches && (matches = !(expandedMatchedRegions.indexOf(locale.region || "") > -1 != shouldInclude));
    } else {
      matches && (matches = locale.region ? region === "*" || region === locale.region : true);
    }
    matches && (matches = locale.script ? script === "*" || script === locale.script : true);
    matches && (matches = locale.language ? language === "*" || language === locale.language : true);
    return matches;
  }
  function serializeLSR(lsr) {
    return [lsr.language, lsr.script, lsr.region].filter(Boolean).join("-");
  }
  function findMatchingDistanceForLSR(desired, supported, data2) {
    for (var _i = 0, _a2 = data2.matches; _i < _a2.length; _i++) {
      var d = _a2[_i];
      var matches = isMatched(desired, d.desired, data2.matchVariables) && isMatched(supported, d.supported, data2.matchVariables);
      if (!d.oneway && !matches) {
        matches = isMatched(desired, d.supported, data2.matchVariables) && isMatched(supported, d.desired, data2.matchVariables);
      }
      if (matches) {
        var distance = d.distance * 10;
        if (data2.paradigmLocales.indexOf(serializeLSR(desired)) > -1 != data2.paradigmLocales.indexOf(serializeLSR(supported)) > -1) {
          return distance - 1;
        }
        return distance;
      }
    }
    throw new Error("No matching distance found");
  }
  function findMatchingDistance(desired, supported) {
    var desiredLocale = new Intl.Locale(desired).maximize();
    var supportedLocale = new Intl.Locale(supported).maximize();
    var desiredLSR = {
      language: desiredLocale.language,
      script: desiredLocale.script || "",
      region: desiredLocale.region || ""
    };
    var supportedLSR = {
      language: supportedLocale.language,
      script: supportedLocale.script || "",
      region: supportedLocale.region || ""
    };
    var matchingDistance = 0;
    var data2 = processData();
    if (desiredLSR.language !== supportedLSR.language) {
      matchingDistance += findMatchingDistanceForLSR({
        language: desiredLocale.language,
        script: "",
        region: ""
      }, {
        language: supportedLocale.language,
        script: "",
        region: ""
      }, data2);
    }
    if (desiredLSR.script !== supportedLSR.script) {
      matchingDistance += findMatchingDistanceForLSR({
        language: desiredLocale.language,
        script: desiredLSR.script,
        region: ""
      }, {
        language: supportedLocale.language,
        script: supportedLSR.script,
        region: ""
      }, data2);
    }
    if (desiredLSR.region !== supportedLSR.region) {
      matchingDistance += findMatchingDistanceForLSR(desiredLSR, supportedLSR, data2);
    }
    return matchingDistance;
  }
  function findBestMatch(requestedLocales, supportedLocales, threshold) {
    if (threshold === void 0) {
      threshold = DEFAULT_MATCHING_THRESHOLD;
    }
    var lowestDistance = Infinity;
    var result = {
      matchedDesiredLocale: "",
      distances: {}
    };
    requestedLocales.forEach(function(desired, i) {
      if (!result.distances[desired]) {
        result.distances[desired] = {};
      }
      supportedLocales.forEach(function(supported) {
        var distance = findMatchingDistance(desired, supported) + 0 + i * 40;
        result.distances[desired][supported] = distance;
        if (distance < lowestDistance) {
          lowestDistance = distance;
          result.matchedDesiredLocale = desired;
          result.matchedSupportedLocale = supported;
        }
      });
    });
    if (lowestDistance >= threshold) {
      result.matchedDesiredLocale = void 0;
      result.matchedSupportedLocale = void 0;
    }
    return result;
  }
  function BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale) {
    var foundLocale;
    var extension2;
    var noExtensionLocales = [];
    var noExtensionLocaleMap = requestedLocales.reduce(function(all, l) {
      var noExtensionLocale = l.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, "");
      noExtensionLocales.push(noExtensionLocale);
      all[noExtensionLocale] = l;
      return all;
    }, {});
    var result = findBestMatch(noExtensionLocales, availableLocales);
    if (result.matchedSupportedLocale && result.matchedDesiredLocale) {
      foundLocale = result.matchedSupportedLocale;
      extension2 = noExtensionLocaleMap[result.matchedDesiredLocale].slice(result.matchedDesiredLocale.length) || void 0;
    }
    if (!foundLocale) {
      return { locale: getDefaultLocale() };
    }
    return {
      locale: foundLocale,
      extension: extension2
    };
  }
  function CanonicalizeUValue(ukey, uvalue) {
    var lowerValue = uvalue.toLowerCase();
    invariant$1(ukey !== void 0, "ukey must be defined");
    var canonicalized = lowerValue;
    return canonicalized;
  }
  function CanonicalizeUnicodeLocaleId(locale) {
    return Intl.getCanonicalLocales(locale)[0];
  }
  function InsertUnicodeExtensionAndCanonicalize(locale, attributes, keywords) {
    invariant$1(locale.indexOf("-u-") === -1, "Expected locale to not have a Unicode locale extension");
    var extension2 = "-u";
    for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {
      var attr = attributes_1[_i];
      extension2 += "-".concat(attr);
    }
    for (var _a2 = 0, keywords_1 = keywords; _a2 < keywords_1.length; _a2++) {
      var kw = keywords_1[_a2];
      var key = kw.key, value2 = kw.value;
      extension2 += "-".concat(key);
      if (value2 !== "") {
        extension2 += "-".concat(value2);
      }
    }
    if (extension2 === "-u") {
      return CanonicalizeUnicodeLocaleId(locale);
    }
    var privateIndex = locale.indexOf("-x-");
    var newLocale;
    if (privateIndex === -1) {
      newLocale = locale + extension2;
    } else {
      var preExtension = locale.slice(0, privateIndex);
      var postExtension = locale.slice(privateIndex);
      newLocale = preExtension + extension2 + postExtension;
    }
    return CanonicalizeUnicodeLocaleId(newLocale);
  }
  function BestAvailableLocale(availableLocales, locale) {
    var candidate = locale;
    while (true) {
      if (availableLocales.indexOf(candidate) > -1) {
        return candidate;
      }
      var pos = candidate.lastIndexOf("-");
      if (!~pos) {
        return void 0;
      }
      if (pos >= 2 && candidate[pos - 2] === "-") {
        pos -= 2;
      }
      candidate = candidate.slice(0, pos);
    }
  }
  function LookupMatcher(availableLocales, requestedLocales, getDefaultLocale) {
    var result = { locale: "" };
    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {
      var locale = requestedLocales_1[_i];
      var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, "");
      var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);
      if (availableLocale) {
        result.locale = availableLocale;
        if (locale !== noExtensionLocale) {
          result.extension = locale.slice(noExtensionLocale.length, locale.length);
        }
        return result;
      }
    }
    result.locale = getDefaultLocale();
    return result;
  }
  function UnicodeExtensionComponents(extension2) {
    invariant$1(extension2 === extension2.toLowerCase(), "Expected extension to be lowercase");
    invariant$1(extension2.slice(0, 3) === "-u-", "Expected extension to be a Unicode locale extension");
    var attributes = [];
    var keywords = [];
    var keyword;
    var size = extension2.length;
    var k = 3;
    while (k < size) {
      var e = extension2.indexOf("-", k);
      var len = void 0;
      if (e === -1) {
        len = size - k;
      } else {
        len = e - k;
      }
      var subtag = extension2.slice(k, k + len);
      invariant$1(len >= 2, "Expected a subtag to have at least 2 characters");
      if (keyword === void 0 && len != 2) {
        if (attributes.indexOf(subtag) === -1) {
          attributes.push(subtag);
        }
      } else if (len === 2) {
        keyword = { key: subtag, value: "" };
        if (keywords.find(function(k2) {
          return k2.key === (keyword === null || keyword === void 0 ? void 0 : keyword.key);
        }) === void 0) {
          keywords.push(keyword);
        }
      } else if ((keyword === null || keyword === void 0 ? void 0 : keyword.value) === "") {
        keyword.value = subtag;
      } else {
        invariant$1(keyword !== void 0, "Expected keyword to be defined");
        keyword.value += "-" + subtag;
      }
      k += len + 1;
    }
    return { attributes, keywords };
  }
  function ResolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData, getDefaultLocale) {
    var _a2;
    var matcher = options.localeMatcher;
    var r;
    if (matcher === "lookup") {
      r = LookupMatcher(Array.from(availableLocales), requestedLocales, getDefaultLocale);
    } else {
      r = BestFitMatcher(Array.from(availableLocales), requestedLocales, getDefaultLocale);
    }
    if (r == null) {
      r = {
        locale: getDefaultLocale(),
        extension: ""
      };
    }
    var foundLocale = r.locale;
    var foundLocaleData = localeData[foundLocale];
    var result = { locale: "en", dataLocale: foundLocale };
    var components;
    var keywords;
    if (r.extension) {
      components = UnicodeExtensionComponents(r.extension);
      keywords = components.keywords;
    } else {
      keywords = [];
    }
    var supportedKeywords = [];
    var _loop_1 = function(key2) {
      var keyLocaleData = (_a2 = foundLocaleData === null || foundLocaleData === void 0 ? void 0 : foundLocaleData[key2]) !== null && _a2 !== void 0 ? _a2 : [];
      invariant$1(Array.isArray(keyLocaleData), "keyLocaleData for ".concat(key2, " must be an array"));
      var value2 = keyLocaleData[0];
      invariant$1(value2 === void 0 || typeof value2 === "string", "value must be a string or undefined");
      var supportedKeyword = void 0;
      var entry = keywords.find(function(k) {
        return k.key === key2;
      });
      if (entry) {
        var requestedValue = entry.value;
        if (requestedValue !== "") {
          if (keyLocaleData.indexOf(requestedValue) > -1) {
            value2 = requestedValue;
            supportedKeyword = {
              key: key2,
              value: value2
            };
          }
        } else if (keyLocaleData.indexOf("true") > -1) {
          value2 = "true";
          supportedKeyword = {
            key: key2,
            value: value2
          };
        }
      }
      var optionsValue = options[key2];
      invariant$1(optionsValue == null || typeof optionsValue === "string", "optionsValue must be a string or undefined");
      if (typeof optionsValue === "string") {
        var ukey = key2.toLowerCase();
        optionsValue = CanonicalizeUValue(ukey, optionsValue);
        if (optionsValue === "") {
          optionsValue = "true";
        }
      }
      if (optionsValue !== value2 && keyLocaleData.indexOf(optionsValue) > -1) {
        value2 = optionsValue;
        supportedKeyword = void 0;
      }
      if (supportedKeyword) {
        supportedKeywords.push(supportedKeyword);
      }
      result[key2] = value2;
    };
    for (var _i = 0, relevantExtensionKeys_1 = relevantExtensionKeys; _i < relevantExtensionKeys_1.length; _i++) {
      var key = relevantExtensionKeys_1[_i];
      _loop_1(key);
    }
    var supportedAttributes = [];
    if (supportedKeywords.length > 0) {
      supportedAttributes = [];
      foundLocale = InsertUnicodeExtensionAndCanonicalize(foundLocale, supportedAttributes, supportedKeywords);
    }
    result.locale = foundLocale;
    return result;
  }
  function LookupSupportedLocales(availableLocales, requestedLocales) {
    var subset = [];
    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {
      var locale = requestedLocales_1[_i];
      var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, "");
      var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);
      if (availableLocale) {
        subset.push(availableLocale);
      }
    }
    return subset;
  }
  function match(requestedLocales, availableLocales, defaultLocale, opts) {
    return ResolveLocale(availableLocales, CanonicalizeLocaleList(requestedLocales), {
      localeMatcher: (opts === null || opts === void 0 ? void 0 : opts.algorithm) || "best fit"
    }, [], {}, function() {
      return defaultLocale;
    }).locale;
  }
  const lib$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    LookupSupportedLocales,
    ResolveLocale,
    match
  }, Symbol.toStringTag, { value: "Module" }));
  var VALID_ROUNDING_INCREMENTS = /* @__PURE__ */ new Set([
    1,
    2,
    5,
    10,
    20,
    25,
    50,
    100,
    200,
    250,
    500,
    1e3,
    2e3,
    2500,
    5e3
  ]);
  function SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {
    var mnid = GetNumberOption(opts, "minimumIntegerDigits", 1, 21, 1);
    var mnfd = opts.minimumFractionDigits;
    var mxfd = opts.maximumFractionDigits;
    var mnsd = opts.minimumSignificantDigits;
    var mxsd = opts.maximumSignificantDigits;
    internalSlots.minimumIntegerDigits = mnid;
    var roundingIncrement = GetNumberOption(opts, "roundingIncrement", 1, 5e3, 1);
    invariant$2(VALID_ROUNDING_INCREMENTS.has(roundingIncrement), "Invalid rounding increment value: ".concat(roundingIncrement, ".\nValid values are ").concat(Array.from(VALID_ROUNDING_INCREMENTS).join(", "), "."));
    var roundingMode = GetOption(opts, "roundingMode", "string", [
      "ceil",
      "floor",
      "expand",
      "trunc",
      "halfCeil",
      "halfFloor",
      "halfExpand",
      "halfTrunc",
      "halfEven"
    ], "halfExpand");
    var roundingPriority = GetOption(opts, "roundingPriority", "string", ["auto", "morePrecision", "lessPrecision"], "auto");
    var trailingZeroDisplay = GetOption(opts, "trailingZeroDisplay", "string", ["auto", "stripIfInteger"], "auto");
    if (roundingIncrement !== 1) {
      mxfdDefault = mnfdDefault;
    }
    internalSlots.roundingIncrement = roundingIncrement;
    internalSlots.roundingMode = roundingMode;
    internalSlots.trailingZeroDisplay = trailingZeroDisplay;
    var hasSd = mnsd !== void 0 || mxsd !== void 0;
    var hasFd = mnfd !== void 0 || mxfd !== void 0;
    var needSd = true;
    var needFd = true;
    if (roundingPriority === "auto") {
      needSd = hasSd;
      if (hasSd || !hasFd && notation === "compact") {
        needFd = false;
      }
    }
    if (needSd) {
      if (hasSd) {
        internalSlots.minimumSignificantDigits = DefaultNumberOption(mnsd, 1, 21, 1);
        internalSlots.maximumSignificantDigits = DefaultNumberOption(mxsd, internalSlots.minimumSignificantDigits, 21, 21);
      } else {
        internalSlots.minimumSignificantDigits = 1;
        internalSlots.maximumSignificantDigits = 21;
      }
    }
    if (needFd) {
      if (hasFd) {
        mnfd = DefaultNumberOption(mnfd, 0, 100, void 0);
        mxfd = DefaultNumberOption(mxfd, 0, 100, void 0);
        if (mnfd === void 0) {
          invariant$2(mxfd !== void 0, "maximumFractionDigits must be defined");
          mnfd = Math.min(mnfdDefault, mxfd);
        } else if (mxfd === void 0) {
          mxfd = Math.max(mxfdDefault, mnfd);
        } else if (mnfd > mxfd) {
          throw new RangeError("Invalid range, ".concat(mnfd, " > ").concat(mxfd));
        }
        internalSlots.minimumFractionDigits = mnfd;
        internalSlots.maximumFractionDigits = mxfd;
      } else {
        internalSlots.minimumFractionDigits = mnfdDefault;
        internalSlots.maximumFractionDigits = mxfdDefault;
      }
    }
    if (!needSd && !needFd) {
      internalSlots.minimumFractionDigits = 0;
      internalSlots.maximumFractionDigits = 0;
      internalSlots.minimumSignificantDigits = 1;
      internalSlots.maximumSignificantDigits = 2;
      internalSlots.roundingType = "morePrecision";
      internalSlots.roundingPriority = "morePrecision";
    } else if (roundingPriority === "morePrecision") {
      internalSlots.roundingType = "morePrecision";
      internalSlots.roundingPriority = "morePrecision";
    } else if (roundingPriority === "lessPrecision") {
      internalSlots.roundingType = "lessPrecision";
      internalSlots.roundingPriority = "lessPrecision";
    } else if (hasSd) {
      internalSlots.roundingType = "significantDigits";
      internalSlots.roundingPriority = "auto";
    } else {
      internalSlots.roundingType = "fractionDigits";
      internalSlots.roundingPriority = "auto";
    }
    if (roundingIncrement !== 1) {
      invariant$2(internalSlots.roundingType === "fractionDigits", "Invalid roundingType", TypeError);
      invariant$2(internalSlots.maximumFractionDigits === internalSlots.minimumFractionDigits, "With roundingIncrement > 1, maximumFractionDigits and minimumFractionDigits must be equal.", RangeError);
    }
  }
  function SetNumberFormatUnitOptions(internalSlots, options) {
    if (options === void 0) {
      options = /* @__PURE__ */ Object.create(null);
    }
    var style = GetOption(options, "style", "string", ["decimal", "percent", "currency", "unit"], "decimal");
    internalSlots.style = style;
    var currency = GetOption(options, "currency", "string", void 0, void 0);
    invariant$2(currency === void 0 || IsWellFormedCurrencyCode(currency), "Malformed currency code", RangeError);
    invariant$2(style !== "currency" || currency !== void 0, "currency cannot be undefined", TypeError);
    var currencyDisplay = GetOption(options, "currencyDisplay", "string", ["code", "symbol", "narrowSymbol", "name"], "symbol");
    var currencySign = GetOption(options, "currencySign", "string", ["standard", "accounting"], "standard");
    var unit = GetOption(options, "unit", "string", void 0, void 0);
    invariant$2(unit === void 0 || IsWellFormedUnitIdentifier(unit), "Invalid unit argument for Intl.NumberFormat()", RangeError);
    invariant$2(style !== "unit" || unit !== void 0, "unit cannot be undefined", TypeError);
    var unitDisplay = GetOption(options, "unitDisplay", "string", ["short", "narrow", "long"], "short");
    if (style === "currency") {
      internalSlots.currency = currency.toUpperCase();
      internalSlots.currencyDisplay = currencyDisplay;
      internalSlots.currencySign = currencySign;
    }
    if (style === "unit") {
      internalSlots.unit = unit;
      internalSlots.unitDisplay = unitDisplay;
    }
  }
  function InitializeNumberFormat(nf, locales, opts, _a2) {
    var getInternalSlots = _a2.getInternalSlots, localeData = _a2.localeData, availableLocales = _a2.availableLocales, numberingSystemNames = _a2.numberingSystemNames, getDefaultLocale = _a2.getDefaultLocale, currencyDigitsData = _a2.currencyDigitsData;
    var requestedLocales = CanonicalizeLocaleList$1(locales);
    var options = CoerceOptionsToObject(opts);
    var opt = /* @__PURE__ */ Object.create(null);
    var matcher = GetOption(options, "localeMatcher", "string", ["lookup", "best fit"], "best fit");
    opt.localeMatcher = matcher;
    var numberingSystem = GetOption(options, "numberingSystem", "string", void 0, void 0);
    if (numberingSystem !== void 0 && numberingSystemNames.indexOf(numberingSystem) < 0) {
      throw RangeError("Invalid numberingSystems: ".concat(numberingSystem));
    }
    opt.nu = numberingSystem;
    var r = ResolveLocale(
      Array.from(availableLocales),
      requestedLocales,
      opt,
      // [[RelevantExtensionKeys]] slot, which is a constant
      ["nu"],
      localeData,
      getDefaultLocale
    );
    var dataLocaleData = localeData[r.dataLocale];
    invariant$2(!!dataLocaleData, "Missing locale data for ".concat(r.dataLocale));
    var internalSlots = getInternalSlots(nf);
    internalSlots.locale = r.locale;
    internalSlots.dataLocale = r.dataLocale;
    internalSlots.numberingSystem = r.nu;
    internalSlots.dataLocaleData = dataLocaleData;
    SetNumberFormatUnitOptions(internalSlots, options);
    var style = internalSlots.style;
    var notation = GetOption(options, "notation", "string", ["standard", "scientific", "engineering", "compact"], "standard");
    internalSlots.notation = notation;
    var mnfdDefault;
    var mxfdDefault;
    if (style === "currency" && notation === "standard") {
      var currency = internalSlots.currency;
      var cDigits = CurrencyDigits(currency, { currencyDigitsData });
      mnfdDefault = cDigits;
      mxfdDefault = cDigits;
    } else {
      mnfdDefault = 0;
      mxfdDefault = style === "percent" ? 0 : 3;
    }
    SetNumberFormatDigitOptions(internalSlots, options, mnfdDefault, mxfdDefault, notation);
    var compactDisplay = GetOption(options, "compactDisplay", "string", ["short", "long"], "short");
    var defaultUseGrouping = "auto";
    if (notation === "compact") {
      internalSlots.compactDisplay = compactDisplay;
      defaultUseGrouping = "min2";
    }
    var useGrouping = GetStringOrBooleanOption(options, "useGrouping", ["min2", "auto", "always"], "always", false, defaultUseGrouping);
    internalSlots.useGrouping = useGrouping;
    var signDisplay = GetOption(options, "signDisplay", "string", ["auto", "never", "always", "exceptZero", "negative"], "auto");
    internalSlots.signDisplay = signDisplay;
    return nf;
  }
  function PartitionPattern(pattern) {
    var result = [];
    var beginIndex = pattern.indexOf("{");
    var endIndex = 0;
    var nextIndex = 0;
    var length = pattern.length;
    while (beginIndex < pattern.length && beginIndex > -1) {
      endIndex = pattern.indexOf("}", beginIndex);
      invariant$2(endIndex > beginIndex, "Invalid pattern ".concat(pattern));
      if (beginIndex > nextIndex) {
        result.push({
          type: "literal",
          value: pattern.substring(nextIndex, beginIndex)
        });
      }
      result.push({
        type: pattern.substring(beginIndex + 1, endIndex),
        value: void 0
      });
      nextIndex = endIndex + 1;
      beginIndex = pattern.indexOf("{", nextIndex);
    }
    if (nextIndex < length) {
      result.push({
        type: "literal",
        value: pattern.substring(nextIndex, length)
      });
    }
    return result;
  }
  function SupportedLocales(availableLocales, requestedLocales, options) {
    var matcher = "best fit";
    if (options !== void 0) {
      options = ToObject(options);
      matcher = GetOption(options, "localeMatcher", "string", ["lookup", "best fit"], "best fit");
    }
    if (matcher === "best fit") {
      return LookupSupportedLocales(Array.from(availableLocales), requestedLocales);
    }
    return LookupSupportedLocales(Array.from(availableLocales), requestedLocales);
  }
  (function(_super) {
    __extends(MissingLocaleDataError, _super);
    function MissingLocaleDataError() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.type = "MISSING_LOCALE_DATA";
      return _this;
    }
    return MissingLocaleDataError;
  })(Error);
  function isMissingLocaleDataError(e) {
    return e.type === "MISSING_LOCALE_DATA";
  }
  var RangePatternType;
  (function(RangePatternType2) {
    RangePatternType2["startRange"] = "startRange";
    RangePatternType2["shared"] = "shared";
    RangePatternType2["endRange"] = "endRange";
  })(RangePatternType || (RangePatternType = {}));
  function ToIntlMathematicalValue(input) {
    var primValue = ToPrimitive(input, "number");
    if (typeof primValue === "bigint") {
      return new Decimal(primValue);
    }
    if (primValue === void 0) {
      return new Decimal(NaN);
    }
    if (primValue === true) {
      return new Decimal(1);
    }
    if (primValue === false) {
      return new Decimal(0);
    }
    if (primValue === null) {
      return new Decimal(0);
    }
    try {
      return new Decimal(primValue);
    } catch (e) {
      return new Decimal(NaN);
    }
  }
  const lib = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    ApplyUnsignedRoundingMode,
    ArrayCreate,
    CanonicalizeLocaleList: CanonicalizeLocaleList$1,
    CanonicalizeTimeZoneName,
    CoerceOptionsToObject,
    CollapseNumberRange,
    ComputeExponent,
    ComputeExponentForMagnitude,
    CurrencyDigits,
    DateFromTime,
    Day,
    DayFromYear,
    DayWithinYear,
    DaysInYear,
    FormatApproximately,
    FormatNumeric,
    FormatNumericRange,
    FormatNumericRangeToParts,
    FormatNumericToParts,
    FormatNumericToString,
    GetNumberOption,
    GetOption,
    GetOptionsObject,
    GetStringOrBooleanOption,
    GetUnsignedRoundingMode,
    HasOwnProperty,
    HourFromTime,
    InLeapYear,
    InitializeNumberFormat,
    IsSanctionedSimpleUnitIdentifier,
    IsValidTimeZoneName,
    IsWellFormedCurrencyCode,
    IsWellFormedUnitIdentifier,
    MinFromTime,
    MonthFromTime,
    OrdinaryHasInstance,
    PartitionNumberPattern,
    PartitionNumberRangePattern,
    PartitionPattern,
    get RangePatternType() {
      return RangePatternType;
    },
    SANCTIONED_UNITS,
    SIMPLE_UNITS,
    SameValue,
    SecFromTime,
    SetNumberFormatDigitOptions,
    SetNumberFormatUnitOptions,
    SupportedLocales,
    TimeClip,
    TimeFromYear,
    ToIntlMathematicalValue,
    ToNumber,
    ToObject,
    ToPrimitive,
    ToRawFixed,
    ToRawPrecision,
    ToString,
    Type,
    WeekDay,
    YearFromTime,
    ZERO,
    _formatToParts: formatToParts$1,
    createDataProperty,
    createMemoizedDateTimeFormat,
    createMemoizedListFormat,
    createMemoizedLocale,
    createMemoizedNumberFormat,
    createMemoizedPluralRules,
    defineProperty,
    getInternalSlot,
    getMultiInternalSlots,
    invariant: invariant$2,
    isLiteralPart,
    isMissingLocaleDataError,
    msFromTime,
    removeUnitNamespace,
    setInternalSlot,
    setMultiInternalSlots
  }, Symbol.toStringTag, { value: "Module" }));
  const require$$1 = /* @__PURE__ */ getAugmentedNamespace(lib);
  var intlEnumerator = {};
  var shouldPolyfill$5 = {};
  var hasRequiredShouldPolyfill$5;
  function requireShouldPolyfill$5() {
    if (hasRequiredShouldPolyfill$5) return shouldPolyfill$5;
    hasRequiredShouldPolyfill$5 = 1;
    Object.defineProperty(shouldPolyfill$5, "__esModule", { value: true });
    shouldPolyfill$5.shouldPolyfill = shouldPolyfill2;
    function shouldPolyfill2() {
      return !("supportedValuesOf" in Intl);
    }
    return shouldPolyfill$5;
  }
  var src = {};
  var getSupportedCalendars = {};
  var calendars_generated$1 = {};
  var hasRequiredCalendars_generated$1;
  function requireCalendars_generated$1() {
    if (hasRequiredCalendars_generated$1) return calendars_generated$1;
    hasRequiredCalendars_generated$1 = 1;
    Object.defineProperty(calendars_generated$1, "__esModule", { value: true });
    calendars_generated$1.calendars = void 0;
    calendars_generated$1.calendars = ["buddhist", "chinese", "coptic", "dangi", "ethioaa", "ethiopic", "gregory", "hebrew", "indian", "islamic", "islamic-civil", "islamic-rgsa", "islamic-tbla", "islamic-umalqura", "islamicc", "iso8601", "japanese", "persian", "roc"];
    return calendars_generated$1;
  }
  var hasRequiredGetSupportedCalendars;
  function requireGetSupportedCalendars() {
    if (hasRequiredGetSupportedCalendars) return getSupportedCalendars;
    hasRequiredGetSupportedCalendars = 1;
    Object.defineProperty(getSupportedCalendars, "__esModule", { value: true });
    getSupportedCalendars.getSupportedCalendars = getSupportedCalendars$1;
    var ecma402_abstract_1 = require$$1;
    var calendars_generated_1 = requireCalendars_generated$1();
    function isSupportedCalendar(item, locale) {
      if (locale === void 0) {
        locale = "en";
      }
      try {
        var dateTimeFormat = (0, ecma402_abstract_1.createMemoizedDateTimeFormat)("".concat(locale, "-u-ca-").concat(item));
        var options = dateTimeFormat.resolvedOptions().calendar;
        if (item !== "gregory" || options !== "gregory")
          return true;
      } catch (_err) {
      }
      return false;
    }
    function getSupportedCalendars$1(localePrefix) {
      return calendars_generated_1.calendars.filter(function(calendar) {
        return isSupportedCalendar(calendar, localePrefix);
      });
    }
    return getSupportedCalendars;
  }
  var getSupportedCollations = {};
  var collations_generated = {};
  var hasRequiredCollations_generated;
  function requireCollations_generated() {
    if (hasRequiredCollations_generated) return collations_generated;
    hasRequiredCollations_generated = 1;
    Object.defineProperty(collations_generated, "__esModule", { value: true });
    collations_generated.collations = void 0;
    collations_generated.collations = ["big5han", "compat", "dict", "direct", "ducet", "emoji", "eor", "gb2312", "phonebk", "phonetic", "pinyin", "reformed", "search", "searchjl", "standard", "stroke", "trad", "unihan", "zhuyin"];
    return collations_generated;
  }
  var hasRequiredGetSupportedCollations;
  function requireGetSupportedCollations() {
    if (hasRequiredGetSupportedCollations) return getSupportedCollations;
    hasRequiredGetSupportedCollations = 1;
    Object.defineProperty(getSupportedCollations, "__esModule", { value: true });
    getSupportedCollations.getSupportedCollations = getSupportedCollations$1;
    var collations_generated_1 = requireCollations_generated();
    function isSupported(collation, locale) {
      if (locale === void 0) {
        locale = "en";
      }
      try {
        return Intl.Collator("".concat(locale, "-u-co-").concat(collation)).resolvedOptions().collation === collation;
      } catch (_err) {
      }
      return false;
    }
    function getSupportedCollations$1(locale) {
      return collations_generated_1.collations.filter(function(collation) {
        return isSupported(collation, locale);
      });
    }
    return getSupportedCollations;
  }
  var getSupportedCurrencies = {};
  var currencies_generated = {};
  var hasRequiredCurrencies_generated;
  function requireCurrencies_generated() {
    if (hasRequiredCurrencies_generated) return currencies_generated;
    hasRequiredCurrencies_generated = 1;
    Object.defineProperty(currencies_generated, "__esModule", { value: true });
    currencies_generated.currencies = void 0;
    currencies_generated.currencies = ["ADP", "AED", "AFA", "AFN", "ALK", "ALL", "AMD", "ANG", "AOA", "AOK", "AON", "AOR", "ARA", "ARL", "ARM", "ARP", "ARS", "ATS", "AUD", "AWG", "AZM", "AZN", "BAD", "BAM", "BAN", "BBD", "BDT", "BEC", "BEF", "BEL", "BGL", "BGM", "BGN", "BGO", "BHD", "BIF", "BMD", "BND", "BOB", "BOL", "BOP", "BOV", "BRB", "BRC", "BRE", "BRL", "BRN", "BRR", "BRZ", "BSD", "BTN", "BUK", "BWP", "BYB", "BYN", "BYR", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLE", "CLF", "CLP", "CNH", "CNX", "CNY", "COP", "COU", "CRC", "CSD", "CSK", "CUC", "CUP", "CVE", "CYP", "CZK", "DDM", "DEM", "DJF", "DKK", "DOP", "DZD", "ECS", "ECV", "EEK", "EGP", "ERN", "ESA", "ESB", "ESP", "ETB", "EUR", "FIM", "FJD", "FKP", "FRF", "GBP", "GEK", "GEL", "GHC", "GHS", "GIP", "GMD", "GNF", "GNS", "GQE", "GRD", "GTQ", "GWE", "GWP", "GYD", "HKD", "HNL", "HRD", "HRK", "HTG", "HUF", "IDR", "IEP", "ILP", "ILR", "ILS", "INR", "IQD", "IRR", "ISJ", "ISK", "ITL", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRH", "KRO", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LTL", "LTT", "LUC", "LUF", "LUL", "LVL", "LVR", "LYD", "MAD", "MAF", "MCF", "MDC", "MDL", "MGA", "MGF", "MKD", "MKN", "MLF", "MMK", "MNT", "MOP", "MRO", "MRU", "MTL", "MTP", "MUR", "MVP", "MVR", "MWK", "MXN", "MXP", "MXV", "MYR", "MZE", "MZM", "MZN", "NAD", "NGN", "NIC", "NIO", "NLG", "NOK", "NPR", "NZD", "OMR", "PAB", "PEI", "PEN", "PES", "PGK", "PHP", "PKR", "PLN", "PLZ", "PTE", "PYG", "QAR", "RHD", "ROL", "RON", "RSD", "RUB", "RUR", "RWF", "SAR", "SBD", "SCR", "SDD", "SDG", "SDP", "SEK", "SGD", "SHP", "SIT", "SKK", "SLE", "SLL", "SOS", "SRD", "SRG", "SSP", "STD", "STN", "SUR", "SVC", "SYP", "SZL", "THB", "TJR", "TJS", "TMM", "TMT", "TND", "TOP", "TPE", "TRL", "TRY", "TTD", "TWD", "TZS", "UAH", "UAK", "UGS", "UGX", "USD", "USN", "USS", "UYI", "UYP", "UYU", "UYW", "UZS", "VEB", "VED", "VEF", "VES", "VND", "VNN", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XCG", "XDR", "XEU", "XFO", "XFU", "XOF", "XPD", "XPF", "XPT", "XRE", "XSU", "XTS", "XUA", "XXX", "YDD", "YER", "YUD", "YUM", "YUN", "YUR", "ZAL", "ZAR", "ZMK", "ZMW", "ZRN", "ZRZ", "ZWD", "ZWG", "ZWL", "ZWR"];
    return currencies_generated;
  }
  var hasRequiredGetSupportedCurrencies;
  function requireGetSupportedCurrencies() {
    if (hasRequiredGetSupportedCurrencies) return getSupportedCurrencies;
    hasRequiredGetSupportedCurrencies = 1;
    Object.defineProperty(getSupportedCurrencies, "__esModule", { value: true });
    getSupportedCurrencies.getSupportedCurrencies = getSupportedCurrencies$1;
    var ecma402_abstract_1 = require$$1;
    var currencies_generated_1 = requireCurrencies_generated();
    function isSupportedCurrency(currency, locale) {
      if (locale === void 0) {
        locale = "en";
      }
      try {
        var numberFormat = (0, ecma402_abstract_1.createMemoizedNumberFormat)(locale, {
          style: "currency",
          currencyDisplay: "name",
          currency
        });
        var format2 = numberFormat.format(123);
        if (format2.substring(0, 3) !== currency && format2.substring(format2.length - 3) !== currency) {
          return true;
        }
      } catch (_err) {
      }
      return false;
    }
    function getSupportedCurrencies$1(locale) {
      var ATOZ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
      var supportedCurrencies = [];
      for (var _i = 0, currencies_1 = currencies_generated_1.currencies; _i < currencies_1.length; _i++) {
        var currency = currencies_1[_i];
        if (currency.length === 3) {
          if (isSupportedCurrency(currency, locale)) {
            supportedCurrencies.push(currency);
          }
        } else if (currency.length === 5 && currency[3] === "~") {
          var start = ATOZ.indexOf(currency[2]);
          var end = ATOZ.indexOf(currency[4]);
          for (var i = start; i <= end; i++) {
            var currentCurrency = currency.substring(0, 2) + ATOZ[i];
            if (isSupportedCurrency(currentCurrency, locale)) {
              supportedCurrencies.push(currentCurrency);
            }
          }
        }
      }
      return supportedCurrencies;
    }
    return getSupportedCurrencies;
  }
  var getSupportedNumberingSystems = {};
  var numberingSystems_generated$2 = {};
  var hasRequiredNumberingSystems_generated$2;
  function requireNumberingSystems_generated$2() {
    if (hasRequiredNumberingSystems_generated$2) return numberingSystems_generated$2;
    hasRequiredNumberingSystems_generated$2 = 1;
    Object.defineProperty(numberingSystems_generated$2, "__esModule", { value: true });
    numberingSystems_generated$2.numberingSystemNames = void 0;
    numberingSystems_generated$2.numberingSystemNames = ["adlm", "ahom", "arab", "arabext", "armn", "armnlow", "bali", "beng", "bhks", "brah", "cakm", "cham", "cyrl", "deva", "diak", "ethi", "fullwide", "gara", "geor", "gong", "gonm", "grek", "greklow", "gujr", "gukh", "guru", "hanidays", "hanidec", "hans", "hansfin", "hant", "hantfin", "hebr", "hmng", "hmnp", "java", "jpan", "jpanfin", "jpanyear", "kali", "kawi", "khmr", "knda", "krai", "lana", "lanatham", "laoo", "latn", "lepc", "limb", "mathbold", "mathdbl", "mathmono", "mathsanb", "mathsans", "mlym", "modi", "mong", "mroo", "mtei", "mymr", "mymrepka", "mymrpao", "mymrshan", "mymrtlng", "nagm", "newa", "nkoo", "olck", "onao", "orya", "osma", "outlined", "rohg", "roman", "romanlow", "saur", "segment", "shrd", "sind", "sinh", "sora", "sund", "sunu", "takr", "talu", "taml", "tamldec", "telu", "thai", "tibt", "tirh", "tnsa", "vaii", "wara", "wcho"];
    return numberingSystems_generated$2;
  }
  var hasRequiredGetSupportedNumberingSystems;
  function requireGetSupportedNumberingSystems() {
    if (hasRequiredGetSupportedNumberingSystems) return getSupportedNumberingSystems;
    hasRequiredGetSupportedNumberingSystems = 1;
    Object.defineProperty(getSupportedNumberingSystems, "__esModule", { value: true });
    getSupportedNumberingSystems.getSupportedNumberingSystems = getSupportedNumberingSystems$1;
    var ecma402_abstract_1 = require$$1;
    var numbering_systems_generated_1 = requireNumberingSystems_generated$2();
    function isSupportedNumberingSystem(system2, locale) {
      if (locale === void 0) {
        locale = "en";
      }
      try {
        var numberFormat = (0, ecma402_abstract_1.createMemoizedNumberFormat)("".concat(locale, "-u-nu-").concat(system2));
        var options = numberFormat.resolvedOptions().numberingSystem;
        if (options === system2 && system2 === "latn" || numberFormat.format(123) !== "123") {
          return true;
        }
      } catch (_err) {
      }
      return false;
    }
    function getSupportedNumberingSystems$1(locale) {
      return numbering_systems_generated_1.numberingSystemNames.filter(function(numberingSystemName) {
        return isSupportedNumberingSystem(numberingSystemName, locale);
      });
    }
    return getSupportedNumberingSystems;
  }
  var getSupportedTimezones = {};
  var timezones_generated$1 = {};
  var hasRequiredTimezones_generated$1;
  function requireTimezones_generated$1() {
    if (hasRequiredTimezones_generated$1) return timezones_generated$1;
    hasRequiredTimezones_generated$1 = 1;
    Object.defineProperty(timezones_generated$1, "__esModule", { value: true });
    timezones_generated$1.timezones = void 0;
    timezones_generated$1.timezones = ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Bahia_Banderas", "America/Bahia", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson_Creek", "America/Dawson", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Fort_Nelson", "America/Fortaleza", "America/Glace_Bay", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port_of_Spain", "America/Port-au-Prince", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Chita", "Asia/Choibalsan", "Asia/Colombo", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kathmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Riyadh", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ulaanbaatar", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faroe", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/Perth", "Australia/Sydney", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kyiv", "Europe/Kirov", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Kanton", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Wake", "Pacific/Wallis"];
    return timezones_generated$1;
  }
  var hasRequiredGetSupportedTimezones;
  function requireGetSupportedTimezones() {
    if (hasRequiredGetSupportedTimezones) return getSupportedTimezones;
    hasRequiredGetSupportedTimezones = 1;
    Object.defineProperty(getSupportedTimezones, "__esModule", { value: true });
    getSupportedTimezones.getSupportedTimeZones = getSupportedTimeZones;
    var ecma402_abstract_1 = require$$1;
    var timezones_generated_1 = requireTimezones_generated$1();
    function isSupported(timeZone, locale) {
      if (locale === void 0) {
        locale = "en";
      }
      try {
        var formatter = (0, ecma402_abstract_1.createMemoizedDateTimeFormat)(locale, { timeZone });
        return formatter.resolvedOptions().timeZone === timeZone;
      } catch (_err) {
      }
      return false;
    }
    function getSupportedTimeZones(locale) {
      return timezones_generated_1.timezones.filter(function(timezone2) {
        return isSupported(timezone2, locale);
      });
    }
    return getSupportedTimezones;
  }
  var getSupportedUnits = {};
  var units_generated = {};
  var hasRequiredUnits_generated;
  function requireUnits_generated() {
    if (hasRequiredUnits_generated) return units_generated;
    hasRequiredUnits_generated = 1;
    Object.defineProperty(units_generated, "__esModule", { value: true });
    units_generated.units = void 0;
    units_generated.units = ["degree", "acre", "hectare", "percent", "bit", "byte", "gigabit", "gigabyte", "kilobit", "kilobyte", "megabit", "megabyte", "petabyte", "terabit", "terabyte", "day", "hour", "millisecond", "minute", "month", "second", "week", "year", "centimeter", "foot", "inch", "kilometer", "meter", "mile-scandinavian", "mile", "millimeter", "yard", "gram", "kilogram", "ounce", "pound", "stone", "celsius", "fahrenheit", "fluid-ounce", "gallon", "liter", "milliliter"];
    return units_generated;
  }
  var hasRequiredGetSupportedUnits;
  function requireGetSupportedUnits() {
    if (hasRequiredGetSupportedUnits) return getSupportedUnits;
    hasRequiredGetSupportedUnits = 1;
    Object.defineProperty(getSupportedUnits, "__esModule", { value: true });
    getSupportedUnits.getSupportedUnits = getSupportedUnits$1;
    var ecma402_abstract_1 = require$$1;
    var units_generated_1 = requireUnits_generated();
    function isSupported(unit, locale) {
      if (locale === void 0) {
        locale = "en";
      }
      try {
        var formatter = (0, ecma402_abstract_1.createMemoizedNumberFormat)(locale, { style: "unit", unit });
        return formatter.resolvedOptions().unit === unit;
      } catch (_err) {
      }
      return false;
    }
    function getSupportedUnits$1(locale) {
      return units_generated_1.units.filter(function(unit) {
        return isSupported(unit, locale);
      });
    }
    return getSupportedUnits;
  }
  var hasRequiredSrc;
  function requireSrc() {
    if (hasRequiredSrc) return src;
    hasRequiredSrc = 1;
    Object.defineProperty(src, "__esModule", { value: true });
    src.supportedValuesOf = supportedValuesOf;
    var get_supported_calendars_1 = requireGetSupportedCalendars();
    var get_supported_collations_1 = requireGetSupportedCollations();
    var get_supported_currencies_1 = requireGetSupportedCurrencies();
    var get_supported_numbering_systems_1 = requireGetSupportedNumberingSystems();
    var get_supported_timezones_1 = requireGetSupportedTimezones();
    var get_supported_units_1 = requireGetSupportedUnits();
    function supportedValuesOf(key, locale) {
      switch (key) {
        case "calendar":
          return (0, get_supported_calendars_1.getSupportedCalendars)(locale);
        case "collation":
          return (0, get_supported_collations_1.getSupportedCollations)(locale);
        case "currency":
          return (0, get_supported_currencies_1.getSupportedCurrencies)(locale);
        case "numberingSystem":
          return (0, get_supported_numbering_systems_1.getSupportedNumberingSystems)(locale);
        case "timeZone":
          return (0, get_supported_timezones_1.getSupportedTimeZones)(locale);
        case "unit":
          return (0, get_supported_units_1.getSupportedUnits)(locale);
        default:
          throw RangeError("Invalid key: " + key);
      }
    }
    return src;
  }
  var hasRequiredIntlEnumerator;
  function requireIntlEnumerator() {
    if (hasRequiredIntlEnumerator) return intlEnumerator;
    hasRequiredIntlEnumerator = 1;
    (function(exports2) {
      Object.defineProperty(exports2, "__esModule", { value: true });
      exports2.supportedValuesOf = exports2.shouldPolyfill = void 0;
      var should_polyfill_1 = requireShouldPolyfill$5();
      Object.defineProperty(exports2, "shouldPolyfill", { enumerable: true, get: function() {
        return should_polyfill_1.shouldPolyfill;
      } });
      var src_1 = requireSrc();
      Object.defineProperty(exports2, "supportedValuesOf", { enumerable: true, get: function() {
        return src_1.supportedValuesOf;
      } });
    })(intlEnumerator);
    return intlEnumerator;
  }
  var intlGetcanonicallocales = {};
  var canonicalizer = {};
  var aliases_generated = {};
  var hasRequiredAliases_generated;
  function requireAliases_generated() {
    if (hasRequiredAliases_generated) return aliases_generated;
    hasRequiredAliases_generated = 1;
    Object.defineProperty(aliases_generated, "__esModule", { value: true });
    aliases_generated.variantAlias = aliases_generated.scriptAlias = aliases_generated.territoryAlias = aliases_generated.languageAlias = void 0;
    aliases_generated.languageAlias = {
      "aa-saaho": "ssy",
      "aam": "aas",
      "aar": "aa",
      "abk": "ab",
      "adp": "dz",
      "afr": "af",
      "agp": "apf",
      "ais": "ami",
      "ajp": "apc",
      "ajt": "aeb",
      "aju": "jrb",
      "aka": "ak",
      "alb": "sq",
      "als": "sq",
      "amh": "am",
      "ara": "ar",
      "arb": "ar",
      "arg": "an",
      "arm": "hy",
      "art-lojban": "jbo",
      "asd": "snz",
      "asm": "as",
      "aue": "ktz",
      "ava": "av",
      "ave": "ae",
      "aym": "ay",
      "ayr": "ay",
      "ayx": "nun",
      "aze": "az",
      "azj": "az",
      "bak": "ba",
      "bam": "bm",
      "baq": "eu",
      "baz": "nvo",
      "bcc": "bal",
      "bcl": "bik",
      "bel": "be",
      "ben": "bn",
      "bgm": "bcg",
      "bh": "bho",
      "bhk": "fbl",
      "bic": "bir",
      "bih": "bho",
      "bis": "bi",
      "bjd": "drl",
      "bjq": "bzc",
      "bkb": "ebk",
      "blg": "iba",
      "bod": "bo",
      "bos": "bs",
      "bre": "br",
      "btb": "beb",
      "bul": "bg",
      "bur": "my",
      "bxk": "luy",
      "bxr": "bua",
      "cat": "ca",
      "ccq": "rki",
      "cel-gaulish": "xtg",
      "ces": "cs",
      "cha": "ch",
      "che": "ce",
      "chi": "zh",
      "chu": "cu",
      "chv": "cv",
      "cjr": "mom",
      "cka": "cmr",
      "cld": "syr",
      "cmk": "xch",
      "cmn": "zh",
      "cnr": "sr-ME",
      "cor": "kw",
      "cos": "co",
      "coy": "pij",
      "cqu": "quh",
      "cre": "cr",
      "cwd": "cr",
      "cym": "cy",
      "cze": "cs",
      "daf": "dnj",
      "dan": "da",
      "dap": "njz",
      "deu": "de",
      "dgo": "doi",
      "dhd": "mwr",
      "dik": "din",
      "diq": "zza",
      "dit": "dif",
      "div": "dv",
      "djl": "dze",
      "dkl": "aqd",
      "drh": "mn",
      "drr": "kzk",
      "drw": "fa-AF",
      "dud": "uth",
      "duj": "dwu",
      "dut": "nl",
      "dwl": "dbt",
      "dzo": "dz",
      "ekk": "et",
      "ell": "el",
      "elp": "amq",
      "emk": "man",
      "en-GB-oed": "en-GB-oxendict",
      "eng": "en",
      "epo": "eo",
      "esk": "ik",
      "est": "et",
      "eus": "eu",
      "ewe": "ee",
      "fao": "fo",
      "fas": "fa",
      "fat": "ak",
      "fij": "fj",
      "fin": "fi",
      "fra": "fr",
      "fre": "fr",
      "fry": "fy",
      "fuc": "ff",
      "ful": "ff",
      "gav": "dev",
      "gaz": "om",
      "gbc": "wny",
      "gbo": "grb",
      "geo": "ka",
      "ger": "de",
      "gfx": "vaj",
      "ggn": "gvr",
      "ggo": "esg",
      "ggr": "gtu",
      "gio": "aou",
      "gla": "gd",
      "gle": "ga",
      "glg": "gl",
      "gli": "kzk",
      "glv": "gv",
      "gno": "gon",
      "gom": "kok",
      "gre": "el",
      "grn": "gn",
      "gti": "nyc",
      "gug": "gn",
      "guj": "gu",
      "guv": "duz",
      "gya": "gba",
      "hat": "ht",
      "hau": "ha",
      "hbs": "sr-Latn",
      "hdn": "hai",
      "hea": "hmn",
      "heb": "he",
      "her": "hz",
      "him": "srx",
      "hin": "hi",
      "hmo": "ho",
      "hrr": "jal",
      "hrv": "hr",
      "hun": "hu",
      "hy-arevmda": "hyw",
      "hye": "hy",
      "i-ami": "ami",
      "i-bnn": "bnn",
      "i-default": "en-x-i-default",
      "i-enochian": "und-x-i-enochian",
      "i-hak": "hak",
      "i-klingon": "tlh",
      "i-lux": "lb",
      "i-mingo": "see-x-i-mingo",
      "i-navajo": "nv",
      "i-pwn": "pwn",
      "i-tao": "tao",
      "i-tay": "tay",
      "i-tsu": "tsu",
      "ibi": "opa",
      "ibo": "ig",
      "ice": "is",
      "ido": "io",
      "iii": "ii",
      "ike": "iu",
      "iku": "iu",
      "ile": "ie",
      "ill": "ilm",
      "ilw": "gal",
      "in": "id",
      "ina": "ia",
      "ind": "id",
      "ipk": "ik",
      "isl": "is",
      "ita": "it",
      "iw": "he",
      "izi": "eza",
      "jar": "jgk",
      "jav": "jv",
      "jeg": "oyb",
      "ji": "yi",
      "jpn": "ja",
      "jw": "jv",
      "kal": "kl",
      "kan": "kn",
      "kas": "ks",
      "kat": "ka",
      "kau": "kr",
      "kaz": "kk",
      "kdv": "zkd",
      "kgc": "tdf",
      "kgd": "ncq",
      "kgh": "kml",
      "kgm": "plu",
      "khk": "mn",
      "khm": "km",
      "kik": "ki",
      "kin": "rw",
      "kir": "ky",
      "kmr": "ku",
      "knc": "kr",
      "kng": "kg",
      "koj": "kwv",
      "kom": "kv",
      "kon": "kg",
      "kor": "ko",
      "kpp": "jkm",
      "kpv": "kv",
      "krm": "bmf",
      "ktr": "dtp",
      "kua": "kj",
      "kur": "ku",
      "kvs": "gdj",
      "kwq": "yam",
      "kxe": "tvd",
      "kxl": "kru",
      "kzh": "dgl",
      "kzj": "dtp",
      "kzt": "dtp",
      "lak": "ksp",
      "lao": "lo",
      "lat": "la",
      "lav": "lv",
      "lbk": "bnc",
      "leg": "enl",
      "lii": "raq",
      "lim": "li",
      "lin": "ln",
      "lit": "lt",
      "llo": "ngt",
      "lmm": "rmx",
      "ltz": "lb",
      "lub": "lu",
      "lug": "lg",
      "lvs": "lv",
      "mac": "mk",
      "mah": "mh",
      "mal": "ml",
      "mao": "mi",
      "mar": "mr",
      "may": "ms",
      "meg": "cir",
      "mgx": "jbk",
      "mhr": "chm",
      "mkd": "mk",
      "mlg": "mg",
      "mlt": "mt",
      "mnk": "man",
      "mnt": "wnn",
      "mo": "ro",
      "mof": "xnt",
      "mol": "ro",
      "mon": "mn",
      "mri": "mi",
      "msa": "ms",
      "mst": "mry",
      "mup": "raj",
      "mwd": "dmw",
      "mwj": "vaj",
      "mya": "my",
      "myd": "aog",
      "myt": "mry",
      "nad": "xny",
      "nau": "na",
      "nav": "nv",
      "nbf": "nru",
      "nbl": "nr",
      "nbx": "ekc",
      "ncp": "kdz",
      "nde": "nd",
      "ndo": "ng",
      "nep": "ne",
      "nld": "nl",
      "nln": "azd",
      "nlr": "nrk",
      "nno": "nn",
      "nns": "nbr",
      "nnx": "ngv",
      "no-bok": "nb",
      "no-bokmal": "nb",
      "no-nyn": "nn",
      "no-nynorsk": "nn",
      "nob": "nb",
      "nom": "cbr",
      "noo": "dtd",
      "nor": "no",
      "npi": "ne",
      "nts": "pij",
      "nxu": "bpp",
      "nya": "ny",
      "oci": "oc",
      "ojg": "oj",
      "oji": "oj",
      "ori": "or",
      "orm": "om",
      "ory": "or",
      "oss": "os",
      "oun": "vaj",
      "pan": "pa",
      "pat": "kxr",
      "pbu": "ps",
      "pcr": "adx",
      "per": "fa",
      "pes": "fa",
      "pli": "pi",
      "plt": "mg",
      "pmc": "huw",
      "pmk": "crr",
      "pmu": "phr",
      "pnb": "lah",
      "pol": "pl",
      "por": "pt",
      "ppa": "bfy",
      "ppr": "lcq",
      "prp": "gu",
      "prs": "fa-AF",
      "pry": "prt",
      "pus": "ps",
      "puz": "pub",
      "que": "qu",
      "quz": "qu",
      "rmr": "emx",
      "rmy": "rom",
      "roh": "rm",
      "ron": "ro",
      "rum": "ro",
      "run": "rn",
      "rus": "ru",
      "sag": "sg",
      "san": "sa",
      "sap": "aqt",
      "sca": "hle",
      "scc": "sr",
      "scr": "hr",
      "sgl": "isk",
      "sgn-BE-FR": "sfb",
      "sgn-BE-NL": "vgt",
      "sgn-BR": "bzs",
      "sgn-CH-DE": "sgg",
      "sgn-CO": "csn",
      "sgn-DE": "gsg",
      "sgn-DK": "dsl",
      "sgn-ES": "ssp",
      "sgn-FR": "fsl",
      "sgn-GB": "bfi",
      "sgn-GR": "gss",
      "sgn-IE": "isg",
      "sgn-IT": "ise",
      "sgn-JP": "jsl",
      "sgn-MX": "mfs",
      "sgn-NI": "ncs",
      "sgn-NL": "dse",
      "sgn-NO": "nsi",
      "sgn-PT": "psr",
      "sgn-SE": "swl",
      "sgn-US": "ase",
      "sgn-ZA": "sfs",
      "sh": "sr-Latn",
      "sin": "si",
      "skk": "oyb",
      "slk": "sk",
      "slo": "sk",
      "slv": "sl",
      "smd": "kmb",
      "sme": "se",
      "smo": "sm",
      "sna": "sn",
      "snb": "iba",
      "snd": "sd",
      "som": "so",
      "sot": "st",
      "spa": "es",
      "spy": "kln",
      "sqi": "sq",
      "src": "sc",
      "srd": "sc",
      "srp": "sr",
      "ssw": "ss",
      "sul": "sgd",
      "sum": "ulw",
      "sun": "su",
      "swa": "sw",
      "swc": "sw-CD",
      "swe": "sv",
      "swh": "sw",
      "szd": "umi",
      "tah": "ty",
      "tam": "ta",
      "tat": "tt",
      "tdu": "dtp",
      "tel": "te",
      "tgg": "bjp",
      "tgk": "tg",
      "tgl": "fil",
      "tha": "th",
      "thc": "tpo",
      "thw": "ola",
      "thx": "oyb",
      "tib": "bo",
      "tid": "itd",
      "tie": "ras",
      "tir": "ti",
      "tkk": "twm",
      "tl": "fil",
      "tlw": "weo",
      "tmk": "tdg",
      "tmp": "tyj",
      "tne": "kak",
      "tnf": "fa-AF",
      "ton": "to",
      "tpw": "tpn",
      "tsf": "taj",
      "tsn": "tn",
      "tso": "ts",
      "ttq": "tmh",
      "tuk": "tk",
      "tur": "tr",
      "tw": "ak",
      "twi": "ak",
      "uig": "ug",
      "ukr": "uk",
      "umu": "del",
      "und-aaland": "und-AX",
      "und-arevela": "und",
      "und-arevmda": "und",
      "und-bokmal": "und",
      "und-hakka": "und",
      "und-hepburn-heploc": "und-alalc97",
      "und-lojban": "und",
      "und-nynorsk": "und",
      "und-saaho": "und",
      "und-xiang": "und",
      "unp": "wro",
      "uok": "ema",
      "urd": "ur",
      "uzb": "uz",
      "uzn": "uz",
      "ven": "ve",
      "vie": "vi",
      "vol": "vo",
      "wel": "cy",
      "wgw": "wgb",
      "wit": "nol",
      "wiw": "nwo",
      "wln": "wa",
      "wol": "wo",
      "xba": "cax",
      "xho": "xh",
      "xia": "acn",
      "xkh": "waw",
      "xpe": "kpe",
      "xrq": "dmw",
      "xsj": "suj",
      "xsl": "den",
      "xss": "zko",
      "ybd": "rki",
      "ydd": "yi",
      "yen": "ynq",
      "yid": "yi",
      "yiy": "yrm",
      "yma": "lrr",
      "ymt": "mtm",
      "yor": "yo",
      "yos": "zom",
      "yuu": "yug",
      "zai": "zap",
      "zh-cmn": "zh",
      "zh-cmn-Hans": "zh-Hans",
      "zh-cmn-Hant": "zh-Hant",
      "zh-gan": "gan",
      "zh-guoyu": "zh",
      "zh-hakka": "hak",
      "zh-min": "nan-x-zh-min",
      "zh-min-nan": "nan",
      "zh-wuu": "wuu",
      "zh-xiang": "hsn",
      "zh-yue": "yue",
      "zha": "za",
      "zho": "zh",
      "zir": "scv",
      "zkb": "kjh",
      "zsm": "ms",
      "zul": "zu",
      "zyb": "za"
    };
    aliases_generated.territoryAlias = {
      "004": "AF",
      "008": "AL",
      "010": "AQ",
      "012": "DZ",
      "016": "AS",
      "020": "AD",
      "024": "AO",
      "028": "AG",
      "031": "AZ",
      "032": "AR",
      "036": "AU",
      "040": "AT",
      "044": "BS",
      "048": "BH",
      "050": "BD",
      "051": "AM",
      "052": "BB",
      "056": "BE",
      "060": "BM",
      "062": "034 143",
      "064": "BT",
      "068": "BO",
      "070": "BA",
      "072": "BW",
      "074": "BV",
      "076": "BR",
      "084": "BZ",
      "086": "IO",
      "090": "SB",
      "092": "VG",
      "096": "BN",
      "100": "BG",
      "104": "MM",
      "108": "BI",
      "112": "BY",
      "116": "KH",
      "120": "CM",
      "124": "CA",
      "132": "CV",
      "136": "KY",
      "140": "CF",
      "144": "LK",
      "148": "TD",
      "152": "CL",
      "156": "CN",
      "158": "TW",
      "162": "CX",
      "166": "CC",
      "170": "CO",
      "172": "RU AM AZ BY GE KG KZ MD TJ TM UA UZ",
      "174": "KM",
      "175": "YT",
      "178": "CG",
      "180": "CD",
      "184": "CK",
      "188": "CR",
      "191": "HR",
      "192": "CU",
      "196": "CY",
      "200": "CZ SK",
      "203": "CZ",
      "204": "BJ",
      "208": "DK",
      "212": "DM",
      "214": "DO",
      "218": "EC",
      "222": "SV",
      "226": "GQ",
      "230": "ET",
      "231": "ET",
      "232": "ER",
      "233": "EE",
      "234": "FO",
      "238": "FK",
      "239": "GS",
      "242": "FJ",
      "246": "FI",
      "248": "AX",
      "249": "FR",
      "250": "FR",
      "254": "GF",
      "258": "PF",
      "260": "TF",
      "262": "DJ",
      "266": "GA",
      "268": "GE",
      "270": "GM",
      "275": "PS",
      "276": "DE",
      "278": "DE",
      "280": "DE",
      "288": "GH",
      "292": "GI",
      "296": "KI",
      "300": "GR",
      "304": "GL",
      "308": "GD",
      "312": "GP",
      "316": "GU",
      "320": "GT",
      "324": "GN",
      "328": "GY",
      "332": "HT",
      "334": "HM",
      "336": "VA",
      "340": "HN",
      "344": "HK",
      "348": "HU",
      "352": "IS",
      "356": "IN",
      "360": "ID",
      "364": "IR",
      "368": "IQ",
      "372": "IE",
      "376": "IL",
      "380": "IT",
      "384": "CI",
      "388": "JM",
      "392": "JP",
      "398": "KZ",
      "400": "JO",
      "404": "KE",
      "408": "KP",
      "410": "KR",
      "414": "KW",
      "417": "KG",
      "418": "LA",
      "422": "LB",
      "426": "LS",
      "428": "LV",
      "430": "LR",
      "434": "LY",
      "438": "LI",
      "440": "LT",
      "442": "LU",
      "446": "MO",
      "450": "MG",
      "454": "MW",
      "458": "MY",
      "462": "MV",
      "466": "ML",
      "470": "MT",
      "474": "MQ",
      "478": "MR",
      "480": "MU",
      "484": "MX",
      "492": "MC",
      "496": "MN",
      "498": "MD",
      "499": "ME",
      "500": "MS",
      "504": "MA",
      "508": "MZ",
      "512": "OM",
      "516": "NA",
      "520": "NR",
      "524": "NP",
      "528": "NL",
      "530": "CW SX BQ",
      "531": "CW",
      "532": "CW SX BQ",
      "533": "AW",
      "534": "SX",
      "535": "BQ",
      "536": "SA IQ",
      "540": "NC",
      "548": "VU",
      "554": "NZ",
      "558": "NI",
      "562": "NE",
      "566": "NG",
      "570": "NU",
      "574": "NF",
      "578": "NO",
      "580": "MP",
      "581": "UM",
      "582": "FM MH MP PW",
      "583": "FM",
      "584": "MH",
      "585": "PW",
      "586": "PK",
      "591": "PA",
      "598": "PG",
      "600": "PY",
      "604": "PE",
      "608": "PH",
      "612": "PN",
      "616": "PL",
      "620": "PT",
      "624": "GW",
      "626": "TL",
      "630": "PR",
      "634": "QA",
      "638": "RE",
      "642": "RO",
      "643": "RU",
      "646": "RW",
      "652": "BL",
      "654": "SH",
      "659": "KN",
      "660": "AI",
      "662": "LC",
      "663": "MF",
      "666": "PM",
      "670": "VC",
      "674": "SM",
      "678": "ST",
      "682": "SA",
      "686": "SN",
      "688": "RS",
      "690": "SC",
      "694": "SL",
      "702": "SG",
      "703": "SK",
      "704": "VN",
      "705": "SI",
      "706": "SO",
      "710": "ZA",
      "716": "ZW",
      "720": "YE",
      "724": "ES",
      "728": "SS",
      "729": "SD",
      "732": "EH",
      "736": "SD",
      "740": "SR",
      "744": "SJ",
      "748": "SZ",
      "752": "SE",
      "756": "CH",
      "760": "SY",
      "762": "TJ",
      "764": "TH",
      "768": "TG",
      "772": "TK",
      "776": "TO",
      "780": "TT",
      "784": "AE",
      "788": "TN",
      "792": "TR",
      "795": "TM",
      "796": "TC",
      "798": "TV",
      "800": "UG",
      "804": "UA",
      "807": "MK",
      "810": "RU AM AZ BY EE GE KZ KG LV LT MD TJ TM UA UZ",
      "818": "EG",
      "826": "GB",
      "830": "JE GG",
      "831": "GG",
      "832": "JE",
      "833": "IM",
      "834": "TZ",
      "840": "US",
      "850": "VI",
      "854": "BF",
      "858": "UY",
      "860": "UZ",
      "862": "VE",
      "876": "WF",
      "882": "WS",
      "886": "YE",
      "887": "YE",
      "890": "RS ME SI HR MK BA",
      "891": "RS ME",
      "894": "ZM",
      "958": "AA",
      "959": "QM",
      "960": "QN",
      "962": "QP",
      "963": "QQ",
      "964": "QR",
      "965": "QS",
      "966": "QT",
      "967": "EU",
      "968": "QV",
      "969": "QW",
      "970": "QX",
      "971": "QY",
      "972": "QZ",
      "973": "XA",
      "974": "XB",
      "975": "XC",
      "976": "XD",
      "977": "XE",
      "978": "XF",
      "979": "XG",
      "980": "XH",
      "981": "XI",
      "982": "XJ",
      "983": "XK",
      "984": "XL",
      "985": "XM",
      "986": "XN",
      "987": "XO",
      "988": "XP",
      "989": "XQ",
      "990": "XR",
      "991": "XS",
      "992": "XT",
      "993": "XU",
      "994": "XV",
      "995": "XW",
      "996": "XX",
      "997": "XY",
      "998": "XZ",
      "999": "ZZ",
      "AAA": "AA",
      "ABW": "AW",
      "AFG": "AF",
      "AGO": "AO",
      "AIA": "AI",
      "ALA": "AX",
      "ALB": "AL",
      "AN": "CW SX BQ",
      "AND": "AD",
      "ANT": "CW SX BQ",
      "ARE": "AE",
      "ARG": "AR",
      "ARM": "AM",
      "ASC": "AC",
      "ASM": "AS",
      "ATA": "AQ",
      "ATF": "TF",
      "ATG": "AG",
      "AUS": "AU",
      "AUT": "AT",
      "AZE": "AZ",
      "BDI": "BI",
      "BEL": "BE",
      "BEN": "BJ",
      "BES": "BQ",
      "BFA": "BF",
      "BGD": "BD",
      "BGR": "BG",
      "BHR": "BH",
      "BHS": "BS",
      "BIH": "BA",
      "BLM": "BL",
      "BLR": "BY",
      "BLZ": "BZ",
      "BMU": "BM",
      "BOL": "BO",
      "BRA": "BR",
      "BRB": "BB",
      "BRN": "BN",
      "BTN": "BT",
      "BU": "MM",
      "BUR": "MM",
      "BVT": "BV",
      "BWA": "BW",
      "CAF": "CF",
      "CAN": "CA",
      "CCK": "CC",
      "CHE": "CH",
      "CHL": "CL",
      "CHN": "CN",
      "CIV": "CI",
      "CMR": "CM",
      "COD": "CD",
      "COG": "CG",
      "COK": "CK",
      "COL": "CO",
      "COM": "KM",
      "CPT": "CP",
      "CPV": "CV",
      "CRI": "CR",
      "CS": "RS ME",
      "CT": "KI",
      "CUB": "CU",
      "CUW": "CW",
      "CXR": "CX",
      "CYM": "KY",
      "CYP": "CY",
      "CZE": "CZ",
      "DD": "DE",
      "DDR": "DE",
      "DEU": "DE",
      "DGA": "DG",
      "DJI": "DJ",
      "DMA": "DM",
      "DNK": "DK",
      "DOM": "DO",
      "DY": "BJ",
      "DZA": "DZ",
      "ECU": "EC",
      "EGY": "EG",
      "ERI": "ER",
      "ESH": "EH",
      "ESP": "ES",
      "EST": "EE",
      "ETH": "ET",
      "FIN": "FI",
      "FJI": "FJ",
      "FLK": "FK",
      "FQ": "AQ TF",
      "FRA": "FR",
      "FRO": "FO",
      "FSM": "FM",
      "FX": "FR",
      "FXX": "FR",
      "GAB": "GA",
      "GBR": "GB",
      "GEO": "GE",
      "GGY": "GG",
      "GHA": "GH",
      "GIB": "GI",
      "GIN": "GN",
      "GLP": "GP",
      "GMB": "GM",
      "GNB": "GW",
      "GNQ": "GQ",
      "GRC": "GR",
      "GRD": "GD",
      "GRL": "GL",
      "GTM": "GT",
      "GUF": "GF",
      "GUM": "GU",
      "GUY": "GY",
      "HKG": "HK",
      "HMD": "HM",
      "HND": "HN",
      "HRV": "HR",
      "HTI": "HT",
      "HUN": "HU",
      "HV": "BF",
      "IDN": "ID",
      "IMN": "IM",
      "IND": "IN",
      "IOT": "IO",
      "IRL": "IE",
      "IRN": "IR",
      "IRQ": "IQ",
      "ISL": "IS",
      "ISR": "IL",
      "ITA": "IT",
      "JAM": "JM",
      "JEY": "JE",
      "JOR": "JO",
      "JPN": "JP",
      "JT": "UM",
      "KAZ": "KZ",
      "KEN": "KE",
      "KGZ": "KG",
      "KHM": "KH",
      "KIR": "KI",
      "KNA": "KN",
      "KOR": "KR",
      "KWT": "KW",
      "LAO": "LA",
      "LBN": "LB",
      "LBR": "LR",
      "LBY": "LY",
      "LCA": "LC",
      "LIE": "LI",
      "LKA": "LK",
      "LSO": "LS",
      "LTU": "LT",
      "LUX": "LU",
      "LVA": "LV",
      "MAC": "MO",
      "MAF": "MF",
      "MAR": "MA",
      "MCO": "MC",
      "MDA": "MD",
      "MDG": "MG",
      "MDV": "MV",
      "MEX": "MX",
      "MHL": "MH",
      "MI": "UM",
      "MKD": "MK",
      "MLI": "ML",
      "MLT": "MT",
      "MMR": "MM",
      "MNE": "ME",
      "MNG": "MN",
      "MNP": "MP",
      "MOZ": "MZ",
      "MRT": "MR",
      "MSR": "MS",
      "MTQ": "MQ",
      "MUS": "MU",
      "MWI": "MW",
      "MYS": "MY",
      "MYT": "YT",
      "NAM": "NA",
      "NCL": "NC",
      "NER": "NE",
      "NFK": "NF",
      "NGA": "NG",
      "NH": "VU",
      "NIC": "NI",
      "NIU": "NU",
      "NLD": "NL",
      "NOR": "NO",
      "NPL": "NP",
      "NQ": "AQ",
      "NRU": "NR",
      "NT": "SA IQ",
      "NTZ": "SA IQ",
      "NZL": "NZ",
      "OMN": "OM",
      "PAK": "PK",
      "PAN": "PA",
      "PC": "FM MH MP PW",
      "PCN": "PN",
      "PER": "PE",
      "PHL": "PH",
      "PLW": "PW",
      "PNG": "PG",
      "POL": "PL",
      "PRI": "PR",
      "PRK": "KP",
      "PRT": "PT",
      "PRY": "PY",
      "PSE": "PS",
      "PU": "UM",
      "PYF": "PF",
      "PZ": "PA",
      "QAT": "QA",
      "QMM": "QM",
      "QNN": "QN",
      "QPP": "QP",
      "QQQ": "QQ",
      "QRR": "QR",
      "QSS": "QS",
      "QTT": "QT",
      "QU": "EU",
      "QUU": "EU",
      "QVV": "QV",
      "QWW": "QW",
      "QXX": "QX",
      "QYY": "QY",
      "QZZ": "QZ",
      "REU": "RE",
      "RH": "ZW",
      "ROU": "RO",
      "RUS": "RU",
      "RWA": "RW",
      "SAU": "SA",
      "SCG": "RS ME",
      "SDN": "SD",
      "SEN": "SN",
      "SGP": "SG",
      "SGS": "GS",
      "SHN": "SH",
      "SJM": "SJ",
      "SLB": "SB",
      "SLE": "SL",
      "SLV": "SV",
      "SMR": "SM",
      "SOM": "SO",
      "SPM": "PM",
      "SRB": "RS",
      "SSD": "SS",
      "STP": "ST",
      "SU": "RU AM AZ BY EE GE KZ KG LV LT MD TJ TM UA UZ",
      "SUN": "RU AM AZ BY EE GE KZ KG LV LT MD TJ TM UA UZ",
      "SUR": "SR",
      "SVK": "SK",
      "SVN": "SI",
      "SWE": "SE",
      "SWZ": "SZ",
      "SXM": "SX",
      "SYC": "SC",
      "SYR": "SY",
      "TAA": "TA",
      "TCA": "TC",
      "TCD": "TD",
      "TGO": "TG",
      "THA": "TH",
      "TJK": "TJ",
      "TKL": "TK",
      "TKM": "TM",
      "TLS": "TL",
      "TMP": "TL",
      "TON": "TO",
      "TP": "TL",
      "TTO": "TT",
      "TUN": "TN",
      "TUR": "TR",
      "TUV": "TV",
      "TWN": "TW",
      "TZA": "TZ",
      "UGA": "UG",
      "UK": "GB",
      "UKR": "UA",
      "UMI": "UM",
      "URY": "UY",
      "USA": "US",
      "UZB": "UZ",
      "VAT": "VA",
      "VCT": "VC",
      "VD": "VN",
      "VEN": "VE",
      "VGB": "VG",
      "VIR": "VI",
      "VNM": "VN",
      "VUT": "VU",
      "WK": "UM",
      "WLF": "WF",
      "WSM": "WS",
      "XAA": "XA",
      "XBB": "XB",
      "XCC": "XC",
      "XDD": "XD",
      "XEE": "XE",
      "XFF": "XF",
      "XGG": "XG",
      "XHH": "XH",
      "XII": "XI",
      "XJJ": "XJ",
      "XKK": "XK",
      "XLL": "XL",
      "XMM": "XM",
      "XNN": "XN",
      "XOO": "XO",
      "XPP": "XP",
      "XQQ": "XQ",
      "XRR": "XR",
      "XSS": "XS",
      "XTT": "XT",
      "XUU": "XU",
      "XVV": "XV",
      "XWW": "XW",
      "XXX": "XX",
      "XYY": "XY",
      "XZZ": "XZ",
      "YD": "YE",
      "YEM": "YE",
      "YMD": "YE",
      "YU": "RS ME",
      "YUG": "RS ME",
      "ZAF": "ZA",
      "ZAR": "CD",
      "ZMB": "ZM",
      "ZR": "CD",
      "ZWE": "ZW",
      "ZZZ": "ZZ"
    };
    aliases_generated.scriptAlias = {
      "Qaai": "Zinh"
    };
    aliases_generated.variantAlias = {
      "heploc": "alalc97",
      "polytoni": "polyton"
    };
    return aliases_generated;
  }
  var emitter = {};
  var hasRequiredEmitter;
  function requireEmitter() {
    if (hasRequiredEmitter) return emitter;
    hasRequiredEmitter = 1;
    Object.defineProperty(emitter, "__esModule", { value: true });
    emitter.emitUnicodeLanguageId = emitUnicodeLanguageId;
    emitter.emitUnicodeLocaleId = emitUnicodeLocaleId;
    var tslib_1 = require$$0$1;
    function emitUnicodeLanguageId(lang) {
      if (!lang) {
        return "";
      }
      return tslib_1.__spreadArray([lang.lang, lang.script, lang.region], lang.variants || [], true).filter(Boolean).join("-");
    }
    function emitUnicodeLocaleId(_a2) {
      var lang = _a2.lang, extensions = _a2.extensions;
      var chunks = [emitUnicodeLanguageId(lang)];
      for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {
        var ext = extensions_1[_i];
        chunks.push(ext.type);
        switch (ext.type) {
          case "u":
            chunks.push.apply(chunks, tslib_1.__spreadArray(tslib_1.__spreadArray([], ext.attributes, false), ext.keywords.reduce(function(all, kv) {
              return all.concat(kv);
            }, []), false));
            break;
          case "t":
            chunks.push.apply(chunks, tslib_1.__spreadArray([emitUnicodeLanguageId(ext.lang)], ext.fields.reduce(function(all, kv) {
              return all.concat(kv);
            }, []), false));
            break;
          default:
            chunks.push(ext.value);
            break;
        }
      }
      return chunks.filter(Boolean).join("-");
    }
    return emitter;
  }
  var likelySubtags_generated = {};
  var hasRequiredLikelySubtags_generated;
  function requireLikelySubtags_generated() {
    if (hasRequiredLikelySubtags_generated) return likelySubtags_generated;
    hasRequiredLikelySubtags_generated = 1;
    Object.defineProperty(likelySubtags_generated, "__esModule", { value: true });
    likelySubtags_generated.likelySubtags = void 0;
    likelySubtags_generated.likelySubtags = {
      "aa": "aa-Latn-ET",
      "aaa": "aaa-Latn-NG",
      "aab": "aab-Latn-NG",
      "aac": "aac-Latn-PG",
      "aad": "aad-Latn-PG",
      "aae": "aae-Latn-IT",
      "aaf": "aaf-Mlym-IN",
      "aag": "aag-Latn-PG",
      "aah": "aah-Latn-PG",
      "aai": "aai-Latn-PG",
      "aak": "aak-Latn-PG",
      "aal": "aal-Latn-CM",
      "aan": "aan-Latn-BR",
      "aao": "aao-Arab-DZ",
      "aap": "aap-Latn-BR",
      "aaq": "aaq-Latn-US",
      "aas": "aas-Latn-TZ",
      "aat": "aat-Grek-GR",
      "aau": "aau-Latn-PG",
      "aaw": "aaw-Latn-PG",
      "aax": "aax-Latn-ID",
      "aaz": "aaz-Latn-ID",
      "ab": "ab-Cyrl-GE",
      "aba": "aba-Latn-CI",
      "abb": "abb-Latn-CM",
      "abc": "abc-Latn-PH",
      "abd": "abd-Latn-PH",
      "abe": "abe-Latn-CA",
      "abf": "abf-Latn-MY",
      "abg": "abg-Latn-PG",
      "abh": "abh-Arab-TJ",
      "abi": "abi-Latn-CI",
      "abl": "abl-Rjng-ID",
      "abm": "abm-Latn-NG",
      "abn": "abn-Latn-NG",
      "abo": "abo-Latn-NG",
      "abp": "abp-Latn-PH",
      "abr": "abr-Latn-GH",
      "abs": "abs-Latn-ID",
      "abt": "abt-Latn-PG",
      "abu": "abu-Latn-CI",
      "abv": "abv-Arab-BH",
      "abw": "abw-Latn-PG",
      "abx": "abx-Latn-PH",
      "aby": "aby-Latn-PG",
      "abz": "abz-Latn-ID",
      "aca": "aca-Latn-CO",
      "acb": "acb-Latn-NG",
      "acd": "acd-Latn-GH",
      "ace": "ace-Latn-ID",
      "acf": "acf-Latn-LC",
      "ach": "ach-Latn-UG",
      "acm": "acm-Arab-IQ",
      "acn": "acn-Latn-CN",
      "acp": "acp-Latn-NG",
      "acq": "acq-Arab-YE",
      "acr": "acr-Latn-GT",
      "acs": "acs-Latn-BR",
      "act": "act-Latn-NL",
      "acu": "acu-Latn-EC",
      "acv": "acv-Latn-US",
      "acw": "acw-Arab-SA",
      "acx": "acx-Arab-OM",
      "acy": "acy-Latn-CY",
      "acz": "acz-Latn-SD",
      "ada": "ada-Latn-GH",
      "adb": "adb-Latn-TL",
      "add": "add-Latn-CM",
      "ade": "ade-Latn-TG",
      "adf": "adf-Arab-OM",
      "adg": "adg-Latn-AU",
      "adh": "adh-Latn-UG",
      "adi": "adi-Latn-IN",
      "adj": "adj-Latn-CI",
      "adl": "adl-Latn-IN",
      "adn": "adn-Latn-ID",
      "ado": "ado-Latn-PG",
      "adq": "adq-Latn-GH",
      "adr": "adr-Latn-ID",
      "adt": "adt-Latn-AU",
      "adu": "adu-Latn-NG",
      "adw": "adw-Latn-BR",
      "adx": "adx-Tibt-CN",
      "ady": "ady-Cyrl-RU",
      "adz": "adz-Latn-PG",
      "ae": "ae-Avst-IR",
      "aea": "aea-Latn-AU",
      "aeb": "aeb-Arab-TN",
      "aec": "aec-Arab-EG",
      "aee": "aee-Arab-AF",
      "aek": "aek-Latn-NC",
      "ael": "ael-Latn-CM",
      "aem": "aem-Latn-VN",
      "aeq": "aeq-Arab-PK",
      "aer": "aer-Latn-AU",
      "aeu": "aeu-Latn-CN",
      "aew": "aew-Latn-PG",
      "aey": "aey-Latn-PG",
      "aez": "aez-Latn-PG",
      "af": "af-Latn-ZA",
      "afb": "afb-Arab-KW",
      "afd": "afd-Latn-PG",
      "afe": "afe-Latn-NG",
      "afh": "afh-Latn-GH",
      "afi": "afi-Latn-PG",
      "afk": "afk-Latn-PG",
      "afn": "afn-Latn-NG",
      "afo": "afo-Latn-NG",
      "afp": "afp-Latn-PG",
      "afs": "afs-Latn-MX",
      "afu": "afu-Latn-GH",
      "afz": "afz-Latn-ID",
      "aga": "aga-Latn-PE",
      "agb": "agb-Latn-NG",
      "agc": "agc-Latn-NG",
      "agd": "agd-Latn-PG",
      "age": "age-Latn-PG",
      "agf": "agf-Latn-ID",
      "agg": "agg-Latn-PG",
      "agh": "agh-Latn-CD",
      "agi": "agi-Deva-IN",
      "agj": "agj-Ethi-ET",
      "agk": "agk-Latn-PH",
      "agl": "agl-Latn-PG",
      "agm": "agm-Latn-PG",
      "agn": "agn-Latn-PH",
      "ago": "ago-Latn-PG",
      "agq": "agq-Latn-CM",
      "agr": "agr-Latn-PE",
      "ags": "ags-Latn-CM",
      "agt": "agt-Latn-PH",
      "agu": "agu-Latn-GT",
      "agv": "agv-Latn-PH",
      "agw": "agw-Latn-SB",
      "agx": "agx-Cyrl-RU",
      "agy": "agy-Latn-PH",
      "agz": "agz-Latn-PH",
      "aha": "aha-Latn-GH",
      "ahb": "ahb-Latn-VU",
      "ahg": "ahg-Ethi-ET",
      "ahh": "ahh-Latn-ID",
      "ahi": "ahi-Latn-CI",
      "ahk": "ahk-Latn-MM",
      "ahl": "ahl-Latn-TG",
      "ahm": "ahm-Latn-CI",
      "ahn": "ahn-Latn-NG",
      "aho": "aho-Ahom-IN",
      "ahp": "ahp-Latn-CI",
      "ahr": "ahr-Deva-IN",
      "ahs": "ahs-Latn-NG",
      "aht": "aht-Latn-US",
      "aia": "aia-Latn-SB",
      "aib": "aib-Arab-CN",
      "aic": "aic-Latn-PG",
      "aid": "aid-Latn-AU",
      "aie": "aie-Latn-PG",
      "aif": "aif-Latn-PG",
      "aig": "aig-Latn-AG",
      "aii": "aii-Syrc-IQ",
      "aij": "aij-Hebr-IL",
      "aik": "aik-Latn-NG",
      "ail": "ail-Latn-PG",
      "aim": "aim-Latn-IN",
      "ain": "ain-Kana-JP",
      "aio": "aio-Mymr-IN",
      "aip": "aip-Latn-ID",
      "aiq": "aiq-Arab-AF",
      "air": "air-Latn-ID",
      "ait": "ait-Latn-BR",
      "aiw": "aiw-Latn-ET",
      "aix": "aix-Latn-PG",
      "aiy": "aiy-Latn-CF",
      "aja": "aja-Latn-SS",
      "ajg": "ajg-Latn-BJ",
      "aji": "aji-Latn-NC",
      "ajn": "ajn-Latn-AU",
      "ajw": "ajw-Latn-NG",
      "ajz": "ajz-Latn-IN",
      "ak": "ak-Latn-GH",
      "akb": "akb-Latn-ID",
      "akc": "akc-Latn-ID",
      "akd": "akd-Latn-NG",
      "ake": "ake-Latn-GY",
      "akf": "akf-Latn-NG",
      "akg": "akg-Latn-ID",
      "akh": "akh-Latn-PG",
      "aki": "aki-Latn-PG",
      "akk": "akk-Xsux-IQ",
      "akl": "akl-Latn-PH",
      "ako": "ako-Latn-SR",
      "akp": "akp-Latn-GH",
      "akq": "akq-Latn-PG",
      "akr": "akr-Latn-VU",
      "aks": "aks-Latn-TG",
      "akt": "akt-Latn-PG",
      "aku": "aku-Latn-CM",
      "akv": "akv-Cyrl-RU",
      "akw": "akw-Latn-CG",
      "akz": "akz-Latn-US",
      "ala": "ala-Latn-NG",
      "alc": "alc-Latn-CL",
      "ald": "ald-Latn-CI",
      "ale": "ale-Latn-US",
      "alf": "alf-Latn-NG",
      "alh": "alh-Latn-AU",
      "ali": "ali-Latn-PG",
      "alj": "alj-Latn-PH",
      "alk": "alk-Laoo-LA",
      "all": "all-Mlym-IN",
      "alm": "alm-Latn-VU",
      "aln": "aln-Latn-XK",
      "alo": "alo-Latn-ID",
      "alp": "alp-Latn-ID",
      "alq": "alq-Latn-CA",
      "alr": "alr-Cyrl-RU",
      "alt": "alt-Cyrl-RU",
      "alu": "alu-Latn-SB",
      "alw": "alw-Ethi-ET",
      "alx": "alx-Latn-PG",
      "aly": "aly-Latn-AU",
      "alz": "alz-Latn-CD",
      "am": "am-Ethi-ET",
      "ama": "ama-Latn-BR",
      "amb": "amb-Latn-NG",
      "amc": "amc-Latn-PE",
      "ame": "ame-Latn-PE",
      "amf": "amf-Latn-ET",
      "amg": "amg-Latn-AU",
      "ami": "ami-Latn-TW",
      "amj": "amj-Latn-TD",
      "amk": "amk-Latn-ID",
      "amm": "amm-Latn-PG",
      "amn": "amn-Latn-PG",
      "amo": "amo-Latn-NG",
      "amp": "amp-Latn-PG",
      "amq": "amq-Latn-ID",
      "amr": "amr-Latn-PE",
      "ams": "ams-Jpan-JP",
      "amt": "amt-Latn-PG",
      "amu": "amu-Latn-MX",
      "amv": "amv-Latn-ID",
      "amw": "amw-Syrc-SY",
      "amx": "amx-Latn-AU",
      "amy": "amy-Latn-AU",
      "amz": "amz-Latn-AU",
      "an": "an-Latn-ES",
      "ana": "ana-Latn-CO",
      "anb": "anb-Latn-PE",
      "anc": "anc-Latn-NG",
      "and": "and-Latn-ID",
      "ane": "ane-Latn-NC",
      "anf": "anf-Latn-GH",
      "ang": "ang-Latn-GB",
      "anh": "anh-Latn-PG",
      "ani": "ani-Cyrl-RU",
      "anj": "anj-Latn-PG",
      "ank": "ank-Latn-NG",
      "anl": "anl-Latn-MM",
      "anm": "anm-Latn-IN",
      "ann": "ann-Latn-NG",
      "ano": "ano-Latn-CO",
      "anp": "anp-Deva-IN",
      "anq": "anq-Deva-IN",
      "anr": "anr-Deva-IN",
      "ans": "ans-Latn-CO",
      "ant": "ant-Latn-AU",
      "anu": "anu-Ethi-ET",
      "anv": "anv-Latn-CM",
      "anw": "anw-Latn-NG",
      "anx": "anx-Latn-PG",
      "any": "any-Latn-CI",
      "anz": "anz-Latn-PG",
      "aoa": "aoa-Latn-ST",
      "aob": "aob-Latn-PG",
      "aoc": "aoc-Latn-VE",
      "aod": "aod-Latn-PG",
      "aoe": "aoe-Latn-PG",
      "aof": "aof-Latn-PG",
      "aog": "aog-Latn-PG",
      "aoi": "aoi-Latn-AU",
      "aoj": "aoj-Latn-PG",
      "aok": "aok-Latn-NC",
      "aol": "aol-Latn-ID",
      "aom": "aom-Latn-PG",
      "aon": "aon-Latn-PG",
      "aor": "aor-Latn-VU",
      "aos": "aos-Latn-ID",
      "aot": "aot-Beng-BD",
      "aox": "aox-Latn-GY",
      "aoz": "aoz-Latn-ID",
      "apb": "apb-Latn-SB",
      "apc": "apc-Arab-SY",
      "apd": "apd-Arab-TG",
      "ape": "ape-Latn-PG",
      "apf": "apf-Latn-PH",
      "apg": "apg-Latn-ID",
      "aph": "aph-Deva-NP",
      "api": "api-Latn-BR",
      "apj": "apj-Latn-US",
      "apk": "apk-Latn-US",
      "apl": "apl-Latn-US",
      "apm": "apm-Latn-US",
      "apn": "apn-Latn-BR",
      "apo": "apo-Latn-PG",
      "app": "app-Latn-VU",
      "apr": "apr-Latn-PG",
      "aps": "aps-Latn-PG",
      "apt": "apt-Latn-IN",
      "apu": "apu-Latn-BR",
      "apv": "apv-Latn-BR",
      "apw": "apw-Latn-US",
      "apx": "apx-Latn-ID",
      "apy": "apy-Latn-BR",
      "apz": "apz-Latn-PG",
      "aqc": "aqc-Cyrl-RU",
      "aqd": "aqd-Latn-ML",
      "aqg": "aqg-Latn-NG",
      "aqk": "aqk-Latn-NG",
      "aqm": "aqm-Latn-ID",
      "aqn": "aqn-Latn-PH",
      "aqr": "aqr-Latn-NC",
      "aqt": "aqt-Latn-PY",
      "aqz": "aqz-Latn-BR",
      "ar": "ar-Arab-EG",
      "arc": "arc-Armi-IR",
      "arc-Hatr": "arc-Hatr-IQ",
      "arc-Nbat": "arc-Nbat-JO",
      "arc-Palm": "arc-Palm-SY",
      "ard": "ard-Latn-AU",
      "are": "are-Latn-AU",
      "arh": "arh-Latn-CO",
      "ari": "ari-Latn-US",
      "arj": "arj-Latn-BR",
      "ark": "ark-Latn-BR",
      "arl": "arl-Latn-PE",
      "arn": "arn-Latn-CL",
      "aro": "aro-Latn-BO",
      "arp": "arp-Latn-US",
      "arq": "arq-Arab-DZ",
      "arr": "arr-Latn-BR",
      "ars": "ars-Arab-SA",
      "aru": "aru-Latn-BR",
      "arw": "arw-Latn-SR",
      "arx": "arx-Latn-BR",
      "ary": "ary-Arab-MA",
      "arz": "arz-Arab-EG",
      "as": "as-Beng-IN",
      "asa": "asa-Latn-TZ",
      "asb": "asb-Latn-CA",
      "asc": "asc-Latn-ID",
      "ase": "ase-Sgnw-US",
      "asg": "asg-Latn-NG",
      "ash": "ash-Latn-PE",
      "asi": "asi-Latn-ID",
      "asj": "asj-Latn-CM",
      "ask": "ask-Arab-AF",
      "asl": "asl-Latn-ID",
      "asn": "asn-Latn-BR",
      "aso": "aso-Latn-PG",
      "asr": "asr-Deva-IN",
      "ass": "ass-Latn-CM",
      "ast": "ast-Latn-ES",
      "asu": "asu-Latn-BR",
      "asv": "asv-Latn-CD",
      "asx": "asx-Latn-PG",
      "asy": "asy-Latn-ID",
      "asz": "asz-Latn-ID",
      "ata": "ata-Latn-PG",
      "atb": "atb-Latn-CN",
      "atc": "atc-Latn-PE",
      "atd": "atd-Latn-PH",
      "ate": "ate-Latn-PG",
      "atg": "atg-Latn-NG",
      "ati": "ati-Latn-CI",
      "atj": "atj-Latn-CA",
      "atk": "atk-Latn-PH",
      "atl": "atl-Latn-PH",
      "atm": "atm-Latn-PH",
      "atn": "atn-Arab-IR",
      "ato": "ato-Latn-CM",
      "atp": "atp-Latn-PH",
      "atq": "atq-Latn-ID",
      "atr": "atr-Latn-BR",
      "ats": "ats-Latn-US",
      "att": "att-Latn-PH",
      "atu": "atu-Latn-SS",
      "atv": "atv-Cyrl-RU",
      "atw": "atw-Latn-US",
      "atx": "atx-Latn-BR",
      "aty": "aty-Latn-VU",
      "atz": "atz-Latn-PH",
      "aua": "aua-Latn-SB",
      "auc": "auc-Latn-EC",
      "aud": "aud-Latn-SB",
      "aug": "aug-Latn-BJ",
      "auh": "auh-Latn-ZM",
      "aui": "aui-Latn-PG",
      "auj": "auj-Arab-LY",
      "auk": "auk-Latn-PG",
      "aul": "aul-Latn-VU",
      "aum": "aum-Latn-NG",
      "aun": "aun-Latn-PG",
      "auo": "auo-Latn-NG",
      "aup": "aup-Latn-PG",
      "auq": "auq-Latn-ID",
      "aur": "aur-Latn-PG",
      "aut": "aut-Latn-PF",
      "auu": "auu-Latn-ID",
      "auw": "auw-Latn-ID",
      "auy": "auy-Latn-PG",
      "auz": "auz-Arab-UZ",
      "av": "av-Cyrl-RU",
      "avb": "avb-Latn-PG",
      "avd": "avd-Arab-IR",
      "avi": "avi-Latn-CI",
      "avk": "avk-Latn-001",
      "avl": "avl-Arab-EG",
      "avm": "avm-Latn-AU",
      "avn": "avn-Latn-GH",
      "avo": "avo-Latn-BR",
      "avs": "avs-Latn-PE",
      "avt": "avt-Latn-PG",
      "avu": "avu-Latn-SS",
      "avv": "avv-Latn-BR",
      "awa": "awa-Deva-IN",
      "awb": "awb-Latn-PG",
      "awc": "awc-Latn-NG",
      "awe": "awe-Latn-BR",
      "awg": "awg-Latn-AU",
      "awh": "awh-Latn-ID",
      "awi": "awi-Latn-PG",
      "awk": "awk-Latn-AU",
      "awm": "awm-Latn-PG",
      "awn": "awn-Ethi-ET",
      "awo": "awo-Latn-NG",
      "awr": "awr-Latn-ID",
      "aws": "aws-Latn-ID",
      "awt": "awt-Latn-BR",
      "awu": "awu-Latn-ID",
      "awv": "awv-Latn-ID",
      "aww": "aww-Latn-PG",
      "awx": "awx-Latn-PG",
      "awy": "awy-Latn-ID",
      "axb": "axb-Latn-AR",
      "axe": "axe-Latn-AU",
      "axg": "axg-Latn-BR",
      "axk": "axk-Latn-CF",
      "axl": "axl-Latn-AU",
      "axm": "axm-Armn-AM",
      "axx": "axx-Latn-NC",
      "ay": "ay-Latn-BO",
      "aya": "aya-Latn-PG",
      "ayb": "ayb-Latn-BJ",
      "ayc": "ayc-Latn-PE",
      "ayd": "ayd-Latn-AU",
      "aye": "aye-Latn-NG",
      "ayg": "ayg-Latn-TG",
      "ayh": "ayh-Arab-YE",
      "ayi": "ayi-Latn-NG",
      "ayk": "ayk-Latn-NG",
      "ayl": "ayl-Arab-LY",
      "ayn": "ayn-Arab-YE",
      "ayo": "ayo-Latn-PY",
      "ayp": "ayp-Arab-IQ",
      "ayq": "ayq-Latn-PG",
      "ays": "ays-Latn-PH",
      "ayt": "ayt-Latn-PH",
      "ayu": "ayu-Latn-NG",
      "ayz": "ayz-Latn-ID",
      "az": "az-Latn-AZ",
      "az-Arab": "az-Arab-IR",
      "az-IQ": "az-Arab-IQ",
      "az-IR": "az-Arab-IR",
      "az-RU": "az-Cyrl-RU",
      "azb": "azb-Arab-IR",
      "azd": "azd-Latn-MX",
      "azg": "azg-Latn-MX",
      "azm": "azm-Latn-MX",
      "azn": "azn-Latn-MX",
      "azo": "azo-Latn-CM",
      "azt": "azt-Latn-PH",
      "azz": "azz-Latn-MX",
      "ba": "ba-Cyrl-RU",
      "baa": "baa-Latn-SB",
      "bab": "bab-Latn-GW",
      "bac": "bac-Latn-ID",
      "bae": "bae-Latn-VE",
      "baf": "baf-Latn-CM",
      "bag": "bag-Latn-CM",
      "bah": "bah-Latn-BS",
      "baj": "baj-Latn-ID",
      "bal": "bal-Arab-PK",
      "ban": "ban-Latn-ID",
      "bao": "bao-Latn-CO",
      "bap": "bap-Deva-NP",
      "bap-Krai": "bap-Krai-IN",
      "bar": "bar-Latn-AT",
      "bas": "bas-Latn-CM",
      "bau": "bau-Latn-NG",
      "bav": "bav-Latn-CM",
      "baw": "baw-Latn-CM",
      "bax": "bax-Bamu-CM",
      "bay": "bay-Latn-ID",
      "bba": "bba-Latn-BJ",
      "bbb": "bbb-Latn-PG",
      "bbc": "bbc-Latn-ID",
      "bbd": "bbd-Latn-PG",
      "bbe": "bbe-Latn-CD",
      "bbf": "bbf-Latn-PG",
      "bbg": "bbg-Latn-GA",
      "bbi": "bbi-Latn-CM",
      "bbj": "bbj-Latn-CM",
      "bbk": "bbk-Latn-CM",
      "bbl": "bbl-Geor-GE",
      "bbm": "bbm-Latn-CD",
      "bbn": "bbn-Latn-PG",
      "bbo": "bbo-Latn-BF",
      "bbp": "bbp-Latn-CF",
      "bbq": "bbq-Latn-CM",
      "bbr": "bbr-Latn-PG",
      "bbs": "bbs-Latn-NG",
      "bbt": "bbt-Latn-NG",
      "bbu": "bbu-Latn-NG",
      "bbv": "bbv-Latn-PG",
      "bbw": "bbw-Latn-CM",
      "bbx": "bbx-Latn-CM",
      "bby": "bby-Latn-CM",
      "bca": "bca-Latn-CN",
      "bcb": "bcb-Latn-SN",
      "bcd": "bcd-Latn-ID",
      "bce": "bce-Latn-CM",
      "bcf": "bcf-Latn-PG",
      "bcg": "bcg-Latn-GN",
      "bch": "bch-Latn-PG",
      "bci": "bci-Latn-CI",
      "bcj": "bcj-Latn-AU",
      "bck": "bck-Latn-AU",
      "bcm": "bcm-Latn-PG",
      "bcn": "bcn-Latn-NG",
      "bco": "bco-Latn-PG",
      "bcp": "bcp-Latn-CD",
      "bcq": "bcq-Ethi-ET",
      "bcr": "bcr-Latn-CA",
      "bcs": "bcs-Latn-NG",
      "bct": "bct-Latn-CD",
      "bcu": "bcu-Latn-PG",
      "bcv": "bcv-Latn-NG",
      "bcw": "bcw-Latn-CM",
      "bcy": "bcy-Latn-NG",
      "bcz": "bcz-Latn-SN",
      "bda": "bda-Latn-SN",
      "bdb": "bdb-Latn-ID",
      "bdc": "bdc-Latn-CO",
      "bdd": "bdd-Latn-PG",
      "bde": "bde-Latn-NG",
      "bdf": "bdf-Latn-PG",
      "bdg": "bdg-Latn-MY",
      "bdh": "bdh-Latn-SS",
      "bdi": "bdi-Latn-SD",
      "bdj": "bdj-Latn-SS",
      "bdk": "bdk-Latn-AZ",
      "bdl": "bdl-Latn-ID",
      "bdm": "bdm-Latn-TD",
      "bdn": "bdn-Latn-CM",
      "bdo": "bdo-Latn-TD",
      "bdp": "bdp-Latn-TZ",
      "bdq": "bdq-Latn-VN",
      "bdr": "bdr-Latn-MY",
      "bds": "bds-Latn-TZ",
      "bdt": "bdt-Latn-CF",
      "bdu": "bdu-Latn-CM",
      "bdv": "bdv-Orya-IN",
      "bdw": "bdw-Latn-ID",
      "bdx": "bdx-Latn-ID",
      "bdy": "bdy-Latn-AU",
      "bdz": "bdz-Arab-PK",
      "be": "be-Cyrl-BY",
      "bea": "bea-Latn-CA",
      "beb": "beb-Latn-CM",
      "bec": "bec-Latn-CM",
      "bed": "bed-Latn-ID",
      "bee": "bee-Deva-IN",
      "bef": "bef-Latn-PG",
      "beh": "beh-Latn-BJ",
      "bei": "bei-Latn-ID",
      "bej": "bej-Arab-SD",
      "bek": "bek-Latn-PG",
      "bem": "bem-Latn-ZM",
      "beo": "beo-Latn-PG",
      "bep": "bep-Latn-ID",
      "beq": "beq-Latn-CG",
      "bes": "bes-Latn-TD",
      "bet": "bet-Latn-CI",
      "beu": "beu-Latn-ID",
      "bev": "bev-Latn-CI",
      "bew": "bew-Latn-ID",
      "bex": "bex-Latn-SS",
      "bey": "bey-Latn-PG",
      "bez": "bez-Latn-TZ",
      "bfa": "bfa-Latn-SS",
      "bfb": "bfb-Deva-IN",
      "bfc": "bfc-Latn-CN",
      "bfd": "bfd-Latn-CM",
      "bfe": "bfe-Latn-ID",
      "bff": "bff-Latn-CF",
      "bfg": "bfg-Latn-ID",
      "bfh": "bfh-Latn-PG",
      "bfj": "bfj-Latn-CM",
      "bfl": "bfl-Latn-CF",
      "bfm": "bfm-Latn-CM",
      "bfn": "bfn-Latn-TL",
      "bfo": "bfo-Latn-BF",
      "bfp": "bfp-Latn-CM",
      "bfq": "bfq-Taml-IN",
      "bfs": "bfs-Latn-CN",
      "bft": "bft-Arab-PK",
      "bfu": "bfu-Tibt-IN",
      "bfw": "bfw-Orya-IN",
      "bfx": "bfx-Latn-PH",
      "bfy": "bfy-Deva-IN",
      "bfz": "bfz-Deva-IN",
      "bg": "bg-Cyrl-BG",
      "bga": "bga-Latn-NG",
      "bgb": "bgb-Latn-ID",
      "bgc": "bgc-Deva-IN",
      "bgd": "bgd-Deva-IN",
      "bgf": "bgf-Latn-CM",
      "bgg": "bgg-Latn-IN",
      "bgi": "bgi-Latn-PH",
      "bgj": "bgj-Latn-CM",
      "bgn": "bgn-Arab-PK",
      "bgo": "bgo-Latn-GN",
      "bgp": "bgp-Arab-PK",
      "bgq": "bgq-Deva-IN",
      "bgr": "bgr-Latn-IN",
      "bgs": "bgs-Latn-PH",
      "bgt": "bgt-Latn-SB",
      "bgu": "bgu-Latn-NG",
      "bgv": "bgv-Latn-ID",
      "bgw": "bgw-Deva-IN",
      "bgx": "bgx-Grek-TR",
      "bgy": "bgy-Latn-ID",
      "bgz": "bgz-Latn-ID",
      "bha": "bha-Deva-IN",
      "bhb": "bhb-Deva-IN",
      "bhc": "bhc-Latn-ID",
      "bhd": "bhd-Deva-IN",
      "bhe": "bhe-Arab-PK",
      "bhf": "bhf-Latn-PG",
      "bhg": "bhg-Latn-PG",
      "bhh": "bhh-Cyrl-IL",
      "bhi": "bhi-Deva-IN",
      "bhj": "bhj-Deva-NP",
      "bhl": "bhl-Latn-PG",
      "bhm": "bhm-Arab-OM",
      "bhn": "bhn-Syrc-GE",
      "bho": "bho-Deva-IN",
      "bhp": "bhp-Latn-ID",
      "bhq": "bhq-Latn-ID",
      "bhr": "bhr-Latn-MG",
      "bhs": "bhs-Latn-CM",
      "bht": "bht-Deva-IN",
      "bhu": "bhu-Deva-IN",
      "bhv": "bhv-Latn-ID",
      "bhw": "bhw-Latn-ID",
      "bhy": "bhy-Latn-CD",
      "bhz": "bhz-Latn-ID",
      "bi": "bi-Latn-VU",
      "bia": "bia-Latn-AU",
      "bib": "bib-Latn-BF",
      "bid": "bid-Latn-TD",
      "bie": "bie-Latn-PG",
      "bif": "bif-Latn-GW",
      "big": "big-Latn-PG",
      "bik": "bik-Latn-PH",
      "bil": "bil-Latn-NG",
      "bim": "bim-Latn-GH",
      "bin": "bin-Latn-NG",
      "bio": "bio-Latn-PG",
      "bip": "bip-Latn-CD",
      "biq": "biq-Latn-PG",
      "bir": "bir-Latn-PG",
      "bit": "bit-Latn-PG",
      "biu": "biu-Latn-IN",
      "biv": "biv-Latn-GH",
      "biw": "biw-Latn-CM",
      "biy": "biy-Deva-IN",
      "biz": "biz-Latn-CD",
      "bja": "bja-Latn-CD",
      "bjb": "bjb-Latn-AU",
      "bjc": "bjc-Latn-PG",
      "bjf": "bjf-Syrc-IL",
      "bjg": "bjg-Latn-GW",
      "bjh": "bjh-Latn-PG",
      "bji": "bji-Latn-ET",
      "bjj": "bjj-Deva-IN",
      "bjk": "bjk-Latn-PG",
      "bjl": "bjl-Latn-PG",
      "bjm": "bjm-Arab-IQ",
      "bjn": "bjn-Latn-ID",
      "bjo": "bjo-Latn-CF",
      "bjp": "bjp-Latn-PG",
      "bjr": "bjr-Latn-PG",
      "bjs": "bjs-Latn-BB",
      "bjt": "bjt-Latn-SN",
      "bju": "bju-Latn-CM",
      "bjv": "bjv-Latn-TD",
      "bjw": "bjw-Latn-CI",
      "bjx": "bjx-Latn-PH",
      "bjy": "bjy-Latn-AU",
      "bjz": "bjz-Latn-PG",
      "bka": "bka-Latn-NG",
      "bkc": "bkc-Latn-CM",
      "bkd": "bkd-Latn-PH",
      "bkf": "bkf-Latn-CD",
      "bkg": "bkg-Latn-CF",
      "bkh": "bkh-Latn-CM",
      "bki": "bki-Latn-VU",
      "bkj": "bkj-Latn-CF",
      "bkk": "bkk-Tibt-IN",
      "bkl": "bkl-Latn-ID",
      "bkm": "bkm-Latn-CM",
      "bkn": "bkn-Latn-ID",
      "bko": "bko-Latn-CM",
      "bkp": "bkp-Latn-CD",
      "bkq": "bkq-Latn-BR",
      "bkr": "bkr-Latn-ID",
      "bks": "bks-Latn-PH",
      "bkt": "bkt-Latn-CD",
      "bku": "bku-Latn-PH",
      "bkv": "bkv-Latn-NG",
      "bkw": "bkw-Latn-CG",
      "bkx": "bkx-Latn-TL",
      "bky": "bky-Latn-NG",
      "bkz": "bkz-Latn-ID",
      "bla": "bla-Latn-CA",
      "blb": "blb-Latn-SB",
      "blc": "blc-Latn-CA",
      "bld": "bld-Latn-ID",
      "ble": "ble-Latn-GW",
      "blf": "blf-Latn-ID",
      "blh": "blh-Latn-LR",
      "bli": "bli-Latn-CD",
      "blj": "blj-Latn-ID",
      "blk": "blk-Mymr-MM",
      "blm": "blm-Latn-SS",
      "bln": "bln-Latn-PH",
      "blo": "blo-Latn-BJ",
      "blp": "blp-Latn-SB",
      "blq": "blq-Latn-PG",
      "blr": "blr-Latn-CN",
      "bls": "bls-Latn-ID",
      "blt": "blt-Tavt-VN",
      "blv": "blv-Latn-AO",
      "blw": "blw-Latn-PH",
      "blx": "blx-Latn-PH",
      "bly": "bly-Latn-BJ",
      "blz": "blz-Latn-ID",
      "bm": "bm-Latn-ML",
      "bma": "bma-Latn-NG",
      "bmb": "bmb-Latn-CD",
      "bmc": "bmc-Latn-PG",
      "bmd": "bmd-Latn-GN",
      "bme": "bme-Latn-CF",
      "bmf": "bmf-Latn-SL",
      "bmg": "bmg-Latn-CD",
      "bmh": "bmh-Latn-PG",
      "bmi": "bmi-Latn-TD",
      "bmj": "bmj-Deva-NP",
      "bmk": "bmk-Latn-PG",
      "bml": "bml-Latn-CD",
      "bmm": "bmm-Latn-MG",
      "bmn": "bmn-Latn-PG",
      "bmo": "bmo-Latn-CM",
      "bmp": "bmp-Latn-PG",
      "bmq": "bmq-Latn-ML",
      "bmr": "bmr-Latn-CO",
      "bms": "bms-Latn-NE",
      "bmu": "bmu-Latn-PG",
      "bmv": "bmv-Latn-CM",
      "bmw": "bmw-Latn-CG",
      "bmx": "bmx-Latn-PG",
      "bmz": "bmz-Latn-PG",
      "bn": "bn-Beng-BD",
      "bna": "bna-Latn-ID",
      "bnb": "bnb-Latn-MY",
      "bnc": "bnc-Latn-PH",
      "bnd": "bnd-Latn-ID",
      "bne": "bne-Latn-ID",
      "bnf": "bnf-Latn-ID",
      "bng": "bng-Latn-GQ",
      "bni": "bni-Latn-CD",
      "bnj": "bnj-Latn-PH",
      "bnk": "bnk-Latn-VU",
      "bnm": "bnm-Latn-GQ",
      "bnn": "bnn-Latn-TW",
      "bno": "bno-Latn-PH",
      "bnp": "bnp-Latn-PG",
      "bnq": "bnq-Latn-ID",
      "bnr": "bnr-Latn-VU",
      "bns": "bns-Deva-IN",
      "bnu": "bnu-Latn-ID",
      "bnv": "bnv-Latn-ID",
      "bnw": "bnw-Latn-PG",
      "bnx": "bnx-Latn-CD",
      "bny": "bny-Latn-MY",
      "bnz": "bnz-Latn-CM",
      "bo": "bo-Tibt-CN",
      "boa": "boa-Latn-PE",
      "bob": "bob-Latn-KE",
      "boe": "boe-Latn-CM",
      "bof": "bof-Latn-BF",
      "boh": "boh-Latn-CD",
      "boj": "boj-Latn-PG",
      "bok": "bok-Latn-CG",
      "bol": "bol-Latn-NG",
      "bom": "bom-Latn-NG",
      "bon": "bon-Latn-PG",
      "boo": "boo-Latn-ML",
      "bop": "bop-Latn-PG",
      "boq": "boq-Latn-PG",
      "bor": "bor-Latn-BR",
      "bot": "bot-Latn-SS",
      "bou": "bou-Latn-TZ",
      "bov": "bov-Latn-GH",
      "bow": "bow-Latn-PG",
      "box": "box-Latn-BF",
      "boy": "boy-Latn-CF",
      "boz": "boz-Latn-ML",
      "bpa": "bpa-Latn-VU",
      "bpc": "bpc-Latn-CM",
      "bpd": "bpd-Latn-CF",
      "bpe": "bpe-Latn-PG",
      "bpg": "bpg-Latn-ID",
      "bph": "bph-Cyrl-RU",
      "bpi": "bpi-Latn-PG",
      "bpj": "bpj-Latn-CD",
      "bpk": "bpk-Latn-NC",
      "bpl": "bpl-Latn-AU",
      "bpm": "bpm-Latn-PG",
      "bpo": "bpo-Latn-ID",
      "bpp": "bpp-Latn-ID",
      "bpq": "bpq-Latn-ID",
      "bpr": "bpr-Latn-PH",
      "bps": "bps-Latn-PH",
      "bpt": "bpt-Latn-AU",
      "bpu": "bpu-Latn-PG",
      "bpv": "bpv-Latn-ID",
      "bpw": "bpw-Latn-PG",
      "bpx": "bpx-Deva-IN",
      "bpy": "bpy-Beng-IN",
      "bpz": "bpz-Latn-ID",
      "bqa": "bqa-Latn-BJ",
      "bqb": "bqb-Latn-ID",
      "bqc": "bqc-Latn-BJ",
      "bqd": "bqd-Latn-CM",
      "bqf": "bqf-Latn-GN",
      "bqg": "bqg-Latn-TG",
      "bqi": "bqi-Arab-IR",
      "bqj": "bqj-Latn-SN",
      "bqk": "bqk-Latn-CF",
      "bql": "bql-Latn-PG",
      "bqm": "bqm-Latn-CM",
      "bqo": "bqo-Latn-CM",
      "bqp": "bqp-Latn-NG",
      "bqq": "bqq-Latn-ID",
      "bqr": "bqr-Latn-ID",
      "bqs": "bqs-Latn-PG",
      "bqt": "bqt-Latn-CM",
      "bqu": "bqu-Latn-CD",
      "bqv": "bqv-Latn-CI",
      "bqw": "bqw-Latn-NG",
      "bqx": "bqx-Latn-NG",
      "bqz": "bqz-Latn-CM",
      "br": "br-Latn-FR",
      "bra": "bra-Deva-IN",
      "brb": "brb-Khmr-KH",
      "brc": "brc-Latn-GY",
      "brd": "brd-Deva-NP",
      "brf": "brf-Latn-CD",
      "brg": "brg-Latn-BO",
      "brh": "brh-Arab-PK",
      "bri": "bri-Latn-CM",
      "brj": "brj-Latn-VU",
      "brk": "brk-Arab-SD",
      "brl": "brl-Latn-BW",
      "brm": "brm-Latn-CD",
      "brn": "brn-Latn-CR",
      "bro": "bro-Tibt-BT",
      "brp": "brp-Latn-ID",
      "brq": "brq-Latn-PG",
      "brr": "brr-Latn-SB",
      "brs": "brs-Latn-ID",
      "brt": "brt-Latn-NG",
      "bru": "bru-Latn-VN",
      "brv": "brv-Laoo-LA",
      "brw": "brw-Knda-IN",
      "brx": "brx-Deva-IN",
      "bry": "bry-Latn-PG",
      "brz": "brz-Latn-PG",
      "bs": "bs-Latn-BA",
      "bsa": "bsa-Latn-ID",
      "bsb": "bsb-Latn-BN",
      "bsc": "bsc-Latn-SN",
      "bse": "bse-Latn-CM",
      "bsf": "bsf-Latn-NG",
      "bsh": "bsh-Arab-AF",
      "bsi": "bsi-Latn-CM",
      "bsj": "bsj-Latn-NG",
      "bsk": "bsk-Arab-PK",
      "bsl": "bsl-Latn-NG",
      "bsm": "bsm-Latn-ID",
      "bsn": "bsn-Latn-CO",
      "bso": "bso-Latn-TD",
      "bsp": "bsp-Latn-GN",
      "bsq": "bsq-Bass-LR",
      "bsr": "bsr-Latn-NG",
      "bss": "bss-Latn-CM",
      "bst": "bst-Ethi-ET",
      "bsu": "bsu-Latn-ID",
      "bsv": "bsv-Latn-GN",
      "bsw": "bsw-Latn-ET",
      "bsx": "bsx-Latn-NG",
      "bsy": "bsy-Latn-MY",
      "bta": "bta-Latn-NG",
      "btc": "btc-Latn-CM",
      "btd": "btd-Batk-ID",
      "bte": "bte-Latn-NG",
      "btf": "btf-Latn-TD",
      "btg": "btg-Latn-CI",
      "bth": "bth-Latn-MY",
      "bti": "bti-Latn-ID",
      "btj": "btj-Latn-ID",
      "btm": "btm-Batk-ID",
      "btn": "btn-Latn-PH",
      "bto": "bto-Latn-PH",
      "btp": "btp-Latn-PG",
      "btq": "btq-Latn-MY",
      "btr": "btr-Latn-VU",
      "bts": "bts-Latn-ID",
      "btt": "btt-Latn-NG",
      "btu": "btu-Latn-NG",
      "btv": "btv-Deva-PK",
      "btw": "btw-Latn-PH",
      "btx": "btx-Latn-ID",
      "bty": "bty-Latn-ID",
      "btz": "btz-Latn-ID",
      "bua": "bua-Cyrl-RU",
      "bub": "bub-Latn-TD",
      "buc": "buc-Latn-YT",
      "bud": "bud-Latn-TG",
      "bue": "bue-Latn-CA",
      "buf": "buf-Latn-CD",
      "bug": "bug-Latn-ID",
      "buh": "buh-Latn-CN",
      "bui": "bui-Latn-CG",
      "buj": "buj-Latn-NG",
      "buk": "buk-Latn-PG",
      "bum": "bum-Latn-CM",
      "bun": "bun-Latn-SL",
      "buo": "buo-Latn-PG",
      "bup": "bup-Latn-ID",
      "buq": "buq-Latn-PG",
      "bus": "bus-Latn-NG",
      "but": "but-Latn-PG",
      "buu": "buu-Latn-CD",
      "buv": "buv-Latn-PG",
      "buw": "buw-Latn-GA",
      "bux": "bux-Latn-NG",
      "buy": "buy-Latn-SL",
      "buz": "buz-Latn-NG",
      "bva": "bva-Latn-TD",
      "bvb": "bvb-Latn-GQ",
      "bvc": "bvc-Latn-SB",
      "bvd": "bvd-Latn-SB",
      "bve": "bve-Latn-ID",
      "bvf": "bvf-Latn-TD",
      "bvg": "bvg-Latn-CM",
      "bvh": "bvh-Latn-NG",
      "bvi": "bvi-Latn-SS",
      "bvj": "bvj-Latn-NG",
      "bvk": "bvk-Latn-ID",
      "bvm": "bvm-Latn-CM",
      "bvn": "bvn-Latn-PG",
      "bvo": "bvo-Latn-TD",
      "bvq": "bvq-Latn-CF",
      "bvr": "bvr-Latn-AU",
      "bvt": "bvt-Latn-ID",
      "bvu": "bvu-Latn-ID",
      "bvv": "bvv-Latn-VE",
      "bvw": "bvw-Latn-NG",
      "bvx": "bvx-Latn-CG",
      "bvy": "bvy-Latn-PH",
      "bvz": "bvz-Latn-ID",
      "bwa": "bwa-Latn-NC",
      "bwb": "bwb-Latn-FJ",
      "bwc": "bwc-Latn-ZM",
      "bwd": "bwd-Latn-PG",
      "bwe": "bwe-Mymr-MM",
      "bwf": "bwf-Latn-PG",
      "bwg": "bwg-Latn-MZ",
      "bwh": "bwh-Latn-CM",
      "bwi": "bwi-Latn-VE",
      "bwj": "bwj-Latn-BF",
      "bwk": "bwk-Latn-PG",
      "bwl": "bwl-Latn-CD",
      "bwm": "bwm-Latn-PG",
      "bwo": "bwo-Latn-ET",
      "bwp": "bwp-Latn-ID",
      "bwq": "bwq-Latn-BF",
      "bwr": "bwr-Latn-NG",
      "bws": "bws-Latn-CD",
      "bwt": "bwt-Latn-CM",
      "bwu": "bwu-Latn-GH",
      "bww": "bww-Latn-CD",
      "bwx": "bwx-Latn-CN",
      "bwy": "bwy-Latn-BF",
      "bwz": "bwz-Latn-CG",
      "bxa": "bxa-Latn-SB",
      "bxb": "bxb-Latn-SS",
      "bxc": "bxc-Latn-GQ",
      "bxf": "bxf-Latn-PG",
      "bxg": "bxg-Latn-CD",
      "bxh": "bxh-Latn-PG",
      "bxi": "bxi-Latn-AU",
      "bxj": "bxj-Latn-AU",
      "bxl": "bxl-Latn-BF",
      "bxm": "bxm-Cyrl-MN",
      "bxn": "bxn-Latn-AU",
      "bxo": "bxo-Latn-NG",
      "bxp": "bxp-Latn-CM",
      "bxq": "bxq-Latn-NG",
      "bxs": "bxs-Latn-CM",
      "bxu": "bxu-Mong-CN",
      "bxv": "bxv-Latn-TD",
      "bxw": "bxw-Latn-ML",
      "bxz": "bxz-Latn-PG",
      "bya": "bya-Latn-PH",
      "byb": "byb-Latn-CM",
      "byc": "byc-Latn-NG",
      "byd": "byd-Latn-ID",
      "bye": "bye-Latn-PG",
      "byf": "byf-Latn-NG",
      "byh": "byh-Deva-NP",
      "byi": "byi-Latn-CD",
      "byj": "byj-Latn-NG",
      "byk": "byk-Latn-CN",
      "byl": "byl-Latn-ID",
      "bym": "bym-Latn-AU",
      "byn": "byn-Ethi-ER",
      "byp": "byp-Latn-NG",
      "byr": "byr-Latn-PG",
      "bys": "bys-Latn-NG",
      "byv": "byv-Latn-CM",
      "byw": "byw-Deva-NP",
      "byx": "byx-Latn-PG",
      "byz": "byz-Latn-PG",
      "bza": "bza-Latn-LR",
      "bzb": "bzb-Latn-ID",
      "bzc": "bzc-Latn-MG",
      "bzd": "bzd-Latn-CR",
      "bze": "bze-Latn-ML",
      "bzf": "bzf-Latn-PG",
      "bzh": "bzh-Latn-PG",
      "bzi": "bzi-Thai-TH",
      "bzj": "bzj-Latn-BZ",
      "bzk": "bzk-Latn-NI",
      "bzl": "bzl-Latn-ID",
      "bzm": "bzm-Latn-CD",
      "bzn": "bzn-Latn-ID",
      "bzo": "bzo-Latn-CD",
      "bzp": "bzp-Latn-ID",
      "bzq": "bzq-Latn-ID",
      "bzr": "bzr-Latn-AU",
      "bzt": "bzt-Latn-001",
      "bzu": "bzu-Latn-ID",
      "bzv": "bzv-Latn-CM",
      "bzw": "bzw-Latn-NG",
      "bzx": "bzx-Latn-ML",
      "bzy": "bzy-Latn-NG",
      "bzz": "bzz-Latn-NG",
      "ca": "ca-Latn-ES",
      "caa": "caa-Latn-GT",
      "cab": "cab-Latn-HN",
      "cac": "cac-Latn-GT",
      "cad": "cad-Latn-US",
      "cae": "cae-Latn-SN",
      "caf": "caf-Latn-CA",
      "cag": "cag-Latn-PY",
      "cah": "cah-Latn-PE",
      "caj": "caj-Latn-BO",
      "cak": "cak-Latn-GT",
      "cal": "cal-Latn-MP",
      "cam": "cam-Latn-NC",
      "can": "can-Latn-PG",
      "cao": "cao-Latn-BO",
      "cap": "cap-Latn-BO",
      "caq": "caq-Latn-IN",
      "car": "car-Latn-VE",
      "cas": "cas-Latn-BO",
      "cav": "cav-Latn-BO",
      "caw": "caw-Latn-BO",
      "cax": "cax-Latn-BO",
      "cay": "cay-Latn-CA",
      "caz": "caz-Latn-BO",
      "cbb": "cbb-Latn-CO",
      "cbc": "cbc-Latn-CO",
      "cbd": "cbd-Latn-CO",
      "cbg": "cbg-Latn-CO",
      "cbi": "cbi-Latn-EC",
      "cbj": "cbj-Latn-BJ",
      "cbk": "cbk-Latn-PH",
      "cbl": "cbl-Latn-MM",
      "cbn": "cbn-Thai-TH",
      "cbo": "cbo-Latn-NG",
      "cbq": "cbq-Latn-NG",
      "cbr": "cbr-Latn-PE",
      "cbs": "cbs-Latn-PE",
      "cbt": "cbt-Latn-PE",
      "cbu": "cbu-Latn-PE",
      "cbv": "cbv-Latn-CO",
      "cbw": "cbw-Latn-PH",
      "cby": "cby-Latn-CO",
      "ccc": "ccc-Latn-PE",
      "ccd": "ccd-Latn-BR",
      "cce": "cce-Latn-MZ",
      "ccg": "ccg-Latn-NG",
      "cch": "cch-Latn-NG",
      "ccj": "ccj-Latn-GW",
      "ccl": "ccl-Latn-TZ",
      "ccm": "ccm-Latn-MY",
      "cco": "cco-Latn-MX",
      "ccp": "ccp-Cakm-BD",
      "ccr": "ccr-Latn-SV",
      "cde": "cde-Telu-IN",
      "cdf": "cdf-Latn-IN",
      "cdh": "cdh-Deva-IN",
      "cdi": "cdi-Gujr-IN",
      "cdj": "cdj-Deva-IN",
      "cdm": "cdm-Deva-NP",
      "cdo": "cdo-Hans-CN",
      "cdr": "cdr-Latn-NG",
      "cdz": "cdz-Beng-IN",
      "ce": "ce-Cyrl-RU",
      "cea": "cea-Latn-US",
      "ceb": "ceb-Latn-PH",
      "ceg": "ceg-Latn-PY",
      "cek": "cek-Latn-MM",
      "cen": "cen-Latn-NG",
      "cet": "cet-Latn-NG",
      "cey": "cey-Latn-MM",
      "cfa": "cfa-Latn-NG",
      "cfd": "cfd-Latn-NG",
      "cfg": "cfg-Latn-NG",
      "cfm": "cfm-Latn-MM",
      "cga": "cga-Latn-PG",
      "cgc": "cgc-Latn-PH",
      "cgg": "cgg-Latn-UG",
      "cgk": "cgk-Tibt-BT",
      "ch": "ch-Latn-GU",
      "chb": "chb-Latn-CO",
      "chd": "chd-Latn-MX",
      "chf": "chf-Latn-MX",
      "chg": "chg-Arab-TM",
      "chh": "chh-Latn-US",
      "chj": "chj-Latn-MX",
      "chk": "chk-Latn-FM",
      "chl": "chl-Latn-US",
      "chm": "chm-Cyrl-RU",
      "chn": "chn-Latn-US",
      "cho": "cho-Latn-US",
      "chp": "chp-Latn-CA",
      "chq": "chq-Latn-MX",
      "chr": "chr-Cher-US",
      "cht": "cht-Latn-PE",
      "chw": "chw-Latn-MZ",
      "chx": "chx-Deva-NP",
      "chy": "chy-Latn-US",
      "chz": "chz-Latn-MX",
      "cia": "cia-Latn-ID",
      "cib": "cib-Latn-BJ",
      "cic": "cic-Latn-US",
      "cie": "cie-Latn-NG",
      "cih": "cih-Deva-IN",
      "cim": "cim-Latn-IT",
      "cin": "cin-Latn-BR",
      "cip": "cip-Latn-MX",
      "cir": "cir-Latn-NC",
      "ciw": "ciw-Latn-US",
      "ciy": "ciy-Latn-VE",
      "cja": "cja-Arab-KH",
      "cje": "cje-Latn-VN",
      "cjh": "cjh-Latn-US",
      "cji": "cji-Cyrl-RU",
      "cjk": "cjk-Latn-AO",
      "cjm": "cjm-Cham-VN",
      "cjn": "cjn-Latn-PG",
      "cjo": "cjo-Latn-PE",
      "cjp": "cjp-Latn-CR",
      "cjs": "cjs-Latn-RU",
      "cjv": "cjv-Latn-PG",
      "cjy": "cjy-Hans-CN",
      "ckb": "ckb-Arab-IQ",
      "ckl": "ckl-Latn-NG",
      "ckm": "ckm-Latn-HR",
      "ckn": "ckn-Latn-MM",
      "cko": "cko-Latn-GH",
      "ckq": "ckq-Latn-TD",
      "ckr": "ckr-Latn-PG",
      "cks": "cks-Latn-NC",
      "ckt": "ckt-Cyrl-RU",
      "cku": "cku-Latn-US",
      "ckv": "ckv-Latn-TW",
      "ckx": "ckx-Latn-CM",
      "cky": "cky-Latn-NG",
      "ckz": "ckz-Latn-GT",
      "cla": "cla-Latn-NG",
      "clc": "clc-Latn-CA",
      "cle": "cle-Latn-MX",
      "clh": "clh-Arab-PK",
      "cli": "cli-Latn-GH",
      "clj": "clj-Latn-MM",
      "clk": "clk-Latn-IN",
      "cll": "cll-Latn-GH",
      "clm": "clm-Latn-US",
      "clo": "clo-Latn-MX",
      "clt": "clt-Latn-MM",
      "clu": "clu-Latn-PH",
      "clw": "clw-Cyrl-RU",
      "cly": "cly-Latn-MX",
      "cma": "cma-Latn-VN",
      "cme": "cme-Latn-BF",
      "cmg": "cmg-Soyo-MN",
      "cmi": "cmi-Latn-CO",
      "cml": "cml-Latn-ID",
      "cmo": "cmo-Latn-VN",
      "cmr": "cmr-Latn-MM",
      "cms": "cms-Latn-IT",
      "cmt": "cmt-Latn-ZA",
      "cna": "cna-Tibt-IN",
      "cnb": "cnb-Latn-MM",
      "cnc": "cnc-Latn-VN",
      "cng": "cng-Latn-CN",
      "cnh": "cnh-Latn-MM",
      "cni": "cni-Latn-PE",
      "cnk": "cnk-Latn-MM",
      "cnl": "cnl-Latn-MX",
      "cnp": "cnp-Hans-CN",
      "cnq": "cnq-Latn-CM",
      "cns": "cns-Latn-ID",
      "cnt": "cnt-Latn-MX",
      "cnw": "cnw-Latn-MM",
      "cnx": "cnx-Latn-GB",
      "co": "co-Latn-FR",
      "coa": "coa-Latn-AU",
      "cob": "cob-Latn-MX",
      "coc": "coc-Latn-MX",
      "cod": "cod-Latn-PE",
      "coe": "coe-Latn-CO",
      "cof": "cof-Latn-EC",
      "cog": "cog-Thai-TH",
      "coh": "coh-Latn-KE",
      "coj": "coj-Latn-MX",
      "cok": "cok-Latn-MX",
      "col": "col-Latn-US",
      "com": "com-Latn-US",
      "coo": "coo-Latn-CA",
      "cop": "cop-Copt-EG",
      "coq": "coq-Latn-US",
      "cot": "cot-Latn-PE",
      "cou": "cou-Latn-SN",
      "cox": "cox-Latn-PE",
      "coz": "coz-Latn-MX",
      "cpa": "cpa-Latn-MX",
      "cpb": "cpb-Latn-PE",
      "cpc": "cpc-Latn-PE",
      "cpg": "cpg-Grek-GR",
      "cpi": "cpi-Latn-NR",
      "cpn": "cpn-Latn-GH",
      "cpo": "cpo-Latn-BF",
      "cps": "cps-Latn-PH",
      "cpu": "cpu-Latn-PE",
      "cpx": "cpx-Latn-CN",
      "cpy": "cpy-Latn-PE",
      "cqd": "cqd-Latn-CN",
      "cr": "cr-Cans-CA",
      "cra": "cra-Latn-ET",
      "crb": "crb-Latn-VC",
      "crc": "crc-Latn-VU",
      "crd": "crd-Latn-US",
      "crf": "crf-Latn-CO",
      "crg": "crg-Latn-CA",
      "crh": "crh-Cyrl-UA",
      "cri": "cri-Latn-ST",
      "crj": "crj-Cans-CA",
      "crk": "crk-Cans-CA",
      "crl": "crl-Cans-CA",
      "crm": "crm-Cans-CA",
      "crn": "crn-Latn-MX",
      "cro": "cro-Latn-US",
      "crq": "crq-Latn-AR",
      "crs": "crs-Latn-SC",
      "crt": "crt-Latn-AR",
      "crv": "crv-Latn-IN",
      "crw": "crw-Latn-VN",
      "crx": "crx-Latn-CA",
      "cry": "cry-Latn-NG",
      "crz": "crz-Latn-US",
      "cs": "cs-Latn-CZ",
      "csa": "csa-Latn-MX",
      "csb": "csb-Latn-PL",
      "csh": "csh-Mymr-MM",
      "csj": "csj-Latn-MM",
      "csk": "csk-Latn-SN",
      "csm": "csm-Latn-US",
      "cso": "cso-Latn-MX",
      "csp": "csp-Hans-CN",
      "css": "css-Latn-US",
      "cst": "cst-Latn-US",
      "csv": "csv-Latn-MM",
      "csw": "csw-Cans-CA",
      "csy": "csy-Latn-MM",
      "csz": "csz-Latn-US",
      "cta": "cta-Latn-MX",
      "ctc": "ctc-Latn-US",
      "ctd": "ctd-Pauc-MM",
      "cte": "cte-Latn-MX",
      "ctg": "ctg-Beng-BD",
      "cth": "cth-Latn-MM",
      "ctl": "ctl-Latn-MX",
      "ctm": "ctm-Latn-US",
      "ctn": "ctn-Deva-NP",
      "cto": "cto-Latn-CO",
      "ctp": "ctp-Latn-MX",
      "cts": "cts-Latn-PH",
      "ctt": "ctt-Taml-IN",
      "ctu": "ctu-Latn-MX",
      "cty": "cty-Taml-IN",
      "ctz": "ctz-Latn-MX",
      "cu": "cu-Cyrl-RU",
      "cu-Glag": "cu-Glag-BG",
      "cua": "cua-Latn-VN",
      "cub": "cub-Latn-CO",
      "cuc": "cuc-Latn-MX",
      "cuh": "cuh-Latn-KE",
      "cui": "cui-Latn-CO",
      "cuj": "cuj-Latn-PE",
      "cuk": "cuk-Latn-PA",
      "cul": "cul-Latn-BR",
      "cuo": "cuo-Latn-VE",
      "cup": "cup-Latn-US",
      "cut": "cut-Latn-MX",
      "cuu": "cuu-Lana-CN",
      "cuv": "cuv-Latn-CM",
      "cux": "cux-Latn-MX",
      "cuy": "cuy-Latn-MX",
      "cv": "cv-Cyrl-RU",
      "cvg": "cvg-Latn-IN",
      "cvn": "cvn-Latn-MX",
      "cwa": "cwa-Latn-TZ",
      "cwb": "cwb-Latn-MZ",
      "cwe": "cwe-Latn-TZ",
      "cwg": "cwg-Latn-MY",
      "cwt": "cwt-Latn-SN",
      "cxh": "cxh-Latn-NG",
      "cy": "cy-Latn-GB",
      "cya": "cya-Latn-MX",
      "cyb": "cyb-Latn-BO",
      "cyo": "cyo-Latn-PH",
      "czh": "czh-Hans-CN",
      "czk": "czk-Hebr-CZ",
      "czn": "czn-Latn-MX",
      "czt": "czt-Latn-MM",
      "da": "da-Latn-DK",
      "daa": "daa-Latn-TD",
      "dac": "dac-Latn-PG",
      "dad": "dad-Latn-PG",
      "dae": "dae-Latn-CM",
      "dag": "dag-Latn-GH",
      "dah": "dah-Latn-PG",
      "dai": "dai-Latn-TD",
      "daj": "daj-Latn-SD",
      "dak": "dak-Latn-US",
      "dal": "dal-Latn-KE",
      "dam": "dam-Latn-NG",
      "dao": "dao-Latn-MM",
      "daq": "daq-Deva-IN",
      "dar": "dar-Cyrl-RU",
      "das": "das-Latn-CI",
      "dau": "dau-Latn-TD",
      "dav": "dav-Latn-KE",
      "daw": "daw-Latn-PH",
      "dax": "dax-Latn-AU",
      "daz": "daz-Latn-ID",
      "dba": "dba-Latn-ML",
      "dbb": "dbb-Latn-NG",
      "dbd": "dbd-Latn-NG",
      "dbe": "dbe-Latn-ID",
      "dbf": "dbf-Latn-ID",
      "dbg": "dbg-Latn-ML",
      "dbi": "dbi-Latn-NG",
      "dbj": "dbj-Latn-MY",
      "dbl": "dbl-Latn-AU",
      "dbm": "dbm-Latn-NG",
      "dbn": "dbn-Latn-ID",
      "dbo": "dbo-Latn-NG",
      "dbp": "dbp-Latn-NG",
      "dbq": "dbq-Latn-CM",
      "dbt": "dbt-Latn-ML",
      "dbu": "dbu-Latn-ML",
      "dbv": "dbv-Latn-NG",
      "dbw": "dbw-Latn-ML",
      "dby": "dby-Latn-PG",
      "dcc": "dcc-Arab-IN",
      "dcr": "dcr-Latn-VI",
      "dda": "dda-Latn-AU",
      "ddd": "ddd-Latn-SS",
      "dde": "dde-Latn-CG",
      "ddg": "ddg-Latn-TL",
      "ddi": "ddi-Latn-PG",
      "ddj": "ddj-Latn-AU",
      "ddn": "ddn-Latn-BJ",
      "ddo": "ddo-Cyrl-RU",
      "ddr": "ddr-Latn-AU",
      "dds": "dds-Latn-ML",
      "ddw": "ddw-Latn-ID",
      "de": "de-Latn-DE",
      "dec": "dec-Latn-SD",
      "ded": "ded-Latn-PG",
      "dee": "dee-Latn-LR",
      "def": "def-Arab-IR",
      "deg": "deg-Latn-NG",
      "deh": "deh-Arab-PK",
      "dei": "dei-Latn-ID",
      "dek": "dek-Latn-CM",
      "del": "del-Latn-US",
      "dem": "dem-Latn-ID",
      "den": "den-Latn-CA",
      "deq": "deq-Latn-CF",
      "der": "der-Beng-IN",
      "des": "des-Latn-BR",
      "dev": "dev-Latn-PG",
      "dez": "dez-Latn-CD",
      "dga": "dga-Latn-GH",
      "dgb": "dgb-Latn-ML",
      "dgc": "dgc-Latn-PH",
      "dgd": "dgd-Latn-BF",
      "dge": "dge-Latn-PG",
      "dgg": "dgg-Latn-PG",
      "dgh": "dgh-Latn-NG",
      "dgi": "dgi-Latn-BF",
      "dgk": "dgk-Latn-CF",
      "dgl": "dgl-Arab-SD",
      "dgn": "dgn-Latn-AU",
      "dgr": "dgr-Latn-CA",
      "dgs": "dgs-Latn-BF",
      "dgt": "dgt-Latn-AU",
      "dgw": "dgw-Latn-AU",
      "dgx": "dgx-Latn-PG",
      "dgz": "dgz-Latn-PG",
      "dhg": "dhg-Latn-AU",
      "dhi": "dhi-Deva-NP",
      "dhl": "dhl-Latn-AU",
      "dhm": "dhm-Latn-AO",
      "dhn": "dhn-Gujr-IN",
      "dho": "dho-Deva-IN",
      "dhr": "dhr-Latn-AU",
      "dhs": "dhs-Latn-TZ",
      "dhu": "dhu-Latn-AU",
      "dhv": "dhv-Latn-NC",
      "dhw": "dhw-Deva-NP",
      "dhx": "dhx-Latn-AU",
      "dia": "dia-Latn-PG",
      "dib": "dib-Latn-SS",
      "dic": "dic-Latn-CI",
      "did": "did-Latn-SS",
      "dif": "dif-Latn-AU",
      "dig": "dig-Latn-KE",
      "dih": "dih-Latn-MX",
      "dii": "dii-Latn-CM",
      "dij": "dij-Latn-ID",
      "dil": "dil-Latn-SD",
      "din": "din-Latn-SS",
      "dio": "dio-Latn-NG",
      "dip": "dip-Latn-SS",
      "dir": "dir-Latn-NG",
      "dis": "dis-Latn-IN",
      "diu": "diu-Latn-NA",
      "diw": "diw-Latn-SS",
      "dix": "dix-Latn-VU",
      "diy": "diy-Latn-ID",
      "diz": "diz-Latn-CD",
      "dja": "dja-Latn-AU",
      "djb": "djb-Latn-AU",
      "djc": "djc-Latn-TD",
      "djd": "djd-Latn-AU",
      "dje": "dje-Latn-NE",
      "djf": "djf-Latn-AU",
      "dji": "dji-Latn-AU",
      "djj": "djj-Latn-AU",
      "djk": "djk-Latn-SR",
      "djm": "djm-Latn-ML",
      "djn": "djn-Latn-AU",
      "djo": "djo-Latn-ID",
      "djr": "djr-Latn-AU",
      "dju": "dju-Latn-PG",
      "djw": "djw-Latn-AU",
      "dka": "dka-Tibt-BT",
      "dkg": "dkg-Latn-NG",
      "dkk": "dkk-Latn-ID",
      "dkr": "dkr-Latn-MY",
      "dks": "dks-Latn-SS",
      "dkx": "dkx-Latn-CM",
      "dlg": "dlg-Cyrl-RU",
      "dlm": "dlm-Latn-HR",
      "dln": "dln-Latn-IN",
      "dma": "dma-Latn-GA",
      "dmb": "dmb-Latn-ML",
      "dmc": "dmc-Latn-PG",
      "dmd": "dmd-Latn-AU",
      "dme": "dme-Latn-CM",
      "dmf": "dmf-Medf-NG",
      "dmg": "dmg-Latn-MY",
      "dmk": "dmk-Arab-PK",
      "dml": "dml-Arab-PK",
      "dmm": "dmm-Latn-CM",
      "dmo": "dmo-Latn-CM",
      "dmr": "dmr-Latn-ID",
      "dms": "dms-Latn-ID",
      "dmu": "dmu-Latn-ID",
      "dmv": "dmv-Latn-MY",
      "dmw": "dmw-Latn-AU",
      "dmx": "dmx-Latn-MZ",
      "dmy": "dmy-Latn-ID",
      "dna": "dna-Latn-ID",
      "dnd": "dnd-Latn-PG",
      "dne": "dne-Latn-TZ",
      "dng": "dng-Cyrl-KG",
      "dni": "dni-Latn-ID",
      "dnj": "dnj-Latn-CI",
      "dnk": "dnk-Latn-ID",
      "dnn": "dnn-Latn-BF",
      "dno": "dno-Latn-CD",
      "dnr": "dnr-Latn-PG",
      "dnt": "dnt-Latn-ID",
      "dnu": "dnu-Mymr-MM",
      "dnv": "dnv-Mymr-MM",
      "dnw": "dnw-Latn-ID",
      "dny": "dny-Latn-BR",
      "doa": "doa-Latn-PG",
      "dob": "dob-Latn-PG",
      "doc": "doc-Latn-CN",
      "doe": "doe-Latn-TZ",
      "dof": "dof-Latn-PG",
      "doh": "doh-Latn-NG",
      "doi": "doi-Deva-IN",
      "dok": "dok-Latn-ID",
      "dol": "dol-Latn-PG",
      "don": "don-Latn-PG",
      "doo": "doo-Latn-CD",
      "dop": "dop-Latn-BJ",
      "dor": "dor-Latn-SB",
      "dos": "dos-Latn-BF",
      "dot": "dot-Latn-NG",
      "dov": "dov-Latn-ZW",
      "dow": "dow-Latn-CM",
      "dox": "dox-Ethi-ET",
      "doy": "doy-Latn-GH",
      "dpp": "dpp-Latn-MY",
      "drc": "drc-Latn-PT",
      "dre": "dre-Tibt-NP",
      "drg": "drg-Latn-MY",
      "dri": "dri-Latn-NG",
      "drl": "drl-Latn-AU",
      "drn": "drn-Latn-ID",
      "dro": "dro-Latn-MY",
      "drq": "drq-Deva-NP",
      "drs": "drs-Ethi-ET",
      "drt": "drt-Latn-NL",
      "dru": "dru-Latn-TW",
      "dry": "dry-Deva-NP",
      "dsb": "dsb-Latn-DE",
      "dsh": "dsh-Latn-KE",
      "dsi": "dsi-Latn-TD",
      "dsk": "dsk-Latn-NG",
      "dsn": "dsn-Latn-ID",
      "dso": "dso-Orya-IN",
      "dsq": "dsq-Latn-ML",
      "dta": "dta-Latn-CN",
      "dtb": "dtb-Latn-MY",
      "dtd": "dtd-Latn-CA",
      "dth": "dth-Latn-AU",
      "dti": "dti-Latn-ML",
      "dtk": "dtk-Latn-ML",
      "dtm": "dtm-Latn-ML",
      "dto": "dto-Latn-ML",
      "dtp": "dtp-Latn-MY",
      "dtr": "dtr-Latn-MY",
      "dts": "dts-Latn-ML",
      "dtt": "dtt-Latn-ML",
      "dtu": "dtu-Latn-ML",
      "dty": "dty-Deva-NP",
      "dua": "dua-Latn-CM",
      "dub": "dub-Gujr-IN",
      "duc": "duc-Latn-PG",
      "due": "due-Latn-PH",
      "duf": "duf-Latn-NC",
      "dug": "dug-Latn-KE",
      "duh": "duh-Deva-IN",
      "dui": "dui-Latn-PG",
      "duk": "duk-Latn-PG",
      "dul": "dul-Latn-PH",
      "dum": "dum-Latn-NL",
      "dun": "dun-Latn-ID",
      "duo": "duo-Latn-PH",
      "dup": "dup-Latn-ID",
      "duq": "duq-Latn-ID",
      "dur": "dur-Latn-CM",
      "dus": "dus-Deva-NP",
      "duu": "duu-Latn-CN",
      "duv": "duv-Latn-ID",
      "duw": "duw-Latn-ID",
      "dux": "dux-Latn-ML",
      "duy": "duy-Latn-PH",
      "duz": "duz-Latn-CM",
      "dv": "dv-Thaa-MV",
      "dva": "dva-Latn-PG",
      "dwa": "dwa-Latn-NG",
      "dwk": "dwk-Orya-IN",
      "dwr": "dwr-Latn-ET",
      "dws": "dws-Latn-001",
      "dwu": "dwu-Latn-AU",
      "dww": "dww-Latn-PG",
      "dwy": "dwy-Latn-AU",
      "dwz": "dwz-Deva-NP",
      "dya": "dya-Latn-BF",
      "dyb": "dyb-Latn-AU",
      "dyd": "dyd-Latn-AU",
      "dyg": "dyg-Latn-PH",
      "dyi": "dyi-Latn-CI",
      "dym": "dym-Latn-ML",
      "dyn": "dyn-Latn-AU",
      "dyo": "dyo-Latn-SN",
      "dyr": "dyr-Latn-NG",
      "dyu": "dyu-Latn-BF",
      "dyy": "dyy-Latn-AU",
      "dz": "dz-Tibt-BT",
      "dza": "dza-Latn-NG",
      "dzd": "dzd-Latn-NG",
      "dze": "dze-Latn-AU",
      "dzg": "dzg-Latn-TD",
      "dzl": "dzl-Tibt-BT",
      "dzn": "dzn-Latn-CD",
      "eaa": "eaa-Latn-AU",
      "ebc": "ebc-Latn-ID",
      "ebg": "ebg-Latn-NG",
      "ebk": "ebk-Latn-PH",
      "ebo": "ebo-Latn-CG",
      "ebr": "ebr-Latn-CI",
      "ebu": "ebu-Latn-KE",
      "ecr": "ecr-Grek-GR",
      "ecy": "ecy-Cprt-CY",
      "ee": "ee-Latn-GH",
      "efa": "efa-Latn-NG",
      "efe": "efe-Latn-CD",
      "efi": "efi-Latn-NG",
      "ega": "ega-Latn-CI",
      "egl": "egl-Latn-IT",
      "egm": "egm-Latn-TZ",
      "ego": "ego-Latn-NG",
      "egy": "egy-Egyp-EG",
      "ehu": "ehu-Latn-NG",
      "eip": "eip-Latn-ID",
      "eit": "eit-Latn-PG",
      "eiv": "eiv-Latn-PG",
      "eja": "eja-Latn-GW",
      "eka": "eka-Latn-NG",
      "eke": "eke-Latn-NG",
      "ekg": "ekg-Latn-ID",
      "eki": "eki-Latn-NG",
      "ekl": "ekl-Latn-BD",
      "ekm": "ekm-Latn-CM",
      "eko": "eko-Latn-MZ",
      "ekp": "ekp-Latn-NG",
      "ekr": "ekr-Latn-NG",
      "eky": "eky-Kali-MM",
      "el": "el-Grek-GR",
      "ele": "ele-Latn-PG",
      "elk": "elk-Latn-PG",
      "elm": "elm-Latn-NG",
      "elo": "elo-Latn-KE",
      "elu": "elu-Latn-PG",
      "ema": "ema-Latn-NG",
      "emb": "emb-Latn-ID",
      "eme": "eme-Latn-GF",
      "emg": "emg-Deva-NP",
      "emi": "emi-Latn-PG",
      "emm": "emm-Latn-MX",
      "emn": "emn-Latn-CM",
      "emp": "emp-Latn-PA",
      "ems": "ems-Latn-US",
      "emu": "emu-Deva-IN",
      "emw": "emw-Latn-ID",
      "emx": "emx-Latn-FR",
      "emz": "emz-Latn-CM",
      "en": "en-Latn-US",
      "en-Shaw": "en-Shaw-GB",
      "ena": "ena-Latn-PG",
      "enb": "enb-Latn-KE",
      "enc": "enc-Latn-VN",
      "end": "end-Latn-ID",
      "enf": "enf-Cyrl-RU",
      "enh": "enh-Cyrl-RU",
      "enl": "enl-Latn-PY",
      "enm": "enm-Latn-GB",
      "enn": "enn-Latn-NG",
      "eno": "eno-Latn-ID",
      "enq": "enq-Latn-PG",
      "enr": "enr-Latn-ID",
      "env": "env-Latn-NG",
      "enw": "enw-Latn-NG",
      "enx": "enx-Latn-PY",
      "eo": "eo-Latn-001",
      "eot": "eot-Latn-CI",
      "epi": "epi-Latn-NG",
      "era": "era-Taml-IN",
      "erg": "erg-Latn-VU",
      "erh": "erh-Latn-NG",
      "eri": "eri-Latn-PG",
      "erk": "erk-Latn-VU",
      "err": "err-Latn-AU",
      "ers": "ers-Latn-CN",
      "ert": "ert-Latn-ID",
      "erw": "erw-Latn-ID",
      "es": "es-Latn-ES",
      "ese": "ese-Latn-BO",
      "esg": "esg-Gonm-IN",
      "esh": "esh-Arab-IR",
      "esi": "esi-Latn-US",
      "esm": "esm-Latn-CI",
      "ess": "ess-Latn-US",
      "esu": "esu-Latn-US",
      "esy": "esy-Latn-PH",
      "et": "et-Latn-EE",
      "etb": "etb-Latn-NG",
      "etn": "etn-Latn-VU",
      "eto": "eto-Latn-CM",
      "etr": "etr-Latn-PG",
      "ets": "ets-Latn-NG",
      "ett": "ett-Ital-IT",
      "etu": "etu-Latn-NG",
      "etx": "etx-Latn-NG",
      "etz": "etz-Latn-ID",
      "eu": "eu-Latn-ES",
      "eud": "eud-Latn-MX",
      "eve": "eve-Cyrl-RU",
      "evh": "evh-Latn-NG",
      "evn": "evn-Cyrl-RU",
      "ewo": "ewo-Latn-CM",
      "ext": "ext-Latn-ES",
      "eya": "eya-Latn-US",
      "eyo": "eyo-Latn-KE",
      "eza": "eza-Latn-NG",
      "eze": "eze-Latn-NG",
      "fa": "fa-Arab-IR",
      "faa": "faa-Latn-PG",
      "fab": "fab-Latn-GQ",
      "fad": "fad-Latn-PG",
      "faf": "faf-Latn-SB",
      "fag": "fag-Latn-PG",
      "fah": "fah-Latn-NG",
      "fai": "fai-Latn-PG",
      "faj": "faj-Latn-PG",
      "fak": "fak-Latn-CM",
      "fal": "fal-Latn-CM",
      "fam": "fam-Latn-NG",
      "fan": "fan-Latn-GQ",
      "fap": "fap-Latn-SN",
      "far": "far-Latn-SB",
      "fau": "fau-Latn-ID",
      "fax": "fax-Latn-ES",
      "fay": "fay-Arab-IR",
      "faz": "faz-Arab-IR",
      "fbl": "fbl-Latn-PH",
      "fer": "fer-Latn-SS",
      "ff": "ff-Latn-SN",
      "ff-Adlm": "ff-Adlm-GN",
      "ffi": "ffi-Latn-PG",
      "ffm": "ffm-Latn-ML",
      "fgr": "fgr-Latn-TD",
      "fi": "fi-Latn-FI",
      "fia": "fia-Arab-SD",
      "fie": "fie-Latn-NG",
      "fif": "fif-Latn-SA",
      "fil": "fil-Latn-PH",
      "fip": "fip-Latn-TZ",
      "fir": "fir-Latn-NG",
      "fit": "fit-Latn-SE",
      "fiw": "fiw-Latn-PG",
      "fj": "fj-Latn-FJ",
      "fkk": "fkk-Latn-NG",
      "fkv": "fkv-Latn-NO",
      "fla": "fla-Latn-US",
      "flh": "flh-Latn-ID",
      "fli": "fli-Latn-NG",
      "fll": "fll-Latn-CM",
      "fln": "fln-Latn-AU",
      "flr": "flr-Latn-CD",
      "fly": "fly-Latn-ZA",
      "fmp": "fmp-Latn-CM",
      "fmu": "fmu-Deva-IN",
      "fnb": "fnb-Latn-VU",
      "fng": "fng-Latn-ZA",
      "fni": "fni-Latn-TD",
      "fo": "fo-Latn-FO",
      "fod": "fod-Latn-BJ",
      "foi": "foi-Latn-PG",
      "fom": "fom-Latn-CD",
      "fon": "fon-Latn-BJ",
      "for": "for-Latn-PG",
      "fos": "fos-Latn-TW",
      "fpe": "fpe-Latn-GQ",
      "fqs": "fqs-Latn-PG",
      "fr": "fr-Latn-FR",
      "frc": "frc-Latn-US",
      "frd": "frd-Latn-ID",
      "frk": "frk-Latn-DE",
      "frm": "frm-Latn-FR",
      "fro": "fro-Latn-FR",
      "frp": "frp-Latn-FR",
      "frq": "frq-Latn-PG",
      "frr": "frr-Latn-DE",
      "frs": "frs-Latn-DE",
      "frt": "frt-Latn-VU",
      "fub": "fub-Arab-CM",
      "fud": "fud-Latn-WF",
      "fue": "fue-Latn-BJ",
      "fuf": "fuf-Latn-GN",
      "fuh": "fuh-Latn-NE",
      "fui": "fui-Latn-TD",
      "fum": "fum-Latn-NG",
      "fun": "fun-Latn-BR",
      "fuq": "fuq-Latn-NE",
      "fur": "fur-Latn-IT",
      "fut": "fut-Latn-VU",
      "fuu": "fuu-Latn-CD",
      "fuv": "fuv-Latn-NG",
      "fuy": "fuy-Latn-PG",
      "fvr": "fvr-Latn-SD",
      "fwa": "fwa-Latn-NC",
      "fwe": "fwe-Latn-NA",
      "fy": "fy-Latn-NL",
      "ga": "ga-Latn-IE",
      "gaa": "gaa-Latn-GH",
      "gab": "gab-Latn-TD",
      "gac": "gac-Latn-IN",
      "gad": "gad-Latn-PH",
      "gae": "gae-Latn-VE",
      "gaf": "gaf-Latn-PG",
      "gag": "gag-Latn-MD",
      "gah": "gah-Latn-PG",
      "gai": "gai-Latn-PG",
      "gaj": "gaj-Latn-PG",
      "gak": "gak-Latn-ID",
      "gal": "gal-Latn-TL",
      "gam": "gam-Latn-PG",
      "gan": "gan-Hans-CN",
      "gao": "gao-Latn-PG",
      "gap": "gap-Latn-PG",
      "gaq": "gaq-Orya-IN",
      "gar": "gar-Latn-PG",
      "gas": "gas-Gujr-IN",
      "gat": "gat-Latn-PG",
      "gau": "gau-Telu-IN",
      "gaw": "gaw-Latn-PG",
      "gax": "gax-Latn-ET",
      "gay": "gay-Latn-ID",
      "gba": "gba-Latn-CF",
      "gbb": "gbb-Latn-AU",
      "gbd": "gbd-Latn-AU",
      "gbe": "gbe-Latn-PG",
      "gbf": "gbf-Latn-PG",
      "gbg": "gbg-Latn-CF",
      "gbh": "gbh-Latn-BJ",
      "gbi": "gbi-Latn-ID",
      "gbj": "gbj-Orya-IN",
      "gbk": "gbk-Deva-IN",
      "gbl": "gbl-Gujr-IN",
      "gbm": "gbm-Deva-IN",
      "gbn": "gbn-Latn-SS",
      "gbp": "gbp-Latn-CF",
      "gbq": "gbq-Latn-CF",
      "gbr": "gbr-Latn-NG",
      "gbs": "gbs-Latn-BJ",
      "gbu": "gbu-Latn-AU",
      "gbv": "gbv-Latn-CF",
      "gbw": "gbw-Latn-AU",
      "gbx": "gbx-Latn-BJ",
      "gby": "gby-Latn-NG",
      "gbz": "gbz-Arab-IR",
      "gcc": "gcc-Latn-PG",
      "gcd": "gcd-Latn-AU",
      "gcf": "gcf-Latn-GP",
      "gcl": "gcl-Latn-GD",
      "gcn": "gcn-Latn-PG",
      "gcr": "gcr-Latn-GF",
      "gct": "gct-Latn-VE",
      "gd": "gd-Latn-GB",
      "gdb": "gdb-Orya-IN",
      "gdc": "gdc-Latn-AU",
      "gdd": "gdd-Latn-PG",
      "gde": "gde-Latn-NG",
      "gdf": "gdf-Latn-NG",
      "gdg": "gdg-Latn-PH",
      "gdh": "gdh-Latn-AU",
      "gdi": "gdi-Latn-CF",
      "gdj": "gdj-Latn-AU",
      "gdk": "gdk-Latn-TD",
      "gdl": "gdl-Latn-ET",
      "gdm": "gdm-Latn-TD",
      "gdn": "gdn-Latn-PG",
      "gdo": "gdo-Cyrl-RU",
      "gdq": "gdq-Latn-YE",
      "gdr": "gdr-Latn-PG",
      "gdt": "gdt-Latn-AU",
      "gdu": "gdu-Latn-NG",
      "gdx": "gdx-Deva-IN",
      "gea": "gea-Latn-NG",
      "geb": "geb-Latn-PG",
      "gec": "gec-Latn-LR",
      "ged": "ged-Latn-NG",
      "gef": "gef-Latn-ID",
      "geg": "geg-Latn-NG",
      "geh": "geh-Latn-CA",
      "gei": "gei-Latn-ID",
      "gej": "gej-Latn-TG",
      "gek": "gek-Latn-NG",
      "gel": "gel-Latn-NG",
      "geq": "geq-Latn-CF",
      "ges": "ges-Latn-ID",
      "gev": "gev-Latn-GA",
      "gew": "gew-Latn-NG",
      "gex": "gex-Latn-SO",
      "gey": "gey-Latn-CD",
      "gez": "gez-Ethi-ET",
      "gfk": "gfk-Latn-PG",
      "gga": "gga-Latn-SB",
      "ggb": "ggb-Latn-LR",
      "ggd": "ggd-Latn-AU",
      "gge": "gge-Latn-AU",
      "ggg": "ggg-Arab-PK",
      "ggk": "ggk-Latn-AU",
      "ggl": "ggl-Latn-PG",
      "ggt": "ggt-Latn-PG",
      "ggu": "ggu-Latn-CI",
      "ggw": "ggw-Latn-PG",
      "gha": "gha-Arab-LY",
      "ghc": "ghc-Latn-GB",
      "ghe": "ghe-Deva-NP",
      "ghk": "ghk-Latn-MM",
      "ghn": "ghn-Latn-SB",
      "gho": "gho-Tfng-MA",
      "ghr": "ghr-Arab-PK",
      "ghs": "ghs-Latn-PG",
      "ght": "ght-Tibt-NP",
      "gia": "gia-Latn-AU",
      "gib": "gib-Latn-NG",
      "gic": "gic-Latn-ZA",
      "gid": "gid-Latn-CM",
      "gie": "gie-Latn-CI",
      "gig": "gig-Arab-PK",
      "gih": "gih-Latn-AU",
      "gil": "gil-Latn-KI",
      "gim": "gim-Latn-PG",
      "gin": "gin-Cyrl-RU",
      "gip": "gip-Latn-PG",
      "giq": "giq-Latn-VN",
      "gir": "gir-Latn-VN",
      "gis": "gis-Latn-CM",
      "git": "git-Latn-CA",
      "gix": "gix-Latn-CD",
      "giy": "giy-Latn-AU",
      "giz": "giz-Latn-CM",
      "gjk": "gjk-Arab-PK",
      "gjm": "gjm-Latn-AU",
      "gjn": "gjn-Latn-GH",
      "gjr": "gjr-Latn-AU",
      "gju": "gju-Arab-PK",
      "gka": "gka-Latn-PG",
      "gkd": "gkd-Latn-PG",
      "gke": "gke-Latn-CM",
      "gkn": "gkn-Latn-NG",
      "gko": "gko-Latn-AU",
      "gkp": "gkp-Latn-GN",
      "gku": "gku-Latn-ZA",
      "gl": "gl-Latn-ES",
      "glb": "glb-Latn-NG",
      "glc": "glc-Latn-TD",
      "gld": "gld-Cyrl-RU",
      "glh": "glh-Arab-AF",
      "glj": "glj-Latn-TD",
      "glk": "glk-Arab-IR",
      "gll": "gll-Latn-AU",
      "glo": "glo-Latn-NG",
      "glr": "glr-Latn-LR",
      "glu": "glu-Latn-TD",
      "glw": "glw-Latn-NG",
      "gma": "gma-Latn-AU",
      "gmb": "gmb-Latn-SB",
      "gmd": "gmd-Latn-NG",
      "gmg": "gmg-Latn-PG",
      "gmh": "gmh-Latn-DE",
      "gml": "gml-Latf-DE",
      "gmm": "gmm-Latn-CM",
      "gmn": "gmn-Latn-CM",
      "gmr": "gmr-Latn-AU",
      "gmu": "gmu-Latn-PG",
      "gmv": "gmv-Ethi-ET",
      "gmx": "gmx-Latn-TZ",
      "gmy": "gmy-Linb-GR",
      "gmz": "gmz-Latn-NG",
      "gn": "gn-Latn-PY",
      "gna": "gna-Latn-BF",
      "gnb": "gnb-Latn-IN",
      "gnc": "gnc-Latn-ES",
      "gnd": "gnd-Latn-CM",
      "gne": "gne-Latn-NG",
      "gng": "gng-Latn-TG",
      "gnh": "gnh-Latn-NG",
      "gni": "gni-Latn-AU",
      "gnj": "gnj-Latn-CI",
      "gnk": "gnk-Latn-BW",
      "gnl": "gnl-Latn-AU",
      "gnm": "gnm-Latn-PG",
      "gnn": "gnn-Latn-AU",
      "gnq": "gnq-Latn-MY",
      "gnr": "gnr-Latn-AU",
      "gnt": "gnt-Latn-PG",
      "gnu": "gnu-Latn-PG",
      "gnw": "gnw-Latn-BO",
      "gnz": "gnz-Latn-CF",
      "goa": "goa-Latn-CI",
      "gob": "gob-Latn-CO",
      "goc": "goc-Latn-PG",
      "god": "god-Latn-CI",
      "goe": "goe-Tibt-BT",
      "gof": "gof-Ethi-ET",
      "gog": "gog-Latn-TZ",
      "goh": "goh-Latn-DE",
      "goi": "goi-Latn-PG",
      "goj": "goj-Deva-IN",
      "gok": "gok-Deva-IN",
      "gol": "gol-Latn-LR",
      "gon": "gon-Deva-IN",
      "goo": "goo-Latn-FJ",
      "gop": "gop-Latn-ID",
      "goq": "goq-Latn-ID",
      "gor": "gor-Latn-ID",
      "gos": "gos-Latn-NL",
      "got": "got-Goth-UA",
      "gou": "gou-Latn-CM",
      "gov": "gov-Latn-CI",
      "gow": "gow-Latn-TZ",
      "gox": "gox-Latn-CD",
      "goy": "goy-Latn-TD",
      "gpa": "gpa-Latn-NG",
      "gpe": "gpe-Latn-GH",
      "gpn": "gpn-Latn-PG",
      "gqa": "gqa-Latn-NG",
      "gqn": "gqn-Latn-BR",
      "gqr": "gqr-Latn-TD",
      "gra": "gra-Deva-IN",
      "grb": "grb-Latn-LR",
      "grc": "grc-Cprt-CY",
      "grc-Linb": "grc-Linb-GR",
      "grd": "grd-Latn-NG",
      "grg": "grg-Latn-PG",
      "grh": "grh-Latn-NG",
      "gri": "gri-Latn-SB",
      "grj": "grj-Latn-LR",
      "grm": "grm-Latn-MY",
      "grq": "grq-Latn-PG",
      "grs": "grs-Latn-ID",
      "grt": "grt-Beng-IN",
      "gru": "gru-Ethi-ET",
      "grv": "grv-Latn-LR",
      "grw": "grw-Latn-PG",
      "grx": "grx-Latn-PG",
      "gry": "gry-Latn-LR",
      "grz": "grz-Latn-PG",
      "gsl": "gsl-Latn-SN",
      "gsn": "gsn-Latn-PG",
      "gso": "gso-Latn-CF",
      "gsp": "gsp-Latn-PG",
      "gsw": "gsw-Latn-CH",
      "gta": "gta-Latn-BR",
      "gtu": "gtu-Latn-AU",
      "gu": "gu-Gujr-IN",
      "gua": "gua-Latn-NG",
      "gub": "gub-Latn-BR",
      "guc": "guc-Latn-CO",
      "gud": "gud-Latn-CI",
      "gue": "gue-Latn-AU",
      "guf": "guf-Latn-AU",
      "guh": "guh-Latn-CO",
      "gui": "gui-Latn-BO",
      "guk": "guk-Latn-ET",
      "gul": "gul-Latn-US",
      "gum": "gum-Latn-CO",
      "gun": "gun-Latn-BR",
      "guo": "guo-Latn-CO",
      "gup": "gup-Latn-AU",
      "guq": "guq-Latn-PY",
      "gur": "gur-Latn-GH",
      "gut": "gut-Latn-CR",
      "guu": "guu-Latn-VE",
      "guw": "guw-Latn-BJ",
      "gux": "gux-Latn-BF",
      "guz": "guz-Latn-KE",
      "gv": "gv-Latn-IM",
      "gva": "gva-Latn-PY",
      "gvc": "gvc-Latn-BR",
      "gve": "gve-Latn-PG",
      "gvf": "gvf-Latn-PG",
      "gvj": "gvj-Latn-BR",
      "gvl": "gvl-Latn-TD",
      "gvm": "gvm-Latn-NG",
      "gvn": "gvn-Latn-AU",
      "gvo": "gvo-Latn-BR",
      "gvp": "gvp-Latn-BR",
      "gvr": "gvr-Deva-NP",
      "gvs": "gvs-Latn-PG",
      "gvy": "gvy-Latn-AU",
      "gwa": "gwa-Latn-CI",
      "gwb": "gwb-Latn-NG",
      "gwc": "gwc-Arab-PK",
      "gwd": "gwd-Latn-ET",
      "gwe": "gwe-Latn-TZ",
      "gwf": "gwf-Arab-PK",
      "gwg": "gwg-Latn-NG",
      "gwi": "gwi-Latn-CA",
      "gwj": "gwj-Latn-BW",
      "gwm": "gwm-Latn-AU",
      "gwn": "gwn-Latn-NG",
      "gwr": "gwr-Latn-UG",
      "gwt": "gwt-Arab-AF",
      "gwu": "gwu-Latn-AU",
      "gww": "gww-Latn-AU",
      "gwx": "gwx-Latn-GH",
      "gxx": "gxx-Latn-CI",
      "gyb": "gyb-Latn-PG",
      "gyd": "gyd-Latn-AU",
      "gye": "gye-Latn-NG",
      "gyf": "gyf-Latn-AU",
      "gyg": "gyg-Latn-CF",
      "gyi": "gyi-Latn-CM",
      "gyl": "gyl-Latn-ET",
      "gym": "gym-Latn-PA",
      "gyn": "gyn-Latn-GY",
      "gyo": "gyo-Deva-NP",
      "gyr": "gyr-Latn-BO",
      "gyy": "gyy-Latn-AU",
      "gyz": "gyz-Latn-NG",
      "gza": "gza-Latn-SD",
      "gzi": "gzi-Arab-IR",
      "gzn": "gzn-Latn-ID",
      "ha": "ha-Latn-NG",
      "ha-CM": "ha-Arab-CM",
      "ha-SD": "ha-Arab-SD",
      "haa": "haa-Latn-US",
      "hac": "hac-Arab-IR",
      "had": "had-Latn-ID",
      "hae": "hae-Latn-ET",
      "hag": "hag-Latn-GH",
      "hah": "hah-Latn-PG",
      "hai": "hai-Latn-CA",
      "haj": "haj-Latn-IN",
      "hak": "hak-Hans-CN",
      "hal": "hal-Latn-VN",
      "ham": "ham-Latn-PG",
      "han": "han-Latn-TZ",
      "hao": "hao-Latn-PG",
      "hap": "hap-Latn-ID",
      "haq": "haq-Latn-TZ",
      "har": "har-Ethi-ET",
      "has": "has-Latn-CA",
      "hav": "hav-Latn-CD",
      "haw": "haw-Latn-US",
      "hax": "hax-Latn-CA",
      "hay": "hay-Latn-TZ",
      "haz": "haz-Arab-AF",
      "hba": "hba-Latn-CD",
      "hbb": "hbb-Latn-NG",
      "hbn": "hbn-Latn-SD",
      "hbo": "hbo-Hebr-IL",
      "hbu": "hbu-Latn-TL",
      "hch": "hch-Latn-MX",
      "hdy": "hdy-Ethi-ET",
      "he": "he-Hebr-IL",
      "hed": "hed-Latn-TD",
      "heg": "heg-Latn-ID",
      "heh": "heh-Latn-TZ",
      "hei": "hei-Latn-CA",
      "hem": "hem-Latn-CD",
      "hgm": "hgm-Latn-NA",
      "hgw": "hgw-Latn-PG",
      "hhi": "hhi-Latn-PG",
      "hhr": "hhr-Latn-SN",
      "hhy": "hhy-Latn-PG",
      "hi": "hi-Deva-IN",
      "hia": "hia-Latn-NG",
      "hib": "hib-Latn-PE",
      "hid": "hid-Latn-US",
      "hif": "hif-Deva-FJ",
      "hig": "hig-Latn-NG",
      "hih": "hih-Latn-PG",
      "hii": "hii-Takr-IN",
      "hij": "hij-Latn-CM",
      "hik": "hik-Latn-ID",
      "hil": "hil-Latn-PH",
      "hio": "hio-Latn-BW",
      "hir": "hir-Latn-BR",
      "hit": "hit-Xsux-TR",
      "hiw": "hiw-Latn-VU",
      "hix": "hix-Latn-BR",
      "hji": "hji-Latn-ID",
      "hka": "hka-Latn-TZ",
      "hke": "hke-Latn-CD",
      "hkh": "hkh-Arab-IN",
      "hkk": "hkk-Latn-PG",
      "hla": "hla-Latn-PG",
      "hlb": "hlb-Deva-IN",
      "hld": "hld-Latn-VN",
      "hlt": "hlt-Latn-MM",
      "hlu": "hlu-Hluw-TR",
      "hma": "hma-Latn-CN",
      "hmb": "hmb-Latn-ML",
      "hmd": "hmd-Plrd-CN",
      "hmf": "hmf-Latn-VN",
      "hmj": "hmj-Bopo-CN",
      "hmm": "hmm-Latn-CN",
      "hmn": "hmn-Latn-CN",
      "hmp": "hmp-Latn-CN",
      "hmq": "hmq-Bopo-CN",
      "hmr": "hmr-Latn-IN",
      "hms": "hms-Latn-CN",
      "hmt": "hmt-Latn-PG",
      "hmu": "hmu-Latn-ID",
      "hmv": "hmv-Latn-VN",
      "hmw": "hmw-Latn-CN",
      "hmy": "hmy-Latn-CN",
      "hmz": "hmz-Latn-CN",
      "hna": "hna-Latn-CM",
      "hnd": "hnd-Arab-PK",
      "hne": "hne-Deva-IN",
      "hng": "hng-Latn-AO",
      "hnh": "hnh-Latn-BW",
      "hni": "hni-Latn-CN",
      "hnj": "hnj-Hmnp-US",
      "hnj-Hmng": "hnj-Hmng-LA",
      "hnn": "hnn-Latn-PH",
      "hno": "hno-Arab-PK",
      "hns": "hns-Latn-SR",
      "ho": "ho-Latn-PG",
      "hoa": "hoa-Latn-SB",
      "hob": "hob-Latn-PG",
      "hoc": "hoc-Deva-IN",
      "hod": "hod-Latn-NG",
      "hoe": "hoe-Latn-NG",
      "hoh": "hoh-Arab-OM",
      "hoi": "hoi-Latn-US",
      "hoj": "hoj-Deva-IN",
      "hol": "hol-Latn-AO",
      "hom": "hom-Latn-SS",
      "hoo": "hoo-Latn-CD",
      "hop": "hop-Latn-US",
      "hor": "hor-Latn-TD",
      "hot": "hot-Latn-PG",
      "hov": "hov-Latn-ID",
      "how": "how-Hani-CN",
      "hoy": "hoy-Deva-IN",
      "hpo": "hpo-Mymr-MM",
      "hr": "hr-Latn-HR",
      "hra": "hra-Latn-IN",
      "hrc": "hrc-Latn-PG",
      "hre": "hre-Latn-VN",
      "hrk": "hrk-Latn-ID",
      "hrm": "hrm-Latn-CN",
      "hro": "hro-Latn-VN",
      "hrp": "hrp-Latn-AU",
      "hrt": "hrt-Syrc-TR",
      "hru": "hru-Latn-IN",
      "hrw": "hrw-Latn-PG",
      "hrx": "hrx-Latn-BR",
      "hrz": "hrz-Arab-IR",
      "hsb": "hsb-Latn-DE",
      "hsn": "hsn-Hans-CN",
      "hss": "hss-Arab-OM",
      "ht": "ht-Latn-HT",
      "hti": "hti-Latn-ID",
      "hto": "hto-Latn-CO",
      "hts": "hts-Latn-TZ",
      "htu": "htu-Latn-ID",
      "htx": "htx-Xsux-TR",
      "hu": "hu-Latn-HU",
      "hub": "hub-Latn-PE",
      "huc": "huc-Latn-BW",
      "hud": "hud-Latn-ID",
      "hue": "hue-Latn-MX",
      "huf": "huf-Latn-PG",
      "hug": "hug-Latn-PE",
      "huh": "huh-Latn-CL",
      "hui": "hui-Latn-PG",
      "huk": "huk-Latn-ID",
      "hul": "hul-Latn-PG",
      "hum": "hum-Latn-CD",
      "hup": "hup-Latn-US",
      "hur": "hur-Latn-CA",
      "hus": "hus-Latn-MX",
      "hut": "hut-Deva-NP",
      "huu": "huu-Latn-PE",
      "huv": "huv-Latn-MX",
      "huw": "huw-Latn-ID",
      "hux": "hux-Latn-PE",
      "huy": "huy-Hebr-IL",
      "huz": "huz-Cyrl-RU",
      "hvc": "hvc-Latn-HT",
      "hve": "hve-Latn-MX",
      "hvk": "hvk-Latn-NC",
      "hvn": "hvn-Latn-ID",
      "hvv": "hvv-Latn-MX",
      "hwa": "hwa-Latn-CI",
      "hwc": "hwc-Latn-US",
      "hwo": "hwo-Latn-NG",
      "hy": "hy-Armn-AM",
      "hya": "hya-Latn-CM",
      "hyw": "hyw-Armn-AM",
      "hz": "hz-Latn-NA",
      "ia": "ia-Latn-001",
      "iai": "iai-Latn-NC",
      "ian": "ian-Latn-PG",
      "iar": "iar-Latn-PG",
      "iba": "iba-Latn-MY",
      "ibb": "ibb-Latn-NG",
      "ibd": "ibd-Latn-AU",
      "ibe": "ibe-Latn-NG",
      "ibg": "ibg-Latn-PH",
      "ibh": "ibh-Latn-VN",
      "ibl": "ibl-Latn-PH",
      "ibm": "ibm-Latn-NG",
      "ibn": "ibn-Latn-NG",
      "ibr": "ibr-Latn-NG",
      "ibu": "ibu-Latn-ID",
      "iby": "iby-Latn-NG",
      "ica": "ica-Latn-BJ",
      "ich": "ich-Latn-NG",
      "icr": "icr-Latn-CO",
      "id": "id-Latn-ID",
      "ida": "ida-Latn-KE",
      "idb": "idb-Latn-IN",
      "idc": "idc-Latn-NG",
      "idd": "idd-Latn-BJ",
      "ide": "ide-Latn-NG",
      "idi": "idi-Latn-PG",
      "idr": "idr-Latn-SS",
      "ids": "ids-Latn-NG",
      "idt": "idt-Latn-TL",
      "idu": "idu-Latn-NG",
      "ie": "ie-Latn-EE",
      "ifa": "ifa-Latn-PH",
      "ifb": "ifb-Latn-PH",
      "ife": "ife-Latn-TG",
      "iff": "iff-Latn-VU",
      "ifk": "ifk-Latn-PH",
      "ifm": "ifm-Latn-CG",
      "ifu": "ifu-Latn-PH",
      "ify": "ify-Latn-PH",
      "ig": "ig-Latn-NG",
      "igb": "igb-Latn-NG",
      "ige": "ige-Latn-NG",
      "igg": "igg-Latn-PG",
      "igl": "igl-Latn-NG",
      "igm": "igm-Latn-PG",
      "ign": "ign-Latn-BO",
      "igo": "igo-Latn-PG",
      "igs": "igs-Latn-001",
      "igw": "igw-Latn-NG",
      "ihb": "ihb-Latn-ID",
      "ihi": "ihi-Latn-NG",
      "ihp": "ihp-Latn-ID",
      "ihw": "ihw-Latn-AU",
      "ii": "ii-Yiii-CN",
      "iin": "iin-Latn-AU",
      "ijc": "ijc-Latn-NG",
      "ije": "ije-Latn-NG",
      "ijj": "ijj-Latn-BJ",
      "ijn": "ijn-Latn-NG",
      "ijs": "ijs-Latn-NG",
      "ik": "ik-Latn-US",
      "ikh": "ikh-Latn-NG",
      "iki": "iki-Latn-NG",
      "ikk": "ikk-Latn-NG",
      "ikl": "ikl-Latn-NG",
      "iko": "iko-Latn-NG",
      "ikp": "ikp-Latn-NG",
      "ikr": "ikr-Latn-AU",
      "ikt": "ikt-Latn-CA",
      "ikv": "ikv-Latn-NG",
      "ikw": "ikw-Latn-NG",
      "ikx": "ikx-Latn-UG",
      "ikz": "ikz-Latn-TZ",
      "ila": "ila-Latn-ID",
      "ilb": "ilb-Latn-ZM",
      "ilg": "ilg-Latn-AU",
      "ili": "ili-Latn-CN",
      "ilk": "ilk-Latn-PH",
      "ilm": "ilm-Latn-MY",
      "ilo": "ilo-Latn-PH",
      "ilp": "ilp-Latn-PH",
      "ilu": "ilu-Latn-ID",
      "ilv": "ilv-Latn-NG",
      "imi": "imi-Latn-PG",
      "iml": "iml-Latn-US",
      "imn": "imn-Latn-PG",
      "imo": "imo-Latn-PG",
      "imr": "imr-Latn-ID",
      "ims": "ims-Latn-IT",
      "imt": "imt-Latn-SS",
      "imy": "imy-Lyci-TR",
      "in": "in-Latn-ID",
      "inb": "inb-Latn-CO",
      "ing": "ing-Latn-US",
      "inh": "inh-Cyrl-RU",
      "inj": "inj-Latn-CO",
      "inn": "inn-Latn-PH",
      "ino": "ino-Latn-PG",
      "inp": "inp-Latn-PE",
      "int": "int-Mymr-MM",
      "io": "io-Latn-001",
      "ior": "ior-Ethi-ET",
      "iou": "iou-Latn-PG",
      "iow": "iow-Latn-US",
      "ipi": "ipi-Latn-PG",
      "ipo": "ipo-Latn-PG",
      "iqu": "iqu-Latn-PE",
      "iqw": "iqw-Latn-NG",
      "ire": "ire-Latn-ID",
      "irh": "irh-Latn-ID",
      "iri": "iri-Latn-NG",
      "irk": "irk-Latn-TZ",
      "irn": "irn-Latn-BR",
      "iru": "iru-Taml-IN",
      "irx": "irx-Latn-ID",
      "iry": "iry-Latn-PH",
      "is": "is-Latn-IS",
      "isa": "isa-Latn-PG",
      "isc": "isc-Latn-PE",
      "isd": "isd-Latn-PH",
      "ish": "ish-Latn-NG",
      "isi": "isi-Latn-NG",
      "isk": "isk-Arab-AF",
      "ism": "ism-Latn-ID",
      "isn": "isn-Latn-TZ",
      "iso": "iso-Latn-NG",
      "ist": "ist-Latn-HR",
      "isu": "isu-Latn-CM",
      "it": "it-Latn-IT",
      "itb": "itb-Latn-PH",
      "itd": "itd-Latn-ID",
      "ite": "ite-Latn-BO",
      "iti": "iti-Latn-PH",
      "itk": "itk-Hebr-IT",
      "itl": "itl-Cyrl-RU",
      "itm": "itm-Latn-NG",
      "ito": "ito-Latn-BO",
      "itr": "itr-Latn-PG",
      "its": "its-Latn-NG",
      "itt": "itt-Latn-PH",
      "itv": "itv-Latn-PH",
      "itw": "itw-Latn-NG",
      "itx": "itx-Latn-ID",
      "ity": "ity-Latn-PH",
      "itz": "itz-Latn-GT",
      "iu": "iu-Cans-CA",
      "ium": "ium-Latn-CN",
      "ivb": "ivb-Latn-PH",
      "ivv": "ivv-Latn-PH",
      "iw": "iw-Hebr-IL",
      "iwk": "iwk-Latn-PH",
      "iwm": "iwm-Latn-PG",
      "iwo": "iwo-Latn-ID",
      "iws": "iws-Latn-PG",
      "ixc": "ixc-Latn-MX",
      "ixl": "ixl-Latn-GT",
      "iya": "iya-Latn-NG",
      "iyo": "iyo-Latn-CM",
      "iyx": "iyx-Latn-CG",
      "izh": "izh-Latn-RU",
      "izm": "izm-Latn-NG",
      "izr": "izr-Latn-NG",
      "izz": "izz-Latn-NG",
      "ja": "ja-Jpan-JP",
      "jaa": "jaa-Latn-BR",
      "jab": "jab-Latn-NG",
      "jac": "jac-Latn-GT",
      "jad": "jad-Arab-GN",
      "jae": "jae-Latn-PG",
      "jaf": "jaf-Latn-NG",
      "jah": "jah-Latn-MY",
      "jaj": "jaj-Latn-SB",
      "jak": "jak-Latn-MY",
      "jal": "jal-Latn-ID",
      "jam": "jam-Latn-JM",
      "jan": "jan-Latn-AU",
      "jao": "jao-Latn-AU",
      "jaq": "jaq-Latn-ID",
      "jas": "jas-Latn-NC",
      "jat": "jat-Arab-AF",
      "jau": "jau-Latn-ID",
      "jax": "jax-Latn-ID",
      "jay": "jay-Latn-AU",
      "jaz": "jaz-Latn-NC",
      "jbe": "jbe-Hebr-IL",
      "jbi": "jbi-Latn-AU",
      "jbj": "jbj-Latn-ID",
      "jbk": "jbk-Latn-PG",
      "jbm": "jbm-Latn-NG",
      "jbn": "jbn-Arab-LY",
      "jbo": "jbo-Latn-001",
      "jbr": "jbr-Latn-ID",
      "jbt": "jbt-Latn-BR",
      "jbu": "jbu-Latn-CM",
      "jbw": "jbw-Latn-AU",
      "jct": "jct-Cyrl-UA",
      "jda": "jda-Tibt-IN",
      "jdg": "jdg-Arab-PK",
      "jdt": "jdt-Cyrl-RU",
      "jeb": "jeb-Latn-PE",
      "jee": "jee-Deva-NP",
      "jeh": "jeh-Latn-VN",
      "jei": "jei-Latn-ID",
      "jek": "jek-Latn-CI",
      "jel": "jel-Latn-ID",
      "jen": "jen-Latn-NG",
      "jer": "jer-Latn-NG",
      "jet": "jet-Latn-PG",
      "jeu": "jeu-Latn-TD",
      "jgb": "jgb-Latn-CD",
      "jge": "jge-Geor-GE",
      "jgk": "jgk-Latn-NG",
      "jgo": "jgo-Latn-CM",
      "jhi": "jhi-Latn-MY",
      "ji": "ji-Hebr-UA",
      "jia": "jia-Latn-CM",
      "jib": "jib-Latn-NG",
      "jic": "jic-Latn-HN",
      "jid": "jid-Latn-NG",
      "jie": "jie-Latn-NG",
      "jig": "jig-Latn-AU",
      "jil": "jil-Latn-PG",
      "jim": "jim-Latn-CM",
      "jit": "jit-Latn-TZ",
      "jiu": "jiu-Latn-CN",
      "jiv": "jiv-Latn-EC",
      "jiy": "jiy-Latn-CN",
      "jje": "jje-Hang-KR",
      "jjr": "jjr-Latn-NG",
      "jka": "jka-Latn-ID",
      "jkm": "jkm-Mymr-MM",
      "jko": "jko-Latn-PG",
      "jku": "jku-Latn-NG",
      "jle": "jle-Latn-SD",
      "jma": "jma-Latn-PG",
      "jmb": "jmb-Latn-NG",
      "jmc": "jmc-Latn-TZ",
      "jmd": "jmd-Latn-ID",
      "jmi": "jmi-Latn-NG",
      "jml": "jml-Deva-NP",
      "jmn": "jmn-Latn-MM",
      "jmr": "jmr-Latn-GH",
      "jms": "jms-Latn-NG",
      "jmw": "jmw-Latn-PG",
      "jmx": "jmx-Latn-MX",
      "jna": "jna-Takr-IN",
      "jnd": "jnd-Arab-PK",
      "jng": "jng-Latn-AU",
      "jni": "jni-Latn-NG",
      "jnj": "jnj-Latn-ET",
      "jnl": "jnl-Deva-IN",
      "jns": "jns-Deva-IN",
      "job": "job-Latn-CD",
      "jod": "jod-Latn-CI",
      "jog": "jog-Arab-PK",
      "jor": "jor-Latn-BO",
      "jow": "jow-Latn-ML",
      "jpa": "jpa-Hebr-PS",
      "jpr": "jpr-Hebr-IL",
      "jqr": "jqr-Latn-PE",
      "jra": "jra-Latn-VN",
      "jrb": "jrb-Hebr-IL",
      "jrr": "jrr-Latn-NG",
      "jrt": "jrt-Latn-NG",
      "jru": "jru-Latn-VE",
      "jua": "jua-Latn-BR",
      "jub": "jub-Latn-NG",
      "jud": "jud-Latn-CI",
      "juh": "juh-Latn-NG",
      "jui": "jui-Latn-AU",
      "juk": "juk-Latn-NG",
      "jul": "jul-Deva-NP",
      "jum": "jum-Latn-SD",
      "jun": "jun-Orya-IN",
      "juo": "juo-Latn-NG",
      "jup": "jup-Latn-BR",
      "jur": "jur-Latn-BR",
      "jut": "jut-Latn-DK",
      "juu": "juu-Latn-NG",
      "juw": "juw-Latn-NG",
      "juy": "juy-Orya-IN",
      "jv": "jv-Latn-ID",
      "jvd": "jvd-Latn-ID",
      "jvn": "jvn-Latn-SR",
      "jw": "jw-Latn-ID",
      "jwi": "jwi-Latn-GH",
      "jya": "jya-Tibt-CN",
      "jye": "jye-Hebr-IL",
      "jyy": "jyy-Latn-TD",
      "ka": "ka-Geor-GE",
      "kaa": "kaa-Cyrl-UZ",
      "kab": "kab-Latn-DZ",
      "kac": "kac-Latn-MM",
      "kad": "kad-Latn-NG",
      "kag": "kag-Latn-MY",
      "kah": "kah-Latn-CF",
      "kai": "kai-Latn-NG",
      "kaj": "kaj-Latn-NG",
      "kak": "kak-Latn-PH",
      "kam": "kam-Latn-KE",
      "kao": "kao-Latn-ML",
      "kap": "kap-Cyrl-RU",
      "kaq": "kaq-Latn-PE",
      "kav": "kav-Latn-BR",
      "kaw": "kaw-Kawi-ID",
      "kax": "kax-Latn-ID",
      "kay": "kay-Latn-BR",
      "kba": "kba-Latn-AU",
      "kbb": "kbb-Latn-BR",
      "kbc": "kbc-Latn-BR",
      "kbd": "kbd-Cyrl-RU",
      "kbe": "kbe-Latn-AU",
      "kbg": "kbg-Tibt-IN",
      "kbh": "kbh-Latn-CO",
      "kbi": "kbi-Latn-ID",
      "kbj": "kbj-Latn-CD",
      "kbk": "kbk-Latn-PG",
      "kbl": "kbl-Latn-TD",
      "kbm": "kbm-Latn-PG",
      "kbn": "kbn-Latn-CF",
      "kbo": "kbo-Latn-SS",
      "kbp": "kbp-Latn-TG",
      "kbq": "kbq-Latn-PG",
      "kbr": "kbr-Latn-ET",
      "kbs": "kbs-Latn-GA",
      "kbt": "kbt-Latn-PG",
      "kbu": "kbu-Arab-PK",
      "kbv": "kbv-Latn-ID",
      "kbw": "kbw-Latn-PG",
      "kbx": "kbx-Latn-PG",
      "kby": "kby-Arab-NE",
      "kbz": "kbz-Latn-NG",
      "kca": "kca-Cyrl-RU",
      "kcb": "kcb-Latn-PG",
      "kcc": "kcc-Latn-NG",
      "kcd": "kcd-Latn-ID",
      "kce": "kce-Latn-NG",
      "kcf": "kcf-Latn-NG",
      "kcg": "kcg-Latn-NG",
      "kch": "kch-Latn-NG",
      "kci": "kci-Latn-NG",
      "kcj": "kcj-Latn-GW",
      "kck": "kck-Latn-ZW",
      "kcl": "kcl-Latn-PG",
      "kcm": "kcm-Latn-CF",
      "kcn": "kcn-Latn-UG",
      "kco": "kco-Latn-PG",
      "kcp": "kcp-Latn-SD",
      "kcq": "kcq-Latn-NG",
      "kcs": "kcs-Latn-NG",
      "kct": "kct-Latn-PG",
      "kcu": "kcu-Latn-TZ",
      "kcv": "kcv-Latn-CD",
      "kcw": "kcw-Latn-CD",
      "kcy": "kcy-Arab-DZ",
      "kcz": "kcz-Latn-TZ",
      "kda": "kda-Latn-AU",
      "kdc": "kdc-Latn-TZ",
      "kdd": "kdd-Latn-AU",
      "kde": "kde-Latn-TZ",
      "kdf": "kdf-Latn-PG",
      "kdg": "kdg-Latn-CD",
      "kdh": "kdh-Latn-TG",
      "kdi": "kdi-Latn-UG",
      "kdj": "kdj-Latn-UG",
      "kdk": "kdk-Latn-NC",
      "kdl": "kdl-Latn-NG",
      "kdm": "kdm-Latn-NG",
      "kdn": "kdn-Latn-ZW",
      "kdp": "kdp-Latn-NG",
      "kdq": "kdq-Beng-IN",
      "kdr": "kdr-Latn-LT",
      "kdt": "kdt-Thai-TH",
      "kdw": "kdw-Latn-ID",
      "kdx": "kdx-Latn-NG",
      "kdy": "kdy-Latn-ID",
      "kdz": "kdz-Latn-CM",
      "kea": "kea-Latn-CV",
      "keb": "keb-Latn-GA",
      "kec": "kec-Latn-SD",
      "ked": "ked-Latn-TZ",
      "kee": "kee-Latn-US",
      "kef": "kef-Latn-TG",
      "keg": "keg-Latn-SD",
      "keh": "keh-Latn-PG",
      "kei": "kei-Latn-ID",
      "kek": "kek-Latn-GT",
      "kel": "kel-Latn-CD",
      "kem": "kem-Latn-TL",
      "ken": "ken-Latn-CM",
      "keo": "keo-Latn-UG",
      "ker": "ker-Latn-TD",
      "kes": "kes-Latn-NG",
      "ket": "ket-Cyrl-RU",
      "keu": "keu-Latn-TG",
      "kev": "kev-Mlym-IN",
      "kew": "kew-Latn-PG",
      "kex": "kex-Deva-IN",
      "key": "key-Telu-IN",
      "kez": "kez-Latn-NG",
      "kfa": "kfa-Knda-IN",
      "kfb": "kfb-Deva-IN",
      "kfc": "kfc-Telu-IN",
      "kfd": "kfd-Knda-IN",
      "kfe": "kfe-Taml-IN",
      "kff": "kff-Latn-IN",
      "kfg": "kfg-Knda-IN",
      "kfh": "kfh-Mlym-IN",
      "kfi": "kfi-Taml-IN",
      "kfk": "kfk-Deva-IN",
      "kfl": "kfl-Latn-CM",
      "kfm": "kfm-Arab-IR",
      "kfn": "kfn-Latn-CM",
      "kfo": "kfo-Latn-CI",
      "kfp": "kfp-Deva-IN",
      "kfq": "kfq-Deva-IN",
      "kfr": "kfr-Deva-IN",
      "kfs": "kfs-Deva-IN",
      "kfu": "kfu-Deva-IN",
      "kfv": "kfv-Latn-IN",
      "kfw": "kfw-Latn-IN",
      "kfx": "kfx-Deva-IN",
      "kfy": "kfy-Deva-IN",
      "kfz": "kfz-Latn-BF",
      "kg": "kg-Latn-CD",
      "kga": "kga-Latn-CI",
      "kgb": "kgb-Latn-ID",
      "kge": "kge-Latn-ID",
      "kgf": "kgf-Latn-PG",
      "kgj": "kgj-Deva-NP",
      "kgk": "kgk-Latn-BR",
      "kgl": "kgl-Latn-AU",
      "kgo": "kgo-Latn-SD",
      "kgp": "kgp-Latn-BR",
      "kgq": "kgq-Latn-ID",
      "kgr": "kgr-Latn-ID",
      "kgs": "kgs-Latn-AU",
      "kgt": "kgt-Latn-NG",
      "kgu": "kgu-Latn-PG",
      "kgv": "kgv-Latn-ID",
      "kgw": "kgw-Latn-ID",
      "kgx": "kgx-Latn-ID",
      "kgy": "kgy-Deva-NP",
      "kha": "kha-Latn-IN",
      "khb": "khb-Talu-CN",
      "khc": "khc-Latn-ID",
      "khd": "khd-Latn-ID",
      "khe": "khe-Latn-ID",
      "khf": "khf-Thai-LA",
      "khg": "khg-Tibt-CN",
      "khh": "khh-Latn-ID",
      "khj": "khj-Latn-NG",
      "khl": "khl-Latn-PG",
      "khn": "khn-Deva-IN",
      "kho": "kho-Brah-IR",
      "khp": "khp-Latn-ID",
      "khq": "khq-Latn-ML",
      "khr": "khr-Latn-IN",
      "khs": "khs-Latn-PG",
      "kht": "kht-Mymr-IN",
      "khu": "khu-Latn-AO",
      "khv": "khv-Cyrl-RU",
      "khw": "khw-Arab-PK",
      "khx": "khx-Latn-CD",
      "khy": "khy-Latn-CD",
      "khz": "khz-Latn-PG",
      "ki": "ki-Latn-KE",
      "kia": "kia-Latn-TD",
      "kib": "kib-Latn-SD",
      "kic": "kic-Latn-US",
      "kid": "kid-Latn-CM",
      "kie": "kie-Latn-TD",
      "kif": "kif-Deva-NP",
      "kig": "kig-Latn-ID",
      "kih": "kih-Latn-PG",
      "kij": "kij-Latn-PG",
      "kil": "kil-Latn-NG",
      "kim": "kim-Cyrl-RU",
      "kio": "kio-Latn-US",
      "kip": "kip-Deva-NP",
      "kiq": "kiq-Latn-ID",
      "kis": "kis-Latn-PG",
      "kit": "kit-Latn-PG",
      "kiu": "kiu-Latn-TR",
      "kiv": "kiv-Latn-TZ",
      "kiw": "kiw-Latn-PG",
      "kix": "kix-Latn-IN",
      "kiy": "kiy-Latn-ID",
      "kiz": "kiz-Latn-TZ",
      "kj": "kj-Latn-NA",
      "kja": "kja-Latn-ID",
      "kjb": "kjb-Latn-GT",
      "kjc": "kjc-Latn-ID",
      "kjd": "kjd-Latn-PG",
      "kje": "kje-Latn-ID",
      "kjg": "kjg-Laoo-LA",
      "kjh": "kjh-Cyrl-RU",
      "kji": "kji-Latn-SB",
      "kjj": "kjj-Latn-AZ",
      "kjk": "kjk-Latn-ID",
      "kjl": "kjl-Deva-NP",
      "kjm": "kjm-Latn-VN",
      "kjn": "kjn-Latn-AU",
      "kjo": "kjo-Deva-IN",
      "kjp": "kjp-Mymr-MM",
      "kjq": "kjq-Latn-US",
      "kjr": "kjr-Latn-ID",
      "kjs": "kjs-Latn-PG",
      "kjt": "kjt-Thai-TH",
      "kju": "kju-Latn-US",
      "kjx": "kjx-Latn-PG",
      "kjy": "kjy-Latn-PG",
      "kjz": "kjz-Tibt-BT",
      "kk": "kk-Cyrl-KZ",
      "kk-AF": "kk-Arab-AF",
      "kk-Arab": "kk-Arab-CN",
      "kk-CN": "kk-Arab-CN",
      "kk-IR": "kk-Arab-IR",
      "kk-MN": "kk-Arab-MN",
      "kka": "kka-Latn-NG",
      "kkb": "kkb-Latn-ID",
      "kkc": "kkc-Latn-PG",
      "kkd": "kkd-Latn-NG",
      "kke": "kke-Latn-GN",
      "kkf": "kkf-Tibt-IN",
      "kkg": "kkg-Latn-PH",
      "kkh": "kkh-Lana-MM",
      "kki": "kki-Latn-TZ",
      "kkj": "kkj-Latn-CM",
      "kkk": "kkk-Latn-SB",
      "kkl": "kkl-Latn-ID",
      "kkm": "kkm-Latn-NG",
      "kko": "kko-Latn-SD",
      "kkp": "kkp-Latn-AU",
      "kkq": "kkq-Latn-CD",
      "kkr": "kkr-Latn-NG",
      "kks": "kks-Latn-NG",
      "kkt": "kkt-Deva-NP",
      "kku": "kku-Latn-NG",
      "kkv": "kkv-Latn-ID",
      "kkw": "kkw-Latn-CG",
      "kkx": "kkx-Latn-ID",
      "kky": "kky-Latn-AU",
      "kkz": "kkz-Latn-CA",
      "kl": "kl-Latn-GL",
      "kla": "kla-Latn-US",
      "klb": "klb-Latn-MX",
      "klc": "klc-Latn-CM",
      "kld": "kld-Latn-AU",
      "kle": "kle-Deva-NP",
      "klf": "klf-Latn-TD",
      "klg": "klg-Latn-PH",
      "klh": "klh-Latn-PG",
      "kli": "kli-Latn-ID",
      "klj": "klj-Arab-IR",
      "klk": "klk-Latn-NG",
      "kll": "kll-Latn-PH",
      "klm": "klm-Latn-PG",
      "kln": "kln-Latn-KE",
      "klo": "klo-Latn-NG",
      "klp": "klp-Latn-PG",
      "klq": "klq-Latn-PG",
      "klr": "klr-Deva-NP",
      "kls": "kls-Latn-PK",
      "klt": "klt-Latn-PG",
      "klu": "klu-Latn-LR",
      "klv": "klv-Latn-VU",
      "klw": "klw-Latn-ID",
      "klx": "klx-Latn-PG",
      "kly": "kly-Latn-ID",
      "klz": "klz-Latn-ID",
      "km": "km-Khmr-KH",
      "kma": "kma-Latn-GH",
      "kmb": "kmb-Latn-AO",
      "kmc": "kmc-Latn-CN",
      "kmd": "kmd-Latn-PH",
      "kme": "kme-Latn-CM",
      "kmf": "kmf-Latn-PG",
      "kmg": "kmg-Latn-PG",
      "kmh": "kmh-Latn-PG",
      "kmi": "kmi-Latn-NG",
      "kmj": "kmj-Deva-IN",
      "kmk": "kmk-Latn-PH",
      "kml": "kml-Latn-PH",
      "kmm": "kmm-Latn-IN",
      "kmn": "kmn-Latn-PG",
      "kmo": "kmo-Latn-PG",
      "kmp": "kmp-Latn-CM",
      "kmq": "kmq-Latn-ET",
      "kms": "kms-Latn-PG",
      "kmt": "kmt-Latn-ID",
      "kmu": "kmu-Latn-PG",
      "kmv": "kmv-Latn-BR",
      "kmw": "kmw-Latn-CD",
      "kmx": "kmx-Latn-PG",
      "kmy": "kmy-Latn-NG",
      "kmz": "kmz-Arab-IR",
      "kn": "kn-Knda-IN",
      "kna": "kna-Latn-NG",
      "knb": "knb-Latn-PH",
      "knd": "knd-Latn-ID",
      "kne": "kne-Latn-PH",
      "knf": "knf-Latn-GW",
      "kni": "kni-Latn-NG",
      "knj": "knj-Latn-GT",
      "knk": "knk-Latn-SL",
      "knl": "knl-Latn-ID",
      "knm": "knm-Latn-BR",
      "knn": "knn-Deva-IN",
      "kno": "kno-Latn-SL",
      "knp": "knp-Latn-CM",
      "knq": "knq-Latn-MY",
      "knr": "knr-Latn-PG",
      "kns": "kns-Latn-MY",
      "knt": "knt-Latn-BR",
      "knu": "knu-Latn-GN",
      "knv": "knv-Latn-PG",
      "knw": "knw-Latn-NA",
      "knx": "knx-Latn-ID",
      "kny": "kny-Latn-CD",
      "knz": "knz-Latn-BF",
      "ko": "ko-Kore-KR",
      "koa": "koa-Latn-PG",
      "koc": "koc-Latn-NG",
      "kod": "kod-Latn-ID",
      "koe": "koe-Latn-SS",
      "kof": "kof-Latn-NG",
      "kog": "kog-Latn-CO",
      "koh": "koh-Latn-CG",
      "koi": "koi-Cyrl-RU",
      "kok": "kok-Deva-IN",
      "kol": "kol-Latn-PG",
      "koo": "koo-Latn-UG",
      "kop": "kop-Latn-PG",
      "koq": "koq-Latn-GA",
      "kos": "kos-Latn-FM",
      "kot": "kot-Latn-CM",
      "kou": "kou-Latn-TD",
      "kov": "kov-Latn-NG",
      "kow": "kow-Latn-NG",
      "koy": "koy-Latn-US",
      "koz": "koz-Latn-PG",
      "kpa": "kpa-Latn-NG",
      "kpc": "kpc-Latn-CO",
      "kpd": "kpd-Latn-ID",
      "kpe": "kpe-Latn-LR",
      "kpf": "kpf-Latn-PG",
      "kpg": "kpg-Latn-FM",
      "kph": "kph-Latn-GH",
      "kpi": "kpi-Latn-ID",
      "kpj": "kpj-Latn-BR",
      "kpk": "kpk-Latn-NG",
      "kpl": "kpl-Latn-CD",
      "kpm": "kpm-Latn-VN",
      "kpn": "kpn-Latn-BR",
      "kpo": "kpo-Latn-TG",
      "kpq": "kpq-Latn-ID",
      "kpr": "kpr-Latn-PG",
      "kps": "kps-Latn-ID",
      "kpt": "kpt-Cyrl-RU",
      "kpu": "kpu-Latn-ID",
      "kpw": "kpw-Latn-PG",
      "kpx": "kpx-Latn-PG",
      "kpy": "kpy-Cyrl-RU",
      "kpz": "kpz-Latn-UG",
      "kqa": "kqa-Latn-PG",
      "kqb": "kqb-Latn-PG",
      "kqc": "kqc-Latn-PG",
      "kqd": "kqd-Syrc-IQ",
      "kqe": "kqe-Latn-PH",
      "kqf": "kqf-Latn-PG",
      "kqg": "kqg-Latn-BF",
      "kqh": "kqh-Latn-TZ",
      "kqi": "kqi-Latn-PG",
      "kqj": "kqj-Latn-PG",
      "kqk": "kqk-Latn-BJ",
      "kql": "kql-Latn-PG",
      "kqm": "kqm-Latn-CI",
      "kqn": "kqn-Latn-ZM",
      "kqo": "kqo-Latn-LR",
      "kqp": "kqp-Latn-TD",
      "kqq": "kqq-Latn-BR",
      "kqr": "kqr-Latn-MY",
      "kqs": "kqs-Latn-GN",
      "kqt": "kqt-Latn-MY",
      "kqu": "kqu-Latn-ZA",
      "kqv": "kqv-Latn-ID",
      "kqw": "kqw-Latn-PG",
      "kqx": "kqx-Latn-CM",
      "kqy": "kqy-Ethi-ET",
      "kqz": "kqz-Latn-ZA",
      "kr": "kr-Latn-NG",
      "kra": "kra-Deva-NP",
      "krb": "krb-Latn-US",
      "krc": "krc-Cyrl-RU",
      "krd": "krd-Latn-TL",
      "kre": "kre-Latn-BR",
      "krf": "krf-Latn-VU",
      "krh": "krh-Latn-NG",
      "kri": "kri-Latn-SL",
      "krj": "krj-Latn-PH",
      "krk": "krk-Cyrl-RU",
      "krl": "krl-Latn-RU",
      "krn": "krn-Latn-LR",
      "krp": "krp-Latn-NG",
      "krr": "krr-Khmr-KH",
      "krs": "krs-Latn-SS",
      "krt": "krt-Latn-NE",
      "kru": "kru-Deva-IN",
      "krv": "krv-Khmr-KH",
      "krw": "krw-Latn-LR",
      "krx": "krx-Latn-SN",
      "kry": "kry-Latn-AZ",
      "krz": "krz-Latn-ID",
      "ks": "ks-Arab-IN",
      "ksb": "ksb-Latn-TZ",
      "ksc": "ksc-Latn-PH",
      "ksd": "ksd-Latn-PG",
      "kse": "kse-Latn-PG",
      "ksf": "ksf-Latn-CM",
      "ksg": "ksg-Latn-SB",
      "ksh": "ksh-Latn-DE",
      "ksi": "ksi-Latn-PG",
      "ksj": "ksj-Latn-PG",
      "ksk": "ksk-Latn-US",
      "ksl": "ksl-Latn-PG",
      "ksm": "ksm-Latn-NG",
      "ksn": "ksn-Latn-PH",
      "kso": "kso-Latn-NG",
      "ksp": "ksp-Latn-CF",
      "ksq": "ksq-Latn-NG",
      "ksr": "ksr-Latn-PG",
      "kss": "kss-Latn-LR",
      "kst": "kst-Latn-BF",
      "ksu": "ksu-Mymr-IN",
      "ksv": "ksv-Latn-CD",
      "ksw": "ksw-Mymr-MM",
      "ksx": "ksx-Latn-ID",
      "ksz": "ksz-Deva-IN",
      "kta": "kta-Latn-VN",
      "ktb": "ktb-Ethi-ET",
      "ktc": "ktc-Latn-NG",
      "ktd": "ktd-Latn-AU",
      "kte": "kte-Deva-NP",
      "ktf": "ktf-Latn-CD",
      "ktg": "ktg-Latn-AU",
      "kth": "kth-Latn-TD",
      "kti": "kti-Latn-ID",
      "ktj": "ktj-Latn-CI",
      "ktk": "ktk-Latn-PG",
      "ktl": "ktl-Arab-IR",
      "ktm": "ktm-Latn-PG",
      "ktn": "ktn-Latn-BR",
      "kto": "kto-Latn-PG",
      "ktp": "ktp-Plrd-CN",
      "ktq": "ktq-Latn-PH",
      "kts": "kts-Latn-ID",
      "ktt": "ktt-Latn-ID",
      "ktu": "ktu-Latn-CD",
      "ktv": "ktv-Latn-VN",
      "ktw": "ktw-Latn-US",
      "ktx": "ktx-Latn-BR",
      "kty": "kty-Latn-CD",
      "ktz": "ktz-Latn-NA",
      "ku": "ku-Latn-TR",
      "ku-Arab": "ku-Arab-IQ",
      "ku-LB": "ku-Arab-LB",
      "ku-Yezi": "ku-Yezi-GE",
      "kub": "kub-Latn-NG",
      "kuc": "kuc-Latn-ID",
      "kud": "kud-Latn-PG",
      "kue": "kue-Latn-PG",
      "kuf": "kuf-Laoo-LA",
      "kug": "kug-Latn-NG",
      "kuh": "kuh-Latn-NG",
      "kui": "kui-Latn-BR",
      "kuj": "kuj-Latn-TZ",
      "kuk": "kuk-Latn-ID",
      "kul": "kul-Latn-NG",
      "kum": "kum-Cyrl-RU",
      "kun": "kun-Latn-ER",
      "kuo": "kuo-Latn-PG",
      "kup": "kup-Latn-PG",
      "kuq": "kuq-Latn-BR",
      "kus": "kus-Latn-GH",
      "kut": "kut-Latn-CA",
      "kuu": "kuu-Latn-US",
      "kuv": "kuv-Latn-ID",
      "kuw": "kuw-Latn-CF",
      "kux": "kux-Latn-AU",
      "kuy": "kuy-Latn-AU",
      "kuz": "kuz-Latn-CL",
      "kv": "kv-Cyrl-RU",
      "kva": "kva-Cyrl-RU",
      "kvb": "kvb-Latn-ID",
      "kvc": "kvc-Latn-PG",
      "kvd": "kvd-Latn-ID",
      "kve": "kve-Latn-MY",
      "kvf": "kvf-Latn-TD",
      "kvg": "kvg-Latn-PG",
      "kvh": "kvh-Latn-ID",
      "kvi": "kvi-Latn-TD",
      "kvj": "kvj-Latn-CM",
      "kvl": "kvl-Latn-MM",
      "kvm": "kvm-Latn-CM",
      "kvn": "kvn-Latn-CO",
      "kvo": "kvo-Latn-ID",
      "kvp": "kvp-Latn-ID",
      "kvq": "kvq-Mymr-MM",
      "kvr": "kvr-Latn-ID",
      "kvt": "kvt-Mymr-MM",
      "kvv": "kvv-Latn-ID",
      "kvw": "kvw-Latn-ID",
      "kvx": "kvx-Arab-PK",
      "kvy": "kvy-Kali-MM",
      "kvz": "kvz-Latn-ID",
      "kw": "kw-Latn-GB",
      "kwa": "kwa-Latn-BR",
      "kwb": "kwb-Latn-NG",
      "kwc": "kwc-Latn-CG",
      "kwd": "kwd-Latn-SB",
      "kwe": "kwe-Latn-ID",
      "kwf": "kwf-Latn-SB",
      "kwg": "kwg-Latn-TD",
      "kwh": "kwh-Latn-ID",
      "kwi": "kwi-Latn-CO",
      "kwj": "kwj-Latn-PG",
      "kwk": "kwk-Latn-CA",
      "kwl": "kwl-Latn-NG",
      "kwm": "kwm-Latn-NA",
      "kwn": "kwn-Latn-NA",
      "kwo": "kwo-Latn-PG",
      "kwp": "kwp-Latn-CI",
      "kwr": "kwr-Latn-ID",
      "kws": "kws-Latn-CD",
      "kwt": "kwt-Latn-ID",
      "kwu": "kwu-Latn-CM",
      "kwv": "kwv-Latn-TD",
      "kww": "kww-Latn-SR",
      "kwy": "kwy-Latn-AO",
      "kwz": "kwz-Latn-AO",
      "kxa": "kxa-Latn-PG",
      "kxb": "kxb-Latn-CI",
      "kxc": "kxc-Latn-ET",
      "kxd": "kxd-Latn-BN",
      "kxf": "kxf-Mymr-MM",
      "kxi": "kxi-Latn-MY",
      "kxj": "kxj-Latn-TD",
      "kxk": "kxk-Mymr-MM",
      "kxm": "kxm-Thai-TH",
      "kxn": "kxn-Latn-MY",
      "kxo": "kxo-Latn-BR",
      "kxp": "kxp-Arab-PK",
      "kxq": "kxq-Latn-ID",
      "kxr": "kxr-Latn-PG",
      "kxt": "kxt-Latn-PG",
      "kxv": "kxv-Latn-IN",
      "kxw": "kxw-Latn-PG",
      "kxx": "kxx-Latn-CG",
      "kxy": "kxy-Latn-VN",
      "kxz": "kxz-Latn-PG",
      "ky": "ky-Cyrl-KG",
      "ky-Arab": "ky-Arab-CN",
      "ky-CN": "ky-Arab-CN",
      "ky-Latn": "ky-Latn-TR",
      "ky-TR": "ky-Latn-TR",
      "kya": "kya-Latn-TZ",
      "kyb": "kyb-Latn-PH",
      "kyc": "kyc-Latn-PG",
      "kyd": "kyd-Latn-ID",
      "kye": "kye-Latn-GH",
      "kyf": "kyf-Latn-CI",
      "kyg": "kyg-Latn-PG",
      "kyh": "kyh-Latn-US",
      "kyi": "kyi-Latn-MY",
      "kyj": "kyj-Latn-PH",
      "kyk": "kyk-Latn-PH",
      "kyl": "kyl-Latn-US",
      "kym": "kym-Latn-CF",
      "kyn": "kyn-Latn-PH",
      "kyo": "kyo-Latn-ID",
      "kyq": "kyq-Latn-TD",
      "kyr": "kyr-Latn-BR",
      "kys": "kys-Latn-MY",
      "kyt": "kyt-Latn-ID",
      "kyu": "kyu-Kali-MM",
      "kyv": "kyv-Deva-NP",
      "kyw": "kyw-Deva-IN",
      "kyx": "kyx-Latn-PG",
      "kyy": "kyy-Latn-PG",
      "kyz": "kyz-Latn-BR",
      "kza": "kza-Latn-BF",
      "kzb": "kzb-Latn-ID",
      "kzc": "kzc-Latn-CI",
      "kzd": "kzd-Latn-ID",
      "kze": "kze-Latn-PG",
      "kzf": "kzf-Latn-ID",
      "kzi": "kzi-Latn-MY",
      "kzk": "kzk-Latn-SB",
      "kzl": "kzl-Latn-ID",
      "kzm": "kzm-Latn-ID",
      "kzn": "kzn-Latn-MW",
      "kzo": "kzo-Latn-GA",
      "kzp": "kzp-Latn-ID",
      "kzr": "kzr-Latn-CM",
      "kzs": "kzs-Latn-MY",
      "kzu": "kzu-Latn-ID",
      "kzv": "kzv-Latn-ID",
      "kzw": "kzw-Latn-BR",
      "kzx": "kzx-Latn-ID",
      "kzy": "kzy-Latn-CD",
      "kzz": "kzz-Latn-ID",
      "la": "la-Latn-VA",
      "laa": "laa-Latn-PH",
      "lab": "lab-Lina-GR",
      "lac": "lac-Latn-MX",
      "lad": "lad-Hebr-IL",
      "lae": "lae-Deva-IN",
      "lag": "lag-Latn-TZ",
      "lah": "lah-Arab-PK",
      "lai": "lai-Latn-MW",
      "laj": "laj-Latn-UG",
      "lal": "lal-Latn-CD",
      "lam": "lam-Latn-ZM",
      "lan": "lan-Latn-NG",
      "lap": "lap-Latn-TD",
      "laq": "laq-Latn-VN",
      "lar": "lar-Latn-GH",
      "las": "las-Latn-TG",
      "lau": "lau-Latn-ID",
      "law": "law-Latn-ID",
      "lax": "lax-Latn-IN",
      "laz": "laz-Latn-PG",
      "lb": "lb-Latn-LU",
      "lbb": "lbb-Latn-PG",
      "lbe": "lbe-Cyrl-RU",
      "lbf": "lbf-Deva-IN",
      "lbi": "lbi-Latn-CM",
      "lbj": "lbj-Tibt-IN",
      "lbl": "lbl-Latn-PH",
      "lbm": "lbm-Deva-IN",
      "lbn": "lbn-Latn-LA",
      "lbo": "lbo-Laoo-LA",
      "lbq": "lbq-Latn-PG",
      "lbr": "lbr-Deva-NP",
      "lbt": "lbt-Latn-VN",
      "lbu": "lbu-Latn-PG",
      "lbv": "lbv-Latn-PG",
      "lbw": "lbw-Latn-ID",
      "lbx": "lbx-Latn-ID",
      "lby": "lby-Latn-AU",
      "lbz": "lbz-Latn-AU",
      "lcc": "lcc-Latn-ID",
      "lcd": "lcd-Latn-ID",
      "lce": "lce-Latn-ID",
      "lcf": "lcf-Latn-ID",
      "lch": "lch-Latn-AO",
      "lcl": "lcl-Latn-ID",
      "lcm": "lcm-Latn-PG",
      "lcp": "lcp-Thai-CN",
      "lcq": "lcq-Latn-ID",
      "lcs": "lcs-Latn-ID",
      "lda": "lda-Latn-CI",
      "ldb": "ldb-Latn-NG",
      "ldd": "ldd-Latn-NG",
      "ldg": "ldg-Latn-NG",
      "ldh": "ldh-Latn-NG",
      "ldi": "ldi-Latn-CG",
      "ldj": "ldj-Latn-NG",
      "ldk": "ldk-Latn-NG",
      "ldl": "ldl-Latn-NG",
      "ldm": "ldm-Latn-GN",
      "ldn": "ldn-Latn-001",
      "ldo": "ldo-Latn-NG",
      "ldp": "ldp-Latn-NG",
      "ldq": "ldq-Latn-NG",
      "lea": "lea-Latn-CD",
      "leb": "leb-Latn-ZM",
      "lec": "lec-Latn-BO",
      "led": "led-Latn-CD",
      "lee": "lee-Latn-BF",
      "lef": "lef-Latn-GH",
      "leh": "leh-Latn-ZM",
      "lei": "lei-Latn-PG",
      "lej": "lej-Latn-CD",
      "lek": "lek-Latn-PG",
      "lel": "lel-Latn-CD",
      "lem": "lem-Latn-CM",
      "len": "len-Latn-HN",
      "leo": "leo-Latn-CM",
      "lep": "lep-Lepc-IN",
      "leq": "leq-Latn-PG",
      "ler": "ler-Latn-PG",
      "les": "les-Latn-CD",
      "let": "let-Latn-PG",
      "leu": "leu-Latn-PG",
      "lev": "lev-Latn-ID",
      "lew": "lew-Latn-ID",
      "lex": "lex-Latn-ID",
      "ley": "ley-Latn-ID",
      "lez": "lez-Cyrl-RU",
      "lfa": "lfa-Latn-CM",
      "lfn": "lfn-Latn-001",
      "lg": "lg-Latn-UG",
      "lga": "lga-Latn-SB",
      "lgb": "lgb-Latn-SB",
      "lgg": "lgg-Latn-UG",
      "lgh": "lgh-Latn-VN",
      "lgi": "lgi-Latn-ID",
      "lgk": "lgk-Latn-VU",
      "lgl": "lgl-Latn-SB",
      "lgm": "lgm-Latn-CD",
      "lgn": "lgn-Latn-ET",
      "lgo": "lgo-Latn-SS",
      "lgq": "lgq-Latn-GH",
      "lgr": "lgr-Latn-SB",
      "lgt": "lgt-Latn-PG",
      "lgu": "lgu-Latn-SB",
      "lgz": "lgz-Latn-CD",
      "lha": "lha-Latn-VN",
      "lhh": "lhh-Latn-ID",
      "lhi": "lhi-Latn-CN",
      "lhm": "lhm-Deva-NP",
      "lhn": "lhn-Latn-MY",
      "lhs": "lhs-Syrc-SY",
      "lht": "lht-Latn-VU",
      "lhu": "lhu-Latn-CN",
      "li": "li-Latn-NL",
      "lia": "lia-Latn-SL",
      "lib": "lib-Latn-PG",
      "lic": "lic-Latn-CN",
      "lid": "lid-Latn-PG",
      "lie": "lie-Latn-CD",
      "lif": "lif-Deva-NP",
      "lif-Limb": "lif-Limb-IN",
      "lig": "lig-Latn-GH",
      "lih": "lih-Latn-PG",
      "lij": "lij-Latn-IT",
      "lik": "lik-Latn-CD",
      "lil": "lil-Latn-CA",
      "lio": "lio-Latn-ID",
      "lip": "lip-Latn-GH",
      "liq": "liq-Latn-ET",
      "lir": "lir-Latn-LR",
      "lis": "lis-Lisu-CN",
      "liu": "liu-Latn-SD",
      "liv": "liv-Latn-LV",
      "liw": "liw-Latn-ID",
      "lix": "lix-Latn-ID",
      "liy": "liy-Latn-CF",
      "liz": "liz-Latn-CD",
      "lja": "lja-Latn-AU",
      "lje": "lje-Latn-ID",
      "lji": "lji-Latn-ID",
      "ljl": "ljl-Latn-ID",
      "ljp": "ljp-Latn-ID",
      "ljw": "ljw-Latn-AU",
      "ljx": "ljx-Latn-AU",
      "lka": "lka-Latn-TL",
      "lkb": "lkb-Latn-KE",
      "lkc": "lkc-Latn-VN",
      "lkd": "lkd-Latn-BR",
      "lke": "lke-Latn-UG",
      "lkh": "lkh-Tibt-BT",
      "lki": "lki-Arab-IR",
      "lkj": "lkj-Latn-MY",
      "lkl": "lkl-Latn-PG",
      "lkm": "lkm-Latn-AU",
      "lkn": "lkn-Latn-VU",
      "lko": "lko-Latn-KE",
      "lkr": "lkr-Latn-SS",
      "lks": "lks-Latn-KE",
      "lkt": "lkt-Latn-US",
      "lku": "lku-Latn-AU",
      "lky": "lky-Latn-SS",
      "lla": "lla-Latn-NG",
      "llb": "llb-Latn-MZ",
      "llc": "llc-Latn-GN",
      "lld": "lld-Latn-IT",
      "lle": "lle-Latn-PG",
      "llf": "llf-Latn-PG",
      "llg": "llg-Latn-ID",
      "lli": "lli-Latn-CG",
      "llj": "llj-Latn-AU",
      "llk": "llk-Latn-MY",
      "lll": "lll-Latn-PG",
      "llm": "llm-Latn-ID",
      "lln": "lln-Latn-TD",
      "llp": "llp-Latn-VU",
      "llq": "llq-Latn-ID",
      "llu": "llu-Latn-SB",
      "llx": "llx-Latn-FJ",
      "lma": "lma-Latn-GN",
      "lmb": "lmb-Latn-VU",
      "lmc": "lmc-Latn-AU",
      "lmd": "lmd-Latn-SD",
      "lme": "lme-Latn-TD",
      "lmf": "lmf-Latn-ID",
      "lmg": "lmg-Latn-PG",
      "lmh": "lmh-Deva-NP",
      "lmi": "lmi-Latn-CD",
      "lmj": "lmj-Latn-ID",
      "lmk": "lmk-Latn-IN",
      "lml": "lml-Latn-VU",
      "lmn": "lmn-Telu-IN",
      "lmo": "lmo-Latn-IT",
      "lmp": "lmp-Latn-CM",
      "lmq": "lmq-Latn-ID",
      "lmr": "lmr-Latn-ID",
      "lmu": "lmu-Latn-VU",
      "lmv": "lmv-Latn-FJ",
      "lmw": "lmw-Latn-US",
      "lmx": "lmx-Latn-CM",
      "lmy": "lmy-Latn-ID",
      "ln": "ln-Latn-CD",
      "lna": "lna-Latn-CF",
      "lnb": "lnb-Latn-NA",
      "lnd": "lnd-Latn-ID",
      "lng": "lng-Latn-HU",
      "lnh": "lnh-Latn-MY",
      "lni": "lni-Latn-PG",
      "lnj": "lnj-Latn-AU",
      "lnl": "lnl-Latn-CF",
      "lnm": "lnm-Latn-PG",
      "lnn": "lnn-Latn-VU",
      "lns": "lns-Latn-CM",
      "lnu": "lnu-Latn-NG",
      "lnw": "lnw-Latn-AU",
      "lnz": "lnz-Latn-CD",
      "lo": "lo-Laoo-LA",
      "loa": "loa-Latn-ID",
      "lob": "lob-Latn-BF",
      "loc": "loc-Latn-PH",
      "loe": "loe-Latn-ID",
      "log": "log-Latn-CD",
      "loh": "loh-Latn-SS",
      "loi": "loi-Latn-CI",
      "loj": "loj-Latn-PG",
      "lok": "lok-Latn-SL",
      "lol": "lol-Latn-CD",
      "lom": "lom-Latn-LR",
      "lon": "lon-Latn-MW",
      "loo": "loo-Latn-CD",
      "lop": "lop-Latn-NG",
      "loq": "loq-Latn-CD",
      "lor": "lor-Latn-CI",
      "los": "los-Latn-PG",
      "lot": "lot-Latn-SS",
      "lou": "lou-Latn-US",
      "low": "low-Latn-MY",
      "lox": "lox-Latn-ID",
      "loy": "loy-Deva-NP",
      "loz": "loz-Latn-ZM",
      "lpa": "lpa-Latn-VU",
      "lpe": "lpe-Latn-ID",
      "lpn": "lpn-Latn-MM",
      "lpo": "lpo-Plrd-CN",
      "lpx": "lpx-Latn-SS",
      "lqr": "lqr-Latn-SS",
      "lra": "lra-Latn-MY",
      "lrc": "lrc-Arab-IR",
      "lrg": "lrg-Latn-AU",
      "lri": "lri-Latn-KE",
      "lrk": "lrk-Arab-PK",
      "lrl": "lrl-Arab-IR",
      "lrm": "lrm-Latn-KE",
      "lrn": "lrn-Latn-ID",
      "lro": "lro-Latn-SD",
      "lrt": "lrt-Latn-ID",
      "lrv": "lrv-Latn-VU",
      "lrz": "lrz-Latn-VU",
      "lsa": "lsa-Arab-IR",
      "lsd": "lsd-Hebr-IL",
      "lse": "lse-Latn-CD",
      "lsi": "lsi-Latn-MM",
      "lsm": "lsm-Latn-UG",
      "lsr": "lsr-Latn-PG",
      "lss": "lss-Arab-PK",
      "lt": "lt-Latn-LT",
      "ltc": "ltc-Hant-CN",
      "ltg": "ltg-Latn-LV",
      "lth": "lth-Latn-UG",
      "lti": "lti-Latn-ID",
      "ltn": "ltn-Latn-BR",
      "lto": "lto-Latn-KE",
      "lts": "lts-Latn-KE",
      "ltu": "ltu-Latn-ID",
      "lu": "lu-Latn-CD",
      "lua": "lua-Latn-CD",
      "luc": "luc-Latn-UG",
      "lud": "lud-Latn-RU",
      "lue": "lue-Latn-ZM",
      "luf": "luf-Latn-PG",
      "lui": "lui-Latn-US",
      "luj": "luj-Latn-CD",
      "luk": "luk-Tibt-BT",
      "lul": "lul-Latn-SS",
      "lum": "lum-Latn-AO",
      "lun": "lun-Latn-ZM",
      "luo": "luo-Latn-KE",
      "lup": "lup-Latn-GA",
      "luq": "luq-Latn-CU",
      "lur": "lur-Latn-ID",
      "lus": "lus-Latn-IN",
      "lut": "lut-Latn-US",
      "luu": "luu-Deva-NP",
      "luv": "luv-Arab-OM",
      "luw": "luw-Latn-CM",
      "luy": "luy-Latn-KE",
      "luz": "luz-Arab-IR",
      "lv": "lv-Latn-LV",
      "lva": "lva-Latn-TL",
      "lvi": "lvi-Latn-LA",
      "lvk": "lvk-Latn-SB",
      "lvl": "lvl-Latn-CD",
      "lvu": "lvu-Latn-ID",
      "lwa": "lwa-Latn-CD",
      "lwe": "lwe-Latn-ID",
      "lwg": "lwg-Latn-KE",
      "lwh": "lwh-Latn-VN",
      "lwl": "lwl-Thai-TH",
      "lwm": "lwm-Thai-CN",
      "lwo": "lwo-Latn-SS",
      "lwt": "lwt-Latn-ID",
      "lww": "lww-Latn-VU",
      "lxm": "lxm-Latn-PG",
      "lya": "lya-Tibt-BT",
      "lyn": "lyn-Latn-ZM",
      "lzh": "lzh-Hans-CN",
      "lzl": "lzl-Latn-VU",
      "lzn": "lzn-Latn-MM",
      "lzz": "lzz-Latn-TR",
      "maa": "maa-Latn-MX",
      "mab": "mab-Latn-MX",
      "mad": "mad-Latn-ID",
      "mae": "mae-Latn-NG",
      "maf": "maf-Latn-CM",
      "mag": "mag-Deva-IN",
      "mai": "mai-Deva-IN",
      "maj": "maj-Latn-MX",
      "mak": "mak-Latn-ID",
      "mam": "mam-Latn-GT",
      "man": "man-Latn-GM",
      "man-GN": "man-Nkoo-GN",
      "man-Nkoo": "man-Nkoo-GN",
      "maq": "maq-Latn-MX",
      "mas": "mas-Latn-KE",
      "mat": "mat-Latn-MX",
      "mau": "mau-Latn-MX",
      "mav": "mav-Latn-BR",
      "maw": "maw-Latn-GH",
      "max": "max-Latn-ID",
      "maz": "maz-Latn-MX",
      "mba": "mba-Latn-PH",
      "mbb": "mbb-Latn-PH",
      "mbc": "mbc-Latn-BR",
      "mbd": "mbd-Latn-PH",
      "mbf": "mbf-Latn-SG",
      "mbh": "mbh-Latn-PG",
      "mbi": "mbi-Latn-PH",
      "mbj": "mbj-Latn-BR",
      "mbk": "mbk-Latn-PG",
      "mbl": "mbl-Latn-BR",
      "mbm": "mbm-Latn-CG",
      "mbn": "mbn-Latn-CO",
      "mbo": "mbo-Latn-CM",
      "mbp": "mbp-Latn-CO",
      "mbq": "mbq-Latn-PG",
      "mbr": "mbr-Latn-CO",
      "mbs": "mbs-Latn-PH",
      "mbt": "mbt-Latn-PH",
      "mbu": "mbu-Latn-NG",
      "mbv": "mbv-Latn-GN",
      "mbw": "mbw-Latn-PG",
      "mbx": "mbx-Latn-PG",
      "mby": "mby-Arab-PK",
      "mbz": "mbz-Latn-MX",
      "mca": "mca-Latn-PY",
      "mcb": "mcb-Latn-PE",
      "mcc": "mcc-Latn-PG",
      "mcd": "mcd-Latn-PE",
      "mce": "mce-Latn-MX",
      "mcf": "mcf-Latn-PE",
      "mcg": "mcg-Latn-VE",
      "mch": "mch-Latn-VE",
      "mci": "mci-Latn-PG",
      "mcj": "mcj-Latn-NG",
      "mck": "mck-Latn-AO",
      "mcl": "mcl-Latn-CO",
      "mcm": "mcm-Latn-MY",
      "mcn": "mcn-Latn-TD",
      "mco": "mco-Latn-MX",
      "mcp": "mcp-Latn-CM",
      "mcq": "mcq-Latn-PG",
      "mcr": "mcr-Latn-PG",
      "mcs": "mcs-Latn-CM",
      "mct": "mct-Latn-CM",
      "mcu": "mcu-Latn-CM",
      "mcv": "mcv-Latn-PG",
      "mcw": "mcw-Latn-TD",
      "mcx": "mcx-Latn-CF",
      "mcy": "mcy-Latn-PG",
      "mcz": "mcz-Latn-PG",
      "mda": "mda-Latn-NG",
      "mdb": "mdb-Latn-PG",
      "mdc": "mdc-Latn-PG",
      "mdd": "mdd-Latn-CM",
      "mde": "mde-Arab-TD",
      "mdf": "mdf-Cyrl-RU",
      "mdg": "mdg-Latn-TD",
      "mdh": "mdh-Latn-PH",
      "mdi": "mdi-Latn-CD",
      "mdj": "mdj-Latn-CD",
      "mdk": "mdk-Latn-CD",
      "mdm": "mdm-Latn-CD",
      "mdn": "mdn-Latn-CF",
      "mdp": "mdp-Latn-CD",
      "mdq": "mdq-Latn-CD",
      "mdr": "mdr-Latn-ID",
      "mds": "mds-Latn-PG",
      "mdt": "mdt-Latn-CG",
      "mdu": "mdu-Latn-CG",
      "mdv": "mdv-Latn-MX",
      "mdw": "mdw-Latn-CG",
      "mdx": "mdx-Ethi-ET",
      "mdy": "mdy-Ethi-ET",
      "mdz": "mdz-Latn-BR",
      "mea": "mea-Latn-CM",
      "meb": "meb-Latn-PG",
      "mec": "mec-Latn-AU",
      "med": "med-Latn-PG",
      "mee": "mee-Latn-PG",
      "meh": "meh-Latn-MX",
      "mej": "mej-Latn-ID",
      "mek": "mek-Latn-PG",
      "mel": "mel-Latn-MY",
      "mem": "mem-Latn-AU",
      "men": "men-Latn-SL",
      "meo": "meo-Latn-MY",
      "mep": "mep-Latn-AU",
      "meq": "meq-Latn-CM",
      "mer": "mer-Latn-KE",
      "mes": "mes-Latn-TD",
      "met": "met-Latn-PG",
      "meu": "meu-Latn-PG",
      "mev": "mev-Latn-LR",
      "mew": "mew-Latn-NG",
      "mey": "mey-Latn-SN",
      "mez": "mez-Latn-US",
      "mfa": "mfa-Arab-TH",
      "mfb": "mfb-Latn-ID",
      "mfc": "mfc-Latn-CD",
      "mfd": "mfd-Latn-CM",
      "mfe": "mfe-Latn-MU",
      "mff": "mff-Latn-CM",
      "mfg": "mfg-Latn-GN",
      "mfh": "mfh-Latn-CM",
      "mfi": "mfi-Arab-CM",
      "mfj": "mfj-Latn-CM",
      "mfk": "mfk-Latn-CM",
      "mfl": "mfl-Latn-NG",
      "mfm": "mfm-Latn-NG",
      "mfn": "mfn-Latn-NG",
      "mfo": "mfo-Latn-NG",
      "mfp": "mfp-Latn-ID",
      "mfq": "mfq-Latn-TG",
      "mfr": "mfr-Latn-AU",
      "mft": "mft-Latn-PG",
      "mfu": "mfu-Latn-AO",
      "mfv": "mfv-Latn-SN",
      "mfw": "mfw-Latn-PG",
      "mfx": "mfx-Latn-ET",
      "mfy": "mfy-Latn-MX",
      "mfz": "mfz-Latn-SS",
      "mg": "mg-Latn-MG",
      "mga": "mga-Latg-IE",
      "mgb": "mgb-Latn-TD",
      "mgc": "mgc-Latn-SS",
      "mgd": "mgd-Latn-SS",
      "mge": "mge-Latn-TD",
      "mgf": "mgf-Latn-ID",
      "mgg": "mgg-Latn-CM",
      "mgh": "mgh-Latn-MZ",
      "mgi": "mgi-Latn-NG",
      "mgj": "mgj-Latn-NG",
      "mgk": "mgk-Latn-ID",
      "mgl": "mgl-Latn-PG",
      "mgm": "mgm-Latn-TL",
      "mgn": "mgn-Latn-CF",
      "mgo": "mgo-Latn-CM",
      "mgp": "mgp-Deva-NP",
      "mgq": "mgq-Latn-TZ",
      "mgr": "mgr-Latn-ZM",
      "mgs": "mgs-Latn-TZ",
      "mgt": "mgt-Latn-PG",
      "mgu": "mgu-Latn-PG",
      "mgv": "mgv-Latn-TZ",
      "mgw": "mgw-Latn-TZ",
      "mgy": "mgy-Latn-TZ",
      "mgz": "mgz-Latn-TZ",
      "mh": "mh-Latn-MH",
      "mhb": "mhb-Latn-GA",
      "mhc": "mhc-Latn-MX",
      "mhd": "mhd-Latn-TZ",
      "mhe": "mhe-Latn-MY",
      "mhf": "mhf-Latn-PG",
      "mhg": "mhg-Latn-AU",
      "mhi": "mhi-Latn-UG",
      "mhj": "mhj-Arab-AF",
      "mhk": "mhk-Latn-CM",
      "mhl": "mhl-Latn-PG",
      "mhm": "mhm-Latn-MZ",
      "mhn": "mhn-Latn-IT",
      "mho": "mho-Latn-ZM",
      "mhp": "mhp-Latn-ID",
      "mhq": "mhq-Latn-US",
      "mhs": "mhs-Latn-ID",
      "mht": "mht-Latn-VE",
      "mhu": "mhu-Latn-IN",
      "mhw": "mhw-Latn-BW",
      "mhx": "mhx-Latn-MM",
      "mhy": "mhy-Latn-ID",
      "mhz": "mhz-Latn-ID",
      "mi": "mi-Latn-NZ",
      "mia": "mia-Latn-US",
      "mib": "mib-Latn-MX",
      "mic": "mic-Latn-CA",
      "mid": "mid-Mand-IQ",
      "mie": "mie-Latn-MX",
      "mif": "mif-Latn-CM",
      "mig": "mig-Latn-MX",
      "mih": "mih-Latn-MX",
      "mii": "mii-Latn-MX",
      "mij": "mij-Latn-CM",
      "mik": "mik-Latn-US",
      "mil": "mil-Latn-MX",
      "mim": "mim-Latn-MX",
      "min": "min-Latn-ID",
      "mio": "mio-Latn-MX",
      "mip": "mip-Latn-MX",
      "miq": "miq-Latn-NI",
      "mir": "mir-Latn-MX",
      "mit": "mit-Latn-MX",
      "miu": "miu-Latn-MX",
      "miw": "miw-Latn-PG",
      "mix": "mix-Latn-MX",
      "miy": "miy-Latn-MX",
      "miz": "miz-Latn-MX",
      "mjb": "mjb-Latn-TL",
      "mjc": "mjc-Latn-MX",
      "mjd": "mjd-Latn-US",
      "mje": "mje-Latn-TD",
      "mjg": "mjg-Latn-CN",
      "mjh": "mjh-Latn-TZ",
      "mji": "mji-Latn-CN",
      "mjj": "mjj-Latn-PG",
      "mjk": "mjk-Latn-PG",
      "mjl": "mjl-Deva-IN",
      "mjm": "mjm-Latn-PG",
      "mjn": "mjn-Latn-PG",
      "mjq": "mjq-Mlym-IN",
      "mjr": "mjr-Mlym-IN",
      "mjs": "mjs-Latn-NG",
      "mjt": "mjt-Deva-IN",
      "mju": "mju-Telu-IN",
      "mjv": "mjv-Mlym-IN",
      "mjw": "mjw-Latn-IN",
      "mjx": "mjx-Latn-BD",
      "mjy": "mjy-Latn-US",
      "mjz": "mjz-Deva-NP",
      "mk": "mk-Cyrl-MK",
      "mka": "mka-Latn-CI",
      "mkb": "mkb-Deva-IN",
      "mkc": "mkc-Latn-PG",
      "mke": "mke-Deva-IN",
      "mkf": "mkf-Latn-NG",
      "mki": "mki-Arab-PK",
      "mkj": "mkj-Latn-FM",
      "mkk": "mkk-Latn-CM",
      "mkl": "mkl-Latn-BJ",
      "mkm": "mkm-Thai-TH",
      "mkn": "mkn-Latn-ID",
      "mko": "mko-Latn-NG",
      "mkp": "mkp-Latn-PG",
      "mkr": "mkr-Latn-PG",
      "mks": "mks-Latn-MX",
      "mkt": "mkt-Latn-NC",
      "mku": "mku-Latn-GN",
      "mkv": "mkv-Latn-VU",
      "mkw": "mkw-Latn-CG",
      "mkx": "mkx-Latn-PH",
      "mky": "mky-Latn-ID",
      "mkz": "mkz-Latn-TL",
      "ml": "ml-Mlym-IN",
      "mla": "mla-Latn-VU",
      "mlb": "mlb-Latn-CM",
      "mlc": "mlc-Latn-VN",
      "mle": "mle-Latn-PG",
      "mlf": "mlf-Thai-LA",
      "mlh": "mlh-Latn-PG",
      "mli": "mli-Latn-ID",
      "mlj": "mlj-Latn-TD",
      "mlk": "mlk-Latn-KE",
      "mll": "mll-Latn-VU",
      "mln": "mln-Latn-SB",
      "mlo": "mlo-Latn-SN",
      "mlp": "mlp-Latn-PG",
      "mlq": "mlq-Latn-SN",
      "mlr": "mlr-Latn-CM",
      "mls": "mls-Latn-SD",
      "mlu": "mlu-Latn-SB",
      "mlv": "mlv-Latn-VU",
      "mlw": "mlw-Latn-CM",
      "mlx": "mlx-Latn-VU",
      "mlz": "mlz-Latn-PH",
      "mma": "mma-Latn-NG",
      "mmb": "mmb-Latn-ID",
      "mmc": "mmc-Latn-MX",
      "mmd": "mmd-Latn-CN",
      "mme": "mme-Latn-VU",
      "mmf": "mmf-Latn-NG",
      "mmg": "mmg-Latn-VU",
      "mmh": "mmh-Latn-BR",
      "mmi": "mmi-Latn-PG",
      "mmm": "mmm-Latn-VU",
      "mmn": "mmn-Latn-PH",
      "mmo": "mmo-Latn-PG",
      "mmp": "mmp-Latn-PG",
      "mmq": "mmq-Latn-PG",
      "mmr": "mmr-Latn-CN",
      "mmt": "mmt-Latn-PG",
      "mmu": "mmu-Latn-CM",
      "mmv": "mmv-Latn-BR",
      "mmw": "mmw-Latn-VU",
      "mmx": "mmx-Latn-PG",
      "mmy": "mmy-Latn-TD",
      "mmz": "mmz-Latn-CD",
      "mn": "mn-Cyrl-MN",
      "mn-CN": "mn-Mong-CN",
      "mn-Mong": "mn-Mong-CN",
      "mna": "mna-Latn-PG",
      "mnb": "mnb-Latn-ID",
      "mnc": "mnc-Mong-CN",
      "mnd": "mnd-Latn-BR",
      "mne": "mne-Latn-TD",
      "mnf": "mnf-Latn-CM",
      "mng": "mng-Latn-VN",
      "mnh": "mnh-Latn-CD",
      "mni": "mni-Beng-IN",
      "mnj": "mnj-Arab-AF",
      "mnl": "mnl-Latn-VU",
      "mnm": "mnm-Latn-PG",
      "mnn": "mnn-Latn-VN",
      "mnp": "mnp-Latn-CN",
      "mnq": "mnq-Latn-MY",
      "mnr": "mnr-Latn-US",
      "mns": "mns-Cyrl-RU",
      "mnu": "mnu-Latn-ID",
      "mnv": "mnv-Latn-SB",
      "mnw": "mnw-Mymr-MM",
      "mnx": "mnx-Latn-ID",
      "mny": "mny-Latn-MZ",
      "mnz": "mnz-Latn-ID",
      "mo": "mo-Latn-RO",
      "moa": "moa-Latn-CI",
      "moc": "moc-Latn-AR",
      "mod": "mod-Latn-US",
      "moe": "moe-Latn-CA",
      "mog": "mog-Latn-ID",
      "moh": "moh-Latn-CA",
      "moi": "moi-Latn-NG",
      "moj": "moj-Latn-CG",
      "mok": "mok-Latn-ID",
      "mom": "mom-Latn-NI",
      "moo": "moo-Latn-VN",
      "mop": "mop-Latn-BZ",
      "moq": "moq-Latn-ID",
      "mor": "mor-Latn-SD",
      "mos": "mos-Latn-BF",
      "mot": "mot-Latn-CO",
      "mou": "mou-Latn-TD",
      "mov": "mov-Latn-US",
      "mow": "mow-Latn-CG",
      "mox": "mox-Latn-PG",
      "moy": "moy-Latn-ET",
      "moz": "moz-Latn-TD",
      "mpa": "mpa-Latn-TZ",
      "mpb": "mpb-Latn-AU",
      "mpc": "mpc-Latn-AU",
      "mpd": "mpd-Latn-BR",
      "mpe": "mpe-Latn-ET",
      "mpg": "mpg-Latn-TD",
      "mph": "mph-Latn-AU",
      "mpi": "mpi-Latn-CM",
      "mpj": "mpj-Latn-AU",
      "mpk": "mpk-Latn-TD",
      "mpl": "mpl-Latn-PG",
      "mpm": "mpm-Latn-MX",
      "mpn": "mpn-Latn-PG",
      "mpo": "mpo-Latn-PG",
      "mpp": "mpp-Latn-PG",
      "mpq": "mpq-Latn-BR",
      "mpr": "mpr-Latn-SB",
      "mps": "mps-Latn-PG",
      "mpt": "mpt-Latn-PG",
      "mpu": "mpu-Latn-BR",
      "mpv": "mpv-Latn-PG",
      "mpw": "mpw-Latn-BR",
      "mpx": "mpx-Latn-PG",
      "mpy": "mpy-Latn-ID",
      "mpz": "mpz-Thai-TH",
      "mqa": "mqa-Latn-ID",
      "mqb": "mqb-Latn-CM",
      "mqc": "mqc-Latn-ID",
      "mqe": "mqe-Latn-PG",
      "mqf": "mqf-Latn-ID",
      "mqg": "mqg-Latn-ID",
      "mqh": "mqh-Latn-MX",
      "mqi": "mqi-Latn-ID",
      "mqj": "mqj-Latn-ID",
      "mqk": "mqk-Latn-PH",
      "mql": "mql-Latn-BJ",
      "mqm": "mqm-Latn-PF",
      "mqn": "mqn-Latn-ID",
      "mqo": "mqo-Latn-ID",
      "mqp": "mqp-Latn-ID",
      "mqq": "mqq-Latn-MY",
      "mqr": "mqr-Latn-ID",
      "mqs": "mqs-Latn-ID",
      "mqu": "mqu-Latn-SS",
      "mqv": "mqv-Latn-PG",
      "mqw": "mqw-Latn-PG",
      "mqx": "mqx-Latn-ID",
      "mqy": "mqy-Latn-ID",
      "mqz": "mqz-Latn-PG",
      "mr": "mr-Deva-IN",
      "mra": "mra-Thai-TH",
      "mrb": "mrb-Latn-VU",
      "mrc": "mrc-Latn-US",
      "mrd": "mrd-Deva-NP",
      "mrf": "mrf-Latn-ID",
      "mrg": "mrg-Latn-IN",
      "mrh": "mrh-Latn-IN",
      "mrj": "mrj-Cyrl-RU",
      "mrk": "mrk-Latn-NC",
      "mrl": "mrl-Latn-FM",
      "mrm": "mrm-Latn-VU",
      "mrn": "mrn-Latn-SB",
      "mro": "mro-Mroo-BD",
      "mrp": "mrp-Latn-VU",
      "mrq": "mrq-Latn-PF",
      "mrr": "mrr-Deva-IN",
      "mrs": "mrs-Latn-VU",
      "mrt": "mrt-Latn-NG",
      "mru": "mru-Latn-CM",
      "mrv": "mrv-Latn-PF",
      "mrw": "mrw-Latn-PH",
      "mrx": "mrx-Latn-ID",
      "mry": "mry-Latn-PH",
      "mrz": "mrz-Latn-ID",
      "ms": "ms-Latn-MY",
      "ms-CC": "ms-Arab-CC",
      "msb": "msb-Latn-PH",
      "msc": "msc-Latn-GN",
      "mse": "mse-Latn-TD",
      "msf": "msf-Latn-ID",
      "msg": "msg-Latn-ID",
      "msh": "msh-Latn-MG",
      "msi": "msi-Latn-MY",
      "msj": "msj-Latn-CD",
      "msk": "msk-Latn-PH",
      "msl": "msl-Latn-ID",
      "msm": "msm-Latn-PH",
      "msn": "msn-Latn-VU",
      "mso": "mso-Latn-ID",
      "msp": "msp-Latn-BR",
      "msq": "msq-Latn-NC",
      "mss": "mss-Latn-ID",
      "msu": "msu-Latn-PG",
      "msv": "msv-Latn-CM",
      "msw": "msw-Latn-GW",
      "msx": "msx-Latn-PG",
      "msy": "msy-Latn-PG",
      "msz": "msz-Latn-PG",
      "mt": "mt-Latn-MT",
      "mta": "mta-Latn-PH",
      "mtb": "mtb-Latn-CI",
      "mtc": "mtc-Latn-PG",
      "mtd": "mtd-Latn-ID",
      "mte": "mte-Latn-SB",
      "mtf": "mtf-Latn-PG",
      "mtg": "mtg-Latn-ID",
      "mth": "mth-Latn-ID",
      "mti": "mti-Latn-PG",
      "mtj": "mtj-Latn-ID",
      "mtk": "mtk-Latn-CM",
      "mtl": "mtl-Latn-NG",
      "mtm": "mtm-Cyrl-RU",
      "mtn": "mtn-Latn-NI",
      "mto": "mto-Latn-MX",
      "mtp": "mtp-Latn-BO",
      "mtq": "mtq-Latn-VN",
      "mtr": "mtr-Deva-IN",
      "mts": "mts-Latn-PE",
      "mtt": "mtt-Latn-VU",
      "mtu": "mtu-Latn-MX",
      "mtv": "mtv-Latn-PG",
      "mtw": "mtw-Latn-PH",
      "mtx": "mtx-Latn-MX",
      "mty": "mty-Latn-PG",
      "mua": "mua-Latn-CM",
      "mub": "mub-Latn-TD",
      "muc": "muc-Latn-CM",
      "mud": "mud-Cyrl-RU",
      "mue": "mue-Latn-EC",
      "mug": "mug-Latn-CM",
      "muh": "muh-Latn-SS",
      "mui": "mui-Latn-ID",
      "muj": "muj-Latn-TD",
      "muk": "muk-Tibt-NP",
      "mum": "mum-Latn-PG",
      "muo": "muo-Latn-CM",
      "muq": "muq-Latn-CN",
      "mur": "mur-Latn-SS",
      "mus": "mus-Latn-US",
      "mut": "mut-Deva-IN",
      "muu": "muu-Latn-KE",
      "muv": "muv-Taml-IN",
      "mux": "mux-Latn-PG",
      "muy": "muy-Latn-CM",
      "muz": "muz-Ethi-ET",
      "mva": "mva-Latn-PG",
      "mvd": "mvd-Latn-ID",
      "mve": "mve-Arab-PK",
      "mvf": "mvf-Mong-CN",
      "mvg": "mvg-Latn-MX",
      "mvh": "mvh-Latn-TD",
      "mvk": "mvk-Latn-PG",
      "mvl": "mvl-Latn-AU",
      "mvn": "mvn-Latn-PG",
      "mvo": "mvo-Latn-SB",
      "mvp": "mvp-Latn-ID",
      "mvq": "mvq-Latn-PG",
      "mvr": "mvr-Latn-ID",
      "mvs": "mvs-Latn-ID",
      "mvt": "mvt-Latn-VU",
      "mvu": "mvu-Latn-TD",
      "mvv": "mvv-Latn-MY",
      "mvw": "mvw-Latn-TZ",
      "mvx": "mvx-Latn-ID",
      "mvy": "mvy-Arab-PK",
      "mvz": "mvz-Ethi-ET",
      "mwa": "mwa-Latn-PG",
      "mwb": "mwb-Latn-PG",
      "mwc": "mwc-Latn-PG",
      "mwe": "mwe-Latn-TZ",
      "mwf": "mwf-Latn-AU",
      "mwg": "mwg-Latn-PG",
      "mwh": "mwh-Latn-PG",
      "mwi": "mwi-Latn-VU",
      "mwk": "mwk-Latn-ML",
      "mwl": "mwl-Latn-PT",
      "mwm": "mwm-Latn-TD",
      "mwn": "mwn-Latn-ZM",
      "mwo": "mwo-Latn-VU",
      "mwp": "mwp-Latn-AU",
      "mwq": "mwq-Latn-MM",
      "mwr": "mwr-Deva-IN",
      "mws": "mws-Latn-KE",
      "mwt": "mwt-Mymr-MM",
      "mwu": "mwu-Latn-SS",
      "mwv": "mwv-Latn-ID",
      "mww": "mww-Hmnp-US",
      "mwz": "mwz-Latn-CD",
      "mxa": "mxa-Latn-MX",
      "mxb": "mxb-Latn-MX",
      "mxc": "mxc-Latn-ZW",
      "mxd": "mxd-Latn-ID",
      "mxe": "mxe-Latn-VU",
      "mxf": "mxf-Latn-CM",
      "mxg": "mxg-Latn-AO",
      "mxh": "mxh-Latn-CD",
      "mxi": "mxi-Latn-ES",
      "mxj": "mxj-Latn-IN",
      "mxk": "mxk-Latn-PG",
      "mxl": "mxl-Latn-BJ",
      "mxm": "mxm-Latn-PG",
      "mxn": "mxn-Latn-ID",
      "mxo": "mxo-Latn-ZM",
      "mxp": "mxp-Latn-MX",
      "mxq": "mxq-Latn-MX",
      "mxr": "mxr-Latn-MY",
      "mxs": "mxs-Latn-MX",
      "mxt": "mxt-Latn-MX",
      "mxu": "mxu-Latn-CM",
      "mxv": "mxv-Latn-MX",
      "mxw": "mxw-Latn-PG",
      "mxx": "mxx-Latn-CI",
      "mxy": "mxy-Latn-MX",
      "mxz": "mxz-Latn-ID",
      "my": "my-Mymr-MM",
      "myb": "myb-Latn-TD",
      "myc": "myc-Latn-CD",
      "mye": "mye-Latn-GA",
      "myf": "myf-Latn-ET",
      "myg": "myg-Latn-CM",
      "myh": "myh-Latn-US",
      "myj": "myj-Latn-SS",
      "myk": "myk-Latn-ML",
      "myl": "myl-Latn-ID",
      "mym": "mym-Ethi-ET",
      "myp": "myp-Latn-BR",
      "myr": "myr-Latn-PE",
      "myu": "myu-Latn-BR",
      "myv": "myv-Cyrl-RU",
      "myw": "myw-Latn-PG",
      "myx": "myx-Latn-UG",
      "myy": "myy-Latn-CO",
      "myz": "myz-Mand-IR",
      "mza": "mza-Latn-MX",
      "mzd": "mzd-Latn-CM",
      "mze": "mze-Latn-PG",
      "mzh": "mzh-Latn-AR",
      "mzi": "mzi-Latn-MX",
      "mzj": "mzj-Latn-LR",
      "mzk": "mzk-Latn-NG",
      "mzl": "mzl-Latn-MX",
      "mzm": "mzm-Latn-NG",
      "mzn": "mzn-Arab-IR",
      "mzo": "mzo-Latn-BR",
      "mzp": "mzp-Latn-BO",
      "mzq": "mzq-Latn-ID",
      "mzr": "mzr-Latn-BR",
      "mzt": "mzt-Latn-MY",
      "mzu": "mzu-Latn-PG",
      "mzv": "mzv-Latn-CF",
      "mzw": "mzw-Latn-GH",
      "mzx": "mzx-Latn-GY",
      "mzz": "mzz-Latn-PG",
      "na": "na-Latn-NR",
      "naa": "naa-Latn-ID",
      "nab": "nab-Latn-BR",
      "nac": "nac-Latn-PG",
      "nae": "nae-Latn-ID",
      "naf": "naf-Latn-PG",
      "nag": "nag-Latn-IN",
      "naj": "naj-Latn-GN",
      "nak": "nak-Latn-PG",
      "nal": "nal-Latn-PG",
      "nam": "nam-Latn-AU",
      "nan": "nan-Hans-CN",
      "nao": "nao-Deva-NP",
      "nap": "nap-Latn-IT",
      "naq": "naq-Latn-NA",
      "nar": "nar-Latn-NG",
      "nas": "nas-Latn-PG",
      "nat": "nat-Latn-NG",
      "naw": "naw-Latn-GH",
      "nax": "nax-Latn-PG",
      "nay": "nay-Latn-AU",
      "naz": "naz-Latn-MX",
      "nb": "nb-Latn-NO",
      "nba": "nba-Latn-AO",
      "nbb": "nbb-Latn-NG",
      "nbc": "nbc-Latn-IN",
      "nbd": "nbd-Latn-CD",
      "nbe": "nbe-Latn-IN",
      "nbh": "nbh-Latn-NG",
      "nbi": "nbi-Latn-IN",
      "nbj": "nbj-Latn-AU",
      "nbk": "nbk-Latn-PG",
      "nbm": "nbm-Latn-CF",
      "nbn": "nbn-Latn-ID",
      "nbo": "nbo-Latn-NG",
      "nbp": "nbp-Latn-NG",
      "nbq": "nbq-Latn-ID",
      "nbr": "nbr-Latn-NG",
      "nbt": "nbt-Latn-IN",
      "nbu": "nbu-Latn-IN",
      "nbv": "nbv-Latn-CM",
      "nbw": "nbw-Latn-CD",
      "nby": "nby-Latn-PG",
      "nca": "nca-Latn-PG",
      "ncb": "ncb-Latn-IN",
      "ncc": "ncc-Latn-PG",
      "ncd": "ncd-Deva-NP",
      "nce": "nce-Latn-PG",
      "ncf": "ncf-Latn-PG",
      "ncg": "ncg-Latn-CA",
      "nch": "nch-Latn-MX",
      "nci": "nci-Latn-MX",
      "ncj": "ncj-Latn-MX",
      "nck": "nck-Latn-AU",
      "ncl": "ncl-Latn-MX",
      "ncm": "ncm-Latn-PG",
      "ncn": "ncn-Latn-PG",
      "nco": "nco-Latn-PG",
      "ncq": "ncq-Laoo-LA",
      "ncr": "ncr-Latn-CM",
      "nct": "nct-Latn-IN",
      "ncu": "ncu-Latn-GH",
      "ncx": "ncx-Latn-MX",
      "ncz": "ncz-Latn-US",
      "nd": "nd-Latn-ZW",
      "nda": "nda-Latn-CG",
      "ndb": "ndb-Latn-CM",
      "ndc": "ndc-Latn-MZ",
      "ndd": "ndd-Latn-NG",
      "ndf": "ndf-Cyrl-RU",
      "ndg": "ndg-Latn-TZ",
      "ndh": "ndh-Latn-TZ",
      "ndi": "ndi-Latn-NG",
      "ndj": "ndj-Latn-TZ",
      "ndk": "ndk-Latn-CD",
      "ndl": "ndl-Latn-CD",
      "ndm": "ndm-Latn-TD",
      "ndn": "ndn-Latn-CG",
      "ndp": "ndp-Latn-UG",
      "ndq": "ndq-Latn-AO",
      "ndr": "ndr-Latn-NG",
      "nds": "nds-Latn-DE",
      "ndt": "ndt-Latn-CD",
      "ndu": "ndu-Latn-CM",
      "ndv": "ndv-Latn-SN",
      "ndw": "ndw-Latn-CD",
      "ndx": "ndx-Latn-ID",
      "ndy": "ndy-Latn-CF",
      "ndz": "ndz-Latn-SS",
      "ne": "ne-Deva-NP",
      "nea": "nea-Latn-ID",
      "neb": "neb-Latn-CI",
      "nec": "nec-Latn-ID",
      "ned": "ned-Latn-NG",
      "nee": "nee-Latn-NC",
      "neg": "neg-Cyrl-RU",
      "neh": "neh-Tibt-BT",
      "nei": "nei-Xsux-TR",
      "nej": "nej-Latn-PG",
      "nek": "nek-Latn-NC",
      "nem": "nem-Latn-NC",
      "nen": "nen-Latn-NC",
      "neo": "neo-Latn-VN",
      "neq": "neq-Latn-MX",
      "ner": "ner-Latn-ID",
      "net": "net-Latn-PG",
      "neu": "neu-Latn-001",
      "new": "new-Deva-NP",
      "nex": "nex-Latn-PG",
      "ney": "ney-Latn-CI",
      "nez": "nez-Latn-US",
      "nfa": "nfa-Latn-ID",
      "nfd": "nfd-Latn-NG",
      "nfl": "nfl-Latn-SB",
      "nfr": "nfr-Latn-GH",
      "nfu": "nfu-Latn-CM",
      "ng": "ng-Latn-NA",
      "nga": "nga-Latn-CD",
      "ngb": "ngb-Latn-CD",
      "ngc": "ngc-Latn-CD",
      "ngd": "ngd-Latn-CF",
      "nge": "nge-Latn-CM",
      "ngg": "ngg-Latn-CF",
      "ngh": "ngh-Latn-ZA",
      "ngi": "ngi-Latn-NG",
      "ngj": "ngj-Latn-CM",
      "ngk": "ngk-Latn-AU",
      "ngl": "ngl-Latn-MZ",
      "ngm": "ngm-Latn-FM",
      "ngn": "ngn-Latn-CM",
      "ngp": "ngp-Latn-TZ",
      "ngq": "ngq-Latn-TZ",
      "ngr": "ngr-Latn-SB",
      "ngs": "ngs-Latn-NG",
      "ngt": "ngt-Laoo-LA",
      "ngu": "ngu-Latn-MX",
      "ngv": "ngv-Latn-CM",
      "ngw": "ngw-Latn-NG",
      "ngx": "ngx-Latn-NG",
      "ngy": "ngy-Latn-CM",
      "ngz": "ngz-Latn-CG",
      "nha": "nha-Latn-AU",
      "nhb": "nhb-Latn-CI",
      "nhc": "nhc-Latn-MX",
      "nhd": "nhd-Latn-PY",
      "nhe": "nhe-Latn-MX",
      "nhf": "nhf-Latn-AU",
      "nhg": "nhg-Latn-MX",
      "nhi": "nhi-Latn-MX",
      "nhk": "nhk-Latn-MX",
      "nhm": "nhm-Latn-MX",
      "nhn": "nhn-Latn-MX",
      "nho": "nho-Latn-PG",
      "nhp": "nhp-Latn-MX",
      "nhq": "nhq-Latn-MX",
      "nhr": "nhr-Latn-BW",
      "nht": "nht-Latn-MX",
      "nhu": "nhu-Latn-CM",
      "nhv": "nhv-Latn-MX",
      "nhw": "nhw-Latn-MX",
      "nhx": "nhx-Latn-MX",
      "nhy": "nhy-Latn-MX",
      "nhz": "nhz-Latn-MX",
      "nia": "nia-Latn-ID",
      "nib": "nib-Latn-PG",
      "nid": "nid-Latn-AU",
      "nie": "nie-Latn-TD",
      "nif": "nif-Latn-PG",
      "nig": "nig-Latn-AU",
      "nih": "nih-Latn-TZ",
      "nii": "nii-Latn-PG",
      "nij": "nij-Latn-ID",
      "nil": "nil-Latn-ID",
      "nim": "nim-Latn-TZ",
      "nin": "nin-Latn-NG",
      "nio": "nio-Cyrl-RU",
      "niq": "niq-Latn-KE",
      "nir": "nir-Latn-ID",
      "nis": "nis-Latn-PG",
      "nit": "nit-Telu-IN",
      "niu": "niu-Latn-NU",
      "niv": "niv-Cyrl-RU",
      "niw": "niw-Latn-PG",
      "nix": "nix-Latn-CD",
      "niy": "niy-Latn-CD",
      "niz": "niz-Latn-PG",
      "nja": "nja-Latn-NG",
      "njb": "njb-Latn-IN",
      "njd": "njd-Latn-TZ",
      "njh": "njh-Latn-IN",
      "nji": "nji-Latn-AU",
      "njj": "njj-Latn-CM",
      "njl": "njl-Latn-SS",
      "njm": "njm-Latn-IN",
      "njn": "njn-Latn-IN",
      "njo": "njo-Latn-IN",
      "njr": "njr-Latn-NG",
      "njs": "njs-Latn-ID",
      "njt": "njt-Latn-SR",
      "nju": "nju-Latn-AU",
      "njx": "njx-Latn-CG",
      "njy": "njy-Latn-CM",
      "njz": "njz-Latn-IN",
      "nka": "nka-Latn-ZM",
      "nkb": "nkb-Latn-IN",
      "nkc": "nkc-Latn-CM",
      "nkd": "nkd-Latn-IN",
      "nke": "nke-Latn-SB",
      "nkf": "nkf-Latn-IN",
      "nkg": "nkg-Latn-PG",
      "nkh": "nkh-Latn-IN",
      "nki": "nki-Latn-IN",
      "nkj": "nkj-Latn-ID",
      "nkk": "nkk-Latn-VU",
      "nkm": "nkm-Latn-PG",
      "nkn": "nkn-Latn-AO",
      "nko": "nko-Latn-GH",
      "nkq": "nkq-Latn-GH",
      "nkr": "nkr-Latn-FM",
      "nks": "nks-Latn-ID",
      "nkt": "nkt-Latn-TZ",
      "nku": "nku-Latn-CI",
      "nkv": "nkv-Latn-MW",
      "nkw": "nkw-Latn-CD",
      "nkx": "nkx-Latn-NG",
      "nkz": "nkz-Latn-NG",
      "nl": "nl-Latn-NL",
      "nla": "nla-Latn-CM",
      "nlc": "nlc-Latn-ID",
      "nle": "nle-Latn-KE",
      "nlg": "nlg-Latn-SB",
      "nli": "nli-Arab-AF",
      "nlj": "nlj-Latn-CD",
      "nlk": "nlk-Latn-ID",
      "nlm": "nlm-Arab-PK",
      "nlo": "nlo-Latn-CD",
      "nlq": "nlq-Latn-MM",
      "nlu": "nlu-Latn-GH",
      "nlv": "nlv-Latn-MX",
      "nlw": "nlw-Latn-AU",
      "nlx": "nlx-Deva-IN",
      "nly": "nly-Latn-AU",
      "nlz": "nlz-Latn-SB",
      "nma": "nma-Latn-IN",
      "nmb": "nmb-Latn-VU",
      "nmc": "nmc-Latn-TD",
      "nmd": "nmd-Latn-GA",
      "nme": "nme-Latn-IN",
      "nmf": "nmf-Latn-IN",
      "nmg": "nmg-Latn-CM",
      "nmh": "nmh-Latn-IN",
      "nmi": "nmi-Latn-NG",
      "nmj": "nmj-Latn-CF",
      "nmk": "nmk-Latn-VU",
      "nml": "nml-Latn-CM",
      "nmm": "nmm-Deva-NP",
      "nmn": "nmn-Latn-BW",
      "nmo": "nmo-Latn-IN",
      "nmp": "nmp-Latn-AU",
      "nmq": "nmq-Latn-ZW",
      "nmr": "nmr-Latn-CM",
      "nms": "nms-Latn-VU",
      "nmt": "nmt-Latn-FM",
      "nmu": "nmu-Latn-US",
      "nmv": "nmv-Latn-AU",
      "nmw": "nmw-Latn-PG",
      "nmx": "nmx-Latn-PG",
      "nmz": "nmz-Latn-TG",
      "nn": "nn-Latn-NO",
      "nna": "nna-Latn-AU",
      "nnb": "nnb-Latn-CD",
      "nnc": "nnc-Latn-TD",
      "nnd": "nnd-Latn-VU",
      "nne": "nne-Latn-AO",
      "nnf": "nnf-Latn-PG",
      "nng": "nng-Latn-IN",
      "nnh": "nnh-Latn-CM",
      "nni": "nni-Latn-ID",
      "nnj": "nnj-Latn-ET",
      "nnk": "nnk-Latn-PG",
      "nnl": "nnl-Latn-IN",
      "nnm": "nnm-Latn-PG",
      "nnn": "nnn-Latn-TD",
      "nnp": "nnp-Wcho-IN",
      "nnq": "nnq-Latn-TZ",
      "nnr": "nnr-Latn-AU",
      "nnt": "nnt-Latn-US",
      "nnu": "nnu-Latn-GH",
      "nnv": "nnv-Latn-AU",
      "nnw": "nnw-Latn-BF",
      "nny": "nny-Latn-AU",
      "nnz": "nnz-Latn-CM",
      "no": "no-Latn-NO",
      "noa": "noa-Latn-CO",
      "noc": "noc-Latn-PG",
      "nod": "nod-Lana-TH",
      "noe": "noe-Deva-IN",
      "nof": "nof-Latn-PG",
      "nog": "nog-Cyrl-RU",
      "noh": "noh-Latn-PG",
      "noi": "noi-Deva-IN",
      "noj": "noj-Latn-CO",
      "nok": "nok-Latn-US",
      "non": "non-Runr-SE",
      "nop": "nop-Latn-PG",
      "noq": "noq-Latn-CD",
      "nos": "nos-Yiii-CN",
      "not": "not-Latn-PE",
      "nou": "nou-Latn-PG",
      "nov": "nov-Latn-001",
      "now": "now-Latn-TZ",
      "noy": "noy-Latn-TD",
      "npb": "npb-Tibt-BT",
      "npg": "npg-Latn-MM",
      "nph": "nph-Latn-IN",
      "npl": "npl-Latn-MX",
      "npn": "npn-Latn-PG",
      "npo": "npo-Latn-IN",
      "nps": "nps-Latn-ID",
      "npu": "npu-Latn-IN",
      "npx": "npx-Latn-SB",
      "npy": "npy-Latn-ID",
      "nqg": "nqg-Latn-BJ",
      "nqk": "nqk-Latn-BJ",
      "nql": "nql-Latn-AO",
      "nqm": "nqm-Latn-ID",
      "nqn": "nqn-Latn-PG",
      "nqo": "nqo-Nkoo-GN",
      "nqq": "nqq-Latn-MM",
      "nqt": "nqt-Latn-NG",
      "nqy": "nqy-Latn-MM",
      "nr": "nr-Latn-ZA",
      "nra": "nra-Latn-GA",
      "nrb": "nrb-Latn-ER",
      "nre": "nre-Latn-IN",
      "nrf": "nrf-Latn-JE",
      "nrg": "nrg-Latn-VU",
      "nri": "nri-Latn-IN",
      "nrk": "nrk-Latn-AU",
      "nrl": "nrl-Latn-AU",
      "nrm": "nrm-Latn-MY",
      "nrn": "nrn-Runr-GB",
      "nrp": "nrp-Latn-IT",
      "nru": "nru-Latn-CN",
      "nrx": "nrx-Latn-AU",
      "nrz": "nrz-Latn-PG",
      "nsa": "nsa-Latn-IN",
      "nsb": "nsb-Latn-ZA",
      "nsc": "nsc-Latn-NG",
      "nsd": "nsd-Yiii-CN",
      "nse": "nse-Latn-ZM",
      "nsf": "nsf-Yiii-CN",
      "nsg": "nsg-Latn-TZ",
      "nsh": "nsh-Latn-CM",
      "nsk": "nsk-Cans-CA",
      "nsm": "nsm-Latn-IN",
      "nsn": "nsn-Latn-PG",
      "nso": "nso-Latn-ZA",
      "nsq": "nsq-Latn-US",
      "nss": "nss-Latn-PG",
      "nst": "nst-Tnsa-IN",
      "nsu": "nsu-Latn-MX",
      "nsv": "nsv-Yiii-CN",
      "nsw": "nsw-Latn-VU",
      "nsx": "nsx-Latn-AO",
      "nsy": "nsy-Latn-ID",
      "nsz": "nsz-Latn-US",
      "ntd": "ntd-Latn-MY",
      "nte": "nte-Latn-MZ",
      "ntg": "ntg-Latn-AU",
      "nti": "nti-Latn-BF",
      "ntj": "ntj-Latn-AU",
      "ntk": "ntk-Latn-TZ",
      "ntm": "ntm-Latn-BJ",
      "nto": "nto-Latn-CD",
      "ntp": "ntp-Latn-MX",
      "ntr": "ntr-Latn-GH",
      "ntu": "ntu-Latn-SB",
      "ntx": "ntx-Latn-MM",
      "nty": "nty-Yiii-VN",
      "ntz": "ntz-Arab-IR",
      "nua": "nua-Latn-NC",
      "nuc": "nuc-Latn-BR",
      "nud": "nud-Latn-PG",
      "nue": "nue-Latn-CD",
      "nuf": "nuf-Latn-CN",
      "nug": "nug-Latn-AU",
      "nuh": "nuh-Latn-NG",
      "nui": "nui-Latn-GQ",
      "nuj": "nuj-Latn-UG",
      "nuk": "nuk-Latn-CA",
      "num": "num-Latn-TO",
      "nun": "nun-Latn-MM",
      "nuo": "nuo-Latn-VN",
      "nup": "nup-Latn-NG",
      "nuq": "nuq-Latn-PG",
      "nur": "nur-Latn-PG",
      "nus": "nus-Latn-SS",
      "nut": "nut-Latn-VN",
      "nuu": "nuu-Latn-CD",
      "nuv": "nuv-Latn-BF",
      "nuw": "nuw-Latn-FM",
      "nux": "nux-Latn-PG",
      "nuy": "nuy-Latn-AU",
      "nuz": "nuz-Latn-MX",
      "nv": "nv-Latn-US",
      "nvh": "nvh-Latn-VU",
      "nvm": "nvm-Latn-PG",
      "nvo": "nvo-Latn-CM",
      "nwb": "nwb-Latn-CI",
      "nwc": "nwc-Newa-NP",
      "nwe": "nwe-Latn-CM",
      "nwg": "nwg-Latn-AU",
      "nwi": "nwi-Latn-VU",
      "nwm": "nwm-Latn-SS",
      "nwo": "nwo-Latn-AU",
      "nwr": "nwr-Latn-PG",
      "nww": "nww-Latn-TZ",
      "nwx": "nwx-Deva-NP",
      "nxa": "nxa-Latn-TL",
      "nxd": "nxd-Latn-CD",
      "nxe": "nxe-Latn-ID",
      "nxg": "nxg-Latn-ID",
      "nxi": "nxi-Latn-TZ",
      "nxl": "nxl-Latn-ID",
      "nxn": "nxn-Latn-AU",
      "nxo": "nxo-Latn-GA",
      "nxq": "nxq-Latn-CN",
      "nxr": "nxr-Latn-PG",
      "nxx": "nxx-Latn-ID",
      "ny": "ny-Latn-MW",
      "nyb": "nyb-Latn-GH",
      "nyc": "nyc-Latn-CD",
      "nyd": "nyd-Latn-KE",
      "nye": "nye-Latn-AO",
      "nyf": "nyf-Latn-KE",
      "nyg": "nyg-Latn-CD",
      "nyh": "nyh-Latn-AU",
      "nyi": "nyi-Latn-SD",
      "nyj": "nyj-Latn-CD",
      "nyk": "nyk-Latn-AO",
      "nyl": "nyl-Thai-TH",
      "nym": "nym-Latn-TZ",
      "nyn": "nyn-Latn-UG",
      "nyo": "nyo-Latn-UG",
      "nyp": "nyp-Latn-UG",
      "nyq": "nyq-Arab-IR",
      "nyr": "nyr-Latn-MW",
      "nys": "nys-Latn-AU",
      "nyt": "nyt-Latn-AU",
      "nyu": "nyu-Latn-MZ",
      "nyv": "nyv-Latn-AU",
      "nyw": "nyw-Thai-TH",
      "nyx": "nyx-Latn-AU",
      "nyy": "nyy-Latn-TZ",
      "nza": "nza-Latn-CM",
      "nzb": "nzb-Latn-GA",
      "nzd": "nzd-Latn-CD",
      "nzi": "nzi-Latn-GH",
      "nzk": "nzk-Latn-CF",
      "nzm": "nzm-Latn-IN",
      "nzr": "nzr-Latn-NG",
      "nzu": "nzu-Latn-CG",
      "nzy": "nzy-Latn-TD",
      "nzz": "nzz-Latn-ML",
      "oaa": "oaa-Cyrl-RU",
      "oac": "oac-Cyrl-RU",
      "oar": "oar-Syrc-SY",
      "oav": "oav-Geor-GE",
      "obi": "obi-Latn-US",
      "obk": "obk-Latn-PH",
      "obl": "obl-Latn-CM",
      "obm": "obm-Phnx-JO",
      "obo": "obo-Latn-PH",
      "obr": "obr-Mymr-MM",
      "obt": "obt-Latn-FR",
      "obu": "obu-Latn-NG",
      "oc": "oc-Latn-FR",
      "oca": "oca-Latn-PE",
      "oco": "oco-Latn-GB",
      "ocu": "ocu-Latn-MX",
      "oda": "oda-Latn-NG",
      "odk": "odk-Arab-PK",
      "odt": "odt-Latn-NL",
      "odu": "odu-Latn-NG",
      "ofs": "ofs-Latn-NL",
      "ofu": "ofu-Latn-NG",
      "ogb": "ogb-Latn-NG",
      "ogc": "ogc-Latn-NG",
      "ogg": "ogg-Latn-NG",
      "ogo": "ogo-Latn-NG",
      "ogu": "ogu-Latn-NG",
      "oht": "oht-Xsux-TR",
      "ohu": "ohu-Latn-HU",
      "oia": "oia-Latn-ID",
      "oie": "oie-Latn-SS",
      "oin": "oin-Latn-PG",
      "oj": "oj-Cans-CA",
      "ojb": "ojb-Latn-CA",
      "ojc": "ojc-Latn-CA",
      "ojs": "ojs-Cans-CA",
      "ojv": "ojv-Latn-SB",
      "ojw": "ojw-Latn-CA",
      "oka": "oka-Latn-CA",
      "okb": "okb-Latn-NG",
      "okc": "okc-Latn-CD",
      "okd": "okd-Latn-NG",
      "oke": "oke-Latn-NG",
      "okg": "okg-Latn-AU",
      "oki": "oki-Latn-KE",
      "okk": "okk-Latn-PG",
      "okm": "okm-Hang-KR",
      "oko": "oko-Hani-KR",
      "okr": "okr-Latn-NG",
      "oks": "oks-Latn-NG",
      "oku": "oku-Latn-CM",
      "okv": "okv-Latn-PG",
      "okx": "okx-Latn-NG",
      "okz": "okz-Khmr-KH",
      "ola": "ola-Deva-NP",
      "old": "old-Latn-TZ",
      "ole": "ole-Tibt-BT",
      "olk": "olk-Latn-AU",
      "olm": "olm-Latn-NG",
      "olo": "olo-Latn-RU",
      "olr": "olr-Latn-VU",
      "olt": "olt-Latn-LT",
      "olu": "olu-Latn-AO",
      "om": "om-Latn-ET",
      "oma": "oma-Latn-US",
      "omb": "omb-Latn-VU",
      "omc": "omc-Latn-PE",
      "omg": "omg-Latn-PE",
      "omi": "omi-Latn-CD",
      "omk": "omk-Cyrl-RU",
      "oml": "oml-Latn-CD",
      "omo": "omo-Latn-PG",
      "omp": "omp-Mtei-IN",
      "omr": "omr-Modi-IN",
      "omt": "omt-Latn-KE",
      "omu": "omu-Latn-PE",
      "omw": "omw-Latn-PG",
      "omx": "omx-Mymr-MM",
      "ona": "ona-Latn-AR",
      "one": "one-Latn-CA",
      "ong": "ong-Latn-PG",
      "oni": "oni-Latn-ID",
      "onj": "onj-Latn-PG",
      "onk": "onk-Latn-PG",
      "onn": "onn-Latn-PG",
      "ono": "ono-Latn-CA",
      "onp": "onp-Latn-IN",
      "onr": "onr-Latn-PG",
      "ons": "ons-Latn-PG",
      "ont": "ont-Latn-PG",
      "onu": "onu-Latn-VU",
      "onx": "onx-Latn-ID",
      "ood": "ood-Latn-US",
      "oon": "oon-Deva-IN",
      "oor": "oor-Latn-ZA",
      "opa": "opa-Latn-NG",
      "opk": "opk-Latn-ID",
      "opm": "opm-Latn-PG",
      "opo": "opo-Latn-PG",
      "opt": "opt-Latn-MX",
      "opy": "opy-Latn-BR",
      "or": "or-Orya-IN",
      "ora": "ora-Latn-SB",
      "orc": "orc-Latn-KE",
      "ore": "ore-Latn-PE",
      "org": "org-Latn-NG",
      "orn": "orn-Latn-MY",
      "oro": "oro-Latn-PG",
      "orr": "orr-Latn-NG",
      "ors": "ors-Latn-MY",
      "ort": "ort-Telu-IN",
      "oru": "oru-Arab-PK",
      "orv": "orv-Cyrl-RU",
      "orw": "orw-Latn-BR",
      "orx": "orx-Latn-NG",
      "orz": "orz-Latn-ID",
      "os": "os-Cyrl-GE",
      "osa": "osa-Osge-US",
      "osc": "osc-Ital-IT",
      "osi": "osi-Java-ID",
      "oso": "oso-Latn-NG",
      "osp": "osp-Latn-ES",
      "ost": "ost-Latn-CM",
      "osu": "osu-Latn-PG",
      "osx": "osx-Latn-DE",
      "ota": "ota-Arab-TR",
      "otb": "otb-Tibt-CN",
      "otd": "otd-Latn-ID",
      "ote": "ote-Latn-MX",
      "oti": "oti-Latn-BR",
      "otk": "otk-Orkh-MN",
      "otl": "otl-Latn-MX",
      "otm": "otm-Latn-MX",
      "otn": "otn-Latn-MX",
      "otq": "otq-Latn-MX",
      "otr": "otr-Latn-SD",
      "ots": "ots-Latn-MX",
      "ott": "ott-Latn-MX",
      "otu": "otu-Latn-BR",
      "otw": "otw-Latn-CA",
      "otx": "otx-Latn-MX",
      "oty": "oty-Gran-IN",
      "otz": "otz-Latn-MX",
      "oub": "oub-Latn-LR",
      "oue": "oue-Latn-PG",
      "oui": "oui-Ougr-CN",
      "oum": "oum-Latn-PG",
      "ovd": "ovd-Latn-SE",
      "owi": "owi-Latn-PG",
      "owl": "owl-Latn-GB",
      "oyd": "oyd-Latn-ET",
      "oym": "oym-Latn-BR",
      "oyy": "oyy-Latn-PG",
      "ozm": "ozm-Latn-CM",
      "pa": "pa-Guru-IN",
      "pa-Arab": "pa-Arab-PK",
      "pa-PK": "pa-Arab-PK",
      "pab": "pab-Latn-BR",
      "pac": "pac-Latn-VN",
      "pad": "pad-Latn-BR",
      "pae": "pae-Latn-CD",
      "paf": "paf-Latn-BR",
      "pag": "pag-Latn-PH",
      "pah": "pah-Latn-BR",
      "pai": "pai-Latn-NG",
      "pak": "pak-Latn-BR",
      "pal": "pal-Phli-IR",
      "pal-Phlp": "pal-Phlp-CN",
      "pam": "pam-Latn-PH",
      "pao": "pao-Latn-US",
      "pap": "pap-Latn-CW",
      "paq": "paq-Cyrl-TJ",
      "par": "par-Latn-US",
      "pas": "pas-Latn-ID",
      "pau": "pau-Latn-PW",
      "pav": "pav-Latn-BR",
      "paw": "paw-Latn-US",
      "pax": "pax-Latn-BR",
      "pay": "pay-Latn-HN",
      "paz": "paz-Latn-BR",
      "pbb": "pbb-Latn-CO",
      "pbc": "pbc-Latn-GY",
      "pbe": "pbe-Latn-MX",
      "pbf": "pbf-Latn-MX",
      "pbg": "pbg-Latn-VE",
      "pbh": "pbh-Latn-VE",
      "pbi": "pbi-Latn-CM",
      "pbl": "pbl-Latn-NG",
      "pbm": "pbm-Latn-MX",
      "pbn": "pbn-Latn-NG",
      "pbo": "pbo-Latn-GW",
      "pbp": "pbp-Latn-GN",
      "pbr": "pbr-Latn-TZ",
      "pbs": "pbs-Latn-MX",
      "pbt": "pbt-Arab-AF",
      "pbv": "pbv-Latn-IN",
      "pby": "pby-Latn-PG",
      "pca": "pca-Latn-MX",
      "pcb": "pcb-Khmr-KH",
      "pcc": "pcc-Latn-CN",
      "pcd": "pcd-Latn-FR",
      "pce": "pce-Mymr-MM",
      "pcf": "pcf-Mlym-IN",
      "pcg": "pcg-Mlym-IN",
      "pch": "pch-Deva-IN",
      "pci": "pci-Deva-IN",
      "pcj": "pcj-Telu-IN",
      "pck": "pck-Latn-IN",
      "pcm": "pcm-Latn-NG",
      "pcn": "pcn-Latn-NG",
      "pcp": "pcp-Latn-BO",
      "pcw": "pcw-Latn-NG",
      "pda": "pda-Latn-PG",
      "pdc": "pdc-Latn-US",
      "pdn": "pdn-Latn-ID",
      "pdo": "pdo-Latn-ID",
      "pdt": "pdt-Latn-CA",
      "pdu": "pdu-Latn-MM",
      "pea": "pea-Latn-ID",
      "peb": "peb-Latn-US",
      "ped": "ped-Latn-PG",
      "pee": "pee-Latn-ID",
      "peg": "peg-Orya-IN",
      "pei": "pei-Latn-MX",
      "pek": "pek-Latn-PG",
      "pel": "pel-Latn-ID",
      "pem": "pem-Latn-CD",
      "peo": "peo-Xpeo-IR",
      "pep": "pep-Latn-PG",
      "peq": "peq-Latn-US",
      "pev": "pev-Latn-VE",
      "pex": "pex-Latn-PG",
      "pey": "pey-Latn-ID",
      "pez": "pez-Latn-MY",
      "pfa": "pfa-Latn-FM",
      "pfe": "pfe-Latn-CM",
      "pfl": "pfl-Latn-DE",
      "pga": "pga-Latn-SS",
      "pgd": "pgd-Khar-PK",
      "pgg": "pgg-Deva-IN",
      "pgi": "pgi-Latn-PG",
      "pgk": "pgk-Latn-VU",
      "pgl": "pgl-Ogam-IE",
      "pgn": "pgn-Ital-IT",
      "pgs": "pgs-Latn-NG",
      "pgu": "pgu-Latn-ID",
      "phd": "phd-Deva-IN",
      "phg": "phg-Latn-VN",
      "phh": "phh-Latn-VN",
      "phk": "phk-Mymr-IN",
      "phl": "phl-Arab-PK",
      "phm": "phm-Latn-MZ",
      "phn": "phn-Phnx-LB",
      "pho": "pho-Laoo-LA",
      "phr": "phr-Arab-PK",
      "pht": "pht-Thai-TH",
      "phu": "phu-Thai-TH",
      "phv": "phv-Arab-AF",
      "phw": "phw-Deva-NP",
      "pi": "pi-Sinh-IN",
      "pia": "pia-Latn-MX",
      "pib": "pib-Latn-PE",
      "pic": "pic-Latn-GA",
      "pid": "pid-Latn-VE",
      "pif": "pif-Latn-FM",
      "pig": "pig-Latn-PE",
      "pih": "pih-Latn-NF",
      "pij": "pij-Latn-CO",
      "pil": "pil-Latn-BJ",
      "pim": "pim-Latn-US",
      "pin": "pin-Latn-PG",
      "pio": "pio-Latn-CO",
      "pip": "pip-Latn-NG",
      "pir": "pir-Latn-BR",
      "pis": "pis-Latn-SB",
      "pit": "pit-Latn-AU",
      "piu": "piu-Latn-AU",
      "piv": "piv-Latn-SB",
      "piw": "piw-Latn-TZ",
      "pix": "pix-Latn-PG",
      "piy": "piy-Latn-NG",
      "piz": "piz-Latn-NC",
      "pjt": "pjt-Latn-AU",
      "pka": "pka-Brah-IN",
      "pkb": "pkb-Latn-KE",
      "pkg": "pkg-Latn-PG",
      "pkh": "pkh-Latn-BD",
      "pkn": "pkn-Latn-AU",
      "pko": "pko-Latn-KE",
      "pkp": "pkp-Latn-CK",
      "pkr": "pkr-Mlym-IN",
      "pku": "pku-Latn-ID",
      "pl": "pl-Latn-PL",
      "pla": "pla-Latn-PG",
      "plb": "plb-Latn-VU",
      "plc": "plc-Latn-PH",
      "pld": "pld-Latn-GB",
      "ple": "ple-Latn-ID",
      "plg": "plg-Latn-AR",
      "plh": "plh-Latn-ID",
      "plk": "plk-Arab-PK",
      "pll": "pll-Mymr-MM",
      "pln": "pln-Latn-CO",
      "plo": "plo-Latn-MX",
      "plr": "plr-Latn-CI",
      "pls": "pls-Latn-MX",
      "plu": "plu-Latn-BR",
      "plv": "plv-Latn-PH",
      "plw": "plw-Latn-PH",
      "plz": "plz-Latn-MY",
      "pma": "pma-Latn-VU",
      "pmb": "pmb-Latn-CD",
      "pmd": "pmd-Latn-AU",
      "pme": "pme-Latn-NC",
      "pmf": "pmf-Latn-ID",
      "pmh": "pmh-Brah-IN",
      "pmi": "pmi-Latn-CN",
      "pmj": "pmj-Latn-CN",
      "pml": "pml-Latn-TN",
      "pmm": "pmm-Latn-CM",
      "pmn": "pmn-Latn-CM",
      "pmo": "pmo-Latn-ID",
      "pmq": "pmq-Latn-MX",
      "pmr": "pmr-Latn-PG",
      "pms": "pms-Latn-IT",
      "pmt": "pmt-Latn-PF",
      "pmw": "pmw-Latn-US",
      "pmx": "pmx-Latn-IN",
      "pmy": "pmy-Latn-ID",
      "pmz": "pmz-Latn-MX",
      "pna": "pna-Latn-MY",
      "pnc": "pnc-Latn-ID",
      "pnd": "pnd-Latn-AO",
      "pne": "pne-Latn-MY",
      "png": "png-Latn-NG",
      "pnh": "pnh-Latn-CK",
      "pni": "pni-Latn-ID",
      "pnj": "pnj-Latn-AU",
      "pnk": "pnk-Latn-BO",
      "pnl": "pnl-Latn-BF",
      "pnm": "pnm-Latn-MY",
      "pnn": "pnn-Latn-PG",
      "pno": "pno-Latn-PE",
      "pnp": "pnp-Latn-ID",
      "pnq": "pnq-Latn-BF",
      "pnr": "pnr-Latn-PG",
      "pns": "pns-Latn-ID",
      "pnt": "pnt-Grek-GR",
      "pnv": "pnv-Latn-AU",
      "pnw": "pnw-Latn-AU",
      "pny": "pny-Latn-CM",
      "pnz": "pnz-Latn-CF",
      "poc": "poc-Latn-GT",
      "poe": "poe-Latn-MX",
      "pof": "pof-Latn-CD",
      "pog": "pog-Latn-BR",
      "poh": "poh-Latn-GT",
      "poi": "poi-Latn-MX",
      "pok": "pok-Latn-BR",
      "pom": "pom-Latn-US",
      "pon": "pon-Latn-FM",
      "poo": "poo-Latn-US",
      "pop": "pop-Latn-NC",
      "poq": "poq-Latn-MX",
      "pos": "pos-Latn-MX",
      "pot": "pot-Latn-US",
      "pov": "pov-Latn-GW",
      "pow": "pow-Latn-MX",
      "poy": "poy-Latn-TZ",
      "ppe": "ppe-Latn-PG",
      "ppi": "ppi-Latn-MX",
      "ppk": "ppk-Latn-ID",
      "ppl": "ppl-Latn-SV",
      "ppm": "ppm-Latn-ID",
      "ppn": "ppn-Latn-PG",
      "ppo": "ppo-Latn-PG",
      "ppp": "ppp-Latn-CD",
      "ppq": "ppq-Latn-PG",
      "pps": "pps-Latn-MX",
      "ppt": "ppt-Latn-PG",
      "pqa": "pqa-Latn-NG",
      "pqm": "pqm-Latn-CA",
      "pra": "pra-Khar-PK",
      "prc": "prc-Arab-AF",
      "prd": "prd-Arab-IR",
      "pre": "pre-Latn-ST",
      "prf": "prf-Latn-PH",
      "prg": "prg-Latn-PL",
      "prh": "prh-Latn-PH",
      "pri": "pri-Latn-NC",
      "prk": "prk-Latn-MM",
      "prm": "prm-Latn-PG",
      "pro": "pro-Latn-FR",
      "prq": "prq-Latn-PE",
      "prr": "prr-Latn-BR",
      "prt": "prt-Thai-TH",
      "pru": "pru-Latn-ID",
      "prw": "prw-Latn-PG",
      "prx": "prx-Arab-IN",
      "ps": "ps-Arab-AF",
      "psa": "psa-Latn-ID",
      "pse": "pse-Latn-ID",
      "psh": "psh-Arab-AF",
      "psi": "psi-Arab-AF",
      "psm": "psm-Latn-BO",
      "psn": "psn-Latn-ID",
      "psq": "psq-Latn-PG",
      "pss": "pss-Latn-PG",
      "pst": "pst-Arab-PK",
      "psu": "psu-Brah-IN",
      "psw": "psw-Latn-VU",
      "pt": "pt-Latn-BR",
      "pta": "pta-Latn-PY",
      "pth": "pth-Latn-BR",
      "pti": "pti-Latn-AU",
      "ptn": "ptn-Latn-ID",
      "pto": "pto-Latn-BR",
      "ptp": "ptp-Latn-PG",
      "ptr": "ptr-Latn-VU",
      "ptt": "ptt-Latn-ID",
      "ptu": "ptu-Latn-ID",
      "ptv": "ptv-Latn-VU",
      "pua": "pua-Latn-MX",
      "pub": "pub-Latn-IN",
      "puc": "puc-Latn-ID",
      "pud": "pud-Latn-ID",
      "pue": "pue-Latn-AR",
      "puf": "puf-Latn-ID",
      "pug": "pug-Latn-BF",
      "pui": "pui-Latn-CO",
      "puj": "puj-Latn-ID",
      "pum": "pum-Deva-NP",
      "puo": "puo-Latn-VN",
      "pup": "pup-Latn-PG",
      "puq": "puq-Latn-BO",
      "pur": "pur-Latn-BR",
      "put": "put-Latn-ID",
      "puu": "puu-Latn-GA",
      "puw": "puw-Latn-FM",
      "pux": "pux-Latn-PG",
      "puy": "puy-Latn-US",
      "pwa": "pwa-Latn-PG",
      "pwb": "pwb-Latn-NG",
      "pwg": "pwg-Latn-PG",
      "pwm": "pwm-Latn-PH",
      "pwn": "pwn-Latn-TW",
      "pwo": "pwo-Mymr-MM",
      "pwr": "pwr-Deva-IN",
      "pww": "pww-Thai-TH",
      "pxm": "pxm-Latn-MX",
      "pye": "pye-Latn-CI",
      "pym": "pym-Latn-NG",
      "pyn": "pyn-Latn-BR",
      "pyu": "pyu-Latn-TW",
      "pyx": "pyx-Mymr-MM",
      "pyy": "pyy-Latn-MM",
      "pze": "pze-Latn-NG",
      "pzh": "pzh-Latn-TW",
      "pzn": "pzn-Latn-MM",
      "qu": "qu-Latn-PE",
      "qua": "qua-Latn-US",
      "qub": "qub-Latn-PE",
      "quc": "quc-Latn-GT",
      "qud": "qud-Latn-EC",
      "quf": "quf-Latn-PE",
      "qug": "qug-Latn-EC",
      "qui": "qui-Latn-US",
      "quk": "quk-Latn-PE",
      "qul": "qul-Latn-BO",
      "qum": "qum-Latn-GT",
      "qun": "qun-Latn-US",
      "qup": "qup-Latn-PE",
      "quq": "quq-Latn-ES",
      "qur": "qur-Latn-PE",
      "qus": "qus-Latn-AR",
      "quv": "quv-Latn-GT",
      "quw": "quw-Latn-EC",
      "qux": "qux-Latn-PE",
      "quy": "quy-Latn-PE",
      "qva": "qva-Latn-PE",
      "qvc": "qvc-Latn-PE",
      "qve": "qve-Latn-PE",
      "qvh": "qvh-Latn-PE",
      "qvi": "qvi-Latn-EC",
      "qvj": "qvj-Latn-EC",
      "qvl": "qvl-Latn-PE",
      "qvm": "qvm-Latn-PE",
      "qvn": "qvn-Latn-PE",
      "qvo": "qvo-Latn-PE",
      "qvp": "qvp-Latn-PE",
      "qvs": "qvs-Latn-PE",
      "qvw": "qvw-Latn-PE",
      "qvz": "qvz-Latn-EC",
      "qwa": "qwa-Latn-PE",
      "qwc": "qwc-Latn-PE",
      "qwh": "qwh-Latn-PE",
      "qwm": "qwm-Latn-HU",
      "qws": "qws-Latn-PE",
      "qwt": "qwt-Latn-US",
      "qxa": "qxa-Latn-PE",
      "qxc": "qxc-Latn-PE",
      "qxh": "qxh-Latn-PE",
      "qxl": "qxl-Latn-EC",
      "qxn": "qxn-Latn-PE",
      "qxo": "qxo-Latn-PE",
      "qxp": "qxp-Latn-PE",
      "qxq": "qxq-Arab-IR",
      "qxr": "qxr-Latn-EC",
      "qxt": "qxt-Latn-PE",
      "qxu": "qxu-Latn-PE",
      "qxw": "qxw-Latn-PE",
      "qya": "qya-Latn-001",
      "qyp": "qyp-Latn-US",
      "raa": "raa-Deva-NP",
      "rab": "rab-Deva-NP",
      "rac": "rac-Latn-ID",
      "rad": "rad-Latn-VN",
      "raf": "raf-Deva-NP",
      "rag": "rag-Latn-KE",
      "rah": "rah-Beng-IN",
      "rai": "rai-Latn-PG",
      "raj": "raj-Deva-IN",
      "rak": "rak-Latn-PG",
      "ram": "ram-Latn-BR",
      "ran": "ran-Latn-ID",
      "rao": "rao-Latn-PG",
      "rap": "rap-Latn-CL",
      "rar": "rar-Latn-CK",
      "rav": "rav-Deva-NP",
      "raw": "raw-Latn-MM",
      "rax": "rax-Latn-NG",
      "ray": "ray-Latn-PF",
      "raz": "raz-Latn-ID",
      "rbb": "rbb-Mymr-MM",
      "rbk": "rbk-Latn-PH",
      "rbl": "rbl-Latn-PH",
      "rbp": "rbp-Latn-AU",
      "rcf": "rcf-Latn-RE",
      "rdb": "rdb-Arab-IR",
      "rea": "rea-Latn-PG",
      "reb": "reb-Latn-ID",
      "ree": "ree-Latn-MY",
      "reg": "reg-Latn-TZ",
      "rei": "rei-Orya-IN",
      "rej": "rej-Latn-ID",
      "rel": "rel-Latn-KE",
      "rem": "rem-Latn-PE",
      "ren": "ren-Latn-VN",
      "res": "res-Latn-NG",
      "ret": "ret-Latn-ID",
      "rey": "rey-Latn-BO",
      "rga": "rga-Latn-VU",
      "rgn": "rgn-Latn-IT",
      "rgr": "rgr-Latn-PE",
      "rgs": "rgs-Latn-VN",
      "rgu": "rgu-Latn-ID",
      "rhg": "rhg-Rohg-MM",
      "rhp": "rhp-Latn-PG",
      "ria": "ria-Latn-IN",
      "rif": "rif-Latn-MA",
      "ril": "ril-Latn-MM",
      "rim": "rim-Latn-TZ",
      "rin": "rin-Latn-NG",
      "rir": "rir-Latn-ID",
      "rit": "rit-Latn-AU",
      "riu": "riu-Latn-ID",
      "rjg": "rjg-Latn-ID",
      "rji": "rji-Deva-NP",
      "rjs": "rjs-Deva-NP",
      "rka": "rka-Khmr-KH",
      "rkb": "rkb-Latn-BR",
      "rkh": "rkh-Latn-CK",
      "rki": "rki-Mymr-MM",
      "rkm": "rkm-Latn-BF",
      "rkt": "rkt-Beng-BD",
      "rkw": "rkw-Latn-AU",
      "rm": "rm-Latn-CH",
      "rma": "rma-Latn-NI",
      "rmb": "rmb-Latn-AU",
      "rmc": "rmc-Latn-SK",
      "rmd": "rmd-Latn-DK",
      "rme": "rme-Latn-GB",
      "rmf": "rmf-Latn-FI",
      "rmg": "rmg-Latn-NO",
      "rmh": "rmh-Latn-ID",
      "rmi": "rmi-Armn-AM",
      "rmk": "rmk-Latn-PG",
      "rml": "rml-Latn-PL",
      "rmm": "rmm-Latn-ID",
      "rmn": "rmn-Latn-RS",
      "rmo": "rmo-Latn-CH",
      "rmp": "rmp-Latn-PG",
      "rmq": "rmq-Latn-ES",
      "rmt": "rmt-Arab-IR",
      "rmu": "rmu-Latn-SE",
      "rmw": "rmw-Latn-GB",
      "rmx": "rmx-Latn-VN",
      "rmz": "rmz-Mymr-IN",
      "rn": "rn-Latn-BI",
      "rnd": "rnd-Latn-CD",
      "rng": "rng-Latn-MZ",
      "rnl": "rnl-Latn-IN",
      "rnn": "rnn-Latn-ID",
      "rnr": "rnr-Latn-AU",
      "rnw": "rnw-Latn-TZ",
      "ro": "ro-Latn-RO",
      "rob": "rob-Latn-ID",
      "roc": "roc-Latn-VN",
      "rod": "rod-Latn-NG",
      "roe": "roe-Latn-PG",
      "rof": "rof-Latn-TZ",
      "rog": "rog-Latn-VN",
      "rol": "rol-Latn-PH",
      "rom": "rom-Latn-RO",
      "roo": "roo-Latn-PG",
      "rop": "rop-Latn-AU",
      "ror": "ror-Latn-ID",
      "rou": "rou-Latn-TD",
      "row": "row-Latn-ID",
      "rpn": "rpn-Latn-VU",
      "rpt": "rpt-Latn-PG",
      "rri": "rri-Latn-SB",
      "rrm": "rrm-Latn-NZ",
      "rro": "rro-Latn-PG",
      "rrt": "rrt-Latn-AU",
      "rsk": "rsk-Cyrl-RS",
      "rsw": "rsw-Latn-NG",
      "rtc": "rtc-Latn-MM",
      "rth": "rth-Latn-ID",
      "rtm": "rtm-Latn-FJ",
      "rtw": "rtw-Deva-IN",
      "ru": "ru-Cyrl-RU",
      "rub": "rub-Latn-UG",
      "ruc": "ruc-Latn-UG",
      "rue": "rue-Cyrl-UA",
      "ruf": "ruf-Latn-TZ",
      "rug": "rug-Latn-SB",
      "rui": "rui-Latn-TZ",
      "ruk": "ruk-Latn-NG",
      "ruo": "ruo-Latn-HR",
      "rup": "rup-Latn-RO",
      "ruq": "ruq-Latn-GR",
      "rut": "rut-Cyrl-RU",
      "ruu": "ruu-Latn-MY",
      "ruy": "ruy-Latn-NG",
      "ruz": "ruz-Latn-NG",
      "rw": "rw-Latn-RW",
      "rwa": "rwa-Latn-PG",
      "rwk": "rwk-Latn-TZ",
      "rwl": "rwl-Latn-TZ",
      "rwm": "rwm-Latn-UG",
      "rwo": "rwo-Latn-PG",
      "rwr": "rwr-Deva-IN",
      "rxd": "rxd-Latn-AU",
      "rxw": "rxw-Latn-AU",
      "ryu": "ryu-Kana-JP",
      "sa": "sa-Deva-IN",
      "saa": "saa-Latn-TD",
      "sab": "sab-Latn-PA",
      "sac": "sac-Latn-US",
      "sad": "sad-Latn-TZ",
      "sae": "sae-Latn-BR",
      "saf": "saf-Latn-GH",
      "sah": "sah-Cyrl-RU",
      "saj": "saj-Latn-ID",
      "sak": "sak-Latn-GA",
      "sam": "sam-Samr-PS",
      "sao": "sao-Latn-ID",
      "saq": "saq-Latn-KE",
      "sar": "sar-Latn-BO",
      "sas": "sas-Latn-ID",
      "sat": "sat-Olck-IN",
      "sau": "sau-Latn-ID",
      "sav": "sav-Latn-SN",
      "saw": "saw-Latn-ID",
      "sax": "sax-Latn-VU",
      "say": "say-Latn-NG",
      "saz": "saz-Saur-IN",
      "sba": "sba-Latn-TD",
      "sbb": "sbb-Latn-SB",
      "sbc": "sbc-Latn-PG",
      "sbd": "sbd-Latn-BF",
      "sbe": "sbe-Latn-PG",
      "sbg": "sbg-Latn-ID",
      "sbh": "sbh-Latn-PG",
      "sbi": "sbi-Latn-PG",
      "sbj": "sbj-Latn-TD",
      "sbk": "sbk-Latn-TZ",
      "sbl": "sbl-Latn-PH",
      "sbm": "sbm-Latn-TZ",
      "sbn": "sbn-Arab-PK",
      "sbo": "sbo-Latn-MY",
      "sbp": "sbp-Latn-TZ",
      "sbq": "sbq-Latn-PG",
      "sbr": "sbr-Latn-ID",
      "sbs": "sbs-Latn-NA",
      "sbt": "sbt-Latn-ID",
      "sbu": "sbu-Tibt-IN",
      "sbv": "sbv-Latn-IT",
      "sbw": "sbw-Latn-GA",
      "sbx": "sbx-Latn-ID",
      "sby": "sby-Latn-ZM",
      "sbz": "sbz-Latn-CF",
      "sc": "sc-Latn-IT",
      "scb": "scb-Latn-VN",
      "sce": "sce-Latn-CN",
      "scf": "scf-Latn-PA",
      "scg": "scg-Latn-ID",
      "sch": "sch-Latn-IN",
      "sci": "sci-Latn-LK",
      "sck": "sck-Deva-IN",
      "scl": "scl-Arab-PK",
      "scn": "scn-Latn-IT",
      "sco": "sco-Latn-GB",
      "scp": "scp-Deva-NP",
      "scs": "scs-Latn-CA",
      "sct": "sct-Laoo-LA",
      "scu": "scu-Takr-IN",
      "scv": "scv-Latn-NG",
      "scw": "scw-Latn-NG",
      "scx": "scx-Grek-IT",
      "sd": "sd-Arab-PK",
      "sd-Deva": "sd-Deva-IN",
      "sd-IN": "sd-Deva-IN",
      "sd-Khoj": "sd-Khoj-IN",
      "sd-Sind": "sd-Sind-IN",
      "sda": "sda-Latn-ID",
      "sdb": "sdb-Arab-IQ",
      "sdc": "sdc-Latn-IT",
      "sde": "sde-Latn-NG",
      "sdf": "sdf-Arab-IQ",
      "sdg": "sdg-Arab-AF",
      "sdh": "sdh-Arab-IR",
      "sdj": "sdj-Latn-CG",
      "sdk": "sdk-Latn-PG",
      "sdn": "sdn-Latn-IT",
      "sdo": "sdo-Latn-MY",
      "sdq": "sdq-Latn-ID",
      "sdr": "sdr-Beng-BD",
      "sds": "sds-Arab-TN",
      "sdu": "sdu-Latn-ID",
      "sdx": "sdx-Latn-MY",
      "se": "se-Latn-NO",
      "sea": "sea-Latn-MY",
      "seb": "seb-Latn-CI",
      "sec": "sec-Latn-CA",
      "sed": "sed-Latn-VN",
      "see": "see-Latn-US",
      "sef": "sef-Latn-CI",
      "seg": "seg-Latn-TZ",
      "seh": "seh-Latn-MZ",
      "sei": "sei-Latn-MX",
      "sej": "sej-Latn-PG",
      "sek": "sek-Latn-CA",
      "sel": "sel-Cyrl-RU",
      "sen": "sen-Latn-BF",
      "seo": "seo-Latn-PG",
      "sep": "sep-Latn-BF",
      "seq": "seq-Latn-BF",
      "ser": "ser-Latn-US",
      "ses": "ses-Latn-ML",
      "set": "set-Latn-ID",
      "seu": "seu-Latn-ID",
      "sev": "sev-Latn-CI",
      "sew": "sew-Latn-PG",
      "sey": "sey-Latn-EC",
      "sez": "sez-Latn-MM",
      "sfe": "sfe-Latn-PH",
      "sfm": "sfm-Plrd-CN",
      "sfw": "sfw-Latn-GH",
      "sg": "sg-Latn-CF",
      "sga": "sga-Ogam-IE",
      "sgb": "sgb-Latn-PH",
      "sgc": "sgc-Latn-KE",
      "sgd": "sgd-Latn-PH",
      "sge": "sge-Latn-ID",
      "sgh": "sgh-Cyrl-TJ",
      "sgi": "sgi-Latn-CM",
      "sgj": "sgj-Deva-IN",
      "sgm": "sgm-Latn-KE",
      "sgp": "sgp-Latn-IN",
      "sgr": "sgr-Arab-IR",
      "sgs": "sgs-Latn-LT",
      "sgt": "sgt-Tibt-BT",
      "sgu": "sgu-Latn-ID",
      "sgw": "sgw-Ethi-ET",
      "sgy": "sgy-Arab-AF",
      "sgz": "sgz-Latn-PG",
      "sha": "sha-Latn-NG",
      "shb": "shb-Latn-BR",
      "shc": "shc-Latn-CD",
      "shd": "shd-Arab-PK",
      "she": "she-Latn-ET",
      "shg": "shg-Latn-BW",
      "shh": "shh-Latn-US",
      "shi": "shi-Tfng-MA",
      "shj": "shj-Latn-SD",
      "shk": "shk-Latn-SS",
      "shm": "shm-Arab-IR",
      "shn": "shn-Mymr-MM",
      "sho": "sho-Latn-NG",
      "shp": "shp-Latn-PE",
      "shq": "shq-Latn-ZM",
      "shr": "shr-Latn-CD",
      "shs": "shs-Latn-CA",
      "sht": "sht-Latn-US",
      "shu": "shu-Arab-TD",
      "shv": "shv-Arab-OM",
      "shw": "shw-Latn-SD",
      "shy": "shy-Latn-DZ",
      "shz": "shz-Latn-ML",
      "si": "si-Sinh-LK",
      "sia": "sia-Cyrl-RU",
      "sib": "sib-Latn-MY",
      "sid": "sid-Latn-ET",
      "sie": "sie-Latn-ZM",
      "sif": "sif-Latn-BF",
      "sig": "sig-Latn-GH",
      "sih": "sih-Latn-NC",
      "sii": "sii-Latn-IN",
      "sij": "sij-Latn-PG",
      "sik": "sik-Latn-BR",
      "sil": "sil-Latn-GH",
      "sim": "sim-Latn-PG",
      "sip": "sip-Tibt-IN",
      "siq": "siq-Latn-PG",
      "sir": "sir-Latn-NG",
      "sis": "sis-Latn-US",
      "siu": "siu-Latn-PG",
      "siv": "siv-Latn-PG",
      "siw": "siw-Latn-PG",
      "six": "six-Latn-PG",
      "siy": "siy-Arab-IR",
      "siz": "siz-Arab-EG",
      "sja": "sja-Latn-CO",
      "sjb": "sjb-Latn-ID",
      "sjd": "sjd-Cyrl-RU",
      "sje": "sje-Latn-SE",
      "sjg": "sjg-Latn-TD",
      "sjl": "sjl-Latn-IN",
      "sjm": "sjm-Latn-PH",
      "sjp": "sjp-Deva-IN",
      "sjr": "sjr-Latn-PG",
      "sjt": "sjt-Cyrl-RU",
      "sju": "sju-Latn-SE",
      "sjw": "sjw-Latn-US",
      "sk": "sk-Latn-SK",
      "ska": "ska-Latn-US",
      "skb": "skb-Thai-TH",
      "skc": "skc-Latn-PG",
      "skd": "skd-Latn-US",
      "ske": "ske-Latn-VU",
      "skf": "skf-Latn-BR",
      "skg": "skg-Latn-MG",
      "skh": "skh-Latn-ID",
      "ski": "ski-Latn-ID",
      "skj": "skj-Deva-NP",
      "skm": "skm-Latn-PG",
      "skn": "skn-Latn-PH",
      "sko": "sko-Latn-ID",
      "skp": "skp-Latn-MY",
      "skq": "skq-Latn-BF",
      "skr": "skr-Arab-PK",
      "sks": "sks-Latn-PG",
      "skt": "skt-Latn-CD",
      "sku": "sku-Latn-VU",
      "skv": "skv-Latn-ID",
      "skw": "skw-Latn-GY",
      "skx": "skx-Latn-ID",
      "sky": "sky-Latn-SB",
      "skz": "skz-Latn-ID",
      "sl": "sl-Latn-SI",
      "slc": "slc-Latn-CO",
      "sld": "sld-Latn-BF",
      "slg": "slg-Latn-ID",
      "slh": "slh-Latn-US",
      "sli": "sli-Latn-PL",
      "slj": "slj-Latn-BR",
      "sll": "sll-Latn-PG",
      "slm": "slm-Latn-PH",
      "sln": "sln-Latn-US",
      "slp": "slp-Latn-ID",
      "slr": "slr-Latn-CN",
      "slu": "slu-Latn-ID",
      "slw": "slw-Latn-PG",
      "slx": "slx-Latn-CD",
      "sly": "sly-Latn-ID",
      "slz": "slz-Latn-ID",
      "sm": "sm-Latn-WS",
      "sma": "sma-Latn-SE",
      "smb": "smb-Latn-PG",
      "smc": "smc-Latn-PG",
      "smf": "smf-Latn-PG",
      "smg": "smg-Latn-PG",
      "smh": "smh-Yiii-CN",
      "smj": "smj-Latn-SE",
      "smk": "smk-Latn-PH",
      "sml": "sml-Latn-PH",
      "smn": "smn-Latn-FI",
      "smp": "smp-Samr-IL",
      "smq": "smq-Latn-PG",
      "smr": "smr-Latn-ID",
      "sms": "sms-Latn-FI",
      "smt": "smt-Latn-IN",
      "smu": "smu-Khmr-KH",
      "smw": "smw-Latn-ID",
      "smx": "smx-Latn-CD",
      "smy": "smy-Arab-IR",
      "smz": "smz-Latn-PG",
      "sn": "sn-Latn-ZW",
      "snc": "snc-Latn-PG",
      "sne": "sne-Latn-MY",
      "snf": "snf-Latn-SN",
      "sng": "sng-Latn-CD",
      "sni": "sni-Latn-PE",
      "snj": "snj-Latn-CF",
      "snk": "snk-Latn-ML",
      "snl": "snl-Latn-PH",
      "snm": "snm-Latn-UG",
      "snn": "snn-Latn-CO",
      "sno": "sno-Latn-US",
      "snp": "snp-Latn-PG",
      "snq": "snq-Latn-GA",
      "snr": "snr-Latn-PG",
      "sns": "sns-Latn-VU",
      "snu": "snu-Latn-ID",
      "snv": "snv-Latn-MY",
      "snw": "snw-Latn-GH",
      "snx": "snx-Latn-PG",
      "sny": "sny-Latn-PG",
      "snz": "snz-Latn-PG",
      "so": "so-Latn-SO",
      "soa": "soa-Tavt-TH",
      "sob": "sob-Latn-ID",
      "soc": "soc-Latn-CD",
      "sod": "sod-Latn-CD",
      "soe": "soe-Latn-CD",
      "sog": "sog-Sogd-UZ",
      "soi": "soi-Deva-NP",
      "sok": "sok-Latn-TD",
      "sol": "sol-Latn-PG",
      "soo": "soo-Latn-CD",
      "sop": "sop-Latn-CD",
      "soq": "soq-Latn-PG",
      "sor": "sor-Latn-TD",
      "sos": "sos-Latn-BF",
      "sou": "sou-Thai-TH",
      "sov": "sov-Latn-PW",
      "sow": "sow-Latn-PG",
      "sox": "sox-Latn-CM",
      "soy": "soy-Latn-BJ",
      "soz": "soz-Latn-TZ",
      "spb": "spb-Latn-ID",
      "spc": "spc-Latn-VE",
      "spd": "spd-Latn-PG",
      "spe": "spe-Latn-PG",
      "spg": "spg-Latn-MY",
      "spi": "spi-Latn-ID",
      "spk": "spk-Latn-PG",
      "spl": "spl-Latn-PG",
      "spm": "spm-Latn-PG",
      "spn": "spn-Latn-PY",
      "spo": "spo-Latn-US",
      "spp": "spp-Latn-ML",
      "spq": "spq-Latn-PE",
      "spr": "spr-Latn-ID",
      "sps": "sps-Latn-PG",
      "spt": "spt-Tibt-IN",
      "spv": "spv-Orya-IN",
      "sq": "sq-Latn-AL",
      "sqa": "sqa-Latn-NG",
      "sqh": "sqh-Latn-NG",
      "sqm": "sqm-Latn-CF",
      "sqo": "sqo-Arab-IR",
      "sqq": "sqq-Laoo-LA",
      "sqt": "sqt-Arab-YE",
      "squ": "squ-Latn-CA",
      "sr": "sr-Cyrl-RS",
      "sr-ME": "sr-Latn-ME",
      "sr-RO": "sr-Latn-RO",
      "sr-RU": "sr-Latn-RU",
      "sr-TR": "sr-Latn-TR",
      "sra": "sra-Latn-PG",
      "srb": "srb-Sora-IN",
      "sre": "sre-Latn-ID",
      "srf": "srf-Latn-PG",
      "srg": "srg-Latn-PH",
      "srh": "srh-Arab-CN",
      "sri": "sri-Latn-CO",
      "srk": "srk-Latn-MY",
      "srl": "srl-Latn-ID",
      "srm": "srm-Latn-SR",
      "srn": "srn-Latn-SR",
      "sro": "sro-Latn-IT",
      "srq": "srq-Latn-BO",
      "srr": "srr-Latn-SN",
      "srs": "srs-Latn-CA",
      "srt": "srt-Latn-ID",
      "sru": "sru-Latn-BR",
      "srv": "srv-Latn-PH",
      "srw": "srw-Latn-ID",
      "srx": "srx-Deva-IN",
      "sry": "sry-Latn-PG",
      "srz": "srz-Arab-IR",
      "ss": "ss-Latn-ZA",
      "ssb": "ssb-Latn-PH",
      "ssc": "ssc-Latn-TZ",
      "ssd": "ssd-Latn-PG",
      "sse": "sse-Latn-PH",
      "ssf": "ssf-Latn-TW",
      "ssg": "ssg-Latn-PG",
      "ssh": "ssh-Arab-AE",
      "ssj": "ssj-Latn-PG",
      "ssl": "ssl-Latn-GH",
      "ssm": "ssm-Latn-MY",
      "ssn": "ssn-Latn-KE",
      "sso": "sso-Latn-PG",
      "ssq": "ssq-Latn-ID",
      "sss": "sss-Laoo-LA",
      "sst": "sst-Latn-PG",
      "ssu": "ssu-Latn-PG",
      "ssv": "ssv-Latn-VU",
      "ssx": "ssx-Latn-PG",
      "ssy": "ssy-Latn-ER",
      "ssz": "ssz-Latn-PG",
      "st": "st-Latn-ZA",
      "sta": "sta-Latn-ZM",
      "stb": "stb-Latn-PH",
      "ste": "ste-Latn-ID",
      "stf": "stf-Latn-PG",
      "stg": "stg-Latn-VN",
      "sth": "sth-Latn-IE",
      "sti": "sti-Latn-VN",
      "stj": "stj-Latn-BF",
      "stk": "stk-Latn-PG",
      "stl": "stl-Latn-NL",
      "stm": "stm-Latn-PG",
      "stn": "stn-Latn-SB",
      "sto": "sto-Latn-CA",
      "stp": "stp-Latn-MX",
      "stq": "stq-Latn-DE",
      "str": "str-Latn-CA",
      "sts": "sts-Arab-AF",
      "stt": "stt-Latn-VN",
      "stv": "stv-Ethi-ET",
      "stw": "stw-Latn-FM",
      "sty": "sty-Cyrl-RU",
      "su": "su-Latn-ID",
      "sua": "sua-Latn-PG",
      "sub": "sub-Latn-CD",
      "suc": "suc-Latn-PH",
      "sue": "sue-Latn-PG",
      "sug": "sug-Latn-PG",
      "sui": "sui-Latn-PG",
      "suj": "suj-Latn-TZ",
      "suk": "suk-Latn-TZ",
      "suo": "suo-Latn-PG",
      "suq": "suq-Latn-ET",
      "sur": "sur-Latn-NG",
      "sus": "sus-Latn-GN",
      "sut": "sut-Latn-NI",
      "suv": "suv-Latn-IN",
      "suw": "suw-Latn-TZ",
      "suy": "suy-Latn-BR",
      "suz": "suz-Sunu-NP",
      "sv": "sv-Latn-SE",
      "sva": "sva-Geor-GE",
      "svb": "svb-Latn-PG",
      "svc": "svc-Latn-VC",
      "sve": "sve-Latn-ID",
      "svm": "svm-Latn-IT",
      "svs": "svs-Latn-SB",
      "sw": "sw-Latn-TZ",
      "swb": "swb-Arab-YT",
      "swf": "swf-Latn-CD",
      "swg": "swg-Latn-DE",
      "swi": "swi-Hani-CN",
      "swj": "swj-Latn-GA",
      "swk": "swk-Latn-MW",
      "swm": "swm-Latn-PG",
      "swo": "swo-Latn-BR",
      "swp": "swp-Latn-PG",
      "swq": "swq-Latn-CM",
      "swr": "swr-Latn-ID",
      "sws": "sws-Latn-ID",
      "swt": "swt-Latn-ID",
      "swu": "swu-Latn-ID",
      "swv": "swv-Deva-IN",
      "sww": "sww-Latn-VU",
      "swx": "swx-Latn-BR",
      "swy": "swy-Latn-TD",
      "sxb": "sxb-Latn-KE",
      "sxe": "sxe-Latn-GA",
      "sxn": "sxn-Latn-ID",
      "sxr": "sxr-Latn-TW",
      "sxs": "sxs-Latn-NG",
      "sxu": "sxu-Runr-DE",
      "sxw": "sxw-Latn-BJ",
      "sya": "sya-Latn-ID",
      "syb": "syb-Latn-PH",
      "syc": "syc-Syrc-TR",
      "syi": "syi-Latn-GA",
      "syk": "syk-Latn-NG",
      "syl": "syl-Beng-BD",
      "sym": "sym-Latn-BF",
      "syn": "syn-Syrc-IR",
      "syo": "syo-Latn-KH",
      "syr": "syr-Syrc-IQ",
      "sys": "sys-Latn-TD",
      "syw": "syw-Deva-NP",
      "syx": "syx-Latn-GA",
      "sza": "sza-Latn-MY",
      "szb": "szb-Latn-ID",
      "szc": "szc-Latn-MY",
      "szg": "szg-Latn-CD",
      "szl": "szl-Latn-PL",
      "szn": "szn-Latn-ID",
      "szp": "szp-Latn-ID",
      "szv": "szv-Latn-CM",
      "szw": "szw-Latn-ID",
      "szy": "szy-Latn-TW",
      "ta": "ta-Taml-IN",
      "taa": "taa-Latn-US",
      "tab": "tab-Cyrl-RU",
      "tac": "tac-Latn-MX",
      "tad": "tad-Latn-ID",
      "tae": "tae-Latn-BR",
      "taf": "taf-Latn-BR",
      "tag": "tag-Latn-SD",
      "taj": "taj-Deva-NP",
      "tak": "tak-Latn-NG",
      "tal": "tal-Latn-NG",
      "tan": "tan-Latn-NG",
      "tao": "tao-Latn-TW",
      "tap": "tap-Latn-CD",
      "taq": "taq-Latn-ML",
      "tar": "tar-Latn-MX",
      "tas": "tas-Latn-VN",
      "tau": "tau-Latn-US",
      "tav": "tav-Latn-CO",
      "taw": "taw-Latn-PG",
      "tax": "tax-Latn-TD",
      "tay": "tay-Latn-TW",
      "taz": "taz-Latn-SD",
      "tba": "tba-Latn-BR",
      "tbc": "tbc-Latn-PG",
      "tbd": "tbd-Latn-PG",
      "tbe": "tbe-Latn-SB",
      "tbf": "tbf-Latn-PG",
      "tbg": "tbg-Latn-PG",
      "tbh": "tbh-Latn-AU",
      "tbi": "tbi-Latn-SD",
      "tbj": "tbj-Latn-PG",
      "tbk": "tbk-Tagb-PH",
      "tbl": "tbl-Latn-PH",
      "tbm": "tbm-Latn-CD",
      "tbn": "tbn-Latn-CO",
      "tbo": "tbo-Latn-PG",
      "tbp": "tbp-Latn-ID",
      "tbs": "tbs-Latn-PG",
      "tbt": "tbt-Latn-CD",
      "tbu": "tbu-Latn-MX",
      "tbv": "tbv-Latn-PG",
      "tbw": "tbw-Latn-PH",
      "tbx": "tbx-Latn-PG",
      "tby": "tby-Latn-ID",
      "tbz": "tbz-Latn-BJ",
      "tca": "tca-Latn-BR",
      "tcb": "tcb-Latn-US",
      "tcc": "tcc-Latn-TZ",
      "tcd": "tcd-Latn-GH",
      "tce": "tce-Latn-CA",
      "tcf": "tcf-Latn-MX",
      "tcg": "tcg-Latn-ID",
      "tch": "tch-Latn-TC",
      "tci": "tci-Latn-PG",
      "tck": "tck-Latn-GA",
      "tcm": "tcm-Latn-ID",
      "tcn": "tcn-Tibt-NP",
      "tco": "tco-Mymr-MM",
      "tcp": "tcp-Latn-MM",
      "tcq": "tcq-Latn-ID",
      "tcs": "tcs-Latn-AU",
      "tcu": "tcu-Latn-MX",
      "tcw": "tcw-Latn-MX",
      "tcx": "tcx-Taml-IN",
      "tcy": "tcy-Knda-IN",
      "tcz": "tcz-Latn-IN",
      "tda": "tda-Tfng-NE",
      "tdb": "tdb-Deva-IN",
      "tdc": "tdc-Latn-CO",
      "tdd": "tdd-Tale-CN",
      "tde": "tde-Latn-ML",
      "tdg": "tdg-Deva-NP",
      "tdh": "tdh-Deva-NP",
      "tdi": "tdi-Latn-ID",
      "tdj": "tdj-Latn-ID",
      "tdk": "tdk-Latn-NG",
      "tdl": "tdl-Latn-NG",
      "tdm": "tdm-Latn-GY",
      "tdn": "tdn-Latn-ID",
      "tdo": "tdo-Latn-NG",
      "tdq": "tdq-Latn-NG",
      "tdr": "tdr-Latn-VN",
      "tds": "tds-Latn-ID",
      "tdt": "tdt-Latn-TL",
      "tdv": "tdv-Latn-NG",
      "tdx": "tdx-Latn-MG",
      "tdy": "tdy-Latn-PH",
      "te": "te-Telu-IN",
      "tea": "tea-Latn-MY",
      "teb": "teb-Latn-EC",
      "tec": "tec-Latn-KE",
      "ted": "ted-Latn-CI",
      "tee": "tee-Latn-MX",
      "teg": "teg-Latn-GA",
      "teh": "teh-Latn-AR",
      "tei": "tei-Latn-PG",
      "tek": "tek-Latn-CD",
      "tem": "tem-Latn-SL",
      "ten": "ten-Latn-CO",
      "teo": "teo-Latn-UG",
      "tep": "tep-Latn-MX",
      "teq": "teq-Latn-SD",
      "ter": "ter-Latn-BR",
      "tes": "tes-Java-ID",
      "tet": "tet-Latn-TL",
      "teu": "teu-Latn-UG",
      "tev": "tev-Latn-ID",
      "tew": "tew-Latn-US",
      "tex": "tex-Latn-SS",
      "tey": "tey-Latn-SD",
      "tez": "tez-Latn-NE",
      "tfi": "tfi-Latn-BJ",
      "tfn": "tfn-Latn-US",
      "tfo": "tfo-Latn-ID",
      "tfr": "tfr-Latn-PA",
      "tft": "tft-Latn-ID",
      "tg": "tg-Cyrl-TJ",
      "tg-Arab": "tg-Arab-PK",
      "tg-PK": "tg-Arab-PK",
      "tga": "tga-Latn-KE",
      "tgb": "tgb-Latn-MY",
      "tgc": "tgc-Latn-PG",
      "tgd": "tgd-Latn-NG",
      "tge": "tge-Deva-NP",
      "tgf": "tgf-Tibt-BT",
      "tgh": "tgh-Latn-TT",
      "tgi": "tgi-Latn-PG",
      "tgj": "tgj-Latn-IN",
      "tgn": "tgn-Latn-PH",
      "tgo": "tgo-Latn-PG",
      "tgp": "tgp-Latn-VU",
      "tgq": "tgq-Latn-MY",
      "tgs": "tgs-Latn-VU",
      "tgt": "tgt-Latn-PH",
      "tgu": "tgu-Latn-PG",
      "tgv": "tgv-Latn-BR",
      "tgw": "tgw-Latn-CI",
      "tgx": "tgx-Latn-CA",
      "tgy": "tgy-Latn-SS",
      "tgz": "tgz-Latn-AU",
      "th": "th-Thai-TH",
      "thd": "thd-Latn-AU",
      "the": "the-Deva-NP",
      "thf": "thf-Deva-NP",
      "thh": "thh-Latn-MX",
      "thi": "thi-Tale-LA",
      "thk": "thk-Latn-KE",
      "thl": "thl-Deva-NP",
      "thm": "thm-Thai-TH",
      "thp": "thp-Latn-CA",
      "thq": "thq-Deva-NP",
      "thr": "thr-Deva-NP",
      "ths": "ths-Deva-NP",
      "tht": "tht-Latn-CA",
      "thu": "thu-Latn-SS",
      "thv": "thv-Latn-DZ",
      "thy": "thy-Latn-NG",
      "thz": "thz-Latn-NE",
      "ti": "ti-Ethi-ET",
      "tic": "tic-Latn-SD",
      "tif": "tif-Latn-PG",
      "tig": "tig-Ethi-ER",
      "tih": "tih-Latn-MY",
      "tii": "tii-Latn-CD",
      "tij": "tij-Deva-NP",
      "tik": "tik-Latn-CM",
      "til": "til-Latn-US",
      "tim": "tim-Latn-PG",
      "tin": "tin-Cyrl-RU",
      "tio": "tio-Latn-PG",
      "tip": "tip-Latn-ID",
      "tiq": "tiq-Latn-BF",
      "tis": "tis-Latn-PH",
      "tit": "tit-Latn-CO",
      "tiu": "tiu-Latn-PH",
      "tiv": "tiv-Latn-NG",
      "tiw": "tiw-Latn-AU",
      "tix": "tix-Latn-US",
      "tiy": "tiy-Latn-PH",
      "tja": "tja-Latn-LR",
      "tjg": "tjg-Latn-ID",
      "tji": "tji-Latn-CN",
      "tjj": "tjj-Latn-AU",
      "tjl": "tjl-Mymr-MM",
      "tjn": "tjn-Latn-CI",
      "tjo": "tjo-Arab-DZ",
      "tjp": "tjp-Latn-AU",
      "tjs": "tjs-Latn-CN",
      "tju": "tju-Latn-AU",
      "tjw": "tjw-Latn-AU",
      "tk": "tk-Latn-TM",
      "tka": "tka-Latn-BR",
      "tkb": "tkb-Deva-IN",
      "tkd": "tkd-Latn-TL",
      "tke": "tke-Latn-MZ",
      "tkf": "tkf-Latn-BR",
      "tkg": "tkg-Latn-MG",
      "tkl": "tkl-Latn-TK",
      "tkp": "tkp-Latn-SB",
      "tkq": "tkq-Latn-NG",
      "tkr": "tkr-Latn-AZ",
      "tks": "tks-Arab-IR",
      "tkt": "tkt-Deva-NP",
      "tku": "tku-Latn-MX",
      "tkv": "tkv-Latn-PG",
      "tkw": "tkw-Latn-SB",
      "tkx": "tkx-Latn-ID",
      "tkz": "tkz-Latn-VN",
      "tl": "tl-Latn-PH",
      "tla": "tla-Latn-MX",
      "tlb": "tlb-Latn-ID",
      "tlc": "tlc-Latn-MX",
      "tld": "tld-Latn-ID",
      "tlf": "tlf-Latn-PG",
      "tlg": "tlg-Latn-ID",
      "tli": "tli-Latn-US",
      "tlj": "tlj-Latn-UG",
      "tlk": "tlk-Latn-ID",
      "tll": "tll-Latn-CD",
      "tlm": "tlm-Latn-VU",
      "tln": "tln-Latn-ID",
      "tlp": "tlp-Latn-MX",
      "tlq": "tlq-Latn-MM",
      "tlr": "tlr-Latn-SB",
      "tls": "tls-Latn-VU",
      "tlt": "tlt-Latn-ID",
      "tlu": "tlu-Latn-ID",
      "tlv": "tlv-Latn-ID",
      "tlx": "tlx-Latn-PG",
      "tly": "tly-Latn-AZ",
      "tma": "tma-Latn-TD",
      "tmb": "tmb-Latn-VU",
      "tmc": "tmc-Latn-TD",
      "tmd": "tmd-Latn-PG",
      "tme": "tme-Latn-BR",
      "tmf": "tmf-Latn-PY",
      "tmg": "tmg-Latn-ID",
      "tmh": "tmh-Latn-NE",
      "tmi": "tmi-Latn-VU",
      "tmj": "tmj-Latn-ID",
      "tml": "tml-Latn-ID",
      "tmm": "tmm-Latn-VN",
      "tmn": "tmn-Latn-ID",
      "tmo": "tmo-Latn-MY",
      "tmq": "tmq-Latn-PG",
      "tmr": "tmr-Syrc-IL",
      "tmt": "tmt-Latn-VU",
      "tmu": "tmu-Latn-ID",
      "tmv": "tmv-Latn-CD",
      "tmw": "tmw-Latn-MY",
      "tmy": "tmy-Latn-PG",
      "tmz": "tmz-Latn-VE",
      "tn": "tn-Latn-ZA",
      "tna": "tna-Latn-BO",
      "tnb": "tnb-Latn-CO",
      "tnc": "tnc-Latn-CO",
      "tnd": "tnd-Latn-CO",
      "tng": "tng-Latn-TD",
      "tnh": "tnh-Latn-PG",
      "tni": "tni-Latn-ID",
      "tnk": "tnk-Latn-VU",
      "tnl": "tnl-Latn-VU",
      "tnm": "tnm-Latn-ID",
      "tnn": "tnn-Latn-VU",
      "tno": "tno-Latn-BO",
      "tnp": "tnp-Latn-VU",
      "tnq": "tnq-Latn-PR",
      "tnr": "tnr-Latn-SN",
      "tns": "tns-Latn-PG",
      "tnt": "tnt-Latn-ID",
      "tnv": "tnv-Cakm-BD",
      "tnw": "tnw-Latn-ID",
      "tnx": "tnx-Latn-SB",
      "tny": "tny-Latn-TZ",
      "to": "to-Latn-TO",
      "tob": "tob-Latn-AR",
      "toc": "toc-Latn-MX",
      "tod": "tod-Latn-GN",
      "tof": "tof-Latn-PG",
      "tog": "tog-Latn-MW",
      "toh": "toh-Latn-MZ",
      "toi": "toi-Latn-ZM",
      "toj": "toj-Latn-MX",
      "tok": "tok-Latn-001",
      "tol": "tol-Latn-US",
      "tom": "tom-Latn-ID",
      "too": "too-Latn-MX",
      "top": "top-Latn-MX",
      "toq": "toq-Latn-SS",
      "tor": "tor-Latn-CD",
      "tos": "tos-Latn-MX",
      "tou": "tou-Latn-VN",
      "tov": "tov-Arab-IR",
      "tow": "tow-Latn-US",
      "tox": "tox-Latn-PW",
      "toy": "toy-Latn-ID",
      "toz": "toz-Latn-CM",
      "tpa": "tpa-Latn-PG",
      "tpc": "tpc-Latn-MX",
      "tpe": "tpe-Latn-BD",
      "tpf": "tpf-Latn-ID",
      "tpg": "tpg-Latn-ID",
      "tpi": "tpi-Latn-PG",
      "tpj": "tpj-Latn-PY",
      "tpk": "tpk-Latn-BR",
      "tpl": "tpl-Latn-MX",
      "tpm": "tpm-Latn-GH",
      "tpn": "tpn-Latn-BR",
      "tpp": "tpp-Latn-MX",
      "tpr": "tpr-Latn-BR",
      "tpt": "tpt-Latn-MX",
      "tpu": "tpu-Khmr-KH",
      "tpv": "tpv-Latn-MP",
      "tpx": "tpx-Latn-MX",
      "tpy": "tpy-Latn-BR",
      "tpz": "tpz-Latn-PG",
      "tqb": "tqb-Latn-BR",
      "tql": "tql-Latn-VU",
      "tqm": "tqm-Latn-PG",
      "tqn": "tqn-Latn-US",
      "tqo": "tqo-Latn-PG",
      "tqp": "tqp-Latn-PG",
      "tqt": "tqt-Latn-MX",
      "tqu": "tqu-Latn-SB",
      "tqw": "tqw-Latn-US",
      "tr": "tr-Latn-TR",
      "tra": "tra-Arab-AF",
      "trb": "trb-Latn-PG",
      "trc": "trc-Latn-MX",
      "tre": "tre-Latn-ID",
      "trf": "trf-Latn-TT",
      "trg": "trg-Hebr-IL",
      "trh": "trh-Latn-PG",
      "tri": "tri-Latn-SR",
      "trj": "trj-Latn-TD",
      "trl": "trl-Latn-GB",
      "trm": "trm-Arab-AF",
      "trn": "trn-Latn-BO",
      "tro": "tro-Latn-IN",
      "trp": "trp-Latn-IN",
      "trq": "trq-Latn-MX",
      "trr": "trr-Latn-PE",
      "trs": "trs-Latn-MX",
      "trt": "trt-Latn-ID",
      "tru": "tru-Latn-TR",
      "trv": "trv-Latn-TW",
      "trw": "trw-Arab-PK",
      "trx": "trx-Latn-MY",
      "try": "try-Latn-IN",
      "trz": "trz-Latn-BR",
      "ts": "ts-Latn-ZA",
      "tsa": "tsa-Latn-CG",
      "tsb": "tsb-Latn-ET",
      "tsc": "tsc-Latn-MZ",
      "tsd": "tsd-Grek-GR",
      "tsg": "tsg-Latn-PH",
      "tsh": "tsh-Latn-CM",
      "tsi": "tsi-Latn-CA",
      "tsj": "tsj-Tibt-BT",
      "tsl": "tsl-Latn-VN",
      "tsp": "tsp-Latn-BF",
      "tsr": "tsr-Latn-VU",
      "tst": "tst-Latn-ML",
      "tsu": "tsu-Latn-TW",
      "tsv": "tsv-Latn-GA",
      "tsw": "tsw-Latn-NG",
      "tsx": "tsx-Latn-PG",
      "tsz": "tsz-Latn-MX",
      "tt": "tt-Cyrl-RU",
      "ttb": "ttb-Latn-NG",
      "ttc": "ttc-Latn-GT",
      "ttd": "ttd-Latn-PG",
      "tte": "tte-Latn-PG",
      "ttf": "ttf-Latn-CM",
      "tth": "tth-Laoo-LA",
      "tti": "tti-Latn-ID",
      "ttj": "ttj-Latn-UG",
      "ttk": "ttk-Latn-CO",
      "ttl": "ttl-Latn-ZM",
      "ttm": "ttm-Latn-CA",
      "ttn": "ttn-Latn-ID",
      "tto": "tto-Laoo-LA",
      "ttp": "ttp-Latn-ID",
      "ttr": "ttr-Latn-NG",
      "tts": "tts-Thai-TH",
      "ttt": "ttt-Latn-AZ",
      "ttu": "ttu-Latn-PG",
      "ttv": "ttv-Latn-PG",
      "ttw": "ttw-Latn-MY",
      "tty": "tty-Latn-ID",
      "ttz": "ttz-Deva-NP",
      "tua": "tua-Latn-PG",
      "tub": "tub-Latn-US",
      "tuc": "tuc-Latn-PG",
      "tud": "tud-Latn-BR",
      "tue": "tue-Latn-CO",
      "tuf": "tuf-Latn-CO",
      "tug": "tug-Latn-TD",
      "tuh": "tuh-Latn-PG",
      "tui": "tui-Latn-CM",
      "tuj": "tuj-Latn-ID",
      "tul": "tul-Latn-NG",
      "tum": "tum-Latn-MW",
      "tun": "tun-Latn-US",
      "tuo": "tuo-Latn-BR",
      "tuq": "tuq-Latn-TD",
      "tus": "tus-Latn-CA",
      "tuu": "tuu-Latn-US",
      "tuv": "tuv-Latn-KE",
      "tux": "tux-Latn-BR",
      "tuy": "tuy-Latn-KE",
      "tuz": "tuz-Latn-BF",
      "tva": "tva-Latn-SB",
      "tvd": "tvd-Latn-NG",
      "tve": "tve-Latn-ID",
      "tvi": "tvi-Latn-NG",
      "tvk": "tvk-Latn-VU",
      "tvl": "tvl-Latn-TV",
      "tvm": "tvm-Latn-ID",
      "tvn": "tvn-Mymr-MM",
      "tvo": "tvo-Latn-ID",
      "tvs": "tvs-Latn-KE",
      "tvt": "tvt-Latn-IN",
      "tvu": "tvu-Latn-CM",
      "tvw": "tvw-Latn-ID",
      "tvx": "tvx-Latn-TW",
      "twa": "twa-Latn-US",
      "twb": "twb-Latn-PH",
      "twd": "twd-Latn-NL",
      "twe": "twe-Latn-ID",
      "twf": "twf-Latn-US",
      "twg": "twg-Latn-ID",
      "twh": "twh-Latn-VN",
      "twl": "twl-Latn-MZ",
      "twm": "twm-Deva-IN",
      "twn": "twn-Latn-CM",
      "two": "two-Latn-BW",
      "twp": "twp-Latn-PG",
      "twq": "twq-Latn-NE",
      "twr": "twr-Latn-MX",
      "twt": "twt-Latn-BR",
      "twu": "twu-Latn-ID",
      "tww": "tww-Latn-PG",
      "twx": "twx-Latn-MZ",
      "twy": "twy-Latn-ID",
      "txa": "txa-Latn-MY",
      "txe": "txe-Latn-ID",
      "txg": "txg-Tang-CN",
      "txi": "txi-Latn-BR",
      "txj": "txj-Latn-NG",
      "txm": "txm-Latn-ID",
      "txn": "txn-Latn-ID",
      "txo": "txo-Toto-IN",
      "txq": "txq-Latn-ID",
      "txs": "txs-Latn-ID",
      "txt": "txt-Latn-ID",
      "txu": "txu-Latn-BR",
      "txx": "txx-Latn-MY",
      "txy": "txy-Latn-MG",
      "ty": "ty-Latn-PF",
      "tya": "tya-Latn-PG",
      "tye": "tye-Latn-NG",
      "tyh": "tyh-Latn-VN",
      "tyi": "tyi-Latn-CG",
      "tyj": "tyj-Latn-VN",
      "tyl": "tyl-Latn-VN",
      "tyn": "tyn-Latn-ID",
      "typ": "typ-Latn-AU",
      "tyr": "tyr-Tavt-VN",
      "tys": "tys-Latn-VN",
      "tyt": "tyt-Latn-VN",
      "tyu": "tyu-Latn-BW",
      "tyv": "tyv-Cyrl-RU",
      "tyx": "tyx-Latn-CG",
      "tyy": "tyy-Latn-NG",
      "tyz": "tyz-Latn-VN",
      "tzh": "tzh-Latn-MX",
      "tzj": "tzj-Latn-GT",
      "tzl": "tzl-Latn-001",
      "tzm": "tzm-Latn-MA",
      "tzn": "tzn-Latn-ID",
      "tzo": "tzo-Latn-MX",
      "tzx": "tzx-Latn-PG",
      "uam": "uam-Latn-BR",
      "uar": "uar-Latn-PG",
      "uba": "uba-Latn-NG",
      "ubi": "ubi-Latn-TD",
      "ubl": "ubl-Latn-PH",
      "ubr": "ubr-Latn-PG",
      "ubu": "ubu-Latn-PG",
      "uby": "uby-Latn-TR",
      "uda": "uda-Latn-NG",
      "ude": "ude-Cyrl-RU",
      "udg": "udg-Mlym-IN",
      "udi": "udi-Cyrl-RU",
      "udj": "udj-Latn-ID",
      "udl": "udl-Latn-CM",
      "udm": "udm-Cyrl-RU",
      "udu": "udu-Latn-SD",
      "ues": "ues-Latn-ID",
      "ufi": "ufi-Latn-PG",
      "ug": "ug-Arab-CN",
      "ug-Cyrl": "ug-Cyrl-KZ",
      "ug-KZ": "ug-Cyrl-KZ",
      "ug-MN": "ug-Cyrl-MN",
      "uga": "uga-Ugar-SY",
      "ugb": "ugb-Latn-AU",
      "uge": "uge-Latn-SB",
      "ugh": "ugh-Cyrl-RU",
      "ugo": "ugo-Thai-TH",
      "uha": "uha-Latn-NG",
      "uhn": "uhn-Latn-ID",
      "uis": "uis-Latn-PG",
      "uiv": "uiv-Latn-CM",
      "uji": "uji-Latn-NG",
      "uk": "uk-Cyrl-UA",
      "uka": "uka-Latn-ID",
      "ukg": "ukg-Latn-PG",
      "ukh": "ukh-Latn-CF",
      "uki": "uki-Orya-IN",
      "ukk": "ukk-Latn-MM",
      "ukp": "ukp-Latn-NG",
      "ukq": "ukq-Latn-NG",
      "uku": "uku-Latn-NG",
      "ukv": "ukv-Latn-SS",
      "ukw": "ukw-Latn-NG",
      "uky": "uky-Latn-AU",
      "ula": "ula-Latn-NG",
      "ulb": "ulb-Latn-NG",
      "ulc": "ulc-Cyrl-RU",
      "ule": "ule-Latn-AR",
      "ulf": "ulf-Latn-ID",
      "uli": "uli-Latn-FM",
      "ulk": "ulk-Latn-AU",
      "ulm": "ulm-Latn-ID",
      "uln": "uln-Latn-PG",
      "ulu": "ulu-Latn-ID",
      "ulw": "ulw-Latn-NI",
      "uly": "uly-Latn-NG",
      "uma": "uma-Latn-US",
      "umb": "umb-Latn-AO",
      "umd": "umd-Latn-AU",
      "umg": "umg-Latn-AU",
      "umi": "umi-Latn-MY",
      "umm": "umm-Latn-NG",
      "umn": "umn-Latn-MM",
      "umo": "umo-Latn-BR",
      "ump": "ump-Latn-AU",
      "umr": "umr-Latn-AU",
      "ums": "ums-Latn-ID",
      "una": "una-Latn-PG",
      "und": "en-Latn-US",
      "und-419": "es-Latn-419",
      "und-AD": "ca-Latn-AD",
      "und-AE": "ar-Arab-AE",
      "und-AF": "fa-Arab-AF",
      "und-AL": "sq-Latn-AL",
      "und-AM": "hy-Armn-AM",
      "und-AO": "pt-Latn-AO",
      "und-AR": "es-Latn-AR",
      "und-AS": "sm-Latn-AS",
      "und-AT": "de-Latn-AT",
      "und-AW": "nl-Latn-AW",
      "und-AX": "sv-Latn-AX",
      "und-AZ": "az-Latn-AZ",
      "und-Adlm": "ff-Adlm-GN",
      "und-Aghb": "xag-Aghb-AZ",
      "und-Ahom": "aho-Ahom-IN",
      "und-Arab": "ar-Arab-EG",
      "und-Arab-AF": "fa-Arab-AF",
      "und-Arab-BN": "ms-Arab-BN",
      "und-Arab-CC": "ms-Arab-CC",
      "und-Arab-CN": "ug-Arab-CN",
      "und-Arab-GB": "ur-Arab-GB",
      "und-Arab-ID": "ms-Arab-ID",
      "und-Arab-IN": "ur-Arab-IN",
      "und-Arab-IR": "fa-Arab-IR",
      "und-Arab-KH": "cja-Arab-KH",
      "und-Arab-MM": "rhg-Arab-MM",
      "und-Arab-MN": "kk-Arab-MN",
      "und-Arab-MU": "ur-Arab-MU",
      "und-Arab-NG": "ha-Arab-NG",
      "und-Arab-PK": "ur-Arab-PK",
      "und-Arab-TG": "apd-Arab-TG",
      "und-Arab-TH": "mfa-Arab-TH",
      "und-Arab-TJ": "fa-Arab-TJ",
      "und-Arab-TR": "apc-Arab-TR",
      "und-Arab-YT": "swb-Arab-YT",
      "und-Armi": "arc-Armi-IR",
      "und-Armn": "hy-Armn-AM",
      "und-Avst": "ae-Avst-IR",
      "und-BA": "bs-Latn-BA",
      "und-BD": "bn-Beng-BD",
      "und-BE": "nl-Latn-BE",
      "und-BF": "fr-Latn-BF",
      "und-BG": "bg-Cyrl-BG",
      "und-BH": "ar-Arab-BH",
      "und-BI": "rn-Latn-BI",
      "und-BJ": "fr-Latn-BJ",
      "und-BL": "fr-Latn-BL",
      "und-BN": "ms-Latn-BN",
      "und-BO": "es-Latn-BO",
      "und-BQ": "pap-Latn-BQ",
      "und-BR": "pt-Latn-BR",
      "und-BT": "dz-Tibt-BT",
      "und-BY": "be-Cyrl-BY",
      "und-Bali": "ban-Bali-ID",
      "und-Bamu": "bax-Bamu-CM",
      "und-Bass": "bsq-Bass-LR",
      "und-Batk": "bbc-Batk-ID",
      "und-Beng": "bn-Beng-BD",
      "und-Bhks": "sa-Bhks-IN",
      "und-Bopo": "zh-Bopo-TW",
      "und-Brah": "pka-Brah-IN",
      "und-Brai": "fr-Brai-FR",
      "und-Bugi": "bug-Bugi-ID",
      "und-Buhd": "bku-Buhd-PH",
      "und-CC": "ms-Arab-CC",
      "und-CD": "sw-Latn-CD",
      "und-CF": "fr-Latn-CF",
      "und-CG": "fr-Latn-CG",
      "und-CH": "de-Latn-CH",
      "und-CI": "fr-Latn-CI",
      "und-CL": "es-Latn-CL",
      "und-CM": "fr-Latn-CM",
      "und-CN": "zh-Hans-CN",
      "und-CO": "es-Latn-CO",
      "und-CR": "es-Latn-CR",
      "und-CU": "es-Latn-CU",
      "und-CV": "pt-Latn-CV",
      "und-CW": "pap-Latn-CW",
      "und-CY": "el-Grek-CY",
      "und-CZ": "cs-Latn-CZ",
      "und-Cakm": "ccp-Cakm-BD",
      "und-Cans": "iu-Cans-CA",
      "und-Cari": "xcr-Cari-TR",
      "und-Cham": "cjm-Cham-VN",
      "und-Cher": "chr-Cher-US",
      "und-Chrs": "xco-Chrs-UZ",
      "und-Copt": "cop-Copt-EG",
      "und-Cpmn": "und-Cpmn-CY",
      "und-Cprt": "grc-Cprt-CY",
      "und-Cyrl": "ru-Cyrl-RU",
      "und-Cyrl-AF": "kaa-Cyrl-AF",
      "und-Cyrl-AL": "mk-Cyrl-AL",
      "und-Cyrl-AZ": "az-Cyrl-AZ",
      "und-Cyrl-BA": "sr-Cyrl-BA",
      "und-Cyrl-BG": "bg-Cyrl-BG",
      "und-Cyrl-BY": "be-Cyrl-BY",
      "und-Cyrl-GE": "ab-Cyrl-GE",
      "und-Cyrl-GR": "mk-Cyrl-GR",
      "und-Cyrl-IR": "kaa-Cyrl-IR",
      "und-Cyrl-KG": "ky-Cyrl-KG",
      "und-Cyrl-MD": "uk-Cyrl-MD",
      "und-Cyrl-ME": "sr-Cyrl-ME",
      "und-Cyrl-MK": "mk-Cyrl-MK",
      "und-Cyrl-MN": "mn-Cyrl-MN",
      "und-Cyrl-RO": "bg-Cyrl-RO",
      "und-Cyrl-RS": "sr-Cyrl-RS",
      "und-Cyrl-SK": "uk-Cyrl-SK",
      "und-Cyrl-TJ": "tg-Cyrl-TJ",
      "und-Cyrl-TR": "kbd-Cyrl-TR",
      "und-Cyrl-UA": "uk-Cyrl-UA",
      "und-Cyrl-UZ": "uz-Cyrl-UZ",
      "und-Cyrl-XK": "sr-Cyrl-XK",
      "und-DE": "de-Latn-DE",
      "und-DJ": "aa-Latn-DJ",
      "und-DK": "da-Latn-DK",
      "und-DO": "es-Latn-DO",
      "und-DZ": "ar-Arab-DZ",
      "und-Deva": "hi-Deva-IN",
      "und-Deva-BT": "ne-Deva-BT",
      "und-Deva-FJ": "hif-Deva-FJ",
      "und-Deva-MU": "bho-Deva-MU",
      "und-Deva-NP": "ne-Deva-NP",
      "und-Deva-PK": "btv-Deva-PK",
      "und-Diak": "dv-Diak-MV",
      "und-Dogr": "doi-Dogr-IN",
      "und-Dupl": "fr-Dupl-FR",
      "und-EA": "es-Latn-EA",
      "und-EC": "es-Latn-EC",
      "und-EE": "et-Latn-EE",
      "und-EG": "ar-Arab-EG",
      "und-EH": "ar-Arab-EH",
      "und-ER": "ti-Ethi-ER",
      "und-ES": "es-Latn-ES",
      "und-ET": "am-Ethi-ET",
      "und-Egyp": "egy-Egyp-EG",
      "und-Elba": "sq-Elba-AL",
      "und-Elym": "arc-Elym-IR",
      "und-Ethi": "am-Ethi-ET",
      "und-Ethi-ER": "ti-Ethi-ER",
      "und-FI": "fi-Latn-FI",
      "und-FO": "fo-Latn-FO",
      "und-FR": "fr-Latn-FR",
      "und-GA": "fr-Latn-GA",
      "und-GE": "ka-Geor-GE",
      "und-GF": "fr-Latn-GF",
      "und-GH": "ak-Latn-GH",
      "und-GL": "kl-Latn-GL",
      "und-GN": "fr-Latn-GN",
      "und-GP": "fr-Latn-GP",
      "und-GQ": "es-Latn-GQ",
      "und-GR": "el-Grek-GR",
      "und-GT": "es-Latn-GT",
      "und-GW": "pt-Latn-GW",
      "und-Gara": "wo-Gara-SN",
      "und-Geor": "ka-Geor-GE",
      "und-Glag": "cu-Glag-BG",
      "und-Gong": "wsg-Gong-IN",
      "und-Gonm": "esg-Gonm-IN",
      "und-Goth": "got-Goth-UA",
      "und-Gran": "sa-Gran-IN",
      "und-Grek": "el-Grek-GR",
      "und-Grek-TR": "bgx-Grek-TR",
      "und-Gujr": "gu-Gujr-IN",
      "und-Gukh": "gvr-Gukh-NP",
      "und-Guru": "pa-Guru-IN",
      "und-HK": "zh-Hant-HK",
      "und-HN": "es-Latn-HN",
      "und-HR": "hr-Latn-HR",
      "und-HT": "ht-Latn-HT",
      "und-HU": "hu-Latn-HU",
      "und-Hanb": "zh-Hanb-TW",
      "und-Hang": "ko-Hang-KR",
      "und-Hani": "zh-Hani-CN",
      "und-Hano": "hnn-Hano-PH",
      "und-Hans": "zh-Hans-CN",
      "und-Hant": "zh-Hant-TW",
      "und-Hant-CA": "yue-Hant-CA",
      "und-Hant-CN": "yue-Hant-CN",
      "und-Hatr": "arc-Hatr-IQ",
      "und-Hebr": "he-Hebr-IL",
      "und-Hebr-SE": "yi-Hebr-SE",
      "und-Hebr-UA": "yi-Hebr-UA",
      "und-Hebr-US": "yi-Hebr-US",
      "und-Hira": "ja-Hira-JP",
      "und-Hluw": "hlu-Hluw-TR",
      "und-Hmng": "hnj-Hmng-LA",
      "und-Hmnp": "hnj-Hmnp-US",
      "und-Hung": "hu-Hung-HU",
      "und-IC": "es-Latn-IC",
      "und-ID": "id-Latn-ID",
      "und-IL": "he-Hebr-IL",
      "und-IN": "hi-Deva-IN",
      "und-IQ": "ar-Arab-IQ",
      "und-IR": "fa-Arab-IR",
      "und-IS": "is-Latn-IS",
      "und-IT": "it-Latn-IT",
      "und-Ital": "ett-Ital-IT",
      "und-JO": "ar-Arab-JO",
      "und-JP": "ja-Jpan-JP",
      "und-Jamo": "ko-Jamo-KR",
      "und-Java": "jv-Java-ID",
      "und-Jpan": "ja-Jpan-JP",
      "und-KE": "sw-Latn-KE",
      "und-KG": "ky-Cyrl-KG",
      "und-KH": "km-Khmr-KH",
      "und-KM": "ar-Arab-KM",
      "und-KP": "ko-Kore-KP",
      "und-KR": "ko-Kore-KR",
      "und-KW": "ar-Arab-KW",
      "und-KZ": "ru-Cyrl-KZ",
      "und-Kali": "eky-Kali-MM",
      "und-Kana": "ja-Kana-JP",
      "und-Kawi": "kaw-Kawi-ID",
      "und-Khar": "pra-Khar-PK",
      "und-Khmr": "km-Khmr-KH",
      "und-Khoj": "sd-Khoj-IN",
      "und-Kits": "zkt-Kits-CN",
      "und-Knda": "kn-Knda-IN",
      "und-Kore": "ko-Kore-KR",
      "und-Krai": "bap-Krai-IN",
      "und-Kthi": "bho-Kthi-IN",
      "und-LA": "lo-Laoo-LA",
      "und-LB": "ar-Arab-LB",
      "und-LI": "de-Latn-LI",
      "und-LK": "si-Sinh-LK",
      "und-LS": "st-Latn-LS",
      "und-LT": "lt-Latn-LT",
      "und-LU": "fr-Latn-LU",
      "und-LV": "lv-Latn-LV",
      "und-LY": "ar-Arab-LY",
      "und-Lana": "nod-Lana-TH",
      "und-Laoo": "lo-Laoo-LA",
      "und-Latn-AE": "en-Latn-AE",
      "und-Latn-AF": "tk-Latn-AF",
      "und-Latn-AM": "ku-Latn-AM",
      "und-Latn-BD": "en-Latn-BD",
      "und-Latn-BG": "en-Latn-BG",
      "und-Latn-BT": "en-Latn-BT",
      "und-Latn-CC": "en-Latn-CC",
      "und-Latn-CN": "za-Latn-CN",
      "und-Latn-CY": "tr-Latn-CY",
      "und-Latn-DZ": "fr-Latn-DZ",
      "und-Latn-EG": "en-Latn-EG",
      "und-Latn-ER": "en-Latn-ER",
      "und-Latn-ET": "en-Latn-ET",
      "und-Latn-GE": "ku-Latn-GE",
      "und-Latn-GR": "en-Latn-GR",
      "und-Latn-HK": "en-Latn-HK",
      "und-Latn-IL": "en-Latn-IL",
      "und-Latn-IN": "en-Latn-IN",
      "und-Latn-IQ": "en-Latn-IQ",
      "und-Latn-IR": "tk-Latn-IR",
      "und-Latn-JO": "en-Latn-JO",
      "und-Latn-KM": "fr-Latn-KM",
      "und-Latn-KZ": "en-Latn-KZ",
      "und-Latn-LB": "en-Latn-LB",
      "und-Latn-LK": "en-Latn-LK",
      "und-Latn-MA": "fr-Latn-MA",
      "und-Latn-MK": "sq-Latn-MK",
      "und-Latn-MM": "kac-Latn-MM",
      "und-Latn-MO": "pt-Latn-MO",
      "und-Latn-MR": "fr-Latn-MR",
      "und-Latn-MV": "en-Latn-MV",
      "und-Latn-NP": "en-Latn-NP",
      "und-Latn-PK": "en-Latn-PK",
      "und-Latn-RU": "krl-Latn-RU",
      "und-Latn-SD": "en-Latn-SD",
      "und-Latn-SS": "en-Latn-SS",
      "und-Latn-SY": "fr-Latn-SY",
      "und-Latn-TH": "en-Latn-TH",
      "und-Latn-TN": "fr-Latn-TN",
      "und-Latn-TW": "trv-Latn-TW",
      "und-Latn-UA": "pl-Latn-UA",
      "und-Latn-YE": "en-Latn-YE",
      "und-Lepc": "lep-Lepc-IN",
      "und-Limb": "lif-Limb-IN",
      "und-Lina": "lab-Lina-GR",
      "und-Linb": "grc-Linb-GR",
      "und-Lisu": "lis-Lisu-CN",
      "und-Lyci": "xlc-Lyci-TR",
      "und-Lydi": "xld-Lydi-TR",
      "und-MA": "ar-Arab-MA",
      "und-MC": "fr-Latn-MC",
      "und-MD": "ro-Latn-MD",
      "und-ME": "sr-Latn-ME",
      "und-MF": "fr-Latn-MF",
      "und-MG": "mg-Latn-MG",
      "und-MK": "mk-Cyrl-MK",
      "und-ML": "bm-Latn-ML",
      "und-MM": "my-Mymr-MM",
      "und-MN": "mn-Cyrl-MN",
      "und-MO": "zh-Hant-MO",
      "und-MQ": "fr-Latn-MQ",
      "und-MR": "ar-Arab-MR",
      "und-MT": "mt-Latn-MT",
      "und-MU": "mfe-Latn-MU",
      "und-MV": "dv-Thaa-MV",
      "und-MX": "es-Latn-MX",
      "und-MY": "ms-Latn-MY",
      "und-MZ": "pt-Latn-MZ",
      "und-Mahj": "hi-Mahj-IN",
      "und-Maka": "mak-Maka-ID",
      "und-Mand": "myz-Mand-IR",
      "und-Mani": "xmn-Mani-CN",
      "und-Marc": "bo-Marc-CN",
      "und-Medf": "dmf-Medf-NG",
      "und-Mend": "men-Mend-SL",
      "und-Merc": "xmr-Merc-SD",
      "und-Mero": "xmr-Mero-SD",
      "und-Mlym": "ml-Mlym-IN",
      "und-Modi": "mr-Modi-IN",
      "und-Mong": "mn-Mong-CN",
      "und-Mroo": "mro-Mroo-BD",
      "und-Mtei": "mni-Mtei-IN",
      "und-Mult": "skr-Mult-PK",
      "und-Mymr": "my-Mymr-MM",
      "und-Mymr-IN": "kht-Mymr-IN",
      "und-Mymr-TH": "mnw-Mymr-TH",
      "und-NA": "af-Latn-NA",
      "und-NC": "fr-Latn-NC",
      "und-NE": "ha-Latn-NE",
      "und-NI": "es-Latn-NI",
      "und-NL": "nl-Latn-NL",
      "und-NO": "nb-Latn-NO",
      "und-NP": "ne-Deva-NP",
      "und-Nagm": "unr-Nagm-IN",
      "und-Nand": "sa-Nand-IN",
      "und-Narb": "xna-Narb-SA",
      "und-Nbat": "arc-Nbat-JO",
      "und-Newa": "new-Newa-NP",
      "und-Nkoo": "man-Nkoo-GN",
      "und-Nkoo-ML": "bm-Nkoo-ML",
      "und-Nshu": "zhx-Nshu-CN",
      "und-OM": "ar-Arab-OM",
      "und-Ogam": "sga-Ogam-IE",
      "und-Olck": "sat-Olck-IN",
      "und-Onao": "unr-Onao-IN",
      "und-Orkh": "otk-Orkh-MN",
      "und-Orya": "or-Orya-IN",
      "und-Osge": "osa-Osge-US",
      "und-Osma": "so-Osma-SO",
      "und-Ougr": "oui-Ougr-CN",
      "und-PA": "es-Latn-PA",
      "und-PE": "es-Latn-PE",
      "und-PF": "fr-Latn-PF",
      "und-PG": "tpi-Latn-PG",
      "und-PH": "fil-Latn-PH",
      "und-PK": "ur-Arab-PK",
      "und-PL": "pl-Latn-PL",
      "und-PM": "fr-Latn-PM",
      "und-PR": "es-Latn-PR",
      "und-PS": "ar-Arab-PS",
      "und-PT": "pt-Latn-PT",
      "und-PW": "pau-Latn-PW",
      "und-PY": "gn-Latn-PY",
      "und-Palm": "arc-Palm-SY",
      "und-Pauc": "ctd-Pauc-MM",
      "und-Perm": "kv-Perm-RU",
      "und-Phag": "lzh-Phag-CN",
      "und-Phli": "pal-Phli-IR",
      "und-Phlp": "pal-Phlp-CN",
      "und-Phnx": "phn-Phnx-LB",
      "und-Plrd": "hmd-Plrd-CN",
      "und-Prti": "xpr-Prti-IR",
      "und-QA": "ar-Arab-QA",
      "und-RE": "fr-Latn-RE",
      "und-RO": "ro-Latn-RO",
      "und-RS": "sr-Cyrl-RS",
      "und-RU": "ru-Cyrl-RU",
      "und-RW": "rw-Latn-RW",
      "und-Rjng": "rej-Rjng-ID",
      "und-Rohg": "rhg-Rohg-MM",
      "und-Runr": "non-Runr-SE",
      "und-SA": "ar-Arab-SA",
      "und-SC": "fr-Latn-SC",
      "und-SD": "ar-Arab-SD",
      "und-SE": "sv-Latn-SE",
      "und-SI": "sl-Latn-SI",
      "und-SJ": "nb-Latn-SJ",
      "und-SK": "sk-Latn-SK",
      "und-SL": "kri-Latn-SL",
      "und-SM": "it-Latn-SM",
      "und-SN": "fr-Latn-SN",
      "und-SO": "so-Latn-SO",
      "und-SR": "nl-Latn-SR",
      "und-SS": "ar-Arab-SS",
      "und-ST": "pt-Latn-ST",
      "und-SV": "es-Latn-SV",
      "und-SY": "ar-Arab-SY",
      "und-Samr": "smp-Samr-IL",
      "und-Sarb": "xsa-Sarb-YE",
      "und-Saur": "saz-Saur-IN",
      "und-Sgnw": "ase-Sgnw-US",
      "und-Shaw": "en-Shaw-GB",
      "und-Shrd": "sa-Shrd-IN",
      "und-Sidd": "sa-Sidd-IN",
      "und-Sind": "sd-Sind-IN",
      "und-Sinh": "si-Sinh-LK",
      "und-Sogd": "sog-Sogd-UZ",
      "und-Sogo": "sog-Sogo-UZ",
      "und-Sora": "srb-Sora-IN",
      "und-Soyo": "cmg-Soyo-MN",
      "und-Sund": "su-Sund-ID",
      "und-Sunu": "suz-Sunu-NP",
      "und-Sylo": "syl-Sylo-BD",
      "und-Syrc": "syr-Syrc-IQ",
      "und-TD": "fr-Latn-TD",
      "und-TF": "fr-Latn-TF",
      "und-TG": "fr-Latn-TG",
      "und-TH": "th-Thai-TH",
      "und-TJ": "tg-Cyrl-TJ",
      "und-TK": "tkl-Latn-TK",
      "und-TL": "pt-Latn-TL",
      "und-TM": "tk-Latn-TM",
      "und-TN": "ar-Arab-TN",
      "und-TO": "to-Latn-TO",
      "und-TR": "tr-Latn-TR",
      "und-TV": "tvl-Latn-TV",
      "und-TW": "zh-Hant-TW",
      "und-TZ": "sw-Latn-TZ",
      "und-Tagb": "tbw-Tagb-PH",
      "und-Takr": "doi-Takr-IN",
      "und-Tale": "tdd-Tale-CN",
      "und-Talu": "khb-Talu-CN",
      "und-Taml": "ta-Taml-IN",
      "und-Tang": "txg-Tang-CN",
      "und-Tavt": "blt-Tavt-VN",
      "und-Telu": "te-Telu-IN",
      "und-Tfng": "zgh-Tfng-MA",
      "und-Tglg": "fil-Tglg-PH",
      "und-Thaa": "dv-Thaa-MV",
      "und-Thai": "th-Thai-TH",
      "und-Thai-CN": "lcp-Thai-CN",
      "und-Thai-KH": "kdt-Thai-KH",
      "und-Thai-LA": "kdt-Thai-LA",
      "und-Tibt": "bo-Tibt-CN",
      "und-Tibt-BT": "dz-Tibt-BT",
      "und-Tirh": "mai-Tirh-IN",
      "und-Tnsa": "nst-Tnsa-IN",
      "und-Todr": "sq-Todr-AL",
      "und-Toto": "txo-Toto-IN",
      "und-Tutg": "sa-Tutg-IN",
      "und-UA": "uk-Cyrl-UA",
      "und-UG": "sw-Latn-UG",
      "und-UY": "es-Latn-UY",
      "und-UZ": "uz-Latn-UZ",
      "und-Ugar": "uga-Ugar-SY",
      "und-VA": "it-Latn-VA",
      "und-VE": "es-Latn-VE",
      "und-VN": "vi-Latn-VN",
      "und-VU": "bi-Latn-VU",
      "und-Vaii": "vai-Vaii-LR",
      "und-Vith": "sq-Vith-AL",
      "und-WF": "fr-Latn-WF",
      "und-WS": "sm-Latn-WS",
      "und-Wara": "hoc-Wara-IN",
      "und-Wcho": "nnp-Wcho-IN",
      "und-XK": "sq-Latn-XK",
      "und-Xpeo": "peo-Xpeo-IR",
      "und-Xsux": "akk-Xsux-IQ",
      "und-YE": "ar-Arab-YE",
      "und-YT": "fr-Latn-YT",
      "und-Yezi": "ku-Yezi-GE",
      "und-Yiii": "ii-Yiii-CN",
      "und-ZM": "bem-Latn-ZM",
      "und-ZW": "sn-Latn-ZW",
      "und-Zanb": "cmg-Zanb-MN",
      "une": "une-Latn-NG",
      "ung": "ung-Latn-AU",
      "uni": "uni-Latn-PG",
      "unk": "unk-Latn-BR",
      "unm": "unm-Latn-US",
      "unn": "unn-Latn-AU",
      "unr": "unr-Beng-IN",
      "unr-Deva": "unr-Deva-NP",
      "unr-NP": "unr-Deva-NP",
      "unu": "unu-Latn-PG",
      "unx": "unx-Beng-IN",
      "unz": "unz-Latn-ID",
      "uon": "uon-Latn-TW",
      "upi": "upi-Latn-PG",
      "upv": "upv-Latn-VU",
      "ur": "ur-Arab-PK",
      "ura": "ura-Latn-PE",
      "urb": "urb-Latn-BR",
      "urc": "urc-Latn-AU",
      "ure": "ure-Latn-BO",
      "urf": "urf-Latn-AU",
      "urg": "urg-Latn-PG",
      "urh": "urh-Latn-NG",
      "uri": "uri-Latn-PG",
      "urk": "urk-Thai-TH",
      "urm": "urm-Latn-PG",
      "urn": "urn-Latn-ID",
      "uro": "uro-Latn-PG",
      "urp": "urp-Latn-BR",
      "urr": "urr-Latn-VU",
      "urt": "urt-Latn-PG",
      "uru": "uru-Latn-BR",
      "urv": "urv-Latn-PG",
      "urw": "urw-Latn-PG",
      "urx": "urx-Latn-PG",
      "ury": "ury-Latn-ID",
      "urz": "urz-Latn-BR",
      "usa": "usa-Latn-PG",
      "ush": "ush-Arab-PK",
      "usi": "usi-Latn-BD",
      "usk": "usk-Latn-CM",
      "usp": "usp-Latn-GT",
      "uss": "uss-Latn-NG",
      "usu": "usu-Latn-PG",
      "uta": "uta-Latn-NG",
      "ute": "ute-Latn-US",
      "uth": "uth-Latn-NG",
      "utp": "utp-Latn-SB",
      "utr": "utr-Latn-NG",
      "utu": "utu-Latn-PG",
      "uum": "uum-Grek-GE",
      "uur": "uur-Latn-VU",
      "uve": "uve-Latn-NC",
      "uvh": "uvh-Latn-PG",
      "uvl": "uvl-Latn-PG",
      "uwa": "uwa-Latn-AU",
      "uya": "uya-Latn-NG",
      "uz": "uz-Latn-UZ",
      "uz-AF": "uz-Arab-AF",
      "uz-Arab": "uz-Arab-AF",
      "uz-CN": "uz-Cyrl-CN",
      "uzs": "uzs-Arab-AF",
      "vaa": "vaa-Taml-IN",
      "vae": "vae-Latn-CF",
      "vaf": "vaf-Arab-IR",
      "vag": "vag-Latn-GH",
      "vah": "vah-Deva-IN",
      "vai": "vai-Vaii-LR",
      "vaj": "vaj-Latn-NA",
      "val": "val-Latn-PG",
      "vam": "vam-Latn-PG",
      "van": "van-Latn-PG",
      "vao": "vao-Latn-VU",
      "vap": "vap-Latn-IN",
      "var": "var-Latn-MX",
      "vas": "vas-Deva-IN",
      "vau": "vau-Latn-CD",
      "vav": "vav-Deva-IN",
      "vay": "vay-Deva-NP",
      "vbb": "vbb-Latn-ID",
      "vbk": "vbk-Latn-PH",
      "ve": "ve-Latn-ZA",
      "vec": "vec-Latn-IT",
      "vem": "vem-Latn-NG",
      "veo": "veo-Latn-US",
      "vep": "vep-Latn-RU",
      "ver": "ver-Latn-NG",
      "vgr": "vgr-Arab-PK",
      "vi": "vi-Latn-VN",
      "vic": "vic-Latn-SX",
      "vid": "vid-Latn-TZ",
      "vif": "vif-Latn-CG",
      "vig": "vig-Latn-BF",
      "vil": "vil-Latn-AR",
      "vin": "vin-Latn-TZ",
      "vit": "vit-Latn-NG",
      "viv": "viv-Latn-PG",
      "vjk": "vjk-Deva-IN",
      "vka": "vka-Latn-AU",
      "vkj": "vkj-Latn-TD",
      "vkk": "vkk-Latn-ID",
      "vkl": "vkl-Latn-ID",
      "vkm": "vkm-Latn-BR",
      "vkn": "vkn-Latn-NG",
      "vko": "vko-Latn-ID",
      "vkp": "vkp-Latn-IN",
      "vkt": "vkt-Latn-ID",
      "vku": "vku-Latn-AU",
      "vkz": "vkz-Latn-NG",
      "vlp": "vlp-Latn-VU",
      "vls": "vls-Latn-BE",
      "vma": "vma-Latn-AU",
      "vmb": "vmb-Latn-AU",
      "vmc": "vmc-Latn-MX",
      "vmd": "vmd-Knda-IN",
      "vme": "vme-Latn-ID",
      "vmf": "vmf-Latn-DE",
      "vmg": "vmg-Latn-PG",
      "vmh": "vmh-Arab-IR",
      "vmi": "vmi-Latn-AU",
      "vmj": "vmj-Latn-MX",
      "vmk": "vmk-Latn-MZ",
      "vml": "vml-Latn-AU",
      "vmm": "vmm-Latn-MX",
      "vmp": "vmp-Latn-MX",
      "vmq": "vmq-Latn-MX",
      "vmr": "vmr-Latn-MZ",
      "vms": "vms-Latn-ID",
      "vmu": "vmu-Latn-AU",
      "vmw": "vmw-Latn-MZ",
      "vmx": "vmx-Latn-MX",
      "vmy": "vmy-Latn-MX",
      "vmz": "vmz-Latn-MX",
      "vnk": "vnk-Latn-SB",
      "vnm": "vnm-Latn-VU",
      "vnp": "vnp-Latn-VU",
      "vo": "vo-Latn-001",
      "vor": "vor-Latn-NG",
      "vot": "vot-Latn-RU",
      "vra": "vra-Latn-VU",
      "vro": "vro-Latn-EE",
      "vrs": "vrs-Latn-SB",
      "vrt": "vrt-Latn-VU",
      "vto": "vto-Latn-ID",
      "vum": "vum-Latn-GA",
      "vun": "vun-Latn-TZ",
      "vut": "vut-Latn-CM",
      "vwa": "vwa-Latn-CN",
      "wa": "wa-Latn-BE",
      "waa": "waa-Latn-US",
      "wab": "wab-Latn-PG",
      "wac": "wac-Latn-US",
      "wad": "wad-Latn-ID",
      "wae": "wae-Latn-CH",
      "waf": "waf-Latn-BR",
      "wag": "wag-Latn-PG",
      "wah": "wah-Latn-ID",
      "wai": "wai-Latn-ID",
      "waj": "waj-Latn-PG",
      "wal": "wal-Ethi-ET",
      "wam": "wam-Latn-US",
      "wan": "wan-Latn-CI",
      "wap": "wap-Latn-GY",
      "waq": "waq-Latn-AU",
      "war": "war-Latn-PH",
      "was": "was-Latn-US",
      "wat": "wat-Latn-PG",
      "wau": "wau-Latn-BR",
      "wav": "wav-Latn-NG",
      "waw": "waw-Latn-BR",
      "wax": "wax-Latn-PG",
      "way": "way-Latn-SR",
      "waz": "waz-Latn-PG",
      "wba": "wba-Latn-VE",
      "wbb": "wbb-Latn-ID",
      "wbe": "wbe-Latn-ID",
      "wbf": "wbf-Latn-BF",
      "wbh": "wbh-Latn-TZ",
      "wbi": "wbi-Latn-TZ",
      "wbj": "wbj-Latn-TZ",
      "wbk": "wbk-Arab-AF",
      "wbl": "wbl-Latn-PK",
      "wbm": "wbm-Latn-CN",
      "wbp": "wbp-Latn-AU",
      "wbq": "wbq-Telu-IN",
      "wbr": "wbr-Deva-IN",
      "wbt": "wbt-Latn-AU",
      "wbv": "wbv-Latn-AU",
      "wbw": "wbw-Latn-ID",
      "wca": "wca-Latn-BR",
      "wci": "wci-Latn-TG",
      "wdd": "wdd-Latn-GA",
      "wdg": "wdg-Latn-PG",
      "wdj": "wdj-Latn-AU",
      "wdk": "wdk-Latn-AU",
      "wdt": "wdt-Latn-CA",
      "wdu": "wdu-Latn-AU",
      "wdy": "wdy-Latn-AU",
      "wec": "wec-Latn-CI",
      "wed": "wed-Latn-PG",
      "weg": "weg-Latn-AU",
      "weh": "weh-Latn-CM",
      "wei": "wei-Latn-PG",
      "wem": "wem-Latn-BJ",
      "weo": "weo-Latn-ID",
      "wep": "wep-Latn-DE",
      "wer": "wer-Latn-PG",
      "wes": "wes-Latn-CM",
      "wet": "wet-Latn-ID",
      "weu": "weu-Latn-MM",
      "wew": "wew-Latn-ID",
      "wfg": "wfg-Latn-ID",
      "wga": "wga-Latn-AU",
      "wgb": "wgb-Latn-PG",
      "wgg": "wgg-Latn-AU",
      "wgi": "wgi-Latn-PG",
      "wgo": "wgo-Latn-ID",
      "wgu": "wgu-Latn-AU",
      "wgy": "wgy-Latn-AU",
      "wha": "wha-Latn-ID",
      "whg": "whg-Latn-PG",
      "whk": "whk-Latn-ID",
      "whu": "whu-Latn-ID",
      "wib": "wib-Latn-BF",
      "wic": "wic-Latn-US",
      "wie": "wie-Latn-AU",
      "wif": "wif-Latn-AU",
      "wig": "wig-Latn-AU",
      "wih": "wih-Latn-AU",
      "wii": "wii-Latn-PG",
      "wij": "wij-Latn-AU",
      "wik": "wik-Latn-AU",
      "wil": "wil-Latn-AU",
      "wim": "wim-Latn-AU",
      "win": "win-Latn-US",
      "wir": "wir-Latn-BR",
      "wiu": "wiu-Latn-PG",
      "wiv": "wiv-Latn-PG",
      "wiy": "wiy-Latn-US",
      "wja": "wja-Latn-NG",
      "wji": "wji-Latn-NG",
      "wka": "wka-Latn-TZ",
      "wkd": "wkd-Latn-ID",
      "wkr": "wkr-Latn-AU",
      "wkw": "wkw-Latn-AU",
      "wky": "wky-Latn-AU",
      "wla": "wla-Latn-PG",
      "wle": "wle-Ethi-ET",
      "wlg": "wlg-Latn-AU",
      "wlh": "wlh-Latn-TL",
      "wli": "wli-Latn-ID",
      "wlm": "wlm-Latn-GB",
      "wlo": "wlo-Arab-ID",
      "wlr": "wlr-Latn-VU",
      "wls": "wls-Latn-WF",
      "wlu": "wlu-Latn-AU",
      "wlv": "wlv-Latn-AR",
      "wlw": "wlw-Latn-ID",
      "wlx": "wlx-Latn-GH",
      "wma": "wma-Latn-NG",
      "wmb": "wmb-Latn-AU",
      "wmc": "wmc-Latn-PG",
      "wmd": "wmd-Latn-BR",
      "wme": "wme-Deva-NP",
      "wmh": "wmh-Latn-TL",
      "wmi": "wmi-Latn-AU",
      "wmm": "wmm-Latn-ID",
      "wmn": "wmn-Latn-NC",
      "wmo": "wmo-Latn-PG",
      "wms": "wms-Latn-ID",
      "wmt": "wmt-Latn-AU",
      "wmw": "wmw-Latn-MZ",
      "wmx": "wmx-Latn-PG",
      "wnb": "wnb-Latn-PG",
      "wnc": "wnc-Latn-PG",
      "wnd": "wnd-Latn-AU",
      "wne": "wne-Arab-PK",
      "wng": "wng-Latn-ID",
      "wni": "wni-Arab-KM",
      "wnk": "wnk-Latn-ID",
      "wnm": "wnm-Latn-AU",
      "wnn": "wnn-Latn-AU",
      "wno": "wno-Latn-ID",
      "wnp": "wnp-Latn-PG",
      "wnu": "wnu-Latn-PG",
      "wnw": "wnw-Latn-US",
      "wny": "wny-Latn-AU",
      "wo": "wo-Latn-SN",
      "woa": "woa-Latn-AU",
      "wob": "wob-Latn-CI",
      "woc": "woc-Latn-PG",
      "wod": "wod-Latn-ID",
      "woe": "woe-Latn-FM",
      "wof": "wof-Latn-GM",
      "wog": "wog-Latn-PG",
      "woi": "woi-Latn-ID",
      "wok": "wok-Latn-CM",
      "wom": "wom-Latn-NG",
      "won": "won-Latn-CD",
      "woo": "woo-Latn-ID",
      "wor": "wor-Latn-ID",
      "wos": "wos-Latn-PG",
      "wow": "wow-Latn-ID",
      "wpc": "wpc-Latn-VE",
      "wrb": "wrb-Latn-AU",
      "wrg": "wrg-Latn-AU",
      "wrh": "wrh-Latn-AU",
      "wri": "wri-Latn-AU",
      "wrk": "wrk-Latn-AU",
      "wrl": "wrl-Latn-AU",
      "wrm": "wrm-Latn-AU",
      "wro": "wro-Latn-AU",
      "wrp": "wrp-Latn-ID",
      "wrr": "wrr-Latn-AU",
      "wrs": "wrs-Latn-PG",
      "wru": "wru-Latn-ID",
      "wrv": "wrv-Latn-PG",
      "wrw": "wrw-Latn-AU",
      "wrx": "wrx-Latn-ID",
      "wrz": "wrz-Latn-AU",
      "wsa": "wsa-Latn-ID",
      "wsg": "wsg-Gong-IN",
      "wsi": "wsi-Latn-VU",
      "wsk": "wsk-Latn-PG",
      "wsr": "wsr-Latn-PG",
      "wss": "wss-Latn-GH",
      "wsu": "wsu-Latn-BR",
      "wsv": "wsv-Arab-AF",
      "wtb": "wtb-Latn-TZ",
      "wtf": "wtf-Latn-PG",
      "wth": "wth-Latn-AU",
      "wti": "wti-Latn-ET",
      "wtk": "wtk-Latn-PG",
      "wtm": "wtm-Deva-IN",
      "wtw": "wtw-Latn-ID",
      "wua": "wua-Latn-AU",
      "wub": "wub-Latn-AU",
      "wud": "wud-Latn-TG",
      "wul": "wul-Latn-ID",
      "wum": "wum-Latn-GA",
      "wun": "wun-Latn-TZ",
      "wur": "wur-Latn-AU",
      "wut": "wut-Latn-PG",
      "wuu": "wuu-Hans-CN",
      "wuv": "wuv-Latn-PG",
      "wux": "wux-Latn-AU",
      "wuy": "wuy-Latn-ID",
      "wwa": "wwa-Latn-BJ",
      "wwb": "wwb-Latn-AU",
      "wwo": "wwo-Latn-VU",
      "wwr": "wwr-Latn-AU",
      "www": "www-Latn-CM",
      "wxw": "wxw-Latn-AU",
      "wyb": "wyb-Latn-AU",
      "wyi": "wyi-Latn-AU",
      "wym": "wym-Latn-PL",
      "wyn": "wyn-Latn-US",
      "wyr": "wyr-Latn-BR",
      "wyy": "wyy-Latn-FJ",
      "xaa": "xaa-Latn-ES",
      "xab": "xab-Latn-NG",
      "xag": "xag-Aghb-AZ",
      "xai": "xai-Latn-BR",
      "xaj": "xaj-Latn-BR",
      "xak": "xak-Latn-VE",
      "xal": "xal-Cyrl-RU",
      "xam": "xam-Latn-ZA",
      "xan": "xan-Ethi-ET",
      "xao": "xao-Latn-VN",
      "xar": "xar-Latn-PG",
      "xas": "xas-Cyrl-RU",
      "xat": "xat-Latn-BR",
      "xau": "xau-Latn-ID",
      "xav": "xav-Latn-BR",
      "xaw": "xaw-Latn-US",
      "xay": "xay-Latn-ID",
      "xbb": "xbb-Latn-AU",
      "xbd": "xbd-Latn-AU",
      "xbe": "xbe-Latn-AU",
      "xbg": "xbg-Latn-AU",
      "xbi": "xbi-Latn-PG",
      "xbj": "xbj-Latn-AU",
      "xbm": "xbm-Latn-FR",
      "xbn": "xbn-Latn-MY",
      "xbp": "xbp-Latn-AU",
      "xbr": "xbr-Latn-ID",
      "xbw": "xbw-Latn-BR",
      "xby": "xby-Latn-AU",
      "xch": "xch-Latn-US",
      "xco": "xco-Chrs-UZ",
      "xcr": "xcr-Cari-TR",
      "xda": "xda-Latn-AU",
      "xdk": "xdk-Latn-AU",
      "xdo": "xdo-Latn-AO",
      "xdq": "xdq-Cyrl-RU",
      "xdy": "xdy-Latn-ID",
      "xed": "xed-Latn-CM",
      "xeg": "xeg-Latn-ZA",
      "xem": "xem-Latn-ID",
      "xer": "xer-Latn-BR",
      "xes": "xes-Latn-PG",
      "xet": "xet-Latn-BR",
      "xeu": "xeu-Latn-PG",
      "xgb": "xgb-Latn-CI",
      "xgd": "xgd-Latn-AU",
      "xgg": "xgg-Latn-AU",
      "xgi": "xgi-Latn-AU",
      "xgm": "xgm-Latn-AU",
      "xgu": "xgu-Latn-AU",
      "xgw": "xgw-Latn-AU",
      "xh": "xh-Latn-ZA",
      "xhe": "xhe-Arab-PK",
      "xhm": "xhm-Khmr-KH",
      "xhv": "xhv-Latn-VN",
      "xii": "xii-Latn-ZA",
      "xin": "xin-Latn-GT",
      "xir": "xir-Latn-BR",
      "xis": "xis-Orya-IN",
      "xiy": "xiy-Latn-BR",
      "xjb": "xjb-Latn-AU",
      "xjt": "xjt-Latn-AU",
      "xka": "xka-Arab-PK",
      "xkb": "xkb-Latn-BJ",
      "xkc": "xkc-Arab-IR",
      "xkd": "xkd-Latn-ID",
      "xke": "xke-Latn-ID",
      "xkf": "xkf-Tibt-BT",
      "xkg": "xkg-Latn-ML",
      "xkj": "xkj-Arab-IR",
      "xkl": "xkl-Latn-ID",
      "xkn": "xkn-Latn-ID",
      "xkp": "xkp-Arab-IR",
      "xkq": "xkq-Latn-ID",
      "xkr": "xkr-Latn-BR",
      "xks": "xks-Latn-ID",
      "xkt": "xkt-Latn-GH",
      "xku": "xku-Latn-CG",
      "xkv": "xkv-Latn-BW",
      "xkw": "xkw-Latn-ID",
      "xkx": "xkx-Latn-PG",
      "xky": "xky-Latn-MY",
      "xkz": "xkz-Latn-BT",
      "xla": "xla-Latn-PG",
      "xlc": "xlc-Lyci-TR",
      "xld": "xld-Lydi-TR",
      "xly": "xly-Elym-IR",
      "xma": "xma-Latn-SO",
      "xmb": "xmb-Latn-CM",
      "xmc": "xmc-Latn-MZ",
      "xmd": "xmd-Latn-CM",
      "xmf": "xmf-Geor-GE",
      "xmg": "xmg-Latn-CM",
      "xmh": "xmh-Latn-AU",
      "xmj": "xmj-Latn-CM",
      "xmm": "xmm-Latn-ID",
      "xmn": "xmn-Mani-CN",
      "xmo": "xmo-Latn-BR",
      "xmp": "xmp-Latn-AU",
      "xmq": "xmq-Latn-AU",
      "xmr": "xmr-Merc-SD",
      "xmt": "xmt-Latn-ID",
      "xmu": "xmu-Latn-AU",
      "xmv": "xmv-Latn-MG",
      "xmw": "xmw-Latn-MG",
      "xmx": "xmx-Latn-ID",
      "xmy": "xmy-Latn-AU",
      "xmz": "xmz-Latn-ID",
      "xna": "xna-Narb-SA",
      "xnb": "xnb-Latn-TW",
      "xni": "xni-Latn-AU",
      "xnj": "xnj-Latn-TZ",
      "xnk": "xnk-Latn-AU",
      "xnm": "xnm-Latn-AU",
      "xnn": "xnn-Latn-PH",
      "xnq": "xnq-Latn-MZ",
      "xnr": "xnr-Deva-IN",
      "xnt": "xnt-Latn-US",
      "xnu": "xnu-Latn-AU",
      "xny": "xny-Latn-AU",
      "xnz": "xnz-Latn-EG",
      "xoc": "xoc-Latn-NG",
      "xod": "xod-Latn-ID",
      "xog": "xog-Latn-UG",
      "xoi": "xoi-Latn-PG",
      "xok": "xok-Latn-BR",
      "xom": "xom-Latn-SD",
      "xon": "xon-Latn-GH",
      "xoo": "xoo-Latn-BR",
      "xop": "xop-Latn-PG",
      "xor": "xor-Latn-BR",
      "xow": "xow-Latn-PG",
      "xpa": "xpa-Latn-AU",
      "xpb": "xpb-Latn-AU",
      "xpd": "xpd-Latn-AU",
      "xpf": "xpf-Latn-AU",
      "xpg": "xpg-Grek-TR",
      "xph": "xph-Latn-AU",
      "xpi": "xpi-Ogam-GB",
      "xpj": "xpj-Latn-AU",
      "xpk": "xpk-Latn-BR",
      "xpl": "xpl-Latn-AU",
      "xpm": "xpm-Cyrl-RU",
      "xpn": "xpn-Latn-BR",
      "xpo": "xpo-Latn-MX",
      "xpq": "xpq-Latn-US",
      "xpr": "xpr-Prti-IR",
      "xpt": "xpt-Latn-AU",
      "xpv": "xpv-Latn-AU",
      "xpw": "xpw-Latn-AU",
      "xpx": "xpx-Latn-AU",
      "xpz": "xpz-Latn-AU",
      "xra": "xra-Latn-BR",
      "xrb": "xrb-Latn-BF",
      "xrd": "xrd-Latn-AU",
      "xre": "xre-Latn-BR",
      "xrg": "xrg-Latn-AU",
      "xri": "xri-Latn-BR",
      "xrm": "xrm-Cyrl-RU",
      "xrn": "xrn-Cyrl-RU",
      "xrr": "xrr-Latn-IT",
      "xru": "xru-Latn-AU",
      "xrw": "xrw-Latn-PG",
      "xsa": "xsa-Sarb-YE",
      "xsb": "xsb-Latn-PH",
      "xse": "xse-Latn-ID",
      "xsh": "xsh-Latn-NG",
      "xsi": "xsi-Latn-PG",
      "xsm": "xsm-Latn-GH",
      "xsn": "xsn-Latn-NG",
      "xsp": "xsp-Latn-PG",
      "xsq": "xsq-Latn-MZ",
      "xsr": "xsr-Deva-NP",
      "xsu": "xsu-Latn-VE",
      "xsy": "xsy-Latn-TW",
      "xta": "xta-Latn-MX",
      "xtb": "xtb-Latn-MX",
      "xtc": "xtc-Latn-SD",
      "xtd": "xtd-Latn-MX",
      "xte": "xte-Latn-ID",
      "xth": "xth-Latn-AU",
      "xti": "xti-Latn-MX",
      "xtj": "xtj-Latn-MX",
      "xtl": "xtl-Latn-MX",
      "xtm": "xtm-Latn-MX",
      "xtn": "xtn-Latn-MX",
      "xtp": "xtp-Latn-MX",
      "xtq": "xtq-Brah-IR",
      "xts": "xts-Latn-MX",
      "xtt": "xtt-Latn-MX",
      "xtu": "xtu-Latn-MX",
      "xtv": "xtv-Latn-AU",
      "xtw": "xtw-Latn-BR",
      "xty": "xty-Latn-MX",
      "xub": "xub-Taml-IN",
      "xud": "xud-Latn-AU",
      "xuj": "xuj-Taml-IN",
      "xul": "xul-Latn-AU",
      "xum": "xum-Latn-IT",
      "xun": "xun-Latn-AU",
      "xuo": "xuo-Latn-TD",
      "xut": "xut-Latn-AU",
      "xuu": "xuu-Latn-NA",
      "xve": "xve-Ital-IT",
      "xvi": "xvi-Arab-AF",
      "xvn": "xvn-Latn-ES",
      "xvo": "xvo-Latn-IT",
      "xvs": "xvs-Latn-IT",
      "xwa": "xwa-Latn-BR",
      "xwd": "xwd-Latn-AU",
      "xwe": "xwe-Latn-BJ",
      "xwj": "xwj-Latn-AU",
      "xwk": "xwk-Latn-AU",
      "xwl": "xwl-Latn-BJ",
      "xwo": "xwo-Cyrl-RU",
      "xwr": "xwr-Latn-ID",
      "xwt": "xwt-Latn-AU",
      "xww": "xww-Latn-AU",
      "xxb": "xxb-Latn-GH",
      "xxk": "xxk-Latn-ID",
      "xxm": "xxm-Latn-AU",
      "xxr": "xxr-Latn-BR",
      "xxt": "xxt-Latn-ID",
      "xya": "xya-Latn-AU",
      "xyb": "xyb-Latn-AU",
      "xyj": "xyj-Latn-AU",
      "xyk": "xyk-Latn-AU",
      "xyl": "xyl-Latn-BR",
      "xyt": "xyt-Latn-AU",
      "xyy": "xyy-Latn-AU",
      "xzh": "xzh-Marc-CN",
      "xzp": "xzp-Latn-MX",
      "yaa": "yaa-Latn-PE",
      "yab": "yab-Latn-BR",
      "yac": "yac-Latn-ID",
      "yad": "yad-Latn-PE",
      "yae": "yae-Latn-VE",
      "yaf": "yaf-Latn-CD",
      "yag": "yag-Latn-CL",
      "yah": "yah-Latn-TJ",
      "yai": "yai-Cyrl-TJ",
      "yaj": "yaj-Latn-CF",
      "yak": "yak-Latn-US",
      "yal": "yal-Latn-GN",
      "yam": "yam-Latn-CM",
      "yan": "yan-Latn-NI",
      "yao": "yao-Latn-MZ",
      "yap": "yap-Latn-FM",
      "yaq": "yaq-Latn-MX",
      "yar": "yar-Latn-VE",
      "yas": "yas-Latn-CM",
      "yat": "yat-Latn-CM",
      "yau": "yau-Latn-VE",
      "yav": "yav-Latn-CM",
      "yaw": "yaw-Latn-BR",
      "yax": "yax-Latn-AO",
      "yay": "yay-Latn-NG",
      "yaz": "yaz-Latn-NG",
      "yba": "yba-Latn-NG",
      "ybb": "ybb-Latn-CM",
      "ybe": "ybe-Latn-CN",
      "ybh": "ybh-Deva-NP",
      "ybi": "ybi-Deva-NP",
      "ybj": "ybj-Latn-NG",
      "ybl": "ybl-Latn-NG",
      "ybm": "ybm-Latn-PG",
      "ybn": "ybn-Latn-BR",
      "ybo": "ybo-Latn-PG",
      "ybx": "ybx-Latn-PG",
      "yby": "yby-Latn-PG",
      "ycl": "ycl-Latn-CN",
      "ycn": "ycn-Latn-CO",
      "ycr": "ycr-Latn-TW",
      "yda": "yda-Latn-AU",
      "yde": "yde-Latn-PG",
      "ydg": "ydg-Arab-PK",
      "ydk": "ydk-Latn-PG",
      "yea": "yea-Mlym-IN",
      "yec": "yec-Latn-DE",
      "yee": "yee-Latn-PG",
      "yei": "yei-Latn-CM",
      "yej": "yej-Grek-GR",
      "yel": "yel-Latn-CD",
      "yer": "yer-Latn-NG",
      "yes": "yes-Latn-NG",
      "yet": "yet-Latn-ID",
      "yeu": "yeu-Telu-IN",
      "yev": "yev-Latn-PG",
      "yey": "yey-Latn-BW",
      "yga": "yga-Latn-AU",
      "ygi": "ygi-Latn-AU",
      "ygl": "ygl-Latn-PG",
      "ygm": "ygm-Latn-PG",
      "ygp": "ygp-Plrd-CN",
      "ygr": "ygr-Latn-PG",
      "ygu": "ygu-Latn-AU",
      "ygw": "ygw-Latn-PG",
      "yhd": "yhd-Hebr-IL",
      "yi": "yi-Hebr-UA",
      "yia": "yia-Latn-AU",
      "yig": "yig-Yiii-CN",
      "yih": "yih-Hebr-DE",
      "yii": "yii-Latn-AU",
      "yij": "yij-Latn-AU",
      "yil": "yil-Latn-AU",
      "yim": "yim-Latn-IN",
      "yir": "yir-Latn-ID",
      "yis": "yis-Latn-PG",
      "yiv": "yiv-Yiii-CN",
      "yka": "yka-Latn-PH",
      "ykg": "ykg-Cyrl-RU",
      "ykh": "ykh-Cyrl-MN",
      "yki": "yki-Latn-ID",
      "ykk": "ykk-Latn-PG",
      "ykm": "ykm-Latn-PG",
      "yko": "yko-Latn-CM",
      "ykr": "ykr-Latn-PG",
      "yky": "yky-Latn-CF",
      "yla": "yla-Latn-PG",
      "ylb": "ylb-Latn-PG",
      "yle": "yle-Latn-PG",
      "ylg": "ylg-Latn-PG",
      "yli": "yli-Latn-ID",
      "yll": "yll-Latn-PG",
      "ylr": "ylr-Latn-AU",
      "ylu": "ylu-Latn-PG",
      "yly": "yly-Latn-NC",
      "ymb": "ymb-Latn-PG",
      "yme": "yme-Latn-PE",
      "ymg": "ymg-Latn-CD",
      "ymk": "ymk-Latn-MZ",
      "yml": "yml-Latn-PG",
      "ymm": "ymm-Latn-SO",
      "ymn": "ymn-Latn-ID",
      "ymo": "ymo-Latn-PG",
      "ymp": "ymp-Latn-PG",
      "yna": "yna-Plrd-CN",
      "ynd": "ynd-Latn-AU",
      "yng": "yng-Latn-CD",
      "ynk": "ynk-Cyrl-RU",
      "ynl": "ynl-Latn-PG",
      "ynq": "ynq-Latn-NG",
      "yns": "yns-Latn-CD",
      "ynu": "ynu-Latn-CO",
      "yo": "yo-Latn-NG",
      "yob": "yob-Latn-PG",
      "yog": "yog-Latn-PH",
      "yoi": "yoi-Jpan-JP",
      "yok": "yok-Latn-US",
      "yol": "yol-Latn-IE",
      "yom": "yom-Latn-CD",
      "yon": "yon-Latn-PG",
      "yot": "yot-Latn-NG",
      "yoy": "yoy-Thai-TH",
      "yra": "yra-Latn-PG",
      "yrb": "yrb-Latn-PG",
      "yre": "yre-Latn-CI",
      "yrk": "yrk-Cyrl-RU",
      "yrl": "yrl-Latn-BR",
      "yrm": "yrm-Latn-AU",
      "yro": "yro-Latn-BR",
      "yrs": "yrs-Latn-ID",
      "yrw": "yrw-Latn-PG",
      "yry": "yry-Latn-AU",
      "ysd": "ysd-Yiii-CN",
      "ysn": "ysn-Yiii-CN",
      "ysp": "ysp-Yiii-CN",
      "ysr": "ysr-Cyrl-RU",
      "yss": "yss-Latn-PG",
      "ysy": "ysy-Plrd-CN",
      "ytw": "ytw-Latn-PG",
      "yty": "yty-Latn-AU",
      "yua": "yua-Latn-MX",
      "yub": "yub-Latn-AU",
      "yuc": "yuc-Latn-US",
      "yud": "yud-Hebr-IL",
      "yue": "yue-Hant-HK",
      "yue-CN": "yue-Hans-CN",
      "yue-Hans": "yue-Hans-CN",
      "yuf": "yuf-Latn-US",
      "yug": "yug-Cyrl-RU",
      "yui": "yui-Latn-CO",
      "yuj": "yuj-Latn-PG",
      "yul": "yul-Latn-CF",
      "yum": "yum-Latn-US",
      "yun": "yun-Latn-NG",
      "yup": "yup-Latn-CO",
      "yuq": "yuq-Latn-BO",
      "yur": "yur-Latn-US",
      "yut": "yut-Latn-PG",
      "yuw": "yuw-Latn-PG",
      "yux": "yux-Cyrl-RU",
      "yuz": "yuz-Latn-BO",
      "yva": "yva-Latn-ID",
      "yvt": "yvt-Latn-VE",
      "ywa": "ywa-Latn-PG",
      "ywg": "ywg-Latn-AU",
      "ywn": "ywn-Latn-BR",
      "ywq": "ywq-Plrd-CN",
      "ywr": "ywr-Latn-AU",
      "ywu": "ywu-Plrd-CN",
      "yww": "yww-Latn-AU",
      "yxa": "yxa-Latn-AU",
      "yxg": "yxg-Latn-AU",
      "yxl": "yxl-Latn-AU",
      "yxm": "yxm-Latn-AU",
      "yxu": "yxu-Latn-AU",
      "yxy": "yxy-Latn-AU",
      "yyr": "yyr-Latn-AU",
      "yyu": "yyu-Latn-PG",
      "za": "za-Latn-CN",
      "zaa": "zaa-Latn-MX",
      "zab": "zab-Latn-MX",
      "zac": "zac-Latn-MX",
      "zad": "zad-Latn-MX",
      "zae": "zae-Latn-MX",
      "zaf": "zaf-Latn-MX",
      "zag": "zag-Latn-SD",
      "zah": "zah-Latn-NG",
      "zaj": "zaj-Latn-TZ",
      "zak": "zak-Latn-TZ",
      "zam": "zam-Latn-MX",
      "zao": "zao-Latn-MX",
      "zap": "zap-Latn-MX",
      "zaq": "zaq-Latn-MX",
      "zar": "zar-Latn-MX",
      "zas": "zas-Latn-MX",
      "zat": "zat-Latn-MX",
      "zau": "zau-Tibt-IN",
      "zav": "zav-Latn-MX",
      "zaw": "zaw-Latn-MX",
      "zax": "zax-Latn-MX",
      "zay": "zay-Latn-ET",
      "zaz": "zaz-Latn-NG",
      "zba": "zba-Arab-001",
      "zbc": "zbc-Latn-MY",
      "zbe": "zbe-Latn-MY",
      "zbt": "zbt-Latn-ID",
      "zbu": "zbu-Latn-NG",
      "zbw": "zbw-Latn-MY",
      "zca": "zca-Latn-MX",
      "zch": "zch-Hani-CN",
      "zdj": "zdj-Arab-KM",
      "zea": "zea-Latn-NL",
      "zeg": "zeg-Latn-PG",
      "zeh": "zeh-Hani-CN",
      "zem": "zem-Latn-NG",
      "zen": "zen-Tfng-MR",
      "zga": "zga-Latn-TZ",
      "zgb": "zgb-Hani-CN",
      "zgh": "zgh-Tfng-MA",
      "zgm": "zgm-Hani-CN",
      "zgn": "zgn-Hani-CN",
      "zgr": "zgr-Latn-PG",
      "zh": "zh-Hans-CN",
      "zh-AU": "zh-Hant-AU",
      "zh-BN": "zh-Hant-BN",
      "zh-Bopo": "zh-Bopo-TW",
      "zh-GB": "zh-Hant-GB",
      "zh-GF": "zh-Hant-GF",
      "zh-HK": "zh-Hant-HK",
      "zh-Hanb": "zh-Hanb-TW",
      "zh-Hant": "zh-Hant-TW",
      "zh-ID": "zh-Hant-ID",
      "zh-MO": "zh-Hant-MO",
      "zh-PA": "zh-Hant-PA",
      "zh-PF": "zh-Hant-PF",
      "zh-PH": "zh-Hant-PH",
      "zh-SR": "zh-Hant-SR",
      "zh-TH": "zh-Hant-TH",
      "zh-TW": "zh-Hant-TW",
      "zh-US": "zh-Hant-US",
      "zh-VN": "zh-Hant-VN",
      "zhd": "zhd-Hani-CN",
      "zhi": "zhi-Latn-NG",
      "zhn": "zhn-Latn-CN",
      "zhw": "zhw-Latn-CM",
      "zhx": "zhx-Nshu-CN",
      "zia": "zia-Latn-PG",
      "zik": "zik-Latn-PG",
      "zil": "zil-Latn-GN",
      "zim": "zim-Latn-TD",
      "zin": "zin-Latn-TZ",
      "ziw": "ziw-Latn-TZ",
      "ziz": "ziz-Latn-NG",
      "zka": "zka-Latn-ID",
      "zkd": "zkd-Latn-MM",
      "zko": "zko-Cyrl-RU",
      "zkp": "zkp-Latn-BR",
      "zkt": "zkt-Kits-CN",
      "zku": "zku-Latn-AU",
      "zkz": "zkz-Cyrl-RU",
      "zla": "zla-Latn-CD",
      "zlj": "zlj-Hani-CN",
      "zlm": "zlm-Latn-TG",
      "zln": "zln-Hani-CN",
      "zlq": "zlq-Hani-CN",
      "zlu": "zlu-Latn-NG",
      "zma": "zma-Latn-AU",
      "zmb": "zmb-Latn-CD",
      "zmc": "zmc-Latn-AU",
      "zmd": "zmd-Latn-AU",
      "zme": "zme-Latn-AU",
      "zmf": "zmf-Latn-CD",
      "zmg": "zmg-Latn-AU",
      "zmh": "zmh-Latn-PG",
      "zmi": "zmi-Latn-MY",
      "zmj": "zmj-Latn-AU",
      "zmk": "zmk-Latn-AU",
      "zml": "zml-Latn-AU",
      "zmm": "zmm-Latn-AU",
      "zmn": "zmn-Latn-GA",
      "zmo": "zmo-Latn-SD",
      "zmp": "zmp-Latn-CD",
      "zmq": "zmq-Latn-CD",
      "zmr": "zmr-Latn-AU",
      "zms": "zms-Latn-CD",
      "zmt": "zmt-Latn-AU",
      "zmu": "zmu-Latn-AU",
      "zmv": "zmv-Latn-AU",
      "zmw": "zmw-Latn-CD",
      "zmx": "zmx-Latn-CG",
      "zmy": "zmy-Latn-AU",
      "zmz": "zmz-Latn-CD",
      "zna": "zna-Latn-TD",
      "zne": "zne-Latn-CD",
      "zng": "zng-Latn-VN",
      "znk": "znk-Latn-AU",
      "zns": "zns-Latn-NG",
      "zoc": "zoc-Latn-MX",
      "zoh": "zoh-Latn-MX",
      "zom": "zom-Latn-IN",
      "zoo": "zoo-Latn-MX",
      "zoq": "zoq-Latn-MX",
      "zor": "zor-Latn-MX",
      "zos": "zos-Latn-MX",
      "zpa": "zpa-Latn-MX",
      "zpb": "zpb-Latn-MX",
      "zpc": "zpc-Latn-MX",
      "zpd": "zpd-Latn-MX",
      "zpe": "zpe-Latn-MX",
      "zpf": "zpf-Latn-MX",
      "zpg": "zpg-Latn-MX",
      "zph": "zph-Latn-MX",
      "zpi": "zpi-Latn-MX",
      "zpj": "zpj-Latn-MX",
      "zpk": "zpk-Latn-MX",
      "zpl": "zpl-Latn-MX",
      "zpm": "zpm-Latn-MX",
      "zpn": "zpn-Latn-MX",
      "zpo": "zpo-Latn-MX",
      "zpp": "zpp-Latn-MX",
      "zpq": "zpq-Latn-MX",
      "zpr": "zpr-Latn-MX",
      "zps": "zps-Latn-MX",
      "zpt": "zpt-Latn-MX",
      "zpu": "zpu-Latn-MX",
      "zpv": "zpv-Latn-MX",
      "zpw": "zpw-Latn-MX",
      "zpx": "zpx-Latn-MX",
      "zpy": "zpy-Latn-MX",
      "zpz": "zpz-Latn-MX",
      "zqe": "zqe-Hani-CN",
      "zrg": "zrg-Orya-IN",
      "zrn": "zrn-Latn-TD",
      "zro": "zro-Latn-EC",
      "zrp": "zrp-Hebr-FR",
      "zrs": "zrs-Latn-ID",
      "zsa": "zsa-Latn-PG",
      "zsr": "zsr-Latn-MX",
      "zsu": "zsu-Latn-PG",
      "zte": "zte-Latn-MX",
      "ztg": "ztg-Latn-MX",
      "ztl": "ztl-Latn-MX",
      "ztm": "ztm-Latn-MX",
      "ztn": "ztn-Latn-MX",
      "ztp": "ztp-Latn-MX",
      "ztq": "ztq-Latn-MX",
      "zts": "zts-Latn-MX",
      "ztt": "ztt-Latn-MX",
      "ztu": "ztu-Latn-MX",
      "ztx": "ztx-Latn-MX",
      "zty": "zty-Latn-MX",
      "zu": "zu-Latn-ZA",
      "zuh": "zuh-Latn-PG",
      "zum": "zum-Arab-OM",
      "zun": "zun-Latn-US",
      "zuy": "zuy-Latn-CM",
      "zwa": "zwa-Ethi-ET",
      "zyg": "zyg-Hani-CN",
      "zyj": "zyj-Latn-CN",
      "zyn": "zyn-Hani-CN",
      "zyp": "zyp-Latn-MM",
      "zza": "zza-Latn-TR",
      "zzj": "zzj-Hani-CN"
    };
    return likelySubtags_generated;
  }
  var parser = {};
  var hasRequiredParser;
  function requireParser() {
    if (hasRequiredParser) return parser;
    hasRequiredParser = 1;
    (function(exports2) {
      Object.defineProperty(exports2, "__esModule", { value: true });
      exports2.SEPARATOR = void 0;
      exports2.isUnicodeLanguageSubtag = isUnicodeLanguageSubtag;
      exports2.isStructurallyValidLanguageTag = isStructurallyValidLanguageTag;
      exports2.isUnicodeRegionSubtag = isUnicodeRegionSubtag;
      exports2.isUnicodeScriptSubtag = isUnicodeScriptSubtag;
      exports2.isUnicodeVariantSubtag = isUnicodeVariantSubtag;
      exports2.parseUnicodeLanguageId = parseUnicodeLanguageId;
      exports2.parseUnicodeLocaleId = parseUnicodeLocaleId;
      var tslib_1 = require$$0$1;
      var ALPHANUM_1_8 = /^[a-z0-9]{1,8}$/i;
      var ALPHANUM_2_8 = /^[a-z0-9]{2,8}$/i;
      var ALPHANUM_3_8 = /^[a-z0-9]{3,8}$/i;
      var KEY_REGEX = /^[a-z0-9][a-z]$/i;
      var TYPE_REGEX = /^[a-z0-9]{3,8}$/i;
      var ALPHA_4 = /^[a-z]{4}$/i;
      var OTHER_EXTENSION_TYPE = /^[0-9a-svwyz]$/i;
      var UNICODE_REGION_SUBTAG_REGEX = /^([a-z]{2}|[0-9]{3})$/i;
      var UNICODE_VARIANT_SUBTAG_REGEX = /^([a-z0-9]{5,8}|[0-9][a-z0-9]{3})$/i;
      var UNICODE_LANGUAGE_SUBTAG_REGEX = /^([a-z]{2,3}|[a-z]{5,8})$/i;
      var TKEY_REGEX = /^[a-z][0-9]$/i;
      exports2.SEPARATOR = "-";
      function isUnicodeLanguageSubtag(lang) {
        return UNICODE_LANGUAGE_SUBTAG_REGEX.test(lang);
      }
      function isStructurallyValidLanguageTag(tag2) {
        try {
          parseUnicodeLanguageId(tag2.split(exports2.SEPARATOR));
        } catch (e) {
          return false;
        }
        return true;
      }
      function isUnicodeRegionSubtag(region) {
        return UNICODE_REGION_SUBTAG_REGEX.test(region);
      }
      function isUnicodeScriptSubtag(script) {
        return ALPHA_4.test(script);
      }
      function isUnicodeVariantSubtag(variant) {
        return UNICODE_VARIANT_SUBTAG_REGEX.test(variant);
      }
      function parseUnicodeLanguageId(chunks) {
        if (typeof chunks === "string") {
          chunks = chunks.split(exports2.SEPARATOR);
        }
        var lang = chunks.shift();
        if (!lang) {
          throw new RangeError("Missing unicode_language_subtag");
        }
        if (lang === "root") {
          return { lang: "root", variants: [] };
        }
        if (!isUnicodeLanguageSubtag(lang)) {
          throw new RangeError("Malformed unicode_language_subtag");
        }
        var script;
        if (chunks.length && isUnicodeScriptSubtag(chunks[0])) {
          script = chunks.shift();
        }
        var region;
        if (chunks.length && isUnicodeRegionSubtag(chunks[0])) {
          region = chunks.shift();
        }
        var variants = {};
        while (chunks.length && isUnicodeVariantSubtag(chunks[0])) {
          var variant = chunks.shift();
          if (variant in variants) {
            throw new RangeError('Duplicate variant "'.concat(variant, '"'));
          }
          variants[variant] = 1;
        }
        return {
          lang,
          script,
          region,
          variants: Object.keys(variants)
        };
      }
      function parseUnicodeExtension(chunks) {
        var keywords = [];
        var keyword;
        while (chunks.length && (keyword = parseKeyword(chunks))) {
          keywords.push(keyword);
        }
        if (keywords.length) {
          return {
            type: "u",
            keywords,
            attributes: []
          };
        }
        var attributes = [];
        while (chunks.length && ALPHANUM_3_8.test(chunks[0])) {
          attributes.push(chunks.shift());
        }
        while (chunks.length && (keyword = parseKeyword(chunks))) {
          keywords.push(keyword);
        }
        if (keywords.length || attributes.length) {
          return {
            type: "u",
            attributes,
            keywords
          };
        }
        throw new RangeError("Malformed unicode_extension");
      }
      function parseKeyword(chunks) {
        var key;
        if (!KEY_REGEX.test(chunks[0])) {
          return;
        }
        key = chunks.shift();
        var type = [];
        while (chunks.length && TYPE_REGEX.test(chunks[0])) {
          type.push(chunks.shift());
        }
        var value2 = "";
        if (type.length) {
          value2 = type.join(exports2.SEPARATOR);
        }
        return [key, value2];
      }
      function parseTransformedExtension(chunks) {
        var lang;
        try {
          lang = parseUnicodeLanguageId(chunks);
        } catch (e) {
        }
        var fields = [];
        while (chunks.length && TKEY_REGEX.test(chunks[0])) {
          var key = chunks.shift();
          var value2 = [];
          while (chunks.length && ALPHANUM_3_8.test(chunks[0])) {
            value2.push(chunks.shift());
          }
          if (!value2.length) {
            throw new RangeError('Missing tvalue for tkey "'.concat(key, '"'));
          }
          fields.push([key, value2.join(exports2.SEPARATOR)]);
        }
        if (fields.length) {
          return {
            type: "t",
            fields,
            lang
          };
        }
        throw new RangeError("Malformed transformed_extension");
      }
      function parsePuExtension(chunks) {
        var exts = [];
        while (chunks.length && ALPHANUM_1_8.test(chunks[0])) {
          exts.push(chunks.shift());
        }
        if (exts.length) {
          return {
            type: "x",
            value: exts.join(exports2.SEPARATOR)
          };
        }
        throw new RangeError("Malformed private_use_extension");
      }
      function parseOtherExtensionValue(chunks) {
        var exts = [];
        while (chunks.length && ALPHANUM_2_8.test(chunks[0])) {
          exts.push(chunks.shift());
        }
        if (exts.length) {
          return exts.join(exports2.SEPARATOR);
        }
        return "";
      }
      function parseExtensions(chunks) {
        if (!chunks.length) {
          return { extensions: [] };
        }
        var extensions = [];
        var unicodeExtension;
        var transformedExtension;
        var puExtension;
        var otherExtensionMap = {};
        do {
          var type = chunks.shift();
          switch (type) {
            case "u":
            case "U":
              if (unicodeExtension) {
                throw new RangeError("There can only be 1 -u- extension");
              }
              unicodeExtension = parseUnicodeExtension(chunks);
              extensions.push(unicodeExtension);
              break;
            case "t":
            case "T":
              if (transformedExtension) {
                throw new RangeError("There can only be 1 -t- extension");
              }
              transformedExtension = parseTransformedExtension(chunks);
              extensions.push(transformedExtension);
              break;
            case "x":
            case "X":
              if (puExtension) {
                throw new RangeError("There can only be 1 -x- extension");
              }
              puExtension = parsePuExtension(chunks);
              extensions.push(puExtension);
              break;
            default:
              if (!OTHER_EXTENSION_TYPE.test(type)) {
                throw new RangeError("Malformed extension type");
              }
              if (type in otherExtensionMap) {
                throw new RangeError("There can only be 1 -".concat(type, "- extension"));
              }
              var extension2 = {
                type,
                value: parseOtherExtensionValue(chunks)
              };
              otherExtensionMap[extension2.type] = extension2;
              extensions.push(extension2);
              break;
          }
        } while (chunks.length);
        return { extensions };
      }
      function parseUnicodeLocaleId(locale) {
        var chunks = locale.split(exports2.SEPARATOR);
        var lang = parseUnicodeLanguageId(chunks);
        return tslib_1.__assign({ lang }, parseExtensions(chunks));
      }
    })(parser);
    return parser;
  }
  var hasRequiredCanonicalizer;
  function requireCanonicalizer() {
    if (hasRequiredCanonicalizer) return canonicalizer;
    hasRequiredCanonicalizer = 1;
    Object.defineProperty(canonicalizer, "__esModule", { value: true });
    canonicalizer.canonicalizeUnicodeLanguageId = canonicalizeUnicodeLanguageId;
    canonicalizer.CanonicalizeUnicodeLocaleId = CanonicalizeUnicodeLocaleId2;
    var tslib_1 = require$$0$1;
    var aliases_generated_1 = requireAliases_generated();
    var emitter_1 = requireEmitter();
    var likelySubtags_generated_1 = requireLikelySubtags_generated();
    var parser_1 = requireParser();
    function canonicalizeAttrs(strs) {
      return Object.keys(strs.reduce(function(all, str) {
        all[str.toLowerCase()] = 1;
        return all;
      }, {})).sort();
    }
    function canonicalizeKVs(arr) {
      var all = {};
      var result = [];
      for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
        var kv = arr_1[_i];
        if (kv[0] in all) {
          continue;
        }
        all[kv[0]] = 1;
        if (!kv[1] || kv[1] === "true") {
          result.push([kv[0].toLowerCase()]);
        } else {
          result.push([kv[0].toLowerCase(), kv[1].toLowerCase()]);
        }
      }
      return result.sort(compareKV);
    }
    function compareKV(t1, t2) {
      return t1[0] < t2[0] ? -1 : t1[0] > t2[0] ? 1 : 0;
    }
    function compareExtension(e1, e2) {
      return e1.type < e2.type ? -1 : e1.type > e2.type ? 1 : 0;
    }
    function mergeVariants(v1, v2) {
      var result = tslib_1.__spreadArray([], v1, true);
      for (var _i = 0, v2_1 = v2; _i < v2_1.length; _i++) {
        var v = v2_1[_i];
        if (v1.indexOf(v) < 0) {
          result.push(v);
        }
      }
      return result;
    }
    function canonicalizeUnicodeLanguageId(unicodeLanguageId) {
      var finalLangAst = unicodeLanguageId;
      if (unicodeLanguageId.variants.length) {
        var replacedLang_1 = "";
        for (var _i = 0, _a2 = unicodeLanguageId.variants; _i < _a2.length; _i++) {
          var variant = _a2[_i];
          if (replacedLang_1 = aliases_generated_1.languageAlias[(0, emitter_1.emitUnicodeLanguageId)({
            lang: unicodeLanguageId.lang,
            variants: [variant]
          })]) {
            var replacedLangAst = (0, parser_1.parseUnicodeLanguageId)(replacedLang_1.split(parser_1.SEPARATOR));
            finalLangAst = {
              lang: replacedLangAst.lang,
              script: finalLangAst.script || replacedLangAst.script,
              region: finalLangAst.region || replacedLangAst.region,
              variants: mergeVariants(finalLangAst.variants, replacedLangAst.variants)
            };
            break;
          }
        }
      }
      if (finalLangAst.script && finalLangAst.region) {
        var replacedLang_2 = aliases_generated_1.languageAlias[(0, emitter_1.emitUnicodeLanguageId)({
          lang: finalLangAst.lang,
          script: finalLangAst.script,
          region: finalLangAst.region,
          variants: []
        })];
        if (replacedLang_2) {
          var replacedLangAst = (0, parser_1.parseUnicodeLanguageId)(replacedLang_2.split(parser_1.SEPARATOR));
          finalLangAst = {
            lang: replacedLangAst.lang,
            script: replacedLangAst.script,
            region: replacedLangAst.region,
            variants: finalLangAst.variants
          };
        }
      }
      if (finalLangAst.region) {
        var replacedLang_3 = aliases_generated_1.languageAlias[(0, emitter_1.emitUnicodeLanguageId)({
          lang: finalLangAst.lang,
          region: finalLangAst.region,
          variants: []
        })];
        if (replacedLang_3) {
          var replacedLangAst = (0, parser_1.parseUnicodeLanguageId)(replacedLang_3.split(parser_1.SEPARATOR));
          finalLangAst = {
            lang: replacedLangAst.lang,
            script: finalLangAst.script || replacedLangAst.script,
            region: replacedLangAst.region,
            variants: finalLangAst.variants
          };
        }
      }
      var replacedLang = aliases_generated_1.languageAlias[(0, emitter_1.emitUnicodeLanguageId)({
        lang: finalLangAst.lang,
        variants: []
      })];
      if (replacedLang) {
        var replacedLangAst = (0, parser_1.parseUnicodeLanguageId)(replacedLang.split(parser_1.SEPARATOR));
        finalLangAst = {
          lang: replacedLangAst.lang,
          script: finalLangAst.script || replacedLangAst.script,
          region: finalLangAst.region || replacedLangAst.region,
          variants: finalLangAst.variants
        };
      }
      if (finalLangAst.region) {
        var region = finalLangAst.region.toUpperCase();
        var regionAlias = aliases_generated_1.territoryAlias[region];
        var replacedRegion = void 0;
        if (regionAlias) {
          var regions2 = regionAlias.split(" ");
          replacedRegion = regions2[0];
          var likelySubtag = likelySubtags_generated_1.likelySubtags[(0, emitter_1.emitUnicodeLanguageId)({
            lang: finalLangAst.lang,
            script: finalLangAst.script,
            variants: []
          })];
          if (likelySubtag) {
            var likelyRegion = (0, parser_1.parseUnicodeLanguageId)(likelySubtag.split(parser_1.SEPARATOR)).region;
            if (likelyRegion && regions2.indexOf(likelyRegion) > -1) {
              replacedRegion = likelyRegion;
            }
          }
        }
        if (replacedRegion) {
          finalLangAst.region = replacedRegion;
        }
        finalLangAst.region = finalLangAst.region.toUpperCase();
      }
      if (finalLangAst.script) {
        finalLangAst.script = finalLangAst.script[0].toUpperCase() + finalLangAst.script.slice(1).toLowerCase();
        if (aliases_generated_1.scriptAlias[finalLangAst.script]) {
          finalLangAst.script = aliases_generated_1.scriptAlias[finalLangAst.script];
        }
      }
      if (finalLangAst.variants.length) {
        for (var i = 0; i < finalLangAst.variants.length; i++) {
          var variant = finalLangAst.variants[i].toLowerCase();
          if (aliases_generated_1.variantAlias[variant]) {
            var alias = aliases_generated_1.variantAlias[variant];
            if ((0, parser_1.isUnicodeVariantSubtag)(alias)) {
              finalLangAst.variants[i] = alias;
            } else if ((0, parser_1.isUnicodeLanguageSubtag)(alias)) {
              finalLangAst.lang = alias;
            }
          }
        }
        finalLangAst.variants.sort();
      }
      return finalLangAst;
    }
    function CanonicalizeUnicodeLocaleId2(locale) {
      locale.lang = canonicalizeUnicodeLanguageId(locale.lang);
      if (locale.extensions) {
        for (var _i = 0, _a2 = locale.extensions; _i < _a2.length; _i++) {
          var extension2 = _a2[_i];
          switch (extension2.type) {
            case "u":
              extension2.keywords = canonicalizeKVs(extension2.keywords);
              if (extension2.attributes) {
                extension2.attributes = canonicalizeAttrs(extension2.attributes);
              }
              break;
            case "t":
              if (extension2.lang) {
                extension2.lang = canonicalizeUnicodeLanguageId(extension2.lang);
              }
              extension2.fields = canonicalizeKVs(extension2.fields);
              break;
            default:
              extension2.value = extension2.value.toLowerCase();
              break;
          }
        }
        locale.extensions.sort(compareExtension);
      }
      return locale;
    }
    return canonicalizer;
  }
  var types = {};
  var hasRequiredTypes;
  function requireTypes() {
    if (hasRequiredTypes) return types;
    hasRequiredTypes = 1;
    Object.defineProperty(types, "__esModule", { value: true });
    return types;
  }
  var hasRequiredIntlGetcanonicallocales;
  function requireIntlGetcanonicallocales() {
    if (hasRequiredIntlGetcanonicallocales) return intlGetcanonicallocales;
    hasRequiredIntlGetcanonicallocales = 1;
    (function(exports2) {
      Object.defineProperty(exports2, "__esModule", { value: true });
      exports2.parseUnicodeLocaleId = exports2.parseUnicodeLanguageId = exports2.isUnicodeScriptSubtag = exports2.isUnicodeRegionSubtag = exports2.isUnicodeLanguageSubtag = exports2.isStructurallyValidLanguageTag = void 0;
      exports2.getCanonicalLocales = getCanonicalLocales;
      var tslib_1 = require$$0$1;
      var canonicalizer_1 = requireCanonicalizer();
      var emitter_1 = requireEmitter();
      var parser_1 = requireParser();
      function CanonicalizeLocaleList2(locales) {
        if (locales === void 0) {
          return [];
        }
        var seen = [];
        if (typeof locales === "string") {
          locales = [locales];
        }
        for (var _i = 0, locales_1 = locales; _i < locales_1.length; _i++) {
          var locale = locales_1[_i];
          var canonicalizedTag = (0, emitter_1.emitUnicodeLocaleId)((0, canonicalizer_1.CanonicalizeUnicodeLocaleId)((0, parser_1.parseUnicodeLocaleId)(locale)));
          if (seen.indexOf(canonicalizedTag) < 0) {
            seen.push(canonicalizedTag);
          }
        }
        return seen;
      }
      function getCanonicalLocales(locales) {
        return CanonicalizeLocaleList2(locales);
      }
      tslib_1.__exportStar(requireEmitter(), exports2);
      var parser_2 = requireParser();
      Object.defineProperty(exports2, "isStructurallyValidLanguageTag", { enumerable: true, get: function() {
        return parser_2.isStructurallyValidLanguageTag;
      } });
      Object.defineProperty(exports2, "isUnicodeLanguageSubtag", { enumerable: true, get: function() {
        return parser_2.isUnicodeLanguageSubtag;
      } });
      Object.defineProperty(exports2, "isUnicodeRegionSubtag", { enumerable: true, get: function() {
        return parser_2.isUnicodeRegionSubtag;
      } });
      Object.defineProperty(exports2, "isUnicodeScriptSubtag", { enumerable: true, get: function() {
        return parser_2.isUnicodeScriptSubtag;
      } });
      Object.defineProperty(exports2, "parseUnicodeLanguageId", { enumerable: true, get: function() {
        return parser_2.parseUnicodeLanguageId;
      } });
      Object.defineProperty(exports2, "parseUnicodeLocaleId", { enumerable: true, get: function() {
        return parser_2.parseUnicodeLocaleId;
      } });
      tslib_1.__exportStar(requireTypes(), exports2);
      tslib_1.__exportStar(requireLikelySubtags_generated(), exports2);
    })(intlGetcanonicallocales);
    return intlGetcanonicallocales;
  }
  var characterOrders_generated = {};
  var hasRequiredCharacterOrders_generated;
  function requireCharacterOrders_generated() {
    if (hasRequiredCharacterOrders_generated) return characterOrders_generated;
    hasRequiredCharacterOrders_generated = 1;
    Object.defineProperty(characterOrders_generated, "__esModule", { value: true });
    characterOrders_generated.characterOrders = void 0;
    characterOrders_generated.characterOrders = {
      "aa": "left-to-right",
      "aa-DJ": "left-to-right",
      "aa-ER": "left-to-right",
      "ab": "left-to-right",
      "af": "left-to-right",
      "af-NA": "left-to-right",
      "agq": "left-to-right",
      "ak": "left-to-right",
      "am": "left-to-right",
      "an": "left-to-right",
      "ann": "left-to-right",
      "apc": "right-to-left",
      "ar": "right-to-left",
      "ar-AE": "right-to-left",
      "ar-BH": "right-to-left",
      "ar-DJ": "right-to-left",
      "ar-DZ": "right-to-left",
      "ar-EG": "right-to-left",
      "ar-EH": "right-to-left",
      "ar-ER": "right-to-left",
      "ar-IL": "right-to-left",
      "ar-IQ": "right-to-left",
      "ar-JO": "right-to-left",
      "ar-KM": "right-to-left",
      "ar-KW": "right-to-left",
      "ar-LB": "right-to-left",
      "ar-LY": "right-to-left",
      "ar-MA": "right-to-left",
      "ar-MR": "right-to-left",
      "ar-OM": "right-to-left",
      "ar-PS": "right-to-left",
      "ar-QA": "right-to-left",
      "ar-SA": "right-to-left",
      "ar-SD": "right-to-left",
      "ar-SO": "right-to-left",
      "ar-SS": "right-to-left",
      "ar-SY": "right-to-left",
      "ar-TD": "right-to-left",
      "ar-TN": "right-to-left",
      "ar-YE": "right-to-left",
      "arn": "left-to-right",
      "as": "left-to-right",
      "asa": "left-to-right",
      "ast": "left-to-right",
      "az": "left-to-right",
      "az-Arab": "right-to-left",
      "az-Arab-IQ": "right-to-left",
      "az-Arab-TR": "right-to-left",
      "az-Cyrl": "left-to-right",
      "az-Latn": "left-to-right",
      "ba": "left-to-right",
      "bal": "right-to-left",
      "bal-Arab": "right-to-left",
      "bal-Latn": "left-to-right",
      "bas": "left-to-right",
      "be": "left-to-right",
      "be-tarask": "left-to-right",
      "bem": "left-to-right",
      "bew": "left-to-right",
      "bez": "left-to-right",
      "bg": "left-to-right",
      "bgc": "left-to-right",
      "bgn": "right-to-left",
      "bgn-AE": "right-to-left",
      "bgn-AF": "right-to-left",
      "bgn-IR": "right-to-left",
      "bgn-OM": "right-to-left",
      "bho": "left-to-right",
      "blo": "left-to-right",
      "blt": "left-to-right",
      "bm": "left-to-right",
      "bm-Nkoo": "right-to-left",
      "bn": "left-to-right",
      "bn-IN": "left-to-right",
      "bo": "left-to-right",
      "bo-IN": "left-to-right",
      "br": "left-to-right",
      "brx": "left-to-right",
      "bs": "left-to-right",
      "bs-Cyrl": "left-to-right",
      "bs-Latn": "left-to-right",
      "bss": "left-to-right",
      "byn": "left-to-right",
      "ca": "left-to-right",
      "ca-AD": "left-to-right",
      "ca-ES-valencia": "left-to-right",
      "ca-FR": "left-to-right",
      "ca-IT": "left-to-right",
      "cad": "left-to-right",
      "cch": "left-to-right",
      "ccp": "left-to-right",
      "ccp-IN": "left-to-right",
      "ce": "left-to-right",
      "ceb": "left-to-right",
      "cgg": "left-to-right",
      "cho": "left-to-right",
      "chr": "left-to-right",
      "cic": "left-to-right",
      "ckb": "right-to-left",
      "ckb-IR": "right-to-left",
      "co": "left-to-right",
      "cs": "left-to-right",
      "csw": "left-to-right",
      "cu": "left-to-right",
      "cv": "left-to-right",
      "cy": "left-to-right",
      "da": "left-to-right",
      "da-GL": "left-to-right",
      "dav": "left-to-right",
      "de": "left-to-right",
      "de-AT": "left-to-right",
      "de-BE": "left-to-right",
      "de-CH": "left-to-right",
      "de-IT": "left-to-right",
      "de-LI": "left-to-right",
      "de-LU": "left-to-right",
      "dje": "left-to-right",
      "doi": "left-to-right",
      "dsb": "left-to-right",
      "dua": "left-to-right",
      "dv": "right-to-left",
      "dyo": "left-to-right",
      "dz": "left-to-right",
      "ebu": "left-to-right",
      "ee": "left-to-right",
      "ee-TG": "left-to-right",
      "el": "left-to-right",
      "el-CY": "left-to-right",
      "el-polyton": "left-to-right",
      "en": "left-to-right",
      "en-001": "left-to-right",
      "en-150": "left-to-right",
      "en-AE": "left-to-right",
      "en-AG": "left-to-right",
      "en-AI": "left-to-right",
      "en-AS": "left-to-right",
      "en-AT": "left-to-right",
      "en-AU": "left-to-right",
      "en-BB": "left-to-right",
      "en-BE": "left-to-right",
      "en-BI": "left-to-right",
      "en-BM": "left-to-right",
      "en-BS": "left-to-right",
      "en-BW": "left-to-right",
      "en-BZ": "left-to-right",
      "en-CA": "left-to-right",
      "en-CC": "left-to-right",
      "en-CH": "left-to-right",
      "en-CK": "left-to-right",
      "en-CM": "left-to-right",
      "en-CX": "left-to-right",
      "en-CY": "left-to-right",
      "en-DE": "left-to-right",
      "en-DG": "left-to-right",
      "en-DK": "left-to-right",
      "en-DM": "left-to-right",
      "en-Dsrt": "left-to-right",
      "en-ER": "left-to-right",
      "en-FI": "left-to-right",
      "en-FJ": "left-to-right",
      "en-FK": "left-to-right",
      "en-FM": "left-to-right",
      "en-GB": "left-to-right",
      "en-GD": "left-to-right",
      "en-GG": "left-to-right",
      "en-GH": "left-to-right",
      "en-GI": "left-to-right",
      "en-GM": "left-to-right",
      "en-GU": "left-to-right",
      "en-GY": "left-to-right",
      "en-HK": "left-to-right",
      "en-ID": "left-to-right",
      "en-IE": "left-to-right",
      "en-IL": "left-to-right",
      "en-IM": "left-to-right",
      "en-IN": "left-to-right",
      "en-IO": "left-to-right",
      "en-JE": "left-to-right",
      "en-JM": "left-to-right",
      "en-KE": "left-to-right",
      "en-KI": "left-to-right",
      "en-KN": "left-to-right",
      "en-KY": "left-to-right",
      "en-LC": "left-to-right",
      "en-LR": "left-to-right",
      "en-LS": "left-to-right",
      "en-MG": "left-to-right",
      "en-MH": "left-to-right",
      "en-MO": "left-to-right",
      "en-MP": "left-to-right",
      "en-MS": "left-to-right",
      "en-MT": "left-to-right",
      "en-MU": "left-to-right",
      "en-MV": "left-to-right",
      "en-MW": "left-to-right",
      "en-MY": "left-to-right",
      "en-NA": "left-to-right",
      "en-NF": "left-to-right",
      "en-NG": "left-to-right",
      "en-NL": "left-to-right",
      "en-NR": "left-to-right",
      "en-NU": "left-to-right",
      "en-NZ": "left-to-right",
      "en-PG": "left-to-right",
      "en-PH": "left-to-right",
      "en-PK": "left-to-right",
      "en-PN": "left-to-right",
      "en-PR": "left-to-right",
      "en-PW": "left-to-right",
      "en-RW": "left-to-right",
      "en-SB": "left-to-right",
      "en-SC": "left-to-right",
      "en-SD": "left-to-right",
      "en-SE": "left-to-right",
      "en-SG": "left-to-right",
      "en-SH": "left-to-right",
      "en-Shaw": "left-to-right",
      "en-SI": "left-to-right",
      "en-SL": "left-to-right",
      "en-SS": "left-to-right",
      "en-SX": "left-to-right",
      "en-SZ": "left-to-right",
      "en-TC": "left-to-right",
      "en-TK": "left-to-right",
      "en-TO": "left-to-right",
      "en-TT": "left-to-right",
      "en-TV": "left-to-right",
      "en-TZ": "left-to-right",
      "en-UG": "left-to-right",
      "en-UM": "left-to-right",
      "en-VC": "left-to-right",
      "en-VG": "left-to-right",
      "en-VI": "left-to-right",
      "en-VU": "left-to-right",
      "en-WS": "left-to-right",
      "en-ZA": "left-to-right",
      "en-ZM": "left-to-right",
      "en-ZW": "left-to-right",
      "eo": "left-to-right",
      "es": "left-to-right",
      "es-419": "left-to-right",
      "es-AR": "left-to-right",
      "es-BO": "left-to-right",
      "es-BR": "left-to-right",
      "es-BZ": "left-to-right",
      "es-CL": "left-to-right",
      "es-CO": "left-to-right",
      "es-CR": "left-to-right",
      "es-CU": "left-to-right",
      "es-DO": "left-to-right",
      "es-EA": "left-to-right",
      "es-EC": "left-to-right",
      "es-GQ": "left-to-right",
      "es-GT": "left-to-right",
      "es-HN": "left-to-right",
      "es-IC": "left-to-right",
      "es-MX": "left-to-right",
      "es-NI": "left-to-right",
      "es-PA": "left-to-right",
      "es-PE": "left-to-right",
      "es-PH": "left-to-right",
      "es-PR": "left-to-right",
      "es-PY": "left-to-right",
      "es-SV": "left-to-right",
      "es-US": "left-to-right",
      "es-UY": "left-to-right",
      "es-VE": "left-to-right",
      "et": "left-to-right",
      "eu": "left-to-right",
      "ewo": "left-to-right",
      "fa": "right-to-left",
      "fa-AF": "right-to-left",
      "ff": "left-to-right",
      "ff-Adlm": "right-to-left",
      "ff-Adlm-BF": "right-to-left",
      "ff-Adlm-CM": "right-to-left",
      "ff-Adlm-GH": "right-to-left",
      "ff-Adlm-GM": "right-to-left",
      "ff-Adlm-GW": "right-to-left",
      "ff-Adlm-LR": "right-to-left",
      "ff-Adlm-MR": "right-to-left",
      "ff-Adlm-NE": "right-to-left",
      "ff-Adlm-NG": "right-to-left",
      "ff-Adlm-SL": "right-to-left",
      "ff-Adlm-SN": "right-to-left",
      "ff-Latn": "left-to-right",
      "ff-Latn-BF": "left-to-right",
      "ff-Latn-CM": "left-to-right",
      "ff-Latn-GH": "left-to-right",
      "ff-Latn-GM": "left-to-right",
      "ff-Latn-GN": "left-to-right",
      "ff-Latn-GW": "left-to-right",
      "ff-Latn-LR": "left-to-right",
      "ff-Latn-MR": "left-to-right",
      "ff-Latn-NE": "left-to-right",
      "ff-Latn-NG": "left-to-right",
      "ff-Latn-SL": "left-to-right",
      "fi": "left-to-right",
      "fil": "left-to-right",
      "fo": "left-to-right",
      "fo-DK": "left-to-right",
      "fr": "left-to-right",
      "fr-BE": "left-to-right",
      "fr-BF": "left-to-right",
      "fr-BI": "left-to-right",
      "fr-BJ": "left-to-right",
      "fr-BL": "left-to-right",
      "fr-CA": "left-to-right",
      "fr-CD": "left-to-right",
      "fr-CF": "left-to-right",
      "fr-CG": "left-to-right",
      "fr-CH": "left-to-right",
      "fr-CI": "left-to-right",
      "fr-CM": "left-to-right",
      "fr-DJ": "left-to-right",
      "fr-DZ": "left-to-right",
      "fr-GA": "left-to-right",
      "fr-GF": "left-to-right",
      "fr-GN": "left-to-right",
      "fr-GP": "left-to-right",
      "fr-GQ": "left-to-right",
      "fr-HT": "left-to-right",
      "fr-KM": "left-to-right",
      "fr-LU": "left-to-right",
      "fr-MA": "left-to-right",
      "fr-MC": "left-to-right",
      "fr-MF": "left-to-right",
      "fr-MG": "left-to-right",
      "fr-ML": "left-to-right",
      "fr-MQ": "left-to-right",
      "fr-MR": "left-to-right",
      "fr-MU": "left-to-right",
      "fr-NC": "left-to-right",
      "fr-NE": "left-to-right",
      "fr-PF": "left-to-right",
      "fr-PM": "left-to-right",
      "fr-RE": "left-to-right",
      "fr-RW": "left-to-right",
      "fr-SC": "left-to-right",
      "fr-SN": "left-to-right",
      "fr-SY": "left-to-right",
      "fr-TD": "left-to-right",
      "fr-TG": "left-to-right",
      "fr-TN": "left-to-right",
      "fr-VU": "left-to-right",
      "fr-WF": "left-to-right",
      "fr-YT": "left-to-right",
      "frr": "left-to-right",
      "fur": "left-to-right",
      "fy": "left-to-right",
      "ga": "left-to-right",
      "ga-GB": "left-to-right",
      "gaa": "left-to-right",
      "gd": "left-to-right",
      "gez": "left-to-right",
      "gez-ER": "left-to-right",
      "gl": "left-to-right",
      "gn": "left-to-right",
      "gsw": "left-to-right",
      "gsw-FR": "left-to-right",
      "gsw-LI": "left-to-right",
      "gu": "left-to-right",
      "guz": "left-to-right",
      "gv": "left-to-right",
      "ha": "left-to-right",
      "ha-Arab": "right-to-left",
      "ha-Arab-SD": "right-to-left",
      "ha-GH": "left-to-right",
      "ha-NE": "left-to-right",
      "haw": "left-to-right",
      "he": "right-to-left",
      "hi": "left-to-right",
      "hi-Latn": "left-to-right",
      "hnj": "left-to-right",
      "hnj-Hmnp": "left-to-right",
      "hr": "left-to-right",
      "hr-BA": "left-to-right",
      "hsb": "left-to-right",
      "hu": "left-to-right",
      "hy": "left-to-right",
      "ia": "left-to-right",
      "id": "left-to-right",
      "ie": "left-to-right",
      "ig": "left-to-right",
      "ii": "left-to-right",
      "io": "left-to-right",
      "is": "left-to-right",
      "it": "left-to-right",
      "it-CH": "left-to-right",
      "it-SM": "left-to-right",
      "it-VA": "left-to-right",
      "iu": "left-to-right",
      "iu-Latn": "left-to-right",
      "ja": "left-to-right",
      "jbo": "left-to-right",
      "jgo": "left-to-right",
      "jmc": "left-to-right",
      "jv": "left-to-right",
      "ka": "left-to-right",
      "kaa": "left-to-right",
      "kaa-Cyrl": "left-to-right",
      "kaa-Latn": "left-to-right",
      "kab": "left-to-right",
      "kaj": "left-to-right",
      "kam": "left-to-right",
      "kcg": "left-to-right",
      "kde": "left-to-right",
      "kea": "left-to-right",
      "ken": "left-to-right",
      "kgp": "left-to-right",
      "khq": "left-to-right",
      "ki": "left-to-right",
      "kk": "left-to-right",
      "kk-Arab": "right-to-left",
      "kk-Cyrl": "left-to-right",
      "kk-KZ": "left-to-right",
      "kkj": "left-to-right",
      "kl": "left-to-right",
      "kln": "left-to-right",
      "km": "left-to-right",
      "kn": "left-to-right",
      "ko": "left-to-right",
      "ko-CN": "left-to-right",
      "ko-KP": "left-to-right",
      "kok": "left-to-right",
      "kok-Deva": "left-to-right",
      "kok-Latn": "left-to-right",
      "kpe": "left-to-right",
      "kpe-GN": "left-to-right",
      "ks": "right-to-left",
      "ks-Arab": "right-to-left",
      "ks-Deva": "left-to-right",
      "ksb": "left-to-right",
      "ksf": "left-to-right",
      "ksh": "left-to-right",
      "ku": "left-to-right",
      "kw": "left-to-right",
      "kxv": "left-to-right",
      "kxv-Deva": "left-to-right",
      "kxv-Latn": "left-to-right",
      "kxv-Orya": "left-to-right",
      "kxv-Telu": "left-to-right",
      "ky": "left-to-right",
      "la": "left-to-right",
      "lag": "left-to-right",
      "lb": "left-to-right",
      "lg": "left-to-right",
      "lij": "left-to-right",
      "lkt": "left-to-right",
      "lld": "left-to-right",
      "lmo": "left-to-right",
      "ln": "left-to-right",
      "ln-AO": "left-to-right",
      "ln-CF": "left-to-right",
      "ln-CG": "left-to-right",
      "lo": "left-to-right",
      "lrc": "right-to-left",
      "lrc-IQ": "right-to-left",
      "lt": "left-to-right",
      "ltg": "left-to-right",
      "lu": "left-to-right",
      "luo": "left-to-right",
      "luy": "left-to-right",
      "lv": "left-to-right",
      "mai": "left-to-right",
      "mas": "left-to-right",
      "mas-TZ": "left-to-right",
      "mdf": "left-to-right",
      "mer": "left-to-right",
      "mfe": "left-to-right",
      "mg": "left-to-right",
      "mgh": "left-to-right",
      "mgo": "left-to-right",
      "mhn": "left-to-right",
      "mi": "left-to-right",
      "mic": "left-to-right",
      "mk": "left-to-right",
      "ml": "left-to-right",
      "mn": "left-to-right",
      "mn-Mong": "top-to-bottom",
      "mn-Mong-MN": "top-to-bottom",
      "mni": "left-to-right",
      "mni-Beng": "left-to-right",
      "mni-Mtei": "left-to-right",
      "moh": "left-to-right",
      "mr": "left-to-right",
      "ms": "left-to-right",
      "ms-Arab": "right-to-left",
      "ms-Arab-BN": "right-to-left",
      "ms-BN": "left-to-right",
      "ms-ID": "left-to-right",
      "ms-SG": "left-to-right",
      "mt": "left-to-right",
      "mua": "left-to-right",
      "mus": "left-to-right",
      "my": "left-to-right",
      "myv": "left-to-right",
      "mzn": "right-to-left",
      "naq": "left-to-right",
      "nb": "left-to-right",
      "nb-SJ": "left-to-right",
      "nd": "left-to-right",
      "nds": "left-to-right",
      "nds-NL": "left-to-right",
      "ne": "left-to-right",
      "ne-IN": "left-to-right",
      "nl": "left-to-right",
      "nl-AW": "left-to-right",
      "nl-BE": "left-to-right",
      "nl-BQ": "left-to-right",
      "nl-CW": "left-to-right",
      "nl-SR": "left-to-right",
      "nl-SX": "left-to-right",
      "nmg": "left-to-right",
      "nn": "left-to-right",
      "nnh": "left-to-right",
      "no": "left-to-right",
      "nqo": "right-to-left",
      "nr": "left-to-right",
      "nso": "left-to-right",
      "nus": "left-to-right",
      "nv": "left-to-right",
      "ny": "left-to-right",
      "nyn": "left-to-right",
      "oc": "left-to-right",
      "oc-ES": "left-to-right",
      "om": "left-to-right",
      "om-KE": "left-to-right",
      "or": "left-to-right",
      "os": "left-to-right",
      "os-RU": "left-to-right",
      "osa": "left-to-right",
      "pa": "left-to-right",
      "pa-Arab": "right-to-left",
      "pa-Guru": "left-to-right",
      "pap": "left-to-right",
      "pap-AW": "left-to-right",
      "pcm": "left-to-right",
      "pis": "left-to-right",
      "pl": "left-to-right",
      "prg": "left-to-right",
      "ps": "right-to-left",
      "ps-PK": "right-to-left",
      "pt": "left-to-right",
      "pt-AO": "left-to-right",
      "pt-CH": "left-to-right",
      "pt-CV": "left-to-right",
      "pt-GQ": "left-to-right",
      "pt-GW": "left-to-right",
      "pt-LU": "left-to-right",
      "pt-MO": "left-to-right",
      "pt-MZ": "left-to-right",
      "pt-PT": "left-to-right",
      "pt-ST": "left-to-right",
      "pt-TL": "left-to-right",
      "qu": "left-to-right",
      "qu-BO": "left-to-right",
      "qu-EC": "left-to-right",
      "quc": "left-to-right",
      "raj": "left-to-right",
      "rhg": "right-to-left",
      "rhg-Rohg": "right-to-left",
      "rhg-Rohg-BD": "right-to-left",
      "rif": "left-to-right",
      "rm": "left-to-right",
      "rn": "left-to-right",
      "ro": "left-to-right",
      "ro-MD": "left-to-right",
      "rof": "left-to-right",
      "ru": "left-to-right",
      "ru-BY": "left-to-right",
      "ru-KG": "left-to-right",
      "ru-KZ": "left-to-right",
      "ru-MD": "left-to-right",
      "ru-UA": "left-to-right",
      "rw": "left-to-right",
      "rwk": "left-to-right",
      "sa": "left-to-right",
      "sah": "left-to-right",
      "saq": "left-to-right",
      "sat": "left-to-right",
      "sat-Deva": "left-to-right",
      "sat-Olck": "left-to-right",
      "sbp": "left-to-right",
      "sc": "left-to-right",
      "scn": "left-to-right",
      "sd": "right-to-left",
      "sd-Arab": "right-to-left",
      "sd-Deva": "left-to-right",
      "sdh": "right-to-left",
      "sdh-IQ": "right-to-left",
      "se": "left-to-right",
      "se-FI": "left-to-right",
      "se-SE": "left-to-right",
      "seh": "left-to-right",
      "ses": "left-to-right",
      "sg": "left-to-right",
      "shi": "left-to-right",
      "shi-Latn": "left-to-right",
      "shi-Tfng": "left-to-right",
      "shn": "left-to-right",
      "shn-TH": "left-to-right",
      "si": "left-to-right",
      "sid": "left-to-right",
      "sk": "left-to-right",
      "skr": "right-to-left",
      "sl": "left-to-right",
      "sma": "left-to-right",
      "sma-NO": "left-to-right",
      "smj": "left-to-right",
      "smj-NO": "left-to-right",
      "smn": "left-to-right",
      "sms": "left-to-right",
      "sn": "left-to-right",
      "so": "left-to-right",
      "so-DJ": "left-to-right",
      "so-ET": "left-to-right",
      "so-KE": "left-to-right",
      "sq": "left-to-right",
      "sq-MK": "left-to-right",
      "sq-XK": "left-to-right",
      "sr": "left-to-right",
      "sr-Cyrl": "left-to-right",
      "sr-Cyrl-BA": "left-to-right",
      "sr-Cyrl-ME": "left-to-right",
      "sr-Cyrl-XK": "left-to-right",
      "sr-Latn": "left-to-right",
      "sr-Latn-BA": "left-to-right",
      "sr-Latn-ME": "left-to-right",
      "sr-Latn-XK": "left-to-right",
      "ss": "left-to-right",
      "ss-SZ": "left-to-right",
      "ssy": "left-to-right",
      "st": "left-to-right",
      "st-LS": "left-to-right",
      "su": "left-to-right",
      "su-Latn": "left-to-right",
      "sv": "left-to-right",
      "sv-AX": "left-to-right",
      "sv-FI": "left-to-right",
      "sw": "left-to-right",
      "sw-CD": "left-to-right",
      "sw-KE": "left-to-right",
      "sw-UG": "left-to-right",
      "syr": "right-to-left",
      "syr-SY": "right-to-left",
      "szl": "left-to-right",
      "ta": "left-to-right",
      "ta-LK": "left-to-right",
      "ta-MY": "left-to-right",
      "ta-SG": "left-to-right",
      "te": "left-to-right",
      "teo": "left-to-right",
      "teo-KE": "left-to-right",
      "tg": "left-to-right",
      "th": "left-to-right",
      "ti": "left-to-right",
      "ti-ER": "left-to-right",
      "tig": "left-to-right",
      "tk": "left-to-right",
      "tn": "left-to-right",
      "tn-BW": "left-to-right",
      "to": "left-to-right",
      "tok": "left-to-right",
      "tpi": "left-to-right",
      "tr": "left-to-right",
      "tr-CY": "left-to-right",
      "trv": "left-to-right",
      "trw": "right-to-left",
      "ts": "left-to-right",
      "tt": "left-to-right",
      "twq": "left-to-right",
      "tyv": "left-to-right",
      "tzm": "left-to-right",
      "ug": "right-to-left",
      "uk": "left-to-right",
      "und": "left-to-right",
      "ur": "right-to-left",
      "ur-IN": "right-to-left",
      "uz": "left-to-right",
      "uz-Arab": "right-to-left",
      "uz-Cyrl": "left-to-right",
      "uz-Latn": "left-to-right",
      "vai": "left-to-right",
      "vai-Latn": "left-to-right",
      "vai-Vaii": "left-to-right",
      "ve": "left-to-right",
      "vec": "left-to-right",
      "vi": "left-to-right",
      "vmw": "left-to-right",
      "vo": "left-to-right",
      "vun": "left-to-right",
      "wa": "left-to-right",
      "wae": "left-to-right",
      "wal": "left-to-right",
      "wbp": "left-to-right",
      "wo": "left-to-right",
      "xh": "left-to-right",
      "xnr": "left-to-right",
      "xog": "left-to-right",
      "yav": "left-to-right",
      "yi": "right-to-left",
      "yo": "left-to-right",
      "yo-BJ": "left-to-right",
      "yrl": "left-to-right",
      "yrl-CO": "left-to-right",
      "yrl-VE": "left-to-right",
      "yue": "left-to-right",
      "yue-Hans": "left-to-right",
      "yue-Hant": "left-to-right",
      "yue-Hant-CN": "left-to-right",
      "za": "left-to-right",
      "zgh": "left-to-right",
      "zh": "left-to-right",
      "zh-Hans": "left-to-right",
      "zh-Hans-HK": "left-to-right",
      "zh-Hans-MO": "left-to-right",
      "zh-Hans-MY": "left-to-right",
      "zh-Hans-SG": "left-to-right",
      "zh-Hant": "left-to-right",
      "zh-Hant-HK": "left-to-right",
      "zh-Hant-MO": "left-to-right",
      "zh-Hant-MY": "left-to-right",
      "zh-Latn": "left-to-right",
      "zu": "left-to-right"
    };
    return characterOrders_generated;
  }
  var get_internal_slots$4 = {};
  var hasRequiredGet_internal_slots$4;
  function requireGet_internal_slots$4() {
    if (hasRequiredGet_internal_slots$4) return get_internal_slots$4;
    hasRequiredGet_internal_slots$4 = 1;
    Object.defineProperty(get_internal_slots$4, "__esModule", { value: true });
    get_internal_slots$4.default = getInternalSlots;
    var internalSlotMap = /* @__PURE__ */ new WeakMap();
    function getInternalSlots(x, internalSlotsList) {
      if (internalSlotsList === void 0) {
        internalSlotsList = [];
      }
      var internalSlots = internalSlotMap.get(x);
      if (!internalSlots) {
        internalSlots = Object.create(null, internalSlotsList.reduce(function(all, prop) {
          all[prop] = {
            enumerable: false,
            writable: true,
            configurable: true
          };
          return all;
        }, {}));
        internalSlotMap.set(x, internalSlots);
      }
      return internalSlots;
    }
    return get_internal_slots$4;
  }
  var numberingSystems_generated$1 = {};
  var hasRequiredNumberingSystems_generated$1;
  function requireNumberingSystems_generated$1() {
    if (hasRequiredNumberingSystems_generated$1) return numberingSystems_generated$1;
    hasRequiredNumberingSystems_generated$1 = 1;
    Object.defineProperty(numberingSystems_generated$1, "__esModule", { value: true });
    numberingSystems_generated$1.numberingSystems = void 0;
    numberingSystems_generated$1.numberingSystems = {
      "aa": [
        "latn"
      ],
      "aa-DJ": [
        "latn"
      ],
      "aa-ER": [
        "latn"
      ],
      "ab": [
        "latn"
      ],
      "af": [
        "latn"
      ],
      "af-NA": [
        "latn"
      ],
      "agq": [
        "latn"
      ],
      "ak": [
        "latn"
      ],
      "am": [
        "latn",
        "ethi"
      ],
      "an": [
        "latn"
      ],
      "ann": [
        "latn"
      ],
      "apc": [
        "latn"
      ],
      "ar": [
        "latn",
        "arab"
      ],
      "ar-AE": [
        "latn",
        "arab"
      ],
      "ar-BH": [
        "arab"
      ],
      "ar-DJ": [
        "arab"
      ],
      "ar-DZ": [
        "latn",
        "arab"
      ],
      "ar-EG": [
        "arab"
      ],
      "ar-EH": [
        "latn",
        "arab"
      ],
      "ar-ER": [
        "arab"
      ],
      "ar-IL": [
        "arab"
      ],
      "ar-IQ": [
        "arab"
      ],
      "ar-JO": [
        "arab"
      ],
      "ar-KM": [
        "arab"
      ],
      "ar-KW": [
        "arab"
      ],
      "ar-LB": [
        "arab"
      ],
      "ar-LY": [
        "latn",
        "arab"
      ],
      "ar-MA": [
        "latn",
        "arab"
      ],
      "ar-MR": [
        "arab"
      ],
      "ar-OM": [
        "arab"
      ],
      "ar-PS": [
        "arab"
      ],
      "ar-QA": [
        "arab"
      ],
      "ar-SA": [
        "arab"
      ],
      "ar-SD": [
        "arab"
      ],
      "ar-SO": [
        "arab"
      ],
      "ar-SS": [
        "arab"
      ],
      "ar-SY": [
        "arab"
      ],
      "ar-TD": [
        "arab"
      ],
      "ar-TN": [
        "latn",
        "arab"
      ],
      "ar-YE": [
        "arab"
      ],
      "arn": [
        "latn"
      ],
      "as": [
        "beng"
      ],
      "asa": [
        "latn"
      ],
      "ast": [
        "latn"
      ],
      "az": [
        "latn"
      ],
      "az-Arab": [
        "arabext"
      ],
      "az-Arab-IQ": [
        "arabext"
      ],
      "az-Arab-TR": [
        "arabext"
      ],
      "az-Cyrl": [
        "latn"
      ],
      "az-Latn": [
        "latn"
      ],
      "ba": [
        "latn"
      ],
      "bal": [
        "latn"
      ],
      "bal-Arab": [
        "latn"
      ],
      "bal-Latn": [
        "latn"
      ],
      "bas": [
        "latn"
      ],
      "be": [
        "latn"
      ],
      "be-tarask": [
        "latn"
      ],
      "bem": [
        "latn"
      ],
      "bew": [
        "latn"
      ],
      "bez": [
        "latn"
      ],
      "bg": [
        "latn"
      ],
      "bgc": [
        "deva",
        "latn"
      ],
      "bgn": [
        "arabext"
      ],
      "bgn-AE": [
        "arabext"
      ],
      "bgn-AF": [
        "arabext"
      ],
      "bgn-IR": [
        "arabext"
      ],
      "bgn-OM": [
        "arabext"
      ],
      "bho": [
        "deva",
        "latn"
      ],
      "blo": [
        "latn"
      ],
      "blt": [
        "latn"
      ],
      "bm": [
        "latn"
      ],
      "bm-Nkoo": [
        "latn",
        "nkoo"
      ],
      "bn": [
        "beng"
      ],
      "bn-IN": [
        "beng"
      ],
      "bo": [
        "latn",
        "tibt"
      ],
      "bo-IN": [
        "latn",
        "tibt"
      ],
      "br": [
        "latn"
      ],
      "brx": [
        "latn",
        "deva"
      ],
      "bs": [
        "latn"
      ],
      "bs-Cyrl": [
        "latn"
      ],
      "bs-Latn": [
        "latn"
      ],
      "bss": [
        "latn"
      ],
      "byn": [
        "latn",
        "ethi"
      ],
      "ca": [
        "latn"
      ],
      "ca-AD": [
        "latn"
      ],
      "ca-ES-valencia": [
        "latn"
      ],
      "ca-FR": [
        "latn"
      ],
      "ca-IT": [
        "latn"
      ],
      "cad": [
        "latn"
      ],
      "cch": [
        "latn"
      ],
      "ccp": [
        "cakm"
      ],
      "ccp-IN": [
        "cakm"
      ],
      "ce": [
        "latn"
      ],
      "ceb": [
        "latn"
      ],
      "cgg": [
        "latn"
      ],
      "cho": [
        "latn"
      ],
      "chr": [
        "latn"
      ],
      "cic": [
        "latn"
      ],
      "ckb": [
        "arab"
      ],
      "ckb-IR": [
        "arab"
      ],
      "co": [
        "latn"
      ],
      "cs": [
        "latn"
      ],
      "csw": [
        "latn"
      ],
      "cu": [
        "latn",
        "cyrl"
      ],
      "cv": [
        "latn"
      ],
      "cy": [
        "latn"
      ],
      "da": [
        "latn"
      ],
      "da-GL": [
        "latn"
      ],
      "dav": [
        "latn"
      ],
      "de": [
        "latn"
      ],
      "de-AT": [
        "latn"
      ],
      "de-BE": [
        "latn"
      ],
      "de-CH": [
        "latn"
      ],
      "de-IT": [
        "latn"
      ],
      "de-LI": [
        "latn"
      ],
      "de-LU": [
        "latn"
      ],
      "dje": [
        "latn"
      ],
      "doi": [
        "latn",
        "deva"
      ],
      "dsb": [
        "latn"
      ],
      "dua": [
        "latn"
      ],
      "dv": [
        "latn",
        "arab"
      ],
      "dyo": [
        "latn"
      ],
      "dz": [
        "tibt"
      ],
      "ebu": [
        "latn"
      ],
      "ee": [
        "latn"
      ],
      "ee-TG": [
        "latn"
      ],
      "el": [
        "latn",
        "grek"
      ],
      "el-CY": [
        "latn",
        "grek"
      ],
      "el-polyton": [
        "latn",
        "grek"
      ],
      "en": [
        "latn"
      ],
      "en-001": [
        "latn"
      ],
      "en-150": [
        "latn"
      ],
      "en-AE": [
        "latn"
      ],
      "en-AG": [
        "latn"
      ],
      "en-AI": [
        "latn"
      ],
      "en-AS": [
        "latn"
      ],
      "en-AT": [
        "latn"
      ],
      "en-AU": [
        "latn"
      ],
      "en-BB": [
        "latn"
      ],
      "en-BE": [
        "latn"
      ],
      "en-BI": [
        "latn"
      ],
      "en-BM": [
        "latn"
      ],
      "en-BS": [
        "latn"
      ],
      "en-BW": [
        "latn"
      ],
      "en-BZ": [
        "latn"
      ],
      "en-CA": [
        "latn"
      ],
      "en-CC": [
        "latn"
      ],
      "en-CH": [
        "latn"
      ],
      "en-CK": [
        "latn"
      ],
      "en-CM": [
        "latn"
      ],
      "en-CX": [
        "latn"
      ],
      "en-CY": [
        "latn"
      ],
      "en-DE": [
        "latn"
      ],
      "en-DG": [
        "latn"
      ],
      "en-DK": [
        "latn"
      ],
      "en-DM": [
        "latn"
      ],
      "en-Dsrt": [
        "latn"
      ],
      "en-ER": [
        "latn"
      ],
      "en-FI": [
        "latn"
      ],
      "en-FJ": [
        "latn"
      ],
      "en-FK": [
        "latn"
      ],
      "en-FM": [
        "latn"
      ],
      "en-GB": [
        "latn"
      ],
      "en-GD": [
        "latn"
      ],
      "en-GG": [
        "latn"
      ],
      "en-GH": [
        "latn"
      ],
      "en-GI": [
        "latn"
      ],
      "en-GM": [
        "latn"
      ],
      "en-GU": [
        "latn"
      ],
      "en-GY": [
        "latn"
      ],
      "en-HK": [
        "latn"
      ],
      "en-ID": [
        "latn"
      ],
      "en-IE": [
        "latn"
      ],
      "en-IL": [
        "latn"
      ],
      "en-IM": [
        "latn"
      ],
      "en-IN": [
        "latn"
      ],
      "en-IO": [
        "latn"
      ],
      "en-JE": [
        "latn"
      ],
      "en-JM": [
        "latn"
      ],
      "en-KE": [
        "latn"
      ],
      "en-KI": [
        "latn"
      ],
      "en-KN": [
        "latn"
      ],
      "en-KY": [
        "latn"
      ],
      "en-LC": [
        "latn"
      ],
      "en-LR": [
        "latn"
      ],
      "en-LS": [
        "latn"
      ],
      "en-MG": [
        "latn"
      ],
      "en-MH": [
        "latn"
      ],
      "en-MO": [
        "latn"
      ],
      "en-MP": [
        "latn"
      ],
      "en-MS": [
        "latn"
      ],
      "en-MT": [
        "latn"
      ],
      "en-MU": [
        "latn"
      ],
      "en-MV": [
        "latn"
      ],
      "en-MW": [
        "latn"
      ],
      "en-MY": [
        "latn"
      ],
      "en-NA": [
        "latn"
      ],
      "en-NF": [
        "latn"
      ],
      "en-NG": [
        "latn"
      ],
      "en-NL": [
        "latn"
      ],
      "en-NR": [
        "latn"
      ],
      "en-NU": [
        "latn"
      ],
      "en-NZ": [
        "latn"
      ],
      "en-PG": [
        "latn"
      ],
      "en-PH": [
        "latn"
      ],
      "en-PK": [
        "latn"
      ],
      "en-PN": [
        "latn"
      ],
      "en-PR": [
        "latn"
      ],
      "en-PW": [
        "latn"
      ],
      "en-RW": [
        "latn"
      ],
      "en-SB": [
        "latn"
      ],
      "en-SC": [
        "latn"
      ],
      "en-SD": [
        "latn"
      ],
      "en-SE": [
        "latn"
      ],
      "en-SG": [
        "latn"
      ],
      "en-SH": [
        "latn"
      ],
      "en-SI": [
        "latn"
      ],
      "en-SL": [
        "latn"
      ],
      "en-SS": [
        "latn"
      ],
      "en-SX": [
        "latn"
      ],
      "en-SZ": [
        "latn"
      ],
      "en-Shaw": [
        "latn"
      ],
      "en-TC": [
        "latn"
      ],
      "en-TK": [
        "latn"
      ],
      "en-TO": [
        "latn"
      ],
      "en-TT": [
        "latn"
      ],
      "en-TV": [
        "latn"
      ],
      "en-TZ": [
        "latn"
      ],
      "en-UG": [
        "latn"
      ],
      "en-UM": [
        "latn"
      ],
      "en-VC": [
        "latn"
      ],
      "en-VG": [
        "latn"
      ],
      "en-VI": [
        "latn"
      ],
      "en-VU": [
        "latn"
      ],
      "en-WS": [
        "latn"
      ],
      "en-ZA": [
        "latn"
      ],
      "en-ZM": [
        "latn"
      ],
      "en-ZW": [
        "latn"
      ],
      "eo": [
        "latn"
      ],
      "es": [
        "latn"
      ],
      "es-419": [
        "latn"
      ],
      "es-AR": [
        "latn"
      ],
      "es-BO": [
        "latn"
      ],
      "es-BR": [
        "latn"
      ],
      "es-BZ": [
        "latn"
      ],
      "es-CL": [
        "latn"
      ],
      "es-CO": [
        "latn"
      ],
      "es-CR": [
        "latn"
      ],
      "es-CU": [
        "latn"
      ],
      "es-DO": [
        "latn"
      ],
      "es-EA": [
        "latn"
      ],
      "es-EC": [
        "latn"
      ],
      "es-GQ": [
        "latn"
      ],
      "es-GT": [
        "latn"
      ],
      "es-HN": [
        "latn"
      ],
      "es-IC": [
        "latn"
      ],
      "es-MX": [
        "latn"
      ],
      "es-NI": [
        "latn"
      ],
      "es-PA": [
        "latn"
      ],
      "es-PE": [
        "latn"
      ],
      "es-PH": [
        "latn"
      ],
      "es-PR": [
        "latn"
      ],
      "es-PY": [
        "latn"
      ],
      "es-SV": [
        "latn"
      ],
      "es-US": [
        "latn"
      ],
      "es-UY": [
        "latn"
      ],
      "es-VE": [
        "latn"
      ],
      "et": [
        "latn"
      ],
      "eu": [
        "latn"
      ],
      "ewo": [
        "latn"
      ],
      "fa": [
        "arabext"
      ],
      "fa-AF": [
        "arabext"
      ],
      "ff": [
        "latn"
      ],
      "ff-Adlm": [
        "adlm"
      ],
      "ff-Adlm-BF": [
        "adlm"
      ],
      "ff-Adlm-CM": [
        "adlm"
      ],
      "ff-Adlm-GH": [
        "adlm"
      ],
      "ff-Adlm-GM": [
        "adlm"
      ],
      "ff-Adlm-GW": [
        "adlm"
      ],
      "ff-Adlm-LR": [
        "adlm"
      ],
      "ff-Adlm-MR": [
        "adlm"
      ],
      "ff-Adlm-NE": [
        "adlm"
      ],
      "ff-Adlm-NG": [
        "adlm"
      ],
      "ff-Adlm-SL": [
        "adlm"
      ],
      "ff-Adlm-SN": [
        "adlm"
      ],
      "ff-Latn": [
        "latn"
      ],
      "ff-Latn-BF": [
        "latn"
      ],
      "ff-Latn-CM": [
        "latn"
      ],
      "ff-Latn-GH": [
        "latn"
      ],
      "ff-Latn-GM": [
        "latn"
      ],
      "ff-Latn-GN": [
        "latn"
      ],
      "ff-Latn-GW": [
        "latn"
      ],
      "ff-Latn-LR": [
        "latn"
      ],
      "ff-Latn-MR": [
        "latn"
      ],
      "ff-Latn-NE": [
        "latn"
      ],
      "ff-Latn-NG": [
        "latn"
      ],
      "ff-Latn-SL": [
        "latn"
      ],
      "fi": [
        "latn"
      ],
      "fil": [
        "latn"
      ],
      "fo": [
        "latn"
      ],
      "fo-DK": [
        "latn"
      ],
      "fr": [
        "latn"
      ],
      "fr-BE": [
        "latn"
      ],
      "fr-BF": [
        "latn"
      ],
      "fr-BI": [
        "latn"
      ],
      "fr-BJ": [
        "latn"
      ],
      "fr-BL": [
        "latn"
      ],
      "fr-CA": [
        "latn"
      ],
      "fr-CD": [
        "latn"
      ],
      "fr-CF": [
        "latn"
      ],
      "fr-CG": [
        "latn"
      ],
      "fr-CH": [
        "latn"
      ],
      "fr-CI": [
        "latn"
      ],
      "fr-CM": [
        "latn"
      ],
      "fr-DJ": [
        "latn"
      ],
      "fr-DZ": [
        "latn"
      ],
      "fr-GA": [
        "latn"
      ],
      "fr-GF": [
        "latn"
      ],
      "fr-GN": [
        "latn"
      ],
      "fr-GP": [
        "latn"
      ],
      "fr-GQ": [
        "latn"
      ],
      "fr-HT": [
        "latn"
      ],
      "fr-KM": [
        "latn"
      ],
      "fr-LU": [
        "latn"
      ],
      "fr-MA": [
        "latn"
      ],
      "fr-MC": [
        "latn"
      ],
      "fr-MF": [
        "latn"
      ],
      "fr-MG": [
        "latn"
      ],
      "fr-ML": [
        "latn"
      ],
      "fr-MQ": [
        "latn"
      ],
      "fr-MR": [
        "latn"
      ],
      "fr-MU": [
        "latn"
      ],
      "fr-NC": [
        "latn"
      ],
      "fr-NE": [
        "latn"
      ],
      "fr-PF": [
        "latn"
      ],
      "fr-PM": [
        "latn"
      ],
      "fr-RE": [
        "latn"
      ],
      "fr-RW": [
        "latn"
      ],
      "fr-SC": [
        "latn"
      ],
      "fr-SN": [
        "latn"
      ],
      "fr-SY": [
        "latn"
      ],
      "fr-TD": [
        "latn"
      ],
      "fr-TG": [
        "latn"
      ],
      "fr-TN": [
        "latn"
      ],
      "fr-VU": [
        "latn"
      ],
      "fr-WF": [
        "latn"
      ],
      "fr-YT": [
        "latn"
      ],
      "frr": [
        "latn"
      ],
      "fur": [
        "latn"
      ],
      "fy": [
        "latn"
      ],
      "ga": [
        "latn"
      ],
      "ga-GB": [
        "latn"
      ],
      "gaa": [
        "latn"
      ],
      "gd": [
        "latn"
      ],
      "gez": [
        "latn"
      ],
      "gez-ER": [
        "latn"
      ],
      "gl": [
        "latn"
      ],
      "gn": [
        "latn"
      ],
      "gsw": [
        "latn"
      ],
      "gsw-FR": [
        "latn"
      ],
      "gsw-LI": [
        "latn"
      ],
      "gu": [
        "latn",
        "gujr"
      ],
      "guz": [
        "latn"
      ],
      "gv": [
        "latn"
      ],
      "ha": [
        "latn"
      ],
      "ha-Arab": [
        "latn",
        "arab"
      ],
      "ha-Arab-SD": [
        "latn",
        "arab"
      ],
      "ha-GH": [
        "latn"
      ],
      "ha-NE": [
        "latn"
      ],
      "haw": [
        "latn"
      ],
      "he": [
        "latn",
        "hebr"
      ],
      "hi": [
        "latn",
        "deva"
      ],
      "hi-Latn": [
        "latn"
      ],
      "hnj": [
        "hmnp",
        "latn"
      ],
      "hnj-Hmnp": [
        "hmnp",
        "latn"
      ],
      "hr": [
        "latn"
      ],
      "hr-BA": [
        "latn"
      ],
      "hsb": [
        "latn"
      ],
      "hu": [
        "latn"
      ],
      "hy": [
        "latn",
        "armn"
      ],
      "ia": [
        "latn"
      ],
      "id": [
        "latn"
      ],
      "ie": [
        "latn"
      ],
      "ig": [
        "latn"
      ],
      "ii": [
        "latn"
      ],
      "io": [
        "latn"
      ],
      "is": [
        "latn"
      ],
      "it": [
        "latn"
      ],
      "it-CH": [
        "latn"
      ],
      "it-SM": [
        "latn"
      ],
      "it-VA": [
        "latn"
      ],
      "iu": [
        "latn"
      ],
      "iu-Latn": [
        "latn"
      ],
      "ja": [
        "latn",
        "jpan",
        "jpanfin"
      ],
      "jbo": [
        "latn"
      ],
      "jgo": [
        "latn"
      ],
      "jmc": [
        "latn"
      ],
      "jv": [
        "latn",
        "java"
      ],
      "ka": [
        "latn",
        "geor"
      ],
      "kaa": [
        "latn"
      ],
      "kaa-Cyrl": [
        "latn"
      ],
      "kaa-Latn": [
        "latn"
      ],
      "kab": [
        "latn"
      ],
      "kaj": [
        "latn"
      ],
      "kam": [
        "latn"
      ],
      "kcg": [
        "latn"
      ],
      "kde": [
        "latn"
      ],
      "kea": [
        "latn"
      ],
      "ken": [
        "latn"
      ],
      "kgp": [
        "latn"
      ],
      "khq": [
        "latn"
      ],
      "ki": [
        "latn"
      ],
      "kk": [
        "latn"
      ],
      "kk-Arab": [
        "latn"
      ],
      "kk-Cyrl": [
        "latn"
      ],
      "kk-KZ": [
        "latn"
      ],
      "kkj": [
        "latn"
      ],
      "kl": [
        "latn"
      ],
      "kln": [
        "latn"
      ],
      "km": [
        "latn",
        "khmr"
      ],
      "kn": [
        "latn",
        "knda"
      ],
      "ko": [
        "latn"
      ],
      "ko-CN": [
        "latn"
      ],
      "ko-KP": [
        "latn"
      ],
      "kok": [
        "latn",
        "deva"
      ],
      "kok-Deva": [
        "latn",
        "deva"
      ],
      "kok-Latn": [
        "latn"
      ],
      "kpe": [
        "latn"
      ],
      "kpe-GN": [
        "latn"
      ],
      "ks": [
        "arabext"
      ],
      "ks-Arab": [
        "arabext"
      ],
      "ks-Deva": [
        "latn"
      ],
      "ksb": [
        "latn"
      ],
      "ksf": [
        "latn"
      ],
      "ksh": [
        "latn"
      ],
      "ku": [
        "latn"
      ],
      "kw": [
        "latn"
      ],
      "kxv": [
        "latn"
      ],
      "kxv-Deva": [
        "latn",
        "deva"
      ],
      "kxv-Latn": [
        "latn"
      ],
      "kxv-Orya": [
        "latn",
        "orya"
      ],
      "kxv-Telu": [
        "latn",
        "telu"
      ],
      "ky": [
        "latn"
      ],
      "la": [
        "latn"
      ],
      "lag": [
        "latn"
      ],
      "lb": [
        "latn"
      ],
      "lg": [
        "latn"
      ],
      "lij": [
        "latn"
      ],
      "lkt": [
        "latn"
      ],
      "lld": [
        "latn"
      ],
      "lmo": [
        "latn"
      ],
      "ln": [
        "latn"
      ],
      "ln-AO": [
        "latn"
      ],
      "ln-CF": [
        "latn"
      ],
      "ln-CG": [
        "latn"
      ],
      "lo": [
        "latn",
        "laoo"
      ],
      "lrc": [
        "arabext"
      ],
      "lrc-IQ": [
        "arabext"
      ],
      "lt": [
        "latn"
      ],
      "ltg": [
        "latn"
      ],
      "lu": [
        "latn"
      ],
      "luo": [
        "latn"
      ],
      "luy": [
        "latn"
      ],
      "lv": [
        "latn"
      ],
      "mai": [
        "latn",
        "deva"
      ],
      "mas": [
        "latn"
      ],
      "mas-TZ": [
        "latn"
      ],
      "mdf": [
        "latn"
      ],
      "mer": [
        "latn"
      ],
      "mfe": [
        "latn"
      ],
      "mg": [
        "latn"
      ],
      "mgh": [
        "latn"
      ],
      "mgo": [
        "latn"
      ],
      "mhn": [
        "latn"
      ],
      "mi": [
        "latn"
      ],
      "mic": [
        "latn"
      ],
      "mk": [
        "latn"
      ],
      "ml": [
        "latn",
        "mlym"
      ],
      "mn": [
        "latn"
      ],
      "mn-Mong": [
        "latn",
        "mong"
      ],
      "mn-Mong-MN": [
        "latn",
        "mong"
      ],
      "mni": [
        "beng",
        "latn"
      ],
      "mni-Beng": [
        "beng",
        "latn"
      ],
      "mni-Mtei": [
        "mtei",
        "latn"
      ],
      "moh": [
        "latn"
      ],
      "mr": [
        "deva"
      ],
      "ms": [
        "latn"
      ],
      "ms-Arab": [
        "latn"
      ],
      "ms-Arab-BN": [
        "latn"
      ],
      "ms-BN": [
        "latn"
      ],
      "ms-ID": [
        "latn"
      ],
      "ms-SG": [
        "latn"
      ],
      "mt": [
        "latn"
      ],
      "mua": [
        "latn"
      ],
      "mus": [
        "latn"
      ],
      "my": [
        "mymr"
      ],
      "myv": [
        "latn"
      ],
      "mzn": [
        "arabext"
      ],
      "naq": [
        "latn"
      ],
      "nb": [
        "latn"
      ],
      "nb-SJ": [
        "latn"
      ],
      "nd": [
        "latn"
      ],
      "nds": [
        "latn"
      ],
      "nds-NL": [
        "latn"
      ],
      "ne": [
        "deva"
      ],
      "ne-IN": [
        "deva"
      ],
      "nl": [
        "latn"
      ],
      "nl-AW": [
        "latn"
      ],
      "nl-BE": [
        "latn"
      ],
      "nl-BQ": [
        "latn"
      ],
      "nl-CW": [
        "latn"
      ],
      "nl-SR": [
        "latn"
      ],
      "nl-SX": [
        "latn"
      ],
      "nmg": [
        "latn"
      ],
      "nn": [
        "latn"
      ],
      "nnh": [
        "latn"
      ],
      "no": [
        "latn"
      ],
      "nqo": [
        "nkoo"
      ],
      "nr": [
        "latn"
      ],
      "nso": [
        "latn"
      ],
      "nus": [
        "latn"
      ],
      "nv": [
        "latn"
      ],
      "ny": [
        "latn"
      ],
      "nyn": [
        "latn"
      ],
      "oc": [
        "latn"
      ],
      "oc-ES": [
        "latn"
      ],
      "om": [
        "latn",
        "ethi"
      ],
      "om-KE": [
        "latn",
        "ethi"
      ],
      "or": [
        "latn",
        "orya"
      ],
      "os": [
        "latn"
      ],
      "os-RU": [
        "latn"
      ],
      "osa": [
        "latn"
      ],
      "pa": [
        "latn",
        "guru"
      ],
      "pa-Arab": [
        "arabext"
      ],
      "pa-Guru": [
        "latn",
        "guru"
      ],
      "pap": [
        "latn"
      ],
      "pap-AW": [
        "latn"
      ],
      "pcm": [
        "latn"
      ],
      "pis": [
        "latn"
      ],
      "pl": [
        "latn"
      ],
      "prg": [
        "latn"
      ],
      "ps": [
        "arabext"
      ],
      "ps-PK": [
        "arabext"
      ],
      "pt": [
        "latn"
      ],
      "pt-AO": [
        "latn"
      ],
      "pt-CH": [
        "latn"
      ],
      "pt-CV": [
        "latn"
      ],
      "pt-GQ": [
        "latn"
      ],
      "pt-GW": [
        "latn"
      ],
      "pt-LU": [
        "latn"
      ],
      "pt-MO": [
        "latn"
      ],
      "pt-MZ": [
        "latn"
      ],
      "pt-PT": [
        "latn"
      ],
      "pt-ST": [
        "latn"
      ],
      "pt-TL": [
        "latn"
      ],
      "qu": [
        "latn"
      ],
      "qu-BO": [
        "latn"
      ],
      "qu-EC": [
        "latn"
      ],
      "quc": [
        "latn"
      ],
      "raj": [
        "deva",
        "latn"
      ],
      "rhg": [
        "latn"
      ],
      "rhg-Rohg": [
        "latn"
      ],
      "rhg-Rohg-BD": [
        "latn"
      ],
      "rif": [
        "latn"
      ],
      "rm": [
        "latn"
      ],
      "rn": [
        "latn"
      ],
      "ro": [
        "latn"
      ],
      "ro-MD": [
        "latn"
      ],
      "rof": [
        "latn"
      ],
      "ru": [
        "latn"
      ],
      "ru-BY": [
        "latn"
      ],
      "ru-KG": [
        "latn"
      ],
      "ru-KZ": [
        "latn"
      ],
      "ru-MD": [
        "latn"
      ],
      "ru-UA": [
        "latn"
      ],
      "rw": [
        "latn"
      ],
      "rwk": [
        "latn"
      ],
      "sa": [
        "deva"
      ],
      "sah": [
        "latn"
      ],
      "saq": [
        "latn"
      ],
      "sat": [
        "olck",
        "latn"
      ],
      "sat-Deva": [
        "deva",
        "latn"
      ],
      "sat-Olck": [
        "olck",
        "latn"
      ],
      "sbp": [
        "latn"
      ],
      "sc": [
        "latn"
      ],
      "scn": [
        "latn"
      ],
      "sd": [
        "arab"
      ],
      "sd-Arab": [
        "arab"
      ],
      "sd-Deva": [
        "latn"
      ],
      "sdh": [
        "arab"
      ],
      "sdh-IQ": [
        "arab"
      ],
      "se": [
        "latn"
      ],
      "se-FI": [
        "latn"
      ],
      "se-SE": [
        "latn"
      ],
      "seh": [
        "latn"
      ],
      "ses": [
        "latn"
      ],
      "sg": [
        "latn"
      ],
      "shi": [
        "latn"
      ],
      "shi-Latn": [
        "latn"
      ],
      "shi-Tfng": [
        "latn"
      ],
      "shn": [
        "latn"
      ],
      "shn-TH": [
        "latn"
      ],
      "si": [
        "latn"
      ],
      "sid": [
        "latn"
      ],
      "sk": [
        "latn"
      ],
      "skr": [
        "latn"
      ],
      "sl": [
        "latn"
      ],
      "sma": [
        "latn"
      ],
      "sma-NO": [
        "latn"
      ],
      "smj": [
        "latn"
      ],
      "smj-NO": [
        "latn"
      ],
      "smn": [
        "latn"
      ],
      "sms": [
        "latn"
      ],
      "sn": [
        "latn"
      ],
      "so": [
        "latn"
      ],
      "so-DJ": [
        "latn"
      ],
      "so-ET": [
        "latn"
      ],
      "so-KE": [
        "latn"
      ],
      "sq": [
        "latn"
      ],
      "sq-MK": [
        "latn"
      ],
      "sq-XK": [
        "latn"
      ],
      "sr": [
        "latn"
      ],
      "sr-Cyrl": [
        "latn"
      ],
      "sr-Cyrl-BA": [
        "latn"
      ],
      "sr-Cyrl-ME": [
        "latn"
      ],
      "sr-Cyrl-XK": [
        "latn"
      ],
      "sr-Latn": [
        "latn"
      ],
      "sr-Latn-BA": [
        "latn"
      ],
      "sr-Latn-ME": [
        "latn"
      ],
      "sr-Latn-XK": [
        "latn"
      ],
      "ss": [
        "latn"
      ],
      "ss-SZ": [
        "latn"
      ],
      "ssy": [
        "latn"
      ],
      "st": [
        "latn"
      ],
      "st-LS": [
        "latn"
      ],
      "su": [
        "latn"
      ],
      "su-Latn": [
        "latn"
      ],
      "sv": [
        "latn"
      ],
      "sv-AX": [
        "latn"
      ],
      "sv-FI": [
        "latn"
      ],
      "sw": [
        "latn"
      ],
      "sw-CD": [
        "latn"
      ],
      "sw-KE": [
        "latn"
      ],
      "sw-UG": [
        "latn"
      ],
      "syr": [
        "latn"
      ],
      "syr-SY": [
        "latn"
      ],
      "szl": [
        "latn"
      ],
      "ta": [
        "latn",
        "tamldec",
        "taml"
      ],
      "ta-LK": [
        "latn",
        "tamldec",
        "taml"
      ],
      "ta-MY": [
        "latn",
        "tamldec",
        "taml"
      ],
      "ta-SG": [
        "latn",
        "tamldec",
        "taml"
      ],
      "te": [
        "latn",
        "telu"
      ],
      "teo": [
        "latn"
      ],
      "teo-KE": [
        "latn"
      ],
      "tg": [
        "latn"
      ],
      "th": [
        "latn",
        "thai"
      ],
      "ti": [
        "latn",
        "ethi"
      ],
      "ti-ER": [
        "latn",
        "ethi"
      ],
      "tig": [
        "latn",
        "ethi"
      ],
      "tk": [
        "latn"
      ],
      "tn": [
        "latn"
      ],
      "tn-BW": [
        "latn"
      ],
      "to": [
        "latn"
      ],
      "tok": [
        "latn"
      ],
      "tpi": [
        "latn"
      ],
      "tr": [
        "latn"
      ],
      "tr-CY": [
        "latn"
      ],
      "trv": [
        "latn"
      ],
      "trw": [
        "latn"
      ],
      "ts": [
        "latn"
      ],
      "tt": [
        "latn"
      ],
      "twq": [
        "latn"
      ],
      "tyv": [
        "latn"
      ],
      "tzm": [
        "latn"
      ],
      "ug": [
        "latn",
        "arabext"
      ],
      "uk": [
        "latn"
      ],
      "und": [
        "latn"
      ],
      "ur": [
        "latn",
        "arabext"
      ],
      "ur-IN": [
        "arabext"
      ],
      "uz": [
        "latn"
      ],
      "uz-Arab": [
        "arabext"
      ],
      "uz-Cyrl": [
        "latn"
      ],
      "uz-Latn": [
        "latn"
      ],
      "vai": [
        "latn",
        "vaii"
      ],
      "vai-Latn": [
        "latn",
        "vaii"
      ],
      "vai-Vaii": [
        "latn",
        "vaii"
      ],
      "ve": [
        "latn"
      ],
      "vec": [
        "latn"
      ],
      "vi": [
        "latn"
      ],
      "vmw": [
        "latn"
      ],
      "vo": [
        "latn"
      ],
      "vun": [
        "latn"
      ],
      "wa": [
        "latn"
      ],
      "wae": [
        "latn"
      ],
      "wal": [
        "latn",
        "ethi"
      ],
      "wbp": [
        "latn"
      ],
      "wo": [
        "latn"
      ],
      "xh": [
        "latn"
      ],
      "xnr": [
        "latn",
        "deva"
      ],
      "xog": [
        "latn"
      ],
      "yav": [
        "latn"
      ],
      "yi": [
        "latn",
        "hebr"
      ],
      "yo": [
        "latn"
      ],
      "yo-BJ": [
        "latn"
      ],
      "yrl": [
        "latn"
      ],
      "yrl-CO": [
        "latn"
      ],
      "yrl-VE": [
        "latn"
      ],
      "yue": [
        "latn",
        "hanidec",
        "hant",
        "hantfin"
      ],
      "yue-Hans": [
        "latn",
        "hanidec",
        "hans",
        "hansfin"
      ],
      "yue-Hant": [
        "latn",
        "hanidec",
        "hant",
        "hantfin"
      ],
      "yue-Hant-CN": [
        "latn",
        "hanidec",
        "hant",
        "hantfin"
      ],
      "za": [
        "latn"
      ],
      "zgh": [
        "latn"
      ],
      "zh": [
        "latn",
        "hanidec",
        "hans",
        "hansfin"
      ],
      "zh-Hans": [
        "latn",
        "hanidec",
        "hans",
        "hansfin"
      ],
      "zh-Hans-HK": [
        "latn",
        "hanidec",
        "hans",
        "hansfin"
      ],
      "zh-Hans-MO": [
        "latn",
        "hanidec",
        "hans",
        "hansfin"
      ],
      "zh-Hans-MY": [
        "latn",
        "hanidec",
        "hans",
        "hansfin"
      ],
      "zh-Hans-SG": [
        "latn",
        "hanidec",
        "hans",
        "hansfin"
      ],
      "zh-Hant": [
        "latn",
        "hanidec",
        "hant",
        "hantfin"
      ],
      "zh-Hant-HK": [
        "latn",
        "hanidec",
        "hant",
        "hantfin"
      ],
      "zh-Hant-MO": [
        "latn",
        "hanidec",
        "hant",
        "hantfin"
      ],
      "zh-Hant-MY": [
        "latn",
        "hanidec",
        "hant",
        "hantfin"
      ],
      "zh-Latn": [
        "latn"
      ],
      "zu": [
        "latn"
      ]
    };
    return numberingSystems_generated$1;
  }
  var preferenceData = {};
  var timezones_generated = {};
  var hasRequiredTimezones_generated;
  function requireTimezones_generated() {
    if (hasRequiredTimezones_generated) return timezones_generated;
    hasRequiredTimezones_generated = 1;
    Object.defineProperty(timezones_generated, "__esModule", { value: true });
    timezones_generated.timezones = void 0;
    timezones_generated.timezones = {
      "ad": [
        "Europe/Andorra"
      ],
      "ae": [
        "Asia/Dubai"
      ],
      "af": [
        "Asia/Kabul"
      ],
      "ag": [
        "America/Antigua"
      ],
      "ai": [
        "America/Anguilla"
      ],
      "al": [
        "Europe/Tirane"
      ],
      "am": [
        "Asia/Yerevan"
      ],
      "an": [
        "America/Curacao"
      ],
      "ao": [
        "Africa/Luanda"
      ],
      "aq": [
        "Pacific/Auckland",
        "Antarctica/Casey",
        "Antarctica/Davis",
        "Antarctica/DumontDUrville",
        "Antarctica/Mawson",
        "Antarctica/McMurdo",
        "Antarctica/Palmer",
        "Antarctica/Rothera",
        "Antarctica/Syowa",
        "Antarctica/Troll",
        "Antarctica/Vostok"
      ],
      "ar": [
        "America/Buenos_Aires",
        "America/Cordoba",
        "America/Catamarca",
        "America/Argentina/La_Rioja",
        "America/Jujuy",
        "America/Argentina/San_Luis",
        "America/Mendoza",
        "America/Argentina/Rio_Gallegos",
        "America/Argentina/Salta",
        "America/Argentina/Tucuman",
        "America/Argentina/San_Juan",
        "America/Argentina/Ushuaia"
      ],
      "as": [
        "Pacific/Pago_Pago"
      ],
      "at": [
        "Europe/Vienna"
      ],
      "au": [
        "Australia/Adelaide",
        "Australia/Broken_Hill",
        "Australia/Brisbane",
        "Australia/Darwin",
        "Australia/Eucla",
        "Australia/Hobart",
        "Australia/Hobart",
        "Australia/Lindeman",
        "Australia/Lord_Howe",
        "Australia/Melbourne",
        "Antarctica/Macquarie",
        "Australia/Perth",
        "Australia/Sydney"
      ],
      "aw": [
        "America/Aruba"
      ],
      "az": [
        "Asia/Baku"
      ],
      "ba": [
        "Europe/Sarajevo"
      ],
      "bb": [
        "America/Barbados"
      ],
      "bd": [
        "Asia/Dhaka"
      ],
      "be": [
        "Europe/Brussels"
      ],
      "bf": [
        "Africa/Ouagadougou"
      ],
      "bg": [
        "Europe/Sofia"
      ],
      "bh": [
        "Asia/Bahrain"
      ],
      "bi": [
        "Africa/Bujumbura"
      ],
      "bj": [
        "Africa/Porto-Novo"
      ],
      "bm": [
        "Atlantic/Bermuda"
      ],
      "bn": [
        "Asia/Brunei"
      ],
      "bo": [
        "America/La_Paz"
      ],
      "bq": [
        "America/Kralendijk"
      ],
      "br": [
        "America/Araguaina",
        "America/Belem",
        "America/Boa_Vista",
        "America/Cuiaba",
        "America/Campo_Grande",
        "America/Eirunepe",
        "America/Noronha",
        "America/Fortaleza",
        "America/Manaus",
        "America/Maceio",
        "America/Porto_Velho",
        "America/Rio_Branco",
        "America/Recife",
        "America/Sao_Paulo",
        "America/Bahia",
        "America/Santarem"
      ],
      "bs": [
        "America/Nassau"
      ],
      "bt": [
        "Asia/Thimphu"
      ],
      "bw": [
        "Africa/Gaborone"
      ],
      "by": [
        "Europe/Minsk"
      ],
      "bz": [
        "America/Belize"
      ],
      "ca": [
        "America/Creston",
        "America/Edmonton",
        "America/Winnipeg",
        "America/Fort_Nelson",
        "America/Glace_Bay",
        "America/Goose_Bay",
        "America/Halifax",
        "America/Iqaluit",
        "America/Moncton",
        "America/Toronto",
        "America/Toronto",
        "America/Iqaluit",
        "America/Resolute",
        "America/Regina",
        "America/St_Johns",
        "America/Toronto",
        "America/Toronto",
        "America/Vancouver",
        "America/Winnipeg",
        "America/Blanc-Sablon",
        "America/Cambridge_Bay",
        "America/Dawson",
        "America/Dawson_Creek",
        "America/Rankin_Inlet",
        "America/Inuvik",
        "America/Whitehorse",
        "America/Swift_Current",
        "America/Edmonton",
        "America/Coral_Harbour"
      ],
      "cc": [
        "Indian/Cocos"
      ],
      "cd": [
        "Africa/Lubumbashi",
        "Africa/Kinshasa"
      ],
      "cf": [
        "Africa/Bangui"
      ],
      "cg": [
        "Africa/Brazzaville"
      ],
      "ch": [
        "Europe/Zurich"
      ],
      "ci": [
        "Africa/Abidjan"
      ],
      "ck": [
        "Pacific/Rarotonga"
      ],
      "cl": [
        "Pacific/Easter",
        "America/Punta_Arenas",
        "America/Santiago"
      ],
      "cm": [
        "Africa/Douala"
      ],
      "cn": [
        "Asia/Shanghai",
        "Asia/Shanghai",
        "Asia/Urumqi",
        "Asia/Shanghai",
        "Asia/Urumqi"
      ],
      "co": [
        "America/Bogota"
      ],
      "cr": [
        "America/Costa_Rica"
      ],
      "cs": [
        "America/Chicago"
      ],
      "cu": [
        "America/Havana"
      ],
      "cv": [
        "Atlantic/Cape_Verde"
      ],
      "cx": [
        "Indian/Christmas"
      ],
      "cy": [
        "Asia/Famagusta",
        "Asia/Nicosia"
      ],
      "cz": [
        "Europe/Prague"
      ],
      "de": [
        "Europe/Berlin",
        "Europe/Busingen"
      ],
      "dj": [
        "Africa/Djibouti"
      ],
      "dk": [
        "Europe/Copenhagen"
      ],
      "dm": [
        "America/Dominica"
      ],
      "do": [
        "America/Santo_Domingo"
      ],
      "dz": [
        "Africa/Algiers"
      ],
      "ec": [
        "Pacific/Galapagos",
        "America/Guayaquil"
      ],
      "ee": [
        "Europe/Tallinn"
      ],
      "eg": [
        "Africa/Cairo"
      ],
      "eh": [
        "Africa/El_Aaiun"
      ],
      "er": [
        "Africa/Asmera"
      ],
      "es": [
        "Africa/Ceuta",
        "Atlantic/Canary",
        "Europe/Madrid",
        "America/New_York"
      ],
      "et": [
        "Africa/Addis_Ababa"
      ],
      "fi": [
        "Europe/Helsinki",
        "Europe/Mariehamn"
      ],
      "fj": [
        "Pacific/Fiji"
      ],
      "fk": [
        "Atlantic/Stanley"
      ],
      "fm": [
        "Pacific/Kosrae",
        "Pacific/Ponape",
        "Pacific/Truk"
      ],
      "fo": [
        "Atlantic/Faeroe"
      ],
      "fr": [
        "Europe/Paris"
      ],
      "ga": [
        "Africa/Libreville",
        "Asia/Gaza",
        "Asia/Gaza"
      ],
      "gb": [
        "Europe/London"
      ],
      "gd": [
        "America/Grenada"
      ],
      "ge": [
        "Asia/Tbilisi"
      ],
      "gf": [
        "America/Cayenne"
      ],
      "gg": [
        "Europe/Guernsey"
      ],
      "gh": [
        "Africa/Accra"
      ],
      "gi": [
        "Europe/Gibraltar"
      ],
      "gl": [
        "America/Danmarkshavn",
        "America/Godthab",
        "America/Scoresbysund",
        "America/Thule"
      ],
      "gm": [
        "Africa/Banjul",
        "Etc/GMT"
      ],
      "gn": [
        "Africa/Conakry"
      ],
      "gp": [
        "America/Guadeloupe",
        "America/Marigot",
        "America/St_Barthelemy"
      ],
      "gq": [
        "Africa/Malabo"
      ],
      "gr": [
        "Europe/Athens"
      ],
      "gs": [
        "Atlantic/South_Georgia"
      ],
      "gt": [
        "America/Guatemala"
      ],
      "gu": [
        "Pacific/Guam"
      ],
      "gw": [
        "Africa/Bissau"
      ],
      "gy": [
        "America/Guyana"
      ],
      "he": [
        "Asia/Hebron"
      ],
      "hk": [
        "Asia/Hong_Kong"
      ],
      "hn": [
        "America/Tegucigalpa"
      ],
      "hr": [
        "Europe/Zagreb"
      ],
      "ht": [
        "America/Port-au-Prince"
      ],
      "hu": [
        "Europe/Budapest"
      ],
      "id": [
        "Asia/Jayapura",
        "Asia/Jakarta",
        "Asia/Makassar",
        "Asia/Pontianak"
      ],
      "ie": [
        "Europe/Dublin"
      ],
      "im": [
        "Europe/Isle_of_Man"
      ],
      "in": [
        "Asia/Calcutta"
      ],
      "io": [
        "Indian/Chagos"
      ],
      "iq": [
        "Asia/Baghdad"
      ],
      "ir": [
        "Asia/Tehran"
      ],
      "is": [
        "Atlantic/Reykjavik"
      ],
      "it": [
        "Europe/Rome"
      ],
      "je": [
        "Asia/Jerusalem",
        "Europe/Jersey"
      ],
      "jm": [
        "America/Jamaica"
      ],
      "jo": [
        "Asia/Amman"
      ],
      "jp": [
        "Asia/Tokyo"
      ],
      "ke": [
        "Africa/Nairobi"
      ],
      "kg": [
        "Asia/Bishkek"
      ],
      "kh": [
        "Asia/Phnom_Penh"
      ],
      "ki": [
        "Pacific/Kiritimati",
        "Pacific/Enderbury",
        "Pacific/Tarawa"
      ],
      "km": [
        "Indian/Comoro"
      ],
      "kn": [
        "America/St_Kitts"
      ],
      "kp": [
        "Asia/Pyongyang"
      ],
      "kr": [
        "Asia/Seoul"
      ],
      "kw": [
        "Asia/Kuwait"
      ],
      "ky": [
        "America/Cayman"
      ],
      "kz": [
        "Asia/Aqtau",
        "Asia/Aqtobe",
        "Asia/Almaty",
        "Asia/Atyrau",
        "Asia/Qostanay",
        "Asia/Qyzylorda",
        "Asia/Oral"
      ],
      "la": [
        "Asia/Vientiane"
      ],
      "lb": [
        "Asia/Beirut"
      ],
      "lc": [
        "America/St_Lucia"
      ],
      "li": [
        "Europe/Vaduz"
      ],
      "lk": [
        "Asia/Colombo"
      ],
      "lr": [
        "Africa/Monrovia"
      ],
      "ls": [
        "Africa/Maseru"
      ],
      "lt": [
        "Europe/Vilnius"
      ],
      "lu": [
        "Europe/Luxembourg"
      ],
      "lv": [
        "Europe/Riga"
      ],
      "ly": [
        "Africa/Tripoli"
      ],
      "ma": [
        "Africa/Casablanca"
      ],
      "mc": [
        "Europe/Monaco"
      ],
      "md": [
        "Europe/Chisinau"
      ],
      "me": [
        "Europe/Podgorica"
      ],
      "mg": [
        "Indian/Antananarivo"
      ],
      "mh": [
        "Pacific/Kwajalein",
        "Pacific/Majuro"
      ],
      "mk": [
        "Europe/Skopje"
      ],
      "ml": [
        "Africa/Bamako"
      ],
      "mm": [
        "Asia/Rangoon"
      ],
      "mn": [
        "Asia/Ulaanbaatar",
        "Asia/Hovd",
        "Asia/Ulaanbaatar"
      ],
      "mo": [
        "Asia/Macau"
      ],
      "mp": [
        "Pacific/Saipan"
      ],
      "mq": [
        "America/Martinique"
      ],
      "mr": [
        "Africa/Nouakchott"
      ],
      "ms": [
        "America/Montserrat",
        "America/Denver"
      ],
      "mt": [
        "Europe/Malta"
      ],
      "mu": [
        "Indian/Mauritius"
      ],
      "mv": [
        "Indian/Maldives"
      ],
      "mw": [
        "Africa/Blantyre"
      ],
      "mx": [
        "America/Chihuahua",
        "America/Ciudad_Juarez",
        "America/Cancun",
        "America/Hermosillo",
        "America/Matamoros",
        "America/Mexico_City",
        "America/Merida",
        "America/Monterrey",
        "America/Mazatlan",
        "America/Ojinaga",
        "America/Bahia_Banderas",
        "America/Tijuana",
        "America/Tijuana"
      ],
      "my": [
        "Asia/Kuching",
        "Asia/Kuala_Lumpur"
      ],
      "mz": [
        "Africa/Maputo"
      ],
      "na": [
        "Africa/Windhoek"
      ],
      "nc": [
        "Pacific/Noumea"
      ],
      "ne": [
        "Africa/Niamey"
      ],
      "nf": [
        "Pacific/Norfolk"
      ],
      "ng": [
        "Africa/Lagos"
      ],
      "ni": [
        "America/Managua"
      ],
      "nl": [
        "Europe/Amsterdam"
      ],
      "no": [
        "Europe/Oslo"
      ],
      "np": [
        "Asia/Katmandu"
      ],
      "nr": [
        "Pacific/Nauru"
      ],
      "nu": [
        "Pacific/Niue"
      ],
      "nz": [
        "Pacific/Auckland",
        "Pacific/Chatham"
      ],
      "om": [
        "Asia/Muscat"
      ],
      "pa": [
        "America/Panama"
      ],
      "pe": [
        "America/Lima"
      ],
      "pf": [
        "Pacific/Gambier",
        "Pacific/Marquesas",
        "Pacific/Tahiti"
      ],
      "pg": [
        "Pacific/Port_Moresby",
        "Pacific/Bougainville"
      ],
      "ph": [
        "Asia/Manila"
      ],
      "pk": [
        "Asia/Karachi"
      ],
      "pl": [
        "Europe/Warsaw"
      ],
      "pm": [
        "America/Miquelon"
      ],
      "pn": [
        "Pacific/Pitcairn"
      ],
      "pr": [
        "America/Puerto_Rico"
      ],
      "ps": [
        "America/Los_Angeles"
      ],
      "pt": [
        "Atlantic/Madeira",
        "Europe/Lisbon",
        "Atlantic/Azores"
      ],
      "pw": [
        "Pacific/Palau"
      ],
      "py": [
        "America/Asuncion"
      ],
      "qa": [
        "Asia/Qatar"
      ],
      "re": [
        "Indian/Reunion"
      ],
      "ro": [
        "Europe/Bucharest"
      ],
      "rs": [
        "Europe/Belgrade"
      ],
      "ru": [
        "Europe/Astrakhan",
        "Asia/Barnaul",
        "Asia/Chita",
        "Asia/Anadyr",
        "Asia/Magadan",
        "Asia/Irkutsk",
        "Europe/Kaliningrad",
        "Asia/Khandyga",
        "Asia/Krasnoyarsk",
        "Europe/Samara",
        "Europe/Kirov",
        "Europe/Moscow",
        "Asia/Novokuznetsk",
        "Asia/Omsk",
        "Asia/Novosibirsk",
        "Asia/Kamchatka",
        "Europe/Saratov",
        "Asia/Srednekolymsk",
        "Asia/Tomsk",
        "Europe/Ulyanovsk",
        "Asia/Ust-Nera",
        "Asia/Sakhalin",
        "Europe/Volgograd",
        "Asia/Vladivostok",
        "Asia/Yekaterinburg",
        "Asia/Yakutsk"
      ],
      "rw": [
        "Africa/Kigali"
      ],
      "sa": [
        "Asia/Riyadh"
      ],
      "sb": [
        "Pacific/Guadalcanal"
      ],
      "sc": [
        "Indian/Mahe"
      ],
      "sd": [
        "Africa/Khartoum"
      ],
      "se": [
        "Europe/Stockholm"
      ],
      "sg": [
        "Asia/Singapore"
      ],
      "sh": [
        "Atlantic/St_Helena"
      ],
      "si": [
        "Europe/Ljubljana"
      ],
      "sj": [
        "Arctic/Longyearbyen"
      ],
      "sk": [
        "Europe/Bratislava"
      ],
      "sl": [
        "Africa/Freetown"
      ],
      "sm": [
        "Europe/San_Marino"
      ],
      "sn": [
        "Africa/Dakar"
      ],
      "so": [
        "Africa/Mogadishu"
      ],
      "sr": [
        "America/Paramaribo"
      ],
      "ss": [
        "Africa/Juba"
      ],
      "st": [
        "Africa/Sao_Tome"
      ],
      "sv": [
        "America/El_Salvador"
      ],
      "sx": [
        "America/Lower_Princes"
      ],
      "sy": [
        "Asia/Damascus"
      ],
      "sz": [
        "Africa/Mbabane"
      ],
      "tc": [
        "America/Grand_Turk"
      ],
      "td": [
        "Africa/Ndjamena"
      ],
      "tf": [
        "Indian/Kerguelen"
      ],
      "tg": [
        "Africa/Lome"
      ],
      "th": [
        "Asia/Bangkok"
      ],
      "tj": [
        "Asia/Dushanbe"
      ],
      "tk": [
        "Pacific/Fakaofo"
      ],
      "tl": [
        "Asia/Dili"
      ],
      "tm": [
        "Asia/Ashgabat"
      ],
      "tn": [
        "Africa/Tunis"
      ],
      "to": [
        "Pacific/Tongatapu"
      ],
      "tr": [
        "Europe/Istanbul"
      ],
      "tt": [
        "America/Port_of_Spain"
      ],
      "tv": [
        "Pacific/Funafuti"
      ],
      "tw": [
        "Asia/Taipei"
      ],
      "tz": [
        "Africa/Dar_es_Salaam"
      ],
      "ua": [
        "Europe/Kiev",
        "Europe/Kiev",
        "Europe/Simferopol",
        "Europe/Kiev"
      ],
      "ug": [
        "Africa/Kampala"
      ],
      "um": [
        "Pacific/Wake",
        "Pacific/Honolulu",
        "Pacific/Midway"
      ],
      "un": [
        "Etc/Unknown"
      ],
      "us": [
        "America/Adak",
        "America/Indiana/Marengo",
        "America/Anchorage",
        "America/Boise",
        "America/Chicago",
        "America/Denver",
        "America/Detroit",
        "Pacific/Honolulu",
        "America/Indianapolis",
        "America/Indiana/Vevay",
        "America/Juneau",
        "America/Indiana/Knox",
        "America/Los_Angeles",
        "America/Louisville",
        "America/Menominee",
        "America/Kentucky/Monticello",
        "America/Metlakatla",
        "America/Denver",
        "America/North_Dakota/Center",
        "America/North_Dakota/New_Salem",
        "America/New_York",
        "America/Indiana/Vincennes",
        "America/Nome",
        "America/Phoenix",
        "America/Sitka",
        "America/Indiana/Tell_City",
        "America/Indiana/Winamac",
        "America/Indiana/Petersburg",
        "America/North_Dakota/Beulah",
        "America/Yakutat"
      ],
      "ut": [
        "Etc/UTC",
        "Etc/GMT-1",
        "Etc/GMT-2",
        "Etc/GMT-3",
        "Etc/GMT-4",
        "Etc/GMT-5",
        "Etc/GMT-6",
        "Etc/GMT-7",
        "Etc/GMT-8",
        "Etc/GMT-9",
        "Etc/GMT-10",
        "Etc/GMT-11",
        "Etc/GMT-12",
        "Etc/GMT-13",
        "Etc/GMT-14",
        "Etc/GMT+1",
        "Etc/GMT+2",
        "Etc/GMT+3",
        "Etc/GMT+4",
        "Etc/GMT+5",
        "Etc/GMT+6",
        "Etc/GMT+7",
        "Etc/GMT+8",
        "Etc/GMT+9",
        "Etc/GMT+10",
        "Etc/GMT+11",
        "Etc/GMT+12"
      ],
      "uy": [
        "America/Montevideo"
      ],
      "uz": [
        "Asia/Samarkand",
        "Asia/Tashkent"
      ],
      "va": [
        "Europe/Vatican"
      ],
      "vc": [
        "America/St_Vincent"
      ],
      "ve": [
        "America/Caracas"
      ],
      "vg": [
        "America/Tortola"
      ],
      "vi": [
        "America/St_Thomas"
      ],
      "vn": [
        "Asia/Saigon"
      ],
      "vu": [
        "Pacific/Efate"
      ],
      "wf": [
        "Pacific/Wallis"
      ],
      "ws": [
        "Pacific/Apia"
      ],
      "ye": [
        "Asia/Aden"
      ],
      "yt": [
        "Indian/Mayotte"
      ],
      "za": [
        "Africa/Johannesburg"
      ],
      "zm": [
        "Africa/Lusaka"
      ],
      "zw": [
        "Africa/Harare"
      ]
    };
    return timezones_generated;
  }
  var hourCycles_generated = {};
  var hasRequiredHourCycles_generated;
  function requireHourCycles_generated() {
    if (hasRequiredHourCycles_generated) return hourCycles_generated;
    hasRequiredHourCycles_generated = 1;
    Object.defineProperty(hourCycles_generated, "__esModule", { value: true });
    hourCycles_generated.hourCycles = void 0;
    hourCycles_generated.hourCycles = {
      "001": [
        "h23",
        "h12"
      ],
      "419": [
        "h12",
        "h23"
      ],
      "AC": [
        "h23",
        "h12"
      ],
      "AD": [
        "h23"
      ],
      "AE": [
        "h12",
        "h23"
      ],
      "AF": [
        "h23",
        "h12"
      ],
      "AG": [
        "h12",
        "h23"
      ],
      "AI": [
        "h23",
        "h12"
      ],
      "AL": [
        "h12",
        "h23"
      ],
      "AM": [
        "h23"
      ],
      "AO": [
        "h23"
      ],
      "AR": [
        "h12",
        "h23"
      ],
      "AS": [
        "h12",
        "h23"
      ],
      "AT": [
        "h23"
      ],
      "AU": [
        "h12",
        "h23"
      ],
      "AW": [
        "h23"
      ],
      "AX": [
        "h23"
      ],
      "AZ": [
        "h23",
        "h12"
      ],
      "BA": [
        "h23",
        "h12"
      ],
      "BB": [
        "h12",
        "h23"
      ],
      "BD": [
        "h12",
        "h23"
      ],
      "BE": [
        "h23"
      ],
      "BF": [
        "h23"
      ],
      "BG": [
        "h23",
        "h12"
      ],
      "BH": [
        "h12",
        "h23"
      ],
      "BI": [
        "h23",
        "h12"
      ],
      "BJ": [
        "h23"
      ],
      "BL": [
        "h23"
      ],
      "BM": [
        "h12",
        "h23"
      ],
      "BN": [
        "h12",
        "h23"
      ],
      "BO": [
        "h12",
        "h23"
      ],
      "BQ": [
        "h23"
      ],
      "BR": [
        "h23"
      ],
      "BS": [
        "h12",
        "h23"
      ],
      "BT": [
        "h12",
        "h23"
      ],
      "BW": [
        "h23",
        "h12"
      ],
      "BY": [
        "h23",
        "h12"
      ],
      "BZ": [
        "h23",
        "h12"
      ],
      "CA": [
        "h12",
        "h23"
      ],
      "CC": [
        "h23",
        "h12"
      ],
      "CD": [
        "h23"
      ],
      "CF": [
        "h23",
        "h12"
      ],
      "CG": [
        "h23"
      ],
      "CH": [
        "h23",
        "h12"
      ],
      "CI": [
        "h23"
      ],
      "CK": [
        "h23",
        "h12"
      ],
      "CL": [
        "h12",
        "h23"
      ],
      "CM": [
        "h23",
        "h12"
      ],
      "CN": [
        "h23",
        "h12"
      ],
      "CO": [
        "h12",
        "h23"
      ],
      "CP": [
        "h23"
      ],
      "CR": [
        "h12",
        "h23"
      ],
      "CU": [
        "h12",
        "h23"
      ],
      "CV": [
        "h23"
      ],
      "CW": [
        "h23"
      ],
      "CX": [
        "h23",
        "h12"
      ],
      "CY": [
        "h12",
        "h23"
      ],
      "CZ": [
        "h23"
      ],
      "DE": [
        "h23"
      ],
      "DG": [
        "h23",
        "h12"
      ],
      "DJ": [
        "h12",
        "h23"
      ],
      "DK": [
        "h23"
      ],
      "DM": [
        "h12",
        "h23"
      ],
      "DO": [
        "h12",
        "h23"
      ],
      "DZ": [
        "h12",
        "h23"
      ],
      "EA": [
        "h23",
        "h12"
      ],
      "EC": [
        "h12",
        "h23"
      ],
      "EE": [
        "h23"
      ],
      "EG": [
        "h12",
        "h23"
      ],
      "EH": [
        "h12",
        "h23"
      ],
      "ER": [
        "h12",
        "h23"
      ],
      "ES": [
        "h23",
        "h12"
      ],
      "ET": [
        "h12",
        "h23"
      ],
      "FI": [
        "h23"
      ],
      "FJ": [
        "h12",
        "h23"
      ],
      "FK": [
        "h23",
        "h12"
      ],
      "FM": [
        "h12",
        "h23"
      ],
      "FO": [
        "h23",
        "h12"
      ],
      "FR": [
        "h23"
      ],
      "GA": [
        "h23"
      ],
      "GB": [
        "h23",
        "h12"
      ],
      "GD": [
        "h12",
        "h23"
      ],
      "GE": [
        "h23",
        "h12"
      ],
      "GF": [
        "h23"
      ],
      "GG": [
        "h23",
        "h12"
      ],
      "GH": [
        "h12",
        "h23"
      ],
      "GI": [
        "h23",
        "h12"
      ],
      "GL": [
        "h23",
        "h12"
      ],
      "GM": [
        "h12",
        "h23"
      ],
      "GN": [
        "h23"
      ],
      "GP": [
        "h23"
      ],
      "GQ": [
        "h23",
        "h12"
      ],
      "GR": [
        "h12",
        "h23"
      ],
      "GT": [
        "h12",
        "h23"
      ],
      "GU": [
        "h12",
        "h23"
      ],
      "GW": [
        "h23"
      ],
      "GY": [
        "h12",
        "h23"
      ],
      "HK": [
        "h12",
        "h23"
      ],
      "HN": [
        "h12",
        "h23"
      ],
      "HR": [
        "h23"
      ],
      "HU": [
        "h23",
        "h12"
      ],
      "IC": [
        "h23",
        "h12"
      ],
      "ID": [
        "h23"
      ],
      "IE": [
        "h23",
        "h12"
      ],
      "IL": [
        "h23"
      ],
      "IM": [
        "h23",
        "h12"
      ],
      "IN": [
        "h12",
        "h23"
      ],
      "IO": [
        "h23",
        "h12"
      ],
      "IQ": [
        "h12",
        "h23"
      ],
      "IR": [
        "h23"
      ],
      "IS": [
        "h23"
      ],
      "IT": [
        "h23"
      ],
      "JE": [
        "h23",
        "h12"
      ],
      "JM": [
        "h12",
        "h23"
      ],
      "JO": [
        "h12",
        "h23"
      ],
      "JP": [
        "h23",
        "h11",
        "h12"
      ],
      "KE": [
        "h23",
        "h12"
      ],
      "KG": [
        "h23",
        "h12"
      ],
      "KH": [
        "h12",
        "h23"
      ],
      "KI": [
        "h12",
        "h23"
      ],
      "KM": [
        "h23",
        "h12"
      ],
      "KN": [
        "h12",
        "h23"
      ],
      "KP": [
        "h12",
        "h23"
      ],
      "KR": [
        "h12",
        "h23"
      ],
      "KW": [
        "h12",
        "h23"
      ],
      "KY": [
        "h12",
        "h23"
      ],
      "KZ": [
        "h23"
      ],
      "LA": [
        "h23",
        "h12"
      ],
      "LB": [
        "h12",
        "h23"
      ],
      "LC": [
        "h12",
        "h23"
      ],
      "LI": [
        "h23",
        "h12"
      ],
      "LK": [
        "h23",
        "h12"
      ],
      "LR": [
        "h12",
        "h23"
      ],
      "LS": [
        "h12",
        "h23"
      ],
      "LT": [
        "h23",
        "h12"
      ],
      "LU": [
        "h23",
        "h12"
      ],
      "LV": [
        "h23",
        "h12"
      ],
      "LY": [
        "h12",
        "h23"
      ],
      "MA": [
        "h23",
        "h12"
      ],
      "MC": [
        "h23"
      ],
      "MD": [
        "h23"
      ],
      "ME": [
        "h23",
        "h12"
      ],
      "MF": [
        "h23"
      ],
      "MG": [
        "h23",
        "h12"
      ],
      "MH": [
        "h12",
        "h23"
      ],
      "MK": [
        "h23",
        "h12"
      ],
      "ML": [
        "h23"
      ],
      "MM": [
        "h23",
        "h12"
      ],
      "MN": [
        "h23",
        "h12"
      ],
      "MO": [
        "h12",
        "h23"
      ],
      "MP": [
        "h12",
        "h23"
      ],
      "MQ": [
        "h23"
      ],
      "MR": [
        "h12",
        "h23"
      ],
      "MS": [
        "h23",
        "h12"
      ],
      "MT": [
        "h23",
        "h12"
      ],
      "MU": [
        "h23",
        "h12"
      ],
      "MV": [
        "h23",
        "h12"
      ],
      "MW": [
        "h12",
        "h23"
      ],
      "MX": [
        "h12",
        "h23"
      ],
      "MY": [
        "h12",
        "h23"
      ],
      "MZ": [
        "h23"
      ],
      "NA": [
        "h12",
        "h23"
      ],
      "NC": [
        "h23"
      ],
      "NE": [
        "h23"
      ],
      "NF": [
        "h23",
        "h12"
      ],
      "NG": [
        "h23",
        "h12"
      ],
      "NI": [
        "h12",
        "h23"
      ],
      "NL": [
        "h23"
      ],
      "NO": [
        "h23",
        "h12"
      ],
      "NP": [
        "h23",
        "h12"
      ],
      "NR": [
        "h23",
        "h12"
      ],
      "NU": [
        "h23",
        "h12"
      ],
      "NZ": [
        "h12",
        "h23"
      ],
      "OM": [
        "h12",
        "h23"
      ],
      "PA": [
        "h12",
        "h23"
      ],
      "PE": [
        "h12",
        "h23"
      ],
      "PF": [
        "h23",
        "h12"
      ],
      "PG": [
        "h12",
        "h23"
      ],
      "PH": [
        "h12",
        "h23"
      ],
      "PK": [
        "h12",
        "h23"
      ],
      "PL": [
        "h23",
        "h12"
      ],
      "PM": [
        "h23"
      ],
      "PN": [
        "h23",
        "h12"
      ],
      "PR": [
        "h12",
        "h23"
      ],
      "PS": [
        "h12",
        "h23"
      ],
      "PT": [
        "h23"
      ],
      "PW": [
        "h12",
        "h23"
      ],
      "PY": [
        "h12",
        "h23"
      ],
      "QA": [
        "h12",
        "h23"
      ],
      "RE": [
        "h23"
      ],
      "RO": [
        "h23"
      ],
      "RS": [
        "h23",
        "h12"
      ],
      "RU": [
        "h23"
      ],
      "RW": [
        "h23",
        "h12"
      ],
      "SA": [
        "h12",
        "h23"
      ],
      "SB": [
        "h12",
        "h23"
      ],
      "SC": [
        "h23",
        "h12"
      ],
      "SD": [
        "h12",
        "h23"
      ],
      "SE": [
        "h23"
      ],
      "SG": [
        "h12",
        "h23"
      ],
      "SH": [
        "h23",
        "h12"
      ],
      "SI": [
        "h23"
      ],
      "SJ": [
        "h23"
      ],
      "SK": [
        "h23"
      ],
      "SL": [
        "h12",
        "h23"
      ],
      "SM": [
        "h23",
        "h12"
      ],
      "SN": [
        "h23",
        "h12"
      ],
      "SO": [
        "h12",
        "h23"
      ],
      "SR": [
        "h23"
      ],
      "SS": [
        "h12",
        "h23"
      ],
      "ST": [
        "h23"
      ],
      "SV": [
        "h12",
        "h23"
      ],
      "SX": [
        "h23",
        "h12"
      ],
      "SY": [
        "h12",
        "h23"
      ],
      "SZ": [
        "h12",
        "h23"
      ],
      "TA": [
        "h23",
        "h12"
      ],
      "TC": [
        "h12",
        "h23"
      ],
      "TD": [
        "h12",
        "h23"
      ],
      "TF": [
        "h23",
        "h12"
      ],
      "TG": [
        "h23"
      ],
      "TH": [
        "h23",
        "h12"
      ],
      "TJ": [
        "h23",
        "h12"
      ],
      "TL": [
        "h23",
        "h12"
      ],
      "TM": [
        "h23",
        "h12"
      ],
      "TN": [
        "h12",
        "h23"
      ],
      "TO": [
        "h12",
        "h23"
      ],
      "TR": [
        "h23"
      ],
      "TT": [
        "h12",
        "h23"
      ],
      "TW": [
        "h12",
        "h23"
      ],
      "TZ": [
        "h23",
        "h12"
      ],
      "UA": [
        "h23",
        "h12"
      ],
      "UG": [
        "h23",
        "h12"
      ],
      "UM": [
        "h12",
        "h23"
      ],
      "US": [
        "h12",
        "h23"
      ],
      "UY": [
        "h12",
        "h23"
      ],
      "UZ": [
        "h23",
        "h12"
      ],
      "VA": [
        "h23",
        "h12"
      ],
      "VC": [
        "h12",
        "h23"
      ],
      "VE": [
        "h12",
        "h23"
      ],
      "VG": [
        "h12",
        "h23"
      ],
      "VI": [
        "h12",
        "h23"
      ],
      "VN": [
        "h23",
        "h12"
      ],
      "VU": [
        "h12",
        "h23"
      ],
      "WF": [
        "h23"
      ],
      "WS": [
        "h12",
        "h23"
      ],
      "XK": [
        "h23",
        "h12"
      ],
      "YE": [
        "h12",
        "h23"
      ],
      "YT": [
        "h23"
      ],
      "ZA": [
        "h23",
        "h12"
      ],
      "ZM": [
        "h12",
        "h23"
      ],
      "ZW": [
        "h23",
        "h12"
      ],
      "af-ZA": [
        "h23",
        "h12"
      ],
      "ar-001": [
        "h12",
        "h23"
      ],
      "ca-ES": [
        "h23",
        "h12"
      ],
      "en-001": [
        "h12",
        "h23"
      ],
      "en-HK": [
        "h12",
        "h23"
      ],
      "en-IL": [
        "h23",
        "h12"
      ],
      "en-MY": [
        "h12",
        "h23"
      ],
      "es-BR": [
        "h23",
        "h12"
      ],
      "es-ES": [
        "h23",
        "h12"
      ],
      "es-GQ": [
        "h23",
        "h12"
      ],
      "fr-CA": [
        "h23",
        "h12"
      ],
      "gl-ES": [
        "h23",
        "h12"
      ],
      "gu-IN": [
        "h12",
        "h23"
      ],
      "hi-IN": [
        "h12",
        "h23"
      ],
      "it-CH": [
        "h23",
        "h12"
      ],
      "it-IT": [
        "h23",
        "h12"
      ],
      "kn-IN": [
        "h12",
        "h23"
      ],
      "ml-IN": [
        "h12",
        "h23"
      ],
      "mr-IN": [
        "h12",
        "h23"
      ],
      "pa-IN": [
        "h12",
        "h23"
      ],
      "ta-IN": [
        "h12",
        "h23"
      ],
      "te-IN": [
        "h12",
        "h23"
      ],
      "zu-ZA": [
        "h23",
        "h12"
      ]
    };
    return hourCycles_generated;
  }
  var calendars_generated = {};
  var hasRequiredCalendars_generated;
  function requireCalendars_generated() {
    if (hasRequiredCalendars_generated) return calendars_generated;
    hasRequiredCalendars_generated = 1;
    Object.defineProperty(calendars_generated, "__esModule", { value: true });
    calendars_generated.calendars = void 0;
    calendars_generated.calendars = {
      "001": [
        "gregorian"
      ],
      "AE": [
        "gregorian",
        "islamic-umalqura",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "AF": [
        "persian",
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "AL": [
        "gregorian",
        "islamic-civil",
        "islamic-tbla"
      ],
      "AZ": [
        "gregorian",
        "islamic-civil",
        "islamic-tbla"
      ],
      "BD": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "BH": [
        "gregorian",
        "islamic-umalqura",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "CN": [
        "gregorian",
        "chinese"
      ],
      "CX": [
        "gregorian",
        "chinese"
      ],
      "DJ": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "DZ": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "EG": [
        "gregorian",
        "coptic",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "EH": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "ER": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "ET": [
        "gregorian",
        "ethiopic"
      ],
      "HK": [
        "gregorian",
        "chinese"
      ],
      "ID": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "IL": [
        "gregorian",
        "hebrew",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "IN": [
        "gregorian",
        "indian"
      ],
      "IQ": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "IR": [
        "persian",
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "JO": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "JP": [
        "gregorian",
        "japanese"
      ],
      "KM": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "KR": [
        "gregorian",
        "dangi"
      ],
      "KW": [
        "gregorian",
        "islamic-umalqura",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "LB": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "LY": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "MA": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "MO": [
        "gregorian",
        "chinese"
      ],
      "MR": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "MV": [
        "gregorian",
        "islamic-civil",
        "islamic-tbla"
      ],
      "MY": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "NE": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "OM": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "PK": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "PS": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "QA": [
        "gregorian",
        "islamic-umalqura",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "SA": [
        "gregorian",
        "islamic-umalqura",
        "islamic",
        "islamic-rgsa"
      ],
      "SD": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "SG": [
        "gregorian",
        "chinese"
      ],
      "SY": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "TD": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "TH": [
        "buddhist",
        "gregorian"
      ],
      "TJ": [
        "gregorian",
        "islamic-civil",
        "islamic-tbla"
      ],
      "TM": [
        "gregorian",
        "islamic-civil",
        "islamic-tbla"
      ],
      "TN": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ],
      "TR": [
        "gregorian",
        "islamic-civil",
        "islamic-tbla"
      ],
      "TW": [
        "gregorian",
        "roc",
        "chinese"
      ],
      "UZ": [
        "gregorian",
        "islamic-civil",
        "islamic-tbla"
      ],
      "XK": [
        "gregorian",
        "islamic-civil",
        "islamic-tbla"
      ],
      "YE": [
        "gregorian",
        "islamic",
        "islamic-civil",
        "islamic-tbla"
      ]
    };
    return calendars_generated;
  }
  var weekData_generated = {};
  var hasRequiredWeekData_generated;
  function requireWeekData_generated() {
    if (hasRequiredWeekData_generated) return weekData_generated;
    hasRequiredWeekData_generated = 1;
    Object.defineProperty(weekData_generated, "__esModule", { value: true });
    weekData_generated.weekData = void 0;
    weekData_generated.weekData = {
      "001": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "AC": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "AD": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "AE": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "AF": {
        "firstDay": 6,
        "minimalDays": 1,
        "weekend": [
          4,
          5
        ]
      },
      "AG": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "AI": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "AL": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "AM": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "AO": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "AQ": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "AR": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "AS": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "AT": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "AU": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "AW": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "AX": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "AZ": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BA": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BB": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BD": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BE": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "BF": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BG": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "BH": {
        "firstDay": 6,
        "minimalDays": 1,
        "weekend": [
          5,
          6
        ]
      },
      "BI": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BJ": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BL": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BM": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BN": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BO": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BQ": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BR": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BS": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BT": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BV": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BW": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BY": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "BZ": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CA": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CC": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CD": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CF": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CG": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CH": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "CI": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CK": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CL": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CM": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CN": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CO": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CP": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CQ": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CR": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CU": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CV": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CW": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CX": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CY": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "CZ": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "DE": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "DG": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "DJ": {
        "firstDay": 6,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "DK": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "DM": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "DO": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "DZ": {
        "firstDay": 6,
        "minimalDays": 1,
        "weekend": [
          5,
          6
        ]
      },
      "EA": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "EC": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "EE": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "EG": {
        "firstDay": 6,
        "minimalDays": 1,
        "weekend": [
          5,
          6
        ]
      },
      "EH": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "ER": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "ES": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "ET": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "FI": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "FJ": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "FK": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "FM": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "FO": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "FR": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "GA": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "GB": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "GD": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "GE": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "GF": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "GG": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "GH": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "GI": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "GL": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "GM": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "GN": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "GP": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "GQ": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "GR": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "GS": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "GT": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "GU": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "GW": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "GY": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "HK": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "HM": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "HN": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "HR": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "HT": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "HU": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "IC": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "ID": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "IE": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "IL": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          5,
          6
        ]
      },
      "IM": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "IN": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          7
        ]
      },
      "IO": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "IQ": {
        "firstDay": 6,
        "minimalDays": 1,
        "weekend": [
          5,
          6
        ]
      },
      "IR": {
        "firstDay": 6,
        "minimalDays": 1,
        "weekend": [
          5
        ]
      },
      "IS": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "IT": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "JE": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "JM": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "JO": {
        "firstDay": 6,
        "minimalDays": 1,
        "weekend": [
          5,
          6
        ]
      },
      "JP": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "KE": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "KG": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "KH": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "KI": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "KM": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "KN": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "KP": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "KR": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "KW": {
        "firstDay": 6,
        "minimalDays": 1,
        "weekend": [
          5,
          6
        ]
      },
      "KY": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "KZ": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "LA": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "LB": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "LC": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "LI": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "LK": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "LR": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "LS": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "LT": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "LU": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "LV": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "LY": {
        "firstDay": 6,
        "minimalDays": 1,
        "weekend": [
          5,
          6
        ]
      },
      "MA": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MC": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "MD": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "ME": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MF": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MG": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MH": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MK": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "ML": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MM": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MN": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MO": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MP": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MQ": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "MR": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MS": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MT": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MU": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MV": {
        "firstDay": 5,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MW": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MX": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MY": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "MZ": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "NA": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "NC": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "NE": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "NF": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "NG": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "NI": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "NL": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "NO": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "NP": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "NR": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "NU": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "NZ": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "OM": {
        "firstDay": 6,
        "minimalDays": 1,
        "weekend": [
          5,
          6
        ]
      },
      "PA": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "PE": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "PF": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "PG": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "PH": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "PK": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "PL": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "PM": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "PN": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "PR": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "PS": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "PT": {
        "firstDay": 7,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "PW": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "PY": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "QA": {
        "firstDay": 6,
        "minimalDays": 1,
        "weekend": [
          5,
          6
        ]
      },
      "RE": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "RO": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "RS": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "RU": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "RW": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "SA": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          5,
          6
        ]
      },
      "SB": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "SC": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "SD": {
        "firstDay": 6,
        "minimalDays": 1,
        "weekend": [
          5,
          6
        ]
      },
      "SE": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "SG": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "SH": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "SI": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "SJ": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "SK": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "SL": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "SM": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "SN": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "SO": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "SR": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "SS": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "ST": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "SV": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "SX": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "SY": {
        "firstDay": 6,
        "minimalDays": 1,
        "weekend": [
          5,
          6
        ]
      },
      "SZ": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TA": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TC": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TD": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TF": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TG": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TH": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TJ": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TK": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TL": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TM": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TN": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TO": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TR": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TT": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TV": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TW": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "TZ": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "UA": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "UG": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          7
        ]
      },
      "UM": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "US": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "UY": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "UZ": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "VA": {
        "firstDay": 1,
        "minimalDays": 4,
        "weekend": [
          6,
          7
        ]
      },
      "VC": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "VE": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "VG": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "VI": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "VN": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "VU": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "WF": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "WS": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "XK": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "YE": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          5,
          6
        ]
      },
      "YT": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "ZA": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "ZM": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "ZW": {
        "firstDay": 7,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      },
      "ZZ": {
        "firstDay": 1,
        "minimalDays": 1,
        "weekend": [
          6,
          7
        ]
      }
    };
    return weekData_generated;
  }
  var hasRequiredPreferenceData;
  function requirePreferenceData() {
    if (hasRequiredPreferenceData) return preferenceData;
    hasRequiredPreferenceData = 1;
    Object.defineProperty(preferenceData, "__esModule", { value: true });
    preferenceData.getCalendarPreferenceDataForRegion = getCalendarPreferenceDataForRegion;
    preferenceData.getHourCyclesPreferenceDataForLocaleOrRegion = getHourCyclesPreferenceDataForLocaleOrRegion;
    preferenceData.getTimeZonePreferenceForRegion = getTimeZonePreferenceForRegion;
    preferenceData.getWeekDataForRegion = getWeekDataForRegion;
    var tslib_1 = require$$0$1;
    var timezones_generated_1 = requireTimezones_generated();
    var hour_cycles_generated_1 = requireHourCycles_generated();
    var calendars_generated_1 = requireCalendars_generated();
    var week_data_generated_1 = requireWeekData_generated();
    function getCalendarPreferenceDataForRegion(region) {
      var _region = region ? region.toUpperCase() : null;
      return (calendars_generated_1.calendars[_region || ""] || calendars_generated_1.calendars["001"]).map(function(c) {
        if (c === "gregorian") {
          return "gregory";
        }
        if (c === "islamic-civil") {
          return "islamicc";
        }
        return c;
      });
    }
    function getHourCyclesPreferenceDataForLocaleOrRegion(locale, region) {
      var _locale = locale.toLowerCase();
      var _region = region ? region.toUpperCase() : "";
      var hourCyclesPreference = hour_cycles_generated_1.hourCycles[_locale] || hour_cycles_generated_1.hourCycles[_region] || hour_cycles_generated_1.hourCycles["".concat(_locale, "-001")] || hour_cycles_generated_1.hourCycles["001"];
      return tslib_1.__spreadArray([], hourCyclesPreference, true);
    }
    function getTimeZonePreferenceForRegion(region) {
      var territory = region.toLowerCase();
      if (timezones_generated_1.timezones[territory]) {
        return tslib_1.__spreadArray([], timezones_generated_1.timezones[territory], true);
      }
      return [];
    }
    function getWeekDataForRegion(region) {
      var _region = region ? region.toUpperCase() : "";
      return week_data_generated_1.weekData[_region || "001"] || week_data_generated_1.weekData["001"];
    }
    return preferenceData;
  }
  var hasRequiredIntlLocale;
  function requireIntlLocale() {
    if (hasRequiredIntlLocale) return intlLocale;
    hasRequiredIntlLocale = 1;
    Object.defineProperty(intlLocale, "__esModule", { value: true });
    intlLocale.Locale = void 0;
    var tslib_1 = require$$0$1;
    var ecma402_abstract_1 = require$$1;
    var intl_enumerator_1 = requireIntlEnumerator();
    var intl_getcanonicallocales_1 = requireIntlGetcanonicallocales();
    var character_orders_generated_1 = requireCharacterOrders_generated();
    var get_internal_slots_1 = tslib_1.__importDefault(requireGet_internal_slots$4());
    var numbering_systems_generated_1 = requireNumberingSystems_generated$1();
    var preference_data_1 = requirePreferenceData();
    var ALPHANUM_3_8 = /^[a-z0-9]{3,8}$/i;
    var RELEVANT_EXTENSION_KEYS = [
      "ca",
      "co",
      "hc",
      "kf",
      "kn",
      "nu",
      "fw"
    ];
    var UNICODE_TYPE_REGEX = /^[a-z0-9]{3,8}(-[a-z0-9]{3,8})*$/i;
    function applyOptionsToTag(tag2, options) {
      (0, ecma402_abstract_1.invariant)(typeof tag2 === "string", "language tag must be a string");
      (0, ecma402_abstract_1.invariant)((0, intl_getcanonicallocales_1.isStructurallyValidLanguageTag)(tag2), "malformed language tag", RangeError);
      var language = (0, ecma402_abstract_1.GetOption)(options, "language", "string", void 0, void 0);
      if (language !== void 0) {
        (0, ecma402_abstract_1.invariant)((0, intl_getcanonicallocales_1.isUnicodeLanguageSubtag)(language), "Malformed unicode_language_subtag", RangeError);
      }
      var script = (0, ecma402_abstract_1.GetOption)(options, "script", "string", void 0, void 0);
      if (script !== void 0) {
        (0, ecma402_abstract_1.invariant)((0, intl_getcanonicallocales_1.isUnicodeScriptSubtag)(script), "Malformed unicode_script_subtag", RangeError);
      }
      var region = (0, ecma402_abstract_1.GetOption)(options, "region", "string", void 0, void 0);
      if (region !== void 0) {
        (0, ecma402_abstract_1.invariant)((0, intl_getcanonicallocales_1.isUnicodeRegionSubtag)(region), "Malformed unicode_region_subtag", RangeError);
      }
      var languageId = (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(tag2);
      if (language !== void 0) {
        languageId.lang = language;
      }
      if (script !== void 0) {
        languageId.script = script;
      }
      if (region !== void 0) {
        languageId.region = region;
      }
      return Intl.getCanonicalLocales((0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(tslib_1.__assign(tslib_1.__assign({}, (0, intl_getcanonicallocales_1.parseUnicodeLocaleId)(tag2)), { lang: languageId })))[0];
    }
    function applyUnicodeExtensionToTag(tag2, options, relevantExtensionKeys) {
      var unicodeExtension;
      var keywords = [];
      var ast = (0, intl_getcanonicallocales_1.parseUnicodeLocaleId)(tag2);
      for (var _i = 0, _a2 = ast.extensions; _i < _a2.length; _i++) {
        var ext = _a2[_i];
        if (ext.type === "u") {
          unicodeExtension = ext;
          if (Array.isArray(ext.keywords))
            keywords = ext.keywords;
        }
      }
      var result = /* @__PURE__ */ Object.create(null);
      for (var _b = 0, relevantExtensionKeys_1 = relevantExtensionKeys; _b < relevantExtensionKeys_1.length; _b++) {
        var key = relevantExtensionKeys_1[_b];
        var value2 = void 0, entry = void 0;
        for (var _c = 0, keywords_1 = keywords; _c < keywords_1.length; _c++) {
          var keyword = keywords_1[_c];
          if (keyword[0] === key) {
            entry = keyword;
            value2 = entry[1];
          }
        }
        (0, ecma402_abstract_1.invariant)(key in options, "".concat(key, " must be in options"));
        var optionsValue = options[key];
        if (optionsValue !== void 0) {
          (0, ecma402_abstract_1.invariant)(typeof optionsValue === "string", "Value for ".concat(key, " must be a string"));
          value2 = optionsValue;
          if (entry) {
            entry[1] = value2;
          } else {
            keywords.push([key, value2]);
          }
        }
        result[key] = value2;
      }
      if (!unicodeExtension) {
        if (keywords.length) {
          ast.extensions.push({
            type: "u",
            keywords,
            attributes: []
          });
        }
      } else {
        unicodeExtension.keywords = keywords;
      }
      result.locale = Intl.getCanonicalLocales((0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(ast))[0];
      return result;
    }
    function mergeUnicodeLanguageId(lang, script, region, variants, replacement) {
      if (variants === void 0) {
        variants = [];
      }
      if (!replacement) {
        return {
          lang: lang || "und",
          script,
          region,
          variants
        };
      }
      return {
        lang: !lang || lang === "und" ? replacement.lang : lang,
        script: script || replacement.script,
        region: region || replacement.region,
        variants: tslib_1.__spreadArray(tslib_1.__spreadArray([], variants, true), replacement.variants, true)
      };
    }
    function addLikelySubtags(tag2) {
      var ast = (0, intl_getcanonicallocales_1.parseUnicodeLocaleId)(tag2);
      var unicodeLangId = ast.lang;
      var lang = unicodeLangId.lang, script = unicodeLangId.script, region = unicodeLangId.region, variants = unicodeLangId.variants;
      if (script && region) {
        var match_1 = intl_getcanonicallocales_1.likelySubtags[(0, intl_getcanonicallocales_1.emitUnicodeLanguageId)({ lang, script, region, variants: [] })];
        if (match_1) {
          var parts_1 = (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(match_1);
          ast.lang = mergeUnicodeLanguageId(void 0, void 0, void 0, variants, parts_1);
          return (0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(ast);
        }
      }
      if (script) {
        var match_2 = intl_getcanonicallocales_1.likelySubtags[(0, intl_getcanonicallocales_1.emitUnicodeLanguageId)({ lang, script, variants: [] })];
        if (match_2) {
          var parts_2 = (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(match_2);
          ast.lang = mergeUnicodeLanguageId(void 0, void 0, region, variants, parts_2);
          return (0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(ast);
        }
      }
      if (region) {
        var match_3 = intl_getcanonicallocales_1.likelySubtags[(0, intl_getcanonicallocales_1.emitUnicodeLanguageId)({ lang, region, variants: [] })];
        if (match_3) {
          var parts_3 = (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(match_3);
          ast.lang = mergeUnicodeLanguageId(void 0, script, void 0, variants, parts_3);
          return (0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(ast);
        }
      }
      var match2 = intl_getcanonicallocales_1.likelySubtags[lang] || intl_getcanonicallocales_1.likelySubtags[(0, intl_getcanonicallocales_1.emitUnicodeLanguageId)({ lang: "und", script, variants: [] })];
      if (!match2) {
        throw new Error("No match for addLikelySubtags");
      }
      var parts = (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(match2);
      ast.lang = mergeUnicodeLanguageId(void 0, script, region, variants, parts);
      return (0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(ast);
    }
    function removeLikelySubtags(tag2) {
      var maxLocale = addLikelySubtags(tag2);
      if (!maxLocale) {
        return tag2;
      }
      maxLocale = (0, intl_getcanonicallocales_1.emitUnicodeLanguageId)(tslib_1.__assign(tslib_1.__assign({}, (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(maxLocale)), { variants: [] }));
      var ast = (0, intl_getcanonicallocales_1.parseUnicodeLocaleId)(tag2);
      var _a2 = ast.lang, lang = _a2.lang, script = _a2.script, region = _a2.region, variants = _a2.variants;
      var trial = addLikelySubtags((0, intl_getcanonicallocales_1.emitUnicodeLanguageId)({ lang, variants: [] }));
      if (trial === maxLocale) {
        return (0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(tslib_1.__assign(tslib_1.__assign({}, ast), { lang: mergeUnicodeLanguageId(lang, void 0, void 0, variants) }));
      }
      if (region) {
        var trial_1 = addLikelySubtags((0, intl_getcanonicallocales_1.emitUnicodeLanguageId)({ lang, region, variants: [] }));
        if (trial_1 === maxLocale) {
          return (0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(tslib_1.__assign(tslib_1.__assign({}, ast), { lang: mergeUnicodeLanguageId(lang, void 0, region, variants) }));
        }
      }
      if (script) {
        var trial_2 = addLikelySubtags((0, intl_getcanonicallocales_1.emitUnicodeLanguageId)({ lang, script, variants: [] }));
        if (trial_2 === maxLocale) {
          return (0, intl_getcanonicallocales_1.emitUnicodeLocaleId)(tslib_1.__assign(tslib_1.__assign({}, ast), { lang: mergeUnicodeLanguageId(lang, script, void 0, variants) }));
        }
      }
      return tag2;
    }
    function createArrayFromListOrRestricted(list, restricted) {
      var result = list;
      if (restricted !== void 0) {
        result = [restricted];
      }
      return Array.from(result);
    }
    function calendarsOfLocale(loc) {
      var locInternalSlots = (0, get_internal_slots_1.default)(loc);
      var restricted = locInternalSlots.calendar;
      var locale = locInternalSlots.locale;
      var region;
      if (locale !== "root") {
        region = loc.maximize().region;
      }
      var preferredCalendars = (0, preference_data_1.getCalendarPreferenceDataForRegion)(region);
      return createArrayFromListOrRestricted(preferredCalendars, restricted);
    }
    function collationsOfLocale(loc) {
      var locInternalSlots = (0, get_internal_slots_1.default)(loc);
      var restricted = locInternalSlots.collation;
      var locale = locInternalSlots.locale;
      var supportedCollations = (0, intl_enumerator_1.supportedValuesOf)("collation", locale).filter(function(co) {
        return co !== "standard" && co !== "search";
      });
      supportedCollations.sort();
      return createArrayFromListOrRestricted(supportedCollations, restricted);
    }
    function hourCyclesOfLocale(loc) {
      var locInternalSlots = (0, get_internal_slots_1.default)(loc);
      var restricted = locInternalSlots.hourCycle;
      var locale = locInternalSlots.locale;
      var region;
      if (locale !== "root") {
        region = loc.maximize().region;
      }
      var preferredHourCycles = (0, preference_data_1.getHourCyclesPreferenceDataForLocaleOrRegion)(locale, region);
      return createArrayFromListOrRestricted(preferredHourCycles, restricted);
    }
    function numberingSystemsOfLocale(loc) {
      var _a2;
      var locInternalSlots = (0, get_internal_slots_1.default)(loc);
      var restricted = locInternalSlots.numberingSystem;
      var locale = locInternalSlots.locale;
      var language = loc.language;
      var localeNumberingSystems = (_a2 = numbering_systems_generated_1.numberingSystems[locale]) !== null && _a2 !== void 0 ? _a2 : numbering_systems_generated_1.numberingSystems[language];
      if (localeNumberingSystems) {
        return createArrayFromListOrRestricted(tslib_1.__spreadArray([], localeNumberingSystems, true), restricted);
      }
      return createArrayFromListOrRestricted([], restricted);
    }
    function timeZonesOfLocale(loc) {
      var locInternalSlots = (0, get_internal_slots_1.default)(loc);
      var locale = locInternalSlots.locale;
      var region = (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(locale).region;
      if (!region) {
        return void 0;
      }
      var preferredTimeZones = (0, preference_data_1.getTimeZonePreferenceForRegion)(region);
      preferredTimeZones.sort();
      return Array.from(preferredTimeZones);
    }
    function translateCharacterOrder(order) {
      if (order === "right-to-left") {
        return "rtl";
      }
      return "ltr";
    }
    function characterDirectionOfLocale(loc) {
      var locale = loc.minimize().toString();
      return translateCharacterOrder(character_orders_generated_1.characterOrders[locale]);
    }
    function weekInfoOfLocale(loc) {
      var locInternalSlots = (0, get_internal_slots_1.default)(loc);
      var locale = locInternalSlots.locale;
      var region;
      if (locale !== "root") {
        region = loc.maximize().region;
      }
      return (0, preference_data_1.getWeekDataForRegion)(region);
    }
    var TABLE_1 = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"];
    function weekdayToString(fw) {
      return TABLE_1[+fw];
    }
    var Locale2 = (
      /** @class */
      function() {
        function Locale3(tag2, opts) {
          var newTarget = this && this instanceof Locale3 ? this.constructor : void 0;
          if (!newTarget) {
            throw new TypeError("Intl.Locale must be called with 'new'");
          }
          var relevantExtensionKeys = Locale3.relevantExtensionKeys;
          var internalSlotsList = [
            "initializedLocale",
            "locale",
            "calendar",
            "collation",
            "hourCycle",
            "numberingSystem"
          ];
          if (relevantExtensionKeys.indexOf("kf") > -1) {
            internalSlotsList.push("caseFirst");
          }
          if (relevantExtensionKeys.indexOf("kn") > -1) {
            internalSlotsList.push("numeric");
          }
          if (tag2 === void 0) {
            throw new TypeError("First argument to Intl.Locale constructor can't be empty or missing");
          }
          if (typeof tag2 !== "string" && typeof tag2 !== "object") {
            throw new TypeError("tag must be a string or object");
          }
          var tagInternalSlots;
          if (typeof tag2 === "object" && (tagInternalSlots = (0, get_internal_slots_1.default)(tag2)) && (0, ecma402_abstract_1.HasOwnProperty)(tagInternalSlots, "initializedLocale")) {
            tag2 = tagInternalSlots.locale;
          } else {
            tag2 = tag2.toString();
          }
          var internalSlots = (0, get_internal_slots_1.default)(this, internalSlotsList);
          var options = (0, ecma402_abstract_1.CoerceOptionsToObject)(opts);
          tag2 = applyOptionsToTag(tag2, options);
          var opt = /* @__PURE__ */ Object.create(null);
          var calendar = (0, ecma402_abstract_1.GetOption)(options, "calendar", "string", void 0, void 0);
          if (calendar !== void 0) {
            if (!UNICODE_TYPE_REGEX.test(calendar)) {
              throw new RangeError("invalid calendar");
            }
          }
          opt.ca = calendar;
          var collation = (0, ecma402_abstract_1.GetOption)(options, "collation", "string", void 0, void 0);
          if (collation !== void 0) {
            if (!UNICODE_TYPE_REGEX.test(collation)) {
              throw new RangeError("invalid collation");
            }
          }
          opt.co = collation;
          var fw = (0, ecma402_abstract_1.GetOption)(options, "firstDayOfWeek", "string", void 0, void 0);
          if (fw !== void 0) {
            fw = weekdayToString(fw);
            if (!ALPHANUM_3_8.test(fw)) {
              throw new RangeError("Invalid firstDayOfWeek");
            }
          }
          opt.fw = fw;
          var hc = (0, ecma402_abstract_1.GetOption)(options, "hourCycle", "string", ["h11", "h12", "h23", "h24"], void 0);
          opt.hc = hc;
          var kf = (0, ecma402_abstract_1.GetOption)(options, "caseFirst", "string", ["upper", "lower", "false"], void 0);
          opt.kf = kf;
          var _kn = (0, ecma402_abstract_1.GetOption)(options, "numeric", "boolean", void 0, void 0);
          var kn;
          if (_kn !== void 0) {
            kn = String(_kn);
          }
          opt.kn = kn;
          var numberingSystem = (0, ecma402_abstract_1.GetOption)(options, "numberingSystem", "string", void 0, void 0);
          if (numberingSystem !== void 0) {
            if (!UNICODE_TYPE_REGEX.test(numberingSystem)) {
              throw new RangeError("Invalid numberingSystem");
            }
          }
          opt.nu = numberingSystem;
          var r = applyUnicodeExtensionToTag(tag2, opt, relevantExtensionKeys);
          internalSlots.locale = r.locale;
          internalSlots.calendar = r.ca;
          internalSlots.collation = r.co;
          internalSlots.firstDayOfWeek = r.fw;
          internalSlots.hourCycle = r.hc;
          if (relevantExtensionKeys.indexOf("kf") > -1) {
            internalSlots.caseFirst = r.kf;
          }
          if (relevantExtensionKeys.indexOf("kn") > -1) {
            internalSlots.numeric = (0, ecma402_abstract_1.SameValue)(r.kn, "true");
          }
          internalSlots.numberingSystem = r.nu;
        }
        Locale3.prototype.maximize = function() {
          var locale = (0, get_internal_slots_1.default)(this).locale;
          try {
            var maximizedLocale = addLikelySubtags(locale);
            return new Locale3(maximizedLocale);
          } catch (e) {
            return new Locale3(locale);
          }
        };
        Locale3.prototype.minimize = function() {
          var locale = (0, get_internal_slots_1.default)(this).locale;
          try {
            var minimizedLocale = removeLikelySubtags(locale);
            return new Locale3(minimizedLocale);
          } catch (e) {
            return new Locale3(locale);
          }
        };
        Locale3.prototype.toString = function() {
          return (0, get_internal_slots_1.default)(this).locale;
        };
        Object.defineProperty(Locale3.prototype, "baseName", {
          get: function() {
            var locale = (0, get_internal_slots_1.default)(this).locale;
            return (0, intl_getcanonicallocales_1.emitUnicodeLanguageId)((0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(locale));
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Locale3.prototype, "calendar", {
          get: function() {
            return (0, get_internal_slots_1.default)(this).calendar;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Locale3.prototype, "collation", {
          get: function() {
            return (0, get_internal_slots_1.default)(this).collation;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Locale3.prototype, "caseFirst", {
          get: function() {
            return (0, get_internal_slots_1.default)(this).caseFirst;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Locale3.prototype, "numeric", {
          get: function() {
            return (0, get_internal_slots_1.default)(this).numeric;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Locale3.prototype, "numberingSystem", {
          get: function() {
            return (0, get_internal_slots_1.default)(this).numberingSystem;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Locale3.prototype, "language", {
          /**
           * https://tc39.es/proposal-intl-locale/#sec-Intl.Locale.prototype.language
           */
          get: function() {
            var locale = (0, get_internal_slots_1.default)(this).locale;
            return (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(locale).lang;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Locale3.prototype, "script", {
          /**
           * https://tc39.es/proposal-intl-locale/#sec-Intl.Locale.prototype.script
           */
          get: function() {
            var locale = (0, get_internal_slots_1.default)(this).locale;
            return (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(locale).script;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Locale3.prototype, "region", {
          /**
           * https://tc39.es/proposal-intl-locale/#sec-Intl.Locale.prototype.region
           */
          get: function() {
            var locale = (0, get_internal_slots_1.default)(this).locale;
            return (0, intl_getcanonicallocales_1.parseUnicodeLanguageId)(locale).region;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Locale3.prototype, "firstDayOfWeek", {
          get: function() {
            var internalSlots = (0, get_internal_slots_1.default)(this);
            if (!(0, ecma402_abstract_1.HasOwnProperty)(internalSlots, "initializedLocale")) {
              throw new TypeError("Error uninitialized locale");
            }
            return internalSlots.firstDayOfWeek;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Locale3.prototype, "hourCycle", {
          get: function() {
            var internalSlots = (0, get_internal_slots_1.default)(this);
            if (!(0, ecma402_abstract_1.HasOwnProperty)(internalSlots, "initializedLocale")) {
              throw new TypeError("Error uninitialized locale");
            }
            return internalSlots.hourCycle;
          },
          enumerable: false,
          configurable: true
        });
        Locale3.prototype.getCalendars = function() {
          return calendarsOfLocale(this);
        };
        Locale3.prototype.getCollations = function() {
          return collationsOfLocale(this);
        };
        Locale3.prototype.getHourCycles = function() {
          var internalSlots = (0, get_internal_slots_1.default)(this);
          if (!(0, ecma402_abstract_1.HasOwnProperty)(internalSlots, "initializedLocale")) {
            throw new TypeError("Error uninitialized locale");
          }
          return hourCyclesOfLocale(this);
        };
        Locale3.prototype.getNumberingSystems = function() {
          return numberingSystemsOfLocale(this);
        };
        Locale3.prototype.getTimeZones = function() {
          return timeZonesOfLocale(this);
        };
        Locale3.prototype.getTextInfo = function() {
          var info = Object.create(Object.prototype);
          var dir = characterDirectionOfLocale(this);
          (0, ecma402_abstract_1.createDataProperty)(info, "direction", dir);
          return info;
        };
        Locale3.prototype.getWeekInfo = function() {
          var info = Object.create(Object.prototype);
          var internalSlots = (0, get_internal_slots_1.default)(this);
          if (!(0, ecma402_abstract_1.HasOwnProperty)(internalSlots, "initializedLocale")) {
            throw new TypeError("Error uninitialized locale");
          }
          var wi = weekInfoOfLocale(this);
          var we = wi.weekend;
          (0, ecma402_abstract_1.createDataProperty)(info, "firstDay", wi.firstDay);
          (0, ecma402_abstract_1.createDataProperty)(info, "weekend", we);
          (0, ecma402_abstract_1.createDataProperty)(info, "minimalDays", wi.minimalDays);
          var fw = internalSlots.firstDayOfWeek;
          if (fw !== void 0) {
            info.firstDay = fw;
          }
          return info;
        };
        Locale3.relevantExtensionKeys = RELEVANT_EXTENSION_KEYS;
        Locale3.polyfilled = true;
        return Locale3;
      }()
    );
    intlLocale.Locale = Locale2;
    try {
      if (typeof Symbol !== "undefined") {
        Object.defineProperty(Locale2.prototype, Symbol.toStringTag, {
          value: "Intl.Locale",
          writable: false,
          enumerable: false,
          configurable: true
        });
      }
      Object.defineProperty(Locale2.prototype.constructor, "length", {
        value: 1,
        writable: false,
        enumerable: false,
        configurable: true
      });
    } catch (e) {
    }
    intlLocale.default = Locale2;
    return intlLocale;
  }
  var shouldPolyfill$4 = {};
  var hasRequiredShouldPolyfill$4;
  function requireShouldPolyfill$4() {
    if (hasRequiredShouldPolyfill$4) return shouldPolyfill$4;
    hasRequiredShouldPolyfill$4 = 1;
    Object.defineProperty(shouldPolyfill$4, "__esModule", { value: true });
    shouldPolyfill$4.shouldPolyfill = shouldPolyfill2;
    function hasIntlGetCanonicalLocalesBug() {
      try {
        return new Intl.Locale("und-x-private").toString() === "x-private";
      } catch (e) {
        return true;
      }
    }
    function shouldPolyfill2() {
      return !("Locale" in Intl) || hasIntlGetCanonicalLocalesBug();
    }
    return shouldPolyfill$4;
  }
  var hasRequiredPolyfill$4;
  function requirePolyfill$4() {
    if (hasRequiredPolyfill$4) return polyfill$4;
    hasRequiredPolyfill$4 = 1;
    Object.defineProperty(polyfill$4, "__esModule", { value: true });
    var _1 = requireIntlLocale();
    var should_polyfill_1 = requireShouldPolyfill$4();
    if ((0, should_polyfill_1.shouldPolyfill)()) {
      Object.defineProperty(Intl, "Locale", {
        value: _1.Locale,
        writable: true,
        enumerable: false,
        configurable: true
      });
    }
    return polyfill$4;
  }
  requirePolyfill$4();
  var polyfill$3 = {};
  var intlDatetimeformat = {};
  var core$1 = {};
  var decimal$3 = { exports: {} };
  var decimal$2 = decimal$3.exports;
  var hasRequiredDecimal;
  function requireDecimal() {
    if (hasRequiredDecimal) return decimal$3.exports;
    hasRequiredDecimal = 1;
    (function(module) {
      (function(globalScope) {
        /*!
         *  decimal.js v10.5.0
         *  An arbitrary-precision Decimal type for JavaScript.
         *  https://github.com/MikeMcl/decimal.js
         *  Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>
         *  MIT Licence
         */
        var EXP_LIMIT2 = 9e15, MAX_DIGITS2 = 1e9, NUMERALS2 = "0123456789abcdef", LN102 = "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058", PI2 = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789", DEFAULTS2 = {
          // These values must be integers within the stated ranges (inclusive).
          // Most of these values can be changed at run-time using the `Decimal.config` method.
          // The maximum number of significant digits of the result of a calculation or base conversion.
          // E.g. `Decimal.config({ precision: 20 });`
          precision: 20,
          // 1 to MAX_DIGITS
          // The rounding mode used when rounding to `precision`.
          //
          // ROUND_UP         0 Away from zero.
          // ROUND_DOWN       1 Towards zero.
          // ROUND_CEIL       2 Towards +Infinity.
          // ROUND_FLOOR      3 Towards -Infinity.
          // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.
          // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
          // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
          // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
          // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
          //
          // E.g.
          // `Decimal.rounding = 4;`
          // `Decimal.rounding = Decimal.ROUND_HALF_UP;`
          rounding: 4,
          // 0 to 8
          // The modulo mode used when calculating the modulus: a mod n.
          // The quotient (q = a / n) is calculated according to the corresponding rounding mode.
          // The remainder (r) is calculated as: r = a - n * q.
          //
          // UP         0 The remainder is positive if the dividend is negative, else is negative.
          // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).
          // FLOOR      3 The remainder has the same sign as the divisor (Python %).
          // HALF_EVEN  6 The IEEE 754 remainder function.
          // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.
          //
          // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian
          // division (9) are commonly used for the modulus operation. The other rounding modes can also
          // be used, but they may not give useful results.
          modulo: 1,
          // 0 to 9
          // The exponent value at and beneath which `toString` returns exponential notation.
          // JavaScript numbers: -7
          toExpNeg: -7,
          // 0 to -EXP_LIMIT
          // The exponent value at and above which `toString` returns exponential notation.
          // JavaScript numbers: 21
          toExpPos: 21,
          // 0 to EXP_LIMIT
          // The minimum exponent value, beneath which underflow to zero occurs.
          // JavaScript numbers: -324  (5e-324)
          minE: -9e15,
          // -1 to -EXP_LIMIT
          // The maximum exponent value, above which overflow to Infinity occurs.
          // JavaScript numbers: 308  (1.7976931348623157e+308)
          maxE: EXP_LIMIT2,
          // 1 to EXP_LIMIT
          // Whether to use cryptographically-secure random number generation, if available.
          crypto: false
          // true/false
        }, Decimal2, inexact2, noConflict, quadrant2, external2 = true, decimalError2 = "[DecimalError] ", invalidArgument2 = decimalError2 + "Invalid argument: ", precisionLimitExceeded2 = decimalError2 + "Precision limit exceeded", cryptoUnavailable2 = decimalError2 + "crypto unavailable", tag2 = "[object Decimal]", mathfloor2 = Math.floor, mathpow2 = Math.pow, isBinary2 = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i, isHex2 = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i, isOctal2 = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i, isDecimal2 = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i, BASE2 = 1e7, LOG_BASE2 = 7, MAX_SAFE_INTEGER2 = 9007199254740991, LN10_PRECISION2 = LN102.length - 1, PI_PRECISION2 = PI2.length - 1, P2 = { toStringTag: tag2 };
        P2.absoluteValue = P2.abs = function() {
          var x = new this.constructor(this);
          if (x.s < 0) x.s = 1;
          return finalise2(x);
        };
        P2.ceil = function() {
          return finalise2(new this.constructor(this), this.e + 1, 2);
        };
        P2.clampedTo = P2.clamp = function(min3, max3) {
          var k, x = this, Ctor = x.constructor;
          min3 = new Ctor(min3);
          max3 = new Ctor(max3);
          if (!min3.s || !max3.s) return new Ctor(NaN);
          if (min3.gt(max3)) throw Error(invalidArgument2 + max3);
          k = x.cmp(min3);
          return k < 0 ? min3 : x.cmp(max3) > 0 ? max3 : new Ctor(x);
        };
        P2.comparedTo = P2.cmp = function(y) {
          var i, j, xdL, ydL, x = this, xd = x.d, yd = (y = new x.constructor(y)).d, xs = x.s, ys = y.s;
          if (!xd || !yd) {
            return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;
          }
          if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;
          if (xs !== ys) return xs;
          if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;
          xdL = xd.length;
          ydL = yd.length;
          for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {
            if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;
          }
          return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;
        };
        P2.cosine = P2.cos = function() {
          var pr, rm, x = this, Ctor = x.constructor;
          if (!x.d) return new Ctor(NaN);
          if (!x.d[0]) return new Ctor(1);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE2;
          Ctor.rounding = 1;
          x = cosine2(Ctor, toLessThanHalfPi2(Ctor, x));
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return finalise2(quadrant2 == 2 || quadrant2 == 3 ? x.neg() : x, pr, rm, true);
        };
        P2.cubeRoot = P2.cbrt = function() {
          var e, m, n, r, rep, s, sd, t, t3, t3plusx, x = this, Ctor = x.constructor;
          if (!x.isFinite() || x.isZero()) return new Ctor(x);
          external2 = false;
          s = x.s * mathpow2(x.s * x, 1 / 3);
          if (!s || Math.abs(s) == 1 / 0) {
            n = digitsToString2(x.d);
            e = x.e;
            if (s = (e - n.length + 1) % 3) n += s == 1 || s == -2 ? "0" : "00";
            s = mathpow2(n, 1 / 3);
            e = mathfloor2((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));
            if (s == 1 / 0) {
              n = "5e" + e;
            } else {
              n = s.toExponential();
              n = n.slice(0, n.indexOf("e") + 1) + e;
            }
            r = new Ctor(n);
            r.s = x.s;
          } else {
            r = new Ctor(s.toString());
          }
          sd = (e = Ctor.precision) + 3;
          for (; ; ) {
            t = r;
            t3 = t.times(t).times(t);
            t3plusx = t3.plus(x);
            r = divide2(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);
            if (digitsToString2(t.d).slice(0, sd) === (n = digitsToString2(r.d)).slice(0, sd)) {
              n = n.slice(sd - 3, sd + 1);
              if (n == "9999" || !rep && n == "4999") {
                if (!rep) {
                  finalise2(t, e + 1, 0);
                  if (t.times(t).times(t).eq(x)) {
                    r = t;
                    break;
                  }
                }
                sd += 4;
                rep = 1;
              } else {
                if (!+n || !+n.slice(1) && n.charAt(0) == "5") {
                  finalise2(r, e + 1, 1);
                  m = !r.times(r).times(r).eq(x);
                }
                break;
              }
            }
          }
          external2 = true;
          return finalise2(r, e, Ctor.rounding, m);
        };
        P2.decimalPlaces = P2.dp = function() {
          var w, d = this.d, n = NaN;
          if (d) {
            w = d.length - 1;
            n = (w - mathfloor2(this.e / LOG_BASE2)) * LOG_BASE2;
            w = d[w];
            if (w) for (; w % 10 == 0; w /= 10) n--;
            if (n < 0) n = 0;
          }
          return n;
        };
        P2.dividedBy = P2.div = function(y) {
          return divide2(this, new this.constructor(y));
        };
        P2.dividedToIntegerBy = P2.divToInt = function(y) {
          var x = this, Ctor = x.constructor;
          return finalise2(divide2(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);
        };
        P2.equals = P2.eq = function(y) {
          return this.cmp(y) === 0;
        };
        P2.floor = function() {
          return finalise2(new this.constructor(this), this.e + 1, 3);
        };
        P2.greaterThan = P2.gt = function(y) {
          return this.cmp(y) > 0;
        };
        P2.greaterThanOrEqualTo = P2.gte = function(y) {
          var k = this.cmp(y);
          return k == 1 || k === 0;
        };
        P2.hyperbolicCosine = P2.cosh = function() {
          var k, n, pr, rm, len, x = this, Ctor = x.constructor, one = new Ctor(1);
          if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);
          if (x.isZero()) return one;
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;
          Ctor.rounding = 1;
          len = x.d.length;
          if (len < 32) {
            k = Math.ceil(len / 3);
            n = (1 / tinyPow2(4, k)).toString();
          } else {
            k = 16;
            n = "2.3283064365386962890625e-10";
          }
          x = taylorSeries2(Ctor, 1, x.times(n), new Ctor(1), true);
          var cosh2_x, i = k, d8 = new Ctor(8);
          for (; i--; ) {
            cosh2_x = x.times(x);
            x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));
          }
          return finalise2(x, Ctor.precision = pr, Ctor.rounding = rm, true);
        };
        P2.hyperbolicSine = P2.sinh = function() {
          var k, pr, rm, len, x = this, Ctor = x.constructor;
          if (!x.isFinite() || x.isZero()) return new Ctor(x);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;
          Ctor.rounding = 1;
          len = x.d.length;
          if (len < 3) {
            x = taylorSeries2(Ctor, 2, x, x, true);
          } else {
            k = 1.4 * Math.sqrt(len);
            k = k > 16 ? 16 : k | 0;
            x = x.times(1 / tinyPow2(5, k));
            x = taylorSeries2(Ctor, 2, x, x, true);
            var sinh2_x, d5 = new Ctor(5), d16 = new Ctor(16), d20 = new Ctor(20);
            for (; k--; ) {
              sinh2_x = x.times(x);
              x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));
            }
          }
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return finalise2(x, pr, rm, true);
        };
        P2.hyperbolicTangent = P2.tanh = function() {
          var pr, rm, x = this, Ctor = x.constructor;
          if (!x.isFinite()) return new Ctor(x.s);
          if (x.isZero()) return new Ctor(x);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + 7;
          Ctor.rounding = 1;
          return divide2(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);
        };
        P2.inverseCosine = P2.acos = function() {
          var x = this, Ctor = x.constructor, k = x.abs().cmp(1), pr = Ctor.precision, rm = Ctor.rounding;
          if (k !== -1) {
            return k === 0 ? x.isNeg() ? getPi2(Ctor, pr, rm) : new Ctor(0) : new Ctor(NaN);
          }
          if (x.isZero()) return getPi2(Ctor, pr + 4, rm).times(0.5);
          Ctor.precision = pr + 6;
          Ctor.rounding = 1;
          x = new Ctor(1).minus(x).div(x.plus(1)).sqrt().atan();
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return x.times(2);
        };
        P2.inverseHyperbolicCosine = P2.acosh = function() {
          var pr, rm, x = this, Ctor = x.constructor;
          if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);
          if (!x.isFinite()) return new Ctor(x);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;
          Ctor.rounding = 1;
          external2 = false;
          x = x.times(x).minus(1).sqrt().plus(x);
          external2 = true;
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return x.ln();
        };
        P2.inverseHyperbolicSine = P2.asinh = function() {
          var pr, rm, x = this, Ctor = x.constructor;
          if (!x.isFinite() || x.isZero()) return new Ctor(x);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;
          Ctor.rounding = 1;
          external2 = false;
          x = x.times(x).plus(1).sqrt().plus(x);
          external2 = true;
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return x.ln();
        };
        P2.inverseHyperbolicTangent = P2.atanh = function() {
          var pr, rm, wpr, xsd, x = this, Ctor = x.constructor;
          if (!x.isFinite()) return new Ctor(NaN);
          if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          xsd = x.sd();
          if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise2(new Ctor(x), pr, rm, true);
          Ctor.precision = wpr = xsd - x.e;
          x = divide2(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);
          Ctor.precision = pr + 4;
          Ctor.rounding = 1;
          x = x.ln();
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return x.times(0.5);
        };
        P2.inverseSine = P2.asin = function() {
          var halfPi, k, pr, rm, x = this, Ctor = x.constructor;
          if (x.isZero()) return new Ctor(x);
          k = x.abs().cmp(1);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          if (k !== -1) {
            if (k === 0) {
              halfPi = getPi2(Ctor, pr + 4, rm).times(0.5);
              halfPi.s = x.s;
              return halfPi;
            }
            return new Ctor(NaN);
          }
          Ctor.precision = pr + 6;
          Ctor.rounding = 1;
          x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return x.times(2);
        };
        P2.inverseTangent = P2.atan = function() {
          var i, j, k, n, px, t, r, wpr, x2, x = this, Ctor = x.constructor, pr = Ctor.precision, rm = Ctor.rounding;
          if (!x.isFinite()) {
            if (!x.s) return new Ctor(NaN);
            if (pr + 4 <= PI_PRECISION2) {
              r = getPi2(Ctor, pr + 4, rm).times(0.5);
              r.s = x.s;
              return r;
            }
          } else if (x.isZero()) {
            return new Ctor(x);
          } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION2) {
            r = getPi2(Ctor, pr + 4, rm).times(0.25);
            r.s = x.s;
            return r;
          }
          Ctor.precision = wpr = pr + 10;
          Ctor.rounding = 1;
          k = Math.min(28, wpr / LOG_BASE2 + 2 | 0);
          for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));
          external2 = false;
          j = Math.ceil(wpr / LOG_BASE2);
          n = 1;
          x2 = x.times(x);
          r = new Ctor(x);
          px = x;
          for (; i !== -1; ) {
            px = px.times(x2);
            t = r.minus(px.div(n += 2));
            px = px.times(x2);
            r = t.plus(px.div(n += 2));
            if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--; ) ;
          }
          if (k) r = r.times(2 << k - 1);
          external2 = true;
          return finalise2(r, Ctor.precision = pr, Ctor.rounding = rm, true);
        };
        P2.isFinite = function() {
          return !!this.d;
        };
        P2.isInteger = P2.isInt = function() {
          return !!this.d && mathfloor2(this.e / LOG_BASE2) > this.d.length - 2;
        };
        P2.isNaN = function() {
          return !this.s;
        };
        P2.isNegative = P2.isNeg = function() {
          return this.s < 0;
        };
        P2.isPositive = P2.isPos = function() {
          return this.s > 0;
        };
        P2.isZero = function() {
          return !!this.d && this.d[0] === 0;
        };
        P2.lessThan = P2.lt = function(y) {
          return this.cmp(y) < 0;
        };
        P2.lessThanOrEqualTo = P2.lte = function(y) {
          return this.cmp(y) < 1;
        };
        P2.logarithm = P2.log = function(base) {
          var isBase10, d, denominator, k, inf, num, sd, r, arg = this, Ctor = arg.constructor, pr = Ctor.precision, rm = Ctor.rounding, guard = 5;
          if (base == null) {
            base = new Ctor(10);
            isBase10 = true;
          } else {
            base = new Ctor(base);
            d = base.d;
            if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);
            isBase10 = base.eq(10);
          }
          d = arg.d;
          if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {
            return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);
          }
          if (isBase10) {
            if (d.length > 1) {
              inf = true;
            } else {
              for (k = d[0]; k % 10 === 0; ) k /= 10;
              inf = k !== 1;
            }
          }
          external2 = false;
          sd = pr + guard;
          num = naturalLogarithm2(arg, sd);
          denominator = isBase10 ? getLn102(Ctor, sd + 10) : naturalLogarithm2(base, sd);
          r = divide2(num, denominator, sd, 1);
          if (checkRoundingDigits2(r.d, k = pr, rm)) {
            do {
              sd += 10;
              num = naturalLogarithm2(arg, sd);
              denominator = isBase10 ? getLn102(Ctor, sd + 10) : naturalLogarithm2(base, sd);
              r = divide2(num, denominator, sd, 1);
              if (!inf) {
                if (+digitsToString2(r.d).slice(k + 1, k + 15) + 1 == 1e14) {
                  r = finalise2(r, pr + 1, 0);
                }
                break;
              }
            } while (checkRoundingDigits2(r.d, k += 10, rm));
          }
          external2 = true;
          return finalise2(r, pr, rm);
        };
        P2.minus = P2.sub = function(y) {
          var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd, x = this, Ctor = x.constructor;
          y = new Ctor(y);
          if (!x.d || !y.d) {
            if (!x.s || !y.s) y = new Ctor(NaN);
            else if (x.d) y.s = -y.s;
            else y = new Ctor(y.d || x.s !== y.s ? x : NaN);
            return y;
          }
          if (x.s != y.s) {
            y.s = -y.s;
            return x.plus(y);
          }
          xd = x.d;
          yd = y.d;
          pr = Ctor.precision;
          rm = Ctor.rounding;
          if (!xd[0] || !yd[0]) {
            if (yd[0]) y.s = -y.s;
            else if (xd[0]) y = new Ctor(x);
            else return new Ctor(rm === 3 ? -0 : 0);
            return external2 ? finalise2(y, pr, rm) : y;
          }
          e = mathfloor2(y.e / LOG_BASE2);
          xe = mathfloor2(x.e / LOG_BASE2);
          xd = xd.slice();
          k = xe - e;
          if (k) {
            xLTy = k < 0;
            if (xLTy) {
              d = xd;
              k = -k;
              len = yd.length;
            } else {
              d = yd;
              e = xe;
              len = xd.length;
            }
            i = Math.max(Math.ceil(pr / LOG_BASE2), len) + 2;
            if (k > i) {
              k = i;
              d.length = 1;
            }
            d.reverse();
            for (i = k; i--; ) d.push(0);
            d.reverse();
          } else {
            i = xd.length;
            len = yd.length;
            xLTy = i < len;
            if (xLTy) len = i;
            for (i = 0; i < len; i++) {
              if (xd[i] != yd[i]) {
                xLTy = xd[i] < yd[i];
                break;
              }
            }
            k = 0;
          }
          if (xLTy) {
            d = xd;
            xd = yd;
            yd = d;
            y.s = -y.s;
          }
          len = xd.length;
          for (i = yd.length - len; i > 0; --i) xd[len++] = 0;
          for (i = yd.length; i > k; ) {
            if (xd[--i] < yd[i]) {
              for (j = i; j && xd[--j] === 0; ) xd[j] = BASE2 - 1;
              --xd[j];
              xd[i] += BASE2;
            }
            xd[i] -= yd[i];
          }
          for (; xd[--len] === 0; ) xd.pop();
          for (; xd[0] === 0; xd.shift()) --e;
          if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);
          y.d = xd;
          y.e = getBase10Exponent2(xd, e);
          return external2 ? finalise2(y, pr, rm) : y;
        };
        P2.modulo = P2.mod = function(y) {
          var q, x = this, Ctor = x.constructor;
          y = new Ctor(y);
          if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);
          if (!y.d || x.d && !x.d[0]) {
            return finalise2(new Ctor(x), Ctor.precision, Ctor.rounding);
          }
          external2 = false;
          if (Ctor.modulo == 9) {
            q = divide2(x, y.abs(), 0, 3, 1);
            q.s *= y.s;
          } else {
            q = divide2(x, y, 0, Ctor.modulo, 1);
          }
          q = q.times(y);
          external2 = true;
          return x.minus(q);
        };
        P2.naturalExponential = P2.exp = function() {
          return naturalExponential2(this);
        };
        P2.naturalLogarithm = P2.ln = function() {
          return naturalLogarithm2(this);
        };
        P2.negated = P2.neg = function() {
          var x = new this.constructor(this);
          x.s = -x.s;
          return finalise2(x);
        };
        P2.plus = P2.add = function(y) {
          var carry, d, e, i, k, len, pr, rm, xd, yd, x = this, Ctor = x.constructor;
          y = new Ctor(y);
          if (!x.d || !y.d) {
            if (!x.s || !y.s) y = new Ctor(NaN);
            else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);
            return y;
          }
          if (x.s != y.s) {
            y.s = -y.s;
            return x.minus(y);
          }
          xd = x.d;
          yd = y.d;
          pr = Ctor.precision;
          rm = Ctor.rounding;
          if (!xd[0] || !yd[0]) {
            if (!yd[0]) y = new Ctor(x);
            return external2 ? finalise2(y, pr, rm) : y;
          }
          k = mathfloor2(x.e / LOG_BASE2);
          e = mathfloor2(y.e / LOG_BASE2);
          xd = xd.slice();
          i = k - e;
          if (i) {
            if (i < 0) {
              d = xd;
              i = -i;
              len = yd.length;
            } else {
              d = yd;
              e = k;
              len = xd.length;
            }
            k = Math.ceil(pr / LOG_BASE2);
            len = k > len ? k + 1 : len + 1;
            if (i > len) {
              i = len;
              d.length = 1;
            }
            d.reverse();
            for (; i--; ) d.push(0);
            d.reverse();
          }
          len = xd.length;
          i = yd.length;
          if (len - i < 0) {
            i = len;
            d = yd;
            yd = xd;
            xd = d;
          }
          for (carry = 0; i; ) {
            carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE2 | 0;
            xd[i] %= BASE2;
          }
          if (carry) {
            xd.unshift(carry);
            ++e;
          }
          for (len = xd.length; xd[--len] == 0; ) xd.pop();
          y.d = xd;
          y.e = getBase10Exponent2(xd, e);
          return external2 ? finalise2(y, pr, rm) : y;
        };
        P2.precision = P2.sd = function(z) {
          var k, x = this;
          if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument2 + z);
          if (x.d) {
            k = getPrecision2(x.d);
            if (z && x.e + 1 > k) k = x.e + 1;
          } else {
            k = NaN;
          }
          return k;
        };
        P2.round = function() {
          var x = this, Ctor = x.constructor;
          return finalise2(new Ctor(x), x.e + 1, Ctor.rounding);
        };
        P2.sine = P2.sin = function() {
          var pr, rm, x = this, Ctor = x.constructor;
          if (!x.isFinite()) return new Ctor(NaN);
          if (x.isZero()) return new Ctor(x);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE2;
          Ctor.rounding = 1;
          x = sine2(Ctor, toLessThanHalfPi2(Ctor, x));
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return finalise2(quadrant2 > 2 ? x.neg() : x, pr, rm, true);
        };
        P2.squareRoot = P2.sqrt = function() {
          var m, n, sd, r, rep, t, x = this, d = x.d, e = x.e, s = x.s, Ctor = x.constructor;
          if (s !== 1 || !d || !d[0]) {
            return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);
          }
          external2 = false;
          s = Math.sqrt(+x);
          if (s == 0 || s == 1 / 0) {
            n = digitsToString2(d);
            if ((n.length + e) % 2 == 0) n += "0";
            s = Math.sqrt(n);
            e = mathfloor2((e + 1) / 2) - (e < 0 || e % 2);
            if (s == 1 / 0) {
              n = "5e" + e;
            } else {
              n = s.toExponential();
              n = n.slice(0, n.indexOf("e") + 1) + e;
            }
            r = new Ctor(n);
          } else {
            r = new Ctor(s.toString());
          }
          sd = (e = Ctor.precision) + 3;
          for (; ; ) {
            t = r;
            r = t.plus(divide2(x, t, sd + 2, 1)).times(0.5);
            if (digitsToString2(t.d).slice(0, sd) === (n = digitsToString2(r.d)).slice(0, sd)) {
              n = n.slice(sd - 3, sd + 1);
              if (n == "9999" || !rep && n == "4999") {
                if (!rep) {
                  finalise2(t, e + 1, 0);
                  if (t.times(t).eq(x)) {
                    r = t;
                    break;
                  }
                }
                sd += 4;
                rep = 1;
              } else {
                if (!+n || !+n.slice(1) && n.charAt(0) == "5") {
                  finalise2(r, e + 1, 1);
                  m = !r.times(r).eq(x);
                }
                break;
              }
            }
          }
          external2 = true;
          return finalise2(r, e, Ctor.rounding, m);
        };
        P2.tangent = P2.tan = function() {
          var pr, rm, x = this, Ctor = x.constructor;
          if (!x.isFinite()) return new Ctor(NaN);
          if (x.isZero()) return new Ctor(x);
          pr = Ctor.precision;
          rm = Ctor.rounding;
          Ctor.precision = pr + 10;
          Ctor.rounding = 1;
          x = x.sin();
          x.s = 1;
          x = divide2(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);
          Ctor.precision = pr;
          Ctor.rounding = rm;
          return finalise2(quadrant2 == 2 || quadrant2 == 4 ? x.neg() : x, pr, rm, true);
        };
        P2.times = P2.mul = function(y) {
          var carry, e, i, k, r, rL, t, xdL, ydL, x = this, Ctor = x.constructor, xd = x.d, yd = (y = new Ctor(y)).d;
          y.s *= x.s;
          if (!xd || !xd[0] || !yd || !yd[0]) {
            return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd ? NaN : !xd || !yd ? y.s / 0 : y.s * 0);
          }
          e = mathfloor2(x.e / LOG_BASE2) + mathfloor2(y.e / LOG_BASE2);
          xdL = xd.length;
          ydL = yd.length;
          if (xdL < ydL) {
            r = xd;
            xd = yd;
            yd = r;
            rL = xdL;
            xdL = ydL;
            ydL = rL;
          }
          r = [];
          rL = xdL + ydL;
          for (i = rL; i--; ) r.push(0);
          for (i = ydL; --i >= 0; ) {
            carry = 0;
            for (k = xdL + i; k > i; ) {
              t = r[k] + yd[i] * xd[k - i - 1] + carry;
              r[k--] = t % BASE2 | 0;
              carry = t / BASE2 | 0;
            }
            r[k] = (r[k] + carry) % BASE2 | 0;
          }
          for (; !r[--rL]; ) r.pop();
          if (carry) ++e;
          else r.shift();
          y.d = r;
          y.e = getBase10Exponent2(r, e);
          return external2 ? finalise2(y, Ctor.precision, Ctor.rounding) : y;
        };
        P2.toBinary = function(sd, rm) {
          return toStringBinary2(this, 2, sd, rm);
        };
        P2.toDecimalPlaces = P2.toDP = function(dp, rm) {
          var x = this, Ctor = x.constructor;
          x = new Ctor(x);
          if (dp === void 0) return x;
          checkInt322(dp, 0, MAX_DIGITS2);
          if (rm === void 0) rm = Ctor.rounding;
          else checkInt322(rm, 0, 8);
          return finalise2(x, dp + x.e + 1, rm);
        };
        P2.toExponential = function(dp, rm) {
          var str, x = this, Ctor = x.constructor;
          if (dp === void 0) {
            str = finiteToString2(x, true);
          } else {
            checkInt322(dp, 0, MAX_DIGITS2);
            if (rm === void 0) rm = Ctor.rounding;
            else checkInt322(rm, 0, 8);
            x = finalise2(new Ctor(x), dp + 1, rm);
            str = finiteToString2(x, true, dp + 1);
          }
          return x.isNeg() && !x.isZero() ? "-" + str : str;
        };
        P2.toFixed = function(dp, rm) {
          var str, y, x = this, Ctor = x.constructor;
          if (dp === void 0) {
            str = finiteToString2(x);
          } else {
            checkInt322(dp, 0, MAX_DIGITS2);
            if (rm === void 0) rm = Ctor.rounding;
            else checkInt322(rm, 0, 8);
            y = finalise2(new Ctor(x), dp + x.e + 1, rm);
            str = finiteToString2(y, false, dp + y.e + 1);
          }
          return x.isNeg() && !x.isZero() ? "-" + str : str;
        };
        P2.toFraction = function(maxD) {
          var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r, x = this, xd = x.d, Ctor = x.constructor;
          if (!xd) return new Ctor(x);
          n1 = d0 = new Ctor(1);
          d1 = n0 = new Ctor(0);
          d = new Ctor(d1);
          e = d.e = getPrecision2(xd) - x.e - 1;
          k = e % LOG_BASE2;
          d.d[0] = mathpow2(10, k < 0 ? LOG_BASE2 + k : k);
          if (maxD == null) {
            maxD = e > 0 ? d : n1;
          } else {
            n = new Ctor(maxD);
            if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument2 + n);
            maxD = n.gt(d) ? e > 0 ? d : n1 : n;
          }
          external2 = false;
          n = new Ctor(digitsToString2(xd));
          pr = Ctor.precision;
          Ctor.precision = e = xd.length * LOG_BASE2 * 2;
          for (; ; ) {
            q = divide2(n, d, 0, 1, 1);
            d2 = d0.plus(q.times(d1));
            if (d2.cmp(maxD) == 1) break;
            d0 = d1;
            d1 = d2;
            d2 = n1;
            n1 = n0.plus(q.times(d2));
            n0 = d2;
            d2 = d;
            d = n.minus(q.times(d2));
            n = d2;
          }
          d2 = divide2(maxD.minus(d0), d1, 0, 1, 1);
          n0 = n0.plus(d2.times(n1));
          d0 = d0.plus(d2.times(d1));
          n0.s = n1.s = x.s;
          r = divide2(n1, d1, e, 1).minus(x).abs().cmp(divide2(n0, d0, e, 1).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];
          Ctor.precision = pr;
          external2 = true;
          return r;
        };
        P2.toHexadecimal = P2.toHex = function(sd, rm) {
          return toStringBinary2(this, 16, sd, rm);
        };
        P2.toNearest = function(y, rm) {
          var x = this, Ctor = x.constructor;
          x = new Ctor(x);
          if (y == null) {
            if (!x.d) return x;
            y = new Ctor(1);
            rm = Ctor.rounding;
          } else {
            y = new Ctor(y);
            if (rm === void 0) {
              rm = Ctor.rounding;
            } else {
              checkInt322(rm, 0, 8);
            }
            if (!x.d) return y.s ? x : y;
            if (!y.d) {
              if (y.s) y.s = x.s;
              return y;
            }
          }
          if (y.d[0]) {
            external2 = false;
            x = divide2(x, y, 0, rm, 1).times(y);
            external2 = true;
            finalise2(x);
          } else {
            y.s = x.s;
            x = y;
          }
          return x;
        };
        P2.toNumber = function() {
          return +this;
        };
        P2.toOctal = function(sd, rm) {
          return toStringBinary2(this, 8, sd, rm);
        };
        P2.toPower = P2.pow = function(y) {
          var e, k, pr, r, rm, s, x = this, Ctor = x.constructor, yn = +(y = new Ctor(y));
          if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow2(+x, yn));
          x = new Ctor(x);
          if (x.eq(1)) return x;
          pr = Ctor.precision;
          rm = Ctor.rounding;
          if (y.eq(1)) return finalise2(x, pr, rm);
          e = mathfloor2(y.e / LOG_BASE2);
          if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER2) {
            r = intPow2(Ctor, x, k, pr);
            return y.s < 0 ? new Ctor(1).div(r) : finalise2(r, pr, rm);
          }
          s = x.s;
          if (s < 0) {
            if (e < y.d.length - 1) return new Ctor(NaN);
            if ((y.d[e] & 1) == 0) s = 1;
            if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {
              x.s = s;
              return x;
            }
          }
          k = mathpow2(+x, yn);
          e = k == 0 || !isFinite(k) ? mathfloor2(yn * (Math.log("0." + digitsToString2(x.d)) / Math.LN10 + x.e + 1)) : new Ctor(k + "").e;
          if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);
          external2 = false;
          Ctor.rounding = x.s = 1;
          k = Math.min(12, (e + "").length);
          r = naturalExponential2(y.times(naturalLogarithm2(x, pr + k)), pr);
          if (r.d) {
            r = finalise2(r, pr + 5, 1);
            if (checkRoundingDigits2(r.d, pr, rm)) {
              e = pr + 10;
              r = finalise2(naturalExponential2(y.times(naturalLogarithm2(x, e + k)), e), e + 5, 1);
              if (+digitsToString2(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {
                r = finalise2(r, pr + 1, 0);
              }
            }
          }
          r.s = s;
          external2 = true;
          Ctor.rounding = rm;
          return finalise2(r, pr, rm);
        };
        P2.toPrecision = function(sd, rm) {
          var str, x = this, Ctor = x.constructor;
          if (sd === void 0) {
            str = finiteToString2(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
          } else {
            checkInt322(sd, 1, MAX_DIGITS2);
            if (rm === void 0) rm = Ctor.rounding;
            else checkInt322(rm, 0, 8);
            x = finalise2(new Ctor(x), sd, rm);
            str = finiteToString2(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);
          }
          return x.isNeg() && !x.isZero() ? "-" + str : str;
        };
        P2.toSignificantDigits = P2.toSD = function(sd, rm) {
          var x = this, Ctor = x.constructor;
          if (sd === void 0) {
            sd = Ctor.precision;
            rm = Ctor.rounding;
          } else {
            checkInt322(sd, 1, MAX_DIGITS2);
            if (rm === void 0) rm = Ctor.rounding;
            else checkInt322(rm, 0, 8);
          }
          return finalise2(new Ctor(x), sd, rm);
        };
        P2.toString = function() {
          var x = this, Ctor = x.constructor, str = finiteToString2(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
          return x.isNeg() && !x.isZero() ? "-" + str : str;
        };
        P2.truncated = P2.trunc = function() {
          return finalise2(new this.constructor(this), this.e + 1, 1);
        };
        P2.valueOf = P2.toJSON = function() {
          var x = this, Ctor = x.constructor, str = finiteToString2(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
          return x.isNeg() ? "-" + str : str;
        };
        function digitsToString2(d) {
          var i, k, ws, indexOfLastWord = d.length - 1, str = "", w = d[0];
          if (indexOfLastWord > 0) {
            str += w;
            for (i = 1; i < indexOfLastWord; i++) {
              ws = d[i] + "";
              k = LOG_BASE2 - ws.length;
              if (k) str += getZeroString2(k);
              str += ws;
            }
            w = d[i];
            ws = w + "";
            k = LOG_BASE2 - ws.length;
            if (k) str += getZeroString2(k);
          } else if (w === 0) {
            return "0";
          }
          for (; w % 10 === 0; ) w /= 10;
          return str + w;
        }
        function checkInt322(i, min3, max3) {
          if (i !== ~~i || i < min3 || i > max3) {
            throw Error(invalidArgument2 + i);
          }
        }
        function checkRoundingDigits2(d, i, rm, repeating) {
          var di, k, r, rd;
          for (k = d[0]; k >= 10; k /= 10) --i;
          if (--i < 0) {
            i += LOG_BASE2;
            di = 0;
          } else {
            di = Math.ceil((i + 1) / LOG_BASE2);
            i %= LOG_BASE2;
          }
          k = mathpow2(10, LOG_BASE2 - i);
          rd = d[di] % k | 0;
          if (repeating == null) {
            if (i < 3) {
              if (i == 0) rd = rd / 100 | 0;
              else if (i == 1) rd = rd / 10 | 0;
              r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 5e4 || rd == 0;
            } else {
              r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 100 | 0) == mathpow2(10, i - 2) - 1 || (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;
            }
          } else {
            if (i < 4) {
              if (i == 0) rd = rd / 1e3 | 0;
              else if (i == 1) rd = rd / 100 | 0;
              else if (i == 2) rd = rd / 10 | 0;
              r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;
            } else {
              r = ((repeating || rm < 4) && rd + 1 == k || !repeating && rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 1e3 | 0) == mathpow2(10, i - 3) - 1;
            }
          }
          return r;
        }
        function convertBase2(str, baseIn, baseOut) {
          var j, arr = [0], arrL, i = 0, strL = str.length;
          for (; i < strL; ) {
            for (arrL = arr.length; arrL--; ) arr[arrL] *= baseIn;
            arr[0] += NUMERALS2.indexOf(str.charAt(i++));
            for (j = 0; j < arr.length; j++) {
              if (arr[j] > baseOut - 1) {
                if (arr[j + 1] === void 0) arr[j + 1] = 0;
                arr[j + 1] += arr[j] / baseOut | 0;
                arr[j] %= baseOut;
              }
            }
          }
          return arr.reverse();
        }
        function cosine2(Ctor, x) {
          var k, len, y;
          if (x.isZero()) return x;
          len = x.d.length;
          if (len < 32) {
            k = Math.ceil(len / 3);
            y = (1 / tinyPow2(4, k)).toString();
          } else {
            k = 16;
            y = "2.3283064365386962890625e-10";
          }
          Ctor.precision += k;
          x = taylorSeries2(Ctor, 1, x.times(y), new Ctor(1));
          for (var i = k; i--; ) {
            var cos2x = x.times(x);
            x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);
          }
          Ctor.precision -= k;
          return x;
        }
        var divide2 = /* @__PURE__ */ function() {
          function multiplyInteger(x, k, base) {
            var temp, carry = 0, i = x.length;
            for (x = x.slice(); i--; ) {
              temp = x[i] * k + carry;
              x[i] = temp % base | 0;
              carry = temp / base | 0;
            }
            if (carry) x.unshift(carry);
            return x;
          }
          function compare(a, b, aL, bL) {
            var i, r;
            if (aL != bL) {
              r = aL > bL ? 1 : -1;
            } else {
              for (i = r = 0; i < aL; i++) {
                if (a[i] != b[i]) {
                  r = a[i] > b[i] ? 1 : -1;
                  break;
                }
              }
            }
            return r;
          }
          function subtract(a, b, aL, base) {
            var i = 0;
            for (; aL--; ) {
              a[aL] -= i;
              i = a[aL] < b[aL] ? 1 : 0;
              a[aL] = i * base + a[aL] - b[aL];
            }
            for (; !a[0] && a.length > 1; ) a.shift();
          }
          return function(x, y, pr, rm, dp, base) {
            var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz, Ctor = x.constructor, sign3 = x.s == y.s ? 1 : -1, xd = x.d, yd = y.d;
            if (!xd || !xd[0] || !yd || !yd[0]) {
              return new Ctor(
                // Return NaN if either NaN, or both Infinity or 0.
                !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN : (
                  // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.
                  xd && xd[0] == 0 || !yd ? sign3 * 0 : sign3 / 0
                )
              );
            }
            if (base) {
              logBase = 1;
              e = x.e - y.e;
            } else {
              base = BASE2;
              logBase = LOG_BASE2;
              e = mathfloor2(x.e / logBase) - mathfloor2(y.e / logBase);
            }
            yL = yd.length;
            xL = xd.length;
            q = new Ctor(sign3);
            qd = q.d = [];
            for (i = 0; yd[i] == (xd[i] || 0); i++) ;
            if (yd[i] > (xd[i] || 0)) e--;
            if (pr == null) {
              sd = pr = Ctor.precision;
              rm = Ctor.rounding;
            } else if (dp) {
              sd = pr + (x.e - y.e) + 1;
            } else {
              sd = pr;
            }
            if (sd < 0) {
              qd.push(1);
              more = true;
            } else {
              sd = sd / logBase + 2 | 0;
              i = 0;
              if (yL == 1) {
                k = 0;
                yd = yd[0];
                sd++;
                for (; (i < xL || k) && sd--; i++) {
                  t = k * base + (xd[i] || 0);
                  qd[i] = t / yd | 0;
                  k = t % yd | 0;
                }
                more = k || i < xL;
              } else {
                k = base / (yd[0] + 1) | 0;
                if (k > 1) {
                  yd = multiplyInteger(yd, k, base);
                  xd = multiplyInteger(xd, k, base);
                  yL = yd.length;
                  xL = xd.length;
                }
                xi = yL;
                rem = xd.slice(0, yL);
                remL = rem.length;
                for (; remL < yL; ) rem[remL++] = 0;
                yz = yd.slice();
                yz.unshift(0);
                yd0 = yd[0];
                if (yd[1] >= base / 2) ++yd0;
                do {
                  k = 0;
                  cmp = compare(yd, rem, yL, remL);
                  if (cmp < 0) {
                    rem0 = rem[0];
                    if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);
                    k = rem0 / yd0 | 0;
                    if (k > 1) {
                      if (k >= base) k = base - 1;
                      prod = multiplyInteger(yd, k, base);
                      prodL = prod.length;
                      remL = rem.length;
                      cmp = compare(prod, rem, prodL, remL);
                      if (cmp == 1) {
                        k--;
                        subtract(prod, yL < prodL ? yz : yd, prodL, base);
                      }
                    } else {
                      if (k == 0) cmp = k = 1;
                      prod = yd.slice();
                    }
                    prodL = prod.length;
                    if (prodL < remL) prod.unshift(0);
                    subtract(rem, prod, remL, base);
                    if (cmp == -1) {
                      remL = rem.length;
                      cmp = compare(yd, rem, yL, remL);
                      if (cmp < 1) {
                        k++;
                        subtract(rem, yL < remL ? yz : yd, remL, base);
                      }
                    }
                    remL = rem.length;
                  } else if (cmp === 0) {
                    k++;
                    rem = [0];
                  }
                  qd[i++] = k;
                  if (cmp && rem[0]) {
                    rem[remL++] = xd[xi] || 0;
                  } else {
                    rem = [xd[xi]];
                    remL = 1;
                  }
                } while ((xi++ < xL || rem[0] !== void 0) && sd--);
                more = rem[0] !== void 0;
              }
              if (!qd[0]) qd.shift();
            }
            if (logBase == 1) {
              q.e = e;
              inexact2 = more;
            } else {
              for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;
              q.e = i + e * logBase - 1;
              finalise2(q, dp ? pr + q.e + 1 : pr, rm, more);
            }
            return q;
          };
        }();
        function finalise2(x, sd, rm, isTruncated) {
          var digits, i, j, k, rd, roundUp, w, xd, xdi, Ctor = x.constructor;
          out: if (sd != null) {
            xd = x.d;
            if (!xd) return x;
            for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;
            i = sd - digits;
            if (i < 0) {
              i += LOG_BASE2;
              j = sd;
              w = xd[xdi = 0];
              rd = w / mathpow2(10, digits - j - 1) % 10 | 0;
            } else {
              xdi = Math.ceil((i + 1) / LOG_BASE2);
              k = xd.length;
              if (xdi >= k) {
                if (isTruncated) {
                  for (; k++ <= xdi; ) xd.push(0);
                  w = rd = 0;
                  digits = 1;
                  i %= LOG_BASE2;
                  j = i - LOG_BASE2 + 1;
                } else {
                  break out;
                }
              } else {
                w = k = xd[xdi];
                for (digits = 1; k >= 10; k /= 10) digits++;
                i %= LOG_BASE2;
                j = i - LOG_BASE2 + digits;
                rd = j < 0 ? 0 : w / mathpow2(10, digits - j - 1) % 10 | 0;
              }
            }
            isTruncated = isTruncated || sd < 0 || xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow2(10, digits - j - 1));
            roundUp = rm < 4 ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 && // Check whether the digit to the left of the rounding digit is odd.
            (i > 0 ? j > 0 ? w / mathpow2(10, digits - j) : 0 : xd[xdi - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));
            if (sd < 1 || !xd[0]) {
              xd.length = 0;
              if (roundUp) {
                sd -= x.e + 1;
                xd[0] = mathpow2(10, (LOG_BASE2 - sd % LOG_BASE2) % LOG_BASE2);
                x.e = -sd || 0;
              } else {
                xd[0] = x.e = 0;
              }
              return x;
            }
            if (i == 0) {
              xd.length = xdi;
              k = 1;
              xdi--;
            } else {
              xd.length = xdi + 1;
              k = mathpow2(10, LOG_BASE2 - i);
              xd[xdi] = j > 0 ? (w / mathpow2(10, digits - j) % mathpow2(10, j) | 0) * k : 0;
            }
            if (roundUp) {
              for (; ; ) {
                if (xdi == 0) {
                  for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;
                  j = xd[0] += k;
                  for (k = 1; j >= 10; j /= 10) k++;
                  if (i != k) {
                    x.e++;
                    if (xd[0] == BASE2) xd[0] = 1;
                  }
                  break;
                } else {
                  xd[xdi] += k;
                  if (xd[xdi] != BASE2) break;
                  xd[xdi--] = 0;
                  k = 1;
                }
              }
            }
            for (i = xd.length; xd[--i] === 0; ) xd.pop();
          }
          if (external2) {
            if (x.e > Ctor.maxE) {
              x.d = null;
              x.e = NaN;
            } else if (x.e < Ctor.minE) {
              x.e = 0;
              x.d = [0];
            }
          }
          return x;
        }
        function finiteToString2(x, isExp, sd) {
          if (!x.isFinite()) return nonFiniteToString2(x);
          var k, e = x.e, str = digitsToString2(x.d), len = str.length;
          if (isExp) {
            if (sd && (k = sd - len) > 0) {
              str = str.charAt(0) + "." + str.slice(1) + getZeroString2(k);
            } else if (len > 1) {
              str = str.charAt(0) + "." + str.slice(1);
            }
            str = str + (x.e < 0 ? "e" : "e+") + x.e;
          } else if (e < 0) {
            str = "0." + getZeroString2(-e - 1) + str;
            if (sd && (k = sd - len) > 0) str += getZeroString2(k);
          } else if (e >= len) {
            str += getZeroString2(e + 1 - len);
            if (sd && (k = sd - e - 1) > 0) str = str + "." + getZeroString2(k);
          } else {
            if ((k = e + 1) < len) str = str.slice(0, k) + "." + str.slice(k);
            if (sd && (k = sd - len) > 0) {
              if (e + 1 === len) str += ".";
              str += getZeroString2(k);
            }
          }
          return str;
        }
        function getBase10Exponent2(digits, e) {
          var w = digits[0];
          for (e *= LOG_BASE2; w >= 10; w /= 10) e++;
          return e;
        }
        function getLn102(Ctor, sd, pr) {
          if (sd > LN10_PRECISION2) {
            external2 = true;
            if (pr) Ctor.precision = pr;
            throw Error(precisionLimitExceeded2);
          }
          return finalise2(new Ctor(LN102), sd, 1, true);
        }
        function getPi2(Ctor, sd, rm) {
          if (sd > PI_PRECISION2) throw Error(precisionLimitExceeded2);
          return finalise2(new Ctor(PI2), sd, rm, true);
        }
        function getPrecision2(digits) {
          var w = digits.length - 1, len = w * LOG_BASE2 + 1;
          w = digits[w];
          if (w) {
            for (; w % 10 == 0; w /= 10) len--;
            for (w = digits[0]; w >= 10; w /= 10) len++;
          }
          return len;
        }
        function getZeroString2(k) {
          var zs = "";
          for (; k--; ) zs += "0";
          return zs;
        }
        function intPow2(Ctor, x, n, pr) {
          var isTruncated, r = new Ctor(1), k = Math.ceil(pr / LOG_BASE2 + 4);
          external2 = false;
          for (; ; ) {
            if (n % 2) {
              r = r.times(x);
              if (truncate2(r.d, k)) isTruncated = true;
            }
            n = mathfloor2(n / 2);
            if (n === 0) {
              n = r.d.length - 1;
              if (isTruncated && r.d[n] === 0) ++r.d[n];
              break;
            }
            x = x.times(x);
            truncate2(x.d, k);
          }
          external2 = true;
          return r;
        }
        function isOdd2(n) {
          return n.d[n.d.length - 1] & 1;
        }
        function maxOrMin2(Ctor, args, n) {
          var k, y, x = new Ctor(args[0]), i = 0;
          for (; ++i < args.length; ) {
            y = new Ctor(args[i]);
            if (!y.s) {
              x = y;
              break;
            }
            k = x.cmp(y);
            if (k === n || k === 0 && x.s === n) {
              x = y;
            }
          }
          return x;
        }
        function naturalExponential2(x, sd) {
          var denominator, guard, j, pow3, sum3, t, wpr, rep = 0, i = 0, k = 0, Ctor = x.constructor, rm = Ctor.rounding, pr = Ctor.precision;
          if (!x.d || !x.d[0] || x.e > 17) {
            return new Ctor(x.d ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0 : x.s ? x.s < 0 ? 0 : x : 0 / 0);
          }
          if (sd == null) {
            external2 = false;
            wpr = pr;
          } else {
            wpr = sd;
          }
          t = new Ctor(0.03125);
          while (x.e > -2) {
            x = x.times(t);
            k += 5;
          }
          guard = Math.log(mathpow2(2, k)) / Math.LN10 * 2 + 5 | 0;
          wpr += guard;
          denominator = pow3 = sum3 = new Ctor(1);
          Ctor.precision = wpr;
          for (; ; ) {
            pow3 = finalise2(pow3.times(x), wpr, 1);
            denominator = denominator.times(++i);
            t = sum3.plus(divide2(pow3, denominator, wpr, 1));
            if (digitsToString2(t.d).slice(0, wpr) === digitsToString2(sum3.d).slice(0, wpr)) {
              j = k;
              while (j--) sum3 = finalise2(sum3.times(sum3), wpr, 1);
              if (sd == null) {
                if (rep < 3 && checkRoundingDigits2(sum3.d, wpr - guard, rm, rep)) {
                  Ctor.precision = wpr += 10;
                  denominator = pow3 = t = new Ctor(1);
                  i = 0;
                  rep++;
                } else {
                  return finalise2(sum3, Ctor.precision = pr, rm, external2 = true);
                }
              } else {
                Ctor.precision = pr;
                return sum3;
              }
            }
            sum3 = t;
          }
        }
        function naturalLogarithm2(y, sd) {
          var c, c0, denominator, e, numerator, rep, sum3, t, wpr, x1, x2, n = 1, guard = 10, x = y, xd = x.d, Ctor = x.constructor, rm = Ctor.rounding, pr = Ctor.precision;
          if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {
            return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);
          }
          if (sd == null) {
            external2 = false;
            wpr = pr;
          } else {
            wpr = sd;
          }
          Ctor.precision = wpr += guard;
          c = digitsToString2(xd);
          c0 = c.charAt(0);
          if (Math.abs(e = x.e) < 15e14) {
            while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {
              x = x.times(y);
              c = digitsToString2(x.d);
              c0 = c.charAt(0);
              n++;
            }
            e = x.e;
            if (c0 > 1) {
              x = new Ctor("0." + c);
              e++;
            } else {
              x = new Ctor(c0 + "." + c.slice(1));
            }
          } else {
            t = getLn102(Ctor, wpr + 2, pr).times(e + "");
            x = naturalLogarithm2(new Ctor(c0 + "." + c.slice(1)), wpr - guard).plus(t);
            Ctor.precision = pr;
            return sd == null ? finalise2(x, pr, rm, external2 = true) : x;
          }
          x1 = x;
          sum3 = numerator = x = divide2(x.minus(1), x.plus(1), wpr, 1);
          x2 = finalise2(x.times(x), wpr, 1);
          denominator = 3;
          for (; ; ) {
            numerator = finalise2(numerator.times(x2), wpr, 1);
            t = sum3.plus(divide2(numerator, new Ctor(denominator), wpr, 1));
            if (digitsToString2(t.d).slice(0, wpr) === digitsToString2(sum3.d).slice(0, wpr)) {
              sum3 = sum3.times(2);
              if (e !== 0) sum3 = sum3.plus(getLn102(Ctor, wpr + 2, pr).times(e + ""));
              sum3 = divide2(sum3, new Ctor(n), wpr, 1);
              if (sd == null) {
                if (checkRoundingDigits2(sum3.d, wpr - guard, rm, rep)) {
                  Ctor.precision = wpr += guard;
                  t = numerator = x = divide2(x1.minus(1), x1.plus(1), wpr, 1);
                  x2 = finalise2(x.times(x), wpr, 1);
                  denominator = rep = 1;
                } else {
                  return finalise2(sum3, Ctor.precision = pr, rm, external2 = true);
                }
              } else {
                Ctor.precision = pr;
                return sum3;
              }
            }
            sum3 = t;
            denominator += 2;
          }
        }
        function nonFiniteToString2(x) {
          return String(x.s * x.s / 0);
        }
        function parseDecimal2(x, str) {
          var e, i, len;
          if ((e = str.indexOf(".")) > -1) str = str.replace(".", "");
          if ((i = str.search(/e/i)) > 0) {
            if (e < 0) e = i;
            e += +str.slice(i + 1);
            str = str.substring(0, i);
          } else if (e < 0) {
            e = str.length;
          }
          for (i = 0; str.charCodeAt(i) === 48; i++) ;
          for (len = str.length; str.charCodeAt(len - 1) === 48; --len) ;
          str = str.slice(i, len);
          if (str) {
            len -= i;
            x.e = e = e - i - 1;
            x.d = [];
            i = (e + 1) % LOG_BASE2;
            if (e < 0) i += LOG_BASE2;
            if (i < len) {
              if (i) x.d.push(+str.slice(0, i));
              for (len -= LOG_BASE2; i < len; ) x.d.push(+str.slice(i, i += LOG_BASE2));
              str = str.slice(i);
              i = LOG_BASE2 - str.length;
            } else {
              i -= len;
            }
            for (; i--; ) str += "0";
            x.d.push(+str);
            if (external2) {
              if (x.e > x.constructor.maxE) {
                x.d = null;
                x.e = NaN;
              } else if (x.e < x.constructor.minE) {
                x.e = 0;
                x.d = [0];
              }
            }
          } else {
            x.e = 0;
            x.d = [0];
          }
          return x;
        }
        function parseOther2(x, str) {
          var base, Ctor, divisor, i, isFloat, len, p, xd, xe;
          if (str.indexOf("_") > -1) {
            str = str.replace(/(\d)_(?=\d)/g, "$1");
            if (isDecimal2.test(str)) return parseDecimal2(x, str);
          } else if (str === "Infinity" || str === "NaN") {
            if (!+str) x.s = NaN;
            x.e = NaN;
            x.d = null;
            return x;
          }
          if (isHex2.test(str)) {
            base = 16;
            str = str.toLowerCase();
          } else if (isBinary2.test(str)) {
            base = 2;
          } else if (isOctal2.test(str)) {
            base = 8;
          } else {
            throw Error(invalidArgument2 + str);
          }
          i = str.search(/p/i);
          if (i > 0) {
            p = +str.slice(i + 1);
            str = str.substring(2, i);
          } else {
            str = str.slice(2);
          }
          i = str.indexOf(".");
          isFloat = i >= 0;
          Ctor = x.constructor;
          if (isFloat) {
            str = str.replace(".", "");
            len = str.length;
            i = len - i;
            divisor = intPow2(Ctor, new Ctor(base), i, i * 2);
          }
          xd = convertBase2(str, base, BASE2);
          xe = xd.length - 1;
          for (i = xe; xd[i] === 0; --i) xd.pop();
          if (i < 0) return new Ctor(x.s * 0);
          x.e = getBase10Exponent2(xd, xe);
          x.d = xd;
          external2 = false;
          if (isFloat) x = divide2(x, divisor, len * 4);
          if (p) x = x.times(Math.abs(p) < 54 ? mathpow2(2, p) : Decimal2.pow(2, p));
          external2 = true;
          return x;
        }
        function sine2(Ctor, x) {
          var k, len = x.d.length;
          if (len < 3) {
            return x.isZero() ? x : taylorSeries2(Ctor, 2, x, x);
          }
          k = 1.4 * Math.sqrt(len);
          k = k > 16 ? 16 : k | 0;
          x = x.times(1 / tinyPow2(5, k));
          x = taylorSeries2(Ctor, 2, x, x);
          var sin2_x, d5 = new Ctor(5), d16 = new Ctor(16), d20 = new Ctor(20);
          for (; k--; ) {
            sin2_x = x.times(x);
            x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));
          }
          return x;
        }
        function taylorSeries2(Ctor, n, x, y, isHyperbolic) {
          var j, t, u, x2, pr = Ctor.precision, k = Math.ceil(pr / LOG_BASE2);
          external2 = false;
          x2 = x.times(x);
          u = new Ctor(y);
          for (; ; ) {
            t = divide2(u.times(x2), new Ctor(n++ * n++), pr, 1);
            u = isHyperbolic ? y.plus(t) : y.minus(t);
            y = divide2(t.times(x2), new Ctor(n++ * n++), pr, 1);
            t = u.plus(y);
            if (t.d[k] !== void 0) {
              for (j = k; t.d[j] === u.d[j] && j--; ) ;
              if (j == -1) break;
            }
            j = u;
            u = y;
            y = t;
            t = j;
          }
          external2 = true;
          t.d.length = k + 1;
          return t;
        }
        function tinyPow2(b, e) {
          var n = b;
          while (--e) n *= b;
          return n;
        }
        function toLessThanHalfPi2(Ctor, x) {
          var t, isNeg = x.s < 0, pi = getPi2(Ctor, Ctor.precision, 1), halfPi = pi.times(0.5);
          x = x.abs();
          if (x.lte(halfPi)) {
            quadrant2 = isNeg ? 4 : 1;
            return x;
          }
          t = x.divToInt(pi);
          if (t.isZero()) {
            quadrant2 = isNeg ? 3 : 2;
          } else {
            x = x.minus(t.times(pi));
            if (x.lte(halfPi)) {
              quadrant2 = isOdd2(t) ? isNeg ? 2 : 3 : isNeg ? 4 : 1;
              return x;
            }
            quadrant2 = isOdd2(t) ? isNeg ? 1 : 4 : isNeg ? 3 : 2;
          }
          return x.minus(pi).abs();
        }
        function toStringBinary2(x, baseOut, sd, rm) {
          var base, e, i, k, len, roundUp, str, xd, y, Ctor = x.constructor, isExp = sd !== void 0;
          if (isExp) {
            checkInt322(sd, 1, MAX_DIGITS2);
            if (rm === void 0) rm = Ctor.rounding;
            else checkInt322(rm, 0, 8);
          } else {
            sd = Ctor.precision;
            rm = Ctor.rounding;
          }
          if (!x.isFinite()) {
            str = nonFiniteToString2(x);
          } else {
            str = finiteToString2(x);
            i = str.indexOf(".");
            if (isExp) {
              base = 2;
              if (baseOut == 16) {
                sd = sd * 4 - 3;
              } else if (baseOut == 8) {
                sd = sd * 3 - 2;
              }
            } else {
              base = baseOut;
            }
            if (i >= 0) {
              str = str.replace(".", "");
              y = new Ctor(1);
              y.e = str.length - i;
              y.d = convertBase2(finiteToString2(y), 10, base);
              y.e = y.d.length;
            }
            xd = convertBase2(str, 10, base);
            e = len = xd.length;
            for (; xd[--len] == 0; ) xd.pop();
            if (!xd[0]) {
              str = isExp ? "0p+0" : "0";
            } else {
              if (i < 0) {
                e--;
              } else {
                x = new Ctor(x);
                x.d = xd;
                x.e = e;
                x = divide2(x, y, sd, rm, 0, base);
                xd = x.d;
                e = x.e;
                roundUp = inexact2;
              }
              i = xd[sd];
              k = base / 2;
              roundUp = roundUp || xd[sd + 1] !== void 0;
              roundUp = rm < 4 ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2)) : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 || rm === (x.s < 0 ? 8 : 7));
              xd.length = sd;
              if (roundUp) {
                for (; ++xd[--sd] > base - 1; ) {
                  xd[sd] = 0;
                  if (!sd) {
                    ++e;
                    xd.unshift(1);
                  }
                }
              }
              for (len = xd.length; !xd[len - 1]; --len) ;
              for (i = 0, str = ""; i < len; i++) str += NUMERALS2.charAt(xd[i]);
              if (isExp) {
                if (len > 1) {
                  if (baseOut == 16 || baseOut == 8) {
                    i = baseOut == 16 ? 4 : 3;
                    for (--len; len % i; len++) str += "0";
                    xd = convertBase2(str, base, baseOut);
                    for (len = xd.length; !xd[len - 1]; --len) ;
                    for (i = 1, str = "1."; i < len; i++) str += NUMERALS2.charAt(xd[i]);
                  } else {
                    str = str.charAt(0) + "." + str.slice(1);
                  }
                }
                str = str + (e < 0 ? "p" : "p+") + e;
              } else if (e < 0) {
                for (; ++e; ) str = "0" + str;
                str = "0." + str;
              } else {
                if (++e > len) for (e -= len; e--; ) str += "0";
                else if (e < len) str = str.slice(0, e) + "." + str.slice(e);
              }
            }
            str = (baseOut == 16 ? "0x" : baseOut == 2 ? "0b" : baseOut == 8 ? "0o" : "") + str;
          }
          return x.s < 0 ? "-" + str : str;
        }
        function truncate2(arr, len) {
          if (arr.length > len) {
            arr.length = len;
            return true;
          }
        }
        function abs2(x) {
          return new this(x).abs();
        }
        function acos2(x) {
          return new this(x).acos();
        }
        function acosh2(x) {
          return new this(x).acosh();
        }
        function add2(x, y) {
          return new this(x).plus(y);
        }
        function asin2(x) {
          return new this(x).asin();
        }
        function asinh2(x) {
          return new this(x).asinh();
        }
        function atan3(x) {
          return new this(x).atan();
        }
        function atanh2(x) {
          return new this(x).atanh();
        }
        function atan22(y, x) {
          y = new this(y);
          x = new this(x);
          var r, pr = this.precision, rm = this.rounding, wpr = pr + 4;
          if (!y.s || !x.s) {
            r = new this(NaN);
          } else if (!y.d && !x.d) {
            r = getPi2(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);
            r.s = y.s;
          } else if (!x.d || y.isZero()) {
            r = x.s < 0 ? getPi2(this, pr, rm) : new this(0);
            r.s = y.s;
          } else if (!y.d || x.isZero()) {
            r = getPi2(this, wpr, 1).times(0.5);
            r.s = y.s;
          } else if (x.s < 0) {
            this.precision = wpr;
            this.rounding = 1;
            r = this.atan(divide2(y, x, wpr, 1));
            x = getPi2(this, wpr, 1);
            this.precision = pr;
            this.rounding = rm;
            r = y.s < 0 ? r.minus(x) : r.plus(x);
          } else {
            r = this.atan(divide2(y, x, wpr, 1));
          }
          return r;
        }
        function cbrt2(x) {
          return new this(x).cbrt();
        }
        function ceil2(x) {
          return finalise2(x = new this(x), x.e + 1, 2);
        }
        function clamp2(x, min3, max3) {
          return new this(x).clamp(min3, max3);
        }
        function config2(obj) {
          if (!obj || typeof obj !== "object") throw Error(decimalError2 + "Object expected");
          var i, p, v, useDefaults = obj.defaults === true, ps = [
            "precision",
            1,
            MAX_DIGITS2,
            "rounding",
            0,
            8,
            "toExpNeg",
            -9e15,
            0,
            "toExpPos",
            0,
            EXP_LIMIT2,
            "maxE",
            0,
            EXP_LIMIT2,
            "minE",
            -9e15,
            0,
            "modulo",
            0,
            9
          ];
          for (i = 0; i < ps.length; i += 3) {
            if (p = ps[i], useDefaults) this[p] = DEFAULTS2[p];
            if ((v = obj[p]) !== void 0) {
              if (mathfloor2(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;
              else throw Error(invalidArgument2 + p + ": " + v);
            }
          }
          if (p = "crypto", useDefaults) this[p] = DEFAULTS2[p];
          if ((v = obj[p]) !== void 0) {
            if (v === true || v === false || v === 0 || v === 1) {
              if (v) {
                if (typeof crypto != "undefined" && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
                  this[p] = true;
                } else {
                  throw Error(cryptoUnavailable2);
                }
              } else {
                this[p] = false;
              }
            } else {
              throw Error(invalidArgument2 + p + ": " + v);
            }
          }
          return this;
        }
        function cos2(x) {
          return new this(x).cos();
        }
        function cosh2(x) {
          return new this(x).cosh();
        }
        function clone2(obj) {
          var i, p, ps;
          function Decimal3(v) {
            var e, i2, t, x = this;
            if (!(x instanceof Decimal3)) return new Decimal3(v);
            x.constructor = Decimal3;
            if (isDecimalInstance2(v)) {
              x.s = v.s;
              if (external2) {
                if (!v.d || v.e > Decimal3.maxE) {
                  x.e = NaN;
                  x.d = null;
                } else if (v.e < Decimal3.minE) {
                  x.e = 0;
                  x.d = [0];
                } else {
                  x.e = v.e;
                  x.d = v.d.slice();
                }
              } else {
                x.e = v.e;
                x.d = v.d ? v.d.slice() : v.d;
              }
              return;
            }
            t = typeof v;
            if (t === "number") {
              if (v === 0) {
                x.s = 1 / v < 0 ? -1 : 1;
                x.e = 0;
                x.d = [0];
                return;
              }
              if (v < 0) {
                v = -v;
                x.s = -1;
              } else {
                x.s = 1;
              }
              if (v === ~~v && v < 1e7) {
                for (e = 0, i2 = v; i2 >= 10; i2 /= 10) e++;
                if (external2) {
                  if (e > Decimal3.maxE) {
                    x.e = NaN;
                    x.d = null;
                  } else if (e < Decimal3.minE) {
                    x.e = 0;
                    x.d = [0];
                  } else {
                    x.e = e;
                    x.d = [v];
                  }
                } else {
                  x.e = e;
                  x.d = [v];
                }
                return;
              }
              if (v * 0 !== 0) {
                if (!v) x.s = NaN;
                x.e = NaN;
                x.d = null;
                return;
              }
              return parseDecimal2(x, v.toString());
            }
            if (t === "string") {
              if ((i2 = v.charCodeAt(0)) === 45) {
                v = v.slice(1);
                x.s = -1;
              } else {
                if (i2 === 43) v = v.slice(1);
                x.s = 1;
              }
              return isDecimal2.test(v) ? parseDecimal2(x, v) : parseOther2(x, v);
            }
            if (t === "bigint") {
              if (v < 0) {
                v = -v;
                x.s = -1;
              } else {
                x.s = 1;
              }
              return parseDecimal2(x, v.toString());
            }
            throw Error(invalidArgument2 + v);
          }
          Decimal3.prototype = P2;
          Decimal3.ROUND_UP = 0;
          Decimal3.ROUND_DOWN = 1;
          Decimal3.ROUND_CEIL = 2;
          Decimal3.ROUND_FLOOR = 3;
          Decimal3.ROUND_HALF_UP = 4;
          Decimal3.ROUND_HALF_DOWN = 5;
          Decimal3.ROUND_HALF_EVEN = 6;
          Decimal3.ROUND_HALF_CEIL = 7;
          Decimal3.ROUND_HALF_FLOOR = 8;
          Decimal3.EUCLID = 9;
          Decimal3.config = Decimal3.set = config2;
          Decimal3.clone = clone2;
          Decimal3.isDecimal = isDecimalInstance2;
          Decimal3.abs = abs2;
          Decimal3.acos = acos2;
          Decimal3.acosh = acosh2;
          Decimal3.add = add2;
          Decimal3.asin = asin2;
          Decimal3.asinh = asinh2;
          Decimal3.atan = atan3;
          Decimal3.atanh = atanh2;
          Decimal3.atan2 = atan22;
          Decimal3.cbrt = cbrt2;
          Decimal3.ceil = ceil2;
          Decimal3.clamp = clamp2;
          Decimal3.cos = cos2;
          Decimal3.cosh = cosh2;
          Decimal3.div = div2;
          Decimal3.exp = exp2;
          Decimal3.floor = floor2;
          Decimal3.hypot = hypot2;
          Decimal3.ln = ln2;
          Decimal3.log = log3;
          Decimal3.log10 = log102;
          Decimal3.log2 = log22;
          Decimal3.max = max2;
          Decimal3.min = min2;
          Decimal3.mod = mod2;
          Decimal3.mul = mul2;
          Decimal3.pow = pow2;
          Decimal3.random = random2;
          Decimal3.round = round2;
          Decimal3.sign = sign2;
          Decimal3.sin = sin2;
          Decimal3.sinh = sinh2;
          Decimal3.sqrt = sqrt2;
          Decimal3.sub = sub2;
          Decimal3.sum = sum2;
          Decimal3.tan = tan2;
          Decimal3.tanh = tanh2;
          Decimal3.trunc = trunc2;
          if (obj === void 0) obj = {};
          if (obj) {
            if (obj.defaults !== true) {
              ps = ["precision", "rounding", "toExpNeg", "toExpPos", "maxE", "minE", "modulo", "crypto"];
              for (i = 0; i < ps.length; ) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];
            }
          }
          Decimal3.config(obj);
          return Decimal3;
        }
        function div2(x, y) {
          return new this(x).div(y);
        }
        function exp2(x) {
          return new this(x).exp();
        }
        function floor2(x) {
          return finalise2(x = new this(x), x.e + 1, 3);
        }
        function hypot2() {
          var i, n, t = new this(0);
          external2 = false;
          for (i = 0; i < arguments.length; ) {
            n = new this(arguments[i++]);
            if (!n.d) {
              if (n.s) {
                external2 = true;
                return new this(1 / 0);
              }
              t = n;
            } else if (t.d) {
              t = t.plus(n.times(n));
            }
          }
          external2 = true;
          return t.sqrt();
        }
        function isDecimalInstance2(obj) {
          return obj instanceof Decimal2 || obj && obj.toStringTag === tag2 || false;
        }
        function ln2(x) {
          return new this(x).ln();
        }
        function log3(x, y) {
          return new this(x).log(y);
        }
        function log22(x) {
          return new this(x).log(2);
        }
        function log102(x) {
          return new this(x).log(10);
        }
        function max2() {
          return maxOrMin2(this, arguments, -1);
        }
        function min2() {
          return maxOrMin2(this, arguments, 1);
        }
        function mod2(x, y) {
          return new this(x).mod(y);
        }
        function mul2(x, y) {
          return new this(x).mul(y);
        }
        function pow2(x, y) {
          return new this(x).pow(y);
        }
        function random2(sd) {
          var d, e, k, n, i = 0, r = new this(1), rd = [];
          if (sd === void 0) sd = this.precision;
          else checkInt322(sd, 1, MAX_DIGITS2);
          k = Math.ceil(sd / LOG_BASE2);
          if (!this.crypto) {
            for (; i < k; ) rd[i++] = Math.random() * 1e7 | 0;
          } else if (crypto.getRandomValues) {
            d = crypto.getRandomValues(new Uint32Array(k));
            for (; i < k; ) {
              n = d[i];
              if (n >= 429e7) {
                d[i] = crypto.getRandomValues(new Uint32Array(1))[0];
              } else {
                rd[i++] = n % 1e7;
              }
            }
          } else if (crypto.randomBytes) {
            d = crypto.randomBytes(k *= 4);
            for (; i < k; ) {
              n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 127) << 24);
              if (n >= 214e7) {
                crypto.randomBytes(4).copy(d, i);
              } else {
                rd.push(n % 1e7);
                i += 4;
              }
            }
            i = k / 4;
          } else {
            throw Error(cryptoUnavailable2);
          }
          k = rd[--i];
          sd %= LOG_BASE2;
          if (k && sd) {
            n = mathpow2(10, LOG_BASE2 - sd);
            rd[i] = (k / n | 0) * n;
          }
          for (; rd[i] === 0; i--) rd.pop();
          if (i < 0) {
            e = 0;
            rd = [0];
          } else {
            e = -1;
            for (; rd[0] === 0; e -= LOG_BASE2) rd.shift();
            for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;
            if (k < LOG_BASE2) e -= LOG_BASE2 - k;
          }
          r.e = e;
          r.d = rd;
          return r;
        }
        function round2(x) {
          return finalise2(x = new this(x), x.e + 1, this.rounding);
        }
        function sign2(x) {
          x = new this(x);
          return x.d ? x.d[0] ? x.s : 0 * x.s : x.s || NaN;
        }
        function sin2(x) {
          return new this(x).sin();
        }
        function sinh2(x) {
          return new this(x).sinh();
        }
        function sqrt2(x) {
          return new this(x).sqrt();
        }
        function sub2(x, y) {
          return new this(x).sub(y);
        }
        function sum2() {
          var i = 0, args = arguments, x = new this(args[i]);
          external2 = false;
          for (; x.s && ++i < args.length; ) x = x.plus(args[i]);
          external2 = true;
          return finalise2(x, this.precision, this.rounding);
        }
        function tan2(x) {
          return new this(x).tan();
        }
        function tanh2(x) {
          return new this(x).tanh();
        }
        function trunc2(x) {
          return finalise2(x = new this(x), x.e + 1, 1);
        }
        Decimal2 = clone2(DEFAULTS2);
        Decimal2.prototype.constructor = Decimal2;
        Decimal2["default"] = Decimal2.Decimal = Decimal2;
        LN102 = new Decimal2(LN102);
        PI2 = new Decimal2(PI2);
        if (module.exports) {
          if (typeof Symbol == "function" && typeof Symbol.iterator == "symbol") {
            P2[Symbol["for"]("nodejs.util.inspect.custom")] = P2.toString;
            P2[Symbol.toStringTag] = "Decimal";
          }
          module.exports = Decimal2;
        } else {
          if (!globalScope) {
            globalScope = typeof self != "undefined" && self && self.self == self ? self : window;
          }
          noConflict = globalScope.Decimal;
          Decimal2.noConflict = function() {
            globalScope.Decimal = noConflict;
            return Decimal2;
          };
          globalScope.Decimal = Decimal2;
        }
      })(decimal$2);
    })(decimal$3);
    return decimal$3.exports;
  }
  var FormatDateTime = {};
  var PartitionDateTimePattern = {};
  var FormatDateTimePattern = {};
  var ToLocalTime = {};
  var hasRequiredToLocalTime;
  function requireToLocalTime() {
    if (hasRequiredToLocalTime) return ToLocalTime;
    hasRequiredToLocalTime = 1;
    Object.defineProperty(ToLocalTime, "__esModule", { value: true });
    ToLocalTime.ToLocalTime = ToLocalTime$1;
    var ecma402_abstract_1 = require$$1;
    function getApplicableZoneData(t, timeZone, tzData) {
      var _a2;
      var zoneData = tzData[timeZone];
      if (!zoneData) {
        return [0, false];
      }
      var i = 0;
      var offset = 0;
      var dst = false;
      for (; i <= zoneData.length; i++) {
        if (i === zoneData.length || zoneData[i][0] * 1e3 > t) {
          _a2 = zoneData[i - 1], offset = _a2[2], dst = _a2[3];
          break;
        }
      }
      return [offset * 1e3, dst];
    }
    function ToLocalTime$1(t, calendar, timeZone, _a2) {
      var tzData = _a2.tzData;
      (0, ecma402_abstract_1.invariant)(calendar === "gregory", "We only support Gregory calendar right now");
      var _b = getApplicableZoneData(t.toNumber(), timeZone, tzData), timeZoneOffset = _b[0], inDST = _b[1];
      var tz = t.plus(timeZoneOffset).toNumber();
      var year2 = (0, ecma402_abstract_1.YearFromTime)(tz);
      return {
        weekday: (0, ecma402_abstract_1.WeekDay)(tz),
        era: year2 < 0 ? "BC" : "AD",
        year: year2,
        relatedYear: void 0,
        yearName: void 0,
        month: (0, ecma402_abstract_1.MonthFromTime)(tz),
        day: (0, ecma402_abstract_1.DateFromTime)(tz),
        hour: (0, ecma402_abstract_1.HourFromTime)(tz),
        minute: (0, ecma402_abstract_1.MinFromTime)(tz),
        second: (0, ecma402_abstract_1.SecFromTime)(tz),
        millisecond: (0, ecma402_abstract_1.msFromTime)(tz),
        inDST,
        // IMPORTANT: Not in spec
        timeZoneOffset
      };
    }
    return ToLocalTime;
  }
  var utils = {};
  var hasRequiredUtils;
  function requireUtils() {
    if (hasRequiredUtils) return utils;
    hasRequiredUtils = 1;
    Object.defineProperty(utils, "__esModule", { value: true });
    utils.offsetPenalty = utils.shortMorePenalty = utils.shortLessPenalty = utils.longMorePenalty = utils.longLessPenalty = utils.differentNumericTypePenalty = utils.additionPenalty = utils.removalPenalty = utils.DATE_TIME_PROPS = void 0;
    utils.DATE_TIME_PROPS = [
      "weekday",
      "era",
      "year",
      "month",
      "day",
      "dayPeriod",
      "hour",
      "minute",
      "second",
      "fractionalSecondDigits",
      "timeZoneName"
    ];
    utils.removalPenalty = 120;
    utils.additionPenalty = 20;
    utils.differentNumericTypePenalty = 15;
    utils.longLessPenalty = 8;
    utils.longMorePenalty = 6;
    utils.shortLessPenalty = 6;
    utils.shortMorePenalty = 3;
    utils.offsetPenalty = 1;
    return utils;
  }
  var hasRequiredFormatDateTimePattern;
  function requireFormatDateTimePattern() {
    if (hasRequiredFormatDateTimePattern) return FormatDateTimePattern;
    hasRequiredFormatDateTimePattern = 1;
    Object.defineProperty(FormatDateTimePattern, "__esModule", { value: true });
    FormatDateTimePattern.FormatDateTimePattern = FormatDateTimePattern$1;
    var tslib_1 = require$$0$1;
    var ecma402_abstract_1 = require$$1;
    var decimal_js_1 = tslib_1.__importDefault(requireDecimal());
    var ToLocalTime_1 = requireToLocalTime();
    var utils_1 = requireUtils();
    function pad(n) {
      if (n < 10) {
        return "0".concat(n);
      }
      return String(n);
    }
    function offsetToGmtString(gmtFormat, hourFormat, offsetInMs, style) {
      var offsetInMinutes = Math.floor(offsetInMs / 6e4);
      var mins = Math.abs(offsetInMinutes) % 60;
      var hours2 = Math.floor(Math.abs(offsetInMinutes) / 60);
      var _a2 = hourFormat.split(";"), positivePattern = _a2[0], negativePattern = _a2[1];
      var offsetStr = "";
      var pattern = offsetInMs < 0 ? negativePattern : positivePattern;
      if (style === "long") {
        offsetStr = pattern.replace("HH", pad(hours2)).replace("H", String(hours2)).replace("mm", pad(mins)).replace("m", String(mins));
      } else if (mins || hours2) {
        if (!mins) {
          pattern = pattern.replace(/:?m+/, "");
        }
        offsetStr = pattern.replace(/H+/, String(hours2)).replace(/m+/, String(mins));
      }
      return gmtFormat.replace("{0}", offsetStr);
    }
    function FormatDateTimePattern$1(dtf, patternParts, x, _a2) {
      var getInternalSlots = _a2.getInternalSlots, localeData = _a2.localeData, getDefaultTimeZone = _a2.getDefaultTimeZone, tzData = _a2.tzData;
      x = (0, ecma402_abstract_1.TimeClip)(x);
      var internalSlots = getInternalSlots(dtf);
      var dataLocale = internalSlots.dataLocale;
      var dataLocaleData = localeData[dataLocale];
      var locale = internalSlots.locale;
      var nfOptions = /* @__PURE__ */ Object.create(null);
      nfOptions.useGrouping = false;
      var nf = (0, ecma402_abstract_1.createMemoizedNumberFormat)(locale, nfOptions);
      var nf2Options = /* @__PURE__ */ Object.create(null);
      nf2Options.minimumIntegerDigits = 2;
      nf2Options.useGrouping = false;
      var nf2 = (0, ecma402_abstract_1.createMemoizedNumberFormat)(locale, nf2Options);
      var fractionalSecondDigits = internalSlots.fractionalSecondDigits;
      var nf3;
      if (fractionalSecondDigits !== void 0) {
        var nf3Options = /* @__PURE__ */ Object.create(null);
        nf3Options.minimumIntegerDigits = fractionalSecondDigits;
        nf3Options.useGrouping = false;
        nf3 = (0, ecma402_abstract_1.createMemoizedNumberFormat)(locale, nf3Options);
      }
      var tm = (0, ToLocalTime_1.ToLocalTime)(
        x,
        // @ts-ignore
        internalSlots.calendar,
        internalSlots.timeZone,
        { tzData }
      );
      var result = [];
      for (var _i = 0, patternParts_1 = patternParts; _i < patternParts_1.length; _i++) {
        var patternPart = patternParts_1[_i];
        var p = patternPart.type;
        if (p === "literal") {
          result.push({
            type: "literal",
            value: patternPart.value
          });
        } else if (p === "fractionalSecondDigits") {
          var v = new decimal_js_1.default(tm.millisecond).times(10).pow((fractionalSecondDigits || 0) - 3).floor().toNumber();
          result.push({
            type: "fractionalSecond",
            value: nf3.format(v)
          });
        } else if (p === "dayPeriod") {
          var f = internalSlots.dayPeriod;
          var fv = tm[f];
          result.push({ type: p, value: fv });
        } else if (p === "timeZoneName") {
          var f = internalSlots.timeZoneName;
          var fv = void 0;
          var timeZoneName = dataLocaleData.timeZoneName, gmtFormat = dataLocaleData.gmtFormat, hourFormat = dataLocaleData.hourFormat;
          var timeZone = internalSlots.timeZone || getDefaultTimeZone();
          var timeZoneData = timeZoneName[timeZone];
          if (timeZoneData && timeZoneData[f]) {
            fv = timeZoneData[f][+tm.inDST];
          } else {
            fv = offsetToGmtString(gmtFormat, hourFormat, tm.timeZoneOffset, f);
          }
          result.push({ type: p, value: fv });
        } else if (utils_1.DATE_TIME_PROPS.indexOf(p) > -1) {
          var fv = "";
          var f = internalSlots[p];
          var v = tm[p];
          if (p === "year" && v <= 0) {
            v = 1 - v;
          }
          if (p === "month") {
            v++;
          }
          var hourCycle = internalSlots.hourCycle;
          if (p === "hour" && (hourCycle === "h11" || hourCycle === "h12")) {
            v = v % 12;
            if (v === 0 && hourCycle === "h12") {
              v = 12;
            }
          }
          if (p === "hour" && hourCycle === "h24") {
            if (v === 0) {
              v = 24;
            }
          }
          if (f === "numeric") {
            fv = nf.format(v);
          } else if (f === "2-digit") {
            fv = nf2.format(v);
            if (fv.length > 2) {
              fv = fv.slice(fv.length - 2, fv.length);
            }
          } else if (f === "narrow" || f === "short" || f === "long") {
            if (p === "era") {
              fv = dataLocaleData[p][f][v];
            } else if (p === "month") {
              fv = dataLocaleData.month[f][v - 1];
            } else {
              fv = dataLocaleData[p][f][v];
            }
          }
          result.push({
            type: p,
            value: fv
          });
        } else if (p === "ampm") {
          var v = tm.hour;
          var fv = void 0;
          if (v > 11) {
            fv = dataLocaleData.pm;
          } else {
            fv = dataLocaleData.am;
          }
          result.push({
            type: "dayPeriod",
            value: fv
          });
        } else if (p === "relatedYear") {
          var v = tm.relatedYear;
          var fv = nf.format(v);
          result.push({
            // @ts-ignore TODO: Fix TS type
            type: "relatedYear",
            value: fv
          });
        } else if (p === "yearName") {
          var v = tm.yearName;
          var fv = nf.format(v);
          result.push({
            // @ts-ignore TODO: Fix TS type
            type: "yearName",
            value: fv
          });
        }
      }
      return result;
    }
    return FormatDateTimePattern;
  }
  var hasRequiredPartitionDateTimePattern;
  function requirePartitionDateTimePattern() {
    if (hasRequiredPartitionDateTimePattern) return PartitionDateTimePattern;
    hasRequiredPartitionDateTimePattern = 1;
    Object.defineProperty(PartitionDateTimePattern, "__esModule", { value: true });
    PartitionDateTimePattern.PartitionDateTimePattern = PartitionDateTimePattern$1;
    var ecma402_abstract_1 = require$$1;
    var FormatDateTimePattern_1 = requireFormatDateTimePattern();
    function PartitionDateTimePattern$1(dtf, x, implDetails) {
      x = (0, ecma402_abstract_1.TimeClip)(x);
      (0, ecma402_abstract_1.invariant)(!x.isNaN(), "Invalid time", RangeError);
      var getInternalSlots = implDetails.getInternalSlots;
      var internalSlots = getInternalSlots(dtf);
      var pattern = internalSlots.pattern;
      return (0, FormatDateTimePattern_1.FormatDateTimePattern)(dtf, (0, ecma402_abstract_1.PartitionPattern)(pattern), x, implDetails);
    }
    return PartitionDateTimePattern;
  }
  var hasRequiredFormatDateTime;
  function requireFormatDateTime() {
    if (hasRequiredFormatDateTime) return FormatDateTime;
    hasRequiredFormatDateTime = 1;
    Object.defineProperty(FormatDateTime, "__esModule", { value: true });
    FormatDateTime.FormatDateTime = FormatDateTime$1;
    var PartitionDateTimePattern_1 = requirePartitionDateTimePattern();
    function FormatDateTime$1(dtf, x, implDetails) {
      var parts = (0, PartitionDateTimePattern_1.PartitionDateTimePattern)(dtf, x, implDetails);
      var result = "";
      for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {
        var part = parts_1[_i];
        result += part.value;
      }
      return result;
    }
    return FormatDateTime;
  }
  var FormatDateTimeRange = {};
  var PartitionDateTimeRangePattern = {};
  var hasRequiredPartitionDateTimeRangePattern;
  function requirePartitionDateTimeRangePattern() {
    if (hasRequiredPartitionDateTimeRangePattern) return PartitionDateTimeRangePattern;
    hasRequiredPartitionDateTimeRangePattern = 1;
    Object.defineProperty(PartitionDateTimeRangePattern, "__esModule", { value: true });
    PartitionDateTimeRangePattern.PartitionDateTimeRangePattern = PartitionDateTimeRangePattern$1;
    var ecma402_abstract_1 = require$$1;
    var FormatDateTimePattern_1 = requireFormatDateTimePattern();
    var ToLocalTime_1 = requireToLocalTime();
    var TABLE_2_FIELDS = [
      "era",
      "year",
      "month",
      "day",
      "dayPeriod",
      "ampm",
      "hour",
      "minute",
      "second",
      "fractionalSecondDigits"
    ];
    function PartitionDateTimeRangePattern$1(dtf, x, y, implDetails) {
      x = (0, ecma402_abstract_1.TimeClip)(x);
      if (x.isNaN()) {
        throw new RangeError("Invalid start time");
      }
      y = (0, ecma402_abstract_1.TimeClip)(y);
      if (y.isNaN()) {
        throw new RangeError("Invalid end time");
      }
      var getInternalSlots = implDetails.getInternalSlots, tzData = implDetails.tzData;
      var internalSlots = getInternalSlots(dtf);
      var tm1 = (0, ToLocalTime_1.ToLocalTime)(
        x,
        // @ts-ignore
        internalSlots.calendar,
        internalSlots.timeZone,
        { tzData }
      );
      var tm2 = (0, ToLocalTime_1.ToLocalTime)(
        y,
        // @ts-ignore
        internalSlots.calendar,
        internalSlots.timeZone,
        { tzData }
      );
      var pattern = internalSlots.pattern, rangePatterns = internalSlots.rangePatterns;
      var rangePattern;
      var dateFieldsPracticallyEqual = true;
      var patternContainsLargerDateField = false;
      for (var _i = 0, TABLE_2_FIELDS_1 = TABLE_2_FIELDS; _i < TABLE_2_FIELDS_1.length; _i++) {
        var fieldName = TABLE_2_FIELDS_1[_i];
        if (dateFieldsPracticallyEqual && !patternContainsLargerDateField) {
          var rp = fieldName in rangePatterns ? rangePatterns[fieldName] : void 0;
          if (rangePattern !== void 0 && rp === void 0) {
            patternContainsLargerDateField = true;
          } else {
            rangePattern = rp;
            if (fieldName === "ampm") {
              var v1 = tm1.hour;
              var v2 = tm2.hour;
              if (v1 > 11 && v2 < 11 || v1 < 11 && v2 > 11) {
                dateFieldsPracticallyEqual = false;
              }
            } else if (fieldName === "dayPeriod") ;
            else if (fieldName === "fractionalSecondDigits") {
              var fractionalSecondDigits = internalSlots.fractionalSecondDigits;
              if (fractionalSecondDigits === void 0) {
                fractionalSecondDigits = 3;
              }
              var v1 = Math.floor(tm1.millisecond * Math.pow(10, fractionalSecondDigits - 3));
              var v2 = Math.floor(tm2.millisecond * Math.pow(10, fractionalSecondDigits - 3));
              if (!(0, ecma402_abstract_1.SameValue)(v1, v2)) {
                dateFieldsPracticallyEqual = false;
              }
            } else {
              var v1 = tm1[fieldName];
              var v2 = tm2[fieldName];
              if (!(0, ecma402_abstract_1.SameValue)(v1, v2)) {
                dateFieldsPracticallyEqual = false;
              }
            }
          }
        }
      }
      if (dateFieldsPracticallyEqual) {
        var result_2 = (0, FormatDateTimePattern_1.FormatDateTimePattern)(dtf, (0, ecma402_abstract_1.PartitionPattern)(pattern), x, implDetails);
        for (var _a2 = 0, result_1 = result_2; _a2 < result_1.length; _a2++) {
          var r = result_1[_a2];
          r.source = ecma402_abstract_1.RangePatternType.shared;
        }
        return result_2;
      }
      var result = [];
      if (rangePattern === void 0) {
        rangePattern = rangePatterns.default;
        for (var _b = 0, _c = rangePattern.patternParts; _b < _c.length; _b++) {
          var patternPart = _c[_b];
          if (patternPart.pattern === "{0}" || patternPart.pattern === "{1}") {
            patternPart.pattern = pattern;
          }
        }
      }
      for (var _d = 0, _e = rangePattern.patternParts; _d < _e.length; _d++) {
        var rangePatternPart = _e[_d];
        var source = rangePatternPart.source, pattern_1 = rangePatternPart.pattern;
        var z = void 0;
        if (source === ecma402_abstract_1.RangePatternType.startRange || source === ecma402_abstract_1.RangePatternType.shared) {
          z = x;
        } else {
          z = y;
        }
        var patternParts = (0, ecma402_abstract_1.PartitionPattern)(pattern_1);
        var partResult = (0, FormatDateTimePattern_1.FormatDateTimePattern)(dtf, patternParts, z, implDetails);
        for (var _f = 0, partResult_1 = partResult; _f < partResult_1.length; _f++) {
          var r = partResult_1[_f];
          r.source = source;
        }
        result = result.concat(partResult);
      }
      return result;
    }
    return PartitionDateTimeRangePattern;
  }
  var hasRequiredFormatDateTimeRange;
  function requireFormatDateTimeRange() {
    if (hasRequiredFormatDateTimeRange) return FormatDateTimeRange;
    hasRequiredFormatDateTimeRange = 1;
    Object.defineProperty(FormatDateTimeRange, "__esModule", { value: true });
    FormatDateTimeRange.FormatDateTimeRange = FormatDateTimeRange$1;
    var PartitionDateTimeRangePattern_1 = requirePartitionDateTimeRangePattern();
    function FormatDateTimeRange$1(dtf, x, y, implDetails) {
      var parts = (0, PartitionDateTimeRangePattern_1.PartitionDateTimeRangePattern)(dtf, x, y, implDetails);
      var result = "";
      for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {
        var part = parts_1[_i];
        result += part.value;
      }
      return result;
    }
    return FormatDateTimeRange;
  }
  var FormatDateTimeRangeToParts = {};
  var hasRequiredFormatDateTimeRangeToParts;
  function requireFormatDateTimeRangeToParts() {
    if (hasRequiredFormatDateTimeRangeToParts) return FormatDateTimeRangeToParts;
    hasRequiredFormatDateTimeRangeToParts = 1;
    Object.defineProperty(FormatDateTimeRangeToParts, "__esModule", { value: true });
    FormatDateTimeRangeToParts.FormatDateTimeRangeToParts = FormatDateTimeRangeToParts$1;
    var PartitionDateTimeRangePattern_1 = requirePartitionDateTimeRangePattern();
    function FormatDateTimeRangeToParts$1(dtf, x, y, implDetails) {
      var parts = (0, PartitionDateTimeRangePattern_1.PartitionDateTimeRangePattern)(dtf, x, y, implDetails);
      var result = new Array(0);
      for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {
        var part = parts_1[_i];
        result.push({
          type: part.type,
          value: part.value,
          source: part.source
        });
      }
      return result;
    }
    return FormatDateTimeRangeToParts;
  }
  var FormatDateTimeToParts = {};
  var hasRequiredFormatDateTimeToParts;
  function requireFormatDateTimeToParts() {
    if (hasRequiredFormatDateTimeToParts) return FormatDateTimeToParts;
    hasRequiredFormatDateTimeToParts = 1;
    Object.defineProperty(FormatDateTimeToParts, "__esModule", { value: true });
    FormatDateTimeToParts.FormatDateTimeToParts = FormatDateTimeToParts$1;
    var ecma402_abstract_1 = require$$1;
    var PartitionDateTimePattern_1 = requirePartitionDateTimePattern();
    function FormatDateTimeToParts$1(dtf, x, implDetails) {
      var parts = (0, PartitionDateTimePattern_1.PartitionDateTimePattern)(dtf, x, implDetails);
      var result = (0, ecma402_abstract_1.ArrayCreate)(0);
      for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {
        var part = parts_1[_i];
        result.push({
          type: part.type,
          value: part.value
        });
      }
      return result;
    }
    return FormatDateTimeToParts;
  }
  var InitializeDateTimeFormat = {};
  const require$$0 = /* @__PURE__ */ getAugmentedNamespace(lib$1);
  var BasicFormatMatcher = {};
  var hasRequiredBasicFormatMatcher;
  function requireBasicFormatMatcher() {
    if (hasRequiredBasicFormatMatcher) return BasicFormatMatcher;
    hasRequiredBasicFormatMatcher = 1;
    Object.defineProperty(BasicFormatMatcher, "__esModule", { value: true });
    BasicFormatMatcher.BasicFormatMatcher = BasicFormatMatcher$1;
    var tslib_1 = require$$0$1;
    var ecma402_abstract_1 = require$$1;
    var utils_1 = requireUtils();
    function BasicFormatMatcher$1(options, formats) {
      var bestScore = -Infinity;
      var bestFormat = formats[0];
      (0, ecma402_abstract_1.invariant)(Array.isArray(formats), "formats should be a list of things");
      for (var _i = 0, formats_1 = formats; _i < formats_1.length; _i++) {
        var format2 = formats_1[_i];
        var score = 0;
        for (var _a2 = 0, DATE_TIME_PROPS_1 = utils_1.DATE_TIME_PROPS; _a2 < DATE_TIME_PROPS_1.length; _a2++) {
          var prop = DATE_TIME_PROPS_1[_a2];
          var optionsProp = options[prop];
          var formatProp = format2[prop];
          if (optionsProp === void 0 && formatProp !== void 0) {
            score -= utils_1.additionPenalty;
          } else if (optionsProp !== void 0 && formatProp === void 0) {
            score -= utils_1.removalPenalty;
          } else if (prop === "timeZoneName") {
            if (optionsProp === "short" || optionsProp === "shortGeneric") {
              if (formatProp === "shortOffset") {
                score -= utils_1.offsetPenalty;
              } else if (formatProp === "longOffset") {
                score -= utils_1.offsetPenalty + utils_1.shortMorePenalty;
              } else if (optionsProp === "short" && formatProp === "long") {
                score -= utils_1.shortMorePenalty;
              } else if (optionsProp === "shortGeneric" && formatProp === "longGeneric") {
                score -= utils_1.shortMorePenalty;
              } else if (optionsProp !== formatProp) {
                score -= utils_1.removalPenalty;
              }
            } else if (optionsProp === "shortOffset" && formatProp === "longOffset") {
              score -= utils_1.shortMorePenalty;
            } else if (optionsProp === "long" || optionsProp === "longGeneric") {
              if (formatProp === "longOffset") {
                score -= utils_1.offsetPenalty;
              } else if (formatProp === "shortOffset") {
                score -= utils_1.offsetPenalty + utils_1.longLessPenalty;
              } else if (optionsProp === "long" && formatProp === "short") {
                score -= utils_1.longLessPenalty;
              } else if (optionsProp === "longGeneric" && formatProp === "shortGeneric") {
                score -= utils_1.longLessPenalty;
              } else if (optionsProp !== formatProp) {
                score -= utils_1.removalPenalty;
              }
            } else if (optionsProp === "longOffset" && formatProp === "shortOffset") {
              score -= utils_1.longLessPenalty;
            } else if (optionsProp !== formatProp) {
              score -= utils_1.removalPenalty;
            }
          } else if (optionsProp !== formatProp) {
            var values = void 0;
            if (prop === "fractionalSecondDigits") {
              values = [1, 2, 3];
            } else {
              values = ["2-digit", "numeric", "narrow", "short", "long"];
            }
            var optionsPropIndex = values.indexOf(optionsProp);
            var formatPropIndex = values.indexOf(formatProp);
            var delta = Math.max(-2, Math.min(formatPropIndex - optionsPropIndex, 2));
            if (delta === 2) {
              score -= utils_1.longMorePenalty;
            } else if (delta === 1) {
              score -= utils_1.shortMorePenalty;
            } else if (delta === -1) {
              score -= utils_1.shortLessPenalty;
            } else if (delta === -2) {
              score -= utils_1.longLessPenalty;
            }
          }
        }
        if (score > bestScore) {
          bestScore = score;
          bestFormat = format2;
        }
      }
      return tslib_1.__assign({}, bestFormat);
    }
    return BasicFormatMatcher;
  }
  var BestFitFormatMatcher = {};
  var skeleton = {};
  var hasRequiredSkeleton;
  function requireSkeleton() {
    if (hasRequiredSkeleton) return skeleton;
    hasRequiredSkeleton = 1;
    Object.defineProperty(skeleton, "__esModule", { value: true });
    skeleton.processDateTimePattern = processDateTimePattern;
    skeleton.parseDateTimeSkeleton = parseDateTimeSkeleton2;
    skeleton.splitFallbackRangePattern = splitFallbackRangePattern;
    skeleton.splitRangePattern = splitRangePattern;
    var tslib_1 = require$$0$1;
    var ecma402_abstract_1 = require$$1;
    var DATE_TIME_REGEX2 = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
    var expPatternTrimmer = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
    function matchSkeletonPattern(match2, result) {
      var len = match2.length;
      switch (match2[0]) {
        // Era
        case "G":
          result.era = len === 4 ? "long" : len === 5 ? "narrow" : "short";
          return "{era}";
        // Year
        case "y":
        case "Y":
        case "u":
        case "U":
        case "r":
          result.year = len === 2 ? "2-digit" : "numeric";
          return "{year}";
        // Quarter
        case "q":
        case "Q":
          throw new RangeError("`w/Q` (quarter) patterns are not supported");
        // Month
        case "M":
        case "L":
          result.month = ["numeric", "2-digit", "short", "long", "narrow"][len - 1];
          return "{month}";
        // Week
        case "w":
        case "W":
          throw new RangeError("`w/W` (week of year) patterns are not supported");
        case "d":
          result.day = ["numeric", "2-digit"][len - 1];
          return "{day}";
        case "D":
        case "F":
        case "g":
          result.day = "numeric";
          return "{day}";
        // Weekday
        case "E":
          result.weekday = len === 4 ? "long" : len === 5 ? "narrow" : "short";
          return "{weekday}";
        case "e":
          result.weekday = [
            void 0,
            void 0,
            "short",
            "long",
            "narrow",
            "short"
          ][len - 1];
          return "{weekday}";
        case "c":
          result.weekday = [
            void 0,
            void 0,
            "short",
            "long",
            "narrow",
            "short"
          ][len - 1];
          return "{weekday}";
        // Period
        case "a":
        // AM, PM
        case "b":
        // am, pm, noon, midnight
        case "B":
          result.hour12 = true;
          return "{ampm}";
        // Hour
        case "h":
          result.hour = ["numeric", "2-digit"][len - 1];
          result.hour12 = true;
          return "{hour}";
        case "H":
          result.hour = ["numeric", "2-digit"][len - 1];
          return "{hour}";
        case "K":
          result.hour = ["numeric", "2-digit"][len - 1];
          result.hour12 = true;
          return "{hour}";
        case "k":
          result.hour = ["numeric", "2-digit"][len - 1];
          return "{hour}";
        case "j":
        case "J":
        case "C":
          throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");
        // Minute
        case "m":
          result.minute = ["numeric", "2-digit"][len - 1];
          return "{minute}";
        // Second
        case "s":
          result.second = ["numeric", "2-digit"][len - 1];
          return "{second}";
        case "S":
        case "A":
          result.second = "numeric";
          return "{second}";
        // Zone
        case "z":
        // 1..3, 4: specific non-location format
        case "Z":
        // 1..3, 4, 5: The ISO8601 varios formats
        case "O":
        // 1, 4: milliseconds in day short, long
        case "v":
        // 1, 4: generic non-location format
        case "V":
        // 1, 2, 3, 4: time zone ID or city
        case "X":
        // 1, 2, 3, 4: The ISO8601 varios formats
        case "x":
          result.timeZoneName = len < 4 ? "short" : "long";
          return "{timeZoneName}";
      }
      return "";
    }
    function skeletonTokenToTable2(c) {
      switch (c) {
        // Era
        case "G":
          return "era";
        // Year
        case "y":
        case "Y":
        case "u":
        case "U":
        case "r":
          return "year";
        // Month
        case "M":
        case "L":
          return "month";
        // Day
        case "d":
        case "D":
        case "F":
        case "g":
          return "day";
        // Period
        case "a":
        // AM, PM
        case "b":
        // am, pm, noon, midnight
        case "B":
          return "ampm";
        // Hour
        case "h":
        case "H":
        case "K":
        case "k":
          return "hour";
        // Minute
        case "m":
          return "minute";
        // Second
        case "s":
        case "S":
        case "A":
          return "second";
        default:
          throw new RangeError("Invalid range pattern token");
      }
    }
    function processDateTimePattern(pattern, result) {
      var literals = [];
      var pattern12 = pattern.replace(/'{2}/g, "{apostrophe}").replace(/'(.*?)'/g, function(_, literal) {
        literals.push(literal);
        return "$$".concat(literals.length - 1, "$$");
      }).replace(DATE_TIME_REGEX2, function(m) {
        return matchSkeletonPattern(m, result || {});
      });
      if (literals.length) {
        pattern12 = pattern12.replace(/\$\$(\d+)\$\$/g, function(_, i) {
          return literals[+i];
        }).replace(/\{apostrophe\}/g, "'");
      }
      return [
        pattern12.replace(/([\s\uFEFF\xA0])\{ampm\}([\s\uFEFF\xA0])/, "$1").replace("{ampm}", "").replace(expPatternTrimmer, ""),
        pattern12
      ];
    }
    function parseDateTimeSkeleton2(skeleton2, rawPattern, rangePatterns, intervalFormatFallback) {
      if (rawPattern === void 0) {
        rawPattern = skeleton2;
      }
      var result = {
        pattern: "",
        pattern12: "",
        skeleton: skeleton2,
        rawPattern,
        rangePatterns: {},
        rangePatterns12: {}
      };
      if (rangePatterns) {
        for (var k in rangePatterns) {
          var key = skeletonTokenToTable2(k);
          var rawPattern_1 = rangePatterns[k];
          var intervalResult = {
            patternParts: []
          };
          var _a2 = processDateTimePattern(rawPattern_1, intervalResult), pattern_1 = _a2[0], pattern12_1 = _a2[1];
          result.rangePatterns[key] = tslib_1.__assign(tslib_1.__assign({}, intervalResult), { patternParts: splitRangePattern(pattern_1) });
          result.rangePatterns12[key] = tslib_1.__assign(tslib_1.__assign({}, intervalResult), { patternParts: splitRangePattern(pattern12_1) });
        }
      }
      if (intervalFormatFallback) {
        var patternParts = splitFallbackRangePattern(intervalFormatFallback);
        result.rangePatterns.default = {
          patternParts
        };
        result.rangePatterns12.default = {
          patternParts
        };
      }
      skeleton2.replace(DATE_TIME_REGEX2, function(m) {
        return matchSkeletonPattern(m, result);
      });
      var _b = processDateTimePattern(rawPattern), pattern = _b[0], pattern12 = _b[1];
      result.pattern = pattern;
      result.pattern12 = pattern12;
      return result;
    }
    function splitFallbackRangePattern(pattern) {
      var parts = pattern.split(/(\{[0|1]\})/g).filter(Boolean);
      return parts.map(function(pattern2) {
        switch (pattern2) {
          case "{0}":
            return {
              source: ecma402_abstract_1.RangePatternType.startRange,
              pattern: pattern2
            };
          case "{1}":
            return {
              source: ecma402_abstract_1.RangePatternType.endRange,
              pattern: pattern2
            };
          default:
            return {
              source: ecma402_abstract_1.RangePatternType.shared,
              pattern: pattern2
            };
        }
      });
    }
    function splitRangePattern(pattern) {
      var PART_REGEX = /\{(.*?)\}/g;
      var parts = {};
      var match2;
      var splitIndex = 0;
      while (match2 = PART_REGEX.exec(pattern)) {
        if (!(match2[0] in parts)) {
          parts[match2[0]] = match2.index;
        } else {
          splitIndex = match2.index;
          break;
        }
      }
      if (!splitIndex) {
        return [
          {
            source: ecma402_abstract_1.RangePatternType.startRange,
            pattern
          }
        ];
      }
      return [
        {
          source: ecma402_abstract_1.RangePatternType.startRange,
          pattern: pattern.slice(0, splitIndex)
        },
        {
          source: ecma402_abstract_1.RangePatternType.endRange,
          pattern: pattern.slice(splitIndex)
        }
      ];
    }
    return skeleton;
  }
  var hasRequiredBestFitFormatMatcher;
  function requireBestFitFormatMatcher() {
    if (hasRequiredBestFitFormatMatcher) return BestFitFormatMatcher;
    hasRequiredBestFitFormatMatcher = 1;
    Object.defineProperty(BestFitFormatMatcher, "__esModule", { value: true });
    BestFitFormatMatcher.bestFitFormatMatcherScore = bestFitFormatMatcherScore;
    BestFitFormatMatcher.BestFitFormatMatcher = BestFitFormatMatcher$1;
    var tslib_1 = require$$0$1;
    var ecma402_abstract_1 = require$$1;
    var skeleton_1 = requireSkeleton();
    var utils_1 = requireUtils();
    function isNumericType(t) {
      return t === "numeric" || t === "2-digit";
    }
    function bestFitFormatMatcherScore(options, format2) {
      var score = 0;
      if (options.hour12 && !format2.hour12) {
        score -= utils_1.removalPenalty;
      } else if (!options.hour12 && format2.hour12) {
        score -= utils_1.additionPenalty;
      }
      for (var _i = 0, DATE_TIME_PROPS_1 = utils_1.DATE_TIME_PROPS; _i < DATE_TIME_PROPS_1.length; _i++) {
        var prop = DATE_TIME_PROPS_1[_i];
        var optionsProp = options[prop];
        var formatProp = format2[prop];
        if (optionsProp === void 0 && formatProp !== void 0) {
          score -= utils_1.additionPenalty;
        } else if (optionsProp !== void 0 && formatProp === void 0) {
          score -= utils_1.removalPenalty;
        } else if (optionsProp !== formatProp) {
          if (isNumericType(optionsProp) !== isNumericType(formatProp)) {
            score -= utils_1.differentNumericTypePenalty;
          } else {
            var values = ["2-digit", "numeric", "narrow", "short", "long"];
            var optionsPropIndex = values.indexOf(optionsProp);
            var formatPropIndex = values.indexOf(formatProp);
            var delta = Math.max(-2, Math.min(formatPropIndex - optionsPropIndex, 2));
            if (delta === 2) {
              score -= utils_1.longMorePenalty;
            } else if (delta === 1) {
              score -= utils_1.shortMorePenalty;
            } else if (delta === -1) {
              score -= utils_1.shortLessPenalty;
            } else if (delta === -2) {
              score -= utils_1.longLessPenalty;
            }
          }
        }
      }
      return score;
    }
    function BestFitFormatMatcher$1(options, formats) {
      var bestScore = -Infinity;
      var bestFormat = formats[0];
      (0, ecma402_abstract_1.invariant)(Array.isArray(formats), "formats should be a list of things");
      for (var _i = 0, formats_1 = formats; _i < formats_1.length; _i++) {
        var format2 = formats_1[_i];
        var score = bestFitFormatMatcherScore(options, format2);
        if (score > bestScore) {
          bestScore = score;
          bestFormat = format2;
        }
      }
      var skeletonFormat = tslib_1.__assign({}, bestFormat);
      var patternFormat = { rawPattern: bestFormat.rawPattern };
      (0, skeleton_1.processDateTimePattern)(bestFormat.rawPattern, patternFormat);
      for (var prop in skeletonFormat) {
        var skeletonValue = skeletonFormat[prop];
        var patternValue = patternFormat[prop];
        var requestedValue = options[prop];
        if (prop === "minute" || prop === "second") {
          continue;
        }
        if (!requestedValue) {
          continue;
        }
        if (isNumericType(patternValue) && !isNumericType(requestedValue)) {
          continue;
        }
        if (skeletonValue === requestedValue) {
          continue;
        }
        patternFormat[prop] = requestedValue;
      }
      patternFormat.pattern = skeletonFormat.pattern;
      patternFormat.pattern12 = skeletonFormat.pattern12;
      patternFormat.skeleton = skeletonFormat.skeleton;
      patternFormat.rangePatterns = skeletonFormat.rangePatterns;
      patternFormat.rangePatterns12 = skeletonFormat.rangePatterns12;
      return patternFormat;
    }
    return BestFitFormatMatcher;
  }
  var DateTimeStyleFormat = {};
  var hasRequiredDateTimeStyleFormat;
  function requireDateTimeStyleFormat() {
    if (hasRequiredDateTimeStyleFormat) return DateTimeStyleFormat;
    hasRequiredDateTimeStyleFormat = 1;
    Object.defineProperty(DateTimeStyleFormat, "__esModule", { value: true });
    DateTimeStyleFormat.DateTimeStyleFormat = DateTimeStyleFormat$1;
    var ecma402_abstract_1 = require$$1;
    function DateTimeStyleFormat$1(dateStyle, timeStyle, dataLocaleData) {
      var dateFormat, timeFormat;
      if (timeStyle !== void 0) {
        (0, ecma402_abstract_1.invariant)(timeStyle === "full" || timeStyle === "long" || timeStyle === "medium" || timeStyle === "short", "invalid timeStyle");
        timeFormat = dataLocaleData.timeFormat[timeStyle];
      }
      if (dateStyle !== void 0) {
        (0, ecma402_abstract_1.invariant)(dateStyle === "full" || dateStyle === "long" || dateStyle === "medium" || dateStyle === "short", "invalid dateStyle");
        dateFormat = dataLocaleData.dateFormat[dateStyle];
      }
      if (dateStyle !== void 0 && timeStyle !== void 0) {
        var format2 = {};
        for (var field in dateFormat) {
          if (field !== "pattern") {
            format2[field] = dateFormat[field];
          }
        }
        for (var field in timeFormat) {
          if (field !== "pattern" && field !== "pattern12") {
            format2[field] = timeFormat[field];
          }
        }
        var connector = dataLocaleData.dateTimeFormat[dateStyle];
        var pattern = connector.replace("{0}", timeFormat.pattern).replace("{1}", dateFormat.pattern);
        format2.pattern = pattern;
        if ("pattern12" in timeFormat) {
          var pattern12 = connector.replace("{0}", timeFormat.pattern12).replace("{1}", dateFormat.pattern);
          format2.pattern12 = pattern12;
        }
        return format2;
      }
      if (timeStyle !== void 0) {
        return timeFormat;
      }
      (0, ecma402_abstract_1.invariant)(dateStyle !== void 0, "dateStyle should not be undefined");
      return dateFormat;
    }
    return DateTimeStyleFormat;
  }
  var ToDateTimeOptions = {};
  var hasRequiredToDateTimeOptions;
  function requireToDateTimeOptions() {
    if (hasRequiredToDateTimeOptions) return ToDateTimeOptions;
    hasRequiredToDateTimeOptions = 1;
    Object.defineProperty(ToDateTimeOptions, "__esModule", { value: true });
    ToDateTimeOptions.ToDateTimeOptions = ToDateTimeOptions$1;
    var ecma402_abstract_1 = require$$1;
    function ToDateTimeOptions$1(options, required, defaults) {
      if (options === void 0) {
        options = null;
      } else {
        options = (0, ecma402_abstract_1.ToObject)(options);
      }
      options = Object.create(options);
      var needDefaults = true;
      if (required === "date" || required === "any") {
        for (var _i = 0, _a2 = ["weekday", "year", "month", "day"]; _i < _a2.length; _i++) {
          var prop = _a2[_i];
          var value2 = options[prop];
          if (value2 !== void 0) {
            needDefaults = false;
          }
        }
      }
      if (required === "time" || required === "any") {
        for (var _b = 0, _c = [
          "dayPeriod",
          "hour",
          "minute",
          "second",
          "fractionalSecondDigits"
        ]; _b < _c.length; _b++) {
          var prop = _c[_b];
          var value2 = options[prop];
          if (value2 !== void 0) {
            needDefaults = false;
          }
        }
      }
      if (options.dateStyle !== void 0 || options.timeStyle !== void 0) {
        needDefaults = false;
      }
      if (required === "date" && options.timeStyle) {
        throw new TypeError("Intl.DateTimeFormat date was required but timeStyle was included");
      }
      if (required === "time" && options.dateStyle) {
        throw new TypeError("Intl.DateTimeFormat time was required but dateStyle was included");
      }
      if (needDefaults && (defaults === "date" || defaults === "all")) {
        for (var _d = 0, _e = ["year", "month", "day"]; _d < _e.length; _d++) {
          var prop = _e[_d];
          options[prop] = "numeric";
        }
      }
      if (needDefaults && (defaults === "time" || defaults === "all")) {
        for (var _f = 0, _g = ["hour", "minute", "second"]; _f < _g.length; _f++) {
          var prop = _g[_f];
          options[prop] = "numeric";
        }
      }
      return options;
    }
    return ToDateTimeOptions;
  }
  var hasRequiredInitializeDateTimeFormat;
  function requireInitializeDateTimeFormat() {
    if (hasRequiredInitializeDateTimeFormat) return InitializeDateTimeFormat;
    hasRequiredInitializeDateTimeFormat = 1;
    Object.defineProperty(InitializeDateTimeFormat, "__esModule", { value: true });
    InitializeDateTimeFormat.InitializeDateTimeFormat = InitializeDateTimeFormat$1;
    var ecma402_abstract_1 = require$$1;
    var intl_localematcher_1 = require$$0;
    var BasicFormatMatcher_1 = requireBasicFormatMatcher();
    var BestFitFormatMatcher_1 = requireBestFitFormatMatcher();
    var DateTimeStyleFormat_1 = requireDateTimeStyleFormat();
    var ToDateTimeOptions_1 = requireToDateTimeOptions();
    var utils_1 = requireUtils();
    function isTimeRelated(opt) {
      for (var _i = 0, _a2 = ["hour", "minute", "second"]; _i < _a2.length; _i++) {
        var prop = _a2[_i];
        var value2 = opt[prop];
        if (value2 !== void 0) {
          return true;
        }
      }
      return false;
    }
    function resolveHourCycle(hc, hcDefault, hour12) {
      if (hc == null) {
        hc = hcDefault;
      }
      if (hour12 !== void 0) {
        if (hour12) {
          if (hcDefault === "h11" || hcDefault === "h23") {
            hc = "h11";
          } else {
            hc = "h12";
          }
        } else {
          (0, ecma402_abstract_1.invariant)(!hour12, "hour12 must not be set");
          if (hcDefault === "h11" || hcDefault === "h23") {
            hc = "h23";
          } else {
            hc = "h24";
          }
        }
      }
      return hc;
    }
    var TYPE_REGEX = /^[a-z0-9]{3,8}$/i;
    function InitializeDateTimeFormat$1(dtf, locales, opts, _a2) {
      var getInternalSlots = _a2.getInternalSlots, availableLocales = _a2.availableLocales, localeData = _a2.localeData, getDefaultLocale = _a2.getDefaultLocale, getDefaultTimeZone = _a2.getDefaultTimeZone, relevantExtensionKeys = _a2.relevantExtensionKeys, tzData = _a2.tzData, uppercaseLinks = _a2.uppercaseLinks;
      var requestedLocales = (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales);
      var options = (0, ToDateTimeOptions_1.ToDateTimeOptions)(opts, "any", "date");
      var opt = /* @__PURE__ */ Object.create(null);
      var matcher = (0, ecma402_abstract_1.GetOption)(options, "localeMatcher", "string", ["lookup", "best fit"], "best fit");
      opt.localeMatcher = matcher;
      var calendar = (0, ecma402_abstract_1.GetOption)(options, "calendar", "string", void 0, void 0);
      if (calendar !== void 0 && !TYPE_REGEX.test(calendar)) {
        throw new RangeError("Malformed calendar");
      }
      var internalSlots = getInternalSlots(dtf);
      opt.ca = calendar;
      var numberingSystem = (0, ecma402_abstract_1.GetOption)(options, "numberingSystem", "string", void 0, void 0);
      if (numberingSystem !== void 0 && !TYPE_REGEX.test(numberingSystem)) {
        throw new RangeError("Malformed numbering system");
      }
      opt.nu = numberingSystem;
      var hour12 = (0, ecma402_abstract_1.GetOption)(options, "hour12", "boolean", void 0, void 0);
      var hourCycle = (0, ecma402_abstract_1.GetOption)(options, "hourCycle", "string", ["h11", "h12", "h23", "h24"], void 0);
      if (hour12 !== void 0) {
        hourCycle = null;
      }
      opt.hc = hourCycle;
      var r = (0, intl_localematcher_1.ResolveLocale)(availableLocales, requestedLocales, opt, relevantExtensionKeys, localeData, getDefaultLocale);
      internalSlots.locale = r.locale;
      calendar = r.ca;
      internalSlots.calendar = calendar;
      internalSlots.hourCycle = r.hc;
      internalSlots.numberingSystem = r.nu;
      var dataLocale = r.dataLocale;
      internalSlots.dataLocale = dataLocale;
      var timeZone = options.timeZone;
      if (timeZone !== void 0) {
        timeZone = String(timeZone);
        if (!(0, ecma402_abstract_1.IsValidTimeZoneName)(timeZone, {
          zoneNamesFromData: Object.keys(tzData),
          uppercaseLinks
        })) {
          throw new RangeError("Invalid timeZoneName");
        }
        timeZone = (0, ecma402_abstract_1.CanonicalizeTimeZoneName)(timeZone, {
          zoneNames: Object.keys(tzData),
          uppercaseLinks
        });
      } else {
        timeZone = getDefaultTimeZone();
      }
      internalSlots.timeZone = timeZone;
      opt = /* @__PURE__ */ Object.create(null);
      opt.weekday = (0, ecma402_abstract_1.GetOption)(options, "weekday", "string", ["narrow", "short", "long"], void 0);
      opt.era = (0, ecma402_abstract_1.GetOption)(options, "era", "string", ["narrow", "short", "long"], void 0);
      opt.year = (0, ecma402_abstract_1.GetOption)(options, "year", "string", ["2-digit", "numeric"], void 0);
      opt.month = (0, ecma402_abstract_1.GetOption)(options, "month", "string", ["2-digit", "numeric", "narrow", "short", "long"], void 0);
      opt.day = (0, ecma402_abstract_1.GetOption)(options, "day", "string", ["2-digit", "numeric"], void 0);
      opt.hour = (0, ecma402_abstract_1.GetOption)(options, "hour", "string", ["2-digit", "numeric"], void 0);
      opt.minute = (0, ecma402_abstract_1.GetOption)(options, "minute", "string", ["2-digit", "numeric"], void 0);
      opt.second = (0, ecma402_abstract_1.GetOption)(options, "second", "string", ["2-digit", "numeric"], void 0);
      opt.timeZoneName = (0, ecma402_abstract_1.GetOption)(options, "timeZoneName", "string", [
        "long",
        "short",
        "longOffset",
        "shortOffset",
        "longGeneric",
        "shortGeneric"
      ], void 0);
      opt.fractionalSecondDigits = (0, ecma402_abstract_1.GetNumberOption)(options, "fractionalSecondDigits", 1, 3, void 0);
      var dataLocaleData = localeData[dataLocale];
      (0, ecma402_abstract_1.invariant)(!!dataLocaleData, "Missing locale data for ".concat(dataLocale));
      var formats = dataLocaleData.formats[calendar];
      if (!formats) {
        throw new RangeError('Calendar "'.concat(calendar, '" is not supported. Try setting "calendar" to 1 of the following: ').concat(Object.keys(dataLocaleData.formats).join(", ")));
      }
      var formatMatcher = (0, ecma402_abstract_1.GetOption)(options, "formatMatcher", "string", ["basic", "best fit"], "best fit");
      var dateStyle = (0, ecma402_abstract_1.GetOption)(options, "dateStyle", "string", ["full", "long", "medium", "short"], void 0);
      internalSlots.dateStyle = dateStyle;
      var timeStyle = (0, ecma402_abstract_1.GetOption)(options, "timeStyle", "string", ["full", "long", "medium", "short"], void 0);
      internalSlots.timeStyle = timeStyle;
      var bestFormat;
      if (dateStyle === void 0 && timeStyle === void 0) {
        if (formatMatcher === "basic") {
          bestFormat = (0, BasicFormatMatcher_1.BasicFormatMatcher)(opt, formats);
        } else {
          if (isTimeRelated(opt)) {
            var hc = resolveHourCycle(internalSlots.hourCycle, dataLocaleData.hourCycle, hour12);
            opt.hour12 = hc === "h11" || hc === "h12";
          }
          bestFormat = (0, BestFitFormatMatcher_1.BestFitFormatMatcher)(opt, formats);
        }
      } else {
        for (var _i = 0, DATE_TIME_PROPS_1 = utils_1.DATE_TIME_PROPS; _i < DATE_TIME_PROPS_1.length; _i++) {
          var prop = DATE_TIME_PROPS_1[_i];
          var p = opt[prop];
          if (p !== void 0) {
            throw new TypeError("Intl.DateTimeFormat can't set option ".concat(prop, " when ").concat(dateStyle ? "dateStyle" : "timeStyle", " is used"));
          }
        }
        bestFormat = (0, DateTimeStyleFormat_1.DateTimeStyleFormat)(dateStyle, timeStyle, dataLocaleData);
      }
      internalSlots.format = bestFormat;
      for (var prop in opt) {
        var p = bestFormat[prop];
        if (p !== void 0) {
          internalSlots[prop] = p;
        }
      }
      var pattern;
      var rangePatterns;
      if (internalSlots.hour !== void 0) {
        var hc = resolveHourCycle(internalSlots.hourCycle, dataLocaleData.hourCycle, hour12);
        internalSlots.hourCycle = hc;
        if (hc === "h11" || hc === "h12") {
          pattern = bestFormat.pattern12;
          rangePatterns = bestFormat.rangePatterns12;
        } else {
          pattern = bestFormat.pattern;
          rangePatterns = bestFormat.rangePatterns;
        }
      } else {
        internalSlots.hourCycle = void 0;
        pattern = bestFormat.pattern;
        rangePatterns = bestFormat.rangePatterns;
      }
      internalSlots.pattern = pattern;
      internalSlots.rangePatterns = rangePatterns;
      return dtf;
    }
    return InitializeDateTimeFormat;
  }
  var links = {};
  var hasRequiredLinks;
  function requireLinks() {
    if (hasRequiredLinks) return links;
    hasRequiredLinks = 1;
    Object.defineProperty(links, "__esModule", { value: true });
    links.default = {
      "Africa/Accra": "Africa/Abidjan",
      "Africa/Addis_Ababa": "Africa/Nairobi",
      "Africa/Asmara": "Africa/Nairobi",
      "Africa/Asmera": "Africa/Nairobi",
      "Africa/Bamako": "Africa/Abidjan",
      "Africa/Bangui": "Africa/Lagos",
      "Africa/Banjul": "Africa/Abidjan",
      "Africa/Blantyre": "Africa/Maputo",
      "Africa/Brazzaville": "Africa/Lagos",
      "Africa/Bujumbura": "Africa/Maputo",
      "Africa/Conakry": "Africa/Abidjan",
      "Africa/Dakar": "Africa/Abidjan",
      "Africa/Dar_es_Salaam": "Africa/Nairobi",
      "Africa/Djibouti": "Africa/Nairobi",
      "Africa/Douala": "Africa/Lagos",
      "Africa/Freetown": "Africa/Abidjan",
      "Africa/Gaborone": "Africa/Maputo",
      "Africa/Harare": "Africa/Maputo",
      "Africa/Kampala": "Africa/Nairobi",
      "Africa/Kigali": "Africa/Maputo",
      "Africa/Kinshasa": "Africa/Lagos",
      "Africa/Libreville": "Africa/Lagos",
      "Africa/Lome": "Africa/Abidjan",
      "Africa/Luanda": "Africa/Lagos",
      "Africa/Lubumbashi": "Africa/Maputo",
      "Africa/Lusaka": "Africa/Maputo",
      "Africa/Malabo": "Africa/Lagos",
      "Africa/Maseru": "Africa/Johannesburg",
      "Africa/Mbabane": "Africa/Johannesburg",
      "Africa/Mogadishu": "Africa/Nairobi",
      "Africa/Niamey": "Africa/Lagos",
      "Africa/Nouakchott": "Africa/Abidjan",
      "Africa/Ouagadougou": "Africa/Abidjan",
      "Africa/Porto-Novo": "Africa/Lagos",
      "Africa/Timbuktu": "Africa/Abidjan",
      "America/Anguilla": "America/Puerto_Rico",
      "America/Antigua": "America/Puerto_Rico",
      "America/Argentina/ComodRivadavia": "America/Argentina/Catamarca",
      "America/Aruba": "America/Puerto_Rico",
      "America/Atikokan": "America/Panama",
      "America/Atka": "America/Adak",
      "America/Blanc-Sablon": "America/Puerto_Rico",
      "America/Buenos_Aires": "America/Argentina/Buenos_Aires",
      "America/Catamarca": "America/Argentina/Catamarca",
      "America/Cayman": "America/Panama",
      "America/Coral_Harbour": "America/Panama",
      "America/Cordoba": "America/Argentina/Cordoba",
      "America/Creston": "America/Phoenix",
      "America/Curacao": "America/Puerto_Rico",
      "America/Dominica": "America/Puerto_Rico",
      "America/Ensenada": "America/Tijuana",
      "America/Fort_Wayne": "America/Indiana/Indianapolis",
      "America/Godthab": "America/Nuuk",
      "America/Grenada": "America/Puerto_Rico",
      "America/Guadeloupe": "America/Puerto_Rico",
      "America/Indianapolis": "America/Indiana/Indianapolis",
      "America/Jujuy": "America/Argentina/Jujuy",
      "America/Knox_IN": "America/Indiana/Knox",
      "America/Kralendijk": "America/Puerto_Rico",
      "America/Louisville": "America/Kentucky/Louisville",
      "America/Lower_Princes": "America/Puerto_Rico",
      "America/Marigot": "America/Puerto_Rico",
      "America/Mendoza": "America/Argentina/Mendoza",
      "America/Montreal": "America/Toronto",
      "America/Montserrat": "America/Puerto_Rico",
      "America/Nassau": "America/Toronto",
      "America/Nipigon": "America/Toronto",
      "America/Pangnirtung": "America/Iqaluit",
      "America/Port_of_Spain": "America/Puerto_Rico",
      "America/Porto_Acre": "America/Rio_Branco",
      "America/Rainy_River": "America/Winnipeg",
      "America/Rosario": "America/Argentina/Cordoba",
      "America/Santa_Isabel": "America/Tijuana",
      "America/Shiprock": "America/Denver",
      "America/St_Barthelemy": "America/Puerto_Rico",
      "America/St_Kitts": "America/Puerto_Rico",
      "America/St_Lucia": "America/Puerto_Rico",
      "America/St_Thomas": "America/Puerto_Rico",
      "America/St_Vincent": "America/Puerto_Rico",
      "America/Thunder_Bay": "America/Toronto",
      "America/Tortola": "America/Puerto_Rico",
      "America/Virgin": "America/Puerto_Rico",
      "America/Yellowknife": "America/Edmonton",
      "Antarctica/DumontDUrville": "Pacific/Port_Moresby",
      "Antarctica/McMurdo": "Pacific/Auckland",
      "Antarctica/South_Pole": "Pacific/Auckland",
      "Antarctica/Syowa": "Asia/Riyadh",
      "Arctic/Longyearbyen": "Europe/Berlin",
      "Asia/Aden": "Asia/Riyadh",
      "Asia/Ashkhabad": "Asia/Ashgabat",
      "Asia/Bahrain": "Asia/Qatar",
      "Asia/Brunei": "Asia/Kuching",
      "Asia/Calcutta": "Asia/Kolkata",
      "Asia/Choibalsan": "Asia/Ulaanbaatar",
      "Asia/Chongqing": "Asia/Shanghai",
      "Asia/Chungking": "Asia/Shanghai",
      "Asia/Dacca": "Asia/Dhaka",
      "Asia/Harbin": "Asia/Shanghai",
      "Asia/Istanbul": "Europe/Istanbul",
      "Asia/Kashgar": "Asia/Urumqi",
      "Asia/Katmandu": "Asia/Kathmandu",
      "Asia/Kuala_Lumpur": "Asia/Singapore",
      "Asia/Kuwait": "Asia/Riyadh",
      "Asia/Macao": "Asia/Macau",
      "Asia/Muscat": "Asia/Dubai",
      "Asia/Phnom_Penh": "Asia/Bangkok",
      "Asia/Rangoon": "Asia/Yangon",
      "Asia/Saigon": "Asia/Ho_Chi_Minh",
      "Asia/Tel_Aviv": "Asia/Jerusalem",
      "Asia/Thimbu": "Asia/Thimphu",
      "Asia/Ujung_Pandang": "Asia/Makassar",
      "Asia/Ulan_Bator": "Asia/Ulaanbaatar",
      "Asia/Vientiane": "Asia/Bangkok",
      "Atlantic/Faeroe": "Atlantic/Faroe",
      "Atlantic/Jan_Mayen": "Europe/Berlin",
      "Atlantic/Reykjavik": "Africa/Abidjan",
      "Atlantic/St_Helena": "Africa/Abidjan",
      "Australia/ACT": "Australia/Sydney",
      "Australia/Canberra": "Australia/Sydney",
      "Australia/Currie": "Australia/Hobart",
      "Australia/LHI": "Australia/Lord_Howe",
      "Australia/NSW": "Australia/Sydney",
      "Australia/North": "Australia/Darwin",
      "Australia/Queensland": "Australia/Brisbane",
      "Australia/South": "Australia/Adelaide",
      "Australia/Tasmania": "Australia/Hobart",
      "Australia/Victoria": "Australia/Melbourne",
      "Australia/West": "Australia/Perth",
      "Australia/Yancowinna": "Australia/Broken_Hill",
      "Brazil/Acre": "America/Rio_Branco",
      "Brazil/DeNoronha": "America/Noronha",
      "Brazil/East": "America/Sao_Paulo",
      "Brazil/West": "America/Manaus",
      "CET": "Europe/Brussels",
      "CST6CDT": "America/Chicago",
      "Canada/Atlantic": "America/Halifax",
      "Canada/Central": "America/Winnipeg",
      "Canada/Eastern": "America/Toronto",
      "Canada/Mountain": "America/Edmonton",
      "Canada/Newfoundland": "America/St_Johns",
      "Canada/Pacific": "America/Vancouver",
      "Canada/Saskatchewan": "America/Regina",
      "Canada/Yukon": "America/Whitehorse",
      "Chile/Continental": "America/Santiago",
      "Chile/EasterIsland": "Pacific/Easter",
      "Cuba": "America/Havana",
      "EET": "Europe/Athens",
      "EST": "America/Panama",
      "EST5EDT": "America/New_York",
      "Egypt": "Africa/Cairo",
      "Eire": "Europe/Dublin",
      "Etc/GMT+0": "Etc/GMT",
      "Etc/GMT-0": "Etc/GMT",
      "Etc/GMT0": "Etc/GMT",
      "Etc/Greenwich": "Etc/GMT",
      "Etc/UCT": "Etc/UTC",
      "Etc/Universal": "Etc/UTC",
      "Etc/Zulu": "Etc/UTC",
      "Europe/Amsterdam": "Europe/Brussels",
      "Europe/Belfast": "Europe/London",
      "Europe/Bratislava": "Europe/Prague",
      "Europe/Busingen": "Europe/Zurich",
      "Europe/Copenhagen": "Europe/Berlin",
      "Europe/Guernsey": "Europe/London",
      "Europe/Isle_of_Man": "Europe/London",
      "Europe/Jersey": "Europe/London",
      "Europe/Kiev": "Europe/Kyiv",
      "Europe/Ljubljana": "Europe/Belgrade",
      "Europe/Luxembourg": "Europe/Brussels",
      "Europe/Mariehamn": "Europe/Helsinki",
      "Europe/Monaco": "Europe/Paris",
      "Europe/Nicosia": "Asia/Nicosia",
      "Europe/Oslo": "Europe/Berlin",
      "Europe/Podgorica": "Europe/Belgrade",
      "Europe/San_Marino": "Europe/Rome",
      "Europe/Sarajevo": "Europe/Belgrade",
      "Europe/Skopje": "Europe/Belgrade",
      "Europe/Stockholm": "Europe/Berlin",
      "Europe/Tiraspol": "Europe/Chisinau",
      "Europe/Uzhgorod": "Europe/Kyiv",
      "Europe/Vaduz": "Europe/Zurich",
      "Europe/Vatican": "Europe/Rome",
      "Europe/Zagreb": "Europe/Belgrade",
      "Europe/Zaporozhye": "Europe/Kyiv",
      "GB": "Europe/London",
      "GB-Eire": "Europe/London",
      "GMT+0": "Etc/GMT",
      "GMT-0": "Etc/GMT",
      "GMT0": "Etc/GMT",
      "Greenwich": "Etc/GMT",
      "HST": "Pacific/Honolulu",
      "Hongkong": "Asia/Hong_Kong",
      "Iceland": "Africa/Abidjan",
      "Indian/Antananarivo": "Africa/Nairobi",
      "Indian/Christmas": "Asia/Bangkok",
      "Indian/Cocos": "Asia/Yangon",
      "Indian/Comoro": "Africa/Nairobi",
      "Indian/Kerguelen": "Indian/Maldives",
      "Indian/Mahe": "Asia/Dubai",
      "Indian/Mayotte": "Africa/Nairobi",
      "Indian/Reunion": "Asia/Dubai",
      "Iran": "Asia/Tehran",
      "Israel": "Asia/Jerusalem",
      "Jamaica": "America/Jamaica",
      "Japan": "Asia/Tokyo",
      "Kwajalein": "Pacific/Kwajalein",
      "Libya": "Africa/Tripoli",
      "MET": "Europe/Brussels",
      "MST": "America/Phoenix",
      "MST7MDT": "America/Denver",
      "Mexico/BajaNorte": "America/Tijuana",
      "Mexico/BajaSur": "America/Mazatlan",
      "Mexico/General": "America/Mexico_City",
      "NZ": "Pacific/Auckland",
      "NZ-CHAT": "Pacific/Chatham",
      "Navajo": "America/Denver",
      "PRC": "Asia/Shanghai",
      "PST8PDT": "America/Los_Angeles",
      "Pacific/Chuuk": "Pacific/Port_Moresby",
      "Pacific/Enderbury": "Pacific/Kanton",
      "Pacific/Funafuti": "Pacific/Tarawa",
      "Pacific/Johnston": "Pacific/Honolulu",
      "Pacific/Majuro": "Pacific/Tarawa",
      "Pacific/Midway": "Pacific/Pago_Pago",
      "Pacific/Pohnpei": "Pacific/Guadalcanal",
      "Pacific/Ponape": "Pacific/Guadalcanal",
      "Pacific/Saipan": "Pacific/Guam",
      "Pacific/Samoa": "Pacific/Pago_Pago",
      "Pacific/Truk": "Pacific/Port_Moresby",
      "Pacific/Wake": "Pacific/Tarawa",
      "Pacific/Wallis": "Pacific/Tarawa",
      "Pacific/Yap": "Pacific/Port_Moresby",
      "Poland": "Europe/Warsaw",
      "Portugal": "Europe/Lisbon",
      "ROC": "Asia/Taipei",
      "ROK": "Asia/Seoul",
      "Singapore": "Asia/Singapore",
      "Turkey": "Europe/Istanbul",
      "UCT": "Etc/UTC",
      "US/Alaska": "America/Anchorage",
      "US/Aleutian": "America/Adak",
      "US/Arizona": "America/Phoenix",
      "US/Central": "America/Chicago",
      "US/East-Indiana": "America/Indiana/Indianapolis",
      "US/Eastern": "America/New_York",
      "US/Hawaii": "Pacific/Honolulu",
      "US/Indiana-Starke": "America/Indiana/Knox",
      "US/Michigan": "America/Detroit",
      "US/Mountain": "America/Denver",
      "US/Pacific": "America/Los_Angeles",
      "US/Samoa": "Pacific/Pago_Pago",
      "UTC": "Etc/UTC",
      "Universal": "Etc/UTC",
      "W-SU": "Europe/Moscow",
      "WET": "Europe/Lisbon",
      "Zulu": "Etc/UTC"
    };
    return links;
  }
  var get_internal_slots$3 = {};
  var hasRequiredGet_internal_slots$3;
  function requireGet_internal_slots$3() {
    if (hasRequiredGet_internal_slots$3) return get_internal_slots$3;
    hasRequiredGet_internal_slots$3 = 1;
    Object.defineProperty(get_internal_slots$3, "__esModule", { value: true });
    get_internal_slots$3.default = getInternalSlots;
    var internalSlotMap = /* @__PURE__ */ new WeakMap();
    function getInternalSlots(x) {
      var internalSlots = internalSlotMap.get(x);
      if (!internalSlots) {
        internalSlots = /* @__PURE__ */ Object.create(null);
        internalSlotMap.set(x, internalSlots);
      }
      return internalSlots;
    }
    return get_internal_slots$3;
  }
  var packer = {};
  var hasRequiredPacker;
  function requirePacker() {
    if (hasRequiredPacker) return packer;
    hasRequiredPacker = 1;
    Object.defineProperty(packer, "__esModule", { value: true });
    packer.pack = pack;
    packer.unpack = unpack;
    var tslib_1 = require$$0$1;
    function pack(data2) {
      var zoneNames = Object.keys(data2.zones);
      zoneNames.sort();
      return {
        zones: zoneNames.map(function(zone) {
          return tslib_1.__spreadArray([
            zone
          ], data2.zones[zone].map(function(_a2) {
            var ts = _a2[0], others = _a2.slice(1);
            return tslib_1.__spreadArray([ts === "" ? "" : ts.toString(36)], others, true).join(",");
          }), true).join("|");
        }),
        abbrvs: data2.abbrvs.join("|"),
        offsets: data2.offsets.map(function(o) {
          return o.toString(36);
        }).join("|")
      };
    }
    function unpack(data2) {
      var abbrvs = data2.abbrvs.split("|");
      var offsets = data2.offsets.split("|").map(function(n) {
        return parseInt(n, 36);
      });
      var packedZones = data2.zones;
      var zones = {};
      for (var _i = 0, packedZones_1 = packedZones; _i < packedZones_1.length; _i++) {
        var d = packedZones_1[_i];
        var _a2 = d.split("|"), zone = _a2[0], zoneData = _a2.slice(1);
        zones[zone] = zoneData.map(function(z) {
          return z.split(",");
        }).map(function(_a3) {
          var ts = _a3[0], abbrvIndex = _a3[1], offsetIndex = _a3[2], dst = _a3[3];
          return [
            ts === "" ? -Infinity : parseInt(ts, 36),
            abbrvs[+abbrvIndex],
            offsets[+offsetIndex],
            dst === "1"
          ];
        });
      }
      return zones;
    }
    return packer;
  }
  var hasRequiredCore$1;
  function requireCore$1() {
    if (hasRequiredCore$1) return core$1;
    hasRequiredCore$1 = 1;
    (function(exports2) {
      Object.defineProperty(exports2, "__esModule", { value: true });
      exports2.DateTimeFormat = void 0;
      var tslib_1 = require$$0$1;
      var ecma402_abstract_1 = require$$1;
      var decimal_js_1 = tslib_1.__importDefault(requireDecimal());
      var FormatDateTime_1 = requireFormatDateTime();
      var FormatDateTimeRange_1 = requireFormatDateTimeRange();
      var FormatDateTimeRangeToParts_1 = requireFormatDateTimeRangeToParts();
      var FormatDateTimeToParts_1 = requireFormatDateTimeToParts();
      var InitializeDateTimeFormat_1 = requireInitializeDateTimeFormat();
      var skeleton_1 = requireSkeleton();
      var utils_1 = requireUtils();
      var links_1 = tslib_1.__importDefault(requireLinks());
      var get_internal_slots_1 = tslib_1.__importDefault(requireGet_internal_slots$3());
      var packer_1 = requirePacker();
      var UPPERCASED_LINKS = Object.keys(links_1.default).reduce(function(all, l) {
        all[l.toUpperCase()] = links_1.default[l];
        return all;
      }, {});
      var RESOLVED_OPTIONS_KEYS = [
        "locale",
        "calendar",
        "numberingSystem",
        "dateStyle",
        "timeStyle",
        "timeZone",
        "hourCycle",
        "weekday",
        "era",
        "year",
        "month",
        "day",
        "hour",
        "minute",
        "second",
        "timeZoneName"
      ];
      var formatDescriptor = {
        enumerable: false,
        configurable: true,
        get: function() {
          if (typeof this !== "object" || !(0, ecma402_abstract_1.OrdinaryHasInstance)(exports2.DateTimeFormat, this)) {
            throw TypeError("Intl.DateTimeFormat format property accessor called on incompatible receiver");
          }
          var internalSlots = (0, get_internal_slots_1.default)(this);
          var dtf = this;
          var boundFormat = internalSlots.boundFormat;
          if (boundFormat === void 0) {
            boundFormat = function(date2) {
              var x;
              if (date2 === void 0) {
                x = new decimal_js_1.default(Date.now());
              } else {
                x = (0, ecma402_abstract_1.ToNumber)(date2);
              }
              return (0, FormatDateTime_1.FormatDateTime)(dtf, x, {
                getInternalSlots: get_internal_slots_1.default,
                localeData: exports2.DateTimeFormat.localeData,
                tzData: exports2.DateTimeFormat.tzData,
                getDefaultTimeZone: exports2.DateTimeFormat.getDefaultTimeZone
              });
            };
            try {
              Object.defineProperty(boundFormat, "name", {
                configurable: true,
                enumerable: false,
                writable: false,
                value: ""
              });
            } catch (e) {
            }
            internalSlots.boundFormat = boundFormat;
          }
          return boundFormat;
        }
      };
      try {
        Object.defineProperty(formatDescriptor.get, "name", {
          configurable: true,
          enumerable: false,
          writable: false,
          value: "get format"
        });
      } catch (e) {
      }
      exports2.DateTimeFormat = function(locales, options) {
        if (!this || !(0, ecma402_abstract_1.OrdinaryHasInstance)(exports2.DateTimeFormat, this)) {
          return new exports2.DateTimeFormat(locales, options);
        }
        (0, InitializeDateTimeFormat_1.InitializeDateTimeFormat)(this, locales, options, {
          tzData: exports2.DateTimeFormat.tzData,
          uppercaseLinks: UPPERCASED_LINKS,
          availableLocales: exports2.DateTimeFormat.availableLocales,
          relevantExtensionKeys: exports2.DateTimeFormat.relevantExtensionKeys,
          getDefaultLocale: exports2.DateTimeFormat.getDefaultLocale,
          getDefaultTimeZone: exports2.DateTimeFormat.getDefaultTimeZone,
          getInternalSlots: get_internal_slots_1.default,
          localeData: exports2.DateTimeFormat.localeData
        });
        var internalSlots = (0, get_internal_slots_1.default)(this);
        var dataLocale = internalSlots.dataLocale;
        var dataLocaleData = exports2.DateTimeFormat.localeData[dataLocale];
        (0, ecma402_abstract_1.invariant)(dataLocaleData !== void 0, "Cannot load locale-dependent data for ".concat(dataLocale, "."));
      };
      (0, ecma402_abstract_1.defineProperty)(exports2.DateTimeFormat, "supportedLocalesOf", {
        value: function supportedLocalesOf(locales, options) {
          return (0, ecma402_abstract_1.SupportedLocales)(exports2.DateTimeFormat.availableLocales, (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales), options);
        }
      });
      (0, ecma402_abstract_1.defineProperty)(exports2.DateTimeFormat.prototype, "resolvedOptions", {
        value: function resolvedOptions() {
          if (typeof this !== "object" || !(0, ecma402_abstract_1.OrdinaryHasInstance)(exports2.DateTimeFormat, this)) {
            throw TypeError("Method Intl.DateTimeFormat.prototype.resolvedOptions called on incompatible receiver");
          }
          var internalSlots = (0, get_internal_slots_1.default)(this);
          var ro = {};
          for (var _i = 0, RESOLVED_OPTIONS_KEYS_1 = RESOLVED_OPTIONS_KEYS; _i < RESOLVED_OPTIONS_KEYS_1.length; _i++) {
            var key = RESOLVED_OPTIONS_KEYS_1[_i];
            var value2 = internalSlots[key];
            if (key === "hourCycle") {
              var hour12 = value2 === "h11" || value2 === "h12" ? true : value2 === "h23" || value2 === "h24" ? false : void 0;
              if (hour12 !== void 0) {
                ro.hour12 = hour12;
              }
            }
            if (utils_1.DATE_TIME_PROPS.indexOf(key) > -1) {
              if (internalSlots.dateStyle !== void 0 || internalSlots.timeStyle !== void 0) {
                value2 = void 0;
              }
            }
            if (value2 !== void 0) {
              ro[key] = value2;
            }
          }
          return ro;
        }
      });
      (0, ecma402_abstract_1.defineProperty)(exports2.DateTimeFormat.prototype, "formatToParts", {
        value: function formatToParts2(date2) {
          var x;
          if (date2 === void 0) {
            x = new decimal_js_1.default(Date.now());
          } else {
            x = (0, ecma402_abstract_1.ToNumber)(date2);
          }
          return (0, FormatDateTimeToParts_1.FormatDateTimeToParts)(this, x, {
            getInternalSlots: get_internal_slots_1.default,
            localeData: exports2.DateTimeFormat.localeData,
            tzData: exports2.DateTimeFormat.tzData,
            getDefaultTimeZone: exports2.DateTimeFormat.getDefaultTimeZone
          });
        }
      });
      (0, ecma402_abstract_1.defineProperty)(exports2.DateTimeFormat.prototype, "formatRangeToParts", {
        value: function formatRangeToParts(startDate, endDate) {
          var dtf = this;
          (0, ecma402_abstract_1.invariant)(typeof dtf === "object", "receiver is not an object", TypeError);
          (0, ecma402_abstract_1.invariant)(startDate !== void 0 && endDate !== void 0, "startDate/endDate cannot be undefined", TypeError);
          return (0, FormatDateTimeRangeToParts_1.FormatDateTimeRangeToParts)(dtf, (0, ecma402_abstract_1.ToNumber)(startDate), (0, ecma402_abstract_1.ToNumber)(endDate), {
            getInternalSlots: get_internal_slots_1.default,
            localeData: exports2.DateTimeFormat.localeData,
            tzData: exports2.DateTimeFormat.tzData,
            getDefaultTimeZone: exports2.DateTimeFormat.getDefaultTimeZone
          });
        }
      });
      (0, ecma402_abstract_1.defineProperty)(exports2.DateTimeFormat.prototype, "formatRange", {
        value: function formatRange(startDate, endDate) {
          var dtf = this;
          (0, ecma402_abstract_1.invariant)(typeof dtf === "object", "receiver is not an object", TypeError);
          (0, ecma402_abstract_1.invariant)(startDate !== void 0 && endDate !== void 0, "startDate/endDate cannot be undefined", TypeError);
          return (0, FormatDateTimeRange_1.FormatDateTimeRange)(dtf, (0, ecma402_abstract_1.ToNumber)(startDate), (0, ecma402_abstract_1.ToNumber)(endDate), {
            getInternalSlots: get_internal_slots_1.default,
            localeData: exports2.DateTimeFormat.localeData,
            tzData: exports2.DateTimeFormat.tzData,
            getDefaultTimeZone: exports2.DateTimeFormat.getDefaultTimeZone
          });
        }
      });
      var DEFAULT_TIMEZONE = "UTC";
      exports2.DateTimeFormat.__setDefaultTimeZone = function(timeZone) {
        if (timeZone !== void 0) {
          timeZone = String(timeZone);
          if (!(0, ecma402_abstract_1.IsValidTimeZoneName)(timeZone, {
            zoneNamesFromData: Object.keys(exports2.DateTimeFormat.tzData),
            uppercaseLinks: UPPERCASED_LINKS
          })) {
            throw new RangeError("Invalid timeZoneName");
          }
          timeZone = (0, ecma402_abstract_1.CanonicalizeTimeZoneName)(timeZone, {
            zoneNames: Object.keys(exports2.DateTimeFormat.tzData),
            uppercaseLinks: UPPERCASED_LINKS
          });
        } else {
          timeZone = DEFAULT_TIMEZONE;
        }
        exports2.DateTimeFormat.__defaultTimeZone = timeZone;
      };
      exports2.DateTimeFormat.relevantExtensionKeys = ["nu", "ca", "hc"];
      exports2.DateTimeFormat.__defaultTimeZone = DEFAULT_TIMEZONE;
      exports2.DateTimeFormat.getDefaultTimeZone = function() {
        return exports2.DateTimeFormat.__defaultTimeZone;
      };
      exports2.DateTimeFormat.__addLocaleData = function __addLocaleData() {
        var data2 = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          data2[_i] = arguments[_i];
        }
        var _loop_1 = function(d2, locale2) {
          var dateFormat = d2.dateFormat, timeFormat = d2.timeFormat, dateTimeFormat = d2.dateTimeFormat, formats = d2.formats, intervalFormats = d2.intervalFormats, rawData = tslib_1.__rest(d2, ["dateFormat", "timeFormat", "dateTimeFormat", "formats", "intervalFormats"]);
          var processedData = tslib_1.__assign(tslib_1.__assign({}, rawData), { dateFormat: {
            full: (0, skeleton_1.parseDateTimeSkeleton)(dateFormat.full),
            long: (0, skeleton_1.parseDateTimeSkeleton)(dateFormat.long),
            medium: (0, skeleton_1.parseDateTimeSkeleton)(dateFormat.medium),
            short: (0, skeleton_1.parseDateTimeSkeleton)(dateFormat.short)
          }, timeFormat: {
            full: (0, skeleton_1.parseDateTimeSkeleton)(timeFormat.full),
            long: (0, skeleton_1.parseDateTimeSkeleton)(timeFormat.long),
            medium: (0, skeleton_1.parseDateTimeSkeleton)(timeFormat.medium),
            short: (0, skeleton_1.parseDateTimeSkeleton)(timeFormat.short)
          }, dateTimeFormat: {
            full: (0, skeleton_1.parseDateTimeSkeleton)(dateTimeFormat.full).pattern,
            long: (0, skeleton_1.parseDateTimeSkeleton)(dateTimeFormat.long).pattern,
            medium: (0, skeleton_1.parseDateTimeSkeleton)(dateTimeFormat.medium).pattern,
            short: (0, skeleton_1.parseDateTimeSkeleton)(dateTimeFormat.short).pattern
          }, formats: {} });
          var _loop_2 = function(calendar2) {
            processedData.formats[calendar2] = Object.keys(formats[calendar2]).map(function(skeleton2) {
              return (0, skeleton_1.parseDateTimeSkeleton)(skeleton2, formats[calendar2][skeleton2], intervalFormats[skeleton2], intervalFormats.intervalFormatFallback);
            });
          };
          for (var calendar in formats) {
            _loop_2(calendar);
          }
          var minimizedLocale = new Intl.Locale(locale2).minimize().toString();
          exports2.DateTimeFormat.localeData[locale2] = exports2.DateTimeFormat.localeData[minimizedLocale] = processedData;
          exports2.DateTimeFormat.availableLocales.add(locale2);
          exports2.DateTimeFormat.availableLocales.add(minimizedLocale);
          if (!exports2.DateTimeFormat.__defaultLocale) {
            exports2.DateTimeFormat.__defaultLocale = minimizedLocale;
          }
        };
        for (var _a2 = 0, data_1 = data2; _a2 < data_1.length; _a2++) {
          var _b = data_1[_a2], d = _b.data, locale = _b.locale;
          _loop_1(d, locale);
        }
      };
      Object.defineProperty(exports2.DateTimeFormat.prototype, "format", formatDescriptor);
      exports2.DateTimeFormat.__defaultLocale = "";
      exports2.DateTimeFormat.localeData = {};
      exports2.DateTimeFormat.availableLocales = /* @__PURE__ */ new Set();
      exports2.DateTimeFormat.getDefaultLocale = function() {
        return exports2.DateTimeFormat.__defaultLocale;
      };
      exports2.DateTimeFormat.polyfilled = true;
      exports2.DateTimeFormat.tzData = {};
      exports2.DateTimeFormat.__addTZData = function(d) {
        exports2.DateTimeFormat.tzData = (0, packer_1.unpack)(d);
      };
      try {
        if (typeof Symbol !== "undefined") {
          Object.defineProperty(exports2.DateTimeFormat.prototype, Symbol.toStringTag, {
            value: "Intl.DateTimeFormat",
            writable: false,
            enumerable: false,
            configurable: true
          });
        }
        Object.defineProperty(exports2.DateTimeFormat.prototype.constructor, "length", {
          value: 1,
          writable: false,
          enumerable: false,
          configurable: true
        });
      } catch (e) {
      }
    })(core$1);
    return core$1;
  }
  var hasRequiredIntlDatetimeformat;
  function requireIntlDatetimeformat() {
    if (hasRequiredIntlDatetimeformat) return intlDatetimeformat;
    hasRequiredIntlDatetimeformat = 1;
    (function(exports2) {
      Object.defineProperty(exports2, "__esModule", { value: true });
      var tslib_1 = require$$0$1;
      tslib_1.__exportStar(requireCore$1(), exports2);
    })(intlDatetimeformat);
    return intlDatetimeformat;
  }
  var shouldPolyfill$3 = {};
  var supportedLocales_generated$3 = {};
  var hasRequiredSupportedLocales_generated$3;
  function requireSupportedLocales_generated$3() {
    if (hasRequiredSupportedLocales_generated$3) return supportedLocales_generated$3;
    hasRequiredSupportedLocales_generated$3 = 1;
    Object.defineProperty(supportedLocales_generated$3, "__esModule", { value: true });
    supportedLocales_generated$3.supportedLocales = void 0;
    supportedLocales_generated$3.supportedLocales = ["af", "af-NA", "agq", "ak", "am", "ar", "ar-AE", "ar-BH", "ar-DJ", "ar-DZ", "ar-EG", "ar-EH", "ar-ER", "ar-IL", "ar-IQ", "ar-JO", "ar-KM", "ar-KW", "ar-LB", "ar-LY", "ar-MA", "ar-MR", "ar-OM", "ar-PS", "ar-QA", "ar-SA", "ar-SD", "ar-SO", "ar-SS", "ar-SY", "ar-TD", "ar-TN", "ar-YE", "as", "asa", "ast", "az", "az-Cyrl", "az-Latn", "bas", "be", "be-tarask", "bem", "bez", "bg", "bm", "bn", "bn-IN", "bo", "bo-IN", "br", "brx", "bs", "bs-Cyrl", "bs-Latn", "ca", "ca-AD", "ca-ES-valencia", "ca-FR", "ca-IT", "ccp", "ccp-IN", "ce", "ceb", "cgg", "chr", "ckb", "ckb-IR", "cs", "cy", "da", "da-GL", "dav", "de", "de-AT", "de-BE", "de-CH", "de-IT", "de-LI", "de-LU", "dje", "doi", "dsb", "dua", "dyo", "dz", "ebu", "ee", "ee-TG", "el", "el-CY", "en", "en-001", "en-150", "en-AE", "en-AG", "en-AI", "en-AS", "en-AT", "en-AU", "en-BB", "en-BE", "en-BI", "en-BM", "en-BS", "en-BW", "en-BZ", "en-CA", "en-CC", "en-CH", "en-CK", "en-CM", "en-CX", "en-CY", "en-DE", "en-DG", "en-DK", "en-DM", "en-ER", "en-FI", "en-FJ", "en-FK", "en-FM", "en-GB", "en-GD", "en-GG", "en-GH", "en-GI", "en-GM", "en-GU", "en-GY", "en-HK", "en-IE", "en-IL", "en-IM", "en-IN", "en-IO", "en-JE", "en-JM", "en-KE", "en-KI", "en-KN", "en-KY", "en-LC", "en-LR", "en-LS", "en-MG", "en-MH", "en-MO", "en-MP", "en-MS", "en-MT", "en-MU", "en-MW", "en-MY", "en-NA", "en-NF", "en-NG", "en-NL", "en-NR", "en-NU", "en-NZ", "en-PG", "en-PH", "en-PK", "en-PN", "en-PR", "en-PW", "en-RW", "en-SB", "en-SC", "en-SD", "en-SE", "en-SG", "en-SH", "en-SI", "en-SL", "en-SS", "en-SX", "en-SZ", "en-TC", "en-TK", "en-TO", "en-TT", "en-TV", "en-TZ", "en-UG", "en-UM", "en-VC", "en-VG", "en-VI", "en-VU", "en-WS", "en-ZA", "en-ZM", "en-ZW", "eo", "es", "es-419", "es-AR", "es-BO", "es-BR", "es-BZ", "es-CL", "es-CO", "es-CR", "es-CU", "es-DO", "es-EA", "es-EC", "es-GQ", "es-GT", "es-HN", "es-IC", "es-MX", "es-NI", "es-PA", "es-PE", "es-PH", "es-PR", "es-PY", "es-SV", "es-US", "es-UY", "es-VE", "et", "eu", "ewo", "fa", "fa-AF", "ff", "ff-Adlm", "ff-Adlm-BF", "ff-Adlm-CM", "ff-Adlm-GH", "ff-Adlm-GM", "ff-Adlm-GW", "ff-Adlm-LR", "ff-Adlm-MR", "ff-Adlm-NE", "ff-Adlm-NG", "ff-Adlm-SL", "ff-Adlm-SN", "ff-Latn", "ff-Latn-BF", "ff-Latn-CM", "ff-Latn-GH", "ff-Latn-GM", "ff-Latn-GN", "ff-Latn-GW", "ff-Latn-LR", "ff-Latn-MR", "ff-Latn-NE", "ff-Latn-NG", "ff-Latn-SL", "fi", "fil", "fo", "fo-DK", "fr", "fr-BE", "fr-BF", "fr-BI", "fr-BJ", "fr-BL", "fr-CA", "fr-CD", "fr-CF", "fr-CG", "fr-CH", "fr-CI", "fr-CM", "fr-DJ", "fr-DZ", "fr-GA", "fr-GF", "fr-GN", "fr-GP", "fr-GQ", "fr-HT", "fr-KM", "fr-LU", "fr-MA", "fr-MC", "fr-MF", "fr-MG", "fr-ML", "fr-MQ", "fr-MR", "fr-MU", "fr-NC", "fr-NE", "fr-PF", "fr-PM", "fr-RE", "fr-RW", "fr-SC", "fr-SN", "fr-SY", "fr-TD", "fr-TG", "fr-TN", "fr-VU", "fr-WF", "fr-YT", "fur", "fy", "ga", "ga-GB", "gd", "gl", "gsw", "gsw-FR", "gsw-LI", "gu", "guz", "gv", "ha", "ha-GH", "ha-NE", "haw", "he", "hi", "hr", "hr-BA", "hsb", "hu", "hy", "ia", "id", "ig", "ii", "is", "it", "it-CH", "it-SM", "it-VA", "ja", "jgo", "jmc", "jv", "ka", "kab", "kam", "kde", "kea", "kgp", "khq", "ki", "kk", "kkj", "kl", "kln", "km", "kn", "ko", "ko-KP", "kok", "ks", "ks-Arab", "ksb", "ksf", "ksh", "ku", "kw", "ky", "lag", "lb", "lg", "lkt", "ln", "ln-AO", "ln-CF", "ln-CG", "lo", "lrc", "lrc-IQ", "lt", "lu", "luo", "luy", "lv", "mai", "mas", "mas-TZ", "mer", "mfe", "mg", "mgh", "mgo", "mi", "mk", "ml", "mn", "mni", "mni-Beng", "mr", "ms", "ms-BN", "ms-ID", "ms-SG", "mt", "mua", "my", "mzn", "naq", "nb", "nb-SJ", "nd", "nds", "nds-NL", "ne", "ne-IN", "nl", "nl-AW", "nl-BE", "nl-BQ", "nl-CW", "nl-SR", "nl-SX", "nmg", "nn", "nnh", "no", "nus", "nyn", "om", "om-KE", "or", "os", "os-RU", "pa", "pa-Arab", "pa-Guru", "pcm", "pl", "ps", "ps-PK", "pt", "pt-AO", "pt-CH", "pt-CV", "pt-GQ", "pt-GW", "pt-LU", "pt-MO", "pt-MZ", "pt-PT", "pt-ST", "pt-TL", "qu", "qu-BO", "qu-EC", "rm", "rn", "ro", "ro-MD", "rof", "ru", "ru-BY", "ru-KG", "ru-KZ", "ru-MD", "ru-UA", "rw", "rwk", "sa", "sah", "saq", "sat", "sat-Olck", "sbp", "sc", "sd", "sd-Arab", "sd-Deva", "se", "se-FI", "se-SE", "seh", "ses", "sg", "shi", "shi-Latn", "shi-Tfng", "si", "sk", "sl", "smn", "sn", "so", "so-DJ", "so-ET", "so-KE", "sq", "sq-MK", "sq-XK", "sr", "sr-Cyrl", "sr-Cyrl-BA", "sr-Cyrl-ME", "sr-Cyrl-XK", "sr-Latn", "sr-Latn-BA", "sr-Latn-ME", "sr-Latn-XK", "su", "su-Latn", "sv", "sv-AX", "sv-FI", "sw", "sw-CD", "sw-KE", "sw-UG", "ta", "ta-LK", "ta-MY", "ta-SG", "te", "teo", "teo-KE", "tg", "th", "ti", "ti-ER", "tk", "to", "tr", "tr-CY", "tt", "twq", "tzm", "ug", "uk", "und", "ur", "ur-IN", "uz", "uz-Arab", "uz-Cyrl", "uz-Latn", "vai", "vai-Latn", "vai-Vaii", "vi", "vun", "wae", "wo", "xh", "xog", "yav", "yi", "yo", "yo-BJ", "yrl", "yrl-CO", "yrl-VE", "yue", "yue-Hans", "yue-Hant", "zgh", "zh", "zh-Hans", "zh-Hans-HK", "zh-Hans-MO", "zh-Hans-SG", "zh-Hant", "zh-Hant-HK", "zh-Hant-MO", "zu"];
    return supportedLocales_generated$3;
  }
  var hasRequiredShouldPolyfill$3;
  function requireShouldPolyfill$3() {
    if (hasRequiredShouldPolyfill$3) return shouldPolyfill$3;
    hasRequiredShouldPolyfill$3 = 1;
    Object.defineProperty(shouldPolyfill$3, "__esModule", { value: true });
    shouldPolyfill$3.shouldPolyfill = shouldPolyfill2;
    var intl_localematcher_1 = require$$0;
    var supported_locales_generated_1 = requireSupportedLocales_generated$3();
    function supportsDateStyle() {
      try {
        return !!new Intl.DateTimeFormat(void 0, {
          dateStyle: "short"
        }).resolvedOptions().dateStyle;
      } catch (e) {
        return false;
      }
    }
    function hasChromeLt71Bug() {
      try {
        return new Intl.DateTimeFormat("en", {
          hourCycle: "h11",
          hour: "numeric"
        }).formatToParts(0)[2].type !== "dayPeriod";
      } catch (e) {
        return false;
      }
    }
    function hasUnthrownDateTimeStyleBug() {
      try {
        return !!new Intl.DateTimeFormat("en", {
          dateStyle: "short",
          hour: "numeric"
        }).format(/* @__PURE__ */ new Date(0));
      } catch (e) {
        return false;
      }
    }
    function supportedLocalesOf(locale) {
      if (!locale) {
        return true;
      }
      var locales = Array.isArray(locale) ? locale : [locale];
      return Intl.DateTimeFormat.supportedLocalesOf(locales).length === locales.length;
    }
    function shouldPolyfill2(locale) {
      if (locale === void 0) {
        locale = "en";
      }
      if (!("DateTimeFormat" in Intl) || !("formatToParts" in Intl.DateTimeFormat.prototype) || !("formatRange" in Intl.DateTimeFormat.prototype) || hasChromeLt71Bug() || hasUnthrownDateTimeStyleBug() || !supportsDateStyle() || !supportedLocalesOf(locale)) {
        return locale ? (0, intl_localematcher_1.match)([locale], supported_locales_generated_1.supportedLocales, "en") : void 0;
      }
    }
    return shouldPolyfill$3;
  }
  var to_locale_string$1 = {};
  var hasRequiredTo_locale_string$1;
  function requireTo_locale_string$1() {
    if (hasRequiredTo_locale_string$1) return to_locale_string$1;
    hasRequiredTo_locale_string$1 = 1;
    Object.defineProperty(to_locale_string$1, "__esModule", { value: true });
    to_locale_string$1.toLocaleString = toLocaleString;
    to_locale_string$1.toLocaleDateString = toLocaleDateString;
    to_locale_string$1.toLocaleTimeString = toLocaleTimeString;
    var core_1 = requireCore$1();
    var ToDateTimeOptions_1 = requireToDateTimeOptions();
    function toLocaleString(x, locales, options) {
      var dtf = new core_1.DateTimeFormat(locales, options);
      return dtf.format(x);
    }
    function toLocaleDateString(x, locales, options) {
      var dtf = new core_1.DateTimeFormat(locales, (0, ToDateTimeOptions_1.ToDateTimeOptions)(options, "date", "date"));
      return dtf.format(x);
    }
    function toLocaleTimeString(x, locales, options) {
      var dtf = new core_1.DateTimeFormat(locales, (0, ToDateTimeOptions_1.ToDateTimeOptions)(options, "time", "time"));
      return dtf.format(x);
    }
    return to_locale_string$1;
  }
  var hasRequiredPolyfill$3;
  function requirePolyfill$3() {
    if (hasRequiredPolyfill$3) return polyfill$3;
    hasRequiredPolyfill$3 = 1;
    Object.defineProperty(polyfill$3, "__esModule", { value: true });
    var _1 = requireIntlDatetimeformat();
    var ecma402_abstract_1 = require$$1;
    var should_polyfill_1 = requireShouldPolyfill$3();
    var to_locale_string_1 = requireTo_locale_string$1();
    if ((0, should_polyfill_1.shouldPolyfill)()) {
      (0, ecma402_abstract_1.defineProperty)(Intl, "DateTimeFormat", { value: _1.DateTimeFormat });
      (0, ecma402_abstract_1.defineProperty)(Date.prototype, "toLocaleString", {
        value: function toLocaleString(locales, options) {
          try {
            return (0, to_locale_string_1.toLocaleString)(this, locales, options);
          } catch (error) {
            return "Invalid Date";
          }
        }
      });
      (0, ecma402_abstract_1.defineProperty)(Date.prototype, "toLocaleDateString", {
        value: function toLocaleDateString(locales, options) {
          try {
            return (0, to_locale_string_1.toLocaleDateString)(this, locales, options);
          } catch (error) {
            return "Invalid Date";
          }
        }
      });
      (0, ecma402_abstract_1.defineProperty)(Date.prototype, "toLocaleTimeString", {
        value: function toLocaleTimeString(locales, options) {
          try {
            return (0, to_locale_string_1.toLocaleTimeString)(this, locales, options);
          } catch (error) {
            return "Invalid Date";
          }
        }
      });
    }
    return polyfill$3;
  }
  requirePolyfill$3();
  var polyfill$2 = {};
  var core = {};
  var currencyDigits_generated = {};
  var hasRequiredCurrencyDigits_generated;
  function requireCurrencyDigits_generated() {
    if (hasRequiredCurrencyDigits_generated) return currencyDigits_generated;
    hasRequiredCurrencyDigits_generated = 1;
    Object.defineProperty(currencyDigits_generated, "__esModule", { value: true });
    currencyDigits_generated.currencyDigitsData = void 0;
    currencyDigits_generated.currencyDigitsData = {
      "ADP": 0,
      "AFN": 0,
      "ALL": 0,
      "AMD": 2,
      "BHD": 3,
      "BIF": 0,
      "BYN": 2,
      "BYR": 0,
      "CAD": 2,
      "CHF": 2,
      "CLF": 4,
      "CLP": 0,
      "COP": 2,
      "CRC": 2,
      "CZK": 2,
      "DEFAULT": 2,
      "DJF": 0,
      "DKK": 2,
      "ESP": 0,
      "GNF": 0,
      "GYD": 2,
      "HUF": 2,
      "IDR": 2,
      "IQD": 0,
      "IRR": 0,
      "ISK": 0,
      "ITL": 0,
      "JOD": 3,
      "JPY": 0,
      "KMF": 0,
      "KPW": 0,
      "KRW": 0,
      "KWD": 3,
      "LAK": 0,
      "LBP": 0,
      "LUF": 0,
      "LYD": 3,
      "MGA": 0,
      "MGF": 0,
      "MMK": 0,
      "MNT": 2,
      "MRO": 0,
      "MUR": 2,
      "NOK": 2,
      "OMR": 3,
      "PKR": 2,
      "PYG": 0,
      "RSD": 0,
      "RWF": 0,
      "SEK": 2,
      "SLE": 2,
      "SLL": 0,
      "SOS": 0,
      "STD": 0,
      "SYP": 0,
      "TMM": 0,
      "TND": 3,
      "TRL": 0,
      "TWD": 2,
      "TZS": 2,
      "UGX": 0,
      "UYI": 0,
      "UYW": 4,
      "UZS": 2,
      "VEF": 2,
      "VND": 0,
      "VUV": 0,
      "XAF": 0,
      "XOF": 0,
      "XPF": 0,
      "YER": 0,
      "ZMK": 0,
      "ZWD": 0
    };
    return currencyDigits_generated;
  }
  var numberingSystems_generated = {};
  var hasRequiredNumberingSystems_generated;
  function requireNumberingSystems_generated() {
    if (hasRequiredNumberingSystems_generated) return numberingSystems_generated;
    hasRequiredNumberingSystems_generated = 1;
    Object.defineProperty(numberingSystems_generated, "__esModule", { value: true });
    numberingSystems_generated.numberingSystemNames = void 0;
    numberingSystems_generated.numberingSystemNames = ["adlm", "ahom", "arab", "arabext", "armn", "armnlow", "bali", "beng", "bhks", "brah", "cakm", "cham", "cyrl", "deva", "diak", "ethi", "fullwide", "gara", "geor", "gong", "gonm", "grek", "greklow", "gujr", "gukh", "guru", "hanidays", "hanidec", "hans", "hansfin", "hant", "hantfin", "hebr", "hmng", "hmnp", "java", "jpan", "jpanfin", "jpanyear", "kali", "kawi", "khmr", "knda", "krai", "lana", "lanatham", "laoo", "latn", "lepc", "limb", "mathbold", "mathdbl", "mathmono", "mathsanb", "mathsans", "mlym", "modi", "mong", "mroo", "mtei", "mymr", "mymrepka", "mymrpao", "mymrshan", "mymrtlng", "nagm", "newa", "nkoo", "olck", "onao", "orya", "osma", "outlined", "rohg", "roman", "romanlow", "saur", "segment", "shrd", "sind", "sinh", "sora", "sund", "sunu", "takr", "talu", "taml", "tamldec", "telu", "thai", "tibt", "tirh", "tnsa", "vaii", "wara", "wcho"];
    return numberingSystems_generated;
  }
  var get_internal_slots$2 = {};
  var hasRequiredGet_internal_slots$2;
  function requireGet_internal_slots$2() {
    if (hasRequiredGet_internal_slots$2) return get_internal_slots$2;
    hasRequiredGet_internal_slots$2 = 1;
    Object.defineProperty(get_internal_slots$2, "__esModule", { value: true });
    get_internal_slots$2.default = getInternalSlots;
    var internalSlotMap = /* @__PURE__ */ new WeakMap();
    function getInternalSlots(x) {
      var internalSlots = internalSlotMap.get(x);
      if (!internalSlots) {
        internalSlots = /* @__PURE__ */ Object.create(null);
        internalSlotMap.set(x, internalSlots);
      }
      return internalSlots;
    }
    return get_internal_slots$2;
  }
  var hasRequiredCore;
  function requireCore() {
    if (hasRequiredCore) return core;
    hasRequiredCore = 1;
    (function(exports2) {
      Object.defineProperty(exports2, "__esModule", { value: true });
      exports2.NumberFormat = void 0;
      var tslib_1 = require$$0$1;
      var ecma402_abstract_1 = require$$1;
      var currency_digits_generated_1 = requireCurrencyDigits_generated();
      var numbering_systems_generated_1 = requireNumberingSystems_generated();
      var get_internal_slots_1 = tslib_1.__importDefault(requireGet_internal_slots$2());
      var RESOLVED_OPTIONS_KEYS = [
        "locale",
        "numberingSystem",
        "style",
        "currency",
        "currencyDisplay",
        "currencySign",
        "unit",
        "unitDisplay",
        "minimumIntegerDigits",
        "minimumFractionDigits",
        "maximumFractionDigits",
        "minimumSignificantDigits",
        "maximumSignificantDigits",
        "useGrouping",
        "notation",
        "compactDisplay",
        "signDisplay"
      ];
      exports2.NumberFormat = function(locales, options) {
        if (!this || !(0, ecma402_abstract_1.OrdinaryHasInstance)(exports2.NumberFormat, this)) {
          return new exports2.NumberFormat(locales, options);
        }
        (0, ecma402_abstract_1.InitializeNumberFormat)(this, locales, options, {
          getInternalSlots: get_internal_slots_1.default,
          localeData: exports2.NumberFormat.localeData,
          availableLocales: exports2.NumberFormat.availableLocales,
          getDefaultLocale: exports2.NumberFormat.getDefaultLocale,
          currencyDigitsData: currency_digits_generated_1.currencyDigitsData,
          numberingSystemNames: numbering_systems_generated_1.numberingSystemNames
        });
        var internalSlots = (0, get_internal_slots_1.default)(this);
        var dataLocale = internalSlots.dataLocale;
        var dataLocaleData = exports2.NumberFormat.localeData[dataLocale];
        (0, ecma402_abstract_1.invariant)(dataLocaleData !== void 0, "Cannot load locale-dependent data for ".concat(dataLocale, "."));
        internalSlots.pl = (0, ecma402_abstract_1.createMemoizedPluralRules)(dataLocale, {
          minimumFractionDigits: internalSlots.minimumFractionDigits,
          maximumFractionDigits: internalSlots.maximumFractionDigits,
          minimumIntegerDigits: internalSlots.minimumIntegerDigits,
          minimumSignificantDigits: internalSlots.minimumSignificantDigits,
          maximumSignificantDigits: internalSlots.maximumSignificantDigits
        });
        return this;
      };
      function formatToParts2(x) {
        return (0, ecma402_abstract_1.FormatNumericToParts)(this, (0, ecma402_abstract_1.ToIntlMathematicalValue)(x), {
          getInternalSlots: get_internal_slots_1.default
        });
      }
      function formatRange(start, end) {
        return (0, ecma402_abstract_1.FormatNumericRange)(this, (0, ecma402_abstract_1.ToIntlMathematicalValue)(start), (0, ecma402_abstract_1.ToIntlMathematicalValue)(end), {
          getInternalSlots: get_internal_slots_1.default
        });
      }
      function formatRangeToParts(start, end) {
        return (0, ecma402_abstract_1.FormatNumericRangeToParts)(this, (0, ecma402_abstract_1.ToIntlMathematicalValue)(start), (0, ecma402_abstract_1.ToIntlMathematicalValue)(end), {
          getInternalSlots: get_internal_slots_1.default
        });
      }
      try {
        Object.defineProperty(formatToParts2, "name", {
          value: "formatToParts",
          enumerable: false,
          writable: false,
          configurable: true
        });
      } catch (e) {
      }
      (0, ecma402_abstract_1.defineProperty)(exports2.NumberFormat.prototype, "formatToParts", {
        value: formatToParts2
      });
      (0, ecma402_abstract_1.defineProperty)(exports2.NumberFormat.prototype, "formatRange", {
        value: formatRange
      });
      (0, ecma402_abstract_1.defineProperty)(exports2.NumberFormat.prototype, "formatRangeToParts", {
        value: formatRangeToParts
      });
      (0, ecma402_abstract_1.defineProperty)(exports2.NumberFormat.prototype, "resolvedOptions", {
        value: function resolvedOptions() {
          if (typeof this !== "object" || !(0, ecma402_abstract_1.OrdinaryHasInstance)(exports2.NumberFormat, this)) {
            throw TypeError("Method Intl.NumberFormat.prototype.resolvedOptions called on incompatible receiver");
          }
          var internalSlots = (0, get_internal_slots_1.default)(this);
          var ro = {};
          for (var _i = 0, RESOLVED_OPTIONS_KEYS_1 = RESOLVED_OPTIONS_KEYS; _i < RESOLVED_OPTIONS_KEYS_1.length; _i++) {
            var key = RESOLVED_OPTIONS_KEYS_1[_i];
            var value2 = internalSlots[key];
            if (value2 !== void 0) {
              ro[key] = value2;
            }
          }
          if (internalSlots.roundingType === "morePrecision") {
            ro.roundingPriority = "morePrecision";
          } else if (internalSlots.roundingType === "lessPrecision") {
            ro.roundingPriority = "lessPrecision";
          } else {
            ro.roundingPriority = "auto";
          }
          return ro;
        }
      });
      var formatDescriptor = {
        enumerable: false,
        configurable: true,
        get: function() {
          if (typeof this !== "object" || !(0, ecma402_abstract_1.OrdinaryHasInstance)(exports2.NumberFormat, this)) {
            throw TypeError("Intl.NumberFormat format property accessor called on incompatible receiver");
          }
          var internalSlots = (0, get_internal_slots_1.default)(this);
          var boundFormat = internalSlots.boundFormat;
          if (boundFormat === void 0) {
            boundFormat = function(value2) {
              return (0, ecma402_abstract_1.FormatNumeric)(internalSlots, (0, ecma402_abstract_1.ToIntlMathematicalValue)(value2));
            };
            try {
              Object.defineProperty(boundFormat, "name", {
                configurable: true,
                enumerable: false,
                writable: false,
                value: ""
              });
            } catch (e) {
            }
            internalSlots.boundFormat = boundFormat;
          }
          return boundFormat;
        }
      };
      try {
        Object.defineProperty(formatDescriptor.get, "name", {
          configurable: true,
          enumerable: false,
          writable: false,
          value: "get format"
        });
      } catch (e) {
      }
      Object.defineProperty(exports2.NumberFormat.prototype, "format", formatDescriptor);
      (0, ecma402_abstract_1.defineProperty)(exports2.NumberFormat, "supportedLocalesOf", {
        value: function supportedLocalesOf(locales, options) {
          return (0, ecma402_abstract_1.SupportedLocales)(exports2.NumberFormat.availableLocales, (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales), options);
        }
      });
      exports2.NumberFormat.__addLocaleData = function __addLocaleData() {
        var data2 = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          data2[_i] = arguments[_i];
        }
        for (var _a2 = 0, data_1 = data2; _a2 < data_1.length; _a2++) {
          var _b = data_1[_a2], d = _b.data, locale = _b.locale;
          var minimizedLocale = new Intl.Locale(locale).minimize().toString();
          exports2.NumberFormat.localeData[locale] = exports2.NumberFormat.localeData[minimizedLocale] = d;
          exports2.NumberFormat.availableLocales.add(minimizedLocale);
          exports2.NumberFormat.availableLocales.add(locale);
          if (!exports2.NumberFormat.__defaultLocale) {
            exports2.NumberFormat.__defaultLocale = minimizedLocale;
          }
        }
      };
      exports2.NumberFormat.__addUnitData = function __addUnitData(locale, unitsData) {
        var _a2 = exports2.NumberFormat.localeData, _b = locale, existingData = _a2[_b];
        if (!existingData) {
          throw new Error('Locale data for "'.concat(locale, '" has not been loaded in NumberFormat. \nPlease __addLocaleData before adding additional unit data'));
        }
        for (var unit in unitsData.simple) {
          existingData.units.simple[unit] = unitsData.simple[unit];
        }
        for (var unit in unitsData.compound) {
          existingData.units.compound[unit] = unitsData.compound[unit];
        }
      };
      exports2.NumberFormat.__defaultLocale = "";
      exports2.NumberFormat.localeData = {};
      exports2.NumberFormat.availableLocales = /* @__PURE__ */ new Set();
      exports2.NumberFormat.getDefaultLocale = function() {
        return exports2.NumberFormat.__defaultLocale;
      };
      exports2.NumberFormat.polyfilled = true;
      try {
        if (typeof Symbol !== "undefined") {
          Object.defineProperty(exports2.NumberFormat.prototype, Symbol.toStringTag, {
            configurable: true,
            enumerable: false,
            writable: false,
            value: "Intl.NumberFormat"
          });
        }
        Object.defineProperty(exports2.NumberFormat.prototype.constructor, "length", {
          configurable: true,
          enumerable: false,
          writable: false,
          value: 0
        });
        Object.defineProperty(exports2.NumberFormat.supportedLocalesOf, "length", {
          configurable: true,
          enumerable: false,
          writable: false,
          value: 1
        });
        Object.defineProperty(exports2.NumberFormat, "prototype", {
          configurable: false,
          enumerable: false,
          writable: false,
          value: exports2.NumberFormat.prototype
        });
      } catch (e) {
      }
    })(core);
    return core;
  }
  var to_locale_string = {};
  var hasRequiredTo_locale_string;
  function requireTo_locale_string() {
    if (hasRequiredTo_locale_string) return to_locale_string;
    hasRequiredTo_locale_string = 1;
    Object.defineProperty(to_locale_string, "__esModule", { value: true });
    to_locale_string.toLocaleString = toLocaleString;
    var core_1 = requireCore();
    function toLocaleString(x, locales, options) {
      var numberFormat = new core_1.NumberFormat(locales, options);
      return numberFormat.format(x);
    }
    return to_locale_string;
  }
  var shouldPolyfill$2 = {};
  var supportedLocales_generated$2 = {};
  var hasRequiredSupportedLocales_generated$2;
  function requireSupportedLocales_generated$2() {
    if (hasRequiredSupportedLocales_generated$2) return supportedLocales_generated$2;
    hasRequiredSupportedLocales_generated$2 = 1;
    Object.defineProperty(supportedLocales_generated$2, "__esModule", { value: true });
    supportedLocales_generated$2.supportedLocales = void 0;
    supportedLocales_generated$2.supportedLocales = ["af", "af-NA", "agq", "ak", "am", "ar", "ar-AE", "ar-BH", "ar-DJ", "ar-DZ", "ar-EG", "ar-EH", "ar-ER", "ar-IL", "ar-IQ", "ar-JO", "ar-KM", "ar-KW", "ar-LB", "ar-LY", "ar-MA", "ar-MR", "ar-OM", "ar-PS", "ar-QA", "ar-SA", "ar-SD", "ar-SO", "ar-SS", "ar-SY", "ar-TD", "ar-TN", "ar-YE", "as", "asa", "ast", "az", "az-Cyrl", "az-Latn", "bas", "be", "be-tarask", "bem", "bez", "bg", "bm", "bn", "bn-IN", "bo", "bo-IN", "br", "brx", "bs", "bs-Cyrl", "bs-Latn", "ca", "ca-AD", "ca-ES-valencia", "ca-FR", "ca-IT", "ccp", "ccp-IN", "ce", "ceb", "cgg", "chr", "ckb", "ckb-IR", "cs", "cy", "da", "da-GL", "dav", "de", "de-AT", "de-BE", "de-CH", "de-IT", "de-LI", "de-LU", "dje", "doi", "dsb", "dua", "dyo", "dz", "ebu", "ee", "ee-TG", "el", "el-CY", "en", "en-001", "en-150", "en-AE", "en-AG", "en-AI", "en-AS", "en-AT", "en-AU", "en-BB", "en-BE", "en-BI", "en-BM", "en-BS", "en-BW", "en-BZ", "en-CA", "en-CC", "en-CH", "en-CK", "en-CM", "en-CX", "en-CY", "en-DE", "en-DG", "en-DK", "en-DM", "en-ER", "en-FI", "en-FJ", "en-FK", "en-FM", "en-GB", "en-GD", "en-GG", "en-GH", "en-GI", "en-GM", "en-GU", "en-GY", "en-HK", "en-IE", "en-IL", "en-IM", "en-IN", "en-IO", "en-JE", "en-JM", "en-KE", "en-KI", "en-KN", "en-KY", "en-LC", "en-LR", "en-LS", "en-MG", "en-MH", "en-MO", "en-MP", "en-MS", "en-MT", "en-MU", "en-MW", "en-MY", "en-NA", "en-NF", "en-NG", "en-NL", "en-NR", "en-NU", "en-NZ", "en-PG", "en-PH", "en-PK", "en-PN", "en-PR", "en-PW", "en-RW", "en-SB", "en-SC", "en-SD", "en-SE", "en-SG", "en-SH", "en-SI", "en-SL", "en-SS", "en-SX", "en-SZ", "en-TC", "en-TK", "en-TO", "en-TT", "en-TV", "en-TZ", "en-UG", "en-UM", "en-VC", "en-VG", "en-VI", "en-VU", "en-WS", "en-ZA", "en-ZM", "en-ZW", "eo", "es", "es-419", "es-AR", "es-BO", "es-BR", "es-BZ", "es-CL", "es-CO", "es-CR", "es-CU", "es-DO", "es-EA", "es-EC", "es-GQ", "es-GT", "es-HN", "es-IC", "es-MX", "es-NI", "es-PA", "es-PE", "es-PH", "es-PR", "es-PY", "es-SV", "es-US", "es-UY", "es-VE", "et", "eu", "ewo", "fa", "fa-AF", "ff", "ff-Adlm", "ff-Adlm-BF", "ff-Adlm-CM", "ff-Adlm-GH", "ff-Adlm-GM", "ff-Adlm-GW", "ff-Adlm-LR", "ff-Adlm-MR", "ff-Adlm-NE", "ff-Adlm-NG", "ff-Adlm-SL", "ff-Adlm-SN", "ff-Latn", "ff-Latn-BF", "ff-Latn-CM", "ff-Latn-GH", "ff-Latn-GM", "ff-Latn-GN", "ff-Latn-GW", "ff-Latn-LR", "ff-Latn-MR", "ff-Latn-NE", "ff-Latn-NG", "ff-Latn-SL", "fi", "fil", "fo", "fo-DK", "fr", "fr-BE", "fr-BF", "fr-BI", "fr-BJ", "fr-BL", "fr-CA", "fr-CD", "fr-CF", "fr-CG", "fr-CH", "fr-CI", "fr-CM", "fr-DJ", "fr-DZ", "fr-GA", "fr-GF", "fr-GN", "fr-GP", "fr-GQ", "fr-HT", "fr-KM", "fr-LU", "fr-MA", "fr-MC", "fr-MF", "fr-MG", "fr-ML", "fr-MQ", "fr-MR", "fr-MU", "fr-NC", "fr-NE", "fr-PF", "fr-PM", "fr-RE", "fr-RW", "fr-SC", "fr-SN", "fr-SY", "fr-TD", "fr-TG", "fr-TN", "fr-VU", "fr-WF", "fr-YT", "fur", "fy", "ga", "ga-GB", "gd", "gl", "gsw", "gsw-FR", "gsw-LI", "gu", "guz", "gv", "ha", "ha-GH", "ha-NE", "haw", "he", "hi", "hr", "hr-BA", "hsb", "hu", "hy", "ia", "id", "ig", "ii", "is", "it", "it-CH", "it-SM", "it-VA", "ja", "jgo", "jmc", "jv", "ka", "kab", "kam", "kde", "kea", "kgp", "khq", "ki", "kk", "kkj", "kl", "kln", "km", "kn", "ko", "ko-KP", "kok", "ks", "ks-Arab", "ksb", "ksf", "ksh", "ku", "kw", "ky", "lag", "lb", "lg", "lkt", "ln", "ln-AO", "ln-CF", "ln-CG", "lo", "lrc", "lrc-IQ", "lt", "lu", "luo", "luy", "lv", "mai", "mas", "mas-TZ", "mer", "mfe", "mg", "mgh", "mgo", "mi", "mk", "ml", "mn", "mni", "mni-Beng", "mr", "ms", "ms-BN", "ms-ID", "ms-SG", "mt", "mua", "my", "mzn", "naq", "nb", "nb-SJ", "nd", "nds", "nds-NL", "ne", "ne-IN", "nl", "nl-AW", "nl-BE", "nl-BQ", "nl-CW", "nl-SR", "nl-SX", "nmg", "nn", "nnh", "no", "nus", "nyn", "om", "om-KE", "or", "os", "os-RU", "pa", "pa-Arab", "pa-Guru", "pcm", "pl", "ps", "ps-PK", "pt", "pt-AO", "pt-CH", "pt-CV", "pt-GQ", "pt-GW", "pt-LU", "pt-MO", "pt-MZ", "pt-PT", "pt-ST", "pt-TL", "qu", "qu-BO", "qu-EC", "rm", "rn", "ro", "ro-MD", "rof", "ru", "ru-BY", "ru-KG", "ru-KZ", "ru-MD", "ru-UA", "rw", "rwk", "sa", "sah", "saq", "sat", "sat-Olck", "sbp", "sc", "sd", "sd-Arab", "sd-Deva", "se", "se-FI", "se-SE", "seh", "ses", "sg", "shi", "shi-Latn", "shi-Tfng", "si", "sk", "sl", "smn", "sn", "so", "so-DJ", "so-ET", "so-KE", "sq", "sq-MK", "sq-XK", "sr", "sr-Cyrl", "sr-Cyrl-BA", "sr-Cyrl-ME", "sr-Cyrl-XK", "sr-Latn", "sr-Latn-BA", "sr-Latn-ME", "sr-Latn-XK", "su", "su-Latn", "sv", "sv-AX", "sv-FI", "sw", "sw-CD", "sw-KE", "sw-UG", "ta", "ta-LK", "ta-MY", "ta-SG", "te", "teo", "teo-KE", "tg", "th", "ti", "ti-ER", "tk", "to", "tr", "tr-CY", "tt", "twq", "tzm", "ug", "uk", "und", "ur", "ur-IN", "uz", "uz-Arab", "uz-Cyrl", "uz-Latn", "vai", "vai-Latn", "vai-Vaii", "vi", "vun", "wae", "wo", "xh", "xog", "yav", "yi", "yo", "yo-BJ", "yrl", "yrl-CO", "yrl-VE", "yue", "yue-Hans", "yue-Hant", "zgh", "zh", "zh-Hans", "zh-Hans-HK", "zh-Hans-MO", "zh-Hans-SG", "zh-Hant", "zh-Hant-HK", "zh-Hant-MO", "zu"];
    return supportedLocales_generated$2;
  }
  var hasRequiredShouldPolyfill$2;
  function requireShouldPolyfill$2() {
    if (hasRequiredShouldPolyfill$2) return shouldPolyfill$2;
    hasRequiredShouldPolyfill$2 = 1;
    Object.defineProperty(shouldPolyfill$2, "__esModule", { value: true });
    shouldPolyfill$2.shouldPolyfill = shouldPolyfill2;
    var intl_localematcher_1 = require$$0;
    var supported_locales_generated_1 = requireSupportedLocales_generated$2();
    function onlySupportsEn() {
      return !Intl.NumberFormat.polyfilled && !Intl.NumberFormat.supportedLocalesOf(["es"]).length;
    }
    function supportsES2020() {
      try {
        var s = new Intl.NumberFormat("en", {
          style: "unit",
          unit: "bit",
          unitDisplay: "long",
          notation: "scientific"
        }).format(1e4);
        if (s !== "1E4 bits") {
          return false;
        }
      } catch (e) {
        return false;
      }
      return true;
    }
    function supportsES2023() {
      try {
        var s = new Intl.NumberFormat("en", {
          notation: "compact",
          minimumSignificantDigits: 3,
          maximumSignificantDigits: 3,
          minimumFractionDigits: 2,
          maximumFractionDigits: 2,
          // @ts-ignore TS types are old
          roundingPriority: "morePrecision"
        }).format(1e8);
        return s === "100.00M";
      } catch (e) {
        return false;
      }
    }
    function supportedLocalesOf(locale) {
      if (!locale) {
        return true;
      }
      var locales = Array.isArray(locale) ? locale : [locale];
      return Intl.NumberFormat.supportedLocalesOf(locales).length === locales.length;
    }
    function shouldPolyfill2(locale) {
      if (locale === void 0) {
        locale = "en";
      }
      if (typeof Intl === "undefined" || !("NumberFormat" in Intl) || !supportsES2020() || !supportsES2023() || onlySupportsEn() || !supportedLocalesOf(locale)) {
        return locale ? (0, intl_localematcher_1.match)([locale], supported_locales_generated_1.supportedLocales, "en") : void 0;
      }
    }
    return shouldPolyfill$2;
  }
  var hasRequiredPolyfill$2;
  function requirePolyfill$2() {
    if (hasRequiredPolyfill$2) return polyfill$2;
    hasRequiredPolyfill$2 = 1;
    Object.defineProperty(polyfill$2, "__esModule", { value: true });
    var core_1 = requireCore();
    var to_locale_string_1 = requireTo_locale_string();
    var ecma402_abstract_1 = require$$1;
    var should_polyfill_1 = requireShouldPolyfill$2();
    if ((0, should_polyfill_1.shouldPolyfill)()) {
      (0, ecma402_abstract_1.defineProperty)(Intl, "NumberFormat", { value: core_1.NumberFormat });
      (0, ecma402_abstract_1.defineProperty)(Number.prototype, "toLocaleString", {
        value: function toLocaleString(locales, options) {
          return (0, to_locale_string_1.toLocaleString)(this, locales, options);
        }
      });
    }
    return polyfill$2;
  }
  requirePolyfill$2();
  var polyfill$1 = {};
  var intlPluralrules = {};
  var InitializePluralRules = {};
  var hasRequiredInitializePluralRules;
  function requireInitializePluralRules() {
    if (hasRequiredInitializePluralRules) return InitializePluralRules;
    hasRequiredInitializePluralRules = 1;
    Object.defineProperty(InitializePluralRules, "__esModule", { value: true });
    InitializePluralRules.InitializePluralRules = InitializePluralRules$1;
    var ecma402_abstract_1 = require$$1;
    var intl_localematcher_1 = require$$0;
    function InitializePluralRules$1(pl, locales, options, _a2) {
      var availableLocales = _a2.availableLocales, relevantExtensionKeys = _a2.relevantExtensionKeys, localeData = _a2.localeData, getDefaultLocale = _a2.getDefaultLocale, getInternalSlots = _a2.getInternalSlots;
      var requestedLocales = (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales);
      var opt = /* @__PURE__ */ Object.create(null);
      var opts = (0, ecma402_abstract_1.CoerceOptionsToObject)(options);
      var internalSlots = getInternalSlots(pl);
      internalSlots.initializedPluralRules = true;
      var matcher = (0, ecma402_abstract_1.GetOption)(opts, "localeMatcher", "string", ["best fit", "lookup"], "best fit");
      opt.localeMatcher = matcher;
      var r = (0, intl_localematcher_1.ResolveLocale)(availableLocales, requestedLocales, opt, relevantExtensionKeys, localeData, getDefaultLocale);
      internalSlots.locale = r.locale;
      internalSlots.type = (0, ecma402_abstract_1.GetOption)(opts, "type", "string", ["cardinal", "ordinal"], "cardinal");
      (0, ecma402_abstract_1.SetNumberFormatDigitOptions)(internalSlots, opts, 0, 3, "standard");
      return pl;
    }
    return InitializePluralRules;
  }
  var ResolvePlural = {};
  var GetOperands = {};
  var hasRequiredGetOperands;
  function requireGetOperands() {
    if (hasRequiredGetOperands) return GetOperands;
    hasRequiredGetOperands = 1;
    Object.defineProperty(GetOperands, "__esModule", { value: true });
    GetOperands.GetOperands = GetOperands$1;
    var ecma402_abstract_1 = require$$1;
    function GetOperands$1(s) {
      (0, ecma402_abstract_1.invariant)(typeof s === "string", "GetOperands should have been called with a string");
      var n = (0, ecma402_abstract_1.ToNumber)(s);
      (0, ecma402_abstract_1.invariant)(n.isFinite(), "n should be finite");
      var dp = s.indexOf(".");
      var iv;
      var f;
      var v;
      var fv = "";
      if (dp === -1) {
        iv = n;
        f = ecma402_abstract_1.ZERO;
        v = 0;
      } else {
        iv = s.slice(0, dp);
        fv = s.slice(dp, s.length);
        f = (0, ecma402_abstract_1.ToNumber)(fv);
        v = fv.length;
      }
      var i = (0, ecma402_abstract_1.ToNumber)(iv).abs();
      var w;
      var t;
      if (!f.isZero()) {
        var ft = fv.replace(/0+$/, "");
        w = ft.length;
        t = (0, ecma402_abstract_1.ToNumber)(ft);
      } else {
        w = 0;
        t = ecma402_abstract_1.ZERO;
      }
      return {
        Number: n,
        IntegerDigits: i.toNumber(),
        NumberOfFractionDigits: v,
        NumberOfFractionDigitsWithoutTrailing: w,
        FractionDigits: f.toNumber(),
        FractionDigitsWithoutTrailing: t.toNumber()
      };
    }
    return GetOperands;
  }
  var hasRequiredResolvePlural;
  function requireResolvePlural() {
    if (hasRequiredResolvePlural) return ResolvePlural;
    hasRequiredResolvePlural = 1;
    Object.defineProperty(ResolvePlural, "__esModule", { value: true });
    ResolvePlural.ResolvePlural = ResolvePlural$1;
    var ecma402_abstract_1 = require$$1;
    var GetOperands_1 = requireGetOperands();
    function ResolvePlural$1(pl, n, _a2) {
      var getInternalSlots = _a2.getInternalSlots, PluralRuleSelect = _a2.PluralRuleSelect;
      var internalSlots = getInternalSlots(pl);
      (0, ecma402_abstract_1.invariant)((0, ecma402_abstract_1.Type)(internalSlots) === "Object", "pl has to be an object");
      (0, ecma402_abstract_1.invariant)("initializedPluralRules" in internalSlots, "pluralrules must be initialized");
      if (!n.isFinite()) {
        return "other";
      }
      var locale = internalSlots.locale, type = internalSlots.type;
      var res = (0, ecma402_abstract_1.FormatNumericToString)(internalSlots, n);
      var s = res.formattedString;
      var operands = (0, GetOperands_1.GetOperands)(s);
      return PluralRuleSelect(locale, type, n, operands);
    }
    return ResolvePlural;
  }
  var get_internal_slots$1 = {};
  var hasRequiredGet_internal_slots$1;
  function requireGet_internal_slots$1() {
    if (hasRequiredGet_internal_slots$1) return get_internal_slots$1;
    hasRequiredGet_internal_slots$1 = 1;
    Object.defineProperty(get_internal_slots$1, "__esModule", { value: true });
    get_internal_slots$1.default = getInternalSlots;
    var internalSlotMap = /* @__PURE__ */ new WeakMap();
    function getInternalSlots(x) {
      var internalSlots = internalSlotMap.get(x);
      if (!internalSlots) {
        internalSlots = /* @__PURE__ */ Object.create(null);
        internalSlotMap.set(x, internalSlots);
      }
      return internalSlots;
    }
    return get_internal_slots$1;
  }
  var hasRequiredIntlPluralrules;
  function requireIntlPluralrules() {
    if (hasRequiredIntlPluralrules) return intlPluralrules;
    hasRequiredIntlPluralrules = 1;
    Object.defineProperty(intlPluralrules, "__esModule", { value: true });
    intlPluralrules.PluralRules = void 0;
    var tslib_1 = require$$0$1;
    var ecma402_abstract_1 = require$$1;
    var InitializePluralRules_1 = requireInitializePluralRules();
    var ResolvePlural_1 = requireResolvePlural();
    var get_internal_slots_1 = tslib_1.__importDefault(requireGet_internal_slots$1());
    function validateInstance(instance, method) {
      if (!(instance instanceof PluralRules)) {
        throw new TypeError("Method Intl.PluralRules.prototype.".concat(method, " called on incompatible receiver ").concat(String(instance)));
      }
    }
    function PluralRuleSelect(locale, type, _n, _a2) {
      var IntegerDigits = _a2.IntegerDigits, NumberOfFractionDigits = _a2.NumberOfFractionDigits, FractionDigits = _a2.FractionDigits;
      return PluralRules.localeData[locale].fn(NumberOfFractionDigits ? "".concat(IntegerDigits, ".").concat(FractionDigits) : IntegerDigits, type === "ordinal");
    }
    var PluralRules = (
      /** @class */
      function() {
        function PluralRules2(locales, options) {
          var newTarget = this && this instanceof PluralRules2 ? this.constructor : void 0;
          if (!newTarget) {
            throw new TypeError("Intl.PluralRules must be called with 'new'");
          }
          return (0, InitializePluralRules_1.InitializePluralRules)(this, locales, options, {
            availableLocales: PluralRules2.availableLocales,
            relevantExtensionKeys: PluralRules2.relevantExtensionKeys,
            localeData: PluralRules2.localeData,
            getDefaultLocale: PluralRules2.getDefaultLocale,
            getInternalSlots: get_internal_slots_1.default
          });
        }
        PluralRules2.prototype.resolvedOptions = function() {
          validateInstance(this, "resolvedOptions");
          var opts = /* @__PURE__ */ Object.create(null);
          var internalSlots = (0, get_internal_slots_1.default)(this);
          opts.locale = internalSlots.locale;
          opts.type = internalSlots.type;
          [
            "minimumIntegerDigits",
            "minimumFractionDigits",
            "maximumFractionDigits",
            "minimumSignificantDigits",
            "maximumSignificantDigits"
          ].forEach(function(field) {
            var val = internalSlots[field];
            if (val !== void 0) {
              opts[field] = val;
            }
          });
          opts.pluralCategories = tslib_1.__spreadArray([], PluralRules2.localeData[opts.locale].categories[opts.type], true);
          return opts;
        };
        PluralRules2.prototype.select = function(val) {
          var pr = this;
          validateInstance(pr, "select");
          var n = (0, ecma402_abstract_1.ToNumber)(val);
          return (0, ResolvePlural_1.ResolvePlural)(pr, n, { getInternalSlots: get_internal_slots_1.default, PluralRuleSelect });
        };
        PluralRules2.prototype.toString = function() {
          return "[object Intl.PluralRules]";
        };
        PluralRules2.supportedLocalesOf = function(locales, options) {
          return (0, ecma402_abstract_1.SupportedLocales)(PluralRules2.availableLocales, (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales), options);
        };
        PluralRules2.__addLocaleData = function() {
          var data2 = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            data2[_i] = arguments[_i];
          }
          for (var _a2 = 0, data_1 = data2; _a2 < data_1.length; _a2++) {
            var _b = data_1[_a2], d = _b.data, locale = _b.locale;
            PluralRules2.localeData[locale] = d;
            PluralRules2.availableLocales.add(locale);
            if (!PluralRules2.__defaultLocale) {
              PluralRules2.__defaultLocale = locale;
            }
          }
        };
        PluralRules2.getDefaultLocale = function() {
          return PluralRules2.__defaultLocale;
        };
        PluralRules2.localeData = {};
        PluralRules2.availableLocales = /* @__PURE__ */ new Set();
        PluralRules2.__defaultLocale = "";
        PluralRules2.relevantExtensionKeys = [];
        PluralRules2.polyfilled = true;
        return PluralRules2;
      }()
    );
    intlPluralrules.PluralRules = PluralRules;
    try {
      if (typeof Symbol !== "undefined") {
        Object.defineProperty(PluralRules.prototype, Symbol.toStringTag, {
          value: "Intl.PluralRules",
          writable: false,
          enumerable: false,
          configurable: true
        });
      }
      try {
        Object.defineProperty(PluralRules, "length", {
          value: 0,
          writable: false,
          enumerable: false,
          configurable: true
        });
      } catch (error) {
      }
      Object.defineProperty(PluralRules.prototype.constructor, "length", {
        value: 0,
        writable: false,
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(PluralRules.supportedLocalesOf, "length", {
        value: 1,
        writable: false,
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(PluralRules, "name", {
        value: "PluralRules",
        writable: false,
        enumerable: false,
        configurable: true
      });
    } catch (ex) {
    }
    return intlPluralrules;
  }
  var shouldPolyfill$1 = {};
  var supportedLocales_generated$1 = {};
  var hasRequiredSupportedLocales_generated$1;
  function requireSupportedLocales_generated$1() {
    if (hasRequiredSupportedLocales_generated$1) return supportedLocales_generated$1;
    hasRequiredSupportedLocales_generated$1 = 1;
    Object.defineProperty(supportedLocales_generated$1, "__esModule", { value: true });
    supportedLocales_generated$1.supportedLocales = void 0;
    supportedLocales_generated$1.supportedLocales = ["af", "ak", "am", "an", "ar", "ars", "as", "asa", "ast", "az", "bal", "be", "bem", "bez", "bg", "bho", "bm", "bn", "bo", "br", "brx", "bs", "ca", "ce", "ceb", "cgg", "chr", "ckb", "cs", "cy", "da", "de", "doi", "dsb", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fil", "fo", "fr", "fur", "fy", "ga", "gd", "gl", "gsw", "gu", "guw", "gv", "ha", "haw", "he", "hi", "hnj", "hr", "hsb", "hu", "hy", "ia", "id", "ig", "ii", "io", "is", "it", "iu", "ja", "jbo", "jgo", "jmc", "jv", "jw", "ka", "kab", "kaj", "kcg", "kde", "kea", "kk", "kkj", "kl", "km", "kn", "ko", "ks", "ksb", "ksh", "ku", "kw", "ky", "lag", "lb", "lg", "lij", "lkt", "ln", "lo", "lt", "lv", "mas", "mg", "mgo", "mk", "ml", "mn", "mo", "mr", "ms", "mt", "my", "nah", "naq", "nb", "nd", "ne", "nl", "nn", "nnh", "no", "nqo", "nr", "nso", "ny", "nyn", "om", "or", "os", "osa", "pa", "pap", "pcm", "pl", "prg", "ps", "pt", "pt-PT", "rm", "ro", "rof", "ru", "rwk", "sah", "saq", "sat", "sc", "scn", "sd", "sdh", "se", "seh", "ses", "sg", "sh", "shi", "si", "sk", "sl", "sma", "smi", "smj", "smn", "sms", "sn", "so", "sq", "sr", "ss", "ssy", "st", "su", "sv", "sw", "syr", "ta", "te", "teo", "th", "ti", "tig", "tk", "tl", "tn", "to", "tpi", "tr", "ts", "tzm", "ug", "uk", "und", "ur", "uz", "ve", "vi", "vo", "vun", "wa", "wae", "wo", "xh", "xog", "yi", "yo", "yue", "zh", "zu"];
    return supportedLocales_generated$1;
  }
  var hasRequiredShouldPolyfill$1;
  function requireShouldPolyfill$1() {
    if (hasRequiredShouldPolyfill$1) return shouldPolyfill$1;
    hasRequiredShouldPolyfill$1 = 1;
    Object.defineProperty(shouldPolyfill$1, "__esModule", { value: true });
    shouldPolyfill$1.shouldPolyfill = shouldPolyfill2;
    var intl_localematcher_1 = require$$0;
    var supported_locales_generated_1 = requireSupportedLocales_generated$1();
    function supportedLocalesOf(locale) {
      if (!locale) {
        return true;
      }
      var locales = Array.isArray(locale) ? locale : [locale];
      return Intl.PluralRules.supportedLocalesOf(locales).length === locales.length;
    }
    function shouldPolyfill2(locale) {
      if (locale === void 0) {
        locale = "en";
      }
      if (!("PluralRules" in Intl) || new Intl.PluralRules("en", { minimumFractionDigits: 2 }).select(1) === "one" || !supportedLocalesOf(locale)) {
        return locale ? (0, intl_localematcher_1.match)([locale], supported_locales_generated_1.supportedLocales, "en") : void 0;
      }
    }
    return shouldPolyfill$1;
  }
  var hasRequiredPolyfill$1;
  function requirePolyfill$1() {
    if (hasRequiredPolyfill$1) return polyfill$1;
    hasRequiredPolyfill$1 = 1;
    Object.defineProperty(polyfill$1, "__esModule", { value: true });
    var _1 = requireIntlPluralrules();
    var should_polyfill_1 = requireShouldPolyfill$1();
    if ((0, should_polyfill_1.shouldPolyfill)()) {
      Object.defineProperty(Intl, "PluralRules", {
        value: _1.PluralRules,
        writable: true,
        enumerable: false,
        configurable: true
      });
    }
    return polyfill$1;
  }
  requirePolyfill$1();
  var polyfill = {};
  var intlRelativetimeformat = {};
  var InitializeRelativeTimeFormat = {};
  var hasRequiredInitializeRelativeTimeFormat;
  function requireInitializeRelativeTimeFormat() {
    if (hasRequiredInitializeRelativeTimeFormat) return InitializeRelativeTimeFormat;
    hasRequiredInitializeRelativeTimeFormat = 1;
    Object.defineProperty(InitializeRelativeTimeFormat, "__esModule", { value: true });
    InitializeRelativeTimeFormat.InitializeRelativeTimeFormat = InitializeRelativeTimeFormat$1;
    var ecma402_abstract_1 = require$$1;
    var intl_localematcher_1 = require$$0;
    var NUMBERING_SYSTEM_REGEX = /^[a-z0-9]{3,8}(-[a-z0-9]{3,8})*$/i;
    function InitializeRelativeTimeFormat$1(rtf, locales, options, _a2) {
      var getInternalSlots = _a2.getInternalSlots, availableLocales = _a2.availableLocales, relevantExtensionKeys = _a2.relevantExtensionKeys, localeData = _a2.localeData, getDefaultLocale = _a2.getDefaultLocale;
      var internalSlots = getInternalSlots(rtf);
      internalSlots.initializedRelativeTimeFormat = true;
      var requestedLocales = (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales);
      var opt = /* @__PURE__ */ Object.create(null);
      var opts = (0, ecma402_abstract_1.CoerceOptionsToObject)(options);
      var matcher = (0, ecma402_abstract_1.GetOption)(opts, "localeMatcher", "string", ["best fit", "lookup"], "best fit");
      opt.localeMatcher = matcher;
      var numberingSystem = (0, ecma402_abstract_1.GetOption)(
        opts,
        // @ts-expect-error TS option is wack
        "numberingSystem",
        "string",
        void 0,
        void 0
      );
      if (numberingSystem !== void 0) {
        if (!NUMBERING_SYSTEM_REGEX.test(numberingSystem)) {
          throw new RangeError("Invalid numbering system ".concat(numberingSystem));
        }
      }
      opt.nu = numberingSystem;
      var r = (0, intl_localematcher_1.ResolveLocale)(availableLocales, requestedLocales, opt, relevantExtensionKeys, localeData, getDefaultLocale);
      var locale = r.locale, nu = r.nu;
      internalSlots.locale = locale;
      internalSlots.style = (0, ecma402_abstract_1.GetOption)(opts, "style", "string", ["long", "narrow", "short"], "long");
      internalSlots.numeric = (0, ecma402_abstract_1.GetOption)(opts, "numeric", "string", ["always", "auto"], "always");
      var fields = localeData[r.dataLocale];
      (0, ecma402_abstract_1.invariant)(!!fields, "Missing locale data for ".concat(r.dataLocale));
      internalSlots.fields = fields;
      internalSlots.numberFormat = (0, ecma402_abstract_1.createMemoizedNumberFormat)(locales);
      internalSlots.pluralRules = (0, ecma402_abstract_1.createMemoizedPluralRules)(locales);
      internalSlots.numberingSystem = nu;
      return rtf;
    }
    return InitializeRelativeTimeFormat;
  }
  var PartitionRelativeTimePattern = {};
  var SingularRelativeTimeUnit = {};
  var hasRequiredSingularRelativeTimeUnit;
  function requireSingularRelativeTimeUnit() {
    if (hasRequiredSingularRelativeTimeUnit) return SingularRelativeTimeUnit;
    hasRequiredSingularRelativeTimeUnit = 1;
    Object.defineProperty(SingularRelativeTimeUnit, "__esModule", { value: true });
    SingularRelativeTimeUnit.SingularRelativeTimeUnit = SingularRelativeTimeUnit$1;
    var ecma402_abstract_1 = require$$1;
    function SingularRelativeTimeUnit$1(unit) {
      (0, ecma402_abstract_1.invariant)((0, ecma402_abstract_1.Type)(unit) === "String", "unit must be a string");
      if (unit === "seconds")
        return "second";
      if (unit === "minutes")
        return "minute";
      if (unit === "hours")
        return "hour";
      if (unit === "days")
        return "day";
      if (unit === "weeks")
        return "week";
      if (unit === "months")
        return "month";
      if (unit === "quarters")
        return "quarter";
      if (unit === "years")
        return "year";
      if (unit !== "second" && unit !== "minute" && unit !== "hour" && unit !== "day" && unit !== "week" && unit !== "month" && unit !== "quarter" && unit !== "year") {
        throw new RangeError("invalid unit");
      }
      return unit;
    }
    return SingularRelativeTimeUnit;
  }
  var MakePartsList = {};
  var hasRequiredMakePartsList;
  function requireMakePartsList() {
    if (hasRequiredMakePartsList) return MakePartsList;
    hasRequiredMakePartsList = 1;
    Object.defineProperty(MakePartsList, "__esModule", { value: true });
    MakePartsList.MakePartsList = MakePartsList$1;
    var ecma402_abstract_1 = require$$1;
    function MakePartsList$1(pattern, unit, parts) {
      var patternParts = (0, ecma402_abstract_1.PartitionPattern)(pattern);
      var result = [];
      for (var _i = 0, patternParts_1 = patternParts; _i < patternParts_1.length; _i++) {
        var patternPart = patternParts_1[_i];
        if (patternPart.type === "literal") {
          result.push({
            type: "literal",
            value: patternPart.value
          });
        } else {
          (0, ecma402_abstract_1.invariant)(patternPart.type === "0", "Malformed pattern ".concat(pattern));
          for (var _a2 = 0, parts_1 = parts; _a2 < parts_1.length; _a2++) {
            var part = parts_1[_a2];
            result.push({
              type: part.type,
              value: part.value,
              unit
            });
          }
        }
      }
      return result;
    }
    return MakePartsList;
  }
  var hasRequiredPartitionRelativeTimePattern;
  function requirePartitionRelativeTimePattern() {
    if (hasRequiredPartitionRelativeTimePattern) return PartitionRelativeTimePattern;
    hasRequiredPartitionRelativeTimePattern = 1;
    Object.defineProperty(PartitionRelativeTimePattern, "__esModule", { value: true });
    PartitionRelativeTimePattern.PartitionRelativeTimePattern = PartitionRelativeTimePattern$1;
    var ecma402_abstract_1 = require$$1;
    var SingularRelativeTimeUnit_1 = requireSingularRelativeTimeUnit();
    var MakePartsList_1 = requireMakePartsList();
    function PartitionRelativeTimePattern$1(rtf, value2, unit, _a2) {
      var getInternalSlots = _a2.getInternalSlots;
      (0, ecma402_abstract_1.invariant)((0, ecma402_abstract_1.Type)(value2) === "Number", "value must be number, instead got ".concat(typeof value2), TypeError);
      (0, ecma402_abstract_1.invariant)((0, ecma402_abstract_1.Type)(unit) === "String", "unit must be number, instead got ".concat(typeof value2), TypeError);
      if (isNaN(value2) || !isFinite(value2)) {
        throw new RangeError("Invalid value ".concat(value2));
      }
      var resolvedUnit = (0, SingularRelativeTimeUnit_1.SingularRelativeTimeUnit)(unit);
      var _b = getInternalSlots(rtf), fields = _b.fields, style = _b.style, numeric = _b.numeric, pluralRules = _b.pluralRules, numberFormat = _b.numberFormat;
      var entry = resolvedUnit;
      if (style === "short") {
        entry = "".concat(resolvedUnit, "-short");
      } else if (style === "narrow") {
        entry = "".concat(resolvedUnit, "-narrow");
      }
      if (!(entry in fields)) {
        entry = resolvedUnit;
      }
      var patterns = fields[entry];
      if (numeric === "auto") {
        if ((0, ecma402_abstract_1.ToString)(value2) in patterns) {
          return [
            {
              type: "literal",
              value: patterns[(0, ecma402_abstract_1.ToString)(value2)]
            }
          ];
        }
      }
      var tl = "future";
      if ((0, ecma402_abstract_1.SameValue)(value2, -0) || value2 < 0) {
        tl = "past";
      }
      var po = patterns[tl];
      var fv = typeof numberFormat.formatToParts === "function" ? numberFormat.formatToParts(Math.abs(value2)) : (
        // TODO: If formatToParts is not supported, we assume the whole formatted
        // number is a part
        [
          {
            type: "literal",
            value: numberFormat.format(Math.abs(value2)),
            unit
          }
        ]
      );
      var pr = pluralRules.select(value2);
      var pattern = po[pr];
      return (0, MakePartsList_1.MakePartsList)(pattern, resolvedUnit, fv);
    }
    return PartitionRelativeTimePattern;
  }
  var get_internal_slots = {};
  var hasRequiredGet_internal_slots;
  function requireGet_internal_slots() {
    if (hasRequiredGet_internal_slots) return get_internal_slots;
    hasRequiredGet_internal_slots = 1;
    Object.defineProperty(get_internal_slots, "__esModule", { value: true });
    get_internal_slots.default = getInternalSlots;
    var internalSlotMap = /* @__PURE__ */ new WeakMap();
    function getInternalSlots(x) {
      var internalSlots = internalSlotMap.get(x);
      if (!internalSlots) {
        internalSlots = /* @__PURE__ */ Object.create(null);
        internalSlotMap.set(x, internalSlots);
      }
      return internalSlots;
    }
    return get_internal_slots;
  }
  var hasRequiredIntlRelativetimeformat;
  function requireIntlRelativetimeformat() {
    if (hasRequiredIntlRelativetimeformat) return intlRelativetimeformat;
    hasRequiredIntlRelativetimeformat = 1;
    Object.defineProperty(intlRelativetimeformat, "__esModule", { value: true });
    var tslib_1 = require$$0$1;
    var ecma402_abstract_1 = require$$1;
    var InitializeRelativeTimeFormat_1 = requireInitializeRelativeTimeFormat();
    var PartitionRelativeTimePattern_1 = requirePartitionRelativeTimePattern();
    var get_internal_slots_1 = tslib_1.__importDefault(requireGet_internal_slots());
    var RelativeTimeFormat = (
      /** @class */
      function() {
        function RelativeTimeFormat2(locales, options) {
          var newTarget = this && this instanceof RelativeTimeFormat2 ? this.constructor : void 0;
          if (!newTarget) {
            throw new TypeError("Intl.RelativeTimeFormat must be called with 'new'");
          }
          return (0, InitializeRelativeTimeFormat_1.InitializeRelativeTimeFormat)(this, locales, options, {
            getInternalSlots: get_internal_slots_1.default,
            availableLocales: RelativeTimeFormat2.availableLocales,
            relevantExtensionKeys: RelativeTimeFormat2.relevantExtensionKeys,
            localeData: RelativeTimeFormat2.localeData,
            getDefaultLocale: RelativeTimeFormat2.getDefaultLocale
          });
        }
        RelativeTimeFormat2.prototype.format = function(value2, unit) {
          if (typeof this !== "object") {
            throw new TypeError("format was called on a non-object");
          }
          var internalSlots = (0, get_internal_slots_1.default)(this);
          if (!internalSlots.initializedRelativeTimeFormat) {
            throw new TypeError("format was called on a invalid context");
          }
          return (0, PartitionRelativeTimePattern_1.PartitionRelativeTimePattern)(this, Number(value2), (0, ecma402_abstract_1.ToString)(unit), {
            getInternalSlots: get_internal_slots_1.default
          }).map(function(el) {
            return el.value;
          }).join("");
        };
        RelativeTimeFormat2.prototype.formatToParts = function(value2, unit) {
          if (typeof this !== "object") {
            throw new TypeError("formatToParts was called on a non-object");
          }
          var internalSlots = (0, get_internal_slots_1.default)(this);
          if (!internalSlots.initializedRelativeTimeFormat) {
            throw new TypeError("formatToParts was called on a invalid context");
          }
          return (0, PartitionRelativeTimePattern_1.PartitionRelativeTimePattern)(this, Number(value2), (0, ecma402_abstract_1.ToString)(unit), { getInternalSlots: get_internal_slots_1.default });
        };
        RelativeTimeFormat2.prototype.resolvedOptions = function() {
          if (typeof this !== "object") {
            throw new TypeError("resolvedOptions was called on a non-object");
          }
          var internalSlots = (0, get_internal_slots_1.default)(this);
          if (!internalSlots.initializedRelativeTimeFormat) {
            throw new TypeError("resolvedOptions was called on a invalid context");
          }
          return {
            locale: internalSlots.locale,
            style: internalSlots.style,
            numeric: internalSlots.numeric,
            numberingSystem: internalSlots.numberingSystem
          };
        };
        RelativeTimeFormat2.supportedLocalesOf = function(locales, options) {
          return (0, ecma402_abstract_1.SupportedLocales)(RelativeTimeFormat2.availableLocales, (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales), options);
        };
        RelativeTimeFormat2.__addLocaleData = function() {
          var data2 = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            data2[_i] = arguments[_i];
          }
          for (var _a2 = 0, data_1 = data2; _a2 < data_1.length; _a2++) {
            var _b = data_1[_a2], d = _b.data, locale = _b.locale;
            var minimizedLocale = new Intl.Locale(locale).minimize().toString();
            RelativeTimeFormat2.localeData[locale] = RelativeTimeFormat2.localeData[minimizedLocale] = d;
            RelativeTimeFormat2.availableLocales.add(minimizedLocale);
            RelativeTimeFormat2.availableLocales.add(locale);
            if (!RelativeTimeFormat2.__defaultLocale) {
              RelativeTimeFormat2.__defaultLocale = minimizedLocale;
            }
          }
        };
        RelativeTimeFormat2.getDefaultLocale = function() {
          return RelativeTimeFormat2.__defaultLocale;
        };
        RelativeTimeFormat2.localeData = {};
        RelativeTimeFormat2.availableLocales = /* @__PURE__ */ new Set();
        RelativeTimeFormat2.__defaultLocale = "";
        RelativeTimeFormat2.relevantExtensionKeys = ["nu"];
        RelativeTimeFormat2.polyfilled = true;
        return RelativeTimeFormat2;
      }()
    );
    intlRelativetimeformat.default = RelativeTimeFormat;
    try {
      if (typeof Symbol !== "undefined") {
        Object.defineProperty(RelativeTimeFormat.prototype, Symbol.toStringTag, {
          value: "Intl.RelativeTimeFormat",
          writable: false,
          enumerable: false,
          configurable: true
        });
      }
      Object.defineProperty(RelativeTimeFormat.prototype.constructor, "length", {
        value: 0,
        writable: false,
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(RelativeTimeFormat.supportedLocalesOf, "length", {
        value: 1,
        writable: false,
        enumerable: false,
        configurable: true
      });
    } catch (e) {
    }
    return intlRelativetimeformat;
  }
  var shouldPolyfill = {};
  var supportedLocales_generated = {};
  var hasRequiredSupportedLocales_generated;
  function requireSupportedLocales_generated() {
    if (hasRequiredSupportedLocales_generated) return supportedLocales_generated;
    hasRequiredSupportedLocales_generated = 1;
    Object.defineProperty(supportedLocales_generated, "__esModule", { value: true });
    supportedLocales_generated.supportedLocales = void 0;
    supportedLocales_generated.supportedLocales = ["af", "af-NA", "agq", "ak", "am", "ar", "ar-AE", "ar-BH", "ar-DJ", "ar-DZ", "ar-EG", "ar-EH", "ar-ER", "ar-IL", "ar-IQ", "ar-JO", "ar-KM", "ar-KW", "ar-LB", "ar-LY", "ar-MA", "ar-MR", "ar-OM", "ar-PS", "ar-QA", "ar-SA", "ar-SD", "ar-SO", "ar-SS", "ar-SY", "ar-TD", "ar-TN", "ar-YE", "as", "asa", "ast", "az", "az-Cyrl", "az-Latn", "bas", "be", "be-tarask", "bem", "bez", "bg", "bm", "bn", "bn-IN", "bo", "bo-IN", "br", "brx", "bs", "bs-Cyrl", "bs-Latn", "ca", "ca-AD", "ca-ES-valencia", "ca-FR", "ca-IT", "ccp", "ccp-IN", "ce", "ceb", "cgg", "chr", "ckb", "ckb-IR", "cs", "cy", "da", "da-GL", "dav", "de", "de-AT", "de-BE", "de-CH", "de-IT", "de-LI", "de-LU", "dje", "doi", "dsb", "dua", "dyo", "dz", "ebu", "ee", "ee-TG", "el", "el-CY", "en", "en-001", "en-150", "en-AE", "en-AG", "en-AI", "en-AS", "en-AT", "en-AU", "en-BB", "en-BE", "en-BI", "en-BM", "en-BS", "en-BW", "en-BZ", "en-CA", "en-CC", "en-CH", "en-CK", "en-CM", "en-CX", "en-CY", "en-DE", "en-DG", "en-DK", "en-DM", "en-ER", "en-FI", "en-FJ", "en-FK", "en-FM", "en-GB", "en-GD", "en-GG", "en-GH", "en-GI", "en-GM", "en-GU", "en-GY", "en-HK", "en-IE", "en-IL", "en-IM", "en-IN", "en-IO", "en-JE", "en-JM", "en-KE", "en-KI", "en-KN", "en-KY", "en-LC", "en-LR", "en-LS", "en-MG", "en-MH", "en-MO", "en-MP", "en-MS", "en-MT", "en-MU", "en-MW", "en-MY", "en-NA", "en-NF", "en-NG", "en-NL", "en-NR", "en-NU", "en-NZ", "en-PG", "en-PH", "en-PK", "en-PN", "en-PR", "en-PW", "en-RW", "en-SB", "en-SC", "en-SD", "en-SE", "en-SG", "en-SH", "en-SI", "en-SL", "en-SS", "en-SX", "en-SZ", "en-TC", "en-TK", "en-TO", "en-TT", "en-TV", "en-TZ", "en-UG", "en-UM", "en-VC", "en-VG", "en-VI", "en-VU", "en-WS", "en-ZA", "en-ZM", "en-ZW", "eo", "es", "es-419", "es-AR", "es-BO", "es-BR", "es-BZ", "es-CL", "es-CO", "es-CR", "es-CU", "es-DO", "es-EA", "es-EC", "es-GQ", "es-GT", "es-HN", "es-IC", "es-MX", "es-NI", "es-PA", "es-PE", "es-PH", "es-PR", "es-PY", "es-SV", "es-US", "es-UY", "es-VE", "et", "eu", "ewo", "fa", "fa-AF", "ff", "ff-Adlm", "ff-Adlm-BF", "ff-Adlm-CM", "ff-Adlm-GH", "ff-Adlm-GM", "ff-Adlm-GW", "ff-Adlm-LR", "ff-Adlm-MR", "ff-Adlm-NE", "ff-Adlm-NG", "ff-Adlm-SL", "ff-Adlm-SN", "ff-Latn", "ff-Latn-BF", "ff-Latn-CM", "ff-Latn-GH", "ff-Latn-GM", "ff-Latn-GN", "ff-Latn-GW", "ff-Latn-LR", "ff-Latn-MR", "ff-Latn-NE", "ff-Latn-NG", "ff-Latn-SL", "fi", "fil", "fo", "fo-DK", "fr", "fr-BE", "fr-BF", "fr-BI", "fr-BJ", "fr-BL", "fr-CA", "fr-CD", "fr-CF", "fr-CG", "fr-CH", "fr-CI", "fr-CM", "fr-DJ", "fr-DZ", "fr-GA", "fr-GF", "fr-GN", "fr-GP", "fr-GQ", "fr-HT", "fr-KM", "fr-LU", "fr-MA", "fr-MC", "fr-MF", "fr-MG", "fr-ML", "fr-MQ", "fr-MR", "fr-MU", "fr-NC", "fr-NE", "fr-PF", "fr-PM", "fr-RE", "fr-RW", "fr-SC", "fr-SN", "fr-SY", "fr-TD", "fr-TG", "fr-TN", "fr-VU", "fr-WF", "fr-YT", "fur", "fy", "ga", "ga-GB", "gd", "gl", "gsw", "gsw-FR", "gsw-LI", "gu", "guz", "gv", "ha", "ha-GH", "ha-NE", "haw", "he", "hi", "hr", "hr-BA", "hsb", "hu", "hy", "ia", "id", "ig", "ii", "is", "it", "it-CH", "it-SM", "it-VA", "ja", "jgo", "jmc", "jv", "ka", "kab", "kam", "kde", "kea", "kgp", "khq", "ki", "kk", "kkj", "kl", "kln", "km", "kn", "ko", "ko-KP", "kok", "ks", "ks-Arab", "ksb", "ksf", "ksh", "ku", "kw", "ky", "lag", "lb", "lg", "lkt", "ln", "ln-AO", "ln-CF", "ln-CG", "lo", "lrc", "lrc-IQ", "lt", "lu", "luo", "luy", "lv", "mai", "mas", "mas-TZ", "mer", "mfe", "mg", "mgh", "mgo", "mi", "mk", "ml", "mn", "mni", "mni-Beng", "mr", "ms", "ms-BN", "ms-ID", "ms-SG", "mt", "mua", "my", "mzn", "naq", "nb", "nb-SJ", "nd", "nds", "nds-NL", "ne", "ne-IN", "nl", "nl-AW", "nl-BE", "nl-BQ", "nl-CW", "nl-SR", "nl-SX", "nmg", "nn", "nnh", "no", "nus", "nyn", "om", "om-KE", "or", "os", "os-RU", "pa", "pa-Arab", "pa-Guru", "pcm", "pl", "ps", "ps-PK", "pt", "pt-AO", "pt-CH", "pt-CV", "pt-GQ", "pt-GW", "pt-LU", "pt-MO", "pt-MZ", "pt-PT", "pt-ST", "pt-TL", "qu", "qu-BO", "qu-EC", "rm", "rn", "ro", "ro-MD", "rof", "ru", "ru-BY", "ru-KG", "ru-KZ", "ru-MD", "ru-UA", "rw", "rwk", "sa", "sah", "saq", "sat", "sat-Olck", "sbp", "sc", "sd", "sd-Arab", "sd-Deva", "se", "se-FI", "se-SE", "seh", "ses", "sg", "shi", "shi-Latn", "shi-Tfng", "si", "sk", "sl", "smn", "sn", "so", "so-DJ", "so-ET", "so-KE", "sq", "sq-MK", "sq-XK", "sr", "sr-Cyrl", "sr-Cyrl-BA", "sr-Cyrl-ME", "sr-Cyrl-XK", "sr-Latn", "sr-Latn-BA", "sr-Latn-ME", "sr-Latn-XK", "su", "su-Latn", "sv", "sv-AX", "sv-FI", "sw", "sw-CD", "sw-KE", "sw-UG", "ta", "ta-LK", "ta-MY", "ta-SG", "te", "teo", "teo-KE", "tg", "th", "ti", "ti-ER", "tk", "to", "tr", "tr-CY", "tt", "twq", "tzm", "ug", "uk", "und", "ur", "ur-IN", "uz", "uz-Arab", "uz-Cyrl", "uz-Latn", "vai", "vai-Latn", "vai-Vaii", "vi", "vun", "wae", "wo", "xh", "xog", "yav", "yi", "yo", "yo-BJ", "yrl", "yrl-CO", "yrl-VE", "yue", "yue-Hans", "yue-Hant", "zgh", "zh", "zh-Hans", "zh-Hans-HK", "zh-Hans-MO", "zh-Hans-SG", "zh-Hant", "zh-Hant-HK", "zh-Hant-MO", "zu"];
    return supportedLocales_generated;
  }
  var hasRequiredShouldPolyfill;
  function requireShouldPolyfill() {
    if (hasRequiredShouldPolyfill) return shouldPolyfill;
    hasRequiredShouldPolyfill = 1;
    Object.defineProperty(shouldPolyfill, "__esModule", { value: true });
    shouldPolyfill.shouldPolyfill = shouldPolyfill$12;
    var intl_localematcher_1 = require$$0;
    var supported_locales_generated_1 = requireSupportedLocales_generated();
    function supportedLocalesOf(locale) {
      if (!locale) {
        return true;
      }
      var locales = Array.isArray(locale) ? locale : [locale];
      return Intl.RelativeTimeFormat.supportedLocalesOf(locales).length === locales.length;
    }
    function hasResolvedOptionsNumberingSystem(locale) {
      try {
        return "numberingSystem" in new Intl.RelativeTimeFormat(locale || "en", {
          numeric: "auto"
        }).resolvedOptions();
      } catch (_) {
        return false;
      }
    }
    function shouldPolyfill$12(locale) {
      if (locale === void 0) {
        locale = "en";
      }
      if (!("RelativeTimeFormat" in Intl) || !supportedLocalesOf(locale) || !hasResolvedOptionsNumberingSystem(locale)) {
        return (0, intl_localematcher_1.match)([locale], supported_locales_generated_1.supportedLocales, "en");
      }
    }
    return shouldPolyfill;
  }
  var hasRequiredPolyfill;
  function requirePolyfill() {
    if (hasRequiredPolyfill) return polyfill;
    hasRequiredPolyfill = 1;
    Object.defineProperty(polyfill, "__esModule", { value: true });
    var tslib_1 = require$$0$1;
    var _1 = tslib_1.__importDefault(requireIntlRelativetimeformat());
    var should_polyfill_1 = requireShouldPolyfill();
    if ((0, should_polyfill_1.shouldPolyfill)()) {
      Object.defineProperty(Intl, "RelativeTimeFormat", {
        value: _1.default,
        writable: true,
        enumerable: false,
        configurable: true
      });
    }
    return polyfill;
  }
  requirePolyfill();
  if ("DateTimeFormat" in Intl && Intl.DateTimeFormat.__addTZData) {
    Intl.DateTimeFormat.__addTZData({
      "abbrvs": "LMT|GMT|+0230|EAT|+0245|PMT|WET|WEST|CET|CEST|+0030|WAT|-01|CAT|EET|EEST|+00|+01|SAST|CAST|MMT|WAST|+0130|NST|NWT|NPT|BST|BDT|AHST|HST|HDT|AST|AWT|APT|AHDT|YST|AKST|AKDT|-03|-02|CMT|-04|AMT|EST|MST|CST|MDT|CDT|ADT|-0330|-0530|CWT|CPT|BMT|-05|PST|PDT|MWT|MPT|-00|EDT|-0430|SJMT|YDT|YWT|YPT|YDDT|PWT|PPT|EWT|EPT|NDT|ADDT|KMT|QMT|-0345|HMT|FFMT|-0230|-0130|PPMT|SMT|SDMT|NDDT|+08|+11|+07|+05|PMMT|+10|AEST|AEDT|+06|NZMT|NZST|NZDT|+03|+02|CEMT|+12|+13|+14|+04|+0730|+0820|+09|+0530|+0630|IST|IDT|PLMT|HKT|HKST|HKWT|JST|IMT|+0720|WIB|+0930|WIT|JMT|IDDT|+0430|PKT|PKST|+0545|WITA|KST|KDT|TBMT|TMT|+0330|JDT|RMT|FMT|ACST|ACDT|+0845|+0945|+1030|+1130|AWST|AWDT|MSK|MSD|DMT|BDST|WEMT|MDST|LST|WMT|-1130|-11|-10|+1215|+1245|+1345|EMT|-07|-06|-09|GST|GDT|ChST|HWT|HPT|-12|-1040|-0930|SST|-1120|+1112|+1230|-0830|-08|-1030|+1220|GMT+14|GMT+13|GMT+12|GMT+11|GMT+10|GMT+9|GMT+8|GMT+7|GMT+6|GMT+5|GMT+4|GMT+3|GMT+2|GMT+1|GMT-1|GMT-2|GMT-3|GMT-4|GMT-5|GMT-6|GMT-7|GMT-8|GMT-9|GMT-10|GMT-11|GMT-12",
      "offsets": "-qw|0|6tg|6y0|8c0|7n0|kc|fl|2s0|5k0|mn|1e0|-2vw|-2s0|616|5sl|-1ek|-zg|-2g0|56o|460|5us|60w|-1zw|-226|2sc|18w|-1p9|2fw|1vw|360|xya|-wpq|-uk0|-rs0|-p00|12wo|-rrc|-m80|-c8p|-b40|-8c0|-8xc|-5k0|-ato|-bw0|-c6k|-c3c|-cdo|-cqs|-ctg|-c44|-cos|-cac|-c2s|-cnc|-aog|-eq8|-eso|-dw0|-74s|-jho|-jg0|-go0|-b1h|-9q0|-8z8|-gc0|-fa0|-b8g|-dps|-lip|-a44|-g2g|-ce8|-ce4|-ci0|-9ow|-g8c|-jn8|-jpw|-fkd|-kr6|-adw|-3gg|-ptg|-m9k|-jfw|-fdn|-l0g|-cxs|-gio|-mpz|-74o|-b3o|-b6s|-9rg|-6zg|-6y0|-d68|-e7y|-grg|-es8|-ejc|-arr|-af0|-bs0|-f94|-f9c|-kjs|-fye|-g1i|-fzn|-g5v|-g2f|-fr4|-g7j|-g1d|15rv|-ow5|-fvq|-fpo|-cmc|-9uc|-e9o|-eac|-lwa|-6m4|-fz8|-fzc|-b44|-bb8|-i20|-jpg|-g83|-glg|16au|-od6|-id0|-aeg|-bzw|-iks|-aer|-460|-ep8|-dpe|101a|-umq|-604|-iuj|-irc|-is3|-9kw|-jc4|-a7s|-a84|-a7o|-de8|-ddo|-bu0|-d4s|-d39|-hzo|-6go|-jdo|-ck0|-a4o|-cy0|-cyo|-8ms|-42g|15lz|-p21|-jyw|-g5g|-cqk|-lo4|-mss|-p0c|14sh|-pvj|m80|uk0|jg0|dw0|r94|r8w|rs0|go0|wd4|vy0|yq0|xc0|1040|8ng|2h4|e90|6nk|wv8|12w0|9b4|b40|al4|at8|9m8|884|880|9jk|98c|im4|fic|6ko|dtc|kfk|ku0|n5c|p00|l0g|jsk|esc|esk|fa0|i20|6q0|gqs|gcw|n98|a8o|cqo|6ac|6ds|6hz|jqu|l56|nm0|gz0|jb5|js0|kdc|q20|qe0|6iu|6ig|ctc|ci0|tdo|cf0|fss|fz0|p3p|gd4|eva|h72|j8d|l0y|rxc|m40|-189c|meo|66g|g5c|fcs|dl6|9ic|k8w|nac|bs4|c4g|qfc|ceh|nig|mhj|sgs|mi0|ctz|8an|9iw|9q0|glo|pvn|fqf|g7w|qiu|of7|o0y|htb|b89|af5|88o|-4r4|-5aw|-c06|-986|-2uo|-4cs|-194|-34o|-6rk|-apo|pnw|t60|sc8|q70|ra4|o88|nv4|ob0|r30|rl8|tgk|qug|lgc|s04|t6|a4|8wc|4e4|3so|2o8|4u0|3j8|1kw|1dm|5c8|5bo|-169|1lr|-zo|-23|4md|5d4|5ew|97c|5ng|-ok|2os|53s|53c|6yh|707|9s7|ck7|4gy|78y|2b8|99w|8j6|6bc|6ao|4bg|4l0|3o8|8yo|30x|4os|3w0|4fc|des|dm0|anc|yv4|-vsw|-vy0|st4|xz0|y10|zf0|1270|-k94|v64|-vpk|x4w|w1g|-glc|-ozo|tmc|-13v0|qt0|-t8e|-t60|-qe0|-xc0|-t4w|-tmo|-10hg|u6k|uzk|-pu0|z20|-vm0|uws|-vgs|-vhc|v3s|v40|uto|-15rg|owk|-o38|-nm0|112w|-tl4|-rp4|y80|y9c",
      "zones": [
        "Africa/Accra|,0,0,0|-u9rgl5,0,0,0|-u9rgl4,1,1,0|NaN,1,1,0",
        "Africa/Addis_Ababa|,0,2,0|-w6p5hh,0,2,0|-w6p5hg,2,3,0|-lnsey1,2,3,0|-lnsey0,3,4,0|-kvcdo1,3,4,0|-kvcdo0,2,3,0|-h80ka1,2,3,0|-h80ka0,4,5,0|-eb6ib1,4,5,0|-eb6ib0,3,4,0|NaN,3,4,0",
        "Africa/Algiers|,0,6,0|-154gb8d,0,6,0|-154gb8c,5,7,0|-uozn3m,5,7,0|-uozn3l,6,1,0|-ry2lg1,6,1,0|-ry2lg0,7,8,1|-rsgqs1,7,8,1|-rsgqs0,6,1,0|-rjiis1,6,1,0|-rjiis0,7,8,1|-r9dpg1,7,8,1|-r9dpg0,6,1,0|-r1idg1,6,1,0|-r1idg0,7,8,1|-qqnms1,7,8,1|-qqnms0,6,1,0|-qj59g1,6,1,0|-qj59g0,7,8,1|-q7xk41,7,8,1|-q7xk40,6,1,0|-q15441,6,1,0|-q15440,7,8,1|-po6g41,7,8,1|-po6g40,6,1,0|-pgvhg1,6,1,0|-pgvhg0,7,8,1|-pbs5g1,7,8,1|-pbs5g0,6,1,0|-fte841,6,1,0|-fte840,7,8,1|-fpw801,7,8,1|-fpw800,6,1,0|-fkul41,6,1,0|-fkul40,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d62o01,9,9,1|-d62o00,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cofk41,9,9,1|-cofk40,8,8,0|-c4kqs1,8,8,0|-c4kqs0,6,1,0|-79mio1,6,1,0|-79mio0,8,8,0|-3i8is1,8,8,0|-3i8is0,6,1,0|oot7z,6,1,0|oot80,7,8,1|wlzvz,7,8,1|wlzw0,6,1,0|3tynzz,6,1,0|3tyo00,7,8,1|42lp7z,7,8,1|42lp80,8,8,0|4aiynz,8,8,0|4aiyo0,9,9,1|4jw2rz,9,9,1|4jw2s0,8,8,0|54et7z,8,8,0|54et80,6,1,0|5drxbz,6,1,0|5drxc0,7,8,1|5ni03z,7,8,1|5ni040,6,1,0|5wuynz,6,1,0|5wuyo0,8,8,0|NaN,8,8,0",
        "Africa/Asmara|,0,2,0|-w6p5hh,0,2,0|-w6p5hg,2,3,0|-lnsey1,2,3,0|-lnsey0,3,4,0|-kvcdo1,3,4,0|-kvcdo0,2,3,0|-h80ka1,2,3,0|-h80ka0,4,5,0|-eb6ib1,4,5,0|-eb6ib0,3,4,0|NaN,3,4,0",
        "Africa/Bamako|,0,0,0|-u9rgl5,0,0,0|-u9rgl4,1,1,0|NaN,1,1,0",
        "Africa/Bangui|,0,10,0|-xnxnao,0,10,0|-xnxnan,1,1,0|-w3k001,1,1,0|-w3k000,0,10,0|-t85smo,0,10,0|-t85smn,10,11,0|-q9qc21,10,11,0|-q9qc20,11,8,0|NaN,11,8,0",
        "Africa/Banjul|,0,0,0|-u9rgl5,0,0,0|-u9rgl4,1,1,0|NaN,1,1,0",
        "Africa/Bissau|,0,12,0|-u9rek1,0,12,0|-u9rek0,12,13,0|2lxk3z,12,13,0|2lxk40,1,1,0|NaN,1,1,0",
        "Africa/Blantyre|,0,14,0|-vu3fd7,0,14,0|-vu3fd6,13,9,0|NaN,13,9,0",
        "Africa/Brazzaville|,0,10,0|-xnxnao,0,10,0|-xnxnan,1,1,0|-w3k001,1,1,0|-w3k000,0,10,0|-t85smo,0,10,0|-t85smn,10,11,0|-q9qc21,10,11,0|-q9qc20,11,8,0|NaN,11,8,0",
        "Africa/Bujumbura|,0,14,0|-vu3fd7,0,14,0|-vu3fd6,13,9,0|NaN,13,9,0",
        "Africa/Cairo|,0,15,0|-1054wgm,0,15,0|-1054wgl,14,9,0|-fdls81,14,9,0|-fdls80,15,4,1|-f9lf01,15,4,1|-f9lf00,14,9,0|-ezidk1,14,9,0|-ezidk0,15,4,1|-erl9o1,15,4,1|-erl9o0,14,9,0|-ehgdk1,14,9,0|-ehgdk0,15,4,1|-e6pf01,15,4,1|-e6pf00,14,9,0|-dyog81,14,9,0|-dyog80,15,4,1|-dno8c1,15,4,1|-dno8c0,14,9,0|-dfuo81,14,9,0|-dfuo80,15,4,1|-d4ugc1,15,4,1|-d4ugc0,14,9,0|-cwayw1,14,9,0|-cwayw0,15,4,1|-cm2j01,15,4,1|-cm2j00,14,9,0|-6lluw1,14,9,0|-6lluw0,15,4,1|-6e79o1,15,4,1|-6e79o0,14,9,0|-63alk1,14,9,0|-63alk0,15,4,1|-5vfcc1,15,4,1|-5vfcc0,14,9,0|-5kilg1,14,9,0|-5kilg0,15,4,1|-5cp1c1,15,4,1|-5cp1c0,14,9,0|-51otg1,14,9,0|-51otg0,15,4,1|-4tv9c1,15,4,1|-4tv9c0,14,9,0|-4iww41,14,9,0|-4iww40,15,4,1|-4b3c01,15,4,1|-4b3c00,14,9,0|-404ys1,14,9,0|-404ys0,15,4,1|-3sbeo1,15,4,1|-3sbeo0,14,9,0|-3hd1g1,14,9,0|-3hd1g0,15,4,1|-39jhc1,15,4,1|-39jhc0,14,9,0|-2yj9g1,14,9,0|-2yj9g0,15,4,1|-2qppc1,15,4,1|-2qppc0,14,9,0|-2frc41,14,9,0|-2frc40,15,4,1|-27xs01,15,4,1|-27xs00,14,9,0|-1wzes1,14,9,0|-1wzes0,15,4,1|-1p4001,15,4,1|-1p4000,14,9,0|-1e7hg1,14,9,0|-1e7hg0,15,4,1|-16c2o1,15,4,1|-16c2o0,14,9,0|-vdpg1,14,9,0|-vdpg0,15,4,1|-niao1,15,4,1|-niao0,14,9,0|-cls41,14,9,0|-cls40,15,4,1|-4qdc1,15,4,1|-4qdc0,14,9,0|6657z,14,9,0|66580,15,4,1|e1jzz,15,4,1|e1k00,14,9,0|oy2jz,14,9,0|oy2k0,15,4,1|wthbz,15,4,1|wthc0,14,9,0|17rujz,14,9,0|17ruk0,15,4,1|1fn9bz,15,4,1|1fn9c0,14,9,0|1qjrvz,14,9,0|1qjrw0,15,4,1|1yf6nz,15,4,1|1yf6o0,14,9,0|29bp7z,14,9,0|29bp80,15,4,1|2h73zz,15,4,1|2h7400,14,9,0|2s3mjz,14,9,0|2s3mk0,15,4,1|2zz1bz,15,4,1|2zz1c0,14,9,0|3axejz,14,9,0|3axek0,15,4,1|3istbz,15,4,1|3istc0,14,9,0|3tpbvz,14,9,0|3tpbw0,15,4,1|41kqnz,15,4,1|41kqo0,14,9,0|4ch97z,14,9,0|4ch980,15,4,1|4kcnzz,15,4,1|4kco00,14,9,0|4v96jz,14,9,0|4v96k0,15,4,1|534lbz,15,4,1|534lc0,14,9,0|5e2yjz,14,9,0|5e2yk0,15,4,1|5lydbz,15,4,1|5lydc0,14,9,0|5wuvvz,14,9,0|5wuvw0,15,4,1|64qanz,15,4,1|64qao0,14,9,0|6k07vz,14,9,0|6k07w0,15,4,1|6ni7zz,15,4,1|6ni800,14,9,0|7242jz,14,9,0|7242k0,15,4,1|76a5bz,15,4,1|76a5c0,14,9,0|7h8ijz,14,9,0|7h8ik0,15,4,1|7p3xbz,15,4,1|7p3xc0,14,9,0|800fvz,14,9,0|800fw0,15,4,1|87vunz,15,4,1|87vuo0,14,9,0|8isd7z,14,9,0|8isd80,15,4,1|8qnrzz,15,4,1|8qns00,14,9,0|91kajz,14,9,0|91kak0,15,4,1|99fpbz,15,4,1|99fpc0,14,9,0|9ke2jz,14,9,0|9ke2k0,15,4,1|9s9hbz,15,4,1|9s9hc0,14,9,0|a3f97z,14,9,0|a3f980,15,4,1|ab1enz,15,4,1|ab1eo0,14,9,0|alxx7z,14,9,0|alxx80,15,4,1|attbzz,15,4,1|attc00,14,9,0|b4pujz,14,9,0|b4puk0,15,4,1|bcl9bz,15,4,1|bcl9c0,14,9,0|bnjmjz,14,9,0|bnjmk0,15,4,1|bvf1bz,15,4,1|bvf1c0,14,9,0|c6bjvz,14,9,0|c6bjw0,15,4,1|ce6ynz,15,4,1|ce6yo0,14,9,0|cp3h7z,14,9,0|cp3h80,15,4,1|cwyvzz,15,4,1|cwyw00,14,9,0|d7prrz,14,9,0|d7prs0,15,4,1|dfmvnz,15,4,1|dfmvo0,14,9,0|dqfufz,14,9,0|dqfug0,15,4,1|dycybz,15,4,1|dycyc0,14,9,0|e95x3z,14,9,0|e95x40,15,4,1|eh30zz,15,4,1|eh3100,14,9,0|ervzrz,14,9,0|ervzs0,15,4,1|ezt3nz,15,4,1|ezt3o0,14,9,0|faz13z,14,9,0|faz140,15,4,1|fiw4zz,15,4,1|fiw500,14,9,0|ftp3rz,14,9,0|ftp3s0,15,4,1|g1m7nz,15,4,1|g1m7o0,14,9,0|gcf6fz,14,9,0|gcf6g0,15,4,1|gkcabz,15,4,1|gkcac0,14,9,0|gv593z,14,9,0|gv5940,15,4,1|h32czz,15,4,1|h32d00,14,9,0|hdvbrz,14,9,0|hdvbs0,15,4,1|hlsfnz,15,4,1|hlsfo0,14,9,0|hwyd3z,14,9,0|hwyd40,15,4,1|i4vgzz,15,4,1|i4vh00,14,9,0|ifofrz,14,9,0|ifofs0,15,4,1|inljnz,15,4,1|inljo0,14,9,0|iyeifz,14,9,0|iyeig0,15,4,1|j5ynnz,15,4,1|j5yno0,14,9,0|jh4l3z,14,9,0|jh4l40,15,4,1|jnyszz,15,4,1|jnyt00,14,9,0|jzunrz,14,9,0|jzuns0,15,4,1|k6bwzz,15,4,1|k6bx00,14,9,0|kikqfz,14,9,0|kikqg0,15,4,1|kop0zz,15,4,1|kop100,14,9,0|l1nrrz,14,9,0|l1nrs0,15,4,1|l6yfnz,15,4,1|l6yfo0,14,9,0|l8i2fz,14,9,0|l8i2g0,15,4,1|l9kvnz,15,4,1|l9kvo0,14,9,0|n5myfz,14,9,0|n5myg0,15,4,1|n7snnz,15,4,1|n7sno0,14,9,0|n9ljrz,14,9,0|n9ljs0,15,4,1|nch6bz,15,4,1|nch6c0,14,9,0|rtsnrz,14,9,0|rtsns0,15,4,1|s35mbz,15,4,1|s35mc0,14,9,0|sciqfz,14,9,0|sciqg0,15,4,1|sm8nnz,15,4,1|sm8no0,14,9,0|sv8t3z,14,9,0|sv8t40,15,4,1|t4yqbz,15,4,1|t4yqc0,14,9,0|tdyvrz,14,9,0|tdyvs0,15,4,1|tnoszz,15,4,1|tnot00,14,9,0|tx1x3z,14,9,0|tx1x40,15,4,1|u6evnz,15,4,1|u6evo0,14,9,0|ufrzrz,14,9,0|ufrzs0,15,4,1|up4ybz,15,4,1|up4yc0,14,9,0|uyi2fz,14,9,0|uyi2g0,15,4,1|v7v0zz,15,4,1|v7v100,14,9,0|vh853z,14,9,0|vh8540,15,4,1|vqy2bz,15,4,1|vqy2c0,14,9,0|vzy7rz,14,9,0|vzy7s0,15,4,1|w9o4zz,15,4,1|w9o500,14,9,0|wj193z,14,9,0|wj1940,15,4,1|wse7nz,15,4,1|wse7o0,14,9,0|x1rbrz,14,9,0|x1rbs0,15,4,1|xb4abz,15,4,1|xb4ac0,14,9,0|xkhefz,14,9,0|xkheg0,15,4,1|xtuczz,15,4,1|xtud00,14,9,0|y37h3z,14,9,0|y37h40,15,4,1|yckfnz,15,4,1|yckfo0,14,9,0|ylxjrz,14,9,0|ylxjs0,15,4,1|yvngzz,15,4,1|yvnh00,14,9,0|z4nmfz,14,9,0|z4nmg0,15,4,1|zedjnz,15,4,1|zedjo0,14,9,0|znqnrz,14,9,0|znqns0,15,4,1|zx3mbz,15,4,1|zx3mc0,14,9,0|106gqfz,14,9,0|106gqg0,15,4,1|10ftozz,15,4,1|10ftp00,14,9,0|10p6t3z,14,9,0|10p6t40,15,4,1|10yjrnz,15,4,1|10yjro0,14,9,0|117wvrz,14,9,0|117wvs0,15,4,1|11hmszz,15,4,1|11hmt00,14,9,0|11qmyfz,14,9,0|11qmyg0,15,4,1|120cvnz,15,4,1|120cvo0,14,9,0|129d13z,14,9,0|129d140,15,4,1|12j2ybz,15,4,1|12j2yc0,14,9,0|12sg2fz,14,9,0|12sg2g0,15,4,1|131t0zz,15,4,1|131t100,14,9,0|13b653z,14,9,0|13b6540,15,4,1|13kj3nz,15,4,1|13kj3o0,14,9,0|13tw7rz,14,9,0|13tw7s0,15,4,1|14396bz,15,4,1|14396c0,14,9,0|14cmafz,14,9,0|14cmag0,15,4,1|14mc7nz,15,4,1|14mc7o0,14,9,0|14vcd3z,14,9,0|14vcd40,15,4,1|1552abz,15,4,1|1552ac0,14,9,0|15efefz,14,9,0|15efeg0,15,4,1|15nsczz,15,4,1|15nsd00,14,9,0|15x5h3z,14,9,0|15x5h40,15,4,1|166ifnz,15,4,1|166ifo0,14,9,0|16fvjrz,14,9,0|16fvjs0,15,4,1|16p8ibz,15,4,1|16p8ic0,14,9,0|16ylmfz,14,9,0|16ylmg0,15,4,1|178bjnz,15,4,1|178bjo0,14,9,0|17hbp3z,14,9,0|17hbp40,15,4,1|17r1mbz,15,4,1|17r1mc0,14,9,0|1801rrz,14,9,0|1801rs0,15,4,1|189rozz,15,4,1|189rp00,14,9,0|18j4t3z,14,9,0|18j4t40,15,4,1|18shrnz,15,4,1|18shro0,14,9,0|191uvrz,14,9,0|191uvs0,15,4,1|19b7ubz,15,4,1|19b7uc0,14,9,0|19kkyfz,14,9,0|19kkyg0,15,4,1|19txwzz,15,4,1|19txx00,14,9,0|1a3b13z,14,9,0|1a3b140,15,4,1|1ad0ybz,15,4,1|1ad0yc0,14,9,0|1am13rz,14,9,0|1am13s0,15,4,1|1avr0zz,15,4,1|1avr100,14,9,0|1b5453z,14,9,0|1b54540,15,4,1|1beh3nz,15,4,1|1beh3o0,14,9,0|1bnu7rz,14,9,0|1bnu7s0,15,4,1|1bx76bz,15,4,1|1bx76c0,14,9,0|1c6kafz,14,9,0|1c6kag0,15,4,1|1cfx8zz,15,4,1|1cfx900,14,9,0|1cpad3z,14,9,0|1cpad40,15,4,1|1cynbnz,15,4,1|1cynbo0,14,9,0|1d80frz,14,9,0|1d80fs0,15,4,1|1dhqczz,15,4,1|1dhqd00,14,9,0|1dqqifz,14,9,0|1dqqig0,15,4,1|1e0gfnz,15,4,1|1e0gfo0,14,9,0|1e9tjrz,14,9,0|1e9tjs0,15,4,1|1ej6ibz,15,4,1|1ej6ic0,14,9,0|1esjmfz,14,9,0|1esjmg0,15,4,1|1f1wkzz,15,4,1|1f1wl00,14,9,0|1fb9p3z,14,9,0|1fb9p40,15,4,1|1fkmnnz,15,4,1|1fkmno0,14,9,0|1ftzrrz,14,9,0|1ftzrs0,15,4,1|1g3pozz,15,4,1|1g3pp00,14,9,0|1gcpufz,14,9,0|1gcpug0,15,4,1|1gmfrnz,15,4,1|1gmfro0,14,9,0|1gvfx3z,14,9,0|1gvfx40,15,4,1|1h55ubz,15,4,1|1h55uc0,14,9,0|1heiyfz,14,9,0|1heiyg0,15,4,1|1hnvwzz,15,4,1|1hnvx00,14,9,0|1hx913z,14,9,0|1hx9140,15,4,1|1i6lznz,15,4,1|1i6lzo0,14,9,0|1ifz3rz,14,9,0|1ifz3s0,15,4,1|1ipc2bz,15,4,1|1ipc2c0,14,9,0|1iyp6fz,14,9,0|1iyp6g0,15,4,1|1j8f3nz,15,4,1|1j8f3o0,14,9,0|1jhf93z,14,9,0|1jhf940,15,4,1|1jr56bz,15,4,1|1jr56c0,14,9,0|1k0iafz,14,9,0|1k0iag0,15,4,1|1k9v8zz,15,4,1|1k9v900,14,9,0|1kj8d3z,14,9,0|1kj8d40,15,4,1|1kslbnz,15,4,1|1kslbo0,14,9,0|1l1yfrz,14,9,0|1l1yfs0,15,4,1|1lbbebz,15,4,1|1lbbec0,14,9,0|1lkoifz,14,9,0|1lkoig0,15,4,1|1luefnz,15,4,1|1luefo0,14,9,0|1m3el3z,14,9,0|1m3el40,15,4,1|1md4ibz,15,4,1|1md4ic0,14,9,0|1mm4nrz,14,9,0|1mm4ns0,15,4,1|1mvukzz,15,4,1|1mvul00,14,9,0|1n57p3z,14,9,0|1n57p40,15,4,1|1neknnz,15,4,1|1nekno0,14,9,0|1nnxrrz,14,9,0|1nnxrs0,15,4,1|1nxaqbz,15,4,1|1nxaqc0,14,9,0|1o6nufz,14,9,0|1o6nug0,15,4,1|1og0szz,15,4,1|1og0t00,14,9,0|1opdx3z,14,9,0|1opdx40,15,4,1|1oz3ubz,15,4,1|1oz3uc0,14,9,0|1p83zrz,14,9,0|1p83zs0,15,4,1|1phtwzz,15,4,1|1phtx00,14,9,0|1pr713z,14,9,0|1pr7140,15,4,1|1q0jznz,15,4,1|1q0jzo0,14,9,0|1q9x3rz,14,9,0|1q9x3s0,15,4,1|1qja2bz,15,4,1|1qja2c0,14,9,0|1qsn6fz,14,9,0|1qsn6g0,15,4,1|1r204zz,15,4,1|1r20500,14,9,0|1rbd93z,14,9,0|1rbd940,15,4,1|1rkq7nz,15,4,1|1rkq7o0,14,9,0|1ru3brz,14,9,0|1ru3bs0,15,4,1|1s3t8zz,15,4,1|1s3t900,14,9,0|1sctefz,14,9,0|1scteg0,15,4,1|1smjbnz,15,4,1|1smjbo0,14,9,0|1svwfrz,14,9,0|1svwfs0,15,4,1|1t59ebz,15,4,1|1t59ec0,14,9,0|1temifz,14,9,0|1temig0,15,4,1|1tnzgzz,15,4,1|1tnzh00,14,9,0|1txcl3z,14,9,0|1txcl40,15,4,1|1u6pjnz,15,4,1|1u6pjo0,14,9,0|1ug2nrz,14,9,0|1ug2ns0,15,4,1|1upskzz,15,4,1|1upsl00,14,9,0|1uysqfz,14,9,0|1uysqg0,15,4,1|1v8innz,15,4,1|1v8ino0,14,9,0|1vhit3z,14,9,0|1vhit40,15,4,1|1vr8qbz,15,4,1|1vr8qc0,14,9,0|NaN,14,9,0",
        "Africa/Casablanca|,0,16,0|-tblt9h,0,16,0|-tblt9g,16,1,0|-fte5c1,16,1,0|-fte5c0,17,8,1|-fpwas1,17,8,1|-fpwas0,16,1,0|-fkuqo1,16,1,0|-fkuqo0,17,8,1|-cl6w41,17,8,1|-cl6w40,16,1,0|-a7hmo1,16,1,0|-a7hmo0,17,8,1|-a0ag41,17,8,1|-a0ag40,16,1,0|-1chdc1,16,1,0|-1chdc0,17,8,1|-16c5g1,17,8,1|-16c5g0,16,1,0|2c3rzz,16,1,0|2c3s00,17,8,1|2fnh7z,17,8,1|2fnh80,16,1,0|3axhbz,16,1,0|3axhc0,17,8,1|3fnrvz,17,8,1|3fnrw0,16,1,0|3tpenz,16,1,0|3tpeo0,17,8,1|41f3vz,17,8,1|41f3w0,16,1,0|4e2qnz,16,1,0|4e2qo0,17,8,1|4hd6jz,17,8,1|4hd6k0,16,1,0|7evenz,16,1,0|7eveo0,17,8,0|8cm57z,17,8,0|8cm580,16,1,0|k1rbzz,16,1,0|k1rc00,17,8,1|k6hmjz,17,8,1|k6hmk0,16,1,0|kkj9bz,16,1,0|kkj9c0,17,8,1|kop6jz,17,8,1|kop6k0,16,1,0|l1rmnz,16,1,0|l1rmo0,17,8,1|l6t17z,17,8,1|l6t180,16,1,0|lj1unz,16,1,0|lj1uo0,17,8,1|lp657z,17,8,1|lp6580,16,1,0|m37xjz,16,1,0|m37xk0,17,8,1|m7fs7z,17,8,1|m7fs80,16,1,0|m916vz,16,1,0|m916w0,17,8,1|mb547z,17,8,1|mb5480,16,1,0|mly07z,16,1,0|mly080,17,8,1|mpjmvz,17,8,1|mpjmw0,16,1,0|mraljz,16,1,0|mralk0,17,8,1|mvb1jz,17,8,1|mvb1k0,16,1,0|n3887z,16,1,0|n38880,17,8,1|n7uw7z,17,8,1|n7uw80,16,1,0|n9npjz,16,1,0|n9npk0,17,8,1|ne147z,17,8,1|ne1480,16,1,0|nlyavz,16,1,0|nlyaw0,17,8,1|npww7z,17,8,1|npww80,16,1,0|nrppjz,16,1,0|nrppk0,17,8,1|nwr6vz,17,8,1|nwr6w0,16,1,0|o4odjz,16,1,0|o4odk0,17,8,1|o8a07z,17,8,1|o8a080,16,1,0|oa2tjz,16,1,0|oa2tk0,17,8,1|ofu87z,17,8,1|ofu880,16,1,0|oneg7z,16,1,0|oneg80,17,8,1|oqa5jz,17,8,1|oqa5k0,16,1,0|osfxjz,16,1,0|osfxk0,17,8,1|oykavz,17,8,1|oykaw0,16,1,0|p64ivz,16,1,0|p64iw0,17,8,1|p8n9jz,17,8,1|p8n9k0,16,1,0|pag2vz,16,1,0|pag2w0,17,8,1|phadjz,17,8,1|phadk0,17,8,0|pr0djz,17,8,0|pr0dk0,16,1,1|pst6vz,16,1,1|pst6w0,17,8,0|q90ivz,17,8,0|q90iw0,16,1,1|qb6avz,16,1,1|qb6aw0,17,8,0|qrdmvz,17,8,0|qrdmw0,16,1,1|qt6g7z,16,1,1|qt6g80,17,8,0|r9ds7z,17,8,0|r9ds80,16,1,1|rbjk7z,16,1,1|rbjk80,17,8,0|rrqw7z,17,8,0|rrqw80,16,1,1|rtjpjz,16,1,1|rtjpk0,17,8,0|sa407z,17,8,0|sa4080,16,1,1|sbwtjz,16,1,1|sbwtk0,17,8,0|ss45jz,17,8,0|ss45k0,16,1,1|su9xjz,16,1,1|su9xk0,17,8,0|tah9jz,17,8,0|tah9k0,16,1,1|tca2vz,16,1,1|tca2w0,17,8,0|tsudjz,17,8,0|tsudk0,16,1,1|tun6vz,16,1,1|tun6w0,17,8,0|uauivz,17,8,0|uauiw0,16,1,1|ud0avz,16,1,1|ud0aw0,17,8,0|ut7mvz,17,8,0|ut7mw0,16,1,1|uv0g7z,16,1,1|uv0g80,17,8,0|vb7s7z,17,8,0|vb7s80,16,1,1|vddk7z,16,1,1|vddk80,17,8,0|vtkw7z,17,8,0|vtkw80,16,1,1|vvdpjz,16,1,1|vvdpk0,17,8,0|wby07z,17,8,0|wby080,16,1,1|wdqtjz,16,1,1|wdqtk0,17,8,0|wty5jz,17,8,0|wty5k0,16,1,1|ww3xjz,16,1,1|ww3xk0,17,8,0|xcb9jz,17,8,0|xcb9k0,16,1,1|xe42vz,16,1,1|xe42w0,17,8,0|xubevz,17,8,0|xubew0,16,1,1|xwh6vz,16,1,1|xwh6w0,17,8,0|ycoivz,17,8,0|ycoiw0,16,1,1|yeuavz,16,1,1|yeuaw0,17,8,0|yv1mvz,17,8,0|yv1mw0,16,1,1|ywug7z,16,1,1|ywug80,17,8,0|zd1s7z,17,8,0|zd1s80,16,1,1|zf7k7z,16,1,1|zf7k80,17,8,0|zvew7z,17,8,0|zvew80,16,1,1|zx7pjz,16,1,1|zx7pk0,17,8,0|10ds07z,17,8,0|10ds080,16,1,1|10fktjz,16,1,1|10fktk0,17,8,0|10vs5jz,17,8,0|10vs5k0,16,1,1|10xxxjz,16,1,1|10xxxk0,17,8,0|11e59jz,17,8,0|11e59k0,16,1,1|11fy2vz,16,1,1|11fy2w0,17,8,0|11w5evz,17,8,0|11w5ew0,16,1,1|11yb6vz,16,1,1|11yb6w0,17,8,0|12eiivz,17,8,0|12eiiw0,16,1,1|12goavz,16,1,1|12goaw0,17,8,0|12wvmvz,17,8,0|12wvmw0,16,1,1|12yog7z,16,1,1|12yog80,17,8,0|13evs7z,17,8,0|13evs80,16,1,1|13h1k7z,16,1,1|13h1k80,17,8,0|13x8w7z,17,8,0|13x8w80,16,1,1|13z1pjz,16,1,1|13z1pk0,17,8,0|14fm07z,17,8,0|14fm080,16,1,1|14hetjz,16,1,1|14hetk0,17,8,0|14xm5jz,17,8,0|14xm5k0,16,1,1|14zrxjz,16,1,1|14zrxk0,17,8,0|15fz9jz,17,8,0|15fz9k0,16,1,1|15hs2vz,16,1,1|15hs2w0,17,8,0|15xzevz,17,8,0|15xzew0,16,1,1|16056vz,16,1,1|16056w0,17,8,0|16gcivz,17,8,0|16gciw0,16,1,1|16iiavz,16,1,1|16iiaw0,17,8,0|16ypmvz,17,8,0|16ypmw0,16,1,1|170ig7z,16,1,1|170ig80,17,8,0|17gps7z,17,8,0|17gps80,16,1,1|17ivk7z,16,1,1|17ivk80,17,8,0|17z2w7z,17,8,0|17z2w80,16,1,1|180vpjz,16,1,1|180vpk0,17,8,0|18hg07z,17,8,0|18hg080,16,1,1|18j8tjz,16,1,1|18j8tk0,17,8,0|18zg5jz,17,8,0|18zg5k0,16,1,1|191lxjz,16,1,1|191lxk0,17,8,0|19ht9jz,17,8,0|19ht9k0,16,1,1|19jm2vz,16,1,1|19jm2w0,17,8,0|19ztevz,17,8,0|19ztew0,16,1,1|1a1z6vz,16,1,1|1a1z6w0,17,8,0|1ai6ivz,17,8,0|1ai6iw0,16,1,1|1akcavz,16,1,1|1akcaw0,17,8,0|1b0jmvz,17,8,0|1b0jmw0,16,1,1|1b2cg7z,16,1,1|1b2cg80,17,8,0|1bijs7z,17,8,0|1bijs80,16,1,1|1bkpk7z,16,1,1|1bkpk80,17,8,0|1c0ww7z,17,8,0|1c0ww80,16,1,1|1c2ppjz,16,1,1|1c2ppk0,17,8,0|1cja07z,17,8,0|1cja080,16,1,1|1cl2tjz,16,1,1|1cl2tk0,17,8,0|1d1a5jz,17,8,0|1d1a5k0,16,1,1|1d3fxjz,16,1,1|1d3fxk0,17,8,0|1djn9jz,17,8,0|1djn9k0,16,1,1|1dlg2vz,16,1,1|1dlg2w0,17,8,0|1e1nevz,17,8,0|1e1new0,16,1,1|1e3t6vz,16,1,1|1e3t6w0,17,8,0|1ek0ivz,17,8,0|1ek0iw0,16,1,1|1em6avz,16,1,1|1em6aw0,17,8,0|1f2dmvz,17,8,0|1f2dmw0,16,1,1|1f46g7z,16,1,1|1f46g80,17,8,0|1fkds7z,17,8,0|1fkds80,16,1,1|1fmjk7z,16,1,1|1fmjk80,17,8,0|1g2qw7z,17,8,0|1g2qw80,16,1,1|1g4jpjz,16,1,1|1g4jpk0,17,8,0|1gl407z,17,8,0|1gl4080,16,1,1|1gmwtjz,16,1,1|1gmwtk0,17,8,0|1h345jz,17,8,0|1h345k0,16,1,1|1h59xjz,16,1,1|1h59xk0,17,8,0|1hlh9jz,17,8,0|1hlh9k0,16,1,1|1hna2vz,16,1,1|1hna2w0,17,8,0|1i3hevz,17,8,0|1i3hew0,16,1,1|1i5n6vz,16,1,1|1i5n6w0,17,8,0|1iluivz,17,8,0|1iluiw0,16,1,1|1io0avz,16,1,1|1io0aw0,17,8,0|1j47mvz,17,8,0|1j47mw0,16,1,1|1j60g7z,16,1,1|1j60g80,17,8,0|1jm7s7z,17,8,0|1jm7s80,16,1,1|1jodk7z,16,1,1|1jodk80,17,8,0|1k4kw7z,17,8,0|1k4kw80,16,1,1|1k6dpjz,16,1,1|1k6dpk0,17,8,0|1kmy07z,17,8,0|1kmy080,16,1,1|1koqtjz,16,1,1|1koqtk0,17,8,0|1l4y5jz,17,8,0|1l4y5k0,16,1,1|1l73xjz,16,1,1|1l73xk0,17,8,0|1lnb9jz,17,8,0|1lnb9k0,16,1,1|1lp42vz,16,1,1|1lp42w0,17,8,0|1m5bevz,17,8,0|1m5bew0,16,1,1|1m7h6vz,16,1,1|1m7h6w0,17,8,0|1mnoivz,17,8,0|1mnoiw0,16,1,1|1mphc7z,16,1,1|1mphc80,17,8,0|1n61mvz,17,8,0|1n61mw0,16,1,1|1n7ug7z,16,1,1|1n7ug80,17,8,0|1no1s7z,17,8,0|1no1s80,16,1,1|1nq7k7z,16,1,1|1nq7k80,17,8,0|1o6ew7z,17,8,0|1o6ew80,16,1,1|1o87pjz,16,1,1|1o87pk0,17,8,0|1oos07z,17,8,0|1oos080,16,1,1|1oqktjz,16,1,1|1oqktk0,17,8,0|1p6s5jz,17,8,0|1p6s5k0,16,1,1|1p8xxjz,16,1,1|1p8xxk0,17,8,0|NaN,17,8,0",
        "Africa/Ceuta|,0,17,0|-100edc1,0,17,0|-100edc0,6,1,0|-qyiys1,6,1,0|-qyiys0,7,8,1|-qqluw1,7,8,1|-qqluw0,6,1,0|-nusqs1,6,1,0|-nusqs0,7,8,1|-nm0001,7,8,1|-nm0000,6,1,0|-mt71g1,6,1,0|-mt71g0,7,8,1|-mkjuo1,7,8,1|-mkjuo0,6,1,0|-matxg1,6,1,0|-matxg0,7,8,1|-m1ts01,7,8,1|-m1ts00,6,1,0|-lrqtc1,6,1,0|-lrqtc0,7,8,1|-liqqo1,7,8,1|-liqqo0,6,1,0|-1chdc1,6,1,0|-1chdc0,7,8,1|-16c5g1,7,8,1|-16c5g0,6,1,0|2c3rzz,6,1,0|2c3s00,7,8,1|2fnh7z,7,8,1|2fnh80,6,1,0|3axhbz,6,1,0|3axhc0,7,8,1|3fnrvz,7,8,1|3fnrw0,6,1,0|3tpenz,6,1,0|3tpeo0,7,8,1|41f3vz,7,8,1|41f3w0,6,1,0|4e2qnz,6,1,0|4e2qo0,7,8,1|4hd6jz,7,8,1|4hd6k0,6,1,0|7evenz,6,1,0|7eveo0,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Africa/Conakry|,0,0,0|-u9rgl5,0,0,0|-u9rgl4,1,1,0|NaN,1,1,0",
        "Africa/Dakar|,0,0,0|-u9rgl5,0,0,0|-u9rgl4,1,1,0|NaN,1,1,0",
        "Africa/Dar_es_Salaam|,0,2,0|-w6p5hh,0,2,0|-w6p5hg,2,3,0|-lnsey1,2,3,0|-lnsey0,3,4,0|-kvcdo1,3,4,0|-kvcdo0,2,3,0|-h80ka1,2,3,0|-h80ka0,4,5,0|-eb6ib1,4,5,0|-eb6ib0,3,4,0|NaN,3,4,0",
        "Africa/Djibouti|,0,2,0|-w6p5hh,0,2,0|-w6p5hg,2,3,0|-lnsey1,2,3,0|-lnsey0,3,4,0|-kvcdo1,3,4,0|-kvcdo0,2,3,0|-h80ka1,2,3,0|-h80ka0,4,5,0|-eb6ib1,4,5,0|-eb6ib0,3,4,0|NaN,3,4,0",
        "Africa/Douala|,0,10,0|-xnxnao,0,10,0|-xnxnan,1,1,0|-w3k001,1,1,0|-w3k000,0,10,0|-t85smo,0,10,0|-t85smn,10,11,0|-q9qc21,10,11,0|-q9qc20,11,8,0|NaN,11,8,0",
        "Africa/El_Aaiun|,0,18,0|-isdxk1,0,18,0|-isdxk0,12,13,0|3a22rz,12,13,0|3a22s0,16,1,0|3axhbz,16,1,0|3axhc0,17,8,1|3fnrvz,17,8,1|3fnrw0,16,1,0|3tpenz,16,1,0|3tpeo0,17,8,1|41f3vz,17,8,1|41f3w0,16,1,0|4e2qnz,16,1,0|4e2qo0,17,8,1|4hd6jz,17,8,1|4hd6k0,16,1,0|k1rbzz,16,1,0|k1rc00,17,8,1|k6hmjz,17,8,1|k6hmk0,16,1,0|kkj9bz,16,1,0|kkj9c0,17,8,1|kop6jz,17,8,1|kop6k0,16,1,0|l1rmnz,16,1,0|l1rmo0,17,8,1|l6t17z,17,8,1|l6t180,16,1,0|lj1unz,16,1,0|lj1uo0,17,8,1|lp657z,17,8,1|lp6580,16,1,0|m37xjz,16,1,0|m37xk0,17,8,1|m7fs7z,17,8,1|m7fs80,16,1,0|m916vz,16,1,0|m916w0,17,8,1|mb547z,17,8,1|mb5480,16,1,0|mly07z,16,1,0|mly080,17,8,1|mpjmvz,17,8,1|mpjmw0,16,1,0|mraljz,16,1,0|mralk0,17,8,1|mvb1jz,17,8,1|mvb1k0,16,1,0|n3887z,16,1,0|n38880,17,8,1|n7uw7z,17,8,1|n7uw80,16,1,0|n9npjz,16,1,0|n9npk0,17,8,1|ne147z,17,8,1|ne1480,16,1,0|nlyavz,16,1,0|nlyaw0,17,8,1|npww7z,17,8,1|npww80,16,1,0|nrppjz,16,1,0|nrppk0,17,8,1|nwr6vz,17,8,1|nwr6w0,16,1,0|o4odjz,16,1,0|o4odk0,17,8,1|o8a07z,17,8,1|o8a080,16,1,0|oa2tjz,16,1,0|oa2tk0,17,8,1|ofu87z,17,8,1|ofu880,16,1,0|oneg7z,16,1,0|oneg80,17,8,1|oqa5jz,17,8,1|oqa5k0,16,1,0|osfxjz,16,1,0|osfxk0,17,8,1|oykavz,17,8,1|oykaw0,16,1,0|p64ivz,16,1,0|p64iw0,17,8,1|p8n9jz,17,8,1|p8n9k0,16,1,0|pag2vz,16,1,0|pag2w0,17,8,1|phadjz,17,8,1|phadk0,17,8,0|pr0djz,17,8,0|pr0dk0,16,1,1|pst6vz,16,1,1|pst6w0,17,8,0|q90ivz,17,8,0|q90iw0,16,1,1|qb6avz,16,1,1|qb6aw0,17,8,0|qrdmvz,17,8,0|qrdmw0,16,1,1|qt6g7z,16,1,1|qt6g80,17,8,0|r9ds7z,17,8,0|r9ds80,16,1,1|rbjk7z,16,1,1|rbjk80,17,8,0|rrqw7z,17,8,0|rrqw80,16,1,1|rtjpjz,16,1,1|rtjpk0,17,8,0|sa407z,17,8,0|sa4080,16,1,1|sbwtjz,16,1,1|sbwtk0,17,8,0|ss45jz,17,8,0|ss45k0,16,1,1|su9xjz,16,1,1|su9xk0,17,8,0|tah9jz,17,8,0|tah9k0,16,1,1|tca2vz,16,1,1|tca2w0,17,8,0|tsudjz,17,8,0|tsudk0,16,1,1|tun6vz,16,1,1|tun6w0,17,8,0|uauivz,17,8,0|uauiw0,16,1,1|ud0avz,16,1,1|ud0aw0,17,8,0|ut7mvz,17,8,0|ut7mw0,16,1,1|uv0g7z,16,1,1|uv0g80,17,8,0|vb7s7z,17,8,0|vb7s80,16,1,1|vddk7z,16,1,1|vddk80,17,8,0|vtkw7z,17,8,0|vtkw80,16,1,1|vvdpjz,16,1,1|vvdpk0,17,8,0|wby07z,17,8,0|wby080,16,1,1|wdqtjz,16,1,1|wdqtk0,17,8,0|wty5jz,17,8,0|wty5k0,16,1,1|ww3xjz,16,1,1|ww3xk0,17,8,0|xcb9jz,17,8,0|xcb9k0,16,1,1|xe42vz,16,1,1|xe42w0,17,8,0|xubevz,17,8,0|xubew0,16,1,1|xwh6vz,16,1,1|xwh6w0,17,8,0|ycoivz,17,8,0|ycoiw0,16,1,1|yeuavz,16,1,1|yeuaw0,17,8,0|yv1mvz,17,8,0|yv1mw0,16,1,1|ywug7z,16,1,1|ywug80,17,8,0|zd1s7z,17,8,0|zd1s80,16,1,1|zf7k7z,16,1,1|zf7k80,17,8,0|zvew7z,17,8,0|zvew80,16,1,1|zx7pjz,16,1,1|zx7pk0,17,8,0|10ds07z,17,8,0|10ds080,16,1,1|10fktjz,16,1,1|10fktk0,17,8,0|10vs5jz,17,8,0|10vs5k0,16,1,1|10xxxjz,16,1,1|10xxxk0,17,8,0|11e59jz,17,8,0|11e59k0,16,1,1|11fy2vz,16,1,1|11fy2w0,17,8,0|11w5evz,17,8,0|11w5ew0,16,1,1|11yb6vz,16,1,1|11yb6w0,17,8,0|12eiivz,17,8,0|12eiiw0,16,1,1|12goavz,16,1,1|12goaw0,17,8,0|12wvmvz,17,8,0|12wvmw0,16,1,1|12yog7z,16,1,1|12yog80,17,8,0|13evs7z,17,8,0|13evs80,16,1,1|13h1k7z,16,1,1|13h1k80,17,8,0|13x8w7z,17,8,0|13x8w80,16,1,1|13z1pjz,16,1,1|13z1pk0,17,8,0|14fm07z,17,8,0|14fm080,16,1,1|14hetjz,16,1,1|14hetk0,17,8,0|14xm5jz,17,8,0|14xm5k0,16,1,1|14zrxjz,16,1,1|14zrxk0,17,8,0|15fz9jz,17,8,0|15fz9k0,16,1,1|15hs2vz,16,1,1|15hs2w0,17,8,0|15xzevz,17,8,0|15xzew0,16,1,1|16056vz,16,1,1|16056w0,17,8,0|16gcivz,17,8,0|16gciw0,16,1,1|16iiavz,16,1,1|16iiaw0,17,8,0|16ypmvz,17,8,0|16ypmw0,16,1,1|170ig7z,16,1,1|170ig80,17,8,0|17gps7z,17,8,0|17gps80,16,1,1|17ivk7z,16,1,1|17ivk80,17,8,0|17z2w7z,17,8,0|17z2w80,16,1,1|180vpjz,16,1,1|180vpk0,17,8,0|18hg07z,17,8,0|18hg080,16,1,1|18j8tjz,16,1,1|18j8tk0,17,8,0|18zg5jz,17,8,0|18zg5k0,16,1,1|191lxjz,16,1,1|191lxk0,17,8,0|19ht9jz,17,8,0|19ht9k0,16,1,1|19jm2vz,16,1,1|19jm2w0,17,8,0|19ztevz,17,8,0|19ztew0,16,1,1|1a1z6vz,16,1,1|1a1z6w0,17,8,0|1ai6ivz,17,8,0|1ai6iw0,16,1,1|1akcavz,16,1,1|1akcaw0,17,8,0|1b0jmvz,17,8,0|1b0jmw0,16,1,1|1b2cg7z,16,1,1|1b2cg80,17,8,0|1bijs7z,17,8,0|1bijs80,16,1,1|1bkpk7z,16,1,1|1bkpk80,17,8,0|1c0ww7z,17,8,0|1c0ww80,16,1,1|1c2ppjz,16,1,1|1c2ppk0,17,8,0|1cja07z,17,8,0|1cja080,16,1,1|1cl2tjz,16,1,1|1cl2tk0,17,8,0|1d1a5jz,17,8,0|1d1a5k0,16,1,1|1d3fxjz,16,1,1|1d3fxk0,17,8,0|1djn9jz,17,8,0|1djn9k0,16,1,1|1dlg2vz,16,1,1|1dlg2w0,17,8,0|1e1nevz,17,8,0|1e1new0,16,1,1|1e3t6vz,16,1,1|1e3t6w0,17,8,0|1ek0ivz,17,8,0|1ek0iw0,16,1,1|1em6avz,16,1,1|1em6aw0,17,8,0|1f2dmvz,17,8,0|1f2dmw0,16,1,1|1f46g7z,16,1,1|1f46g80,17,8,0|1fkds7z,17,8,0|1fkds80,16,1,1|1fmjk7z,16,1,1|1fmjk80,17,8,0|1g2qw7z,17,8,0|1g2qw80,16,1,1|1g4jpjz,16,1,1|1g4jpk0,17,8,0|1gl407z,17,8,0|1gl4080,16,1,1|1gmwtjz,16,1,1|1gmwtk0,17,8,0|1h345jz,17,8,0|1h345k0,16,1,1|1h59xjz,16,1,1|1h59xk0,17,8,0|1hlh9jz,17,8,0|1hlh9k0,16,1,1|1hna2vz,16,1,1|1hna2w0,17,8,0|1i3hevz,17,8,0|1i3hew0,16,1,1|1i5n6vz,16,1,1|1i5n6w0,17,8,0|1iluivz,17,8,0|1iluiw0,16,1,1|1io0avz,16,1,1|1io0aw0,17,8,0|1j47mvz,17,8,0|1j47mw0,16,1,1|1j60g7z,16,1,1|1j60g80,17,8,0|1jm7s7z,17,8,0|1jm7s80,16,1,1|1jodk7z,16,1,1|1jodk80,17,8,0|1k4kw7z,17,8,0|1k4kw80,16,1,1|1k6dpjz,16,1,1|1k6dpk0,17,8,0|1kmy07z,17,8,0|1kmy080,16,1,1|1koqtjz,16,1,1|1koqtk0,17,8,0|1l4y5jz,17,8,0|1l4y5k0,16,1,1|1l73xjz,16,1,1|1l73xk0,17,8,0|1lnb9jz,17,8,0|1lnb9k0,16,1,1|1lp42vz,16,1,1|1lp42w0,17,8,0|1m5bevz,17,8,0|1m5bew0,16,1,1|1m7h6vz,16,1,1|1m7h6w0,17,8,0|1mnoivz,17,8,0|1mnoiw0,16,1,1|1mphc7z,16,1,1|1mphc80,17,8,0|1n61mvz,17,8,0|1n61mw0,16,1,1|1n7ug7z,16,1,1|1n7ug80,17,8,0|1no1s7z,17,8,0|1no1s80,16,1,1|1nq7k7z,16,1,1|1nq7k80,17,8,0|1o6ew7z,17,8,0|1o6ew80,16,1,1|1o87pjz,16,1,1|1o87pk0,17,8,0|1oos07z,17,8,0|1oos080,16,1,1|1oqktjz,16,1,1|1oqktk0,17,8,0|1p6s5jz,17,8,0|1p6s5k0,16,1,1|1p8xxjz,16,1,1|1p8xxk0,17,8,0|NaN,17,8,0",
        "Africa/Freetown|,0,0,0|-u9rgl5,0,0,0|-u9rgl4,1,1,0|NaN,1,1,0",
        "Africa/Gaborone|,0,14,0|-vu3fd7,0,14,0|-vu3fd6,13,9,0|NaN,13,9,0",
        "Africa/Harare|,0,14,0|-vu3fd7,0,14,0|-vu3fd6,13,9,0|NaN,13,9,0",
        "Africa/Johannesburg|,0,19,0|-14nj6ip,0,19,0|-14nj6io,18,20,0|-yvtdi1,18,20,0|-yvtdi0,18,9,0|-e8lpc1,18,9,0|-e8lpc0,18,4,1|-dz8qs1,18,4,1|-dz8qs0,18,9,0|-dpvmo1,18,9,0|-dpvmo0,18,4,1|-dgio41,18,4,1|-dgio40,18,9,0|NaN,18,9,0",
        "Africa/Juba|,0,21,0|-kcrsit,0,21,0|-kcrsis,13,9,0|662fz,13,9,0|662g0,19,4,1|er8zz,19,4,1|er900,13,9,0|ow53z,13,9,0|ow540,19,4,1|xj6bz,19,4,1|xj6c0,13,9,0|17px3z,13,9,0|17px40,19,4,1|1gcybz,19,4,1|1gcyc0,13,9,0|1qfzrz,13,9,0|1qfzs0,19,4,1|1z4vnz,19,4,1|1z4vo0,13,9,0|2962fz,13,9,0|2962g0,19,4,1|2hwszz,19,4,1|2hwt00,13,9,0|2rw53z,13,9,0|2rw540,19,4,1|30oqbz,19,4,1|30oqc0,13,9,0|3am7rz,13,9,0|3am7s0,19,4,1|3jiibz,19,4,1|3jiic0,13,9,0|3tcafz,13,9,0|3tcag0,19,4,1|42afnz,19,4,1|42afo0,13,9,0|4cfbrz,13,9,0|4cfbs0,19,4,1|4l2czz,19,4,1|4l2d00,13,9,0|4v5efz,13,9,0|4v5eg0,19,4,1|53uabz,19,4,1|53uac0,13,9,0|5dvh3z,13,9,0|5dvh40,19,4,1|5mo2bz,19,4,1|5mo2c0,13,9,0|5wljrz,13,9,0|5wljs0,19,4,1|65fznz,19,4,1|65fzo0,13,9,0|6fbmfz,13,9,0|6fbmg0,19,4,1|6o7wzz,19,4,1|6o7x00,13,9,0|6y1p3z,13,9,0|6y1p40,19,4,1|76zubz,19,4,1|76zuc0,13,9,0|7h4qfz,13,9,0|7h4qg0,19,4,1|7ptmbz,19,4,1|7ptmc0,13,9,0|7zut3z,13,9,0|7zut40,19,4,1|88ljnz,19,4,1|88ljo0,13,9,0|fodfrz,13,9,0|fodfs0,3,4,0|qntgzz,3,4,0|qnth00,13,9,0|NaN,13,9,0",
        "Africa/Kampala|,0,2,0|-w6p5hh,0,2,0|-w6p5hg,2,3,0|-lnsey1,2,3,0|-lnsey0,3,4,0|-kvcdo1,3,4,0|-kvcdo0,2,3,0|-h80ka1,2,3,0|-h80ka0,4,5,0|-eb6ib1,4,5,0|-eb6ib0,3,4,0|NaN,3,4,0",
        "Africa/Khartoum|,0,22,0|-kcrsox,0,22,0|-kcrsow,13,9,0|662fz,13,9,0|662g0,19,4,1|er8zz,19,4,1|er900,13,9,0|ow53z,13,9,0|ow540,19,4,1|xj6bz,19,4,1|xj6c0,13,9,0|17px3z,13,9,0|17px40,19,4,1|1gcybz,19,4,1|1gcyc0,13,9,0|1qfzrz,13,9,0|1qfzs0,19,4,1|1z4vnz,19,4,1|1z4vo0,13,9,0|2962fz,13,9,0|2962g0,19,4,1|2hwszz,19,4,1|2hwt00,13,9,0|2rw53z,13,9,0|2rw540,19,4,1|30oqbz,19,4,1|30oqc0,13,9,0|3am7rz,13,9,0|3am7s0,19,4,1|3jiibz,19,4,1|3jiic0,13,9,0|3tcafz,13,9,0|3tcag0,19,4,1|42afnz,19,4,1|42afo0,13,9,0|4cfbrz,13,9,0|4cfbs0,19,4,1|4l2czz,19,4,1|4l2d00,13,9,0|4v5efz,13,9,0|4v5eg0,19,4,1|53uabz,19,4,1|53uac0,13,9,0|5dvh3z,13,9,0|5dvh40,19,4,1|5mo2bz,19,4,1|5mo2c0,13,9,0|5wljrz,13,9,0|5wljs0,19,4,1|65fznz,19,4,1|65fzo0,13,9,0|6fbmfz,13,9,0|6fbmg0,19,4,1|6o7wzz,19,4,1|6o7x00,13,9,0|6y1p3z,13,9,0|6y1p40,19,4,1|76zubz,19,4,1|76zuc0,13,9,0|7h4qfz,13,9,0|7h4qg0,19,4,1|7ptmbz,19,4,1|7ptmc0,13,9,0|7zut3z,13,9,0|7zut40,19,4,1|88ljnz,19,4,1|88ljo0,13,9,0|fodfrz,13,9,0|fodfs0,3,4,0|oypgzz,3,4,0|oyph00,13,9,0|NaN,13,9,0",
        "Africa/Kigali|,0,14,0|-vu3fd7,0,14,0|-vu3fd6,13,9,0|NaN,13,9,0",
        "Africa/Kinshasa|,0,10,0|-xnxnao,0,10,0|-xnxnan,1,1,0|-w3k001,1,1,0|-w3k000,0,10,0|-t85smo,0,10,0|-t85smn,10,11,0|-q9qc21,10,11,0|-q9qc20,11,8,0|NaN,11,8,0",
        "Africa/Lagos|,0,10,0|-xnxnao,0,10,0|-xnxnan,1,1,0|-w3k001,1,1,0|-w3k000,0,10,0|-t85smo,0,10,0|-t85smn,10,11,0|-q9qc21,10,11,0|-q9qc20,11,8,0|NaN,11,8,0",
        "Africa/Libreville|,0,10,0|-xnxnao,0,10,0|-xnxnan,1,1,0|-w3k001,1,1,0|-w3k000,0,10,0|-t85smo,0,10,0|-t85smn,10,11,0|-q9qc21,10,11,0|-q9qc20,11,8,0|NaN,11,8,0",
        "Africa/Lome|,0,0,0|-u9rgl5,0,0,0|-u9rgl4,1,1,0|NaN,1,1,0",
        "Africa/Luanda|,0,10,0|-xnxnao,0,10,0|-xnxnan,1,1,0|-w3k001,1,1,0|-w3k000,0,10,0|-t85smo,0,10,0|-t85smn,10,11,0|-q9qc21,10,11,0|-q9qc20,11,8,0|NaN,11,8,0",
        "Africa/Lubumbashi|,0,14,0|-vu3fd7,0,14,0|-vu3fd6,13,9,0|NaN,13,9,0",
        "Africa/Lusaka|,0,14,0|-vu3fd7,0,14,0|-vu3fd6,13,9,0|NaN,13,9,0",
        "Africa/Malabo|,0,10,0|-xnxnao,0,10,0|-xnxnan,1,1,0|-w3k001,1,1,0|-w3k000,0,10,0|-t85smo,0,10,0|-t85smn,10,11,0|-q9qc21,10,11,0|-q9qc20,11,8,0|NaN,11,8,0",
        "Africa/Maputo|,0,14,0|-vu3fd7,0,14,0|-vu3fd6,13,9,0|NaN,13,9,0",
        "Africa/Maseru|,0,19,0|-14nj6ip,0,19,0|-14nj6io,18,20,0|-yvtdi1,18,20,0|-yvtdi0,18,9,0|-e8lpc1,18,9,0|-e8lpc0,18,4,1|-dz8qs1,18,4,1|-dz8qs0,18,9,0|-dpvmo1,18,9,0|-dpvmo0,18,4,1|-dgio41,18,4,1|-dgio40,18,9,0|NaN,18,9,0",
        "Africa/Mbabane|,0,19,0|-14nj6ip,0,19,0|-14nj6io,18,20,0|-yvtdi1,18,20,0|-yvtdi0,18,9,0|-e8lpc1,18,9,0|-e8lpc0,18,4,1|-dz8qs1,18,4,1|-dz8qs0,18,9,0|-dpvmo1,18,9,0|-dpvmo0,18,4,1|-dgio41,18,4,1|-dgio40,18,9,0|NaN,18,9,0",
        "Africa/Mogadishu|,0,2,0|-w6p5hh,0,2,0|-w6p5hg,2,3,0|-lnsey1,2,3,0|-lnsey0,3,4,0|-kvcdo1,3,4,0|-kvcdo0,2,3,0|-h80ka1,2,3,0|-h80ka0,4,5,0|-eb6ib1,4,5,0|-eb6ib0,3,4,0|NaN,3,4,0",
        "Africa/Monrovia|,0,23,0|-19xcbc5,0,23,0|-19xcbc4,20,23,0|-qj6zc5,20,23,0|-qj6zc4,20,24,0|11v0q5,20,24,0|11v0q6,1,1,0|NaN,1,1,0",
        "Africa/Nairobi|,0,2,0|-w6p5hh,0,2,0|-w6p5hg,2,3,0|-lnsey1,2,3,0|-lnsey0,3,4,0|-kvcdo1,3,4,0|-kvcdo0,2,3,0|-h80ka1,2,3,0|-h80ka0,4,5,0|-eb6ib1,4,5,0|-eb6ib0,3,4,0|NaN,3,4,0",
        "Africa/Ndjamena|,0,25,0|-u9rk4d,0,25,0|-u9rk4c,11,8,0|53sl7z,11,8,0|53sl80,21,9,1|5bavrz,21,9,1|5bavs0,11,8,0|NaN,11,8,0",
        "Africa/Niamey|,0,10,0|-xnxnao,0,10,0|-xnxnan,1,1,0|-w3k001,1,1,0|-w3k000,0,10,0|-t85smo,0,10,0|-t85smn,10,11,0|-q9qc21,10,11,0|-q9qc20,11,8,0|NaN,11,8,0",
        "Africa/Nouakchott|,0,0,0|-u9rgl5,0,0,0|-u9rgl4,1,1,0|NaN,1,1,0",
        "Africa/Ouagadougou|,0,0,0|-u9rgl5,0,0,0|-u9rgl4,1,1,0|NaN,1,1,0",
        "Africa/Porto-Novo|,0,10,0|-xnxnao,0,10,0|-xnxnan,1,1,0|-w3k001,1,1,0|-w3k000,0,10,0|-t85smo,0,10,0|-t85smn,10,11,0|-q9qc21,10,11,0|-q9qc20,11,8,0|NaN,11,8,0",
        "Africa/Sao_Tome|,0,26,0|-18vsjwx,0,26,0|-18vsjww,0,27,0|-u9rhc1,0,27,0|-u9rhc0,1,1,0|p1uqrz,1,1,0|p1uqs0,11,8,0|pkmo3z,11,8,0|pkmo40,1,1,0|NaN,1,1,0",
        "Africa/Tripoli|,0,28,0|-q3gfrx,0,28,0|-q3gfrw,8,8,0|-9ia581,8,8,0|-9ia580,9,9,1|-9e82w1,9,9,1|-9e82w0,8,8,0|-8gxp81,8,8,0|-8gxp80,9,9,1|-8cmdk1,9,9,1|-8cmdk0,8,8,0|-7fuo41,8,8,0|-7fuo40,9,9,1|-7b2iw1,9,9,1|-7b2iw0,8,8,0|-5qotg1,8,8,0|-5qotg0,14,9,0|69gifz,14,9,0|69gig0,8,8,0|6e397z,8,8,0|6e3980,9,9,1|6ni2fz,9,9,1|6ni2g0,8,8,0|6wv6jz,8,8,0|6wv6k0,9,9,1|769zrz,9,9,1|769zs0,8,8,0|7foyjz,8,8,0|7foyk0,9,9,1|7p3rrz,9,9,1|7p3rs0,8,8,0|7yq57z,8,8,0|7yq580,9,9,1|87vp3z,9,9,1|87vp40,8,8,0|8hed7z,8,8,0|8hed80,9,9,1|8qrbrz,9,9,1|8qrbs0,8,8,0|900qjz,8,8,0|900qk0,9,9,1|99fjrz,9,9,1|99fjs0,8,8,0|9iuijz,8,8,0|9iuik0,9,9,1|9s9brz,9,9,1|9s9bs0,8,8,0|a1mfvz,8,8,0|a1mfw0,9,9,1|ab193z,9,9,1|ab1940,8,8,0|am3h7z,8,8,0|am3h80,14,9,0|dyil3z,14,9,0|dyil40,8,8,0|e833vz,8,8,0|e833w0,9,9,1|ehhx3z,9,9,1|ehhx40,14,9,0|md8vzz,14,9,0|md8w00,8,8,0|mkeanz,8,8,0|mkeao0,9,9,1|mv76nz,9,9,1|mv76o0,14,9,0|NaN,14,9,0",
        "Africa/Tunis|,0,29,0|-1a9dr7x,0,29,0|-1a9dr7w,5,7,0|-uozn3m,5,7,0|-uozn3l,8,8,0|-g12881,8,8,0|-g12880,9,9,1|-fpwdk1,9,9,1|-fpwdk0,8,8,0|-fkt1k1,8,8,0|-fkt1k0,9,9,1|-eqk5k1,9,9,1|-eqk5k0,8,8,0|-eimw41,8,8,0|-eimw40,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dxuo01,9,9,1|-dxuo00,8,8,0|-dxfrw1,8,8,0|-dxfrw0,9,9,1|-dp3uo1,9,9,1|-dp3uo0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d62tk1,9,9,1|-d62tk0,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cofmw1,9,9,1|-cofmw0,8,8,0|3tnh7z,8,8,0|3tnh80,9,9,1|417p7z,9,9,1|417p80,8,8,0|4ch97z,8,8,0|4ch980,9,9,1|4kcl7z,9,9,1|4kcl80,8,8,0|9lzh7z,8,8,0|9lzh80,9,9,1|9ryajz,9,9,1|9ryak0,8,8,0|a1bbvz,8,8,0|a1bbw0,9,9,1|aaod7z,9,9,1|aaod80,8,8,0|alxx7z,8,8,0|alxx80,9,9,1|atrejz,9,9,1|atrek0,8,8,0|ifs7vz,8,8,0|ifs7w0,9,9,1|inlrzz,9,9,1|inls00,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|NaN,8,8,0",
        "Africa/Windhoek|,0,30,0|-14nj4i1,0,30,0|-14nj4i0,22,20,0|-yvtdi1,22,20,0|-yvtdi0,18,9,0|-e8lpc1,18,9,0|-e8lpc0,18,4,1|-dz8qs1,18,4,1|-dz8qs0,18,9,0|ajtx3z,18,9,0|ajtx40,13,9,0|cmzh3z,13,9,0|cmzh40,11,8,1|cvkyrz,11,8,1|cvkys0,13,9,0|d6drzz,13,9,0|d6ds00,11,8,1|deb1fz,11,8,1|deb1g0,13,9,0|dpgtbz,13,9,0|dpgtc0,11,8,1|dx143z,11,8,1|dx1440,13,9,0|e86vzz,13,9,0|e86w00,11,8,1|eg45fz,11,8,1|eg45g0,13,9,0|eqwynz,13,9,0|eqwyo0,11,8,1|eyu83z,11,8,1|eyu840,13,9,0|f9n1bz,13,9,0|f9n1c0,11,8,1|fhkarz,11,8,1|fhkas0,13,9,0|fsd3zz,13,9,0|fsd400,11,8,1|g0adfz,11,8,1|g0adg0,13,9,0|gb36nz,13,9,0|gb36o0,11,8,1|gj0g3z,11,8,1|gj0g40,13,9,0|gu67zz,13,9,0|gu6800,11,8,1|h1qirz,11,8,1|h1qis0,13,9,0|hcwanz,13,9,0|hcwao0,11,8,1|hktk3z,11,8,1|hktk40,13,9,0|hvmdbz,13,9,0|hvmdc0,11,8,1|i3jmrz,11,8,1|i3jms0,13,9,0|iecfzz,13,9,0|iecg00,11,8,1|im9pfz,11,8,1|im9pg0,13,9,0|ix2inz,13,9,0|ix2io0,11,8,1|j4zs3z,11,8,1|j4zs40,13,9,0|jfslbz,13,9,0|jfslc0,11,8,1|jnpurz,11,8,1|jnpus0,13,9,0|jyvmnz,13,9,0|jyvmo0,11,8,1|k6sw3z,11,8,1|k6sw40,13,9,0|khlpbz,13,9,0|khlpc0,11,8,1|kpiyrz,11,8,1|kpiys0,13,9,0|l0brzz,13,9,0|l0bs00,11,8,1|l891fz,11,8,1|l891g0,13,9,0|lj1unz,13,9,0|lj1uo0,11,8,1|lqz43z,11,8,1|lqz440,13,9,0|m1rxbz,13,9,0|m1rxc0,11,8,1|m9p6rz,11,8,1|m9p6s0,13,9,0|mkuynz,13,9,0|mkuyo0,11,8,1|msf9fz,11,8,1|msf9g0,13,9,0|n3l1bz,13,9,0|n3l1c0,11,8,1|nbiarz,11,8,1|nbias0,13,9,0|nmb3zz,13,9,0|nmb400,11,8,1|nu8dfz,11,8,1|nu8dg0,13,9,0|o516nz,13,9,0|o516o0,11,8,1|ocyg3z,11,8,1|ocyg40,13,9,0|onr9bz,13,9,0|onr9c0,11,8,1|ovoirz,11,8,1|ovois0,13,9,0|NaN,13,9,0",
        "America/Adak|,0,31,0|-1hc7qk0,0,31,0|-1hc7qjz,0,32,0|-1078omb,0,32,0|-1078oma,23,33,0|-ek1nw1,23,33,0|-ek1nw0,24,34,1|-cq2tg1,24,34,1|-cq2tg0,25,34,1|-cnomo1,25,34,1|-cnomo0,23,33,0|-1fq441,23,33,0|-1fq440,26,33,0|-cs3w1,26,33,0|-cs3w0,27,34,1|-3f5c1,27,34,1|-3f5c0,26,33,0|5xyrz,26,33,0|5xys0,27,34,1|faxbz,27,34,1|faxc0,26,33,0|oo1fz,26,33,0|oo1g0,27,34,1|ydynz,27,34,1|ydyo0,26,33,0|17r2rz,26,33,0|17r2s0,27,34,1|1h41bz,27,34,1|1h41c0,26,33,0|1qh5fz,26,33,0|1qh5g0,27,34,1|1zu3zz,27,34,1|1zu400,26,33,0|23ftfz,26,33,0|23ftg0,27,34,1|2ik6nz,27,34,1|2ik6o0,26,33,0|2oomrz,26,33,0|2ooms0,27,34,1|31a9bz,27,34,1|31a9c0,26,33,0|3andfz,26,33,0|3andg0,27,34,1|3kdanz,27,34,1|3kdao0,26,33,0|3tdg3z,26,33,0|3tdg40,27,34,1|433dbz,27,34,1|433dc0,26,33,0|4cghfz,26,33,0|4cghg0,27,34,1|4ltfzz,27,34,1|4ltg00,26,33,0|4v6k3z,26,33,0|4v6k40,27,34,1|54jinz,27,34,1|54jio0,26,33,0|5dwmrz,26,33,0|5dwms0,27,34,1|5n9lbz,27,34,1|5n9lc0,26,33,0|5wmpfz,26,33,0|5wmpg0,27,34,1|65znzz,27,34,1|65zo00,26,33,0|6fcs3z,26,33,0|6fcs40,27,34,1|6p2pbz,27,34,1|6p2pc0,26,33,0|6y2urz,26,33,0|6y2us0,27,34,1|77srzz,27,34,1|77ss00,28,34,0|79e13z,28,34,0|79e140,29,34,0|7h5tbz,29,34,0|7h5tc0,30,35,1|7qirvz,30,35,1|7qirw0,29,34,0|7zvvzz,29,34,0|7zvw00,30,35,1|898ujz,30,35,1|898uk0,29,34,0|8ilynz,29,34,0|8ilyo0,30,35,1|8ryx7z,30,35,1|8ryx80,29,34,0|9095bz,29,34,0|9095c0,30,35,1|9aozvz,30,35,1|9aozw0,29,34,0|9iz7zz,29,34,0|9iz800,30,35,1|9ts17z,30,35,1|9ts180,29,34,0|a1panz,29,34,0|a1pao0,30,35,1|aci3vz,30,35,1|aci3w0,29,34,0|akfdbz,29,34,0|akfdc0,30,35,1|av86jz,30,35,1|av86k0,29,34,0|b3ienz,29,34,0|b3ieo0,30,35,1|bdy97z,30,35,1|bdy980,29,34,0|bm8hbz,29,34,0|bm8hc0,30,35,1|bwobvz,30,35,1|bwobw0,29,34,0|c4yjzz,29,34,0|c4yk00,30,35,1|cfrd7z,30,35,1|cfrd80,29,34,0|cnomnz,29,34,0|cnomo0,30,35,1|cyhfvz,30,35,1|cyhfw0,29,34,0|d6epbz,29,34,0|d6epc0,30,35,1|dh7ijz,30,35,1|dh7ik0,29,34,0|dphqnz,29,34,0|dphqo0,30,35,1|dzxl7z,30,35,1|dzxl80,29,34,0|e87tbz,29,34,0|e87tc0,30,35,1|einnvz,30,35,1|einnw0,29,34,0|eqxvzz,29,34,0|eqxw00,30,35,1|f1dqjz,30,35,1|f1dqk0,29,34,0|f9nynz,29,34,0|f9nyo0,30,35,1|fkgrvz,30,35,1|fkgrw0,29,34,0|fse1bz,29,34,0|fse1c0,30,35,1|g36ujz,30,35,1|g36uk0,29,34,0|gb43zz,29,34,0|gb4400,30,35,1|glwx7z,30,35,1|glwx80,29,34,0|gu75bz,29,34,0|gu75c0,30,35,1|h4mzvz,30,35,1|h4mzw0,29,34,0|hcx7zz,29,34,0|hcx800,30,35,1|hnd2jz,30,35,1|hnd2k0,29,34,0|hvnanz,29,34,0|hvnao0,30,35,1|i6g3vz,30,35,1|i6g3w0,29,34,0|ieddbz,29,34,0|ieddc0,30,35,1|ip66jz,30,35,1|ip66k0,29,34,0|ix3fzz,29,34,0|ix3g00,30,35,1|j7w97z,30,35,1|j7w980,29,34,0|jeqmnz,29,34,0|jeqmo0,30,35,1|jqzajz,30,35,1|jqzak0,29,34,0|jxgpbz,29,34,0|jxgpc0,30,35,1|k9pd7z,30,35,1|k9pd80,29,34,0|kg6rzz,29,34,0|kg6s00,30,35,1|ksffvz,30,35,1|ksffw0,29,34,0|kz9tbz,29,34,0|kz9tc0,30,35,1|lbih7z,30,35,1|lbih80,29,34,0|lhzvzz,29,34,0|lhzw00,30,35,1|lu8jvz,30,35,1|lu8jw0,29,34,0|m0pynz,29,34,0|m0pyo0,30,35,1|mcymjz,30,35,1|mcymk0,29,34,0|mjg1bz,29,34,0|mjg1c0,30,35,1|mvop7z,30,35,1|mvop80,29,34,0|n263zz,29,34,0|n26400,30,35,1|neervz,30,35,1|neerw0,29,34,0|nkw6nz,29,34,0|nkw6o0,30,35,1|nx4ujz,30,35,1|nx4uk0,29,34,0|o3z7zz,29,34,0|o3z800,30,35,1|og7vvz,30,35,1|og7vw0,29,34,0|ompanz,29,34,0|ompao0,30,35,1|oyxyjz,30,35,1|oyxyk0,29,34,0|p5fdbz,29,34,0|p5fdc0,30,35,1|pho17z,30,35,1|pho180,29,34,0|po5fzz,29,34,0|po5g00,30,35,1|q0e3vz,30,35,1|q0e3w0,29,34,0|q6vinz,29,34,0|q6vio0,30,35,1|qj46jz,30,35,1|qj46k0,29,34,0|qpyjzz,29,34,0|qpyk00,30,35,1|r277vz,30,35,1|r277w0,29,34,0|r8omnz,29,34,0|r8omo0,30,35,1|rkxajz,30,35,1|rkxak0,29,34,0|rrepbz,29,34,0|rrepc0,30,35,1|s3nd7z,30,35,1|s3nd80,29,34,0|sa4rzz,29,34,0|sa4s00,30,35,1|smdfvz,30,35,1|smdfw0,29,34,0|ssuunz,29,34,0|ssuuo0,30,35,1|t53ijz,30,35,1|t53ik0,29,34,0|tbkxbz,29,34,0|tbkxc0,30,35,1|tntl7z,30,35,1|tntl80,29,34,0|tunynz,29,34,0|tunyo0,30,35,1|u6wmjz,30,35,1|u6wmk0,29,34,0|ude1bz,29,34,0|ude1c0,30,35,1|upmp7z,30,35,1|upmp80,29,34,0|uw43zz,29,34,0|uw4400,30,35,1|v8crvz,30,35,1|v8crw0,29,34,0|veu6nz,29,34,0|veu6o0,30,35,1|vr2ujz,30,35,1|vr2uk0,29,34,0|vxk9bz,29,34,0|vxk9c0,30,35,1|w9sx7z,30,35,1|w9sx80,29,34,0|wgnanz,29,34,0|wgnao0,30,35,1|wsvyjz,30,35,1|wsvyk0,29,34,0|wzddbz,29,34,0|wzddc0,30,35,1|xbm17z,30,35,1|xbm180,29,34,0|xi3fzz,29,34,0|xi3g00,30,35,1|xuc3vz,30,35,1|xuc3w0,29,34,0|y0tinz,29,34,0|y0tio0,30,35,1|yd26jz,30,35,1|yd26k0,29,34,0|yjjlbz,29,34,0|yjjlc0,30,35,1|yvs97z,30,35,1|yvs980,29,34,0|z29nzz,29,34,0|z29o00,30,35,1|zeibvz,30,35,1|zeibw0,29,34,0|zlcpbz,29,34,0|zlcpc0,30,35,1|zxld7z,30,35,1|zxld80,29,34,0|1042rzz,29,34,0|1042s00,30,35,1|10gbfvz,30,35,1|10gbfw0,29,34,0|10msunz,29,34,0|10msuo0,30,35,1|10z1ijz,30,35,1|10z1ik0,29,34,0|115ixbz,29,34,0|115ixc0,30,35,1|11hrl7z,30,35,1|11hrl80,29,34,0|11o8zzz,29,34,0|11o9000,30,35,1|120hnvz,30,35,1|120hnw0,29,34,0|126z2nz,29,34,0|126z2o0,30,35,1|12j7qjz,30,35,1|12j7qk0,29,34,0|12q23zz,29,34,0|12q2400,30,35,1|132arvz,30,35,1|132arw0,29,34,0|138s6nz,29,34,0|138s6o0,30,35,1|13l0ujz,30,35,1|13l0uk0,29,34,0|13ri9bz,29,34,0|13ri9c0,30,35,1|143qx7z,30,35,1|143qx80,29,34,0|14a8bzz,29,34,0|14a8c00,30,35,1|14mgzvz,30,35,1|14mgzw0,29,34,0|14syenz,29,34,0|14syeo0,30,35,1|15572jz,30,35,1|15572k0,29,34,0|15c1fzz,29,34,0|15c1g00,30,35,1|15oa3vz,30,35,1|15oa3w0,29,34,0|15urinz,29,34,0|15urio0,30,35,1|16706jz,30,35,1|16706k0,29,34,0|16dhlbz,29,34,0|16dhlc0,30,35,1|16pq97z,30,35,1|16pq980,29,34,0|16w7nzz,29,34,0|16w7o00,30,35,1|178gbvz,30,35,1|178gbw0,29,34,0|17exqnz,29,34,0|17exqo0,30,35,1|17r6ejz,30,35,1|17r6ek0,29,34,0|17xntbz,29,34,0|17xntc0,30,35,1|189wh7z,30,35,1|189wh80,29,34,0|18gqunz,29,34,0|18gquo0,30,35,1|18szijz,30,35,1|18szik0,29,34,0|18zgxbz,29,34,0|18zgxc0,30,35,1|19bpl7z,30,35,1|19bpl80,29,34,0|19i6zzz,29,34,0|19i7000,30,35,1|19ufnvz,30,35,1|19ufnw0,29,34,0|1a0x2nz,29,34,0|1a0x2o0,30,35,1|1ad5qjz,30,35,1|1ad5qk0,29,34,0|1ajn5bz,29,34,0|1ajn5c0,30,35,1|1avvt7z,30,35,1|1avvt80,29,34,0|1b2q6nz,29,34,0|1b2q6o0,30,35,1|1beyujz,30,35,1|1beyuk0,29,34,0|1blg9bz,29,34,0|1blg9c0,30,35,1|1bxox7z,30,35,1|1bxox80,29,34,0|1c46bzz,29,34,0|1c46c00,30,35,1|1cgezvz,30,35,1|1cgezw0,29,34,0|1cmwenz,29,34,0|1cmweo0,30,35,1|1cz52jz,30,35,1|1cz52k0,29,34,0|1d5mhbz,29,34,0|1d5mhc0,30,35,1|1dhv57z,30,35,1|1dhv580,29,34,0|1docjzz,29,34,0|1dock00,30,35,1|1e0l7vz,30,35,1|1e0l7w0,29,34,0|1e7flbz,29,34,0|1e7flc0,30,35,1|1ejo97z,30,35,1|1ejo980,29,34,0|1eq5nzz,29,34,0|1eq5o00,30,35,1|1f2ebvz,30,35,1|1f2ebw0,29,34,0|1f8vqnz,29,34,0|1f8vqo0,30,35,1|1fl4ejz,30,35,1|1fl4ek0,29,34,0|1frltbz,29,34,0|1frltc0,30,35,1|1g3uh7z,30,35,1|1g3uh80,29,34,0|1gabvzz,29,34,0|1gabw00,30,35,1|1gmkjvz,30,35,1|1gmkjw0,29,34,0|1gt1ynz,29,34,0|1gt1yo0,30,35,1|1h5amjz,30,35,1|1h5amk0,29,34,0|1hc4zzz,29,34,0|1hc5000,30,35,1|1hodnvz,30,35,1|1hodnw0,29,34,0|1huv2nz,29,34,0|1huv2o0,30,35,1|1i73qjz,30,35,1|1i73qk0,29,34,0|1idl5bz,29,34,0|1idl5c0,30,35,1|1iptt7z,30,35,1|1iptt80,29,34,0|1iwb7zz,29,34,0|1iwb800,30,35,1|1j8jvvz,30,35,1|1j8jvw0,29,34,0|1jf1anz,29,34,0|1jf1ao0,30,35,1|1jr9yjz,30,35,1|1jr9yk0,29,34,0|1jy4bzz,29,34,0|1jy4c00,30,35,1|1kaczvz,30,35,1|1kaczw0,29,34,0|1kguenz,29,34,0|1kgueo0,30,35,1|1kt32jz,30,35,1|1kt32k0,29,34,0|1kzkhbz,29,34,0|1kzkhc0,30,35,1|1lbt57z,30,35,1|1lbt580,29,34,0|1liajzz,29,34,0|1liak00,30,35,1|1luj7vz,30,35,1|1luj7w0,29,34,0|1m10mnz,29,34,0|1m10mo0,30,35,1|1md9ajz,30,35,1|1md9ak0,29,34,0|1mjqpbz,29,34,0|1mjqpc0,30,35,1|1mvzd7z,30,35,1|1mvzd80,29,34,0|1n2tqnz,29,34,0|1n2tqo0,30,35,1|1nf2ejz,30,35,1|1nf2ek0,29,34,0|1nljtbz,29,34,0|1nljtc0,30,35,1|1nxsh7z,30,35,1|1nxsh80,29,34,0|1o49vzz,29,34,0|1o49w00,30,35,1|1ogijvz,30,35,1|1ogijw0,29,34,0|1omzynz,29,34,0|1omzyo0,30,35,1|1oz8mjz,30,35,1|1oz8mk0,29,34,0|1p5q1bz,29,34,0|1p5q1c0,30,35,1|1phyp7z,30,35,1|1phyp80,29,34,0|1pot2nz,29,34,0|1pot2o0,30,35,1|1q11qjz,30,35,1|1q11qk0,29,34,0|1q7j5bz,29,34,0|1q7j5c0,30,35,1|1qjrt7z,30,35,1|1qjrt80,29,34,0|1qq97zz,29,34,0|1qq9800,30,35,1|1r2hvvz,30,35,1|1r2hvw0,29,34,0|1r8zanz,29,34,0|1r8zao0,30,35,1|1rl7yjz,30,35,1|1rl7yk0,29,34,0|1rrpdbz,29,34,0|1rrpdc0,30,35,1|1s3y17z,30,35,1|1s3y180,29,34,0|1saffzz,29,34,0|1safg00,30,35,1|1smo3vz,30,35,1|1smo3w0,29,34,0|1stihbz,29,34,0|1stihc0,30,35,1|1t5r57z,30,35,1|1t5r580,29,34,0|1tc8jzz,29,34,0|1tc8k00,30,35,1|1toh7vz,30,35,1|1toh7w0,29,34,0|1tuymnz,29,34,0|1tuymo0,30,35,1|1u77ajz,30,35,1|1u77ak0,29,34,0|1udopbz,29,34,0|1udopc0,30,35,1|1upxd7z,30,35,1|1upxd80,29,34,0|1uwerzz,29,34,0|1uwes00,30,35,1|1v8nfvz,30,35,1|1v8nfw0,29,34,0|1vf4unz,29,34,0|1vf4uo0,30,35,1|1vrdijz,30,35,1|1vrdik0,29,34,0|NaN,29,34,0",
        "America/Anchorage|,0,36,0|-1hc7qk0,0,36,0|-1hc7qjz,0,37,0|-1078tkp,0,37,0|-1078tko,31,34,0|-ek1qo1,31,34,0|-ek1qo0,32,35,1|-cq2tg1,32,35,1|-cq2tg0,33,35,1|-cnopg1,33,35,1|-cnopg0,31,34,0|-1fq6w1,31,34,0|-1fq6w0,28,34,0|-cs6o1,28,34,0|-cs6o0,34,35,1|-3f841,34,35,1|-3f840,28,34,0|5xvzz,28,34,0|5xw00,34,35,1|faujz,34,35,1|fauk0,28,34,0|onynz,28,34,0|onyo0,34,35,1|ydvvz,34,35,1|ydvw0,28,34,0|17qzzz,28,34,0|17r000,34,35,1|1h3yjz,34,35,1|1h3yk0,28,34,0|1qh2nz,28,34,0|1qh2o0,34,35,1|1zu17z,34,35,1|1zu180,28,34,0|23fqnz,28,34,0|23fqo0,34,35,1|2ik3vz,34,35,1|2ik3w0,28,34,0|2oojzz,28,34,0|2ook00,34,35,1|31a6jz,34,35,1|31a6k0,28,34,0|3ananz,28,34,0|3anao0,34,35,1|3kd7vz,34,35,1|3kd7w0,28,34,0|3tddbz,28,34,0|3tddc0,34,35,1|433ajz,34,35,1|433ak0,28,34,0|4cgenz,28,34,0|4cgeo0,34,35,1|4ltd7z,34,35,1|4ltd80,28,34,0|4v6hbz,28,34,0|4v6hc0,34,35,1|54jfvz,34,35,1|54jfw0,28,34,0|5dwjzz,28,34,0|5dwk00,34,35,1|5n9ijz,34,35,1|5n9ik0,28,34,0|5wmmnz,28,34,0|5wmmo0,34,35,1|65zl7z,34,35,1|65zl80,28,34,0|6fcpbz,28,34,0|6fcpc0,34,35,1|6p2mjz,34,35,1|6p2mk0,28,34,0|6y2rzz,28,34,0|6y2s00,34,35,1|77sp7z,34,35,1|77sp80,35,35,0|79dybz,35,35,0|79dyc0,36,35,0|7h5qjz,36,35,0|7h5qk0,37,38,1|7qip3z,37,38,1|7qip40,36,35,0|7zvt7z,36,35,0|7zvt80,37,38,1|898rrz,37,38,1|898rs0,36,35,0|8ilvvz,36,35,0|8ilvw0,37,38,1|8ryufz,37,38,1|8ryug0,36,35,0|9092jz,36,35,0|9092k0,37,38,1|9aox3z,37,38,1|9aox40,36,35,0|9iz57z,36,35,0|9iz580,37,38,1|9tryfz,37,38,1|9tryg0,36,35,0|a1p7vz,36,35,0|a1p7w0,37,38,1|aci13z,37,38,1|aci140,36,35,0|akfajz,36,35,0|akfak0,37,38,1|av83rz,37,38,1|av83s0,36,35,0|b3ibvz,36,35,0|b3ibw0,37,38,1|bdy6fz,37,38,1|bdy6g0,36,35,0|bm8ejz,36,35,0|bm8ek0,37,38,1|bwo93z,37,38,1|bwo940,36,35,0|c4yh7z,36,35,0|c4yh80,37,38,1|cfrafz,37,38,1|cfrag0,36,35,0|cnojvz,36,35,0|cnojw0,37,38,1|cyhd3z,37,38,1|cyhd40,36,35,0|d6emjz,36,35,0|d6emk0,37,38,1|dh7frz,37,38,1|dh7fs0,36,35,0|dphnvz,36,35,0|dphnw0,37,38,1|dzxifz,37,38,1|dzxig0,36,35,0|e87qjz,36,35,0|e87qk0,37,38,1|einl3z,37,38,1|einl40,36,35,0|eqxt7z,36,35,0|eqxt80,37,38,1|f1dnrz,37,38,1|f1dns0,36,35,0|f9nvvz,36,35,0|f9nvw0,37,38,1|fkgp3z,37,38,1|fkgp40,36,35,0|fsdyjz,36,35,0|fsdyk0,37,38,1|g36rrz,37,38,1|g36rs0,36,35,0|gb417z,36,35,0|gb4180,37,38,1|glwufz,37,38,1|glwug0,36,35,0|gu72jz,36,35,0|gu72k0,37,38,1|h4mx3z,37,38,1|h4mx40,36,35,0|hcx57z,36,35,0|hcx580,37,38,1|hnczrz,37,38,1|hnczs0,36,35,0|hvn7vz,36,35,0|hvn7w0,37,38,1|i6g13z,37,38,1|i6g140,36,35,0|iedajz,36,35,0|iedak0,37,38,1|ip63rz,37,38,1|ip63s0,36,35,0|ix3d7z,36,35,0|ix3d80,37,38,1|j7w6fz,37,38,1|j7w6g0,36,35,0|jeqjvz,36,35,0|jeqjw0,37,38,1|jqz7rz,37,38,1|jqz7s0,36,35,0|jxgmjz,36,35,0|jxgmk0,37,38,1|k9pafz,37,38,1|k9pag0,36,35,0|kg6p7z,36,35,0|kg6p80,37,38,1|ksfd3z,37,38,1|ksfd40,36,35,0|kz9qjz,36,35,0|kz9qk0,37,38,1|lbiefz,37,38,1|lbieg0,36,35,0|lhzt7z,36,35,0|lhzt80,37,38,1|lu8h3z,37,38,1|lu8h40,36,35,0|m0pvvz,36,35,0|m0pvw0,37,38,1|mcyjrz,37,38,1|mcyjs0,36,35,0|mjfyjz,36,35,0|mjfyk0,37,38,1|mvomfz,37,38,1|mvomg0,36,35,0|n2617z,36,35,0|n26180,37,38,1|neep3z,37,38,1|neep40,36,35,0|nkw3vz,36,35,0|nkw3w0,37,38,1|nx4rrz,37,38,1|nx4rs0,36,35,0|o3z57z,36,35,0|o3z580,37,38,1|og7t3z,37,38,1|og7t40,36,35,0|omp7vz,36,35,0|omp7w0,37,38,1|oyxvrz,37,38,1|oyxvs0,36,35,0|p5fajz,36,35,0|p5fak0,37,38,1|phnyfz,37,38,1|phnyg0,36,35,0|po5d7z,36,35,0|po5d80,37,38,1|q0e13z,37,38,1|q0e140,36,35,0|q6vfvz,36,35,0|q6vfw0,37,38,1|qj43rz,37,38,1|qj43s0,36,35,0|qpyh7z,36,35,0|qpyh80,37,38,1|r2753z,37,38,1|r27540,36,35,0|r8ojvz,36,35,0|r8ojw0,37,38,1|rkx7rz,37,38,1|rkx7s0,36,35,0|rremjz,36,35,0|rremk0,37,38,1|s3nafz,37,38,1|s3nag0,36,35,0|sa4p7z,36,35,0|sa4p80,37,38,1|smdd3z,37,38,1|smdd40,36,35,0|ssurvz,36,35,0|ssurw0,37,38,1|t53frz,37,38,1|t53fs0,36,35,0|tbkujz,36,35,0|tbkuk0,37,38,1|tntifz,37,38,1|tntig0,36,35,0|tunvvz,36,35,0|tunvw0,37,38,1|u6wjrz,37,38,1|u6wjs0,36,35,0|uddyjz,36,35,0|uddyk0,37,38,1|upmmfz,37,38,1|upmmg0,36,35,0|uw417z,36,35,0|uw4180,37,38,1|v8cp3z,37,38,1|v8cp40,36,35,0|veu3vz,36,35,0|veu3w0,37,38,1|vr2rrz,37,38,1|vr2rs0,36,35,0|vxk6jz,36,35,0|vxk6k0,37,38,1|w9sufz,37,38,1|w9sug0,36,35,0|wgn7vz,36,35,0|wgn7w0,37,38,1|wsvvrz,37,38,1|wsvvs0,36,35,0|wzdajz,36,35,0|wzdak0,37,38,1|xblyfz,37,38,1|xblyg0,36,35,0|xi3d7z,36,35,0|xi3d80,37,38,1|xuc13z,37,38,1|xuc140,36,35,0|y0tfvz,36,35,0|y0tfw0,37,38,1|yd23rz,37,38,1|yd23s0,36,35,0|yjjijz,36,35,0|yjjik0,37,38,1|yvs6fz,37,38,1|yvs6g0,36,35,0|z29l7z,36,35,0|z29l80,37,38,1|zei93z,37,38,1|zei940,36,35,0|zlcmjz,36,35,0|zlcmk0,37,38,1|zxlafz,37,38,1|zxlag0,36,35,0|1042p7z,36,35,0|1042p80,37,38,1|10gbd3z,37,38,1|10gbd40,36,35,0|10msrvz,36,35,0|10msrw0,37,38,1|10z1frz,37,38,1|10z1fs0,36,35,0|115iujz,36,35,0|115iuk0,37,38,1|11hrifz,37,38,1|11hrig0,36,35,0|11o8x7z,36,35,0|11o8x80,37,38,1|120hl3z,37,38,1|120hl40,36,35,0|126yzvz,36,35,0|126yzw0,37,38,1|12j7nrz,37,38,1|12j7ns0,36,35,0|12q217z,36,35,0|12q2180,37,38,1|132ap3z,37,38,1|132ap40,36,35,0|138s3vz,36,35,0|138s3w0,37,38,1|13l0rrz,37,38,1|13l0rs0,36,35,0|13ri6jz,36,35,0|13ri6k0,37,38,1|143qufz,37,38,1|143qug0,36,35,0|14a897z,36,35,0|14a8980,37,38,1|14mgx3z,37,38,1|14mgx40,36,35,0|14sybvz,36,35,0|14sybw0,37,38,1|1556zrz,37,38,1|1556zs0,36,35,0|15c1d7z,36,35,0|15c1d80,37,38,1|15oa13z,37,38,1|15oa140,36,35,0|15urfvz,36,35,0|15urfw0,37,38,1|16703rz,37,38,1|16703s0,36,35,0|16dhijz,36,35,0|16dhik0,37,38,1|16pq6fz,37,38,1|16pq6g0,36,35,0|16w7l7z,36,35,0|16w7l80,37,38,1|178g93z,37,38,1|178g940,36,35,0|17exnvz,36,35,0|17exnw0,37,38,1|17r6brz,37,38,1|17r6bs0,36,35,0|17xnqjz,36,35,0|17xnqk0,37,38,1|189wefz,37,38,1|189weg0,36,35,0|18gqrvz,36,35,0|18gqrw0,37,38,1|18szfrz,37,38,1|18szfs0,36,35,0|18zgujz,36,35,0|18zguk0,37,38,1|19bpifz,37,38,1|19bpig0,36,35,0|19i6x7z,36,35,0|19i6x80,37,38,1|19ufl3z,37,38,1|19ufl40,36,35,0|1a0wzvz,36,35,0|1a0wzw0,37,38,1|1ad5nrz,37,38,1|1ad5ns0,36,35,0|1ajn2jz,36,35,0|1ajn2k0,37,38,1|1avvqfz,37,38,1|1avvqg0,36,35,0|1b2q3vz,36,35,0|1b2q3w0,37,38,1|1beyrrz,37,38,1|1beyrs0,36,35,0|1blg6jz,36,35,0|1blg6k0,37,38,1|1bxoufz,37,38,1|1bxoug0,36,35,0|1c4697z,36,35,0|1c46980,37,38,1|1cgex3z,37,38,1|1cgex40,36,35,0|1cmwbvz,36,35,0|1cmwbw0,37,38,1|1cz4zrz,37,38,1|1cz4zs0,36,35,0|1d5mejz,36,35,0|1d5mek0,37,38,1|1dhv2fz,37,38,1|1dhv2g0,36,35,0|1doch7z,36,35,0|1doch80,37,38,1|1e0l53z,37,38,1|1e0l540,36,35,0|1e7fijz,36,35,0|1e7fik0,37,38,1|1ejo6fz,37,38,1|1ejo6g0,36,35,0|1eq5l7z,36,35,0|1eq5l80,37,38,1|1f2e93z,37,38,1|1f2e940,36,35,0|1f8vnvz,36,35,0|1f8vnw0,37,38,1|1fl4brz,37,38,1|1fl4bs0,36,35,0|1frlqjz,36,35,0|1frlqk0,37,38,1|1g3uefz,37,38,1|1g3ueg0,36,35,0|1gabt7z,36,35,0|1gabt80,37,38,1|1gmkh3z,37,38,1|1gmkh40,36,35,0|1gt1vvz,36,35,0|1gt1vw0,37,38,1|1h5ajrz,37,38,1|1h5ajs0,36,35,0|1hc4x7z,36,35,0|1hc4x80,37,38,1|1hodl3z,37,38,1|1hodl40,36,35,0|1huuzvz,36,35,0|1huuzw0,37,38,1|1i73nrz,37,38,1|1i73ns0,36,35,0|1idl2jz,36,35,0|1idl2k0,37,38,1|1iptqfz,37,38,1|1iptqg0,36,35,0|1iwb57z,36,35,0|1iwb580,37,38,1|1j8jt3z,37,38,1|1j8jt40,36,35,0|1jf17vz,36,35,0|1jf17w0,37,38,1|1jr9vrz,37,38,1|1jr9vs0,36,35,0|1jy497z,36,35,0|1jy4980,37,38,1|1kacx3z,37,38,1|1kacx40,36,35,0|1kgubvz,36,35,0|1kgubw0,37,38,1|1kt2zrz,37,38,1|1kt2zs0,36,35,0|1kzkejz,36,35,0|1kzkek0,37,38,1|1lbt2fz,37,38,1|1lbt2g0,36,35,0|1liah7z,36,35,0|1liah80,37,38,1|1luj53z,37,38,1|1luj540,36,35,0|1m10jvz,36,35,0|1m10jw0,37,38,1|1md97rz,37,38,1|1md97s0,36,35,0|1mjqmjz,36,35,0|1mjqmk0,37,38,1|1mvzafz,37,38,1|1mvzag0,36,35,0|1n2tnvz,36,35,0|1n2tnw0,37,38,1|1nf2brz,37,38,1|1nf2bs0,36,35,0|1nljqjz,36,35,0|1nljqk0,37,38,1|1nxsefz,37,38,1|1nxseg0,36,35,0|1o49t7z,36,35,0|1o49t80,37,38,1|1ogih3z,37,38,1|1ogih40,36,35,0|1omzvvz,36,35,0|1omzvw0,37,38,1|1oz8jrz,37,38,1|1oz8js0,36,35,0|1p5pyjz,36,35,0|1p5pyk0,37,38,1|1phymfz,37,38,1|1phymg0,36,35,0|1poszvz,36,35,0|1poszw0,37,38,1|1q11nrz,37,38,1|1q11ns0,36,35,0|1q7j2jz,36,35,0|1q7j2k0,37,38,1|1qjrqfz,37,38,1|1qjrqg0,36,35,0|1qq957z,36,35,0|1qq9580,37,38,1|1r2ht3z,37,38,1|1r2ht40,36,35,0|1r8z7vz,36,35,0|1r8z7w0,37,38,1|1rl7vrz,37,38,1|1rl7vs0,36,35,0|1rrpajz,36,35,0|1rrpak0,37,38,1|1s3xyfz,37,38,1|1s3xyg0,36,35,0|1safd7z,36,35,0|1safd80,37,38,1|1smo13z,37,38,1|1smo140,36,35,0|1stiejz,36,35,0|1stiek0,37,38,1|1t5r2fz,37,38,1|1t5r2g0,36,35,0|1tc8h7z,36,35,0|1tc8h80,37,38,1|1toh53z,37,38,1|1toh540,36,35,0|1tuyjvz,36,35,0|1tuyjw0,37,38,1|1u777rz,37,38,1|1u777s0,36,35,0|1udomjz,36,35,0|1udomk0,37,38,1|1upxafz,37,38,1|1upxag0,36,35,0|1uwep7z,36,35,0|1uwep80,37,38,1|1v8nd3z,37,38,1|1v8nd40,36,35,0|1vf4rvz,36,35,0|1vf4rw0,37,38,1|1vrdfrz,37,38,1|1vrdfs0,36,35,0|NaN,36,35,0",
        "America/Anguilla|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Antigua|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Araguaina|,0,42,0|-t85j2p,0,42,0|-t85j2o,38,41,0|-jylag1,38,41,0|-jylag0,39,43,1|-jpb141,39,43,1|-jpb140,38,41,0|-jfsd01,38,41,0|-jfsd00,39,43,1|-j6j3s1,39,43,1|-j6j3s0,38,41,0|-ahcyc1,38,41,0|-ahcyc0,39,43,1|-aad3o1,39,43,1|-aad3o0,38,41,0|-9yl101,38,41,0|-9yl100,39,43,1|-9sd141,39,43,1|-9sd140,38,41,0|-9ft3o1,38,41,0|-9ft3o0,39,43,1|-99j941,39,43,1|-99j940,38,41,0|-8wzbo1,38,41,0|-8wzbo0,39,43,1|-8scqg1,39,43,1|-8scqg0,38,41,0|-35xmc1,38,41,0|-35xmc0,39,43,1|-31nzs1,39,43,1|-31nzs0,38,41,0|-2kdp01,38,41,0|-2kdp00,39,43,1|-2hcig1,39,43,1|-2hcig0,38,41,0|-24qqc1,38,41,0|-24qqc0,39,43,1|-204541,39,43,1|-204540,38,41,0|-1nid01,38,41,0|-1nid00,39,43,1|-1hc7s1,39,43,1|-1hc7s0,38,41,0|-14qfo1,38,41,0|-14qfo0,39,43,1|-yifs1,39,43,1|-yifs0,38,41,0|89jcbz,38,41,0|89jcc0,39,43,1|8gdk7z,39,43,1|8gdk80,38,41,0|8rwgbz,38,41,0|8rwgc0,39,43,1|8xns7z,39,43,1|8xns80,38,41,0|9aodnz,38,41,0|9aodo0,39,43,1|9g2qvz,39,43,1|9g2qw0,38,41,0|9t1hnz,38,41,0|9t1ho0,39,43,1|9yfuvz,39,43,1|9yfuw0,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|ahvuvz,39,43,1|ahvuw0,38,41,0|dggyzz,38,41,0|dggz00,39,43,1|dml9jz,39,43,1|dml9k0,38,41,0|dyu2zz,38,41,0|dyu300,39,43,1|e5oavz,39,43,1|e5oaw0,38,41,0|ehm0bz,38,41,0|ehm0c0,39,43,1|ep4avz,39,43,1|ep4aw0,38,41,0|f0n6zz,38,41,0|f0n700,39,43,1|f7hevz,39,43,1|f7hew0,38,41,0|fj0azz,38,41,0|fj0b00,39,43,1|fqkg7z,39,43,1|fqkg80,38,41,0|g23cbz,38,41,0|g23cc0,39,43,1|g8xk7z,39,43,1|g8xk80,38,41,0|gl6dnz,38,41,0|gl6do0,39,43,1|grnmvz,39,43,1|grnmw0,38,41,0|h4zcbz,38,41,0|h4zcc0,39,43,1|hadpjz,39,43,1|hadpk0,38,41,0|mc82zz,38,41,0|mc8300,39,43,1|micdjz,39,43,1|micdk0,38,41,0|NaN,38,41,0",
        "America/Argentina/Buenos_Aires|,0,44,0|-138aaid,0,44,0|-138aaic,40,45,0|-px7ys1,40,45,0|-px7ys0,41,40,0|-kecq81,41,40,0|-kecq80,38,41,1|-k84qc1,38,41,1|-k84qc0,41,40,0|-jxzu81,41,40,0|-jxzu80,38,41,1|-jqwd01,38,41,1|-jqwd00,41,40,0|-jeakw1,41,40,0|-jeakw0,38,41,1|-j84fo1,38,41,1|-j84fo0,41,40,0|-ivink1,41,40,0|-ivink0,38,41,1|-ipcic1,38,41,1|-ipcic0,41,40,0|-icqq81,41,40,0|-icqq80,38,41,1|-i6kl01,38,41,1|-i6kl00,41,40,0|-htysw1,41,40,0|-htysw0,38,41,1|-hnqt01,38,41,1|-hnqt00,41,40,0|-hb50w1,41,40,0|-hb50w0,38,41,1|-h4yvo1,38,41,1|-h4yvo0,41,40,0|-gsd3k1,41,40,0|-gsd3k0,38,41,1|-gm6yc1,38,41,1|-gm6yc0,41,40,0|-g9l681,41,40,0|-g9l680,38,41,1|-g3f101,38,41,1|-g3f100,41,40,0|-fqt8w1,41,40,0|-fqt8w0,38,41,1|-fkl901,38,41,1|-fkl900,41,40,0|-feb8w1,41,40,0|-feb8w0,38,41,1|-ewd101,38,41,1|-ewd100,41,40,0|-eq30w1,41,40,0|-eq30w0,38,41,1|-dse501,38,41,1|-dse500,41,40,0|-doj681,41,40,0|-doj680,38,41,1|-cfvuc1,38,41,1|-cfvuc0,41,40,0|-c4vgw1,41,40,0|-c4vgw0,38,41,1|-39hec1,38,41,1|-39hec0,41,40,0|-35mfk1,41,40,0|-35mfk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2pxm81,41,40,0|-2pxm80,38,41,1|-2ivzo1,38,41,1|-2ivzo0,41,40,0|-275ow1,41,40,0|-275ow0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1odrk1,41,40,0|-1odrk0,38,41,1|-1fovo1,38,41,1|-1fovo0,41,40,0|-16brk1,41,40,0|-16brk0,38,41,1|-wluc1,38,41,1|-wluc0,41,40,0|-n8q81,41,40,0|-n8q80,38,41,1|-dvro1,38,41,1|-dvro0,41,40,0|-4ink1,41,40,0|-4ink0,38,41,0|24aizz,38,41,0|24aj00,39,43,1|29bxjz,39,43,1|29bxk0,38,41,0|9veobz,38,41,0|9veoc0,39,43,1|a08o7z,39,43,1|a08o80,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|aiyqvz,39,43,1|aiyqw0,38,41,0|auulnz,38,41,0|auulo0,39,43,1|b1otjz,39,43,1|b1otk0,38,41,0|bdkobz,38,41,0|bdkoc0,39,43,1|bkew7z,39,43,1|bkew80,38,41,0|bwaqzz,38,41,0|bwar00,39,43,1|c3hxjz,39,43,1|c3hxk0,38,41,0|fj0azz,38,41,0|fj0b00,38,41,1|fqtsbz,38,41,1|fqtsc0,38,41,0|jtudnz,38,41,0|jtudo0,39,43,1|jxsw7z,39,43,1|jxsw80,38,41,0|k8ytnz,38,41,0|k8yto0,39,43,1|kgiyvz,39,43,1|kgiyw0,38,41,0|NaN,38,41,0",
        "America/Argentina/Catamarca|,0,46,0|-138a95h,0,46,0|-138a95g,40,45,0|-px7ys1,40,45,0|-px7ys0,41,40,0|-kecq81,41,40,0|-kecq80,38,41,1|-k84qc1,38,41,1|-k84qc0,41,40,0|-jxzu81,41,40,0|-jxzu80,38,41,1|-jqwd01,38,41,1|-jqwd00,41,40,0|-jeakw1,41,40,0|-jeakw0,38,41,1|-j84fo1,38,41,1|-j84fo0,41,40,0|-ivink1,41,40,0|-ivink0,38,41,1|-ipcic1,38,41,1|-ipcic0,41,40,0|-icqq81,41,40,0|-icqq80,38,41,1|-i6kl01,38,41,1|-i6kl00,41,40,0|-htysw1,41,40,0|-htysw0,38,41,1|-hnqt01,38,41,1|-hnqt00,41,40,0|-hb50w1,41,40,0|-hb50w0,38,41,1|-h4yvo1,38,41,1|-h4yvo0,41,40,0|-gsd3k1,41,40,0|-gsd3k0,38,41,1|-gm6yc1,38,41,1|-gm6yc0,41,40,0|-g9l681,41,40,0|-g9l680,38,41,1|-g3f101,38,41,1|-g3f100,41,40,0|-fqt8w1,41,40,0|-fqt8w0,38,41,1|-fkl901,38,41,1|-fkl900,41,40,0|-feb8w1,41,40,0|-feb8w0,38,41,1|-ewd101,38,41,1|-ewd100,41,40,0|-eq30w1,41,40,0|-eq30w0,38,41,1|-dse501,38,41,1|-dse500,41,40,0|-doj681,41,40,0|-doj680,38,41,1|-cfvuc1,38,41,1|-cfvuc0,41,40,0|-c4vgw1,41,40,0|-c4vgw0,38,41,1|-39hec1,38,41,1|-39hec0,41,40,0|-35mfk1,41,40,0|-35mfk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2pxm81,41,40,0|-2pxm80,38,41,1|-2ivzo1,38,41,1|-2ivzo0,41,40,0|-275ow1,41,40,0|-275ow0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1odrk1,41,40,0|-1odrk0,38,41,1|-1fovo1,38,41,1|-1fovo0,41,40,0|-16brk1,41,40,0|-16brk0,38,41,1|-wluc1,38,41,1|-wluc0,41,40,0|-n8q81,41,40,0|-n8q80,38,41,1|-dvro1,38,41,1|-dvro0,41,40,0|-4ink1,41,40,0|-4ink0,38,41,0|24aizz,38,41,0|24aj00,39,43,1|29bxjz,39,43,1|29bxk0,38,41,0|9veobz,38,41,0|9veoc0,39,43,1|a08o7z,39,43,1|a08o80,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|aiyqvz,39,43,1|aiyqw0,38,41,0|auulnz,38,41,0|auulo0,39,43,1|b1otjz,39,43,1|b1otk0,41,40,0|bdkr3z,41,40,0|bdkr40,39,43,1|bkew7z,39,43,1|bkew80,38,41,0|bwaqzz,38,41,0|bwar00,39,43,1|c3hxjz,39,43,1|c3hxk0,38,41,0|fj0azz,38,41,0|fj0b00,38,41,1|fqtsbz,38,41,1|fqtsc0,38,41,0|hym0bz,38,41,0|hym0c0,41,40,0|hzl9rz,41,40,0|hzl9s0,38,41,0|jtudnz,38,41,0|jtudo0,39,43,1|jxsw7z,39,43,1|jxsw80,38,41,0|NaN,38,41,0",
        "America/Argentina/Cordoba|,0,45,0|-138a9g1,0,45,0|-138a9g0,40,45,0|-px7ys1,40,45,0|-px7ys0,41,40,0|-kecq81,41,40,0|-kecq80,38,41,1|-k84qc1,38,41,1|-k84qc0,41,40,0|-jxzu81,41,40,0|-jxzu80,38,41,1|-jqwd01,38,41,1|-jqwd00,41,40,0|-jeakw1,41,40,0|-jeakw0,38,41,1|-j84fo1,38,41,1|-j84fo0,41,40,0|-ivink1,41,40,0|-ivink0,38,41,1|-ipcic1,38,41,1|-ipcic0,41,40,0|-icqq81,41,40,0|-icqq80,38,41,1|-i6kl01,38,41,1|-i6kl00,41,40,0|-htysw1,41,40,0|-htysw0,38,41,1|-hnqt01,38,41,1|-hnqt00,41,40,0|-hb50w1,41,40,0|-hb50w0,38,41,1|-h4yvo1,38,41,1|-h4yvo0,41,40,0|-gsd3k1,41,40,0|-gsd3k0,38,41,1|-gm6yc1,38,41,1|-gm6yc0,41,40,0|-g9l681,41,40,0|-g9l680,38,41,1|-g3f101,38,41,1|-g3f100,41,40,0|-fqt8w1,41,40,0|-fqt8w0,38,41,1|-fkl901,38,41,1|-fkl900,41,40,0|-feb8w1,41,40,0|-feb8w0,38,41,1|-ewd101,38,41,1|-ewd100,41,40,0|-eq30w1,41,40,0|-eq30w0,38,41,1|-dse501,38,41,1|-dse500,41,40,0|-doj681,41,40,0|-doj680,38,41,1|-cfvuc1,38,41,1|-cfvuc0,41,40,0|-c4vgw1,41,40,0|-c4vgw0,38,41,1|-39hec1,38,41,1|-39hec0,41,40,0|-35mfk1,41,40,0|-35mfk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2pxm81,41,40,0|-2pxm80,38,41,1|-2ivzo1,38,41,1|-2ivzo0,41,40,0|-275ow1,41,40,0|-275ow0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1odrk1,41,40,0|-1odrk0,38,41,1|-1fovo1,38,41,1|-1fovo0,41,40,0|-16brk1,41,40,0|-16brk0,38,41,1|-wluc1,38,41,1|-wluc0,41,40,0|-n8q81,41,40,0|-n8q80,38,41,1|-dvro1,38,41,1|-dvro0,41,40,0|-4ink1,41,40,0|-4ink0,38,41,0|24aizz,38,41,0|24aj00,39,43,1|29bxjz,39,43,1|29bxk0,38,41,0|9veobz,38,41,0|9veoc0,39,43,1|a08o7z,39,43,1|a08o80,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|aiyqvz,39,43,1|aiyqw0,38,41,0|auulnz,38,41,0|auulo0,39,43,1|b1otjz,39,43,1|b1otk0,41,40,0|bdkr3z,41,40,0|bdkr40,39,43,1|bkew7z,39,43,1|bkew80,38,41,0|bwaqzz,38,41,0|bwar00,39,43,1|c3hxjz,39,43,1|c3hxk0,38,41,0|fj0azz,38,41,0|fj0b00,38,41,1|fqtsbz,38,41,1|fqtsc0,38,41,0|jtudnz,38,41,0|jtudo0,39,43,1|jxsw7z,39,43,1|jxsw80,38,41,0|k8ytnz,38,41,0|k8yto0,39,43,1|kgiyvz,39,43,1|kgiyw0,38,41,0|NaN,38,41,0",
        "America/Argentina/Jujuy|,0,47,0|-138a98p,0,47,0|-138a98o,40,45,0|-px7ys1,40,45,0|-px7ys0,41,40,0|-kecq81,41,40,0|-kecq80,38,41,1|-k84qc1,38,41,1|-k84qc0,41,40,0|-jxzu81,41,40,0|-jxzu80,38,41,1|-jqwd01,38,41,1|-jqwd00,41,40,0|-jeakw1,41,40,0|-jeakw0,38,41,1|-j84fo1,38,41,1|-j84fo0,41,40,0|-ivink1,41,40,0|-ivink0,38,41,1|-ipcic1,38,41,1|-ipcic0,41,40,0|-icqq81,41,40,0|-icqq80,38,41,1|-i6kl01,38,41,1|-i6kl00,41,40,0|-htysw1,41,40,0|-htysw0,38,41,1|-hnqt01,38,41,1|-hnqt00,41,40,0|-hb50w1,41,40,0|-hb50w0,38,41,1|-h4yvo1,38,41,1|-h4yvo0,41,40,0|-gsd3k1,41,40,0|-gsd3k0,38,41,1|-gm6yc1,38,41,1|-gm6yc0,41,40,0|-g9l681,41,40,0|-g9l680,38,41,1|-g3f101,38,41,1|-g3f100,41,40,0|-fqt8w1,41,40,0|-fqt8w0,38,41,1|-fkl901,38,41,1|-fkl900,41,40,0|-feb8w1,41,40,0|-feb8w0,38,41,1|-ewd101,38,41,1|-ewd100,41,40,0|-eq30w1,41,40,0|-eq30w0,38,41,1|-dse501,38,41,1|-dse500,41,40,0|-doj681,41,40,0|-doj680,38,41,1|-cfvuc1,38,41,1|-cfvuc0,41,40,0|-c4vgw1,41,40,0|-c4vgw0,38,41,1|-39hec1,38,41,1|-39hec0,41,40,0|-35mfk1,41,40,0|-35mfk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2pxm81,41,40,0|-2pxm80,38,41,1|-2ivzo1,38,41,1|-2ivzo0,41,40,0|-275ow1,41,40,0|-275ow0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1odrk1,41,40,0|-1odrk0,38,41,1|-1fovo1,38,41,1|-1fovo0,41,40,0|-16brk1,41,40,0|-16brk0,38,41,1|-wluc1,38,41,1|-wluc0,41,40,0|-n8q81,41,40,0|-n8q80,38,41,1|-dvro1,38,41,1|-dvro0,41,40,0|-4ink1,41,40,0|-4ink0,38,41,0|24aizz,38,41,0|24aj00,39,43,1|29bxjz,39,43,1|29bxk0,38,41,0|9veobz,38,41,0|9veoc0,39,43,1|a08o7z,39,43,1|a08o80,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|aiyqvz,39,43,1|aiyqw0,41,40,0|av7n3z,41,40,0|av7n40,38,41,1|b2etnz,38,41,1|b2eto0,41,40,0|bcutrz,41,40,0|bcuts0,39,43,1|bkew7z,39,43,1|bkew80,38,41,0|bwaqzz,38,41,0|bwar00,39,43,1|c3hxjz,39,43,1|c3hxk0,38,41,0|fj0azz,38,41,0|fj0b00,38,41,1|fqtsbz,38,41,1|fqtsc0,38,41,0|jtudnz,38,41,0|jtudo0,39,43,1|jxsw7z,39,43,1|jxsw80,38,41,0|NaN,38,41,0",
        "America/Argentina/La_Rioja|,0,48,0|-138a8yd,0,48,0|-138a8yc,40,45,0|-px7ys1,40,45,0|-px7ys0,41,40,0|-kecq81,41,40,0|-kecq80,38,41,1|-k84qc1,38,41,1|-k84qc0,41,40,0|-jxzu81,41,40,0|-jxzu80,38,41,1|-jqwd01,38,41,1|-jqwd00,41,40,0|-jeakw1,41,40,0|-jeakw0,38,41,1|-j84fo1,38,41,1|-j84fo0,41,40,0|-ivink1,41,40,0|-ivink0,38,41,1|-ipcic1,38,41,1|-ipcic0,41,40,0|-icqq81,41,40,0|-icqq80,38,41,1|-i6kl01,38,41,1|-i6kl00,41,40,0|-htysw1,41,40,0|-htysw0,38,41,1|-hnqt01,38,41,1|-hnqt00,41,40,0|-hb50w1,41,40,0|-hb50w0,38,41,1|-h4yvo1,38,41,1|-h4yvo0,41,40,0|-gsd3k1,41,40,0|-gsd3k0,38,41,1|-gm6yc1,38,41,1|-gm6yc0,41,40,0|-g9l681,41,40,0|-g9l680,38,41,1|-g3f101,38,41,1|-g3f100,41,40,0|-fqt8w1,41,40,0|-fqt8w0,38,41,1|-fkl901,38,41,1|-fkl900,41,40,0|-feb8w1,41,40,0|-feb8w0,38,41,1|-ewd101,38,41,1|-ewd100,41,40,0|-eq30w1,41,40,0|-eq30w0,38,41,1|-dse501,38,41,1|-dse500,41,40,0|-doj681,41,40,0|-doj680,38,41,1|-cfvuc1,38,41,1|-cfvuc0,41,40,0|-c4vgw1,41,40,0|-c4vgw0,38,41,1|-39hec1,38,41,1|-39hec0,41,40,0|-35mfk1,41,40,0|-35mfk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2pxm81,41,40,0|-2pxm80,38,41,1|-2ivzo1,38,41,1|-2ivzo0,41,40,0|-275ow1,41,40,0|-275ow0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1odrk1,41,40,0|-1odrk0,38,41,1|-1fovo1,38,41,1|-1fovo0,41,40,0|-16brk1,41,40,0|-16brk0,38,41,1|-wluc1,38,41,1|-wluc0,41,40,0|-n8q81,41,40,0|-n8q80,38,41,1|-dvro1,38,41,1|-dvro0,41,40,0|-4ink1,41,40,0|-4ink0,38,41,0|24aizz,38,41,0|24aj00,39,43,1|29bxjz,39,43,1|29bxk0,38,41,0|9veobz,38,41,0|9veoc0,39,43,1|a08o7z,39,43,1|a08o80,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|aiyqvz,39,43,1|aiyqw0,38,41,0|auulnz,38,41,0|auulo0,39,43,1|b1l47z,39,43,1|b1l480,41,40,0|b51cfz,41,40,0|b51cg0,38,41,0|bdkobz,38,41,0|bdkoc0,39,43,1|bkew7z,39,43,1|bkew80,38,41,0|bwaqzz,38,41,0|bwar00,39,43,1|c3hxjz,39,43,1|c3hxk0,38,41,0|fj0azz,38,41,0|fj0b00,38,41,1|fqtsbz,38,41,1|fqtsc0,38,41,0|hym0bz,38,41,0|hym0c0,41,40,0|hzl9rz,41,40,0|hzl9s0,38,41,0|jtudnz,38,41,0|jtudo0,39,43,1|jxsw7z,39,43,1|jxsw80,38,41,0|NaN,38,41,0",
        "America/Argentina/Mendoza|,0,49,0|-138a8l9,0,49,0|-138a8l8,40,45,0|-px7ys1,40,45,0|-px7ys0,41,40,0|-kecq81,41,40,0|-kecq80,38,41,1|-k84qc1,38,41,1|-k84qc0,41,40,0|-jxzu81,41,40,0|-jxzu80,38,41,1|-jqwd01,38,41,1|-jqwd00,41,40,0|-jeakw1,41,40,0|-jeakw0,38,41,1|-j84fo1,38,41,1|-j84fo0,41,40,0|-ivink1,41,40,0|-ivink0,38,41,1|-ipcic1,38,41,1|-ipcic0,41,40,0|-icqq81,41,40,0|-icqq80,38,41,1|-i6kl01,38,41,1|-i6kl00,41,40,0|-htysw1,41,40,0|-htysw0,38,41,1|-hnqt01,38,41,1|-hnqt00,41,40,0|-hb50w1,41,40,0|-hb50w0,38,41,1|-h4yvo1,38,41,1|-h4yvo0,41,40,0|-gsd3k1,41,40,0|-gsd3k0,38,41,1|-gm6yc1,38,41,1|-gm6yc0,41,40,0|-g9l681,41,40,0|-g9l680,38,41,1|-g3f101,38,41,1|-g3f100,41,40,0|-fqt8w1,41,40,0|-fqt8w0,38,41,1|-fkl901,38,41,1|-fkl900,41,40,0|-feb8w1,41,40,0|-feb8w0,38,41,1|-ewd101,38,41,1|-ewd100,41,40,0|-eq30w1,41,40,0|-eq30w0,38,41,1|-dse501,38,41,1|-dse500,41,40,0|-doj681,41,40,0|-doj680,38,41,1|-cfvuc1,38,41,1|-cfvuc0,41,40,0|-c4vgw1,41,40,0|-c4vgw0,38,41,1|-39hec1,38,41,1|-39hec0,41,40,0|-35mfk1,41,40,0|-35mfk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2pxm81,41,40,0|-2pxm80,38,41,1|-2ivzo1,38,41,1|-2ivzo0,41,40,0|-275ow1,41,40,0|-275ow0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1odrk1,41,40,0|-1odrk0,38,41,1|-1fovo1,38,41,1|-1fovo0,41,40,0|-16brk1,41,40,0|-16brk0,38,41,1|-wluc1,38,41,1|-wluc0,41,40,0|-n8q81,41,40,0|-n8q80,38,41,1|-dvro1,38,41,1|-dvro0,41,40,0|-4ink1,41,40,0|-4ink0,38,41,0|24aizz,38,41,0|24aj00,39,43,1|29bxjz,39,43,1|29bxk0,38,41,0|9veobz,38,41,0|9veoc0,39,43,1|a08o7z,39,43,1|a08o80,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|aiyqvz,39,43,1|aiyqw0,41,40,0|aujkfz,41,40,0|aujkg0,38,41,1|b1l6zz,38,41,1|b1l700,41,40,0|bdbhrz,41,40,0|bdbhs0,38,41,1|bkeyzz,38,41,1|bkez00,41,40,0|bwatrz,41,40,0|bwats0,39,43,1|c3hxjz,39,43,1|c3hxk0,38,41,0|fj0azz,38,41,0|fj0b00,38,41,1|fqtsbz,38,41,1|fqtsc0,38,41,0|hy5cbz,38,41,0|hy5cc0,41,40,0|i4mr3z,41,40,0|i4mr40,38,41,0|jtudnz,38,41,0|jtudo0,39,43,1|jxsw7z,39,43,1|jxsw80,38,41,0|NaN,38,41,0",
        "America/Argentina/Rio_Gallegos|,0,50,0|-138a8il,0,50,0|-138a8ik,40,45,0|-px7ys1,40,45,0|-px7ys0,41,40,0|-kecq81,41,40,0|-kecq80,38,41,1|-k84qc1,38,41,1|-k84qc0,41,40,0|-jxzu81,41,40,0|-jxzu80,38,41,1|-jqwd01,38,41,1|-jqwd00,41,40,0|-jeakw1,41,40,0|-jeakw0,38,41,1|-j84fo1,38,41,1|-j84fo0,41,40,0|-ivink1,41,40,0|-ivink0,38,41,1|-ipcic1,38,41,1|-ipcic0,41,40,0|-icqq81,41,40,0|-icqq80,38,41,1|-i6kl01,38,41,1|-i6kl00,41,40,0|-htysw1,41,40,0|-htysw0,38,41,1|-hnqt01,38,41,1|-hnqt00,41,40,0|-hb50w1,41,40,0|-hb50w0,38,41,1|-h4yvo1,38,41,1|-h4yvo0,41,40,0|-gsd3k1,41,40,0|-gsd3k0,38,41,1|-gm6yc1,38,41,1|-gm6yc0,41,40,0|-g9l681,41,40,0|-g9l680,38,41,1|-g3f101,38,41,1|-g3f100,41,40,0|-fqt8w1,41,40,0|-fqt8w0,38,41,1|-fkl901,38,41,1|-fkl900,41,40,0|-feb8w1,41,40,0|-feb8w0,38,41,1|-ewd101,38,41,1|-ewd100,41,40,0|-eq30w1,41,40,0|-eq30w0,38,41,1|-dse501,38,41,1|-dse500,41,40,0|-doj681,41,40,0|-doj680,38,41,1|-cfvuc1,38,41,1|-cfvuc0,41,40,0|-c4vgw1,41,40,0|-c4vgw0,38,41,1|-39hec1,38,41,1|-39hec0,41,40,0|-35mfk1,41,40,0|-35mfk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2pxm81,41,40,0|-2pxm80,38,41,1|-2ivzo1,38,41,1|-2ivzo0,41,40,0|-275ow1,41,40,0|-275ow0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1odrk1,41,40,0|-1odrk0,38,41,1|-1fovo1,38,41,1|-1fovo0,41,40,0|-16brk1,41,40,0|-16brk0,38,41,1|-wluc1,38,41,1|-wluc0,41,40,0|-n8q81,41,40,0|-n8q80,38,41,1|-dvro1,38,41,1|-dvro0,41,40,0|-4ink1,41,40,0|-4ink0,38,41,0|24aizz,38,41,0|24aj00,39,43,1|29bxjz,39,43,1|29bxk0,38,41,0|9veobz,38,41,0|9veoc0,39,43,1|a08o7z,39,43,1|a08o80,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|aiyqvz,39,43,1|aiyqw0,38,41,0|auulnz,38,41,0|auulo0,39,43,1|b1otjz,39,43,1|b1otk0,38,41,0|bdkobz,38,41,0|bdkoc0,39,43,1|bkew7z,39,43,1|bkew80,38,41,0|bwaqzz,38,41,0|bwar00,39,43,1|c3hxjz,39,43,1|c3hxk0,38,41,0|fj0azz,38,41,0|fj0b00,38,41,1|fqtsbz,38,41,1|fqtsc0,38,41,0|hym0bz,38,41,0|hym0c0,41,40,0|hzl9rz,41,40,0|hzl9s0,38,41,0|jtudnz,38,41,0|jtudo0,39,43,1|jxsw7z,39,43,1|jxsw80,38,41,0|NaN,38,41,0",
        "America/Argentina/Salta|,0,51,0|-138a97x,0,51,0|-138a97w,40,45,0|-px7ys1,40,45,0|-px7ys0,41,40,0|-kecq81,41,40,0|-kecq80,38,41,1|-k84qc1,38,41,1|-k84qc0,41,40,0|-jxzu81,41,40,0|-jxzu80,38,41,1|-jqwd01,38,41,1|-jqwd00,41,40,0|-jeakw1,41,40,0|-jeakw0,38,41,1|-j84fo1,38,41,1|-j84fo0,41,40,0|-ivink1,41,40,0|-ivink0,38,41,1|-ipcic1,38,41,1|-ipcic0,41,40,0|-icqq81,41,40,0|-icqq80,38,41,1|-i6kl01,38,41,1|-i6kl00,41,40,0|-htysw1,41,40,0|-htysw0,38,41,1|-hnqt01,38,41,1|-hnqt00,41,40,0|-hb50w1,41,40,0|-hb50w0,38,41,1|-h4yvo1,38,41,1|-h4yvo0,41,40,0|-gsd3k1,41,40,0|-gsd3k0,38,41,1|-gm6yc1,38,41,1|-gm6yc0,41,40,0|-g9l681,41,40,0|-g9l680,38,41,1|-g3f101,38,41,1|-g3f100,41,40,0|-fqt8w1,41,40,0|-fqt8w0,38,41,1|-fkl901,38,41,1|-fkl900,41,40,0|-feb8w1,41,40,0|-feb8w0,38,41,1|-ewd101,38,41,1|-ewd100,41,40,0|-eq30w1,41,40,0|-eq30w0,38,41,1|-dse501,38,41,1|-dse500,41,40,0|-doj681,41,40,0|-doj680,38,41,1|-cfvuc1,38,41,1|-cfvuc0,41,40,0|-c4vgw1,41,40,0|-c4vgw0,38,41,1|-39hec1,38,41,1|-39hec0,41,40,0|-35mfk1,41,40,0|-35mfk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2pxm81,41,40,0|-2pxm80,38,41,1|-2ivzo1,38,41,1|-2ivzo0,41,40,0|-275ow1,41,40,0|-275ow0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1odrk1,41,40,0|-1odrk0,38,41,1|-1fovo1,38,41,1|-1fovo0,41,40,0|-16brk1,41,40,0|-16brk0,38,41,1|-wluc1,38,41,1|-wluc0,41,40,0|-n8q81,41,40,0|-n8q80,38,41,1|-dvro1,38,41,1|-dvro0,41,40,0|-4ink1,41,40,0|-4ink0,38,41,0|24aizz,38,41,0|24aj00,39,43,1|29bxjz,39,43,1|29bxk0,38,41,0|9veobz,38,41,0|9veoc0,39,43,1|a08o7z,39,43,1|a08o80,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|aiyqvz,39,43,1|aiyqw0,38,41,0|auulnz,38,41,0|auulo0,39,43,1|b1otjz,39,43,1|b1otk0,41,40,0|bdkr3z,41,40,0|bdkr40,39,43,1|bkew7z,39,43,1|bkew80,38,41,0|bwaqzz,38,41,0|bwar00,39,43,1|c3hxjz,39,43,1|c3hxk0,38,41,0|fj0azz,38,41,0|fj0b00,38,41,1|fqtsbz,38,41,1|fqtsc0,38,41,0|jtudnz,38,41,0|jtudo0,39,43,1|jxsw7z,39,43,1|jxsw80,38,41,0|NaN,38,41,0",
        "America/Argentina/San_Juan|,0,52,0|-138a8n9,0,52,0|-138a8n8,40,45,0|-px7ys1,40,45,0|-px7ys0,41,40,0|-kecq81,41,40,0|-kecq80,38,41,1|-k84qc1,38,41,1|-k84qc0,41,40,0|-jxzu81,41,40,0|-jxzu80,38,41,1|-jqwd01,38,41,1|-jqwd00,41,40,0|-jeakw1,41,40,0|-jeakw0,38,41,1|-j84fo1,38,41,1|-j84fo0,41,40,0|-ivink1,41,40,0|-ivink0,38,41,1|-ipcic1,38,41,1|-ipcic0,41,40,0|-icqq81,41,40,0|-icqq80,38,41,1|-i6kl01,38,41,1|-i6kl00,41,40,0|-htysw1,41,40,0|-htysw0,38,41,1|-hnqt01,38,41,1|-hnqt00,41,40,0|-hb50w1,41,40,0|-hb50w0,38,41,1|-h4yvo1,38,41,1|-h4yvo0,41,40,0|-gsd3k1,41,40,0|-gsd3k0,38,41,1|-gm6yc1,38,41,1|-gm6yc0,41,40,0|-g9l681,41,40,0|-g9l680,38,41,1|-g3f101,38,41,1|-g3f100,41,40,0|-fqt8w1,41,40,0|-fqt8w0,38,41,1|-fkl901,38,41,1|-fkl900,41,40,0|-feb8w1,41,40,0|-feb8w0,38,41,1|-ewd101,38,41,1|-ewd100,41,40,0|-eq30w1,41,40,0|-eq30w0,38,41,1|-dse501,38,41,1|-dse500,41,40,0|-doj681,41,40,0|-doj680,38,41,1|-cfvuc1,38,41,1|-cfvuc0,41,40,0|-c4vgw1,41,40,0|-c4vgw0,38,41,1|-39hec1,38,41,1|-39hec0,41,40,0|-35mfk1,41,40,0|-35mfk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2pxm81,41,40,0|-2pxm80,38,41,1|-2ivzo1,38,41,1|-2ivzo0,41,40,0|-275ow1,41,40,0|-275ow0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1odrk1,41,40,0|-1odrk0,38,41,1|-1fovo1,38,41,1|-1fovo0,41,40,0|-16brk1,41,40,0|-16brk0,38,41,1|-wluc1,38,41,1|-wluc0,41,40,0|-n8q81,41,40,0|-n8q80,38,41,1|-dvro1,38,41,1|-dvro0,41,40,0|-4ink1,41,40,0|-4ink0,38,41,0|24aizz,38,41,0|24aj00,39,43,1|29bxjz,39,43,1|29bxk0,38,41,0|9veobz,38,41,0|9veoc0,39,43,1|a08o7z,39,43,1|a08o80,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|aiyqvz,39,43,1|aiyqw0,38,41,0|auulnz,38,41,0|auulo0,39,43,1|b1l47z,39,43,1|b1l480,41,40,0|b51cfz,41,40,0|b51cg0,38,41,0|bdkobz,38,41,0|bdkoc0,39,43,1|bkew7z,39,43,1|bkew80,38,41,0|bwaqzz,38,41,0|bwar00,39,43,1|c3hxjz,39,43,1|c3hxk0,38,41,0|fj0azz,38,41,0|fj0b00,38,41,1|fqtsbz,38,41,1|fqtsc0,38,41,0|hyk5nz,38,41,0|hyk5o0,41,40,0|i1e33z,41,40,0|i1e340,38,41,0|jtudnz,38,41,0|jtudo0,39,43,1|jxsw7z,39,43,1|jxsw80,38,41,0|NaN,38,41,0",
        "America/Argentina/San_Luis|,0,53,0|-138a91p,0,53,0|-138a91o,40,45,0|-px7ys1,40,45,0|-px7ys0,41,40,0|-kecq81,41,40,0|-kecq80,38,41,1|-k84qc1,38,41,1|-k84qc0,41,40,0|-jxzu81,41,40,0|-jxzu80,38,41,1|-jqwd01,38,41,1|-jqwd00,41,40,0|-jeakw1,41,40,0|-jeakw0,38,41,1|-j84fo1,38,41,1|-j84fo0,41,40,0|-ivink1,41,40,0|-ivink0,38,41,1|-ipcic1,38,41,1|-ipcic0,41,40,0|-icqq81,41,40,0|-icqq80,38,41,1|-i6kl01,38,41,1|-i6kl00,41,40,0|-htysw1,41,40,0|-htysw0,38,41,1|-hnqt01,38,41,1|-hnqt00,41,40,0|-hb50w1,41,40,0|-hb50w0,38,41,1|-h4yvo1,38,41,1|-h4yvo0,41,40,0|-gsd3k1,41,40,0|-gsd3k0,38,41,1|-gm6yc1,38,41,1|-gm6yc0,41,40,0|-g9l681,41,40,0|-g9l680,38,41,1|-g3f101,38,41,1|-g3f100,41,40,0|-fqt8w1,41,40,0|-fqt8w0,38,41,1|-fkl901,38,41,1|-fkl900,41,40,0|-feb8w1,41,40,0|-feb8w0,38,41,1|-ewd101,38,41,1|-ewd100,41,40,0|-eq30w1,41,40,0|-eq30w0,38,41,1|-dse501,38,41,1|-dse500,41,40,0|-doj681,41,40,0|-doj680,38,41,1|-cfvuc1,38,41,1|-cfvuc0,41,40,0|-c4vgw1,41,40,0|-c4vgw0,38,41,1|-39hec1,38,41,1|-39hec0,41,40,0|-35mfk1,41,40,0|-35mfk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2pxm81,41,40,0|-2pxm80,38,41,1|-2ivzo1,38,41,1|-2ivzo0,41,40,0|-275ow1,41,40,0|-275ow0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1odrk1,41,40,0|-1odrk0,38,41,1|-1fovo1,38,41,1|-1fovo0,41,40,0|-16brk1,41,40,0|-16brk0,38,41,1|-wluc1,38,41,1|-wluc0,41,40,0|-n8q81,41,40,0|-n8q80,38,41,1|-dvro1,38,41,1|-dvro0,41,40,0|-4ink1,41,40,0|-4ink0,38,41,0|24aizz,38,41,0|24aj00,39,43,1|29bxjz,39,43,1|29bxk0,38,41,0|9veobz,38,41,0|9veoc0,39,43,1|a08o7z,39,43,1|a08o80,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|ajh9jz,39,43,1|ajh9k0,41,40,0|aujkfz,41,40,0|aujkg0,38,41,1|b1l6zz,38,41,1|b1l700,41,40,0|b6bn3z,41,40,0|b6bn40,38,41,0|fj0azz,38,41,0|fj0b00,38,41,1|fqtsbz,38,41,1|fqtsc0,38,41,0|hyk5nz,38,41,0|hyk5o0,41,40,0|i1e33z,41,40,0|i1e340,38,41,0|jtudnz,38,41,0|jtudo0,39,43,1|juz1jz,39,43,1|juz1k0,38,41,1|jxg0bz,38,41,1|jxg0c0,41,40,0|k8lxrz,41,40,0|k8lxs0,38,41,1|kg62zz,38,41,1|kg6300,41,40,0|krc0fz,41,40,0|krc0g0,38,41,0|NaN,38,41,0",
        "America/Argentina/Tucuman|,0,54,0|-138a999,0,54,0|-138a998,40,45,0|-px7ys1,40,45,0|-px7ys0,41,40,0|-kecq81,41,40,0|-kecq80,38,41,1|-k84qc1,38,41,1|-k84qc0,41,40,0|-jxzu81,41,40,0|-jxzu80,38,41,1|-jqwd01,38,41,1|-jqwd00,41,40,0|-jeakw1,41,40,0|-jeakw0,38,41,1|-j84fo1,38,41,1|-j84fo0,41,40,0|-ivink1,41,40,0|-ivink0,38,41,1|-ipcic1,38,41,1|-ipcic0,41,40,0|-icqq81,41,40,0|-icqq80,38,41,1|-i6kl01,38,41,1|-i6kl00,41,40,0|-htysw1,41,40,0|-htysw0,38,41,1|-hnqt01,38,41,1|-hnqt00,41,40,0|-hb50w1,41,40,0|-hb50w0,38,41,1|-h4yvo1,38,41,1|-h4yvo0,41,40,0|-gsd3k1,41,40,0|-gsd3k0,38,41,1|-gm6yc1,38,41,1|-gm6yc0,41,40,0|-g9l681,41,40,0|-g9l680,38,41,1|-g3f101,38,41,1|-g3f100,41,40,0|-fqt8w1,41,40,0|-fqt8w0,38,41,1|-fkl901,38,41,1|-fkl900,41,40,0|-feb8w1,41,40,0|-feb8w0,38,41,1|-ewd101,38,41,1|-ewd100,41,40,0|-eq30w1,41,40,0|-eq30w0,38,41,1|-dse501,38,41,1|-dse500,41,40,0|-doj681,41,40,0|-doj680,38,41,1|-cfvuc1,38,41,1|-cfvuc0,41,40,0|-c4vgw1,41,40,0|-c4vgw0,38,41,1|-39hec1,38,41,1|-39hec0,41,40,0|-35mfk1,41,40,0|-35mfk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2pxm81,41,40,0|-2pxm80,38,41,1|-2ivzo1,38,41,1|-2ivzo0,41,40,0|-275ow1,41,40,0|-275ow0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1odrk1,41,40,0|-1odrk0,38,41,1|-1fovo1,38,41,1|-1fovo0,41,40,0|-16brk1,41,40,0|-16brk0,38,41,1|-wluc1,38,41,1|-wluc0,41,40,0|-n8q81,41,40,0|-n8q80,38,41,1|-dvro1,38,41,1|-dvro0,41,40,0|-4ink1,41,40,0|-4ink0,38,41,0|24aizz,38,41,0|24aj00,39,43,1|29bxjz,39,43,1|29bxk0,38,41,0|9veobz,38,41,0|9veoc0,39,43,1|a08o7z,39,43,1|a08o80,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|aiyqvz,39,43,1|aiyqw0,38,41,0|auulnz,38,41,0|auulo0,39,43,1|b1otjz,39,43,1|b1otk0,41,40,0|bdkr3z,41,40,0|bdkr40,39,43,1|bkew7z,39,43,1|bkew80,38,41,0|bwaqzz,38,41,0|bwar00,39,43,1|c3hxjz,39,43,1|c3hxk0,38,41,0|fj0azz,38,41,0|fj0b00,38,41,1|fqtsbz,38,41,1|fqtsc0,38,41,0|hym0bz,38,41,0|hym0c0,41,40,0|hz8b3z,41,40,0|hz8b40,38,41,0|jtudnz,38,41,0|jtudo0,39,43,1|jxsw7z,39,43,1|jxsw80,38,41,0|k8ytnz,38,41,0|k8yto0,39,43,1|kgiyvz,39,43,1|kgiyw0,38,41,0|NaN,38,41,0",
        "America/Argentina/Ushuaia|,0,55,0|-138a8op,0,55,0|-138a8oo,40,45,0|-px7ys1,40,45,0|-px7ys0,41,40,0|-kecq81,41,40,0|-kecq80,38,41,1|-k84qc1,38,41,1|-k84qc0,41,40,0|-jxzu81,41,40,0|-jxzu80,38,41,1|-jqwd01,38,41,1|-jqwd00,41,40,0|-jeakw1,41,40,0|-jeakw0,38,41,1|-j84fo1,38,41,1|-j84fo0,41,40,0|-ivink1,41,40,0|-ivink0,38,41,1|-ipcic1,38,41,1|-ipcic0,41,40,0|-icqq81,41,40,0|-icqq80,38,41,1|-i6kl01,38,41,1|-i6kl00,41,40,0|-htysw1,41,40,0|-htysw0,38,41,1|-hnqt01,38,41,1|-hnqt00,41,40,0|-hb50w1,41,40,0|-hb50w0,38,41,1|-h4yvo1,38,41,1|-h4yvo0,41,40,0|-gsd3k1,41,40,0|-gsd3k0,38,41,1|-gm6yc1,38,41,1|-gm6yc0,41,40,0|-g9l681,41,40,0|-g9l680,38,41,1|-g3f101,38,41,1|-g3f100,41,40,0|-fqt8w1,41,40,0|-fqt8w0,38,41,1|-fkl901,38,41,1|-fkl900,41,40,0|-feb8w1,41,40,0|-feb8w0,38,41,1|-ewd101,38,41,1|-ewd100,41,40,0|-eq30w1,41,40,0|-eq30w0,38,41,1|-dse501,38,41,1|-dse500,41,40,0|-doj681,41,40,0|-doj680,38,41,1|-cfvuc1,38,41,1|-cfvuc0,41,40,0|-c4vgw1,41,40,0|-c4vgw0,38,41,1|-39hec1,38,41,1|-39hec0,41,40,0|-35mfk1,41,40,0|-35mfk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2pxm81,41,40,0|-2pxm80,38,41,1|-2ivzo1,38,41,1|-2ivzo0,41,40,0|-275ow1,41,40,0|-275ow0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1odrk1,41,40,0|-1odrk0,38,41,1|-1fovo1,38,41,1|-1fovo0,41,40,0|-16brk1,41,40,0|-16brk0,38,41,1|-wluc1,38,41,1|-wluc0,41,40,0|-n8q81,41,40,0|-n8q80,38,41,1|-dvro1,38,41,1|-dvro0,41,40,0|-4ink1,41,40,0|-4ink0,38,41,0|24aizz,38,41,0|24aj00,39,43,1|29bxjz,39,43,1|29bxk0,38,41,0|9veobz,38,41,0|9veoc0,39,43,1|a08o7z,39,43,1|a08o80,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|aiyqvz,39,43,1|aiyqw0,38,41,0|auulnz,38,41,0|auulo0,39,43,1|b1otjz,39,43,1|b1otk0,38,41,0|bdkobz,38,41,0|bdkoc0,39,43,1|bkew7z,39,43,1|bkew80,38,41,0|bwaqzz,38,41,0|bwar00,39,43,1|c3hxjz,39,43,1|c3hxk0,38,41,0|fj0azz,38,41,0|fj0b00,38,41,1|fqtsbz,38,41,1|fqtsc0,38,41,0|hyiazz,38,41,0|hyib00,41,40,0|hzl9rz,41,40,0|hzl9s0,38,41,0|jtudnz,38,41,0|jtudo0,39,43,1|jxsw7z,39,43,1|jxsw80,38,41,0|NaN,38,41,0",
        "America/Aruba|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Asuncion|,0,56,0|-15r0ynl,0,56,0|-15r0ynk,42,56,0|-jy93zl,42,56,0|-jy93zk,41,40,0|1fnkfz,41,40,0|1fnkg0,38,41,0|27sgbz,38,41,0|27sgc0,41,40,0|2zzcfz,41,40,0|2zzcg0,38,41,1|37sqzz,38,41,1|37sr00,41,40,0|3it4fz,41,40,0|3it4g0,38,41,1|3qkobz,38,41,1|3qkoc0,41,40,0|41l1rz,41,40,0|41l1s0,38,41,1|49clnz,38,41,1|49clo0,41,40,0|4kcz3z,41,40,0|4kcz40,38,41,1|4tpxnz,38,41,1|4tpxo0,41,40,0|534wfz,41,40,0|534wg0,38,41,1|5cjpnz,38,41,1|5cjpo0,41,40,0|5lyofz,41,40,0|5lyog0,38,41,1|5vbmzz,38,41,1|5vbn00,41,40,0|64qlrz,41,40,0|64qls0,38,41,1|6e3kbz,38,41,1|6e3kc0,41,40,0|6nij3z,41,40,0|6nij40,38,41,1|6wvhnz,38,41,1|6wvho0,41,40,0|76agfz,41,40,0|76agg0,38,41,1|7fp9nz,38,41,1|7fp9o0,41,40,0|7p48fz,41,40,0|7p48g0,38,41,1|7yh6zz,38,41,1|7yh700,41,40,0|87w5rz,41,40,0|87w5s0,38,41,1|8h94bz,38,41,1|8h94c0,41,40,0|8qo33z,41,40,0|8qo340,38,41,1|9011nz,38,41,1|9011o0,41,40,0|99g0fz,41,40,0|99g0g0,38,41,1|9iutnz,38,41,1|9iuto0,41,40,0|9s9sfz,41,40,0|9s9sg0,38,41,1|a1mqzz,38,41,1|a1mr00,41,40,0|ac4lrz,41,40,0|ac4ls0,38,41,1|akeobz,38,41,1|akeoc0,41,40,0|attn3z,41,40,0|attn40,38,41,1|b36lnz,38,41,1|b36lo0,41,40,0|bcutrz,41,40,0|bcuts0,38,41,1|bkeyzz,38,41,1|bkez00,41,40,0|bvmr3z,41,40,0|bvmr40,38,41,1|c4qgbz,38,41,1|c4qgc0,41,40,0|ce79rz,41,40,0|ce79s0,38,41,1|clv4bz,38,41,1|clv4c0,41,40,0|cwz73z,41,40,0|cwz740,38,41,1|d4l6zz,38,41,1|d4l700,41,40,0|dfr4fz,41,40,0|dfr4g0,38,41,1|dnkizz,38,41,1|dnkj00,41,40,0|dyu5rz,41,40,0|dyu5s0,38,41,1|e61cbz,38,41,1|e61cc0,41,40,0|ehk8fz,41,40,0|ehk8g0,38,41,1|ep4dnz,38,41,1|ep4do0,41,40,0|f0ab3z,41,40,0|f0ab40,38,41,1|f87ezz,38,41,1|f87f00,41,40,0|fj0drz,41,40,0|fj0ds0,38,41,1|fqxhnz,38,41,1|fqxho0,41,40,0|g1qgfz,41,40,0|g1qgg0,38,41,1|g9nkbz,38,41,1|g9nkc0,41,40,0|gkthrz,41,40,0|gkths0,38,41,1|gu6gbz,38,41,1|gu6gc0,41,40,0|h1qr3z,41,40,0|h1qr40,38,41,1|hcwizz,38,41,1|hcwj00,41,40,0|hktsfz,41,40,0|hktsg0,38,41,1|hvmlnz,38,41,1|hvmlo0,41,40,0|i5pn3z,41,40,0|i5pn40,38,41,1|id9sbz,38,41,1|id9sc0,41,40,0|iofprz,41,40,0|iofps0,38,41,1|ivzuzz,38,41,1|ivzv00,41,40,0|j75sfz,41,40,0|j75sg0,38,41,1|jepxnz,38,41,1|jepxo0,41,40,0|jq8trz,41,40,0|jq8ts0,38,41,1|jxg0bz,38,41,1|jxg0c0,41,40,0|k8ywfz,41,40,0|k8ywg0,38,41,1|kg62zz,38,41,1|kg6300,41,40,0|kroz3z,41,40,0|kroz40,38,41,1|l0oyzz,38,41,1|l0oz00,41,40,0|l9p4fz,41,40,0|l9p4g0,38,41,1|ljf1nz,38,41,1|ljf1o0,41,40,0|lsf73z,41,40,0|lsf740,38,41,1|m254bz,38,41,1|m254c0,41,40,0|mbi8fz,41,40,0|mbi8g0,38,41,1|mk59nz,38,41,1|mk59o0,41,40,0|mu8b3z,41,40,0|mu8b40,38,41,1|n2vcbz,38,41,1|n2vcc0,41,40,0|ncydrz,41,40,0|ncyds0,38,41,1|nllezz,38,41,1|nllf00,41,40,0|nvogfz,41,40,0|nvogg0,38,41,1|o4ogbz,38,41,1|o4ogc0,41,40,0|oeej3z,41,40,0|oeej40,38,41,1|oneizz,38,41,1|onej00,41,40,0|ox4lrz,41,40,0|ox4ls0,38,41,1|p64lnz,38,41,1|p64lo0,41,40,0|pg7n3z,41,40,0|pg7n40,38,41,1|pouobz,38,41,1|pouoc0,41,40,0|pyxprz,41,40,0|pyxps0,38,41,1|q7kqzz,38,41,1|q7kr00,41,40,0|qhnsfz,41,40,0|qhnsg0,38,41,1|qqnsbz,38,41,1|qqnsc0,41,40,0|r0dv3z,41,40,0|r0dv40,38,41,1|r9duzz,38,41,1|r9dv00,41,40,0|rj3xrz,41,40,0|rj3xs0,38,41,1|rs3xnz,38,41,1|rs3xo0,41,40,0|s1u0fz,41,40,0|s1u0g0,38,41,1|sau0bz,38,41,1|sau0c0,41,40,0|skx1rz,41,40,0|skx1s0,38,41,1|stk2zz,38,41,1|stk300,41,40,0|t3n4fz,41,40,0|t3n4g0,38,41,1|tca5nz,38,41,1|tca5o0,41,40,0|tmd73z,41,40,0|tmd740,38,41,1|tvd6zz,38,41,1|tvd700,41,40,0|u539rz,41,40,0|u539s0,38,41,1|ue39nz,38,41,1|ue39o0,41,40,0|untcfz,41,40,0|untcg0,38,41,1|uwtcbz,38,41,1|uwtcc0,41,40,0|v6wdrz,41,40,0|v6wds0,38,41,1|vfjezz,38,41,1|vfjf00,41,40,0|vpmgfz,41,40,0|vpmgg0,38,41,1|vy9hnz,38,41,1|vy9ho0,41,40,0|w8cj3z,41,40,0|w8cj40,38,41,1|whcizz,38,41,1|whcj00,41,40,0|wr2lrz,41,40,0|wr2ls0,38,41,1|x02lnz,38,41,1|x02lo0,41,40,0|x9sofz,41,40,0|x9sog0,38,41,1|xisobz,38,41,1|xisoc0,41,40,0|xsir3z,41,40,0|xsir40,38,41,1|y1iqzz,38,41,1|y1ir00,41,40,0|yblsfz,41,40,0|yblsg0,38,41,1|yk8tnz,38,41,1|yk8to0,41,40,0|yubv3z,41,40,0|yubv40,38,41,1|z2ywbz,38,41,1|z2ywc0,41,40,0|zd1xrz,41,40,0|zd1xs0,38,41,1|zm1xnz,38,41,1|zm1xo0,41,40,0|zvs0fz,41,40,0|zvs0g0,38,41,1|104s0bz,38,41,1|104s0c0,41,40,0|10ei33z,41,40,0|10ei340,38,41,1|10ni2zz,38,41,1|10ni300,41,40,0|10xl4fz,41,40,0|10xl4g0,38,41,1|11685nz,38,41,1|11685o0,41,40,0|11gb73z,41,40,0|11gb740,38,41,1|11oy8bz,38,41,1|11oy8c0,41,40,0|11z19rz,41,40,0|11z19s0,38,41,1|127oazz,38,41,1|127ob00,41,40,0|12hrcfz,41,40,0|12hrcg0,38,41,1|12qrcbz,38,41,1|12qrcc0,41,40,0|130hf3z,41,40,0|130hf40,38,41,1|139hezz,38,41,1|139hf00,41,40,0|13j7hrz,41,40,0|13j7hs0,38,41,1|13s7hnz,38,41,1|13s7ho0,41,40,0|142aj3z,41,40,0|142aj40,38,41,1|14axkbz,38,41,1|14axkc0,41,40,0|14l0lrz,41,40,0|14l0ls0,38,41,1|14tnmzz,38,41,1|14tnn00,41,40,0|153qofz,41,40,0|153qog0,38,41,1|15cqobz,38,41,1|15cqoc0,41,40,0|15mgr3z,41,40,0|15mgr40,38,41,1|15vgqzz,38,41,1|15vgr00,41,40,0|1656trz,41,40,0|1656ts0,38,41,1|16e6tnz,38,41,1|16e6to0,41,40,0|16nwwfz,41,40,0|16nwwg0,38,41,1|16wwwbz,38,41,1|16wwwc0,41,40,0|176zxrz,41,40,0|176zxs0,38,41,1|17fmyzz,38,41,1|17fmz00,41,40,0|17pq0fz,41,40,0|17pq0g0,38,41,1|17yd1nz,38,41,1|17yd1o0,41,40,0|188g33z,41,40,0|188g340,38,41,1|18hg2zz,38,41,1|18hg300,41,40,0|18r65rz,41,40,0|18r65s0,38,41,1|19065nz,38,41,1|19065o0,41,40,0|199w8fz,41,40,0|199w8g0,38,41,1|19iw8bz,38,41,1|19iw8c0,41,40,0|19sz9rz,41,40,0|19sz9s0,38,41,1|1a1mazz,38,41,1|1a1mb00,41,40,0|1abpcfz,41,40,0|1abpcg0,38,41,1|1akcdnz,38,41,1|1akcdo0,41,40,0|1auff3z,41,40,0|1auff40,38,41,1|1b3fezz,38,41,1|1b3ff00,41,40,0|1bd5hrz,41,40,0|1bd5hs0,38,41,1|1bm5hnz,38,41,1|1bm5ho0,41,40,0|1bvvkfz,41,40,0|1bvvkg0,38,41,1|1c4vkbz,38,41,1|1c4vkc0,41,40,0|1celn3z,41,40,0|1celn40,38,41,1|1cnlmzz,38,41,1|1cnln00,41,40,0|1cxoofz,41,40,0|1cxoog0,38,41,1|1d6bpnz,38,41,1|1d6bpo0,41,40,0|1dger3z,41,40,0|1dger40,38,41,1|1dp1sbz,38,41,1|1dp1sc0,41,40,0|1dz4trz,41,40,0|1dz4ts0,38,41,1|1e84tnz,38,41,1|1e84to0,41,40,0|1ehuwfz,41,40,0|1ehuwg0,38,41,1|1equwbz,38,41,1|1equwc0,41,40,0|1f0kz3z,41,40,0|1f0kz40,38,41,1|1f9kyzz,38,41,1|1f9kz00,41,40,0|1fjo0fz,41,40,0|1fjo0g0,38,41,1|1fsb1nz,38,41,1|1fsb1o0,41,40,0|1g2e33z,41,40,0|1g2e340,38,41,1|1gb14bz,38,41,1|1gb14c0,41,40,0|1gl45rz,41,40,0|1gl45s0,38,41,1|1gtr6zz,38,41,1|1gtr700,41,40,0|1h3u8fz,41,40,0|1h3u8g0,38,41,1|1hcu8bz,38,41,1|1hcu8c0,41,40,0|1hmkb3z,41,40,0|1hmkb40,38,41,1|1hvkazz,38,41,1|1hvkb00,41,40,0|1i5adrz,41,40,0|1i5ads0,38,41,1|1ieadnz,38,41,1|1ieado0,41,40,0|1iodf3z,41,40,0|1iodf40,38,41,1|1ix0gbz,38,41,1|1ix0gc0,41,40,0|1j73hrz,41,40,0|1j73hs0,38,41,1|1jfqizz,38,41,1|1jfqj00,41,40,0|1jptkfz,41,40,0|1jptkg0,38,41,1|1jytkbz,38,41,1|1jytkc0,41,40,0|1k8jn3z,41,40,0|1k8jn40,38,41,1|1khjmzz,38,41,1|1khjn00,41,40,0|1kr9prz,41,40,0|1kr9ps0,38,41,1|1l09pnz,38,41,1|1l09po0,41,40,0|1l9zsfz,41,40,0|1l9zsg0,38,41,1|1lizsbz,38,41,1|1lizsc0,41,40,0|1lt2trz,41,40,0|1lt2ts0,38,41,1|1m1puzz,38,41,1|1m1pv00,41,40,0|1mbswfz,41,40,0|1mbswg0,38,41,1|1mkfxnz,38,41,1|1mkfxo0,41,40,0|1muiz3z,41,40,0|1muiz40,38,41,1|1n3iyzz,38,41,1|1n3iz00,41,40,0|1nd91rz,41,40,0|1nd91s0,38,41,1|1nm91nz,38,41,1|1nm91o0,41,40,0|1nvz4fz,41,40,0|1nvz4g0,38,41,1|1o4z4bz,38,41,1|1o4z4c0,41,40,0|1of25rz,41,40,0|1of25s0,38,41,1|1onp6zz,38,41,1|1onp700,41,40,0|1oxs8fz,41,40,0|1oxs8g0,38,41,1|1p6f9nz,38,41,1|1p6f9o0,41,40,0|1pgib3z,41,40,0|1pgib40,38,41,1|1ppiazz,38,41,1|1ppib00,41,40,0|1pz8drz,41,40,0|1pz8ds0,38,41,1|1q88dnz,38,41,1|1q88do0,41,40,0|1qhygfz,41,40,0|1qhygg0,38,41,1|1qqygbz,38,41,1|1qqygc0,41,40,0|1r0oj3z,41,40,0|1r0oj40,38,41,1|1r9oizz,38,41,1|1r9oj00,41,40,0|1rjrkfz,41,40,0|1rjrkg0,38,41,1|1rselnz,38,41,1|1rselo0,41,40,0|1s2hn3z,41,40,0|1s2hn40,38,41,1|1sb4obz,38,41,1|1sb4oc0,41,40,0|1sl7prz,41,40,0|1sl7ps0,38,41,1|1su7pnz,38,41,1|1su7po0,41,40,0|1t3xsfz,41,40,0|1t3xsg0,38,41,1|1tcxsbz,38,41,1|1tcxsc0,41,40,0|1tmnv3z,41,40,0|1tmnv40,38,41,1|1tvnuzz,38,41,1|1tvnv00,41,40,0|1u5qwfz,41,40,0|1u5qwg0,38,41,1|1uedxnz,38,41,1|1uedxo0,41,40,0|1uogz3z,41,40,0|1uogz40,38,41,1|1ux40bz,38,41,1|1ux40c0,41,40,0|1v771rz,41,40,0|1v771s0,38,41,1|1vfu2zz,38,41,1|1vfu300,41,40,0|1vpx4fz,41,40,0|1vpx4g0,38,41,1|NaN,38,41,1",
        "America/Atikokan|,0,57,0|-15r0ult,0,57,0|-15r0uls,40,58,0|-w757vd,40,58,0|-w757vc,43,59,0|NaN,43,59,0",
        "America/Bahia|,0,60,0|-t85kv9,0,60,0|-t85kv8,38,41,0|-jylag1,38,41,0|-jylag0,39,43,1|-jpb141,39,43,1|-jpb140,38,41,0|-jfsd01,38,41,0|-jfsd00,39,43,1|-j6j3s1,39,43,1|-j6j3s0,38,41,0|-ahcyc1,38,41,0|-ahcyc0,39,43,1|-aad3o1,39,43,1|-aad3o0,38,41,0|-9yl101,38,41,0|-9yl100,39,43,1|-9sd141,39,43,1|-9sd140,38,41,0|-9ft3o1,38,41,0|-9ft3o0,39,43,1|-99j941,39,43,1|-99j940,38,41,0|-8wzbo1,38,41,0|-8wzbo0,39,43,1|-8scqg1,39,43,1|-8scqg0,38,41,0|-35xmc1,38,41,0|-35xmc0,39,43,1|-31nzs1,39,43,1|-31nzs0,38,41,0|-2kdp01,38,41,0|-2kdp00,39,43,1|-2hcig1,39,43,1|-2hcig0,38,41,0|-24qqc1,38,41,0|-24qqc0,39,43,1|-204541,39,43,1|-204540,38,41,0|-1nid01,38,41,0|-1nid00,39,43,1|-1hc7s1,39,43,1|-1hc7s0,38,41,0|-14qfo1,38,41,0|-14qfo0,39,43,1|-yifs1,39,43,1|-yifs0,38,41,0|89jcbz,38,41,0|89jcc0,39,43,1|8gdk7z,39,43,1|8gdk80,38,41,0|8rwgbz,38,41,0|8rwgc0,39,43,1|8xns7z,39,43,1|8xns80,38,41,0|9aodnz,38,41,0|9aodo0,39,43,1|9g2qvz,39,43,1|9g2qw0,38,41,0|9t1hnz,38,41,0|9t1ho0,39,43,1|9yfuvz,39,43,1|9yfuw0,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|ahvuvz,39,43,1|ahvuw0,38,41,0|auulnz,38,41,0|auulo0,39,43,1|b0yw7z,39,43,1|b0yw80,38,41,0|bdkobz,38,41,0|bdkoc0,39,43,1|bjc07z,39,43,1|bjc080,38,41,0|bwnpnz,38,41,0|bwnpo0,39,43,1|c1p47z,39,43,1|c1p480,38,41,0|cf0tnz,38,41,0|cf0to0,39,43,1|cli2vz,39,43,1|cli2w0,38,41,0|cxqwbz,38,41,0|cxqwc0,39,43,1|d485jz,39,43,1|d485k0,38,41,0|dggyzz,38,41,0|dggz00,39,43,1|dml9jz,39,43,1|dml9k0,38,41,0|dyu2zz,38,41,0|dyu300,39,43,1|e5oavz,39,43,1|e5oaw0,38,41,0|ehm0bz,38,41,0|ehm0c0,39,43,1|ep4avz,39,43,1|ep4aw0,38,41,0|f0n6zz,38,41,0|f0n700,39,43,1|f7hevz,39,43,1|f7hew0,38,41,0|fj0azz,38,41,0|fj0b00,39,43,1|fqkg7z,39,43,1|fqkg80,38,41,0|g23cbz,38,41,0|g23cc0,39,43,1|g8xk7z,39,43,1|g8xk80,38,41,0|gl6dnz,38,41,0|gl6do0,39,43,1|grnmvz,39,43,1|grnmw0,38,41,0|h4zcbz,38,41,0|h4zcc0,39,43,1|hadpjz,39,43,1|hadpk0,38,41,0|lt51nz,38,41,0|lt51o0,39,43,1|lzz9jz,39,43,1|lzz9k0,38,41,0|NaN,38,41,0",
        "America/Bahia_Banderas|,0,61,0|-p1u4k1,0,61,0|-p1u4k0,44,62,0|-m7ock1,44,62,0|-m7ock0,45,63,0|-kf67c1,45,63,0|-kf67c0,44,62,0|-k6mpw1,44,62,0|-k6mpw0,46,63,1|-jypm01,46,63,1|-jypm00,44,62,0|-jpan81,44,62,0|-jpan80,45,63,0|-eg9601,45,63,0|-eg9600,44,62,0|dphibz,44,62,0|dphic0,46,63,1|dzxcvz,46,63,1|dzxcw0,44,62,0|e87kzz,44,62,0|e87l00,46,63,1|einfjz,46,63,1|einfk0,44,62,0|eqxnnz,44,62,0|eqxno0,46,63,1|f1di7z,46,63,1|f1di80,44,62,0|f9nqbz,44,62,0|f9nqc0,46,63,1|fkgjjz,46,63,1|fkgjk0,44,62,0|fsdszz,44,62,0|fsdt00,46,63,1|g36m7z,46,63,1|g36m80,44,62,0|gcwozz,44,62,0|gcwp00,46,63,1|gkgu7z,46,63,1|gkgu80,44,62,0|gu6wzz,44,62,0|gu6x00,46,63,1|h4mrjz,46,63,1|h4mrk0,44,62,0|hcwznz,44,62,0|hcwzo0,46,63,1|hncu7z,46,63,1|hncu80,44,62,0|hvn2bz,44,62,0|hvn2c0,46,63,1|i6fvjz,46,63,1|i6fvk0,44,62,0|ied4zz,44,62,0|ied500,46,63,1|ip5y7z,46,63,1|ip5y80,44,62,0|ix37nz,44,62,0|ix37o0,46,63,1|j7w0vz,46,63,1|j7w0w0,44,62,0|jftabz,44,62,0|jftac0,46,63,1|jqm3jz,46,63,1|jqm3k0,44,62,0|jywbnz,44,62,0|jywbo0,46,63,1|k9c67z,46,63,1|k9c680,44,62,0|khmebz,44,62,0|khmec0,46,63,1|ks28vz,46,63,1|ks28w0,44,62,0|l0cgzz,44,62,0|l0ch00,47,59,1|lb57fz,47,59,1|lb57g0,45,63,0|lj2gvz,45,63,0|lj2gw0,47,59,1|ltva3z,47,59,1|ltva40,45,63,0|m1sjjz,45,63,0|m1sjk0,47,59,1|mclcrz,47,59,1|mclcs0,45,63,0|mkvkvz,45,63,0|mkvkw0,47,59,1|mvbffz,47,59,1|mvbfg0,45,63,0|n3lnjz,45,63,0|n3lnk0,47,59,1|ne1i3z,47,59,1|ne1i40,45,63,0|nmbq7z,45,63,0|nmbq80,47,59,1|nwrkrz,47,59,1|nwrks0,45,63,0|o51svz,45,63,0|o51sw0,47,59,1|ofum3z,47,59,1|ofum40,45,63,0|onrvjz,45,63,0|onrvk0,47,59,1|oykorz,47,59,1|oykos0,45,63,0|p6hy7z,45,63,0|p6hy80,47,59,1|pharfz,47,59,1|pharg0,45,63,0|ppkzjz,45,63,0|ppkzk0,47,59,1|q00u3z,47,59,1|q00u40,45,63,0|q8b27z,45,63,0|q8b280,47,59,1|qiqwrz,47,59,1|qiqws0,45,63,0|qr14vz,45,63,0|qr14w0,47,59,1|r1ty3z,47,59,1|r1ty40,45,63,0|r9r7jz,45,63,0|r9r7k0,47,59,1|rkk0rz,47,59,1|rkk0s0,45,63,0|NaN,45,63,0",
        "America/Barbados|,0,64,0|-ug8iak,0,64,0|-ug8iaj,31,40,0|-egii41,31,40,0|-egii40,48,41,1|-e9ma01,48,41,1|-e9ma00,31,40,0|-dx2i41,31,40,0|-dx2i40,48,41,1|-dql3c1,48,41,1|-dql3c0,31,40,0|-dfdgs1,31,40,0|-dfdgs0,49,65,1|-d7i201,49,65,1|-d7i200,31,40,0|3vvnbz,31,40,0|3vvnc0,48,41,1|41mz7z,48,41,1|41mz80,31,40,0|4bq0nz,31,40,0|4bq0o0,48,41,1|4kd1vz,48,41,1|4kd1w0,31,40,0|4ug3bz,31,40,0|4ug3c0,48,41,1|5334jz,48,41,1|5334k0,31,40,0|5dj4nz,31,40,0|5dj4o0,48,41,1|5lnn7z,48,41,1|5lnn80,31,40,0|NaN,31,40,0",
        "America/Belem|,0,66,0|-t85j0t,0,66,0|-t85j0s,38,41,0|-jylag1,38,41,0|-jylag0,39,43,1|-jpb141,39,43,1|-jpb140,38,41,0|-jfsd01,38,41,0|-jfsd00,39,43,1|-j6j3s1,39,43,1|-j6j3s0,38,41,0|-ahcyc1,38,41,0|-ahcyc0,39,43,1|-aad3o1,39,43,1|-aad3o0,38,41,0|-9yl101,38,41,0|-9yl100,39,43,1|-9sd141,39,43,1|-9sd140,38,41,0|-9ft3o1,38,41,0|-9ft3o0,39,43,1|-99j941,39,43,1|-99j940,38,41,0|-8wzbo1,38,41,0|-8wzbo0,39,43,1|-8scqg1,39,43,1|-8scqg0,38,41,0|-35xmc1,38,41,0|-35xmc0,39,43,1|-31nzs1,39,43,1|-31nzs0,38,41,0|-2kdp01,38,41,0|-2kdp00,39,43,1|-2hcig1,39,43,1|-2hcig0,38,41,0|-24qqc1,38,41,0|-24qqc0,39,43,1|-204541,39,43,1|-204540,38,41,0|-1nid01,38,41,0|-1nid00,39,43,1|-1hc7s1,39,43,1|-1hc7s0,38,41,0|-14qfo1,38,41,0|-14qfo0,39,43,1|-yifs1,39,43,1|-yifs0,38,41,0|89jcbz,38,41,0|89jcc0,39,43,1|8gdk7z,39,43,1|8gdk80,38,41,0|8rwgbz,38,41,0|8rwgc0,39,43,1|8xns7z,39,43,1|8xns80,38,41,0|9aodnz,38,41,0|9aodo0,39,43,1|9g2qvz,39,43,1|9g2qw0,38,41,0|NaN,38,41,0",
        "America/Belize|,0,67,0|-u52ic1,0,67,0|-u52ic0,45,63,0|-qqoy01,45,63,0|-qqoy00,50,68,1|-qk7ne1,50,68,1|-qk7ne0,45,63,0|-q7yvc1,45,63,0|-q7yvc0,50,68,1|-q14m21,50,68,1|-q14m20,45,63,0|-pp8so1,45,63,0|-pp8so0,50,68,1|-pieje1,50,68,1|-pieje0,45,63,0|-p6iq01,45,63,0|-p6iq00,50,68,1|-ozogq1,50,68,1|-ozogq0,45,63,0|-onfoo1,45,63,0|-onfoo0,50,68,1|-ogye21,50,68,1|-ogye20,45,63,0|-o4pm01,45,63,0|-o4pm00,50,68,1|-ny8be1,50,68,1|-ny8be0,45,63,0|-nlzjc1,45,63,0|-nlzjc0,50,68,1|-nf5a21,50,68,1|-nf5a20,45,63,0|-n39go1,45,63,0|-n39go0,50,68,1|-mwf7e1,50,68,1|-mwf7e0,45,63,0|-mkje01,45,63,0|-mkje00,50,68,1|-mdp4q1,50,68,1|-mdp4q0,45,63,0|-m1tbc1,45,63,0|-m1tbc0,50,68,1|-luz221,50,68,1|-luz220,45,63,0|-liqa01,45,63,0|-liqa00,50,68,1|-lc8ze1,50,68,1|-lc8ze0,45,63,0|-l007c1,45,63,0|-l007c0,50,68,1|-ktiwq1,50,68,1|-ktiwq0,45,63,0|-kha4o1,45,63,0|-kha4o0,50,68,1|-kafve1,50,68,1|-kafve0,45,63,0|-jyk201,45,63,0|-jyk200,50,68,1|-jrpsq1,50,68,1|-jrpsq0,45,63,0|-jftzc1,45,63,0|-jftzc0,50,68,1|-j8zq21,50,68,1|-j8zq20,45,63,0|-iwqy01,45,63,0|-iwqy00,50,68,1|-iq9ne1,50,68,1|-iq9ne0,45,63,0|-ie0vc1,45,63,0|-ie0vc0,50,68,1|-i7jkq1,50,68,1|-i7jkq0,45,63,0|-hvaso1,45,63,0|-hvaso0,50,68,1|-hoti21,50,68,1|-hoti20,45,63,0|-hckq01,45,63,0|-hckq00,50,68,1|-h5qgq1,50,68,1|-h5qgq0,45,63,0|-gtunc1,45,63,0|-gtunc0,50,68,1|-gn0e21,50,68,1|-gn0e20,45,63,0|-gb4ko1,45,63,0|-gb4ko0,50,68,1|-g4abe1,50,68,1|-g4abe0,45,63,0|-fs1jc1,45,63,0|-fs1jc0,50,68,1|-flk8q1,50,68,1|-flk8q0,45,63,0|-f9bgo1,45,63,0|-f9bgo0,50,68,1|-f2u621,50,68,1|-f2u620,45,63,0|-eqle01,45,63,0|-eqle00,50,68,1|-ejr4q1,50,68,1|-ejr4q0,45,63,0|-ecwso1,45,63,0|-ecwso0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cjqks1,52,59,1|-cjqks0,45,63,0|-blvzc1,45,63,0|-blvzc0,50,68,1|-bf1q21,50,68,1|-bf1q20,45,63,0|-b35wo1,45,63,0|-b35wo0,50,68,1|-awbne1,50,68,1|-awbne0,45,63,0|-akfu01,45,63,0|-akfu00,50,68,1|-adlkq1,50,68,1|-adlkq0,45,63,0|-a1cso1,45,63,0|-a1cso0,50,68,1|-9uvi21,50,68,1|-9uvi20,45,63,0|-9imq01,45,63,0|-9imq00,50,68,1|-9c5fe1,50,68,1|-9c5fe0,45,63,0|-8zwnc1,45,63,0|-8zwnc0,50,68,1|-8t2e21,50,68,1|-8t2e20,45,63,0|-8h6ko1,45,63,0|-8h6ko0,50,68,1|-8acbe1,50,68,1|-8acbe0,45,63,0|-7ygi01,45,63,0|-7ygi00,50,68,1|-7rm8q1,50,68,1|-7rm8q0,45,63,0|-7fqfc1,45,63,0|-7fqfc0,50,68,1|-78w621,50,68,1|-78w620,45,63,0|-6wne01,45,63,0|-6wne00,50,68,1|-6q63e1,50,68,1|-6q63e0,45,63,0|-6dxbc1,45,63,0|-6dxbc0,50,68,1|-67g0q1,50,68,1|-67g0q0,45,63,0|-5v78o1,45,63,0|-5v78o0,50,68,1|-5ocze1,50,68,1|-5ocze0,45,63,0|-5ch601,45,63,0|-5ch600,50,68,1|-55mwq1,50,68,1|-55mwq0,45,63,0|-4tr3c1,45,63,0|-4tr3c0,50,68,1|-4mwu21,50,68,1|-4mwu20,45,63,0|-4ao201,45,63,0|-4ao200,50,68,1|-446re1,50,68,1|-446re0,45,63,0|-3rxzc1,45,63,0|-3rxzc0,50,68,1|-3lgoq1,50,68,1|-3lgoq0,45,63,0|-397wo1,45,63,0|-397wo0,50,68,1|-32qm21,50,68,1|-32qm20,45,63,0|-2qhu01,45,63,0|-2qhu00,50,68,1|-2jnkq1,50,68,1|-2jnkq0,45,63,0|-27rrc1,45,63,0|-27rrc0,50,68,1|-20xi21,50,68,1|-20xi20,45,63,0|-1p1oo1,45,63,0|-1p1oo0,50,68,1|-1i7fe1,50,68,1|-1i7fe0,45,63,0|-15ync1,45,63,0|-15ync0,50,68,1|-zhcq1,50,68,1|-zhcq0,45,63,0|21s0nz,45,63,0|21s0o0,47,59,1|2565vz,47,59,1|2565w0,45,63,0|6rj4nz,45,63,0|6rj4o0,47,59,1|6uer7z,47,59,1|6uer80,45,63,0|NaN,45,63,0",
        "America/Blanc-Sablon|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Boa_Vista|,0,69,0|-t85grl,0,69,0|-t85grk,41,40,0|-jyl7o1,41,40,0|-jyl7o0,38,41,1|-jpayc1,38,41,1|-jpayc0,41,40,0|-jfsa81,41,40,0|-jfsa80,38,41,1|-j6j101,38,41,1|-j6j100,41,40,0|-ahcvk1,41,40,0|-ahcvk0,38,41,1|-aad0w1,38,41,1|-aad0w0,41,40,0|-9yky81,41,40,0|-9yky80,38,41,1|-9scyc1,38,41,1|-9scyc0,41,40,0|-9ft0w1,41,40,0|-9ft0w0,38,41,1|-99j6c1,38,41,1|-99j6c0,41,40,0|-8wz8w1,41,40,0|-8wz8w0,38,41,1|-8scno1,38,41,1|-8scno0,41,40,0|-35xjk1,41,40,0|-35xjk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2kdm81,41,40,0|-2kdm80,38,41,1|-2hcfo1,38,41,1|-2hcfo0,41,40,0|-24qnk1,41,40,0|-24qnk0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1nia81,41,40,0|-1nia80,38,41,1|-1hc501,38,41,1|-1hc500,41,40,0|-14qcw1,41,40,0|-14qcw0,38,41,1|-yid01,38,41,1|-yid00,41,40,0|89jf3z,41,40,0|89jf40,38,41,1|8gdmzz,38,41,1|8gdn00,41,40,0|8rwj3z,41,40,0|8rwj40,38,41,1|8xnuzz,38,41,1|8xnv00,41,40,0|9aogfz,41,40,0|9aogg0,38,41,1|9g2tnz,38,41,1|9g2to0,41,40,0|fj0drz,41,40,0|fj0ds0,38,41,1|fqkizz,38,41,1|fqkj00,41,40,0|g23f3z,41,40,0|g23f40,38,41,1|g2gazz,38,41,1|g2gb00,41,40,0|NaN,41,40,0",
        "America/Bogota|,0,70,0|-18s2sy9,0,70,0|-18s2sy8,53,70,0|-srdoy9,53,70,0|-srdoy8,54,59,0|bnnsjz,54,59,0|bnnsk0,41,40,1|c228fz,41,40,1|c228g0,54,59,0|NaN,54,59,0",
        "America/Boise|,0,71,0|-18y0gg1,0,71,0|-18y0gg0,55,38,0|-r0emw1,55,38,0|-r0emw0,56,62,1|-qplto1,56,62,1|-qplto0,55,38,0|-qhok81,55,38,0|-qhok80,56,62,1|-q6vr01,56,62,1|-q6vr00,55,38,0|-oc9iw1,55,38,0|-oc9iw0,44,62,0|-ek1z01,44,62,0|-ek1z00,57,63,1|-cq2tg1,57,63,1|-cq2tg0,58,63,1|-cnoxs1,58,63,1|-cnoxs0,44,62,0|-1e8kc1,44,62,0|-1e8kc0,46,63,1|-14vls1,46,63,1|-14vls0,44,62,0|-viho1,44,62,0|-viho0,46,63,1|-m5j41,46,63,1|-m5j40,44,62,0|-csf01,44,62,0|-csf00,46,63,1|-3fgg1,46,63,1|-3fgg0,44,62,0|5xnnz,44,62,0|5xno0,46,63,1|fam7z,46,63,1|fam80,44,62,0|onqbz,44,62,0|onqc0,46,63,1|ydnjz,46,63,1|ydnk0,44,62,0|17qrnz,44,62,0|17qro0,46,63,1|1h3q7z,46,63,1|1h3q80,44,62,0|1qgubz,44,62,0|1qguc0,46,63,1|1ztsvz,46,63,1|1ztsw0,44,62,0|24vczz,44,62,0|24vd00,46,63,1|2ijvjz,46,63,1|2ijvk0,44,62,0|2oobnz,44,62,0|2oobo0,46,63,1|319y7z,46,63,1|319y80,44,62,0|3an2bz,44,62,0|3an2c0,46,63,1|3kczjz,46,63,1|3kczk0,44,62,0|3td4zz,44,62,0|3td500,46,63,1|43327z,46,63,1|433280,44,62,0|4cg6bz,44,62,0|4cg6c0,46,63,1|4lt4vz,46,63,1|4lt4w0,44,62,0|4v68zz,44,62,0|4v6900,46,63,1|54j7jz,46,63,1|54j7k0,44,62,0|5dwbnz,44,62,0|5dwbo0,46,63,1|5n9a7z,46,63,1|5n9a80,44,62,0|5wmebz,44,62,0|5wmec0,46,63,1|65zcvz,46,63,1|65zcw0,44,62,0|6fcgzz,44,62,0|6fch00,46,63,1|6p2e7z,46,63,1|6p2e80,44,62,0|6y2jnz,44,62,0|6y2jo0,46,63,1|77sgvz,46,63,1|77sgw0,44,62,0|7h5kzz,44,62,0|7h5l00,46,63,1|7qijjz,46,63,1|7qijk0,44,62,0|7zvnnz,44,62,0|7zvno0,46,63,1|898m7z,46,63,1|898m80,44,62,0|8ilqbz,44,62,0|8ilqc0,46,63,1|8ryovz,46,63,1|8ryow0,44,62,0|908wzz,44,62,0|908x00,46,63,1|9aorjz,46,63,1|9aork0,44,62,0|9iyznz,44,62,0|9iyzo0,46,63,1|9trsvz,46,63,1|9trsw0,44,62,0|a1p2bz,44,62,0|a1p2c0,46,63,1|achvjz,46,63,1|achvk0,44,62,0|akf4zz,44,62,0|akf500,46,63,1|av7y7z,46,63,1|av7y80,44,62,0|b3i6bz,44,62,0|b3i6c0,46,63,1|bdy0vz,46,63,1|bdy0w0,44,62,0|bm88zz,44,62,0|bm8900,46,63,1|bwo3jz,46,63,1|bwo3k0,44,62,0|c4ybnz,44,62,0|c4ybo0,46,63,1|cfr4vz,46,63,1|cfr4w0,44,62,0|cnoebz,44,62,0|cnoec0,46,63,1|cyh7jz,46,63,1|cyh7k0,44,62,0|d6egzz,44,62,0|d6eh00,46,63,1|dh7a7z,46,63,1|dh7a80,44,62,0|dphibz,44,62,0|dphic0,46,63,1|dzxcvz,46,63,1|dzxcw0,44,62,0|e87kzz,44,62,0|e87l00,46,63,1|einfjz,46,63,1|einfk0,44,62,0|eqxnnz,44,62,0|eqxno0,46,63,1|f1di7z,46,63,1|f1di80,44,62,0|f9nqbz,44,62,0|f9nqc0,46,63,1|fkgjjz,46,63,1|fkgjk0,44,62,0|fsdszz,44,62,0|fsdt00,46,63,1|g36m7z,46,63,1|g36m80,44,62,0|gb3vnz,44,62,0|gb3vo0,46,63,1|glwovz,46,63,1|glwow0,44,62,0|gu6wzz,44,62,0|gu6x00,46,63,1|h4mrjz,46,63,1|h4mrk0,44,62,0|hcwznz,44,62,0|hcwzo0,46,63,1|hncu7z,46,63,1|hncu80,44,62,0|hvn2bz,44,62,0|hvn2c0,46,63,1|i6fvjz,46,63,1|i6fvk0,44,62,0|ied4zz,44,62,0|ied500,46,63,1|ip5y7z,46,63,1|ip5y80,44,62,0|ix37nz,44,62,0|ix37o0,46,63,1|j7w0vz,46,63,1|j7w0w0,44,62,0|jeqebz,44,62,0|jeqec0,46,63,1|jqz27z,46,63,1|jqz280,44,62,0|jxggzz,44,62,0|jxgh00,46,63,1|k9p4vz,46,63,1|k9p4w0,44,62,0|kg6jnz,44,62,0|kg6jo0,46,63,1|ksf7jz,46,63,1|ksf7k0,44,62,0|kz9kzz,44,62,0|kz9l00,46,63,1|lbi8vz,46,63,1|lbi8w0,44,62,0|lhznnz,44,62,0|lhzno0,46,63,1|lu8bjz,46,63,1|lu8bk0,44,62,0|m0pqbz,44,62,0|m0pqc0,46,63,1|mcye7z,46,63,1|mcye80,44,62,0|mjfszz,44,62,0|mjft00,46,63,1|mvogvz,46,63,1|mvogw0,44,62,0|n25vnz,44,62,0|n25vo0,46,63,1|neejjz,46,63,1|neejk0,44,62,0|nkvybz,44,62,0|nkvyc0,46,63,1|nx4m7z,46,63,1|nx4m80,44,62,0|o3yznz,44,62,0|o3yzo0,46,63,1|og7njz,46,63,1|og7nk0,44,62,0|omp2bz,44,62,0|omp2c0,46,63,1|oyxq7z,46,63,1|oyxq80,44,62,0|p5f4zz,44,62,0|p5f500,46,63,1|phnsvz,46,63,1|phnsw0,44,62,0|po57nz,44,62,0|po57o0,46,63,1|q0dvjz,46,63,1|q0dvk0,44,62,0|q6vabz,44,62,0|q6vac0,46,63,1|qj3y7z,46,63,1|qj3y80,44,62,0|qpybnz,44,62,0|qpybo0,46,63,1|r26zjz,46,63,1|r26zk0,44,62,0|r8oebz,44,62,0|r8oec0,46,63,1|rkx27z,46,63,1|rkx280,44,62,0|rregzz,44,62,0|rreh00,46,63,1|s3n4vz,46,63,1|s3n4w0,44,62,0|sa4jnz,44,62,0|sa4jo0,46,63,1|smd7jz,46,63,1|smd7k0,44,62,0|ssumbz,44,62,0|ssumc0,46,63,1|t53a7z,46,63,1|t53a80,44,62,0|tbkozz,44,62,0|tbkp00,46,63,1|tntcvz,46,63,1|tntcw0,44,62,0|tunqbz,44,62,0|tunqc0,46,63,1|u6we7z,46,63,1|u6we80,44,62,0|uddszz,44,62,0|uddt00,46,63,1|upmgvz,46,63,1|upmgw0,44,62,0|uw3vnz,44,62,0|uw3vo0,46,63,1|v8cjjz,46,63,1|v8cjk0,44,62,0|vetybz,44,62,0|vetyc0,46,63,1|vr2m7z,46,63,1|vr2m80,44,62,0|vxk0zz,44,62,0|vxk100,46,63,1|w9sovz,46,63,1|w9sow0,44,62,0|wgn2bz,44,62,0|wgn2c0,46,63,1|wsvq7z,46,63,1|wsvq80,44,62,0|wzd4zz,44,62,0|wzd500,46,63,1|xblsvz,46,63,1|xblsw0,44,62,0|xi37nz,44,62,0|xi37o0,46,63,1|xubvjz,46,63,1|xubvk0,44,62,0|y0tabz,44,62,0|y0tac0,46,63,1|yd1y7z,46,63,1|yd1y80,44,62,0|yjjczz,44,62,0|yjjd00,46,63,1|yvs0vz,46,63,1|yvs0w0,44,62,0|z29fnz,44,62,0|z29fo0,46,63,1|zei3jz,46,63,1|zei3k0,44,62,0|zlcgzz,44,62,0|zlch00,46,63,1|zxl4vz,46,63,1|zxl4w0,44,62,0|1042jnz,44,62,0|1042jo0,46,63,1|10gb7jz,46,63,1|10gb7k0,44,62,0|10msmbz,44,62,0|10msmc0,46,63,1|10z1a7z,46,63,1|10z1a80,44,62,0|115iozz,44,62,0|115ip00,46,63,1|11hrcvz,46,63,1|11hrcw0,44,62,0|11o8rnz,44,62,0|11o8ro0,46,63,1|120hfjz,46,63,1|120hfk0,44,62,0|126yubz,44,62,0|126yuc0,46,63,1|12j7i7z,46,63,1|12j7i80,44,62,0|12q1vnz,44,62,0|12q1vo0,46,63,1|132ajjz,46,63,1|132ajk0,44,62,0|138rybz,44,62,0|138ryc0,46,63,1|13l0m7z,46,63,1|13l0m80,44,62,0|13ri0zz,44,62,0|13ri100,46,63,1|143qovz,46,63,1|143qow0,44,62,0|14a83nz,44,62,0|14a83o0,46,63,1|14mgrjz,46,63,1|14mgrk0,44,62,0|14sy6bz,44,62,0|14sy6c0,46,63,1|1556u7z,46,63,1|1556u80,44,62,0|15c17nz,44,62,0|15c17o0,46,63,1|15o9vjz,46,63,1|15o9vk0,44,62,0|15urabz,44,62,0|15urac0,46,63,1|166zy7z,46,63,1|166zy80,44,62,0|16dhczz,44,62,0|16dhd00,46,63,1|16pq0vz,46,63,1|16pq0w0,44,62,0|16w7fnz,44,62,0|16w7fo0,46,63,1|178g3jz,46,63,1|178g3k0,44,62,0|17exibz,44,62,0|17exic0,46,63,1|17r667z,46,63,1|17r6680,44,62,0|17xnkzz,44,62,0|17xnl00,46,63,1|189w8vz,46,63,1|189w8w0,44,62,0|18gqmbz,44,62,0|18gqmc0,46,63,1|18sza7z,46,63,1|18sza80,44,62,0|18zgozz,44,62,0|18zgp00,46,63,1|19bpcvz,46,63,1|19bpcw0,44,62,0|19i6rnz,44,62,0|19i6ro0,46,63,1|19uffjz,46,63,1|19uffk0,44,62,0|1a0wubz,44,62,0|1a0wuc0,46,63,1|1ad5i7z,46,63,1|1ad5i80,44,62,0|1ajmwzz,44,62,0|1ajmx00,46,63,1|1avvkvz,46,63,1|1avvkw0,44,62,0|1b2pybz,44,62,0|1b2pyc0,46,63,1|1beym7z,46,63,1|1beym80,44,62,0|1blg0zz,44,62,0|1blg100,46,63,1|1bxoovz,46,63,1|1bxoow0,44,62,0|1c463nz,44,62,0|1c463o0,46,63,1|1cgerjz,46,63,1|1cgerk0,44,62,0|1cmw6bz,44,62,0|1cmw6c0,46,63,1|1cz4u7z,46,63,1|1cz4u80,44,62,0|1d5m8zz,44,62,0|1d5m900,46,63,1|1dhuwvz,46,63,1|1dhuww0,44,62,0|1docbnz,44,62,0|1docbo0,46,63,1|1e0kzjz,46,63,1|1e0kzk0,44,62,0|1e7fczz,44,62,0|1e7fd00,46,63,1|1ejo0vz,46,63,1|1ejo0w0,44,62,0|1eq5fnz,44,62,0|1eq5fo0,46,63,1|1f2e3jz,46,63,1|1f2e3k0,44,62,0|1f8vibz,44,62,0|1f8vic0,46,63,1|1fl467z,46,63,1|1fl4680,44,62,0|1frlkzz,44,62,0|1frll00,46,63,1|1g3u8vz,46,63,1|1g3u8w0,44,62,0|1gabnnz,44,62,0|1gabno0,46,63,1|1gmkbjz,46,63,1|1gmkbk0,44,62,0|1gt1qbz,44,62,0|1gt1qc0,46,63,1|1h5ae7z,46,63,1|1h5ae80,44,62,0|1hc4rnz,44,62,0|1hc4ro0,46,63,1|1hodfjz,46,63,1|1hodfk0,44,62,0|1huuubz,44,62,0|1huuuc0,46,63,1|1i73i7z,46,63,1|1i73i80,44,62,0|1idkwzz,44,62,0|1idkx00,46,63,1|1iptkvz,46,63,1|1iptkw0,44,62,0|1iwaznz,44,62,0|1iwazo0,46,63,1|1j8jnjz,46,63,1|1j8jnk0,44,62,0|1jf12bz,44,62,0|1jf12c0,46,63,1|1jr9q7z,46,63,1|1jr9q80,44,62,0|1jy43nz,44,62,0|1jy43o0,46,63,1|1kacrjz,46,63,1|1kacrk0,44,62,0|1kgu6bz,44,62,0|1kgu6c0,46,63,1|1kt2u7z,46,63,1|1kt2u80,44,62,0|1kzk8zz,44,62,0|1kzk900,46,63,1|1lbswvz,46,63,1|1lbsww0,44,62,0|1liabnz,44,62,0|1liabo0,46,63,1|1luizjz,46,63,1|1luizk0,44,62,0|1m10ebz,44,62,0|1m10ec0,46,63,1|1md927z,46,63,1|1md9280,44,62,0|1mjqgzz,44,62,0|1mjqh00,46,63,1|1mvz4vz,46,63,1|1mvz4w0,44,62,0|1n2tibz,44,62,0|1n2tic0,46,63,1|1nf267z,46,63,1|1nf2680,44,62,0|1nljkzz,44,62,0|1nljl00,46,63,1|1nxs8vz,46,63,1|1nxs8w0,44,62,0|1o49nnz,44,62,0|1o49no0,46,63,1|1ogibjz,46,63,1|1ogibk0,44,62,0|1omzqbz,44,62,0|1omzqc0,46,63,1|1oz8e7z,46,63,1|1oz8e80,44,62,0|1p5pszz,44,62,0|1p5pt00,46,63,1|1phygvz,46,63,1|1phygw0,44,62,0|1posubz,44,62,0|1posuc0,46,63,1|1q11i7z,46,63,1|1q11i80,44,62,0|1q7iwzz,44,62,0|1q7ix00,46,63,1|1qjrkvz,46,63,1|1qjrkw0,44,62,0|1qq8znz,44,62,0|1qq8zo0,46,63,1|1r2hnjz,46,63,1|1r2hnk0,44,62,0|1r8z2bz,44,62,0|1r8z2c0,46,63,1|1rl7q7z,46,63,1|1rl7q80,44,62,0|1rrp4zz,44,62,0|1rrp500,46,63,1|1s3xsvz,46,63,1|1s3xsw0,44,62,0|1saf7nz,44,62,0|1saf7o0,46,63,1|1smnvjz,46,63,1|1smnvk0,44,62,0|1sti8zz,44,62,0|1sti900,46,63,1|1t5qwvz,46,63,1|1t5qww0,44,62,0|1tc8bnz,44,62,0|1tc8bo0,46,63,1|1togzjz,46,63,1|1togzk0,44,62,0|1tuyebz,44,62,0|1tuyec0,46,63,1|1u7727z,46,63,1|1u77280,44,62,0|1udogzz,44,62,0|1udoh00,46,63,1|1upx4vz,46,63,1|1upx4w0,44,62,0|1uwejnz,44,62,0|1uwejo0,46,63,1|1v8n7jz,46,63,1|1v8n7k0,44,62,0|1vf4mbz,44,62,0|1vf4mc0,46,63,1|1vrda7z,46,63,1|1vrda80,44,62,0|NaN,44,62,0",
        "America/Cambridge_Bay|,59,1,0|-q3gdc1,59,1,0|-q3gdc0,44,62,0|-ek1z01,44,62,0|-ek1z00,57,63,1|-cq2tg1,57,63,1|-cq2tg0,58,63,1|-cnoxs1,58,63,1|-cnoxs0,44,62,0|17qrnz,44,62,0|17qro0,46,63,1|1h3q7z,46,63,1|1h3q80,44,62,0|1qgubz,44,62,0|1qguc0,46,63,1|1ztsvz,46,63,1|1ztsw0,44,62,0|296wzz,44,62,0|296x00,46,63,1|2ijvjz,46,63,1|2ijvk0,44,62,0|2rwznz,44,62,0|2rwzo0,46,63,1|319y7z,46,63,1|319y80,44,62,0|3an2bz,44,62,0|3an2c0,46,63,1|3kczjz,46,63,1|3kczk0,44,62,0|3td4zz,44,62,0|3td500,46,63,1|43327z,46,63,1|433280,44,62,0|4cg6bz,44,62,0|4cg6c0,46,63,1|4lt4vz,46,63,1|4lt4w0,44,62,0|4v68zz,44,62,0|4v6900,46,63,1|54j7jz,46,63,1|54j7k0,44,62,0|5dwbnz,44,62,0|5dwbo0,46,63,1|5n9a7z,46,63,1|5n9a80,44,62,0|5wmebz,44,62,0|5wmec0,46,63,1|65zcvz,46,63,1|65zcw0,44,62,0|6fcgzz,44,62,0|6fch00,46,63,1|6p2e7z,46,63,1|6p2e80,44,62,0|6y2jnz,44,62,0|6y2jo0,46,63,1|77sgvz,46,63,1|77sgw0,44,62,0|7h5kzz,44,62,0|7h5l00,46,63,1|7qijjz,46,63,1|7qijk0,44,62,0|7zvnnz,44,62,0|7zvno0,46,63,1|898m7z,46,63,1|898m80,44,62,0|8ilqbz,44,62,0|8ilqc0,46,63,1|8ryovz,46,63,1|8ryow0,44,62,0|908wzz,44,62,0|908x00,46,63,1|9aorjz,46,63,1|9aork0,44,62,0|9iyznz,44,62,0|9iyzo0,46,63,1|9trsvz,46,63,1|9trsw0,44,62,0|a1p2bz,44,62,0|a1p2c0,46,63,1|achvjz,46,63,1|achvk0,44,62,0|akf4zz,44,62,0|akf500,46,63,1|av7y7z,46,63,1|av7y80,44,62,0|b3i6bz,44,62,0|b3i6c0,46,63,1|bdy0vz,46,63,1|bdy0w0,44,62,0|bm88zz,44,62,0|bm8900,46,63,1|bwo3jz,46,63,1|bwo3k0,44,62,0|c4ybnz,44,62,0|c4ybo0,46,63,1|cfr4vz,46,63,1|cfr4w0,44,62,0|cnoebz,44,62,0|cnoec0,46,63,1|cyh7jz,46,63,1|cyh7k0,44,62,0|d6egzz,44,62,0|d6eh00,46,63,1|dh7a7z,46,63,1|dh7a80,44,62,0|dphibz,44,62,0|dphic0,46,63,1|dzxcvz,46,63,1|dzxcw0,44,62,0|e87kzz,44,62,0|e87l00,46,63,1|einfjz,46,63,1|einfk0,44,62,0|eqxnnz,44,62,0|eqxno0,46,63,1|f1di7z,46,63,1|f1di80,44,62,0|f9nqbz,44,62,0|f9nqc0,46,63,1|fkgjjz,46,63,1|fkgjk0,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36jfz,47,59,1|g36jg0,43,59,0|g3jcjz,43,59,0|g3jck0,45,63,0|gb3vnz,45,63,0|gb3vo0,46,63,1|glwovz,46,63,1|glwow0,44,62,0|gu6wzz,44,62,0|gu6x00,46,63,1|h4mrjz,46,63,1|h4mrk0,44,62,0|hcwznz,44,62,0|hcwzo0,46,63,1|hncu7z,46,63,1|hncu80,44,62,0|hvn2bz,44,62,0|hvn2c0,46,63,1|i6fvjz,46,63,1|i6fvk0,44,62,0|ied4zz,44,62,0|ied500,46,63,1|ip5y7z,46,63,1|ip5y80,44,62,0|ix37nz,44,62,0|ix37o0,46,63,1|j7w0vz,46,63,1|j7w0w0,44,62,0|jeqebz,44,62,0|jeqec0,46,63,1|jqz27z,46,63,1|jqz280,44,62,0|jxggzz,44,62,0|jxgh00,46,63,1|k9p4vz,46,63,1|k9p4w0,44,62,0|kg6jnz,44,62,0|kg6jo0,46,63,1|ksf7jz,46,63,1|ksf7k0,44,62,0|kz9kzz,44,62,0|kz9l00,46,63,1|lbi8vz,46,63,1|lbi8w0,44,62,0|lhznnz,44,62,0|lhzno0,46,63,1|lu8bjz,46,63,1|lu8bk0,44,62,0|m0pqbz,44,62,0|m0pqc0,46,63,1|mcye7z,46,63,1|mcye80,44,62,0|mjfszz,44,62,0|mjft00,46,63,1|mvogvz,46,63,1|mvogw0,44,62,0|n25vnz,44,62,0|n25vo0,46,63,1|neejjz,46,63,1|neejk0,44,62,0|nkvybz,44,62,0|nkvyc0,46,63,1|nx4m7z,46,63,1|nx4m80,44,62,0|o3yznz,44,62,0|o3yzo0,46,63,1|og7njz,46,63,1|og7nk0,44,62,0|omp2bz,44,62,0|omp2c0,46,63,1|oyxq7z,46,63,1|oyxq80,44,62,0|p5f4zz,44,62,0|p5f500,46,63,1|phnsvz,46,63,1|phnsw0,44,62,0|po57nz,44,62,0|po57o0,46,63,1|q0dvjz,46,63,1|q0dvk0,44,62,0|q6vabz,44,62,0|q6vac0,46,63,1|qj3y7z,46,63,1|qj3y80,44,62,0|qpybnz,44,62,0|qpybo0,46,63,1|r26zjz,46,63,1|r26zk0,44,62,0|r8oebz,44,62,0|r8oec0,46,63,1|rkx27z,46,63,1|rkx280,44,62,0|rregzz,44,62,0|rreh00,46,63,1|s3n4vz,46,63,1|s3n4w0,44,62,0|sa4jnz,44,62,0|sa4jo0,46,63,1|smd7jz,46,63,1|smd7k0,44,62,0|ssumbz,44,62,0|ssumc0,46,63,1|t53a7z,46,63,1|t53a80,44,62,0|tbkozz,44,62,0|tbkp00,46,63,1|tntcvz,46,63,1|tntcw0,44,62,0|tunqbz,44,62,0|tunqc0,46,63,1|u6we7z,46,63,1|u6we80,44,62,0|uddszz,44,62,0|uddt00,46,63,1|upmgvz,46,63,1|upmgw0,44,62,0|uw3vnz,44,62,0|uw3vo0,46,63,1|v8cjjz,46,63,1|v8cjk0,44,62,0|vetybz,44,62,0|vetyc0,46,63,1|vr2m7z,46,63,1|vr2m80,44,62,0|vxk0zz,44,62,0|vxk100,46,63,1|w9sovz,46,63,1|w9sow0,44,62,0|wgn2bz,44,62,0|wgn2c0,46,63,1|wsvq7z,46,63,1|wsvq80,44,62,0|wzd4zz,44,62,0|wzd500,46,63,1|xblsvz,46,63,1|xblsw0,44,62,0|xi37nz,44,62,0|xi37o0,46,63,1|xubvjz,46,63,1|xubvk0,44,62,0|y0tabz,44,62,0|y0tac0,46,63,1|yd1y7z,46,63,1|yd1y80,44,62,0|yjjczz,44,62,0|yjjd00,46,63,1|yvs0vz,46,63,1|yvs0w0,44,62,0|z29fnz,44,62,0|z29fo0,46,63,1|zei3jz,46,63,1|zei3k0,44,62,0|zlcgzz,44,62,0|zlch00,46,63,1|zxl4vz,46,63,1|zxl4w0,44,62,0|1042jnz,44,62,0|1042jo0,46,63,1|10gb7jz,46,63,1|10gb7k0,44,62,0|10msmbz,44,62,0|10msmc0,46,63,1|10z1a7z,46,63,1|10z1a80,44,62,0|115iozz,44,62,0|115ip00,46,63,1|11hrcvz,46,63,1|11hrcw0,44,62,0|11o8rnz,44,62,0|11o8ro0,46,63,1|120hfjz,46,63,1|120hfk0,44,62,0|126yubz,44,62,0|126yuc0,46,63,1|12j7i7z,46,63,1|12j7i80,44,62,0|12q1vnz,44,62,0|12q1vo0,46,63,1|132ajjz,46,63,1|132ajk0,44,62,0|138rybz,44,62,0|138ryc0,46,63,1|13l0m7z,46,63,1|13l0m80,44,62,0|13ri0zz,44,62,0|13ri100,46,63,1|143qovz,46,63,1|143qow0,44,62,0|14a83nz,44,62,0|14a83o0,46,63,1|14mgrjz,46,63,1|14mgrk0,44,62,0|14sy6bz,44,62,0|14sy6c0,46,63,1|1556u7z,46,63,1|1556u80,44,62,0|15c17nz,44,62,0|15c17o0,46,63,1|15o9vjz,46,63,1|15o9vk0,44,62,0|15urabz,44,62,0|15urac0,46,63,1|166zy7z,46,63,1|166zy80,44,62,0|16dhczz,44,62,0|16dhd00,46,63,1|16pq0vz,46,63,1|16pq0w0,44,62,0|16w7fnz,44,62,0|16w7fo0,46,63,1|178g3jz,46,63,1|178g3k0,44,62,0|17exibz,44,62,0|17exic0,46,63,1|17r667z,46,63,1|17r6680,44,62,0|17xnkzz,44,62,0|17xnl00,46,63,1|189w8vz,46,63,1|189w8w0,44,62,0|18gqmbz,44,62,0|18gqmc0,46,63,1|18sza7z,46,63,1|18sza80,44,62,0|18zgozz,44,62,0|18zgp00,46,63,1|19bpcvz,46,63,1|19bpcw0,44,62,0|19i6rnz,44,62,0|19i6ro0,46,63,1|19uffjz,46,63,1|19uffk0,44,62,0|1a0wubz,44,62,0|1a0wuc0,46,63,1|1ad5i7z,46,63,1|1ad5i80,44,62,0|1ajmwzz,44,62,0|1ajmx00,46,63,1|1avvkvz,46,63,1|1avvkw0,44,62,0|1b2pybz,44,62,0|1b2pyc0,46,63,1|1beym7z,46,63,1|1beym80,44,62,0|1blg0zz,44,62,0|1blg100,46,63,1|1bxoovz,46,63,1|1bxoow0,44,62,0|1c463nz,44,62,0|1c463o0,46,63,1|1cgerjz,46,63,1|1cgerk0,44,62,0|1cmw6bz,44,62,0|1cmw6c0,46,63,1|1cz4u7z,46,63,1|1cz4u80,44,62,0|1d5m8zz,44,62,0|1d5m900,46,63,1|1dhuwvz,46,63,1|1dhuww0,44,62,0|1docbnz,44,62,0|1docbo0,46,63,1|1e0kzjz,46,63,1|1e0kzk0,44,62,0|1e7fczz,44,62,0|1e7fd00,46,63,1|1ejo0vz,46,63,1|1ejo0w0,44,62,0|1eq5fnz,44,62,0|1eq5fo0,46,63,1|1f2e3jz,46,63,1|1f2e3k0,44,62,0|1f8vibz,44,62,0|1f8vic0,46,63,1|1fl467z,46,63,1|1fl4680,44,62,0|1frlkzz,44,62,0|1frll00,46,63,1|1g3u8vz,46,63,1|1g3u8w0,44,62,0|1gabnnz,44,62,0|1gabno0,46,63,1|1gmkbjz,46,63,1|1gmkbk0,44,62,0|1gt1qbz,44,62,0|1gt1qc0,46,63,1|1h5ae7z,46,63,1|1h5ae80,44,62,0|1hc4rnz,44,62,0|1hc4ro0,46,63,1|1hodfjz,46,63,1|1hodfk0,44,62,0|1huuubz,44,62,0|1huuuc0,46,63,1|1i73i7z,46,63,1|1i73i80,44,62,0|1idkwzz,44,62,0|1idkx00,46,63,1|1iptkvz,46,63,1|1iptkw0,44,62,0|1iwaznz,44,62,0|1iwazo0,46,63,1|1j8jnjz,46,63,1|1j8jnk0,44,62,0|1jf12bz,44,62,0|1jf12c0,46,63,1|1jr9q7z,46,63,1|1jr9q80,44,62,0|1jy43nz,44,62,0|1jy43o0,46,63,1|1kacrjz,46,63,1|1kacrk0,44,62,0|1kgu6bz,44,62,0|1kgu6c0,46,63,1|1kt2u7z,46,63,1|1kt2u80,44,62,0|1kzk8zz,44,62,0|1kzk900,46,63,1|1lbswvz,46,63,1|1lbsww0,44,62,0|1liabnz,44,62,0|1liabo0,46,63,1|1luizjz,46,63,1|1luizk0,44,62,0|1m10ebz,44,62,0|1m10ec0,46,63,1|1md927z,46,63,1|1md9280,44,62,0|1mjqgzz,44,62,0|1mjqh00,46,63,1|1mvz4vz,46,63,1|1mvz4w0,44,62,0|1n2tibz,44,62,0|1n2tic0,46,63,1|1nf267z,46,63,1|1nf2680,44,62,0|1nljkzz,44,62,0|1nljl00,46,63,1|1nxs8vz,46,63,1|1nxs8w0,44,62,0|1o49nnz,44,62,0|1o49no0,46,63,1|1ogibjz,46,63,1|1ogibk0,44,62,0|1omzqbz,44,62,0|1omzqc0,46,63,1|1oz8e7z,46,63,1|1oz8e80,44,62,0|1p5pszz,44,62,0|1p5pt00,46,63,1|1phygvz,46,63,1|1phygw0,44,62,0|1posubz,44,62,0|1posuc0,46,63,1|1q11i7z,46,63,1|1q11i80,44,62,0|1q7iwzz,44,62,0|1q7ix00,46,63,1|1qjrkvz,46,63,1|1qjrkw0,44,62,0|1qq8znz,44,62,0|1qq8zo0,46,63,1|1r2hnjz,46,63,1|1r2hnk0,44,62,0|1r8z2bz,44,62,0|1r8z2c0,46,63,1|1rl7q7z,46,63,1|1rl7q80,44,62,0|1rrp4zz,44,62,0|1rrp500,46,63,1|1s3xsvz,46,63,1|1s3xsw0,44,62,0|1saf7nz,44,62,0|1saf7o0,46,63,1|1smnvjz,46,63,1|1smnvk0,44,62,0|1sti8zz,44,62,0|1sti900,46,63,1|1t5qwvz,46,63,1|1t5qww0,44,62,0|1tc8bnz,44,62,0|1tc8bo0,46,63,1|1togzjz,46,63,1|1togzk0,44,62,0|1tuyebz,44,62,0|1tuyec0,46,63,1|1u7727z,46,63,1|1u77280,44,62,0|1udogzz,44,62,0|1udoh00,46,63,1|1upx4vz,46,63,1|1upx4w0,44,62,0|1uwejnz,44,62,0|1uwejo0,46,63,1|1v8n7jz,46,63,1|1v8n7k0,44,62,0|1vf4mbz,44,62,0|1vf4mc0,46,63,1|1vrda7z,46,63,1|1vrda80,44,62,0|NaN,44,62,0",
        "America/Campo_Grande|,0,72,0|-t85hvx,0,72,0|-t85hvw,41,40,0|-jyl7o1,41,40,0|-jyl7o0,38,41,1|-jpayc1,38,41,1|-jpayc0,41,40,0|-jfsa81,41,40,0|-jfsa80,38,41,1|-j6j101,38,41,1|-j6j100,41,40,0|-ahcvk1,41,40,0|-ahcvk0,38,41,1|-aad0w1,38,41,1|-aad0w0,41,40,0|-9yky81,41,40,0|-9yky80,38,41,1|-9scyc1,38,41,1|-9scyc0,41,40,0|-9ft0w1,41,40,0|-9ft0w0,38,41,1|-99j6c1,38,41,1|-99j6c0,41,40,0|-8wz8w1,41,40,0|-8wz8w0,38,41,1|-8scno1,38,41,1|-8scno0,41,40,0|-35xjk1,41,40,0|-35xjk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2kdm81,41,40,0|-2kdm80,38,41,1|-2hcfo1,38,41,1|-2hcfo0,41,40,0|-24qnk1,41,40,0|-24qnk0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1nia81,41,40,0|-1nia80,38,41,1|-1hc501,38,41,1|-1hc500,41,40,0|-14qcw1,41,40,0|-14qcw0,38,41,1|-yid01,38,41,1|-yid00,41,40,0|89jf3z,41,40,0|89jf40,38,41,1|8gdmzz,38,41,1|8gdn00,41,40,0|8rwj3z,41,40,0|8rwj40,38,41,1|8xnuzz,38,41,1|8xnv00,41,40,0|9aogfz,41,40,0|9aogg0,38,41,1|9g2tnz,38,41,1|9g2to0,41,40,0|9t1kfz,41,40,0|9t1kg0,38,41,1|9yfxnz,38,41,1|9yfxo0,41,40,0|abrn3z,41,40,0|abrn40,38,41,1|ahvxnz,38,41,1|ahvxo0,41,40,0|auuofz,41,40,0|auuog0,38,41,1|b0yyzz,38,41,1|b0yz00,41,40,0|bdkr3z,41,40,0|bdkr40,38,41,1|bjc2zz,38,41,1|bjc300,41,40,0|bwnsfz,41,40,0|bwnsg0,38,41,1|c1p6zz,38,41,1|c1p700,41,40,0|cf0wfz,41,40,0|cf0wg0,38,41,1|cli5nz,38,41,1|cli5o0,41,40,0|cxqz3z,41,40,0|cxqz40,38,41,1|d488bz,38,41,1|d488c0,41,40,0|dgh1rz,41,40,0|dgh1s0,38,41,1|dmlcbz,38,41,1|dmlcc0,41,40,0|dyu5rz,41,40,0|dyu5s0,38,41,1|e5odnz,38,41,1|e5odo0,41,40,0|ehm33z,41,40,0|ehm340,38,41,1|ep4dnz,38,41,1|ep4do0,41,40,0|f0n9rz,41,40,0|f0n9s0,38,41,1|f7hhnz,38,41,1|f7hho0,41,40,0|fj0drz,41,40,0|fj0ds0,38,41,1|fqkizz,38,41,1|fqkj00,41,40,0|g23f3z,41,40,0|g23f40,38,41,1|g8xmzz,38,41,1|g8xn00,41,40,0|gl6gfz,41,40,0|gl6gg0,38,41,1|grnpnz,38,41,1|grnpo0,41,40,0|h4zf3z,41,40,0|h4zf40,38,41,1|hadsbz,38,41,1|hadsc0,41,40,0|hmzkfz,41,40,0|hmzkg0,38,41,1|ht3uzz,38,41,1|ht3v00,41,40,0|i6j9rz,41,40,0|i6j9s0,38,41,1|ic6wbz,38,41,1|ic6wc0,41,40,0|iofprz,41,40,0|iofps0,38,41,1|iuwyzz,38,41,1|iuwz00,41,40,0|j88ofz,41,40,0|j88og0,38,41,1|je00bz,38,41,1|je00c0,41,40,0|jpvv3z,41,40,0|jpvv40,38,41,1|jwd4bz,38,41,1|jwd4c0,41,40,0|k8ywfz,41,40,0|k8ywg0,38,41,1|kf36zz,38,41,1|kf3700,41,40,0|kroz3z,41,40,0|kroz40,38,41,1|ky68bz,38,41,1|ky68c0,41,40,0|laf1rz,41,40,0|laf1s0,38,41,1|lgwazz,38,41,1|lgwb00,41,40,0|lt54fz,41,40,0|lt54g0,38,41,1|lzzcbz,38,41,1|lzzcc0,41,40,0|mc85rz,41,40,0|mc85s0,38,41,1|micgbz,38,41,1|micgc0,41,40,0|muy8fz,41,40,0|muy8g0,38,41,1|n12izz,38,41,1|n12j00,41,40,0|ndob3z,41,40,0|ndob40,38,41,1|nk5kbz,38,41,1|nk5kc0,41,40,0|nwedrz,41,40,0|nweds0,38,41,1|o2vmzz,38,41,1|o2vn00,41,40,0|of4gfz,41,40,0|of4gg0,38,41,1|ollpnz,38,41,1|ollpo0,41,40,0|oxuj3z,41,40,0|oxuj40,38,41,1|p4bsbz,38,41,1|p4bsc0,41,40,0|phnhrz,41,40,0|phnhs0,38,41,1|pn1uzz,38,41,1|pn1v00,41,40,0|NaN,41,40,0",
        "America/Cancun|,0,73,0|-p1u7c1,0,73,0|-p1u7c0,45,63,0|69667z,45,63,0|696680,43,59,0|6sej7z,43,59,0|6sej80,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxa3z,47,59,1|dzxa40,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|eincrz,47,59,1|eincs0,43,59,0|eqxi3z,43,59,0|eqxi40,60,40,1|ex1snz,60,40,1|ex1so0,47,59,1|f1dffz,47,59,1|f1dfg0,45,63,0|f9nnjz,45,63,0|f9nnk0,47,59,1|fkggrz,47,59,1|fkggs0,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36jfz,47,59,1|g36jg0,45,63,0|gcwm7z,45,63,0|gcwm80,47,59,1|gkgrfz,47,59,1|gkgrg0,45,63,0|gu6u7z,45,63,0|gu6u80,47,59,1|h4morz,47,59,1|h4mos0,45,63,0|hcwwvz,45,63,0|hcwww0,47,59,1|hncrfz,47,59,1|hncrg0,45,63,0|hvmzjz,45,63,0|hvmzk0,47,59,1|i6fsrz,47,59,1|i6fss0,45,63,0|ied27z,45,63,0|ied280,47,59,1|ip5vfz,47,59,1|ip5vg0,45,63,0|ix34vz,45,63,0|ix34w0,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jft7jz,45,63,0|jft7k0,47,59,1|jqm0rz,47,59,1|jqm0s0,45,63,0|jyw8vz,45,63,0|jyw8w0,47,59,1|k9c3fz,47,59,1|k9c3g0,45,63,0|khmbjz,45,63,0|khmbk0,47,59,1|ks263z,47,59,1|ks2640,45,63,0|l0ce7z,45,63,0|l0ce80,47,59,1|lb57fz,47,59,1|lb57g0,45,63,0|lj2gvz,45,63,0|lj2gw0,47,59,1|ltva3z,47,59,1|ltva40,45,63,0|m1sjjz,45,63,0|m1sjk0,47,59,1|mclcrz,47,59,1|mclcs0,45,63,0|mkvkvz,45,63,0|mkvkw0,47,59,1|mvbffz,47,59,1|mvbfg0,45,63,0|n3lnjz,45,63,0|n3lnk0,47,59,1|ne1i3z,47,59,1|ne1i40,45,63,0|nj327z,45,63,0|nj3280,43,59,0|NaN,43,59,0",
        "America/Caracas|,0,74,0|-15r0wxt,0,74,0|-15r0wxs,40,75,0|-u7lcxx,40,75,0|-u7lcxw,61,76,0|-2lx4u1,61,76,0|-2lx4u0,41,40,0|jsrsrz,41,40,0|jsrss0,61,76,0|o6hkrz,61,76,0|o6hks0,41,40,0|NaN,41,40,0",
        "America/Cayenne|,0,77,0|-uj7yb5,0,77,0|-uj7yb4,41,40,0|-16brk1,41,40,0|-16brk0,38,41,0|NaN,38,41,0",
        "America/Cayman|,0,57,0|-15r0ult,0,57,0|-15r0uls,40,58,0|-w757vd,40,58,0|-w757vc,43,59,0|NaN,43,59,0",
        "America/Chicago|,0,78,0|-18y0m01,0,78,0|-18y0m00,45,63,0|-r0esg1,45,63,0|-r0esg0,47,59,1|-qplz81,47,59,1|-qplz80,45,63,0|-qhops1,45,63,0|-qhops0,47,59,1|-q6vwk1,47,59,1|-q6vwk0,45,63,0|-pv01s1,45,63,0|-pv01s0,47,59,1|-pnsv81,47,59,1|-pnsv80,45,63,0|-pg8kg1,45,63,0|-pg8kg0,47,59,1|-p52sk1,47,59,1|-p52sk0,45,63,0|-ovpog1,45,63,0|-ovpog0,47,59,1|-oo5j81,47,59,1|-oo5j80,45,63,0|-oczls1,45,63,0|-oczls0,47,59,1|-o52hw1,47,59,1|-o52hw0,45,63,0|-nu9j41,45,63,0|-nu9j40,47,59,1|-nmcf81,47,59,1|-nmcf80,45,63,0|-nbjgg1,45,63,0|-nbjgg0,47,59,1|-n3mck1,47,59,1|-n3mck0,45,63,0|-mstds1,45,63,0|-mstds0,47,59,1|-mkw9w1,47,59,1|-mkw9w0,45,63,0|-ma3b41,45,63,0|-ma3b40,47,59,1|-m26781,47,59,1|-m26780,45,63,0|-lr09s1,45,63,0|-lr09s0,47,59,1|-lj35w1,47,59,1|-lj35w0,45,63,0|-l8a741,45,63,0|-l8a740,47,59,1|-l0d381,47,59,1|-l0d380,45,63,0|-kpk4g1,45,63,0|-kpk4g0,47,59,1|-khn0k1,47,59,1|-khn0k0,45,63,0|-k6u1s1,45,63,0|-k6u1s0,47,59,1|-jywxw1,47,59,1|-jywxw0,45,63,0|-jo3z41,45,63,0|-jo3z40,47,59,1|-jg6v81,47,59,1|-jg6v80,45,63,0|-j50xs1,45,63,0|-j50xs0,47,59,1|-ixgsk1,47,59,1|-ixgsk0,45,63,0|-imav41,45,63,0|-imav40,47,59,1|-iedr81,47,59,1|-iedr80,45,63,0|-i3ksg1,45,63,0|-i3ksg0,47,59,1|-hvnok1,47,59,1|-hvnok0,45,63,0|-hnqf41,45,63,0|-hnqf40,43,59,0|-haev81,43,59,0|-haev80,45,63,0|-h24n41,45,63,0|-h24n40,47,59,1|-gu7j81,47,59,1|-gu7j80,45,63,0|-gjekg1,45,63,0|-gjekg0,47,59,1|-gbhgk1,47,59,1|-gbhgk0,45,63,0|-g0bj41,45,63,0|-g0bj40,47,59,1|-fsrdw1,47,59,1|-fsrdw0,45,63,0|-fhlgg1,45,63,0|-fhlgg0,47,59,1|-f9ock1,47,59,1|-f9ock0,45,63,0|-eyvds1,45,63,0|-eyvds0,47,59,1|-eqy9w1,47,59,1|-eqy9w0,45,63,0|-ek21s1,45,63,0|-ek21s0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cnp0k1,52,59,1|-cnp0k0,45,63,0|-ccw1s1,45,63,0|-ccw1s0,47,59,1|-c4yxw1,47,59,1|-c4yxw0,45,63,0|-bu5z41,45,63,0|-bu5z40,47,59,1|-bm8v81,47,59,1|-bm8v80,45,63,0|-bbfwg1,45,63,0|-bbfwg0,47,59,1|-b3isk1,47,59,1|-b3isk0,45,63,0|-aspts1,45,63,0|-aspts0,47,59,1|-akspw1,47,59,1|-akspw0,45,63,0|-a9msg1,45,63,0|-a9msg0,47,59,1|-a22n81,47,59,1|-a22n80,45,63,0|-9qwps1,45,63,0|-9qwps0,47,59,1|-9izlw1,47,59,1|-9izlw0,45,63,0|-986n41,45,63,0|-986n40,47,59,1|-909j81,47,59,1|-909j80,45,63,0|-8pgkg1,45,63,0|-8pgkg0,47,59,1|-8hjgk1,47,59,1|-8hjgk0,45,63,0|-86qhs1,45,63,0|-86qhs0,47,59,1|-7ytdw1,47,59,1|-7ytdw0,45,63,0|-7o0f41,45,63,0|-7o0f40,47,59,1|-7eahw1,47,59,1|-7eahw0,45,63,0|-74xds1,45,63,0|-74xds0,47,59,1|-6vkf81,47,59,1|-6vkf80,45,63,0|-6m7b41,45,63,0|-6m7b40,47,59,1|-6cuck1,47,59,1|-6cuck0,45,63,0|-63h8g1,45,63,0|-63h8g0,47,59,1|-5u49w1,47,59,1|-5u49w0,45,63,0|-5kr5s1,45,63,0|-5kr5s0,47,59,1|-5be781,47,59,1|-5be780,45,63,0|-521341,45,63,0|-521340,47,59,1|-4sb5w1,47,59,1|-4sb5w0,45,63,0|-4iy1s1,45,63,0|-4iy1s0,47,59,1|-49l381,47,59,1|-49l380,45,63,0|-407z41,45,63,0|-407z40,47,59,1|-3qv0k1,47,59,1|-3qv0k0,45,63,0|-3hhwg1,45,63,0|-3hhwg0,47,59,1|-384xw1,47,59,1|-384xw0,45,63,0|-2yrts1,45,63,0|-2yrts0,47,59,1|-2pev81,47,59,1|-2pev80,45,63,0|-2g1r41,45,63,0|-2g1r40,47,59,1|-26btw1,47,59,1|-26btw0,45,63,0|-1xbog1,45,63,0|-1xbog0,47,59,1|-1nlr81,47,59,1|-1nlr80,45,63,0|-1e8n41,45,63,0|-1e8n40,47,59,1|-14vok1,47,59,1|-14vok0,45,63,0|-vikg1,45,63,0|-vikg0,47,59,1|-m5lw1,47,59,1|-m5lw0,45,63,0|-cshs1,45,63,0|-cshs0,47,59,1|-3fj81,47,59,1|-3fj80,45,63,0|5xkvz,45,63,0|5xkw0,47,59,1|fajfz,47,59,1|fajg0,45,63,0|onnjz,45,63,0|onnk0,47,59,1|ydkrz,47,59,1|ydks0,45,63,0|17qovz,45,63,0|17qow0,47,59,1|1h3nfz,47,59,1|1h3ng0,45,63,0|1qgrjz,45,63,0|1qgrk0,47,59,1|1ztq3z,47,59,1|1ztq40,45,63,0|23ffjz,45,63,0|23ffk0,47,59,1|2ijsrz,47,59,1|2ijss0,45,63,0|2oo8vz,45,63,0|2oo8w0,47,59,1|319vfz,47,59,1|319vg0,45,63,0|3amzjz,45,63,0|3amzk0,47,59,1|3kcwrz,47,59,1|3kcws0,45,63,0|3td27z,45,63,0|3td280,47,59,1|432zfz,47,59,1|432zg0,45,63,0|4cg3jz,45,63,0|4cg3k0,47,59,1|4lt23z,47,59,1|4lt240,45,63,0|4v667z,45,63,0|4v6680,47,59,1|54j4rz,47,59,1|54j4s0,45,63,0|5dw8vz,45,63,0|5dw8w0,47,59,1|5n97fz,47,59,1|5n97g0,45,63,0|5wmbjz,45,63,0|5wmbk0,47,59,1|65za3z,47,59,1|65za40,45,63,0|6fce7z,45,63,0|6fce80,47,59,1|6p2bfz,47,59,1|6p2bg0,45,63,0|6y2gvz,45,63,0|6y2gw0,47,59,1|77se3z,47,59,1|77se40,45,63,0|7h5i7z,45,63,0|7h5i80,47,59,1|7qigrz,47,59,1|7qigs0,45,63,0|7zvkvz,45,63,0|7zvkw0,47,59,1|898jfz,47,59,1|898jg0,45,63,0|8ilnjz,45,63,0|8ilnk0,47,59,1|8rym3z,47,59,1|8rym40,45,63,0|908u7z,45,63,0|908u80,47,59,1|9aoorz,47,59,1|9aoos0,45,63,0|9iywvz,45,63,0|9iyww0,47,59,1|9trq3z,47,59,1|9trq40,45,63,0|a1ozjz,45,63,0|a1ozk0,47,59,1|achsrz,47,59,1|achss0,45,63,0|akf27z,45,63,0|akf280,47,59,1|av7vfz,47,59,1|av7vg0,45,63,0|b3i3jz,45,63,0|b3i3k0,47,59,1|bdxy3z,47,59,1|bdxy40,45,63,0|bm867z,45,63,0|bm8680,47,59,1|bwo0rz,47,59,1|bwo0s0,45,63,0|c4y8vz,45,63,0|c4y8w0,47,59,1|cfr23z,47,59,1|cfr240,45,63,0|cnobjz,45,63,0|cnobk0,47,59,1|cyh4rz,47,59,1|cyh4s0,45,63,0|d6ee7z,45,63,0|d6ee80,47,59,1|dh77fz,47,59,1|dh77g0,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxa3z,47,59,1|dzxa40,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|eincrz,47,59,1|eincs0,45,63,0|eqxkvz,45,63,0|eqxkw0,47,59,1|f1dffz,47,59,1|f1dfg0,45,63,0|f9nnjz,45,63,0|f9nnk0,47,59,1|fkggrz,47,59,1|fkggs0,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36jfz,47,59,1|g36jg0,45,63,0|gb3svz,45,63,0|gb3sw0,47,59,1|glwm3z,47,59,1|glwm40,45,63,0|gu6u7z,45,63,0|gu6u80,47,59,1|h4morz,47,59,1|h4mos0,45,63,0|hcwwvz,45,63,0|hcwww0,47,59,1|hncrfz,47,59,1|hncrg0,45,63,0|hvmzjz,45,63,0|hvmzk0,47,59,1|i6fsrz,47,59,1|i6fss0,45,63,0|ied27z,45,63,0|ied280,47,59,1|ip5vfz,47,59,1|ip5vg0,45,63,0|ix34vz,45,63,0|ix34w0,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jeqbjz,45,63,0|jeqbk0,47,59,1|jqyzfz,47,59,1|jqyzg0,45,63,0|jxge7z,45,63,0|jxge80,47,59,1|k9p23z,47,59,1|k9p240,45,63,0|kg6gvz,45,63,0|kg6gw0,47,59,1|ksf4rz,47,59,1|ksf4s0,45,63,0|kz9i7z,45,63,0|kz9i80,47,59,1|lbi63z,47,59,1|lbi640,45,63,0|lhzkvz,45,63,0|lhzkw0,47,59,1|lu88rz,47,59,1|lu88s0,45,63,0|m0pnjz,45,63,0|m0pnk0,47,59,1|mcybfz,47,59,1|mcybg0,45,63,0|mjfq7z,45,63,0|mjfq80,47,59,1|mvoe3z,47,59,1|mvoe40,45,63,0|n25svz,45,63,0|n25sw0,47,59,1|neegrz,47,59,1|neegs0,45,63,0|nkvvjz,45,63,0|nkvvk0,47,59,1|nx4jfz,47,59,1|nx4jg0,45,63,0|o3ywvz,45,63,0|o3yww0,47,59,1|og7krz,47,59,1|og7ks0,45,63,0|omozjz,45,63,0|omozk0,47,59,1|oyxnfz,47,59,1|oyxng0,45,63,0|p5f27z,45,63,0|p5f280,47,59,1|phnq3z,47,59,1|phnq40,45,63,0|po54vz,45,63,0|po54w0,47,59,1|q0dsrz,47,59,1|q0dss0,45,63,0|q6v7jz,45,63,0|q6v7k0,47,59,1|qj3vfz,47,59,1|qj3vg0,45,63,0|qpy8vz,45,63,0|qpy8w0,47,59,1|r26wrz,47,59,1|r26ws0,45,63,0|r8objz,45,63,0|r8obk0,47,59,1|rkwzfz,47,59,1|rkwzg0,45,63,0|rree7z,45,63,0|rree80,47,59,1|s3n23z,47,59,1|s3n240,45,63,0|sa4gvz,45,63,0|sa4gw0,47,59,1|smd4rz,47,59,1|smd4s0,45,63,0|ssujjz,45,63,0|ssujk0,47,59,1|t537fz,47,59,1|t537g0,45,63,0|tbkm7z,45,63,0|tbkm80,47,59,1|tnta3z,47,59,1|tnta40,45,63,0|tunnjz,45,63,0|tunnk0,47,59,1|u6wbfz,47,59,1|u6wbg0,45,63,0|uddq7z,45,63,0|uddq80,47,59,1|upme3z,47,59,1|upme40,45,63,0|uw3svz,45,63,0|uw3sw0,47,59,1|v8cgrz,47,59,1|v8cgs0,45,63,0|vetvjz,45,63,0|vetvk0,47,59,1|vr2jfz,47,59,1|vr2jg0,45,63,0|vxjy7z,45,63,0|vxjy80,47,59,1|w9sm3z,47,59,1|w9sm40,45,63,0|wgmzjz,45,63,0|wgmzk0,47,59,1|wsvnfz,47,59,1|wsvng0,45,63,0|wzd27z,45,63,0|wzd280,47,59,1|xblq3z,47,59,1|xblq40,45,63,0|xi34vz,45,63,0|xi34w0,47,59,1|xubsrz,47,59,1|xubss0,45,63,0|y0t7jz,45,63,0|y0t7k0,47,59,1|yd1vfz,47,59,1|yd1vg0,45,63,0|yjja7z,45,63,0|yjja80,47,59,1|yvry3z,47,59,1|yvry40,45,63,0|z29cvz,45,63,0|z29cw0,47,59,1|zei0rz,47,59,1|zei0s0,45,63,0|zlce7z,45,63,0|zlce80,47,59,1|zxl23z,47,59,1|zxl240,45,63,0|1042gvz,45,63,0|1042gw0,47,59,1|10gb4rz,47,59,1|10gb4s0,45,63,0|10msjjz,45,63,0|10msjk0,47,59,1|10z17fz,47,59,1|10z17g0,45,63,0|115im7z,45,63,0|115im80,47,59,1|11hra3z,47,59,1|11hra40,45,63,0|11o8ovz,45,63,0|11o8ow0,47,59,1|120hcrz,47,59,1|120hcs0,45,63,0|126yrjz,45,63,0|126yrk0,47,59,1|12j7ffz,47,59,1|12j7fg0,45,63,0|12q1svz,45,63,0|12q1sw0,47,59,1|132agrz,47,59,1|132ags0,45,63,0|138rvjz,45,63,0|138rvk0,47,59,1|13l0jfz,47,59,1|13l0jg0,45,63,0|13rhy7z,45,63,0|13rhy80,47,59,1|143qm3z,47,59,1|143qm40,45,63,0|14a80vz,45,63,0|14a80w0,47,59,1|14mgorz,47,59,1|14mgos0,45,63,0|14sy3jz,45,63,0|14sy3k0,47,59,1|1556rfz,47,59,1|1556rg0,45,63,0|15c14vz,45,63,0|15c14w0,47,59,1|15o9srz,47,59,1|15o9ss0,45,63,0|15ur7jz,45,63,0|15ur7k0,47,59,1|166zvfz,47,59,1|166zvg0,45,63,0|16dha7z,45,63,0|16dha80,47,59,1|16ppy3z,47,59,1|16ppy40,45,63,0|16w7cvz,45,63,0|16w7cw0,47,59,1|178g0rz,47,59,1|178g0s0,45,63,0|17exfjz,45,63,0|17exfk0,47,59,1|17r63fz,47,59,1|17r63g0,45,63,0|17xni7z,45,63,0|17xni80,47,59,1|189w63z,47,59,1|189w640,45,63,0|18gqjjz,45,63,0|18gqjk0,47,59,1|18sz7fz,47,59,1|18sz7g0,45,63,0|18zgm7z,45,63,0|18zgm80,47,59,1|19bpa3z,47,59,1|19bpa40,45,63,0|19i6ovz,45,63,0|19i6ow0,47,59,1|19ufcrz,47,59,1|19ufcs0,45,63,0|1a0wrjz,45,63,0|1a0wrk0,47,59,1|1ad5ffz,47,59,1|1ad5fg0,45,63,0|1ajmu7z,45,63,0|1ajmu80,47,59,1|1avvi3z,47,59,1|1avvi40,45,63,0|1b2pvjz,45,63,0|1b2pvk0,47,59,1|1beyjfz,47,59,1|1beyjg0,45,63,0|1blfy7z,45,63,0|1blfy80,47,59,1|1bxom3z,47,59,1|1bxom40,45,63,0|1c460vz,45,63,0|1c460w0,47,59,1|1cgeorz,47,59,1|1cgeos0,45,63,0|1cmw3jz,45,63,0|1cmw3k0,47,59,1|1cz4rfz,47,59,1|1cz4rg0,45,63,0|1d5m67z,45,63,0|1d5m680,47,59,1|1dhuu3z,47,59,1|1dhuu40,45,63,0|1doc8vz,45,63,0|1doc8w0,47,59,1|1e0kwrz,47,59,1|1e0kws0,45,63,0|1e7fa7z,45,63,0|1e7fa80,47,59,1|1ejny3z,47,59,1|1ejny40,45,63,0|1eq5cvz,45,63,0|1eq5cw0,47,59,1|1f2e0rz,47,59,1|1f2e0s0,45,63,0|1f8vfjz,45,63,0|1f8vfk0,47,59,1|1fl43fz,47,59,1|1fl43g0,45,63,0|1frli7z,45,63,0|1frli80,47,59,1|1g3u63z,47,59,1|1g3u640,45,63,0|1gabkvz,45,63,0|1gabkw0,47,59,1|1gmk8rz,47,59,1|1gmk8s0,45,63,0|1gt1njz,45,63,0|1gt1nk0,47,59,1|1h5abfz,47,59,1|1h5abg0,45,63,0|1hc4ovz,45,63,0|1hc4ow0,47,59,1|1hodcrz,47,59,1|1hodcs0,45,63,0|1huurjz,45,63,0|1huurk0,47,59,1|1i73ffz,47,59,1|1i73fg0,45,63,0|1idku7z,45,63,0|1idku80,47,59,1|1ipti3z,47,59,1|1ipti40,45,63,0|1iwawvz,45,63,0|1iwaww0,47,59,1|1j8jkrz,47,59,1|1j8jks0,45,63,0|1jf0zjz,45,63,0|1jf0zk0,47,59,1|1jr9nfz,47,59,1|1jr9ng0,45,63,0|1jy40vz,45,63,0|1jy40w0,47,59,1|1kacorz,47,59,1|1kacos0,45,63,0|1kgu3jz,45,63,0|1kgu3k0,47,59,1|1kt2rfz,47,59,1|1kt2rg0,45,63,0|1kzk67z,45,63,0|1kzk680,47,59,1|1lbsu3z,47,59,1|1lbsu40,45,63,0|1lia8vz,45,63,0|1lia8w0,47,59,1|1luiwrz,47,59,1|1luiws0,45,63,0|1m10bjz,45,63,0|1m10bk0,47,59,1|1md8zfz,47,59,1|1md8zg0,45,63,0|1mjqe7z,45,63,0|1mjqe80,47,59,1|1mvz23z,47,59,1|1mvz240,45,63,0|1n2tfjz,45,63,0|1n2tfk0,47,59,1|1nf23fz,47,59,1|1nf23g0,45,63,0|1nlji7z,45,63,0|1nlji80,47,59,1|1nxs63z,47,59,1|1nxs640,45,63,0|1o49kvz,45,63,0|1o49kw0,47,59,1|1ogi8rz,47,59,1|1ogi8s0,45,63,0|1omznjz,45,63,0|1omznk0,47,59,1|1oz8bfz,47,59,1|1oz8bg0,45,63,0|1p5pq7z,45,63,0|1p5pq80,47,59,1|1phye3z,47,59,1|1phye40,45,63,0|1posrjz,45,63,0|1posrk0,47,59,1|1q11ffz,47,59,1|1q11fg0,45,63,0|1q7iu7z,45,63,0|1q7iu80,47,59,1|1qjri3z,47,59,1|1qjri40,45,63,0|1qq8wvz,45,63,0|1qq8ww0,47,59,1|1r2hkrz,47,59,1|1r2hks0,45,63,0|1r8yzjz,45,63,0|1r8yzk0,47,59,1|1rl7nfz,47,59,1|1rl7ng0,45,63,0|1rrp27z,45,63,0|1rrp280,47,59,1|1s3xq3z,47,59,1|1s3xq40,45,63,0|1saf4vz,45,63,0|1saf4w0,47,59,1|1smnsrz,47,59,1|1smnss0,45,63,0|1sti67z,45,63,0|1sti680,47,59,1|1t5qu3z,47,59,1|1t5qu40,45,63,0|1tc88vz,45,63,0|1tc88w0,47,59,1|1togwrz,47,59,1|1togws0,45,63,0|1tuybjz,45,63,0|1tuybk0,47,59,1|1u76zfz,47,59,1|1u76zg0,45,63,0|1udoe7z,45,63,0|1udoe80,47,59,1|1upx23z,47,59,1|1upx240,45,63,0|1uwegvz,45,63,0|1uwegw0,47,59,1|1v8n4rz,47,59,1|1v8n4s0,45,63,0|1vf4jjz,45,63,0|1vf4jk0,47,59,1|1vrd7fz,47,59,1|1vrd7g0,45,63,0|NaN,45,63,0",
        "America/Chihuahua|,0,79,0|-p1u4k1,0,79,0|-p1u4k0,44,62,0|-m7ock1,44,62,0|-m7ock0,45,63,0|-kf67c1,45,63,0|-kf67c0,44,62,0|-k6mpw1,44,62,0|-k6mpw0,46,63,1|-jypm01,46,63,1|-jypm00,44,62,0|-jpan81,44,62,0|-jpan80,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxa3z,47,59,1|dzxa40,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|eincrz,47,59,1|eincs0,45,63,0|eqxnnz,45,63,0|eqxno0,46,63,1|f1di7z,46,63,1|f1di80,44,62,0|f9nqbz,44,62,0|f9nqc0,46,63,1|fkgjjz,46,63,1|fkgjk0,44,62,0|fsdszz,44,62,0|fsdt00,46,63,1|g36m7z,46,63,1|g36m80,44,62,0|gcwozz,44,62,0|gcwp00,46,63,1|gkgu7z,46,63,1|gkgu80,44,62,0|gu6wzz,44,62,0|gu6x00,46,63,1|h4mrjz,46,63,1|h4mrk0,44,62,0|hcwznz,44,62,0|hcwzo0,46,63,1|hncu7z,46,63,1|hncu80,44,62,0|hvn2bz,44,62,0|hvn2c0,46,63,1|i6fvjz,46,63,1|i6fvk0,44,62,0|ied4zz,44,62,0|ied500,46,63,1|ip5y7z,46,63,1|ip5y80,44,62,0|ix37nz,44,62,0|ix37o0,46,63,1|j7w0vz,46,63,1|j7w0w0,44,62,0|jftabz,44,62,0|jftac0,46,63,1|jqm3jz,46,63,1|jqm3k0,44,62,0|jywbnz,44,62,0|jywbo0,46,63,1|k9c67z,46,63,1|k9c680,44,62,0|khmebz,44,62,0|khmec0,46,63,1|ks28vz,46,63,1|ks28w0,44,62,0|l0cgzz,44,62,0|l0ch00,46,63,1|lb5a7z,46,63,1|lb5a80,44,62,0|lj2jnz,44,62,0|lj2jo0,46,63,1|ltvcvz,46,63,1|ltvcw0,44,62,0|m1smbz,44,62,0|m1smc0,46,63,1|mclfjz,46,63,1|mclfk0,44,62,0|mkvnnz,44,62,0|mkvno0,46,63,1|mvbi7z,46,63,1|mvbi80,44,62,0|n3lqbz,44,62,0|n3lqc0,46,63,1|ne1kvz,46,63,1|ne1kw0,44,62,0|nmbszz,44,62,0|nmbt00,46,63,1|nwrnjz,46,63,1|nwrnk0,44,62,0|o51vnz,44,62,0|o51vo0,46,63,1|ofuovz,46,63,1|ofuow0,44,62,0|onrybz,44,62,0|onryc0,46,63,1|oykrjz,46,63,1|oykrk0,44,62,0|p6i0zz,44,62,0|p6i100,46,63,1|phau7z,46,63,1|phau80,44,62,0|ppl2bz,44,62,0|ppl2c0,46,63,1|q00wvz,46,63,1|q00ww0,44,62,0|q8b4zz,44,62,0|q8b500,46,63,1|qiqzjz,46,63,1|qiqzk0,44,62,0|qr17nz,44,62,0|qr17o0,46,63,1|r1u0vz,46,63,1|r1u0w0,44,62,0|r9rabz,44,62,0|r9rac0,46,63,1|rkk3jz,46,63,1|rkk3k0,45,63,0|NaN,45,63,0",
        "America/Ciudad_Juarez|,0,80,0|-p1u4k1,0,80,0|-p1u4k0,44,62,0|-m7ock1,44,62,0|-m7ock0,45,63,0|-kf67c1,45,63,0|-kf67c0,44,62,0|-k6mpw1,44,62,0|-k6mpw0,46,63,1|-jypm01,46,63,1|-jypm00,44,62,0|-jpan81,44,62,0|-jpan80,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxa3z,47,59,1|dzxa40,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|eincrz,47,59,1|eincs0,45,63,0|eqxnnz,45,63,0|eqxno0,46,63,1|f1di7z,46,63,1|f1di80,44,62,0|f9nqbz,44,62,0|f9nqc0,46,63,1|fkgjjz,46,63,1|fkgjk0,44,62,0|fsdszz,44,62,0|fsdt00,46,63,1|g36m7z,46,63,1|g36m80,44,62,0|gcwozz,44,62,0|gcwp00,46,63,1|gkgu7z,46,63,1|gkgu80,44,62,0|gu6wzz,44,62,0|gu6x00,46,63,1|h4mrjz,46,63,1|h4mrk0,44,62,0|hcwznz,44,62,0|hcwzo0,46,63,1|hncu7z,46,63,1|hncu80,44,62,0|hvn2bz,44,62,0|hvn2c0,46,63,1|i6fvjz,46,63,1|i6fvk0,44,62,0|ied4zz,44,62,0|ied500,46,63,1|ip5y7z,46,63,1|ip5y80,44,62,0|ix37nz,44,62,0|ix37o0,46,63,1|j7w0vz,46,63,1|j7w0w0,44,62,0|jftabz,44,62,0|jftac0,46,63,1|jqm3jz,46,63,1|jqm3k0,44,62,0|jywbnz,44,62,0|jywbo0,46,63,1|k9c67z,46,63,1|k9c680,44,62,0|khmebz,44,62,0|khmec0,46,63,1|ks28vz,46,63,1|ks28w0,44,62,0|kz9kzz,44,62,0|kz9l00,46,63,1|lbi8vz,46,63,1|lbi8w0,44,62,0|lhznnz,44,62,0|lhzno0,46,63,1|lu8bjz,46,63,1|lu8bk0,44,62,0|m0pqbz,44,62,0|m0pqc0,46,63,1|mcye7z,46,63,1|mcye80,44,62,0|mjfszz,44,62,0|mjft00,46,63,1|mvogvz,46,63,1|mvogw0,44,62,0|n25vnz,44,62,0|n25vo0,46,63,1|neejjz,46,63,1|neejk0,44,62,0|nkvybz,44,62,0|nkvyc0,46,63,1|nx4m7z,46,63,1|nx4m80,44,62,0|o3yznz,44,62,0|o3yzo0,46,63,1|og7njz,46,63,1|og7nk0,44,62,0|omp2bz,44,62,0|omp2c0,46,63,1|oyxq7z,46,63,1|oyxq80,44,62,0|p5f4zz,44,62,0|p5f500,46,63,1|phnsvz,46,63,1|phnsw0,44,62,0|po57nz,44,62,0|po57o0,46,63,1|q0dvjz,46,63,1|q0dvk0,44,62,0|q6vabz,44,62,0|q6vac0,46,63,1|qj3y7z,46,63,1|qj3y80,44,62,0|qpybnz,44,62,0|qpybo0,46,63,1|r26zjz,46,63,1|r26zk0,44,62,0|r8oebz,44,62,0|r8oec0,46,63,1|rkk3jz,46,63,1|rkk3k0,45,63,0|rm5cnz,45,63,0|rm5co0,44,62,0|rregzz,44,62,0|rreh00,46,63,1|s3n4vz,46,63,1|s3n4w0,44,62,0|sa4jnz,44,62,0|sa4jo0,46,63,1|smd7jz,46,63,1|smd7k0,44,62,0|ssumbz,44,62,0|ssumc0,46,63,1|t53a7z,46,63,1|t53a80,44,62,0|tbkozz,44,62,0|tbkp00,46,63,1|tntcvz,46,63,1|tntcw0,44,62,0|tunqbz,44,62,0|tunqc0,46,63,1|u6we7z,46,63,1|u6we80,44,62,0|uddszz,44,62,0|uddt00,46,63,1|upmgvz,46,63,1|upmgw0,44,62,0|uw3vnz,44,62,0|uw3vo0,46,63,1|v8cjjz,46,63,1|v8cjk0,44,62,0|vetybz,44,62,0|vetyc0,46,63,1|vr2m7z,46,63,1|vr2m80,44,62,0|vxk0zz,44,62,0|vxk100,46,63,1|w9sovz,46,63,1|w9sow0,44,62,0|wgn2bz,44,62,0|wgn2c0,46,63,1|wsvq7z,46,63,1|wsvq80,44,62,0|wzd4zz,44,62,0|wzd500,46,63,1|xblsvz,46,63,1|xblsw0,44,62,0|xi37nz,44,62,0|xi37o0,46,63,1|xubvjz,46,63,1|xubvk0,44,62,0|y0tabz,44,62,0|y0tac0,46,63,1|yd1y7z,46,63,1|yd1y80,44,62,0|yjjczz,44,62,0|yjjd00,46,63,1|yvs0vz,46,63,1|yvs0w0,44,62,0|z29fnz,44,62,0|z29fo0,46,63,1|zei3jz,46,63,1|zei3k0,44,62,0|zlcgzz,44,62,0|zlch00,46,63,1|zxl4vz,46,63,1|zxl4w0,44,62,0|1042jnz,44,62,0|1042jo0,46,63,1|10gb7jz,46,63,1|10gb7k0,44,62,0|10msmbz,44,62,0|10msmc0,46,63,1|10z1a7z,46,63,1|10z1a80,44,62,0|115iozz,44,62,0|115ip00,46,63,1|11hrcvz,46,63,1|11hrcw0,44,62,0|11o8rnz,44,62,0|11o8ro0,46,63,1|120hfjz,46,63,1|120hfk0,44,62,0|126yubz,44,62,0|126yuc0,46,63,1|12j7i7z,46,63,1|12j7i80,44,62,0|12q1vnz,44,62,0|12q1vo0,46,63,1|132ajjz,46,63,1|132ajk0,44,62,0|138rybz,44,62,0|138ryc0,46,63,1|13l0m7z,46,63,1|13l0m80,44,62,0|13ri0zz,44,62,0|13ri100,46,63,1|143qovz,46,63,1|143qow0,44,62,0|14a83nz,44,62,0|14a83o0,46,63,1|14mgrjz,46,63,1|14mgrk0,44,62,0|14sy6bz,44,62,0|14sy6c0,46,63,1|1556u7z,46,63,1|1556u80,44,62,0|15c17nz,44,62,0|15c17o0,46,63,1|15o9vjz,46,63,1|15o9vk0,44,62,0|15urabz,44,62,0|15urac0,46,63,1|166zy7z,46,63,1|166zy80,44,62,0|16dhczz,44,62,0|16dhd00,46,63,1|16pq0vz,46,63,1|16pq0w0,44,62,0|16w7fnz,44,62,0|16w7fo0,46,63,1|178g3jz,46,63,1|178g3k0,44,62,0|17exibz,44,62,0|17exic0,46,63,1|17r667z,46,63,1|17r6680,44,62,0|17xnkzz,44,62,0|17xnl00,46,63,1|189w8vz,46,63,1|189w8w0,44,62,0|18gqmbz,44,62,0|18gqmc0,46,63,1|18sza7z,46,63,1|18sza80,44,62,0|18zgozz,44,62,0|18zgp00,46,63,1|19bpcvz,46,63,1|19bpcw0,44,62,0|19i6rnz,44,62,0|19i6ro0,46,63,1|19uffjz,46,63,1|19uffk0,44,62,0|1a0wubz,44,62,0|1a0wuc0,46,63,1|1ad5i7z,46,63,1|1ad5i80,44,62,0|1ajmwzz,44,62,0|1ajmx00,46,63,1|1avvkvz,46,63,1|1avvkw0,44,62,0|1b2pybz,44,62,0|1b2pyc0,46,63,1|1beym7z,46,63,1|1beym80,44,62,0|1blg0zz,44,62,0|1blg100,46,63,1|1bxoovz,46,63,1|1bxoow0,44,62,0|1c463nz,44,62,0|1c463o0,46,63,1|1cgerjz,46,63,1|1cgerk0,44,62,0|1cmw6bz,44,62,0|1cmw6c0,46,63,1|1cz4u7z,46,63,1|1cz4u80,44,62,0|1d5m8zz,44,62,0|1d5m900,46,63,1|1dhuwvz,46,63,1|1dhuww0,44,62,0|1docbnz,44,62,0|1docbo0,46,63,1|1e0kzjz,46,63,1|1e0kzk0,44,62,0|1e7fczz,44,62,0|1e7fd00,46,63,1|1ejo0vz,46,63,1|1ejo0w0,44,62,0|1eq5fnz,44,62,0|1eq5fo0,46,63,1|1f2e3jz,46,63,1|1f2e3k0,44,62,0|1f8vibz,44,62,0|1f8vic0,46,63,1|1fl467z,46,63,1|1fl4680,44,62,0|1frlkzz,44,62,0|1frll00,46,63,1|1g3u8vz,46,63,1|1g3u8w0,44,62,0|1gabnnz,44,62,0|1gabno0,46,63,1|1gmkbjz,46,63,1|1gmkbk0,44,62,0|1gt1qbz,44,62,0|1gt1qc0,46,63,1|1h5ae7z,46,63,1|1h5ae80,44,62,0|1hc4rnz,44,62,0|1hc4ro0,46,63,1|1hodfjz,46,63,1|1hodfk0,44,62,0|1huuubz,44,62,0|1huuuc0,46,63,1|1i73i7z,46,63,1|1i73i80,44,62,0|1idkwzz,44,62,0|1idkx00,46,63,1|1iptkvz,46,63,1|1iptkw0,44,62,0|1iwaznz,44,62,0|1iwazo0,46,63,1|1j8jnjz,46,63,1|1j8jnk0,44,62,0|1jf12bz,44,62,0|1jf12c0,46,63,1|1jr9q7z,46,63,1|1jr9q80,44,62,0|1jy43nz,44,62,0|1jy43o0,46,63,1|1kacrjz,46,63,1|1kacrk0,44,62,0|1kgu6bz,44,62,0|1kgu6c0,46,63,1|1kt2u7z,46,63,1|1kt2u80,44,62,0|1kzk8zz,44,62,0|1kzk900,46,63,1|1lbswvz,46,63,1|1lbsww0,44,62,0|1liabnz,44,62,0|1liabo0,46,63,1|1luizjz,46,63,1|1luizk0,44,62,0|1m10ebz,44,62,0|1m10ec0,46,63,1|1md927z,46,63,1|1md9280,44,62,0|1mjqgzz,44,62,0|1mjqh00,46,63,1|1mvz4vz,46,63,1|1mvz4w0,44,62,0|1n2tibz,44,62,0|1n2tic0,46,63,1|1nf267z,46,63,1|1nf2680,44,62,0|1nljkzz,44,62,0|1nljl00,46,63,1|1nxs8vz,46,63,1|1nxs8w0,44,62,0|1o49nnz,44,62,0|1o49no0,46,63,1|1ogibjz,46,63,1|1ogibk0,44,62,0|1omzqbz,44,62,0|1omzqc0,46,63,1|1oz8e7z,46,63,1|1oz8e80,44,62,0|1p5pszz,44,62,0|1p5pt00,46,63,1|1phygvz,46,63,1|1phygw0,44,62,0|1posubz,44,62,0|1posuc0,46,63,1|1q11i7z,46,63,1|1q11i80,44,62,0|1q7iwzz,44,62,0|1q7ix00,46,63,1|1qjrkvz,46,63,1|1qjrkw0,44,62,0|1qq8znz,44,62,0|1qq8zo0,46,63,1|1r2hnjz,46,63,1|1r2hnk0,44,62,0|1r8z2bz,44,62,0|1r8z2c0,46,63,1|1rl7q7z,46,63,1|1rl7q80,44,62,0|1rrp4zz,44,62,0|1rrp500,46,63,1|1s3xsvz,46,63,1|1s3xsw0,44,62,0|1saf7nz,44,62,0|1saf7o0,46,63,1|1smnvjz,46,63,1|1smnvk0,44,62,0|1sti8zz,44,62,0|1sti900,46,63,1|1t5qwvz,46,63,1|1t5qww0,44,62,0|1tc8bnz,44,62,0|1tc8bo0,46,63,1|1togzjz,46,63,1|1togzk0,44,62,0|1tuyebz,44,62,0|1tuyec0,46,63,1|1u7727z,46,63,1|1u77280,44,62,0|1udogzz,44,62,0|1udoh00,46,63,1|1upx4vz,46,63,1|1upx4w0,44,62,0|1uwejnz,44,62,0|1uwejo0,46,63,1|1v8n7jz,46,63,1|1v8n7k0,44,62,0|1vf4mbz,44,62,0|1vf4mc0,46,63,1|1vrda7z,46,63,1|1vrda80,44,62,0|NaN,44,62,0",
        "America/Costa_Rica|,0,81,0|-15r0tro,0,81,0|-15r0trn,62,81,0|-pjw8fo,62,81,0|-pjw8fn,45,63,0|4rxcnz,45,63,0|4rxco0,47,59,1|4wyr7z,47,59,1|4wyr80,45,63,0|5anfbz,45,63,0|5anfc0,47,59,1|5fotvz,47,59,1|5fotw0,45,63,0|azhhzz,45,63,0|azhi00,47,59,1|b7v9vz,47,59,1|b7v9w0,45,63,0|bi7knz,45,63,0|bi7ko0,47,59,1|bl51vz,47,59,1|bl51w0,45,63,0|NaN,45,63,0",
        "America/Creston|,0,82,0|-18y0j81,0,82,0|-18y0j80,44,62,0|-r0epo1,44,62,0|-r0epo0,46,63,1|-qplwg1,46,63,1|-qplwg0,44,62,0|-qhon01,44,62,0|-qhon00,46,63,1|-q6vts1,46,63,1|-q6vts0,44,62,0|-ek1z01,44,62,0|-ek1z00,57,63,1|-dkikmd,57,63,1|-dkikmc,44,62,0|-dftz6d,44,62,0|-dftz6c,57,63,1|-d6f5yd,57,63,1|-d6f5yc,44,62,0|-1e8kc1,44,62,0|-1e8kc0,46,63,1|-14vls1,46,63,1|-14vls0,44,62,0|NaN,44,62,0",
        "America/Cuiaba|,0,83,0|-t85hm5,0,83,0|-t85hm4,41,40,0|-jyl7o1,41,40,0|-jyl7o0,38,41,1|-jpayc1,38,41,1|-jpayc0,41,40,0|-jfsa81,41,40,0|-jfsa80,38,41,1|-j6j101,38,41,1|-j6j100,41,40,0|-ahcvk1,41,40,0|-ahcvk0,38,41,1|-aad0w1,38,41,1|-aad0w0,41,40,0|-9yky81,41,40,0|-9yky80,38,41,1|-9scyc1,38,41,1|-9scyc0,41,40,0|-9ft0w1,41,40,0|-9ft0w0,38,41,1|-99j6c1,38,41,1|-99j6c0,41,40,0|-8wz8w1,41,40,0|-8wz8w0,38,41,1|-8scno1,38,41,1|-8scno0,41,40,0|-35xjk1,41,40,0|-35xjk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2kdm81,41,40,0|-2kdm80,38,41,1|-2hcfo1,38,41,1|-2hcfo0,41,40,0|-24qnk1,41,40,0|-24qnk0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1nia81,41,40,0|-1nia80,38,41,1|-1hc501,38,41,1|-1hc500,41,40,0|-14qcw1,41,40,0|-14qcw0,38,41,1|-yid01,38,41,1|-yid00,41,40,0|89jf3z,41,40,0|89jf40,38,41,1|8gdmzz,38,41,1|8gdn00,41,40,0|8rwj3z,41,40,0|8rwj40,38,41,1|8xnuzz,38,41,1|8xnv00,41,40,0|9aogfz,41,40,0|9aogg0,38,41,1|9g2tnz,38,41,1|9g2to0,41,40,0|9t1kfz,41,40,0|9t1kg0,38,41,1|9yfxnz,38,41,1|9yfxo0,41,40,0|abrn3z,41,40,0|abrn40,38,41,1|ahvxnz,38,41,1|ahvxo0,41,40,0|auuofz,41,40,0|auuog0,38,41,1|b0yyzz,38,41,1|b0yz00,41,40,0|bdkr3z,41,40,0|bdkr40,38,41,1|bjc2zz,38,41,1|bjc300,41,40,0|bwnsfz,41,40,0|bwnsg0,38,41,1|c1p6zz,38,41,1|c1p700,41,40,0|cf0wfz,41,40,0|cf0wg0,38,41,1|cli5nz,38,41,1|cli5o0,41,40,0|cxqz3z,41,40,0|cxqz40,38,41,1|d488bz,38,41,1|d488c0,41,40,0|dgh1rz,41,40,0|dgh1s0,38,41,1|dmlcbz,38,41,1|dmlcc0,41,40,0|dyu5rz,41,40,0|dyu5s0,38,41,1|e5odnz,38,41,1|e5odo0,41,40,0|ehm33z,41,40,0|ehm340,38,41,1|ep4dnz,38,41,1|ep4do0,41,40,0|f0n9rz,41,40,0|f0n9s0,38,41,1|f7hhnz,38,41,1|f7hho0,41,40,0|fj0drz,41,40,0|fj0ds0,38,41,1|fqkizz,38,41,1|fqkj00,41,40,0|g23f3z,41,40,0|g23f40,38,41,1|g8xmzz,38,41,1|g8xn00,41,40,0|gl6gfz,41,40,0|gl6gg0,38,41,1|grnpnz,38,41,1|grnpo0,41,40,0|h4zf3z,41,40,0|h4zf40,38,41,1|hadsbz,38,41,1|hadsc0,41,40,0|i6j9rz,41,40,0|i6j9s0,38,41,1|ic6wbz,38,41,1|ic6wc0,41,40,0|iofprz,41,40,0|iofps0,38,41,1|iuwyzz,38,41,1|iuwz00,41,40,0|j88ofz,41,40,0|j88og0,38,41,1|je00bz,38,41,1|je00c0,41,40,0|jpvv3z,41,40,0|jpvv40,38,41,1|jwd4bz,38,41,1|jwd4c0,41,40,0|k8ywfz,41,40,0|k8ywg0,38,41,1|kf36zz,38,41,1|kf3700,41,40,0|kroz3z,41,40,0|kroz40,38,41,1|ky68bz,38,41,1|ky68c0,41,40,0|laf1rz,41,40,0|laf1s0,38,41,1|lgwazz,38,41,1|lgwb00,41,40,0|lt54fz,41,40,0|lt54g0,38,41,1|lzzcbz,38,41,1|lzzcc0,41,40,0|mc85rz,41,40,0|mc85s0,38,41,1|micgbz,38,41,1|micgc0,41,40,0|muy8fz,41,40,0|muy8g0,38,41,1|n12izz,38,41,1|n12j00,41,40,0|ndob3z,41,40,0|ndob40,38,41,1|nk5kbz,38,41,1|nk5kc0,41,40,0|nwedrz,41,40,0|nweds0,38,41,1|o2vmzz,38,41,1|o2vn00,41,40,0|of4gfz,41,40,0|of4gg0,38,41,1|ollpnz,38,41,1|ollpo0,41,40,0|oxuj3z,41,40,0|oxuj40,38,41,1|p4bsbz,38,41,1|p4bsc0,41,40,0|phnhrz,41,40,0|phnhs0,38,41,1|pn1uzz,38,41,1|pn1v00,41,40,0|NaN,41,40,0",
        "America/Curacao|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Danmarkshavn|,0,84,0|-rvusjl,0,84,0|-rvusjk,38,41,0|5ct4jz,38,41,0|5ct4k0,39,43,1|5lsw3z,39,43,1|5lsw40,38,41,0|5v5xfz,38,41,0|5v5xg0,39,43,1|64iyrz,39,43,1|64iys0,38,41,0|6dw03z,38,41,0|6dw040,39,43,1|6n91fz,39,43,1|6n91g0,38,41,0|6wm2rz,38,41,0|6wm2s0,39,43,1|75z43z,39,43,1|75z440,38,41,0|7fc5fz,38,41,0|7fc5g0,39,43,1|7p25fz,39,43,1|7p25g0,38,41,0|7yf6rz,38,41,0|7yf6s0,39,43,1|87s83z,39,43,1|87s840,38,41,0|8h59fz,38,41,0|8h59g0,39,43,1|8qiarz,39,43,1|8qias0,38,41,0|8zvc3z,38,41,0|8zvc40,39,43,1|998dfz,39,43,1|998dg0,38,41,0|9ilerz,38,41,0|9iles0,39,43,1|9ryg3z,39,43,1|9ryg40,38,41,0|a1bhfz,38,41,0|a1bhg0,39,43,1|aaoirz,39,43,1|aaois0,38,41,0|ak1k3z,38,41,0|ak1k40,39,43,1|atrk3z,39,43,1|atrk40,38,41,0|b34lfz,38,41,0|b34lg0,39,43,1|bchmrz,39,43,1|bchms0,38,41,0|bluo3z,38,41,0|bluo40,39,43,1|bv7pfz,39,43,1|bv7pg0,38,41,0|c4kqrz,38,41,0|c4kqs0,39,43,1|cdxs3z,39,43,1|cdxs40,38,41,0|cnatfz,38,41,0|cnatg0,39,43,1|cwnurz,39,43,1|cwnus0,38,41,0|d60w3z,38,41,0|d60w40,39,43,1|dfdxfz,39,43,1|dfdxg0,38,41,0|dkhezz,38,41,0|dkhf00,1,1,0|NaN,1,1,0",
        "America/Dawson|,0,85,0|-1079sul,0,85,0|-1079suk,35,35,0|-qzoms1,35,35,0|-qzoms0,63,38,1|-qplqw1,63,38,1|-qplqw0,35,35,0|-qess41,35,35,0|-qess40,63,38,1|-q6kps1,63,38,1|-q6kps0,35,35,0|-ek1tg1,35,35,0|-ek1tg0,64,38,1|-cq2tg1,64,38,1|-cq2tg0,65,38,1|-cnos81,65,38,1|-cnos80,35,35,0|-2g1oc1,35,35,0|-2g1oc0,66,62,1|-26boc1,66,62,1|-26boc0,35,35,0|1ztvnz,35,35,0|1ztvo0,55,38,0|5dwefz,55,38,0|5dweg0,56,62,1|5n9czz,56,62,1|5n9d00,55,38,0|5wmh3z,55,38,0|5wmh40,56,62,1|65zfnz,56,62,1|65zfo0,55,38,0|6fcjrz,55,38,0|6fcjs0,56,62,1|6p2gzz,56,62,1|6p2h00,55,38,0|6y2mfz,55,38,0|6y2mg0,56,62,1|77sjnz,56,62,1|77sjo0,55,38,0|7h5nrz,55,38,0|7h5ns0,56,62,1|7qimbz,56,62,1|7qimc0,55,38,0|7zvqfz,55,38,0|7zvqg0,56,62,1|898ozz,56,62,1|898p00,55,38,0|8ilt3z,55,38,0|8ilt40,56,62,1|8ryrnz,56,62,1|8ryro0,55,38,0|908zrz,55,38,0|908zs0,56,62,1|9aoubz,56,62,1|9aouc0,55,38,0|9iz2fz,55,38,0|9iz2g0,56,62,1|9trvnz,56,62,1|9trvo0,55,38,0|a1p53z,55,38,0|a1p540,56,62,1|achybz,56,62,1|achyc0,55,38,0|akf7rz,55,38,0|akf7s0,56,62,1|av80zz,56,62,1|av8100,55,38,0|b3i93z,55,38,0|b3i940,56,62,1|bdy3nz,56,62,1|bdy3o0,55,38,0|bm8brz,55,38,0|bm8bs0,56,62,1|bwo6bz,56,62,1|bwo6c0,55,38,0|c4yefz,55,38,0|c4yeg0,56,62,1|cfr7nz,56,62,1|cfr7o0,55,38,0|cnoh3z,55,38,0|cnoh40,56,62,1|cyhabz,56,62,1|cyhac0,55,38,0|d6ejrz,55,38,0|d6ejs0,56,62,1|dh7czz,56,62,1|dh7d00,55,38,0|dphl3z,55,38,0|dphl40,56,62,1|dzxfnz,56,62,1|dzxfo0,55,38,0|e87nrz,55,38,0|e87ns0,56,62,1|einibz,56,62,1|einic0,55,38,0|eqxqfz,55,38,0|eqxqg0,56,62,1|f1dkzz,56,62,1|f1dl00,55,38,0|f9nt3z,55,38,0|f9nt40,56,62,1|fkgmbz,56,62,1|fkgmc0,55,38,0|fsdvrz,55,38,0|fsdvs0,56,62,1|g36ozz,56,62,1|g36p00,55,38,0|gb3yfz,55,38,0|gb3yg0,56,62,1|glwrnz,56,62,1|glwro0,55,38,0|gu6zrz,55,38,0|gu6zs0,56,62,1|h4mubz,56,62,1|h4muc0,55,38,0|hcx2fz,55,38,0|hcx2g0,56,62,1|hncwzz,56,62,1|hncx00,55,38,0|hvn53z,55,38,0|hvn540,56,62,1|i6fybz,56,62,1|i6fyc0,55,38,0|ied7rz,55,38,0|ied7s0,56,62,1|ip60zz,56,62,1|ip6100,55,38,0|ix3afz,55,38,0|ix3ag0,56,62,1|j7w3nz,56,62,1|j7w3o0,55,38,0|jeqh3z,55,38,0|jeqh40,56,62,1|jqz4zz,56,62,1|jqz500,55,38,0|jxgjrz,55,38,0|jxgjs0,56,62,1|k9p7nz,56,62,1|k9p7o0,55,38,0|kg6mfz,55,38,0|kg6mg0,56,62,1|ksfabz,56,62,1|ksfac0,55,38,0|kz9nrz,55,38,0|kz9ns0,56,62,1|lbibnz,56,62,1|lbibo0,55,38,0|lhzqfz,55,38,0|lhzqg0,56,62,1|lu8ebz,56,62,1|lu8ec0,55,38,0|m0pt3z,55,38,0|m0pt40,56,62,1|mcygzz,56,62,1|mcyh00,55,38,0|mjfvrz,55,38,0|mjfvs0,56,62,1|mvojnz,56,62,1|mvojo0,55,38,0|n25yfz,55,38,0|n25yg0,56,62,1|neembz,56,62,1|neemc0,55,38,0|nkw13z,55,38,0|nkw140,56,62,1|nx4ozz,56,62,1|nx4p00,55,38,0|o3z2fz,55,38,0|o3z2g0,56,62,1|og7qbz,56,62,1|og7qc0,55,38,0|omp53z,55,38,0|omp540,56,62,1|oyxszz,56,62,1|oyxt00,55,38,0|p5f7rz,55,38,0|p5f7s0,56,62,1|phnvnz,56,62,1|phnvo0,55,38,0|po5afz,55,38,0|po5ag0,56,62,1|q0dybz,56,62,1|q0dyc0,55,38,0|q6vd3z,55,38,0|q6vd40,56,62,1|qj3vfz,56,62,1|qj3vg0,44,62,0|NaN,44,62,0",
        "America/Dawson_Creek|,0,86,0|-18vrweh,0,86,0|-18vrweg,55,38,0|-qzopk1,55,38,0|-qzopk0,56,62,1|-qplto1,56,62,1|-qplto0,55,38,0|-ek1w81,55,38,0|-ek1w80,67,62,1|-cq2tg1,67,62,1|-cq2tg0,68,62,1|-cnov01,68,62,1|-cnov00,55,38,0|-bu5tk1,55,38,0|-bu5tk0,56,62,1|-bm8po1,56,62,1|-bm8po0,55,38,0|-bbfqw1,55,38,0|-bbfqw0,56,62,1|-b3in01,56,62,1|-b3in00,55,38,0|-aspo81,55,38,0|-aspo80,56,62,1|-akskc1,56,62,1|-akskc0,55,38,0|-a9mmw1,55,38,0|-a9mmw0,56,62,1|-a22ho1,56,62,1|-a22ho0,55,38,0|-9qwk81,55,38,0|-9qwk80,56,62,1|-9izgc1,56,62,1|-9izgc0,55,38,0|-986hk1,55,38,0|-986hk0,56,62,1|-909do1,56,62,1|-909do0,55,38,0|-8pgew1,55,38,0|-8pgew0,56,62,1|-8hjb01,56,62,1|-8hjb00,55,38,0|-86qc81,55,38,0|-86qc80,56,62,1|-7yt8c1,56,62,1|-7yt8c0,55,38,0|-7o09k1,55,38,0|-7o09k0,56,62,1|-7g35o1,56,62,1|-7g35o0,55,38,0|-74x881,55,38,0|-74x880,56,62,1|-6x04c1,56,62,1|-6x04c0,55,38,0|-6m75k1,55,38,0|-6m75k0,56,62,1|-6ea1o1,56,62,1|-6ea1o0,55,38,0|-63h2w1,55,38,0|-63h2w0,56,62,1|-5vjz01,56,62,1|-5vjz00,55,38,0|-5kr081,55,38,0|-5kr080,56,62,1|-5ctwc1,56,62,1|-5ctwc0,55,38,0|-520xk1,55,38,0|-520xk0,56,62,1|-4u3to1,56,62,1|-4u3to0,55,38,0|-4ixw81,55,38,0|-4ixw80,56,62,1|-4bdr01,56,62,1|-4bdr00,55,38,0|-407tk1,55,38,0|-407tk0,56,62,1|-3quv01,56,62,1|-3quv00,55,38,0|-3hhqw1,55,38,0|-3hhqw0,56,62,1|-384sc1,56,62,1|-384sc0,55,38,0|-2yro81,55,38,0|-2yro80,56,62,1|-2pepo1,56,62,1|-2pepo0,55,38,0|-2g1lk1,55,38,0|-2g1lk0,56,62,1|-26boc1,56,62,1|-26boc0,55,38,0|-1xbiw1,55,38,0|-1xbiw0,56,62,1|-1nllo1,56,62,1|-1nllo0,55,38,0|-1e8hk1,55,38,0|-1e8hk0,56,62,1|-14vj01,56,62,1|-14vj00,55,38,0|-view1,55,38,0|-view0,56,62,1|-m5gc1,56,62,1|-m5gc0,55,38,0|-csc81,55,38,0|-csc80,56,62,1|-3fdo1,56,62,1|-3fdo0,55,38,0|5xqfz,55,38,0|5xqg0,56,62,1|faozz,56,62,1|fap00,55,38,0|ont3z,55,38,0|ont40,56,62,1|ydqbz,56,62,1|ydqc0,55,38,0|17qufz,55,38,0|17qug0,56,62,1|1e0ozz,56,62,1|1e0p00,44,62,0|NaN,44,62,0",
        "America/Denver|,0,87,0|-18y0j81,0,87,0|-18y0j80,44,62,0|-r0epo1,44,62,0|-r0epo0,46,63,1|-qplwg1,46,63,1|-qplwg0,44,62,0|-qhon01,44,62,0|-qhon00,46,63,1|-q6vts1,46,63,1|-q6vts0,44,62,0|-pyykc1,44,62,0|-pyykc0,46,63,1|-pnssg1,46,63,1|-pnssg0,44,62,0|-pg8ho1,44,62,0|-pg8ho0,46,63,1|-pdcv41,46,63,1|-pdcv40,44,62,0|-ek1z01,44,62,0|-ek1z00,57,63,1|-cq2tg1,57,63,1|-cq2tg0,58,63,1|-cnoxs1,58,63,1|-cnoxs0,44,62,0|-2g1oc1,44,62,0|-2g1oc0,46,63,1|-26br41,46,63,1|-26br40,44,62,0|-1xblo1,44,62,0|-1xblo0,46,63,1|-1nlog1,46,63,1|-1nlog0,44,62,0|-1e8kc1,44,62,0|-1e8kc0,46,63,1|-14vls1,46,63,1|-14vls0,44,62,0|-viho1,44,62,0|-viho0,46,63,1|-m5j41,46,63,1|-m5j40,44,62,0|-csf01,44,62,0|-csf00,46,63,1|-3fgg1,46,63,1|-3fgg0,44,62,0|5xnnz,44,62,0|5xno0,46,63,1|fam7z,46,63,1|fam80,44,62,0|onqbz,44,62,0|onqc0,46,63,1|ydnjz,46,63,1|ydnk0,44,62,0|17qrnz,44,62,0|17qro0,46,63,1|1h3q7z,46,63,1|1h3q80,44,62,0|1qgubz,44,62,0|1qguc0,46,63,1|1ztsvz,46,63,1|1ztsw0,44,62,0|23fibz,44,62,0|23fic0,46,63,1|2ijvjz,46,63,1|2ijvk0,44,62,0|2oobnz,44,62,0|2oobo0,46,63,1|319y7z,46,63,1|319y80,44,62,0|3an2bz,44,62,0|3an2c0,46,63,1|3kczjz,46,63,1|3kczk0,44,62,0|3td4zz,44,62,0|3td500,46,63,1|43327z,46,63,1|433280,44,62,0|4cg6bz,44,62,0|4cg6c0,46,63,1|4lt4vz,46,63,1|4lt4w0,44,62,0|4v68zz,44,62,0|4v6900,46,63,1|54j7jz,46,63,1|54j7k0,44,62,0|5dwbnz,44,62,0|5dwbo0,46,63,1|5n9a7z,46,63,1|5n9a80,44,62,0|5wmebz,44,62,0|5wmec0,46,63,1|65zcvz,46,63,1|65zcw0,44,62,0|6fcgzz,44,62,0|6fch00,46,63,1|6p2e7z,46,63,1|6p2e80,44,62,0|6y2jnz,44,62,0|6y2jo0,46,63,1|77sgvz,46,63,1|77sgw0,44,62,0|7h5kzz,44,62,0|7h5l00,46,63,1|7qijjz,46,63,1|7qijk0,44,62,0|7zvnnz,44,62,0|7zvno0,46,63,1|898m7z,46,63,1|898m80,44,62,0|8ilqbz,44,62,0|8ilqc0,46,63,1|8ryovz,46,63,1|8ryow0,44,62,0|908wzz,44,62,0|908x00,46,63,1|9aorjz,46,63,1|9aork0,44,62,0|9iyznz,44,62,0|9iyzo0,46,63,1|9trsvz,46,63,1|9trsw0,44,62,0|a1p2bz,44,62,0|a1p2c0,46,63,1|achvjz,46,63,1|achvk0,44,62,0|akf4zz,44,62,0|akf500,46,63,1|av7y7z,46,63,1|av7y80,44,62,0|b3i6bz,44,62,0|b3i6c0,46,63,1|bdy0vz,46,63,1|bdy0w0,44,62,0|bm88zz,44,62,0|bm8900,46,63,1|bwo3jz,46,63,1|bwo3k0,44,62,0|c4ybnz,44,62,0|c4ybo0,46,63,1|cfr4vz,46,63,1|cfr4w0,44,62,0|cnoebz,44,62,0|cnoec0,46,63,1|cyh7jz,46,63,1|cyh7k0,44,62,0|d6egzz,44,62,0|d6eh00,46,63,1|dh7a7z,46,63,1|dh7a80,44,62,0|dphibz,44,62,0|dphic0,46,63,1|dzxcvz,46,63,1|dzxcw0,44,62,0|e87kzz,44,62,0|e87l00,46,63,1|einfjz,46,63,1|einfk0,44,62,0|eqxnnz,44,62,0|eqxno0,46,63,1|f1di7z,46,63,1|f1di80,44,62,0|f9nqbz,44,62,0|f9nqc0,46,63,1|fkgjjz,46,63,1|fkgjk0,44,62,0|fsdszz,44,62,0|fsdt00,46,63,1|g36m7z,46,63,1|g36m80,44,62,0|gb3vnz,44,62,0|gb3vo0,46,63,1|glwovz,46,63,1|glwow0,44,62,0|gu6wzz,44,62,0|gu6x00,46,63,1|h4mrjz,46,63,1|h4mrk0,44,62,0|hcwznz,44,62,0|hcwzo0,46,63,1|hncu7z,46,63,1|hncu80,44,62,0|hvn2bz,44,62,0|hvn2c0,46,63,1|i6fvjz,46,63,1|i6fvk0,44,62,0|ied4zz,44,62,0|ied500,46,63,1|ip5y7z,46,63,1|ip5y80,44,62,0|ix37nz,44,62,0|ix37o0,46,63,1|j7w0vz,46,63,1|j7w0w0,44,62,0|jeqebz,44,62,0|jeqec0,46,63,1|jqz27z,46,63,1|jqz280,44,62,0|jxggzz,44,62,0|jxgh00,46,63,1|k9p4vz,46,63,1|k9p4w0,44,62,0|kg6jnz,44,62,0|kg6jo0,46,63,1|ksf7jz,46,63,1|ksf7k0,44,62,0|kz9kzz,44,62,0|kz9l00,46,63,1|lbi8vz,46,63,1|lbi8w0,44,62,0|lhznnz,44,62,0|lhzno0,46,63,1|lu8bjz,46,63,1|lu8bk0,44,62,0|m0pqbz,44,62,0|m0pqc0,46,63,1|mcye7z,46,63,1|mcye80,44,62,0|mjfszz,44,62,0|mjft00,46,63,1|mvogvz,46,63,1|mvogw0,44,62,0|n25vnz,44,62,0|n25vo0,46,63,1|neejjz,46,63,1|neejk0,44,62,0|nkvybz,44,62,0|nkvyc0,46,63,1|nx4m7z,46,63,1|nx4m80,44,62,0|o3yznz,44,62,0|o3yzo0,46,63,1|og7njz,46,63,1|og7nk0,44,62,0|omp2bz,44,62,0|omp2c0,46,63,1|oyxq7z,46,63,1|oyxq80,44,62,0|p5f4zz,44,62,0|p5f500,46,63,1|phnsvz,46,63,1|phnsw0,44,62,0|po57nz,44,62,0|po57o0,46,63,1|q0dvjz,46,63,1|q0dvk0,44,62,0|q6vabz,44,62,0|q6vac0,46,63,1|qj3y7z,46,63,1|qj3y80,44,62,0|qpybnz,44,62,0|qpybo0,46,63,1|r26zjz,46,63,1|r26zk0,44,62,0|r8oebz,44,62,0|r8oec0,46,63,1|rkx27z,46,63,1|rkx280,44,62,0|rregzz,44,62,0|rreh00,46,63,1|s3n4vz,46,63,1|s3n4w0,44,62,0|sa4jnz,44,62,0|sa4jo0,46,63,1|smd7jz,46,63,1|smd7k0,44,62,0|ssumbz,44,62,0|ssumc0,46,63,1|t53a7z,46,63,1|t53a80,44,62,0|tbkozz,44,62,0|tbkp00,46,63,1|tntcvz,46,63,1|tntcw0,44,62,0|tunqbz,44,62,0|tunqc0,46,63,1|u6we7z,46,63,1|u6we80,44,62,0|uddszz,44,62,0|uddt00,46,63,1|upmgvz,46,63,1|upmgw0,44,62,0|uw3vnz,44,62,0|uw3vo0,46,63,1|v8cjjz,46,63,1|v8cjk0,44,62,0|vetybz,44,62,0|vetyc0,46,63,1|vr2m7z,46,63,1|vr2m80,44,62,0|vxk0zz,44,62,0|vxk100,46,63,1|w9sovz,46,63,1|w9sow0,44,62,0|wgn2bz,44,62,0|wgn2c0,46,63,1|wsvq7z,46,63,1|wsvq80,44,62,0|wzd4zz,44,62,0|wzd500,46,63,1|xblsvz,46,63,1|xblsw0,44,62,0|xi37nz,44,62,0|xi37o0,46,63,1|xubvjz,46,63,1|xubvk0,44,62,0|y0tabz,44,62,0|y0tac0,46,63,1|yd1y7z,46,63,1|yd1y80,44,62,0|yjjczz,44,62,0|yjjd00,46,63,1|yvs0vz,46,63,1|yvs0w0,44,62,0|z29fnz,44,62,0|z29fo0,46,63,1|zei3jz,46,63,1|zei3k0,44,62,0|zlcgzz,44,62,0|zlch00,46,63,1|zxl4vz,46,63,1|zxl4w0,44,62,0|1042jnz,44,62,0|1042jo0,46,63,1|10gb7jz,46,63,1|10gb7k0,44,62,0|10msmbz,44,62,0|10msmc0,46,63,1|10z1a7z,46,63,1|10z1a80,44,62,0|115iozz,44,62,0|115ip00,46,63,1|11hrcvz,46,63,1|11hrcw0,44,62,0|11o8rnz,44,62,0|11o8ro0,46,63,1|120hfjz,46,63,1|120hfk0,44,62,0|126yubz,44,62,0|126yuc0,46,63,1|12j7i7z,46,63,1|12j7i80,44,62,0|12q1vnz,44,62,0|12q1vo0,46,63,1|132ajjz,46,63,1|132ajk0,44,62,0|138rybz,44,62,0|138ryc0,46,63,1|13l0m7z,46,63,1|13l0m80,44,62,0|13ri0zz,44,62,0|13ri100,46,63,1|143qovz,46,63,1|143qow0,44,62,0|14a83nz,44,62,0|14a83o0,46,63,1|14mgrjz,46,63,1|14mgrk0,44,62,0|14sy6bz,44,62,0|14sy6c0,46,63,1|1556u7z,46,63,1|1556u80,44,62,0|15c17nz,44,62,0|15c17o0,46,63,1|15o9vjz,46,63,1|15o9vk0,44,62,0|15urabz,44,62,0|15urac0,46,63,1|166zy7z,46,63,1|166zy80,44,62,0|16dhczz,44,62,0|16dhd00,46,63,1|16pq0vz,46,63,1|16pq0w0,44,62,0|16w7fnz,44,62,0|16w7fo0,46,63,1|178g3jz,46,63,1|178g3k0,44,62,0|17exibz,44,62,0|17exic0,46,63,1|17r667z,46,63,1|17r6680,44,62,0|17xnkzz,44,62,0|17xnl00,46,63,1|189w8vz,46,63,1|189w8w0,44,62,0|18gqmbz,44,62,0|18gqmc0,46,63,1|18sza7z,46,63,1|18sza80,44,62,0|18zgozz,44,62,0|18zgp00,46,63,1|19bpcvz,46,63,1|19bpcw0,44,62,0|19i6rnz,44,62,0|19i6ro0,46,63,1|19uffjz,46,63,1|19uffk0,44,62,0|1a0wubz,44,62,0|1a0wuc0,46,63,1|1ad5i7z,46,63,1|1ad5i80,44,62,0|1ajmwzz,44,62,0|1ajmx00,46,63,1|1avvkvz,46,63,1|1avvkw0,44,62,0|1b2pybz,44,62,0|1b2pyc0,46,63,1|1beym7z,46,63,1|1beym80,44,62,0|1blg0zz,44,62,0|1blg100,46,63,1|1bxoovz,46,63,1|1bxoow0,44,62,0|1c463nz,44,62,0|1c463o0,46,63,1|1cgerjz,46,63,1|1cgerk0,44,62,0|1cmw6bz,44,62,0|1cmw6c0,46,63,1|1cz4u7z,46,63,1|1cz4u80,44,62,0|1d5m8zz,44,62,0|1d5m900,46,63,1|1dhuwvz,46,63,1|1dhuww0,44,62,0|1docbnz,44,62,0|1docbo0,46,63,1|1e0kzjz,46,63,1|1e0kzk0,44,62,0|1e7fczz,44,62,0|1e7fd00,46,63,1|1ejo0vz,46,63,1|1ejo0w0,44,62,0|1eq5fnz,44,62,0|1eq5fo0,46,63,1|1f2e3jz,46,63,1|1f2e3k0,44,62,0|1f8vibz,44,62,0|1f8vic0,46,63,1|1fl467z,46,63,1|1fl4680,44,62,0|1frlkzz,44,62,0|1frll00,46,63,1|1g3u8vz,46,63,1|1g3u8w0,44,62,0|1gabnnz,44,62,0|1gabno0,46,63,1|1gmkbjz,46,63,1|1gmkbk0,44,62,0|1gt1qbz,44,62,0|1gt1qc0,46,63,1|1h5ae7z,46,63,1|1h5ae80,44,62,0|1hc4rnz,44,62,0|1hc4ro0,46,63,1|1hodfjz,46,63,1|1hodfk0,44,62,0|1huuubz,44,62,0|1huuuc0,46,63,1|1i73i7z,46,63,1|1i73i80,44,62,0|1idkwzz,44,62,0|1idkx00,46,63,1|1iptkvz,46,63,1|1iptkw0,44,62,0|1iwaznz,44,62,0|1iwazo0,46,63,1|1j8jnjz,46,63,1|1j8jnk0,44,62,0|1jf12bz,44,62,0|1jf12c0,46,63,1|1jr9q7z,46,63,1|1jr9q80,44,62,0|1jy43nz,44,62,0|1jy43o0,46,63,1|1kacrjz,46,63,1|1kacrk0,44,62,0|1kgu6bz,44,62,0|1kgu6c0,46,63,1|1kt2u7z,46,63,1|1kt2u80,44,62,0|1kzk8zz,44,62,0|1kzk900,46,63,1|1lbswvz,46,63,1|1lbsww0,44,62,0|1liabnz,44,62,0|1liabo0,46,63,1|1luizjz,46,63,1|1luizk0,44,62,0|1m10ebz,44,62,0|1m10ec0,46,63,1|1md927z,46,63,1|1md9280,44,62,0|1mjqgzz,44,62,0|1mjqh00,46,63,1|1mvz4vz,46,63,1|1mvz4w0,44,62,0|1n2tibz,44,62,0|1n2tic0,46,63,1|1nf267z,46,63,1|1nf2680,44,62,0|1nljkzz,44,62,0|1nljl00,46,63,1|1nxs8vz,46,63,1|1nxs8w0,44,62,0|1o49nnz,44,62,0|1o49no0,46,63,1|1ogibjz,46,63,1|1ogibk0,44,62,0|1omzqbz,44,62,0|1omzqc0,46,63,1|1oz8e7z,46,63,1|1oz8e80,44,62,0|1p5pszz,44,62,0|1p5pt00,46,63,1|1phygvz,46,63,1|1phygw0,44,62,0|1posubz,44,62,0|1posuc0,46,63,1|1q11i7z,46,63,1|1q11i80,44,62,0|1q7iwzz,44,62,0|1q7ix00,46,63,1|1qjrkvz,46,63,1|1qjrkw0,44,62,0|1qq8znz,44,62,0|1qq8zo0,46,63,1|1r2hnjz,46,63,1|1r2hnk0,44,62,0|1r8z2bz,44,62,0|1r8z2c0,46,63,1|1rl7q7z,46,63,1|1rl7q80,44,62,0|1rrp4zz,44,62,0|1rrp500,46,63,1|1s3xsvz,46,63,1|1s3xsw0,44,62,0|1saf7nz,44,62,0|1saf7o0,46,63,1|1smnvjz,46,63,1|1smnvk0,44,62,0|1sti8zz,44,62,0|1sti900,46,63,1|1t5qwvz,46,63,1|1t5qww0,44,62,0|1tc8bnz,44,62,0|1tc8bo0,46,63,1|1togzjz,46,63,1|1togzk0,44,62,0|1tuyebz,44,62,0|1tuyec0,46,63,1|1u7727z,46,63,1|1u77280,44,62,0|1udogzz,44,62,0|1udoh00,46,63,1|1upx4vz,46,63,1|1upx4w0,44,62,0|1uwejnz,44,62,0|1uwejo0,46,63,1|1v8n7jz,46,63,1|1v8n7k0,44,62,0|1vf4mbz,44,62,0|1vf4mc0,46,63,1|1vrda7z,46,63,1|1vrda80,44,62,0|NaN,44,62,0",
        "America/Detroit|,0,88,0|-xx8dye,0,88,0|-xx8dyd,45,63,0|-sih341,45,63,0|-sih340,43,59,0|-ek24k1,43,59,0|-ek24k0,69,40,1|-cq2tg1,69,40,1|-cq2tg0,70,40,1|-cnp3c1,70,40,1|-cnp3c0,43,59,0|-bbfz81,43,59,0|-bbfz80,60,40,1|-b3ivc1,60,40,1|-b3ivc0,43,59,0|-1bxjed,43,59,0|-1bxjec,60,40,1|-14vrc1,60,40,1|-14vrc0,43,59,0|-vin81,43,59,0|-vin80,60,40,1|-m5oo1,60,40,1|-m5oo0,43,59,0|1qgorz,43,59,0|1qgos0,60,40,1|1ztnbz,60,40,1|1ztnc0,43,59,0|23fcrz,43,59,0|23fcs0,60,40,1|2ijpzz,60,40,1|2ijq00,43,59,0|2rwu3z,43,59,0|2rwu40,60,40,1|319snz,60,40,1|319so0,43,59,0|3amwrz,43,59,0|3amws0,60,40,1|3kctzz,60,40,1|3kcu00,43,59,0|3tczfz,43,59,0|3tczg0,60,40,1|432wnz,60,40,1|432wo0,43,59,0|4cg0rz,43,59,0|4cg0s0,60,40,1|4lszbz,60,40,1|4lszc0,43,59,0|4v63fz,43,59,0|4v63g0,60,40,1|54j1zz,60,40,1|54j200,43,59,0|5dw63z,43,59,0|5dw640,60,40,1|5n94nz,60,40,1|5n94o0,43,59,0|5wm8rz,43,59,0|5wm8s0,60,40,1|65z7bz,60,40,1|65z7c0,43,59,0|6fcbfz,43,59,0|6fcbg0,60,40,1|6p28nz,60,40,1|6p28o0,43,59,0|6y2e3z,43,59,0|6y2e40,60,40,1|77sbbz,60,40,1|77sbc0,43,59,0|7h5ffz,43,59,0|7h5fg0,60,40,1|7qidzz,60,40,1|7qie00,43,59,0|7zvi3z,43,59,0|7zvi40,60,40,1|898gnz,60,40,1|898go0,43,59,0|8ilkrz,43,59,0|8ilks0,60,40,1|8ryjbz,60,40,1|8ryjc0,43,59,0|908rfz,43,59,0|908rg0,60,40,1|9aolzz,60,40,1|9aom00,43,59,0|9iyu3z,43,59,0|9iyu40,60,40,1|9trnbz,60,40,1|9trnc0,43,59,0|a1owrz,43,59,0|a1ows0,60,40,1|achpzz,60,40,1|achq00,43,59,0|akezfz,43,59,0|akezg0,60,40,1|av7snz,60,40,1|av7so0,43,59,0|b3i0rz,43,59,0|b3i0s0,60,40,1|bdxvbz,60,40,1|bdxvc0,43,59,0|bm83fz,43,59,0|bm83g0,60,40,1|bwnxzz,60,40,1|bwny00,43,59,0|c4y63z,43,59,0|c4y640,60,40,1|cfqzbz,60,40,1|cfqzc0,43,59,0|cno8rz,43,59,0|cno8s0,60,40,1|cyh1zz,60,40,1|cyh200,43,59,0|d6ebfz,43,59,0|d6ebg0,60,40,1|dh74nz,60,40,1|dh74o0,43,59,0|dphcrz,43,59,0|dphcs0,60,40,1|dzx7bz,60,40,1|dzx7c0,43,59,0|e87ffz,43,59,0|e87fg0,60,40,1|ein9zz,60,40,1|eina00,43,59,0|eqxi3z,43,59,0|eqxi40,60,40,1|f1dcnz,60,40,1|f1dco0,43,59,0|f9nkrz,43,59,0|f9nks0,60,40,1|fkgdzz,60,40,1|fkge00,43,59,0|fsdnfz,43,59,0|fsdng0,60,40,1|g36gnz,60,40,1|g36go0,43,59,0|gb3q3z,43,59,0|gb3q40,60,40,1|glwjbz,60,40,1|glwjc0,43,59,0|gu6rfz,43,59,0|gu6rg0,60,40,1|h4mlzz,60,40,1|h4mm00,43,59,0|hcwu3z,43,59,0|hcwu40,60,40,1|hnconz,60,40,1|hncoo0,43,59,0|hvmwrz,43,59,0|hvmws0,60,40,1|i6fpzz,60,40,1|i6fq00,43,59,0|ieczfz,43,59,0|ieczg0,60,40,1|ip5snz,60,40,1|ip5so0,43,59,0|ix323z,43,59,0|ix3240,60,40,1|j7vvbz,60,40,1|j7vvc0,43,59,0|jeq8rz,43,59,0|jeq8s0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Dominica|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Edmonton|,0,89,0|-x1yazl,0,89,0|-x1yazk,44,62,0|-qzosc1,44,62,0|-qzosc0,46,63,1|-qplwg1,46,63,1|-qplwg0,44,62,0|-qgypo1,44,62,0|-qgypo0,46,63,1|-qepb41,46,63,1|-qepb40,44,62,0|-pxipo1,44,62,0|-pxipo0,46,63,1|-pnssg1,46,63,1|-pnssg0,44,62,0|-pesn01,44,62,0|-pesn00,46,63,1|-p6vj41,46,63,1|-p6vj40,44,62,0|-ovplo1,44,62,0|-ovplo0,46,63,1|-oo5gg1,46,63,1|-oo5gg0,44,62,0|-oczj01,44,62,0|-oczj00,46,63,1|-o52f41,46,63,1|-o52f40,44,62,0|-ek1z01,44,62,0|-ek1z00,57,63,1|-cq2tg1,57,63,1|-cq2tg0,58,63,1|-cnoxs1,58,63,1|-cnoxs0,44,62,0|-bu5wc1,44,62,0|-bu5wc0,46,63,1|-bm8sg1,46,63,1|-bm8sg0,44,62,0|17qrnz,44,62,0|17qro0,46,63,1|1h3q7z,46,63,1|1h3q80,44,62,0|1qgubz,44,62,0|1qguc0,46,63,1|1ztsvz,46,63,1|1ztsw0,44,62,0|296wzz,44,62,0|296x00,46,63,1|2ijvjz,46,63,1|2ijvk0,44,62,0|2rwznz,44,62,0|2rwzo0,46,63,1|319y7z,46,63,1|319y80,44,62,0|3an2bz,44,62,0|3an2c0,46,63,1|3kczjz,46,63,1|3kczk0,44,62,0|3td4zz,44,62,0|3td500,46,63,1|43327z,46,63,1|433280,44,62,0|4cg6bz,44,62,0|4cg6c0,46,63,1|4lt4vz,46,63,1|4lt4w0,44,62,0|4v68zz,44,62,0|4v6900,46,63,1|54j7jz,46,63,1|54j7k0,44,62,0|5dwbnz,44,62,0|5dwbo0,46,63,1|5n9a7z,46,63,1|5n9a80,44,62,0|5wmebz,44,62,0|5wmec0,46,63,1|65zcvz,46,63,1|65zcw0,44,62,0|6fcgzz,44,62,0|6fch00,46,63,1|6p2e7z,46,63,1|6p2e80,44,62,0|6y2jnz,44,62,0|6y2jo0,46,63,1|77sgvz,46,63,1|77sgw0,44,62,0|7h5kzz,44,62,0|7h5l00,46,63,1|7qijjz,46,63,1|7qijk0,44,62,0|7zvnnz,44,62,0|7zvno0,46,63,1|898m7z,46,63,1|898m80,44,62,0|8ilqbz,44,62,0|8ilqc0,46,63,1|8ryovz,46,63,1|8ryow0,44,62,0|908wzz,44,62,0|908x00,46,63,1|9aorjz,46,63,1|9aork0,44,62,0|9iyznz,44,62,0|9iyzo0,46,63,1|9trsvz,46,63,1|9trsw0,44,62,0|a1p2bz,44,62,0|a1p2c0,46,63,1|achvjz,46,63,1|achvk0,44,62,0|akf4zz,44,62,0|akf500,46,63,1|av7y7z,46,63,1|av7y80,44,62,0|b3i6bz,44,62,0|b3i6c0,46,63,1|bdy0vz,46,63,1|bdy0w0,44,62,0|bm88zz,44,62,0|bm8900,46,63,1|bwo3jz,46,63,1|bwo3k0,44,62,0|c4ybnz,44,62,0|c4ybo0,46,63,1|cfr4vz,46,63,1|cfr4w0,44,62,0|cnoebz,44,62,0|cnoec0,46,63,1|cyh7jz,46,63,1|cyh7k0,44,62,0|d6egzz,44,62,0|d6eh00,46,63,1|dh7a7z,46,63,1|dh7a80,44,62,0|dphibz,44,62,0|dphic0,46,63,1|dzxcvz,46,63,1|dzxcw0,44,62,0|e87kzz,44,62,0|e87l00,46,63,1|einfjz,46,63,1|einfk0,44,62,0|eqxnnz,44,62,0|eqxno0,46,63,1|f1di7z,46,63,1|f1di80,44,62,0|f9nqbz,44,62,0|f9nqc0,46,63,1|fkgjjz,46,63,1|fkgjk0,44,62,0|fsdszz,44,62,0|fsdt00,46,63,1|g36m7z,46,63,1|g36m80,44,62,0|gb3vnz,44,62,0|gb3vo0,46,63,1|glwovz,46,63,1|glwow0,44,62,0|gu6wzz,44,62,0|gu6x00,46,63,1|h4mrjz,46,63,1|h4mrk0,44,62,0|hcwznz,44,62,0|hcwzo0,46,63,1|hncu7z,46,63,1|hncu80,44,62,0|hvn2bz,44,62,0|hvn2c0,46,63,1|i6fvjz,46,63,1|i6fvk0,44,62,0|ied4zz,44,62,0|ied500,46,63,1|ip5y7z,46,63,1|ip5y80,44,62,0|ix37nz,44,62,0|ix37o0,46,63,1|j7w0vz,46,63,1|j7w0w0,44,62,0|jeqebz,44,62,0|jeqec0,46,63,1|jqz27z,46,63,1|jqz280,44,62,0|jxggzz,44,62,0|jxgh00,46,63,1|k9p4vz,46,63,1|k9p4w0,44,62,0|kg6jnz,44,62,0|kg6jo0,46,63,1|ksf7jz,46,63,1|ksf7k0,44,62,0|kz9kzz,44,62,0|kz9l00,46,63,1|lbi8vz,46,63,1|lbi8w0,44,62,0|lhznnz,44,62,0|lhzno0,46,63,1|lu8bjz,46,63,1|lu8bk0,44,62,0|m0pqbz,44,62,0|m0pqc0,46,63,1|mcye7z,46,63,1|mcye80,44,62,0|mjfszz,44,62,0|mjft00,46,63,1|mvogvz,46,63,1|mvogw0,44,62,0|n25vnz,44,62,0|n25vo0,46,63,1|neejjz,46,63,1|neejk0,44,62,0|nkvybz,44,62,0|nkvyc0,46,63,1|nx4m7z,46,63,1|nx4m80,44,62,0|o3yznz,44,62,0|o3yzo0,46,63,1|og7njz,46,63,1|og7nk0,44,62,0|omp2bz,44,62,0|omp2c0,46,63,1|oyxq7z,46,63,1|oyxq80,44,62,0|p5f4zz,44,62,0|p5f500,46,63,1|phnsvz,46,63,1|phnsw0,44,62,0|po57nz,44,62,0|po57o0,46,63,1|q0dvjz,46,63,1|q0dvk0,44,62,0|q6vabz,44,62,0|q6vac0,46,63,1|qj3y7z,46,63,1|qj3y80,44,62,0|qpybnz,44,62,0|qpybo0,46,63,1|r26zjz,46,63,1|r26zk0,44,62,0|r8oebz,44,62,0|r8oec0,46,63,1|rkx27z,46,63,1|rkx280,44,62,0|rregzz,44,62,0|rreh00,46,63,1|s3n4vz,46,63,1|s3n4w0,44,62,0|sa4jnz,44,62,0|sa4jo0,46,63,1|smd7jz,46,63,1|smd7k0,44,62,0|ssumbz,44,62,0|ssumc0,46,63,1|t53a7z,46,63,1|t53a80,44,62,0|tbkozz,44,62,0|tbkp00,46,63,1|tntcvz,46,63,1|tntcw0,44,62,0|tunqbz,44,62,0|tunqc0,46,63,1|u6we7z,46,63,1|u6we80,44,62,0|uddszz,44,62,0|uddt00,46,63,1|upmgvz,46,63,1|upmgw0,44,62,0|uw3vnz,44,62,0|uw3vo0,46,63,1|v8cjjz,46,63,1|v8cjk0,44,62,0|vetybz,44,62,0|vetyc0,46,63,1|vr2m7z,46,63,1|vr2m80,44,62,0|vxk0zz,44,62,0|vxk100,46,63,1|w9sovz,46,63,1|w9sow0,44,62,0|wgn2bz,44,62,0|wgn2c0,46,63,1|wsvq7z,46,63,1|wsvq80,44,62,0|wzd4zz,44,62,0|wzd500,46,63,1|xblsvz,46,63,1|xblsw0,44,62,0|xi37nz,44,62,0|xi37o0,46,63,1|xubvjz,46,63,1|xubvk0,44,62,0|y0tabz,44,62,0|y0tac0,46,63,1|yd1y7z,46,63,1|yd1y80,44,62,0|yjjczz,44,62,0|yjjd00,46,63,1|yvs0vz,46,63,1|yvs0w0,44,62,0|z29fnz,44,62,0|z29fo0,46,63,1|zei3jz,46,63,1|zei3k0,44,62,0|zlcgzz,44,62,0|zlch00,46,63,1|zxl4vz,46,63,1|zxl4w0,44,62,0|1042jnz,44,62,0|1042jo0,46,63,1|10gb7jz,46,63,1|10gb7k0,44,62,0|10msmbz,44,62,0|10msmc0,46,63,1|10z1a7z,46,63,1|10z1a80,44,62,0|115iozz,44,62,0|115ip00,46,63,1|11hrcvz,46,63,1|11hrcw0,44,62,0|11o8rnz,44,62,0|11o8ro0,46,63,1|120hfjz,46,63,1|120hfk0,44,62,0|126yubz,44,62,0|126yuc0,46,63,1|12j7i7z,46,63,1|12j7i80,44,62,0|12q1vnz,44,62,0|12q1vo0,46,63,1|132ajjz,46,63,1|132ajk0,44,62,0|138rybz,44,62,0|138ryc0,46,63,1|13l0m7z,46,63,1|13l0m80,44,62,0|13ri0zz,44,62,0|13ri100,46,63,1|143qovz,46,63,1|143qow0,44,62,0|14a83nz,44,62,0|14a83o0,46,63,1|14mgrjz,46,63,1|14mgrk0,44,62,0|14sy6bz,44,62,0|14sy6c0,46,63,1|1556u7z,46,63,1|1556u80,44,62,0|15c17nz,44,62,0|15c17o0,46,63,1|15o9vjz,46,63,1|15o9vk0,44,62,0|15urabz,44,62,0|15urac0,46,63,1|166zy7z,46,63,1|166zy80,44,62,0|16dhczz,44,62,0|16dhd00,46,63,1|16pq0vz,46,63,1|16pq0w0,44,62,0|16w7fnz,44,62,0|16w7fo0,46,63,1|178g3jz,46,63,1|178g3k0,44,62,0|17exibz,44,62,0|17exic0,46,63,1|17r667z,46,63,1|17r6680,44,62,0|17xnkzz,44,62,0|17xnl00,46,63,1|189w8vz,46,63,1|189w8w0,44,62,0|18gqmbz,44,62,0|18gqmc0,46,63,1|18sza7z,46,63,1|18sza80,44,62,0|18zgozz,44,62,0|18zgp00,46,63,1|19bpcvz,46,63,1|19bpcw0,44,62,0|19i6rnz,44,62,0|19i6ro0,46,63,1|19uffjz,46,63,1|19uffk0,44,62,0|1a0wubz,44,62,0|1a0wuc0,46,63,1|1ad5i7z,46,63,1|1ad5i80,44,62,0|1ajmwzz,44,62,0|1ajmx00,46,63,1|1avvkvz,46,63,1|1avvkw0,44,62,0|1b2pybz,44,62,0|1b2pyc0,46,63,1|1beym7z,46,63,1|1beym80,44,62,0|1blg0zz,44,62,0|1blg100,46,63,1|1bxoovz,46,63,1|1bxoow0,44,62,0|1c463nz,44,62,0|1c463o0,46,63,1|1cgerjz,46,63,1|1cgerk0,44,62,0|1cmw6bz,44,62,0|1cmw6c0,46,63,1|1cz4u7z,46,63,1|1cz4u80,44,62,0|1d5m8zz,44,62,0|1d5m900,46,63,1|1dhuwvz,46,63,1|1dhuww0,44,62,0|1docbnz,44,62,0|1docbo0,46,63,1|1e0kzjz,46,63,1|1e0kzk0,44,62,0|1e7fczz,44,62,0|1e7fd00,46,63,1|1ejo0vz,46,63,1|1ejo0w0,44,62,0|1eq5fnz,44,62,0|1eq5fo0,46,63,1|1f2e3jz,46,63,1|1f2e3k0,44,62,0|1f8vibz,44,62,0|1f8vic0,46,63,1|1fl467z,46,63,1|1fl4680,44,62,0|1frlkzz,44,62,0|1frll00,46,63,1|1g3u8vz,46,63,1|1g3u8w0,44,62,0|1gabnnz,44,62,0|1gabno0,46,63,1|1gmkbjz,46,63,1|1gmkbk0,44,62,0|1gt1qbz,44,62,0|1gt1qc0,46,63,1|1h5ae7z,46,63,1|1h5ae80,44,62,0|1hc4rnz,44,62,0|1hc4ro0,46,63,1|1hodfjz,46,63,1|1hodfk0,44,62,0|1huuubz,44,62,0|1huuuc0,46,63,1|1i73i7z,46,63,1|1i73i80,44,62,0|1idkwzz,44,62,0|1idkx00,46,63,1|1iptkvz,46,63,1|1iptkw0,44,62,0|1iwaznz,44,62,0|1iwazo0,46,63,1|1j8jnjz,46,63,1|1j8jnk0,44,62,0|1jf12bz,44,62,0|1jf12c0,46,63,1|1jr9q7z,46,63,1|1jr9q80,44,62,0|1jy43nz,44,62,0|1jy43o0,46,63,1|1kacrjz,46,63,1|1kacrk0,44,62,0|1kgu6bz,44,62,0|1kgu6c0,46,63,1|1kt2u7z,46,63,1|1kt2u80,44,62,0|1kzk8zz,44,62,0|1kzk900,46,63,1|1lbswvz,46,63,1|1lbsww0,44,62,0|1liabnz,44,62,0|1liabo0,46,63,1|1luizjz,46,63,1|1luizk0,44,62,0|1m10ebz,44,62,0|1m10ec0,46,63,1|1md927z,46,63,1|1md9280,44,62,0|1mjqgzz,44,62,0|1mjqh00,46,63,1|1mvz4vz,46,63,1|1mvz4w0,44,62,0|1n2tibz,44,62,0|1n2tic0,46,63,1|1nf267z,46,63,1|1nf2680,44,62,0|1nljkzz,44,62,0|1nljl00,46,63,1|1nxs8vz,46,63,1|1nxs8w0,44,62,0|1o49nnz,44,62,0|1o49no0,46,63,1|1ogibjz,46,63,1|1ogibk0,44,62,0|1omzqbz,44,62,0|1omzqc0,46,63,1|1oz8e7z,46,63,1|1oz8e80,44,62,0|1p5pszz,44,62,0|1p5pt00,46,63,1|1phygvz,46,63,1|1phygw0,44,62,0|1posubz,44,62,0|1posuc0,46,63,1|1q11i7z,46,63,1|1q11i80,44,62,0|1q7iwzz,44,62,0|1q7ix00,46,63,1|1qjrkvz,46,63,1|1qjrkw0,44,62,0|1qq8znz,44,62,0|1qq8zo0,46,63,1|1r2hnjz,46,63,1|1r2hnk0,44,62,0|1r8z2bz,44,62,0|1r8z2c0,46,63,1|1rl7q7z,46,63,1|1rl7q80,44,62,0|1rrp4zz,44,62,0|1rrp500,46,63,1|1s3xsvz,46,63,1|1s3xsw0,44,62,0|1saf7nz,44,62,0|1saf7o0,46,63,1|1smnvjz,46,63,1|1smnvk0,44,62,0|1sti8zz,44,62,0|1sti900,46,63,1|1t5qwvz,46,63,1|1t5qww0,44,62,0|1tc8bnz,44,62,0|1tc8bo0,46,63,1|1togzjz,46,63,1|1togzk0,44,62,0|1tuyebz,44,62,0|1tuyec0,46,63,1|1u7727z,46,63,1|1u77280,44,62,0|1udogzz,44,62,0|1udoh00,46,63,1|1upx4vz,46,63,1|1upx4w0,44,62,0|1uwejnz,44,62,0|1uwejo0,46,63,1|1v8n7jz,46,63,1|1v8n7k0,44,62,0|1vf4mbz,44,62,0|1vf4mc0,46,63,1|1vrda7z,46,63,1|1vrda80,44,62,0|NaN,44,62,0",
        "America/Eirunepe|,0,90,0|-t85f29,0,90,0|-t85f28,54,59,0|-jyl4w1,54,59,0|-jyl4w0,41,40,1|-jpavk1,41,40,1|-jpavk0,54,59,0|-jfs7g1,54,59,0|-jfs7g0,41,40,1|-j6iy81,41,40,1|-j6iy80,54,59,0|-ahcss1,54,59,0|-ahcss0,41,40,1|-aacy41,41,40,1|-aacy40,54,59,0|-9ykvg1,54,59,0|-9ykvg0,41,40,1|-9scvk1,41,40,1|-9scvk0,54,59,0|-9fsy41,54,59,0|-9fsy40,41,40,1|-99j3k1,41,40,1|-99j3k0,54,59,0|-8wz641,54,59,0|-8wz640,41,40,1|-8sckw1,41,40,1|-8sckw0,54,59,0|-35xgs1,54,59,0|-35xgs0,41,40,1|-31nu81,41,40,1|-31nu80,54,59,0|-2kdjg1,54,59,0|-2kdjg0,41,40,1|-2hccw1,41,40,1|-2hccw0,54,59,0|-24qks1,54,59,0|-24qks0,41,40,1|-203zk1,41,40,1|-203zk0,54,59,0|-1ni7g1,54,59,0|-1ni7g0,41,40,1|-1hc281,41,40,1|-1hc280,54,59,0|-14qa41,54,59,0|-14qa40,41,40,1|-yia81,41,40,1|-yia80,54,59,0|89jhvz,54,59,0|89jhw0,41,40,1|8gdprz,41,40,1|8gdps0,54,59,0|8rwlvz,54,59,0|8rwlw0,41,40,1|8xnxrz,41,40,1|8xnxs0,54,59,0|9aoj7z,54,59,0|9aoj80,41,40,1|9g2wfz,41,40,1|9g2wg0,54,59,0|cf0z7z,54,59,0|cf0z80,41,40,1|cli8fz,41,40,1|cli8g0,54,59,0|k2yb7z,54,59,0|k2yb80,41,40,0|mw14fz,41,40,0|mw14g0,54,59,0|NaN,54,59,0",
        "America/El_Salvador|,0,91,0|-pkm4td,0,91,0|-pkm4tc,45,63,0|91ojbz,45,63,0|91ojc0,47,59,1|998ojz,47,59,1|998ok0,45,63,0|9kelzz,45,63,0|9kem00,47,59,1|9ryr7z,47,59,1|9ryr80,45,63,0|NaN,45,63,0",
        "America/Fort_Nelson|,0,92,0|-18vrvy2,0,92,0|-18vrvy1,55,38,0|-qzopk1,55,38,0|-qzopk0,56,62,1|-qplto1,56,62,1|-qplto0,55,38,0|-ek1w81,55,38,0|-ek1w80,67,62,1|-cq2tg1,67,62,1|-cq2tg0,68,62,1|-cnov01,68,62,1|-cnov00,55,38,0|-bu5tk1,55,38,0|-bu5tk0,56,62,1|-bm8po1,56,62,1|-bm8po0,55,38,0|-bbfqw1,55,38,0|-bbfqw0,56,62,1|-b3in01,56,62,1|-b3in00,55,38,0|-aspo81,55,38,0|-aspo80,56,62,1|-akskc1,56,62,1|-akskc0,55,38,0|-a9mmw1,55,38,0|-a9mmw0,56,62,1|-a22ho1,56,62,1|-a22ho0,55,38,0|-9qwk81,55,38,0|-9qwk80,56,62,1|-9izgc1,56,62,1|-9izgc0,55,38,0|-986hk1,55,38,0|-986hk0,56,62,1|-909do1,56,62,1|-909do0,55,38,0|-8pgew1,55,38,0|-8pgew0,56,62,1|-8hjb01,56,62,1|-8hjb00,55,38,0|-86qc81,55,38,0|-86qc80,56,62,1|-7yt8c1,56,62,1|-7yt8c0,55,38,0|-7o09k1,55,38,0|-7o09k0,56,62,1|-7g35o1,56,62,1|-7g35o0,55,38,0|-74x881,55,38,0|-74x880,56,62,1|-6x04c1,56,62,1|-6x04c0,55,38,0|-6m75k1,55,38,0|-6m75k0,56,62,1|-6ea1o1,56,62,1|-6ea1o0,55,38,0|-63h2w1,55,38,0|-63h2w0,56,62,1|-5vjz01,56,62,1|-5vjz00,55,38,0|-5kr081,55,38,0|-5kr080,56,62,1|-5ctwc1,56,62,1|-5ctwc0,55,38,0|-520xk1,55,38,0|-520xk0,56,62,1|-4u3to1,56,62,1|-4u3to0,55,38,0|-4ixw81,55,38,0|-4ixw80,56,62,1|-4bdr01,56,62,1|-4bdr00,55,38,0|-407tk1,55,38,0|-407tk0,56,62,1|-3quv01,56,62,1|-3quv00,55,38,0|-3hhqw1,55,38,0|-3hhqw0,56,62,1|-384sc1,56,62,1|-384sc0,55,38,0|-2yro81,55,38,0|-2yro80,56,62,1|-2pepo1,56,62,1|-2pepo0,55,38,0|-2g1lk1,55,38,0|-2g1lk0,56,62,1|-26boc1,56,62,1|-26boc0,55,38,0|-1xbiw1,55,38,0|-1xbiw0,56,62,1|-1nllo1,56,62,1|-1nllo0,55,38,0|-1e8hk1,55,38,0|-1e8hk0,56,62,1|-14vj01,56,62,1|-14vj00,55,38,0|-view1,55,38,0|-view0,56,62,1|-m5gc1,56,62,1|-m5gc0,55,38,0|-csc81,55,38,0|-csc80,56,62,1|-3fdo1,56,62,1|-3fdo0,55,38,0|5xqfz,55,38,0|5xqg0,56,62,1|faozz,56,62,1|fap00,55,38,0|ont3z,55,38,0|ont40,56,62,1|ydqbz,56,62,1|ydqc0,55,38,0|17qufz,55,38,0|17qug0,56,62,1|1h3szz,56,62,1|1h3t00,55,38,0|1qgx3z,55,38,0|1qgx40,56,62,1|1ztvnz,56,62,1|1ztvo0,55,38,0|296zrz,55,38,0|296zs0,56,62,1|2ijybz,56,62,1|2ijyc0,55,38,0|2rx2fz,55,38,0|2rx2g0,56,62,1|31a0zz,56,62,1|31a100,55,38,0|3an53z,55,38,0|3an540,56,62,1|3kd2bz,56,62,1|3kd2c0,55,38,0|3td7rz,55,38,0|3td7s0,56,62,1|4334zz,56,62,1|433500,55,38,0|4cg93z,55,38,0|4cg940,56,62,1|4lt7nz,56,62,1|4lt7o0,55,38,0|4v6brz,55,38,0|4v6bs0,56,62,1|54jabz,56,62,1|54jac0,55,38,0|5dwefz,55,38,0|5dweg0,56,62,1|5n9czz,56,62,1|5n9d00,55,38,0|5wmh3z,55,38,0|5wmh40,56,62,1|65zfnz,56,62,1|65zfo0,55,38,0|6fcjrz,55,38,0|6fcjs0,56,62,1|6p2gzz,56,62,1|6p2h00,55,38,0|6y2mfz,55,38,0|6y2mg0,56,62,1|77sjnz,56,62,1|77sjo0,55,38,0|7h5nrz,55,38,0|7h5ns0,56,62,1|7qimbz,56,62,1|7qimc0,55,38,0|7zvqfz,55,38,0|7zvqg0,56,62,1|898ozz,56,62,1|898p00,55,38,0|8ilt3z,55,38,0|8ilt40,56,62,1|8ryrnz,56,62,1|8ryro0,55,38,0|908zrz,55,38,0|908zs0,56,62,1|9aoubz,56,62,1|9aouc0,55,38,0|9iz2fz,55,38,0|9iz2g0,56,62,1|9trvnz,56,62,1|9trvo0,55,38,0|a1p53z,55,38,0|a1p540,56,62,1|achybz,56,62,1|achyc0,55,38,0|akf7rz,55,38,0|akf7s0,56,62,1|av80zz,56,62,1|av8100,55,38,0|b3i93z,55,38,0|b3i940,56,62,1|bdy3nz,56,62,1|bdy3o0,55,38,0|bm8brz,55,38,0|bm8bs0,56,62,1|bwo6bz,56,62,1|bwo6c0,55,38,0|c4yefz,55,38,0|c4yeg0,56,62,1|cfr7nz,56,62,1|cfr7o0,55,38,0|cnoh3z,55,38,0|cnoh40,56,62,1|cyhabz,56,62,1|cyhac0,55,38,0|d6ejrz,55,38,0|d6ejs0,56,62,1|dh7czz,56,62,1|dh7d00,55,38,0|dphl3z,55,38,0|dphl40,56,62,1|dzxfnz,56,62,1|dzxfo0,55,38,0|e87nrz,55,38,0|e87ns0,56,62,1|einibz,56,62,1|einic0,55,38,0|eqxqfz,55,38,0|eqxqg0,56,62,1|f1dkzz,56,62,1|f1dl00,55,38,0|f9nt3z,55,38,0|f9nt40,56,62,1|fkgmbz,56,62,1|fkgmc0,55,38,0|fsdvrz,55,38,0|fsdvs0,56,62,1|g36ozz,56,62,1|g36p00,55,38,0|gb3yfz,55,38,0|gb3yg0,56,62,1|glwrnz,56,62,1|glwro0,55,38,0|gu6zrz,55,38,0|gu6zs0,56,62,1|h4mubz,56,62,1|h4muc0,55,38,0|hcx2fz,55,38,0|hcx2g0,56,62,1|hncwzz,56,62,1|hncx00,55,38,0|hvn53z,55,38,0|hvn540,56,62,1|i6fybz,56,62,1|i6fyc0,55,38,0|ied7rz,55,38,0|ied7s0,56,62,1|ip60zz,56,62,1|ip6100,55,38,0|ix3afz,55,38,0|ix3ag0,56,62,1|j7w3nz,56,62,1|j7w3o0,55,38,0|jeqh3z,55,38,0|jeqh40,56,62,1|jqz4zz,56,62,1|jqz500,55,38,0|jxgjrz,55,38,0|jxgjs0,56,62,1|k9p7nz,56,62,1|k9p7o0,55,38,0|kg6mfz,55,38,0|kg6mg0,56,62,1|ksfabz,56,62,1|ksfac0,55,38,0|kz9nrz,55,38,0|kz9ns0,56,62,1|lbibnz,56,62,1|lbibo0,55,38,0|lhzqfz,55,38,0|lhzqg0,56,62,1|lu8ebz,56,62,1|lu8ec0,55,38,0|m0pt3z,55,38,0|m0pt40,56,62,1|mcygzz,56,62,1|mcyh00,55,38,0|mjfvrz,55,38,0|mjfvs0,56,62,1|mvojnz,56,62,1|mvojo0,55,38,0|n25yfz,55,38,0|n25yg0,56,62,1|neembz,56,62,1|neemc0,55,38,0|nkw13z,55,38,0|nkw140,44,62,0|NaN,44,62,0",
        "America/Fortaleza|,0,93,0|-t85kvd,0,93,0|-t85kvc,38,41,0|-jylag1,38,41,0|-jylag0,39,43,1|-jpb141,39,43,1|-jpb140,38,41,0|-jfsd01,38,41,0|-jfsd00,39,43,1|-j6j3s1,39,43,1|-j6j3s0,38,41,0|-ahcyc1,38,41,0|-ahcyc0,39,43,1|-aad3o1,39,43,1|-aad3o0,38,41,0|-9yl101,38,41,0|-9yl100,39,43,1|-9sd141,39,43,1|-9sd140,38,41,0|-9ft3o1,38,41,0|-9ft3o0,39,43,1|-99j941,39,43,1|-99j940,38,41,0|-8wzbo1,38,41,0|-8wzbo0,39,43,1|-8scqg1,39,43,1|-8scqg0,38,41,0|-35xmc1,38,41,0|-35xmc0,39,43,1|-31nzs1,39,43,1|-31nzs0,38,41,0|-2kdp01,38,41,0|-2kdp00,39,43,1|-2hcig1,39,43,1|-2hcig0,38,41,0|-24qqc1,38,41,0|-24qqc0,39,43,1|-204541,39,43,1|-204540,38,41,0|-1nid01,38,41,0|-1nid00,39,43,1|-1hc7s1,39,43,1|-1hc7s0,38,41,0|-14qfo1,38,41,0|-14qfo0,39,43,1|-yifs1,39,43,1|-yifs0,38,41,0|89jcbz,38,41,0|89jcc0,39,43,1|8gdk7z,39,43,1|8gdk80,38,41,0|8rwgbz,38,41,0|8rwgc0,39,43,1|8xns7z,39,43,1|8xns80,38,41,0|9aodnz,38,41,0|9aodo0,39,43,1|9g2qvz,39,43,1|9g2qw0,38,41,0|9t1hnz,38,41,0|9t1ho0,39,43,1|9yfuvz,39,43,1|9yfuw0,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|ahvuvz,39,43,1|ahvuw0,38,41,0|fj0azz,38,41,0|fj0b00,39,43,1|fqkg7z,39,43,1|fqkg80,38,41,0|g23cbz,38,41,0|g23cc0,39,43,1|g2t6vz,39,43,1|g2t6w0,38,41,0|gl6dnz,38,41,0|gl6do0,39,43,1|grnmvz,39,43,1|grnmw0,38,41,0|NaN,38,41,0",
        "America/Glace_Bay|,0,94,0|-z94kwd,0,94,0|-z94kwc,31,40,0|-qzp0o1,31,40,0|-qzp0o0,48,41,1|-qpm4s1,48,41,1|-qpm4s0,31,40,0|-ek27c1,31,40,0|-ek27c0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|-8pgq01,31,40,0|-8pgq00,48,41,1|-8hjm41,48,41,1|-8hjm40,31,40,0|17qjbz,31,40,0|17qjc0,48,41,1|1h3hvz,48,41,1|1h3hw0,31,40,0|1qglzz,31,40,0|1qgm00,48,41,1|1ztkjz,48,41,1|1ztkk0,31,40,0|296onz,31,40,0|296oo0,48,41,1|2ijn7z,48,41,1|2ijn80,31,40,0|2rwrbz,31,40,0|2rwrc0,48,41,1|319pvz,48,41,1|319pw0,31,40,0|3amtzz,31,40,0|3amu00,48,41,1|3kcr7z,48,41,1|3kcr80,31,40,0|3tcwnz,31,40,0|3tcwo0,48,41,1|432tvz,48,41,1|432tw0,31,40,0|4cfxzz,31,40,0|4cfy00,48,41,1|4lswjz,48,41,1|4lswk0,31,40,0|4v60nz,31,40,0|4v60o0,48,41,1|54iz7z,48,41,1|54iz80,31,40,0|5dw3bz,31,40,0|5dw3c0,48,41,1|5n91vz,48,41,1|5n91w0,31,40,0|5wm5zz,31,40,0|5wm600,48,41,1|65z4jz,48,41,1|65z4k0,31,40,0|6fc8nz,31,40,0|6fc8o0,48,41,1|6p25vz,48,41,1|6p25w0,31,40,0|6y2bbz,31,40,0|6y2bc0,48,41,1|77s8jz,48,41,1|77s8k0,31,40,0|7h5cnz,31,40,0|7h5co0,48,41,1|7qib7z,48,41,1|7qib80,31,40,0|7zvfbz,31,40,0|7zvfc0,48,41,1|898dvz,48,41,1|898dw0,31,40,0|8ilhzz,31,40,0|8ili00,48,41,1|8rygjz,48,41,1|8rygk0,31,40,0|908onz,31,40,0|908oo0,48,41,1|9aoj7z,48,41,1|9aoj80,31,40,0|9iyrbz,31,40,0|9iyrc0,48,41,1|9trkjz,48,41,1|9trkk0,31,40,0|a1otzz,31,40,0|a1ou00,48,41,1|achn7z,48,41,1|achn80,31,40,0|akewnz,31,40,0|akewo0,48,41,1|av7pvz,48,41,1|av7pw0,31,40,0|b3hxzz,31,40,0|b3hy00,48,41,1|bdxsjz,48,41,1|bdxsk0,31,40,0|bm80nz,31,40,0|bm80o0,48,41,1|bwnv7z,48,41,1|bwnv80,31,40,0|c4y3bz,31,40,0|c4y3c0,48,41,1|cfqwjz,48,41,1|cfqwk0,31,40,0|cno5zz,31,40,0|cno600,48,41,1|cygz7z,48,41,1|cygz80,31,40,0|d6e8nz,31,40,0|d6e8o0,48,41,1|dh71vz,48,41,1|dh71w0,31,40,0|dph9zz,31,40,0|dpha00,48,41,1|dzx4jz,48,41,1|dzx4k0,31,40,0|e87cnz,31,40,0|e87co0,48,41,1|ein77z,48,41,1|ein780,31,40,0|eqxfbz,31,40,0|eqxfc0,48,41,1|f1d9vz,48,41,1|f1d9w0,31,40,0|f9nhzz,31,40,0|f9ni00,48,41,1|fkgb7z,48,41,1|fkgb80,31,40,0|fsdknz,31,40,0|fsdko0,48,41,1|g36dvz,48,41,1|g36dw0,31,40,0|gb3nbz,31,40,0|gb3nc0,48,41,1|glwgjz,48,41,1|glwgk0,31,40,0|gu6onz,31,40,0|gu6oo0,48,41,1|h4mj7z,48,41,1|h4mj80,31,40,0|hcwrbz,31,40,0|hcwrc0,48,41,1|hnclvz,48,41,1|hnclw0,31,40,0|hvmtzz,31,40,0|hvmu00,48,41,1|i6fn7z,48,41,1|i6fn80,31,40,0|iecwnz,31,40,0|iecwo0,48,41,1|ip5pvz,48,41,1|ip5pw0,31,40,0|ix2zbz,31,40,0|ix2zc0,48,41,1|j7vsjz,48,41,1|j7vsk0,31,40,0|jeq5zz,31,40,0|jeq600,48,41,1|jqytvz,48,41,1|jqytw0,31,40,0|jxg8nz,31,40,0|jxg8o0,48,41,1|k9owjz,48,41,1|k9owk0,31,40,0|kg6bbz,31,40,0|kg6bc0,48,41,1|ksez7z,48,41,1|ksez80,31,40,0|kz9cnz,31,40,0|kz9co0,48,41,1|lbi0jz,48,41,1|lbi0k0,31,40,0|lhzfbz,31,40,0|lhzfc0,48,41,1|lu837z,48,41,1|lu8380,31,40,0|m0phzz,31,40,0|m0pi00,48,41,1|mcy5vz,48,41,1|mcy5w0,31,40,0|mjfknz,31,40,0|mjfko0,48,41,1|mvo8jz,48,41,1|mvo8k0,31,40,0|n25nbz,31,40,0|n25nc0,48,41,1|neeb7z,48,41,1|neeb80,31,40,0|nkvpzz,31,40,0|nkvq00,48,41,1|nx4dvz,48,41,1|nx4dw0,31,40,0|o3yrbz,31,40,0|o3yrc0,48,41,1|og7f7z,48,41,1|og7f80,31,40,0|omotzz,31,40,0|omou00,48,41,1|oyxhvz,48,41,1|oyxhw0,31,40,0|p5ewnz,31,40,0|p5ewo0,48,41,1|phnkjz,48,41,1|phnkk0,31,40,0|po4zbz,31,40,0|po4zc0,48,41,1|q0dn7z,48,41,1|q0dn80,31,40,0|q6v1zz,31,40,0|q6v200,48,41,1|qj3pvz,48,41,1|qj3pw0,31,40,0|qpy3bz,31,40,0|qpy3c0,48,41,1|r26r7z,48,41,1|r26r80,31,40,0|r8o5zz,31,40,0|r8o600,48,41,1|rkwtvz,48,41,1|rkwtw0,31,40,0|rre8nz,31,40,0|rre8o0,48,41,1|s3mwjz,48,41,1|s3mwk0,31,40,0|sa4bbz,31,40,0|sa4bc0,48,41,1|smcz7z,48,41,1|smcz80,31,40,0|ssudzz,31,40,0|ssue00,48,41,1|t531vz,48,41,1|t531w0,31,40,0|tbkgnz,31,40,0|tbkgo0,48,41,1|tnt4jz,48,41,1|tnt4k0,31,40,0|tunhzz,31,40,0|tuni00,48,41,1|u6w5vz,48,41,1|u6w5w0,31,40,0|uddknz,31,40,0|uddko0,48,41,1|upm8jz,48,41,1|upm8k0,31,40,0|uw3nbz,31,40,0|uw3nc0,48,41,1|v8cb7z,48,41,1|v8cb80,31,40,0|vetpzz,31,40,0|vetq00,48,41,1|vr2dvz,48,41,1|vr2dw0,31,40,0|vxjsnz,31,40,0|vxjso0,48,41,1|w9sgjz,48,41,1|w9sgk0,31,40,0|wgmtzz,31,40,0|wgmu00,48,41,1|wsvhvz,48,41,1|wsvhw0,31,40,0|wzcwnz,31,40,0|wzcwo0,48,41,1|xblkjz,48,41,1|xblkk0,31,40,0|xi2zbz,31,40,0|xi2zc0,48,41,1|xubn7z,48,41,1|xubn80,31,40,0|y0t1zz,31,40,0|y0t200,48,41,1|yd1pvz,48,41,1|yd1pw0,31,40,0|yjj4nz,31,40,0|yjj4o0,48,41,1|yvrsjz,48,41,1|yvrsk0,31,40,0|z297bz,31,40,0|z297c0,48,41,1|zehv7z,48,41,1|zehv80,31,40,0|zlc8nz,31,40,0|zlc8o0,48,41,1|zxkwjz,48,41,1|zxkwk0,31,40,0|1042bbz,31,40,0|1042bc0,48,41,1|10gaz7z,48,41,1|10gaz80,31,40,0|10msdzz,31,40,0|10mse00,48,41,1|10z11vz,48,41,1|10z11w0,31,40,0|115ignz,31,40,0|115igo0,48,41,1|11hr4jz,48,41,1|11hr4k0,31,40,0|11o8jbz,31,40,0|11o8jc0,48,41,1|120h77z,48,41,1|120h780,31,40,0|126ylzz,31,40,0|126ym00,48,41,1|12j79vz,48,41,1|12j79w0,31,40,0|12q1nbz,31,40,0|12q1nc0,48,41,1|132ab7z,48,41,1|132ab80,31,40,0|138rpzz,31,40,0|138rq00,48,41,1|13l0dvz,48,41,1|13l0dw0,31,40,0|13rhsnz,31,40,0|13rhso0,48,41,1|143qgjz,48,41,1|143qgk0,31,40,0|14a7vbz,31,40,0|14a7vc0,48,41,1|14mgj7z,48,41,1|14mgj80,31,40,0|14sxxzz,31,40,0|14sxy00,48,41,1|1556lvz,48,41,1|1556lw0,31,40,0|15c0zbz,31,40,0|15c0zc0,48,41,1|15o9n7z,48,41,1|15o9n80,31,40,0|15ur1zz,31,40,0|15ur200,48,41,1|166zpvz,48,41,1|166zpw0,31,40,0|16dh4nz,31,40,0|16dh4o0,48,41,1|16ppsjz,48,41,1|16ppsk0,31,40,0|16w77bz,31,40,0|16w77c0,48,41,1|178fv7z,48,41,1|178fv80,31,40,0|17ex9zz,31,40,0|17exa00,48,41,1|17r5xvz,48,41,1|17r5xw0,31,40,0|17xncnz,31,40,0|17xnco0,48,41,1|189w0jz,48,41,1|189w0k0,31,40,0|18gqdzz,31,40,0|18gqe00,48,41,1|18sz1vz,48,41,1|18sz1w0,31,40,0|18zggnz,31,40,0|18zggo0,48,41,1|19bp4jz,48,41,1|19bp4k0,31,40,0|19i6jbz,31,40,0|19i6jc0,48,41,1|19uf77z,48,41,1|19uf780,31,40,0|1a0wlzz,31,40,0|1a0wm00,48,41,1|1ad59vz,48,41,1|1ad59w0,31,40,0|1ajmonz,31,40,0|1ajmoo0,48,41,1|1avvcjz,48,41,1|1avvck0,31,40,0|1b2ppzz,31,40,0|1b2pq00,48,41,1|1beydvz,48,41,1|1beydw0,31,40,0|1blfsnz,31,40,0|1blfso0,48,41,1|1bxogjz,48,41,1|1bxogk0,31,40,0|1c45vbz,31,40,0|1c45vc0,48,41,1|1cgej7z,48,41,1|1cgej80,31,40,0|1cmvxzz,31,40,0|1cmvy00,48,41,1|1cz4lvz,48,41,1|1cz4lw0,31,40,0|1d5m0nz,31,40,0|1d5m0o0,48,41,1|1dhuojz,48,41,1|1dhuok0,31,40,0|1doc3bz,31,40,0|1doc3c0,48,41,1|1e0kr7z,48,41,1|1e0kr80,31,40,0|1e7f4nz,31,40,0|1e7f4o0,48,41,1|1ejnsjz,48,41,1|1ejnsk0,31,40,0|1eq57bz,31,40,0|1eq57c0,48,41,1|1f2dv7z,48,41,1|1f2dv80,31,40,0|1f8v9zz,31,40,0|1f8va00,48,41,1|1fl3xvz,48,41,1|1fl3xw0,31,40,0|1frlcnz,31,40,0|1frlco0,48,41,1|1g3u0jz,48,41,1|1g3u0k0,31,40,0|1gabfbz,31,40,0|1gabfc0,48,41,1|1gmk37z,48,41,1|1gmk380,31,40,0|1gt1hzz,31,40,0|1gt1i00,48,41,1|1h5a5vz,48,41,1|1h5a5w0,31,40,0|1hc4jbz,31,40,0|1hc4jc0,48,41,1|1hod77z,48,41,1|1hod780,31,40,0|1huulzz,31,40,0|1huum00,48,41,1|1i739vz,48,41,1|1i739w0,31,40,0|1idkonz,31,40,0|1idkoo0,48,41,1|1iptcjz,48,41,1|1iptck0,31,40,0|1iwarbz,31,40,0|1iwarc0,48,41,1|1j8jf7z,48,41,1|1j8jf80,31,40,0|1jf0tzz,31,40,0|1jf0u00,48,41,1|1jr9hvz,48,41,1|1jr9hw0,31,40,0|1jy3vbz,31,40,0|1jy3vc0,48,41,1|1kacj7z,48,41,1|1kacj80,31,40,0|1kgtxzz,31,40,0|1kgty00,48,41,1|1kt2lvz,48,41,1|1kt2lw0,31,40,0|1kzk0nz,31,40,0|1kzk0o0,48,41,1|1lbsojz,48,41,1|1lbsok0,31,40,0|1lia3bz,31,40,0|1lia3c0,48,41,1|1luir7z,48,41,1|1luir80,31,40,0|1m105zz,31,40,0|1m10600,48,41,1|1md8tvz,48,41,1|1md8tw0,31,40,0|1mjq8nz,31,40,0|1mjq8o0,48,41,1|1mvywjz,48,41,1|1mvywk0,31,40,0|1n2t9zz,31,40,0|1n2ta00,48,41,1|1nf1xvz,48,41,1|1nf1xw0,31,40,0|1nljcnz,31,40,0|1nljco0,48,41,1|1nxs0jz,48,41,1|1nxs0k0,31,40,0|1o49fbz,31,40,0|1o49fc0,48,41,1|1ogi37z,48,41,1|1ogi380,31,40,0|1omzhzz,31,40,0|1omzi00,48,41,1|1oz85vz,48,41,1|1oz85w0,31,40,0|1p5pknz,31,40,0|1p5pko0,48,41,1|1phy8jz,48,41,1|1phy8k0,31,40,0|1poslzz,31,40,0|1posm00,48,41,1|1q119vz,48,41,1|1q119w0,31,40,0|1q7ionz,31,40,0|1q7ioo0,48,41,1|1qjrcjz,48,41,1|1qjrck0,31,40,0|1qq8rbz,31,40,0|1qq8rc0,48,41,1|1r2hf7z,48,41,1|1r2hf80,31,40,0|1r8ytzz,31,40,0|1r8yu00,48,41,1|1rl7hvz,48,41,1|1rl7hw0,31,40,0|1rrownz,31,40,0|1rrowo0,48,41,1|1s3xkjz,48,41,1|1s3xkk0,31,40,0|1saezbz,31,40,0|1saezc0,48,41,1|1smnn7z,48,41,1|1smnn80,31,40,0|1sti0nz,31,40,0|1sti0o0,48,41,1|1t5qojz,48,41,1|1t5qok0,31,40,0|1tc83bz,31,40,0|1tc83c0,48,41,1|1togr7z,48,41,1|1togr80,31,40,0|1tuy5zz,31,40,0|1tuy600,48,41,1|1u76tvz,48,41,1|1u76tw0,31,40,0|1udo8nz,31,40,0|1udo8o0,48,41,1|1upwwjz,48,41,1|1upwwk0,31,40,0|1uwebbz,31,40,0|1uwebc0,48,41,1|1v8mz7z,48,41,1|1v8mz80,31,40,0|1vf4dzz,31,40,0|1vf4e00,48,41,1|1vrd1vz,48,41,1|1vrd1w0,31,40,0|NaN,31,40,0",
        "America/Goose_Bay|,0,95,0|-18vs7h9,0,95,0|-18vs7h8,23,96,0|-qzp20l,23,96,0|-qzp20k,71,97,1|-qpm64l,71,97,1|-qpm64k,23,96,0|-i52u8l,23,96,0|-i52u8k,23,65,0|-hk3aa1,23,65,0|-hk3aa0,71,98,1|-hcj521,71,98,1|-hcj520,23,65,0|-h1d7m1,23,65,0|-h1d7m0,71,98,1|-gtt2e1,71,98,1|-gtt2e0,23,65,0|-gin4y1,23,65,0|-gin4y0,71,98,1|-gb2zq1,71,98,1|-gb2zq0,23,65,0|-fzk3m1,23,65,0|-fzk3m0,71,98,1|-fscx21,71,98,1|-fscx20,23,65,0|-fgu0y1,23,65,0|-fgu0y0,71,98,1|-f99vq1,71,98,1|-f99vq0,23,65,0|-ey3ya1,23,65,0|-ey3ya0,71,98,1|-eqjt21,71,98,1|-eqjt20,23,65,0|-efdvm1,23,65,0|-efdvm0,24,98,1|-cq2tg1,24,98,1|-cq2tg0,25,98,1|-cnp7i1,25,98,1|-cnp7i0,23,65,0|-cc6be1,23,65,0|-cc6be0,71,98,1|-c4m661,71,98,1|-c4m660,23,65,0|-btg8q1,23,65,0|-btg8q0,71,98,1|-blw3i1,71,98,1|-blw3i0,23,65,0|-baq621,23,65,0|-baq620,71,98,1|-b360u1,71,98,1|-b360u0,23,65,0|-as03e1,23,65,0|-as03e0,71,98,1|-akfy61,71,98,1|-akfy60,23,65,0|-a8x221,23,65,0|-a8x220,71,98,1|-a1cwu1,71,98,1|-a1cwu0,23,65,0|-9qwwq1,23,65,0|-9qwwq0,71,98,1|-9izsu1,71,98,1|-9izsu0,23,65,0|-986u21,23,65,0|-986u20,71,98,1|-909q61,71,98,1|-909q60,23,65,0|-8pgre1,23,65,0|-8pgre0,71,98,1|-8hjni1,71,98,1|-8hjni0,23,65,0|-86qoq1,23,65,0|-86qoq0,71,98,1|-7ytku1,71,98,1|-7ytku0,23,65,0|-7o0m21,23,65,0|-7o0m20,71,98,1|-7g3i61,71,98,1|-7g3i60,23,65,0|-74xkq1,23,65,0|-74xkq0,71,98,1|-6x0gu1,71,98,1|-6x0gu0,23,65,0|-6m7i21,23,65,0|-6m7i20,71,98,1|-6eae61,71,98,1|-6eae60,23,65,0|-63hfe1,23,65,0|-63hfe0,71,98,1|-5vkbi1,71,98,1|-5vkbi0,23,65,0|-5krcq1,23,65,0|-5krcq0,71,98,1|-5cu8u1,71,98,1|-5cu8u0,23,65,0|-521a21,23,65,0|-521a20,71,98,1|-4sbcu1,71,98,1|-4sbcu0,23,65,0|-4iy8q1,23,65,0|-4iy8q0,71,98,1|-49la61,71,98,1|-49la60,23,65,0|-408621,23,65,0|-408620,71,98,1|-3qv7i1,71,98,1|-3qv7i0,23,65,0|-3hi3e1,23,65,0|-3hi3e0,71,98,1|-3854u1,71,98,1|-3854u0,23,65,0|-2ys0q1,23,65,0|-2ys0q0,71,98,1|-2pf261,71,98,1|-2pf260,23,65,0|-2g1y21,23,65,0|-2g1y20,71,98,1|-26c0u1,71,98,1|-26c0u0,23,65,0|-1zdy21,23,65,0|-1zdy20,31,40,0|-1xbu01,31,40,0|-1xbu00,48,41,1|-1nlws1,48,41,1|-1nlws0,31,40,0|-1e8so1,31,40,0|-1e8so0,48,41,1|-14vu41,48,41,1|-14vu40,31,40,0|-viq01,31,40,0|-viq00,48,41,1|-m5rg1,48,41,1|-m5rg0,31,40,0|-csnc1,31,40,0|-csnc0,48,41,1|-3fos1,48,41,1|-3fos0,31,40,0|5xfbz,31,40,0|5xfc0,48,41,1|fadvz,48,41,1|fadw0,31,40,0|onhzz,31,40,0|oni00,48,41,1|ydf7z,48,41,1|ydf80,31,40,0|17qjbz,31,40,0|17qjc0,48,41,1|1h3hvz,48,41,1|1h3hw0,31,40,0|1qglzz,31,40,0|1qgm00,48,41,1|1ztkjz,48,41,1|1ztkk0,31,40,0|296onz,31,40,0|296oo0,48,41,1|2ijn7z,48,41,1|2ijn80,31,40,0|2rwrbz,31,40,0|2rwrc0,48,41,1|319pvz,48,41,1|319pw0,31,40,0|3amtzz,31,40,0|3amu00,48,41,1|3kcr7z,48,41,1|3kcr80,31,40,0|3tcwnz,31,40,0|3tcwo0,48,41,1|432tvz,48,41,1|432tw0,31,40,0|4cfxzz,31,40,0|4cfy00,48,41,1|4lswjz,48,41,1|4lswk0,31,40,0|4v60nz,31,40,0|4v60o0,48,41,1|54iz7z,48,41,1|54iz80,31,40,0|5dw3bz,31,40,0|5dw3c0,48,41,1|5n91vz,48,41,1|5n91w0,31,40,0|5wm5zz,31,40,0|5wm600,48,41,1|65z4jz,48,41,1|65z4k0,31,40,0|6fc8nz,31,40,0|6fc8o0,48,41,1|6p25vz,48,41,1|6p25w0,31,40,0|6y2bbz,31,40,0|6y2bc0,48,41,1|77s8jz,48,41,1|77s8k0,31,40,0|7h5cnz,31,40,0|7h5co0,48,41,1|7qib7z,48,41,1|7qib80,31,40,0|7zvfbz,31,40,0|7zvfc0,48,41,1|898dvz,48,41,1|898dw0,31,40,0|8ilhzz,31,40,0|8ili00,48,41,1|8rygjz,48,41,1|8rygk0,31,40,0|908j5n,31,40,0|908j5o,48,41,1|9aodpn,48,41,1|9aodpo,31,40,0|9iyltn,31,40,0|9iylto,72,43,1|9trc9n,72,43,1|9trc9o,31,40,0|a1oohn,31,40,0|a1ooho,48,41,1|achhpn,48,41,1|achhpo,31,40,0|aker5n,31,40,0|aker5o,48,41,1|av7kdn,48,41,1|av7kdo,31,40,0|b3hshn,31,40,0|b3hsho,48,41,1|bdxn1n,48,41,1|bdxn1o,31,40,0|bm7v5n,31,40,0|bm7v5o,48,41,1|bwnppn,48,41,1|bwnppo,31,40,0|c4xxtn,31,40,0|c4xxto,48,41,1|cfqr1n,48,41,1|cfqr1o,31,40,0|cno0hn,31,40,0|cno0ho,48,41,1|cygtpn,48,41,1|cygtpo,31,40,0|d6e35n,31,40,0|d6e35o,48,41,1|dh6wdn,48,41,1|dh6wdo,31,40,0|dph4hn,31,40,0|dph4ho,48,41,1|dzwz1n,48,41,1|dzwz1o,31,40,0|e8775n,31,40,0|e8775o,48,41,1|ein1pn,48,41,1|ein1po,31,40,0|eqx9tn,31,40,0|eqx9to,48,41,1|f1d4dn,48,41,1|f1d4do,31,40,0|f9nchn,31,40,0|f9ncho,48,41,1|fkg5pn,48,41,1|fkg5po,31,40,0|fsdf5n,31,40,0|fsdf5o,48,41,1|g368dn,48,41,1|g368do,31,40,0|gb3htn,31,40,0|gb3hto,48,41,1|glwb1n,48,41,1|glwb1o,31,40,0|gu6j5n,31,40,0|gu6j5o,48,41,1|h4mdpn,48,41,1|h4mdpo,31,40,0|hcwltn,31,40,0|hcwlto,48,41,1|hncgdn,48,41,1|hncgdo,31,40,0|hvmohn,31,40,0|hvmoho,48,41,1|i6fhpn,48,41,1|i6fhpo,31,40,0|iecr5n,31,40,0|iecr5o,48,41,1|ip5kdn,48,41,1|ip5kdo,31,40,0|ix2ttn,31,40,0|ix2tto,48,41,1|j7vn1n,48,41,1|j7vn1o,31,40,0|jeq0hn,31,40,0|jeq0ho,48,41,1|jqyodn,48,41,1|jqyodo,31,40,0|jxg35n,31,40,0|jxg35o,48,41,1|k9or1n,48,41,1|k9or1o,31,40,0|kg65tn,31,40,0|kg65to,48,41,1|ksetpn,48,41,1|ksetpo,31,40,0|kz975n,31,40,0|kz975o,48,41,1|lbhv1n,48,41,1|lbhv1o,31,40,0|lhz9tn,31,40,0|lhz9to,48,41,1|lu837z,48,41,1|lu8380,31,40,0|m0phzz,31,40,0|m0pi00,48,41,1|mcy5vz,48,41,1|mcy5w0,31,40,0|mjfknz,31,40,0|mjfko0,48,41,1|mvo8jz,48,41,1|mvo8k0,31,40,0|n25nbz,31,40,0|n25nc0,48,41,1|neeb7z,48,41,1|neeb80,31,40,0|nkvpzz,31,40,0|nkvq00,48,41,1|nx4dvz,48,41,1|nx4dw0,31,40,0|o3yrbz,31,40,0|o3yrc0,48,41,1|og7f7z,48,41,1|og7f80,31,40,0|omotzz,31,40,0|omou00,48,41,1|oyxhvz,48,41,1|oyxhw0,31,40,0|p5ewnz,31,40,0|p5ewo0,48,41,1|phnkjz,48,41,1|phnkk0,31,40,0|po4zbz,31,40,0|po4zc0,48,41,1|q0dn7z,48,41,1|q0dn80,31,40,0|q6v1zz,31,40,0|q6v200,48,41,1|qj3pvz,48,41,1|qj3pw0,31,40,0|qpy3bz,31,40,0|qpy3c0,48,41,1|r26r7z,48,41,1|r26r80,31,40,0|r8o5zz,31,40,0|r8o600,48,41,1|rkwtvz,48,41,1|rkwtw0,31,40,0|rre8nz,31,40,0|rre8o0,48,41,1|s3mwjz,48,41,1|s3mwk0,31,40,0|sa4bbz,31,40,0|sa4bc0,48,41,1|smcz7z,48,41,1|smcz80,31,40,0|ssudzz,31,40,0|ssue00,48,41,1|t531vz,48,41,1|t531w0,31,40,0|tbkgnz,31,40,0|tbkgo0,48,41,1|tnt4jz,48,41,1|tnt4k0,31,40,0|tunhzz,31,40,0|tuni00,48,41,1|u6w5vz,48,41,1|u6w5w0,31,40,0|uddknz,31,40,0|uddko0,48,41,1|upm8jz,48,41,1|upm8k0,31,40,0|uw3nbz,31,40,0|uw3nc0,48,41,1|v8cb7z,48,41,1|v8cb80,31,40,0|vetpzz,31,40,0|vetq00,48,41,1|vr2dvz,48,41,1|vr2dw0,31,40,0|vxjsnz,31,40,0|vxjso0,48,41,1|w9sgjz,48,41,1|w9sgk0,31,40,0|wgmtzz,31,40,0|wgmu00,48,41,1|wsvhvz,48,41,1|wsvhw0,31,40,0|wzcwnz,31,40,0|wzcwo0,48,41,1|xblkjz,48,41,1|xblkk0,31,40,0|xi2zbz,31,40,0|xi2zc0,48,41,1|xubn7z,48,41,1|xubn80,31,40,0|y0t1zz,31,40,0|y0t200,48,41,1|yd1pvz,48,41,1|yd1pw0,31,40,0|yjj4nz,31,40,0|yjj4o0,48,41,1|yvrsjz,48,41,1|yvrsk0,31,40,0|z297bz,31,40,0|z297c0,48,41,1|zehv7z,48,41,1|zehv80,31,40,0|zlc8nz,31,40,0|zlc8o0,48,41,1|zxkwjz,48,41,1|zxkwk0,31,40,0|1042bbz,31,40,0|1042bc0,48,41,1|10gaz7z,48,41,1|10gaz80,31,40,0|10msdzz,31,40,0|10mse00,48,41,1|10z11vz,48,41,1|10z11w0,31,40,0|115ignz,31,40,0|115igo0,48,41,1|11hr4jz,48,41,1|11hr4k0,31,40,0|11o8jbz,31,40,0|11o8jc0,48,41,1|120h77z,48,41,1|120h780,31,40,0|126ylzz,31,40,0|126ym00,48,41,1|12j79vz,48,41,1|12j79w0,31,40,0|12q1nbz,31,40,0|12q1nc0,48,41,1|132ab7z,48,41,1|132ab80,31,40,0|138rpzz,31,40,0|138rq00,48,41,1|13l0dvz,48,41,1|13l0dw0,31,40,0|13rhsnz,31,40,0|13rhso0,48,41,1|143qgjz,48,41,1|143qgk0,31,40,0|14a7vbz,31,40,0|14a7vc0,48,41,1|14mgj7z,48,41,1|14mgj80,31,40,0|14sxxzz,31,40,0|14sxy00,48,41,1|1556lvz,48,41,1|1556lw0,31,40,0|15c0zbz,31,40,0|15c0zc0,48,41,1|15o9n7z,48,41,1|15o9n80,31,40,0|15ur1zz,31,40,0|15ur200,48,41,1|166zpvz,48,41,1|166zpw0,31,40,0|16dh4nz,31,40,0|16dh4o0,48,41,1|16ppsjz,48,41,1|16ppsk0,31,40,0|16w77bz,31,40,0|16w77c0,48,41,1|178fv7z,48,41,1|178fv80,31,40,0|17ex9zz,31,40,0|17exa00,48,41,1|17r5xvz,48,41,1|17r5xw0,31,40,0|17xncnz,31,40,0|17xnco0,48,41,1|189w0jz,48,41,1|189w0k0,31,40,0|18gqdzz,31,40,0|18gqe00,48,41,1|18sz1vz,48,41,1|18sz1w0,31,40,0|18zggnz,31,40,0|18zggo0,48,41,1|19bp4jz,48,41,1|19bp4k0,31,40,0|19i6jbz,31,40,0|19i6jc0,48,41,1|19uf77z,48,41,1|19uf780,31,40,0|1a0wlzz,31,40,0|1a0wm00,48,41,1|1ad59vz,48,41,1|1ad59w0,31,40,0|1ajmonz,31,40,0|1ajmoo0,48,41,1|1avvcjz,48,41,1|1avvck0,31,40,0|1b2ppzz,31,40,0|1b2pq00,48,41,1|1beydvz,48,41,1|1beydw0,31,40,0|1blfsnz,31,40,0|1blfso0,48,41,1|1bxogjz,48,41,1|1bxogk0,31,40,0|1c45vbz,31,40,0|1c45vc0,48,41,1|1cgej7z,48,41,1|1cgej80,31,40,0|1cmvxzz,31,40,0|1cmvy00,48,41,1|1cz4lvz,48,41,1|1cz4lw0,31,40,0|1d5m0nz,31,40,0|1d5m0o0,48,41,1|1dhuojz,48,41,1|1dhuok0,31,40,0|1doc3bz,31,40,0|1doc3c0,48,41,1|1e0kr7z,48,41,1|1e0kr80,31,40,0|1e7f4nz,31,40,0|1e7f4o0,48,41,1|1ejnsjz,48,41,1|1ejnsk0,31,40,0|1eq57bz,31,40,0|1eq57c0,48,41,1|1f2dv7z,48,41,1|1f2dv80,31,40,0|1f8v9zz,31,40,0|1f8va00,48,41,1|1fl3xvz,48,41,1|1fl3xw0,31,40,0|1frlcnz,31,40,0|1frlco0,48,41,1|1g3u0jz,48,41,1|1g3u0k0,31,40,0|1gabfbz,31,40,0|1gabfc0,48,41,1|1gmk37z,48,41,1|1gmk380,31,40,0|1gt1hzz,31,40,0|1gt1i00,48,41,1|1h5a5vz,48,41,1|1h5a5w0,31,40,0|1hc4jbz,31,40,0|1hc4jc0,48,41,1|1hod77z,48,41,1|1hod780,31,40,0|1huulzz,31,40,0|1huum00,48,41,1|1i739vz,48,41,1|1i739w0,31,40,0|1idkonz,31,40,0|1idkoo0,48,41,1|1iptcjz,48,41,1|1iptck0,31,40,0|1iwarbz,31,40,0|1iwarc0,48,41,1|1j8jf7z,48,41,1|1j8jf80,31,40,0|1jf0tzz,31,40,0|1jf0u00,48,41,1|1jr9hvz,48,41,1|1jr9hw0,31,40,0|1jy3vbz,31,40,0|1jy3vc0,48,41,1|1kacj7z,48,41,1|1kacj80,31,40,0|1kgtxzz,31,40,0|1kgty00,48,41,1|1kt2lvz,48,41,1|1kt2lw0,31,40,0|1kzk0nz,31,40,0|1kzk0o0,48,41,1|1lbsojz,48,41,1|1lbsok0,31,40,0|1lia3bz,31,40,0|1lia3c0,48,41,1|1luir7z,48,41,1|1luir80,31,40,0|1m105zz,31,40,0|1m10600,48,41,1|1md8tvz,48,41,1|1md8tw0,31,40,0|1mjq8nz,31,40,0|1mjq8o0,48,41,1|1mvywjz,48,41,1|1mvywk0,31,40,0|1n2t9zz,31,40,0|1n2ta00,48,41,1|1nf1xvz,48,41,1|1nf1xw0,31,40,0|1nljcnz,31,40,0|1nljco0,48,41,1|1nxs0jz,48,41,1|1nxs0k0,31,40,0|1o49fbz,31,40,0|1o49fc0,48,41,1|1ogi37z,48,41,1|1ogi380,31,40,0|1omzhzz,31,40,0|1omzi00,48,41,1|1oz85vz,48,41,1|1oz85w0,31,40,0|1p5pknz,31,40,0|1p5pko0,48,41,1|1phy8jz,48,41,1|1phy8k0,31,40,0|1poslzz,31,40,0|1posm00,48,41,1|1q119vz,48,41,1|1q119w0,31,40,0|1q7ionz,31,40,0|1q7ioo0,48,41,1|1qjrcjz,48,41,1|1qjrck0,31,40,0|1qq8rbz,31,40,0|1qq8rc0,48,41,1|1r2hf7z,48,41,1|1r2hf80,31,40,0|1r8ytzz,31,40,0|1r8yu00,48,41,1|1rl7hvz,48,41,1|1rl7hw0,31,40,0|1rrownz,31,40,0|1rrowo0,48,41,1|1s3xkjz,48,41,1|1s3xkk0,31,40,0|1saezbz,31,40,0|1saezc0,48,41,1|1smnn7z,48,41,1|1smnn80,31,40,0|1sti0nz,31,40,0|1sti0o0,48,41,1|1t5qojz,48,41,1|1t5qok0,31,40,0|1tc83bz,31,40,0|1tc83c0,48,41,1|1togr7z,48,41,1|1togr80,31,40,0|1tuy5zz,31,40,0|1tuy600,48,41,1|1u76tvz,48,41,1|1u76tw0,31,40,0|1udo8nz,31,40,0|1udo8o0,48,41,1|1upwwjz,48,41,1|1upwwk0,31,40,0|1uwebbz,31,40,0|1uwebc0,48,41,1|1v8mz7z,48,41,1|1v8mz80,31,40,0|1vf4dzz,31,40,0|1vf4e00,48,41,1|1vrd1vz,48,41,1|1vrd1w0,31,40,0|NaN,31,40,0",
        "America/Grand_Turk|,0,99,0|-15r0w5t,0,99,0|-15r0w5s,73,100,0|-u85og3,73,100,0|-u85og2,43,59,0|4v63fz,43,59,0|4v63g0,60,40,1|54j1zz,60,40,1|54j200,43,59,0|5dw63z,43,59,0|5dw640,60,40,1|5n94nz,60,40,1|5n94o0,43,59,0|5wm8rz,43,59,0|5wm8s0,60,40,1|65z7bz,60,40,1|65z7c0,43,59,0|6fcbfz,43,59,0|6fcbg0,60,40,1|6p28nz,60,40,1|6p28o0,43,59,0|6y2e3z,43,59,0|6y2e40,60,40,1|77sbbz,60,40,1|77sbc0,43,59,0|7h5ffz,43,59,0|7h5fg0,60,40,1|7qidzz,60,40,1|7qie00,43,59,0|7zvi3z,43,59,0|7zvi40,60,40,1|898gnz,60,40,1|898go0,43,59,0|8ilkrz,43,59,0|8ilks0,60,40,1|8ryjbz,60,40,1|8ryjc0,43,59,0|908rfz,43,59,0|908rg0,60,40,1|9aolzz,60,40,1|9aom00,43,59,0|9iyu3z,43,59,0|9iyu40,60,40,1|9trnbz,60,40,1|9trnc0,43,59,0|a1owrz,43,59,0|a1ows0,60,40,1|achpzz,60,40,1|achq00,43,59,0|akezfz,43,59,0|akezg0,60,40,1|av7snz,60,40,1|av7so0,43,59,0|b3i0rz,43,59,0|b3i0s0,60,40,1|bdxvbz,60,40,1|bdxvc0,43,59,0|bm83fz,43,59,0|bm83g0,60,40,1|bwnxzz,60,40,1|bwny00,43,59,0|c4y63z,43,59,0|c4y640,60,40,1|cfqzbz,60,40,1|cfqzc0,43,59,0|cno8rz,43,59,0|cno8s0,60,40,1|cyh1zz,60,40,1|cyh200,43,59,0|d6ebfz,43,59,0|d6ebg0,60,40,1|dh74nz,60,40,1|dh74o0,43,59,0|dphcrz,43,59,0|dphcs0,60,40,1|dzx7bz,60,40,1|dzx7c0,43,59,0|e87ffz,43,59,0|e87fg0,60,40,1|ein9zz,60,40,1|eina00,43,59,0|eqxi3z,43,59,0|eqxi40,60,40,1|f1dcnz,60,40,1|f1dco0,43,59,0|f9nkrz,43,59,0|f9nks0,60,40,1|fkgdzz,60,40,1|fkge00,43,59,0|fsdnfz,43,59,0|fsdng0,60,40,1|g36gnz,60,40,1|g36go0,43,59,0|gb3q3z,43,59,0|gb3q40,60,40,1|glwjbz,60,40,1|glwjc0,43,59,0|gu6rfz,43,59,0|gu6rg0,60,40,1|h4mlzz,60,40,1|h4mm00,43,59,0|hcwu3z,43,59,0|hcwu40,60,40,1|hnconz,60,40,1|hncoo0,43,59,0|hvmwrz,43,59,0|hvmws0,60,40,1|i6fpzz,60,40,1|i6fq00,43,59,0|ieczfz,43,59,0|ieczg0,60,40,1|ip5snz,60,40,1|ip5so0,43,59,0|ix323z,43,59,0|ix3240,60,40,1|j7vvbz,60,40,1|j7vvc0,43,59,0|jeq8rz,43,59,0|jeq8s0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,31,40,0|p5ezfz,31,40,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Grenada|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Guadeloupe|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Guatemala|,0,101,0|-qqqskl,0,101,0|-qqqskk,45,63,0|219hzz,45,63,0|219i00,47,59,1|25xxvz,47,59,1|25xxw0,45,63,0|6zgbbz,45,63,0|6zgbc0,47,59,1|75tv7z,47,59,1|75tv80,45,63,0|b2q5zz,45,63,0|b2q600,47,59,1|bbd77z,47,59,1|bbd780,45,63,0|iyitzz,45,63,0|iyiu00,47,59,1|j6fxvz,47,59,1|j6fxw0,45,63,0|NaN,45,63,0",
        "America/Guayaquil|,0,102,0|-15r0ujt,0,102,0|-15r0ujs,74,103,0|-kcr84p,74,103,0|-kcr84o,54,59,0|byetvz,54,59,0|byetw0,41,40,1|c1yj3z,41,40,1|c1yj40,54,59,0|NaN,54,59,0",
        "America/Guyana|,0,104,0|-uhmika,0,104,0|-uhmik9,41,40,0|-smca81,41,40,0|-smca80,75,105,0|2wud2z,75,105,0|2wud30,38,41,0|bluwfz,38,41,0|bluwg0,41,40,0|NaN,41,40,0",
        "America/Halifax|,0,106,0|-z94k81,0,106,0|-z94k80,31,40,0|-s1x3k1,31,40,0|-s1x3k0,48,41,1|-rsiac1,48,41,1|-rsiac0,31,40,0|-qzp0o1,31,40,0|-qzp0o0,48,41,1|-qpm4s1,48,41,1|-qpm4s0,31,40,0|-pwt681,31,40,0|-pwt680,48,41,1|-pr1uc1,48,41,1|-pr1uc0,31,40,0|-pe6sw1,31,40,0|-pe6sw0,48,41,1|-p7wyc1,48,41,1|-p7wyc0,31,40,0|-ovpzk1,31,40,0|-ovpzk0,48,41,1|-op5101,48,41,1|-op5100,31,40,0|-ocmy81,31,40,0|-ocmy80,48,41,1|-o6eyc1,48,41,1|-o6eyc0,31,40,0|-ntwvk1,31,40,0|-ntwvk0,48,41,1|-nn0t01,48,41,1|-nn0t00,31,40,0|-nb6sw1,31,40,0|-nb6sw0,48,41,1|-n3kt01,48,41,1|-n3kt00,31,40,0|-mrqsw1,31,40,0|-mrqsw0,48,41,1|-mlkno1,48,41,1|-mlkno0,31,40,0|-m9qnk1,31,40,0|-m9qnk0,48,41,1|-m24no1,48,41,1|-m24no0,31,40,0|-lqank1,31,40,0|-lqank0,48,41,1|-lk6d01,48,41,1|-lk6d00,31,40,0|-l7kkw1,31,40,0|-l7kkw0,48,41,1|-l1pjo1,48,41,1|-l1pjo0,31,40,0|-koui81,31,40,0|-koui80,48,41,1|-kibec1,48,41,1|-kibec0,31,40,0|-k64fk1,31,40,0|-k64fk0,48,41,1|-jyvec1,48,41,1|-jyvec0,31,40,0|-jnrbk1,31,40,0|-jnrbk0,48,41,1|-jg5bo1,48,41,1|-jg5bo0,31,40,0|-j518w1,31,40,0|-j518w0,48,41,1|-ix2ac1,48,41,1|-ix2ac0,31,40,0|-il8a81,31,40,0|-il8a80,48,41,1|-if3zo1,48,41,1|-if3zo0,31,40,0|-i1sa81,31,40,0|-i1sa80,48,41,1|-hvm501,48,41,1|-hvm500,31,40,0|-hj0cw1,31,40,0|-hj0cw0,48,41,1|-hdlzo1,48,41,1|-hdlzo0,31,40,0|-h1rzk1,31,40,0|-h1rzk0,48,41,1|-gu5zo1,48,41,1|-gu5zo0,31,40,0|-gj1ww1,31,40,0|-gj1ww0,48,41,1|-gbfx01,48,41,1|-gbfx00,31,40,0|-fyvzk1,31,40,0|-fyvzk0,48,41,1|-fspuc1,48,41,1|-fspuc0,31,40,0|-fh8sw1,31,40,0|-fh8sw0,48,41,1|-f9mt01,48,41,1|-f9mt00,31,40,0|-eyiq81,31,40,0|-eyiq80,48,41,1|-eqwqc1,48,41,1|-eqwqc0,31,40,0|-ek27c1,31,40,0|-ek27c0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|-ccw7c1,31,40,0|-ccw7c0,48,41,1|-c4z3g1,48,41,1|-c4z3g0,31,40,0|-bu64o1,31,40,0|-bu64o0,48,41,1|-bm90s1,48,41,1|-bm90s0,31,40,0|-bbg201,31,40,0|-bbg200,48,41,1|-b3iy41,48,41,1|-b3iy40,31,40,0|-aspzc1,31,40,0|-aspzc0,48,41,1|-aksvg1,48,41,1|-aksvg0,31,40,0|-9qwvc1,31,40,0|-9qwvc0,48,41,1|-9izrg1,48,41,1|-9izrg0,31,40,0|-986so1,31,40,0|-986so0,48,41,1|-909os1,48,41,1|-909os0,31,40,0|-8pgq01,31,40,0|-8pgq00,48,41,1|-8hjm41,48,41,1|-8hjm40,31,40,0|-86qnc1,31,40,0|-86qnc0,48,41,1|-7ytjg1,48,41,1|-7ytjg0,31,40,0|-74xjc1,31,40,0|-74xjc0,48,41,1|-6x0fg1,48,41,1|-6x0fg0,31,40,0|-6m7go1,31,40,0|-6m7go0,48,41,1|-6eacs1,48,41,1|-6eacs0,31,40,0|-63he01,31,40,0|-63he00,48,41,1|-5vka41,48,41,1|-5vka40,31,40,0|-5krbc1,31,40,0|-5krbc0,48,41,1|-5cu7g1,48,41,1|-5cu7g0,31,40,0|-4084o1,31,40,0|-4084o0,48,41,1|-3qv641,48,41,1|-3qv640,31,40,0|-3hi201,31,40,0|-3hi200,48,41,1|-3853g1,48,41,1|-3853g0,31,40,0|-2yrzc1,31,40,0|-2yrzc0,48,41,1|-2pf0s1,48,41,1|-2pf0s0,31,40,0|-2g1wo1,31,40,0|-2g1wo0,48,41,1|-26bzg1,48,41,1|-26bzg0,31,40,0|-1xbu01,31,40,0|-1xbu00,48,41,1|-1nlws1,48,41,1|-1nlws0,31,40,0|-1e8so1,31,40,0|-1e8so0,48,41,1|-14vu41,48,41,1|-14vu40,31,40,0|-viq01,31,40,0|-viq00,48,41,1|-m5rg1,48,41,1|-m5rg0,31,40,0|-csnc1,31,40,0|-csnc0,48,41,1|-3fos1,48,41,1|-3fos0,31,40,0|5xfbz,31,40,0|5xfc0,48,41,1|fadvz,48,41,1|fadw0,31,40,0|onhzz,31,40,0|oni00,48,41,1|ydf7z,48,41,1|ydf80,31,40,0|17qjbz,31,40,0|17qjc0,48,41,1|1h3hvz,48,41,1|1h3hw0,31,40,0|1qglzz,31,40,0|1qgm00,48,41,1|1ztkjz,48,41,1|1ztkk0,31,40,0|296onz,31,40,0|296oo0,48,41,1|2ijn7z,48,41,1|2ijn80,31,40,0|2rwrbz,31,40,0|2rwrc0,48,41,1|319pvz,48,41,1|319pw0,31,40,0|3amtzz,31,40,0|3amu00,48,41,1|3kcr7z,48,41,1|3kcr80,31,40,0|3tcwnz,31,40,0|3tcwo0,48,41,1|432tvz,48,41,1|432tw0,31,40,0|4cfxzz,31,40,0|4cfy00,48,41,1|4lswjz,48,41,1|4lswk0,31,40,0|4v60nz,31,40,0|4v60o0,48,41,1|54iz7z,48,41,1|54iz80,31,40,0|5dw3bz,31,40,0|5dw3c0,48,41,1|5n91vz,48,41,1|5n91w0,31,40,0|5wm5zz,31,40,0|5wm600,48,41,1|65z4jz,48,41,1|65z4k0,31,40,0|6fc8nz,31,40,0|6fc8o0,48,41,1|6p25vz,48,41,1|6p25w0,31,40,0|6y2bbz,31,40,0|6y2bc0,48,41,1|77s8jz,48,41,1|77s8k0,31,40,0|7h5cnz,31,40,0|7h5co0,48,41,1|7qib7z,48,41,1|7qib80,31,40,0|7zvfbz,31,40,0|7zvfc0,48,41,1|898dvz,48,41,1|898dw0,31,40,0|8ilhzz,31,40,0|8ili00,48,41,1|8rygjz,48,41,1|8rygk0,31,40,0|908onz,31,40,0|908oo0,48,41,1|9aoj7z,48,41,1|9aoj80,31,40,0|9iyrbz,31,40,0|9iyrc0,48,41,1|9trkjz,48,41,1|9trkk0,31,40,0|a1otzz,31,40,0|a1ou00,48,41,1|achn7z,48,41,1|achn80,31,40,0|akewnz,31,40,0|akewo0,48,41,1|av7pvz,48,41,1|av7pw0,31,40,0|b3hxzz,31,40,0|b3hy00,48,41,1|bdxsjz,48,41,1|bdxsk0,31,40,0|bm80nz,31,40,0|bm80o0,48,41,1|bwnv7z,48,41,1|bwnv80,31,40,0|c4y3bz,31,40,0|c4y3c0,48,41,1|cfqwjz,48,41,1|cfqwk0,31,40,0|cno5zz,31,40,0|cno600,48,41,1|cygz7z,48,41,1|cygz80,31,40,0|d6e8nz,31,40,0|d6e8o0,48,41,1|dh71vz,48,41,1|dh71w0,31,40,0|dph9zz,31,40,0|dpha00,48,41,1|dzx4jz,48,41,1|dzx4k0,31,40,0|e87cnz,31,40,0|e87co0,48,41,1|ein77z,48,41,1|ein780,31,40,0|eqxfbz,31,40,0|eqxfc0,48,41,1|f1d9vz,48,41,1|f1d9w0,31,40,0|f9nhzz,31,40,0|f9ni00,48,41,1|fkgb7z,48,41,1|fkgb80,31,40,0|fsdknz,31,40,0|fsdko0,48,41,1|g36dvz,48,41,1|g36dw0,31,40,0|gb3nbz,31,40,0|gb3nc0,48,41,1|glwgjz,48,41,1|glwgk0,31,40,0|gu6onz,31,40,0|gu6oo0,48,41,1|h4mj7z,48,41,1|h4mj80,31,40,0|hcwrbz,31,40,0|hcwrc0,48,41,1|hnclvz,48,41,1|hnclw0,31,40,0|hvmtzz,31,40,0|hvmu00,48,41,1|i6fn7z,48,41,1|i6fn80,31,40,0|iecwnz,31,40,0|iecwo0,48,41,1|ip5pvz,48,41,1|ip5pw0,31,40,0|ix2zbz,31,40,0|ix2zc0,48,41,1|j7vsjz,48,41,1|j7vsk0,31,40,0|jeq5zz,31,40,0|jeq600,48,41,1|jqytvz,48,41,1|jqytw0,31,40,0|jxg8nz,31,40,0|jxg8o0,48,41,1|k9owjz,48,41,1|k9owk0,31,40,0|kg6bbz,31,40,0|kg6bc0,48,41,1|ksez7z,48,41,1|ksez80,31,40,0|kz9cnz,31,40,0|kz9co0,48,41,1|lbi0jz,48,41,1|lbi0k0,31,40,0|lhzfbz,31,40,0|lhzfc0,48,41,1|lu837z,48,41,1|lu8380,31,40,0|m0phzz,31,40,0|m0pi00,48,41,1|mcy5vz,48,41,1|mcy5w0,31,40,0|mjfknz,31,40,0|mjfko0,48,41,1|mvo8jz,48,41,1|mvo8k0,31,40,0|n25nbz,31,40,0|n25nc0,48,41,1|neeb7z,48,41,1|neeb80,31,40,0|nkvpzz,31,40,0|nkvq00,48,41,1|nx4dvz,48,41,1|nx4dw0,31,40,0|o3yrbz,31,40,0|o3yrc0,48,41,1|og7f7z,48,41,1|og7f80,31,40,0|omotzz,31,40,0|omou00,48,41,1|oyxhvz,48,41,1|oyxhw0,31,40,0|p5ewnz,31,40,0|p5ewo0,48,41,1|phnkjz,48,41,1|phnkk0,31,40,0|po4zbz,31,40,0|po4zc0,48,41,1|q0dn7z,48,41,1|q0dn80,31,40,0|q6v1zz,31,40,0|q6v200,48,41,1|qj3pvz,48,41,1|qj3pw0,31,40,0|qpy3bz,31,40,0|qpy3c0,48,41,1|r26r7z,48,41,1|r26r80,31,40,0|r8o5zz,31,40,0|r8o600,48,41,1|rkwtvz,48,41,1|rkwtw0,31,40,0|rre8nz,31,40,0|rre8o0,48,41,1|s3mwjz,48,41,1|s3mwk0,31,40,0|sa4bbz,31,40,0|sa4bc0,48,41,1|smcz7z,48,41,1|smcz80,31,40,0|ssudzz,31,40,0|ssue00,48,41,1|t531vz,48,41,1|t531w0,31,40,0|tbkgnz,31,40,0|tbkgo0,48,41,1|tnt4jz,48,41,1|tnt4k0,31,40,0|tunhzz,31,40,0|tuni00,48,41,1|u6w5vz,48,41,1|u6w5w0,31,40,0|uddknz,31,40,0|uddko0,48,41,1|upm8jz,48,41,1|upm8k0,31,40,0|uw3nbz,31,40,0|uw3nc0,48,41,1|v8cb7z,48,41,1|v8cb80,31,40,0|vetpzz,31,40,0|vetq00,48,41,1|vr2dvz,48,41,1|vr2dw0,31,40,0|vxjsnz,31,40,0|vxjso0,48,41,1|w9sgjz,48,41,1|w9sgk0,31,40,0|wgmtzz,31,40,0|wgmu00,48,41,1|wsvhvz,48,41,1|wsvhw0,31,40,0|wzcwnz,31,40,0|wzcwo0,48,41,1|xblkjz,48,41,1|xblkk0,31,40,0|xi2zbz,31,40,0|xi2zc0,48,41,1|xubn7z,48,41,1|xubn80,31,40,0|y0t1zz,31,40,0|y0t200,48,41,1|yd1pvz,48,41,1|yd1pw0,31,40,0|yjj4nz,31,40,0|yjj4o0,48,41,1|yvrsjz,48,41,1|yvrsk0,31,40,0|z297bz,31,40,0|z297c0,48,41,1|zehv7z,48,41,1|zehv80,31,40,0|zlc8nz,31,40,0|zlc8o0,48,41,1|zxkwjz,48,41,1|zxkwk0,31,40,0|1042bbz,31,40,0|1042bc0,48,41,1|10gaz7z,48,41,1|10gaz80,31,40,0|10msdzz,31,40,0|10mse00,48,41,1|10z11vz,48,41,1|10z11w0,31,40,0|115ignz,31,40,0|115igo0,48,41,1|11hr4jz,48,41,1|11hr4k0,31,40,0|11o8jbz,31,40,0|11o8jc0,48,41,1|120h77z,48,41,1|120h780,31,40,0|126ylzz,31,40,0|126ym00,48,41,1|12j79vz,48,41,1|12j79w0,31,40,0|12q1nbz,31,40,0|12q1nc0,48,41,1|132ab7z,48,41,1|132ab80,31,40,0|138rpzz,31,40,0|138rq00,48,41,1|13l0dvz,48,41,1|13l0dw0,31,40,0|13rhsnz,31,40,0|13rhso0,48,41,1|143qgjz,48,41,1|143qgk0,31,40,0|14a7vbz,31,40,0|14a7vc0,48,41,1|14mgj7z,48,41,1|14mgj80,31,40,0|14sxxzz,31,40,0|14sxy00,48,41,1|1556lvz,48,41,1|1556lw0,31,40,0|15c0zbz,31,40,0|15c0zc0,48,41,1|15o9n7z,48,41,1|15o9n80,31,40,0|15ur1zz,31,40,0|15ur200,48,41,1|166zpvz,48,41,1|166zpw0,31,40,0|16dh4nz,31,40,0|16dh4o0,48,41,1|16ppsjz,48,41,1|16ppsk0,31,40,0|16w77bz,31,40,0|16w77c0,48,41,1|178fv7z,48,41,1|178fv80,31,40,0|17ex9zz,31,40,0|17exa00,48,41,1|17r5xvz,48,41,1|17r5xw0,31,40,0|17xncnz,31,40,0|17xnco0,48,41,1|189w0jz,48,41,1|189w0k0,31,40,0|18gqdzz,31,40,0|18gqe00,48,41,1|18sz1vz,48,41,1|18sz1w0,31,40,0|18zggnz,31,40,0|18zggo0,48,41,1|19bp4jz,48,41,1|19bp4k0,31,40,0|19i6jbz,31,40,0|19i6jc0,48,41,1|19uf77z,48,41,1|19uf780,31,40,0|1a0wlzz,31,40,0|1a0wm00,48,41,1|1ad59vz,48,41,1|1ad59w0,31,40,0|1ajmonz,31,40,0|1ajmoo0,48,41,1|1avvcjz,48,41,1|1avvck0,31,40,0|1b2ppzz,31,40,0|1b2pq00,48,41,1|1beydvz,48,41,1|1beydw0,31,40,0|1blfsnz,31,40,0|1blfso0,48,41,1|1bxogjz,48,41,1|1bxogk0,31,40,0|1c45vbz,31,40,0|1c45vc0,48,41,1|1cgej7z,48,41,1|1cgej80,31,40,0|1cmvxzz,31,40,0|1cmvy00,48,41,1|1cz4lvz,48,41,1|1cz4lw0,31,40,0|1d5m0nz,31,40,0|1d5m0o0,48,41,1|1dhuojz,48,41,1|1dhuok0,31,40,0|1doc3bz,31,40,0|1doc3c0,48,41,1|1e0kr7z,48,41,1|1e0kr80,31,40,0|1e7f4nz,31,40,0|1e7f4o0,48,41,1|1ejnsjz,48,41,1|1ejnsk0,31,40,0|1eq57bz,31,40,0|1eq57c0,48,41,1|1f2dv7z,48,41,1|1f2dv80,31,40,0|1f8v9zz,31,40,0|1f8va00,48,41,1|1fl3xvz,48,41,1|1fl3xw0,31,40,0|1frlcnz,31,40,0|1frlco0,48,41,1|1g3u0jz,48,41,1|1g3u0k0,31,40,0|1gabfbz,31,40,0|1gabfc0,48,41,1|1gmk37z,48,41,1|1gmk380,31,40,0|1gt1hzz,31,40,0|1gt1i00,48,41,1|1h5a5vz,48,41,1|1h5a5w0,31,40,0|1hc4jbz,31,40,0|1hc4jc0,48,41,1|1hod77z,48,41,1|1hod780,31,40,0|1huulzz,31,40,0|1huum00,48,41,1|1i739vz,48,41,1|1i739w0,31,40,0|1idkonz,31,40,0|1idkoo0,48,41,1|1iptcjz,48,41,1|1iptck0,31,40,0|1iwarbz,31,40,0|1iwarc0,48,41,1|1j8jf7z,48,41,1|1j8jf80,31,40,0|1jf0tzz,31,40,0|1jf0u00,48,41,1|1jr9hvz,48,41,1|1jr9hw0,31,40,0|1jy3vbz,31,40,0|1jy3vc0,48,41,1|1kacj7z,48,41,1|1kacj80,31,40,0|1kgtxzz,31,40,0|1kgty00,48,41,1|1kt2lvz,48,41,1|1kt2lw0,31,40,0|1kzk0nz,31,40,0|1kzk0o0,48,41,1|1lbsojz,48,41,1|1lbsok0,31,40,0|1lia3bz,31,40,0|1lia3c0,48,41,1|1luir7z,48,41,1|1luir80,31,40,0|1m105zz,31,40,0|1m10600,48,41,1|1md8tvz,48,41,1|1md8tw0,31,40,0|1mjq8nz,31,40,0|1mjq8o0,48,41,1|1mvywjz,48,41,1|1mvywk0,31,40,0|1n2t9zz,31,40,0|1n2ta00,48,41,1|1nf1xvz,48,41,1|1nf1xw0,31,40,0|1nljcnz,31,40,0|1nljco0,48,41,1|1nxs0jz,48,41,1|1nxs0k0,31,40,0|1o49fbz,31,40,0|1o49fc0,48,41,1|1ogi37z,48,41,1|1ogi380,31,40,0|1omzhzz,31,40,0|1omzi00,48,41,1|1oz85vz,48,41,1|1oz85w0,31,40,0|1p5pknz,31,40,0|1p5pko0,48,41,1|1phy8jz,48,41,1|1phy8k0,31,40,0|1poslzz,31,40,0|1posm00,48,41,1|1q119vz,48,41,1|1q119w0,31,40,0|1q7ionz,31,40,0|1q7ioo0,48,41,1|1qjrcjz,48,41,1|1qjrck0,31,40,0|1qq8rbz,31,40,0|1qq8rc0,48,41,1|1r2hf7z,48,41,1|1r2hf80,31,40,0|1r8ytzz,31,40,0|1r8yu00,48,41,1|1rl7hvz,48,41,1|1rl7hw0,31,40,0|1rrownz,31,40,0|1rrowo0,48,41,1|1s3xkjz,48,41,1|1s3xkk0,31,40,0|1saezbz,31,40,0|1saezc0,48,41,1|1smnn7z,48,41,1|1smnn80,31,40,0|1sti0nz,31,40,0|1sti0o0,48,41,1|1t5qojz,48,41,1|1t5qok0,31,40,0|1tc83bz,31,40,0|1tc83c0,48,41,1|1togr7z,48,41,1|1togr80,31,40,0|1tuy5zz,31,40,0|1tuy600,48,41,1|1u76tvz,48,41,1|1u76tw0,31,40,0|1udo8nz,31,40,0|1udo8o0,48,41,1|1upwwjz,48,41,1|1upwwk0,31,40,0|1uwebbz,31,40,0|1uwebc0,48,41,1|1v8mz7z,48,41,1|1v8mz80,31,40,0|1vf4dzz,31,40,0|1vf4e00,48,41,1|1vrd1vz,48,41,1|1vrd1w0,31,40,0|NaN,31,40,0",
        "America/Havana|,0,107,0|-15r0u2x,0,107,0|-15r0u2w,76,108,0|-n7762p,76,108,0|-n7762o,45,59,0|-louq41,45,59,0|-louq40,47,40,1|-likvk1,47,40,1|-likvk0,45,59,0|-ffsvg1,45,59,0|-ffsvg0,47,40,1|-fb4fk1,47,40,1|-fb4fk0,45,59,0|-ex2ss1,45,59,0|-ex2ss0,47,40,1|-es1e81,47,40,1|-es1e80,45,59,0|-edzrg1,45,59,0|-edzrg0,47,40,1|-e9bbk1,47,40,1|-e9bbk0,45,59,0|-cttjg1,45,59,0|-cttjg0,47,40,1|-cp53k1,47,40,1|-cp53k0,45,59,0|-cb3gs1,45,59,0|-cb3gs0,47,40,1|-c6f0w1,47,40,1|-c6f0w0,45,59,0|-2e5gs1,45,59,0|-2e5gs0,47,40,1|-27xgw1,47,40,1|-27xgw0,45,59,0|-1vj3g1,45,59,0|-1vj3g0,47,40,1|-1p1u81,47,40,1|-1p1u80,45,59,0|-1fdm41,45,59,0|-1fdm40,47,40,1|-17enk1,47,40,1|-17enk0,45,59,0|-w8q41,45,59,0|-w8q40,47,40,1|-ookw1,47,40,1|-ookw0,45,59,0|-csq41,45,59,0|-csq40,47,40,1|-3frk1,47,40,1|-3frk0,45,59,0|5xcjz,45,59,0|5xck0,47,40,1|fab3z,47,40,1|fab40,45,59,0|onf7z,45,59,0|onf80,47,40,1|ydcfz,47,40,1|ydcg0,45,59,0|17qgjz,45,59,0|17qgk0,47,40,1|1g0j3z,47,40,1|1g0j40,45,59,0|1qgj7z,45,59,0|1qgj80,47,40,1|1ysgfz,47,40,1|1ysgg0,45,59,0|296lvz,45,59,0|296lw0,47,40,1|2hkdrz,47,40,1|2hkds0,45,59,0|2rwojz,45,59,0|2rwok0,47,40,1|319n3z,47,40,1|319n40,45,59,0|3amr7z,45,59,0|3amr80,47,40,1|3kcofz,47,40,1|3kcog0,45,59,0|3tctvz,45,59,0|3tctw0,47,40,1|432r3z,47,40,1|432r40,45,59,0|4cstvz,45,59,0|4cstw0,47,40,1|4kpxrz,47,40,1|4kpxs0,45,59,0|4t05vz,45,59,0|4t05w0,47,40,1|53sz3z,47,40,1|53sz40,45,59,0|5bq8jz,45,59,0|5bq8k0,47,40,1|5mj1rz,47,40,1|5mj1s0,45,59,0|5xc0jz,45,59,0|5xc0k0,47,40,1|6594fz,47,40,1|6594g0,45,59,0|6g237z,45,59,0|6g2380,47,40,1|6nz73z,47,40,1|6nz740,45,59,0|6ys5vz,45,59,0|6ys5w0,47,40,1|76p9rz,47,40,1|76p9s0,45,59,0|7hi8jz,45,59,0|7hi8k0,47,40,1|7psb3z,47,40,1|7psb40,45,59,0|808b7z,45,59,0|808b80,47,40,1|88idrz,47,40,1|88ids0,45,59,0|8gfn7z,45,59,0|8gfn80,47,40,1|8r8gfz,47,40,1|8r8gg0,45,59,0|8z5pvz,45,59,0|8z5pw0,47,40,1|99yj3z,47,40,1|99yj40,45,59,0|9i8r7z,45,59,0|9i8r80,47,40,1|9solrz,47,40,1|9sols0,45,59,0|a0ytvz,45,59,0|a0ytw0,47,40,1|abeofz,47,40,1|abeog0,45,59,0|aketvz,45,59,0|aketw0,47,40,1|auhprz,47,40,1|auhps0,45,59,0|b3hv7z,45,59,0|b3hv80,47,40,1|bd7v7z,47,40,1|bd7v80,45,59,0|bm7xvz,45,59,0|bm7xw0,47,40,1|bvxxvz,47,40,1|bvxxw0,45,59,0|c4y0jz,45,59,0|c4y0k0,47,40,1|ceo0jz,47,40,1|ceo0k0,45,59,0|cno37z,45,59,0|cno380,47,40,1|cxe37z,47,40,1|cxe380,45,59,0|d6e5vz,45,59,0|d6e5w0,47,40,1|dg45vz,47,40,1|dg45w0,45,59,0|dph77z,45,59,0|dph780,47,40,1|dyu8jz,47,40,1|dyu8k0,45,59,0|e879vz,45,59,0|e879w0,47,40,1|ehx9vz,47,40,1|ehx9w0,45,59,0|eqkdvz,45,59,0|eqkdw0,47,40,1|f1d9vz,47,40,1|f1d9w0,45,59,0|f9agjz,45,59,0|f9agk0,47,40,1|fkgb7z,47,40,1|fkgb80,45,59,0|fsdhvz,45,59,0|fsdhw0,47,40,1|g36dvz,47,40,1|g36dw0,45,59,0|gb3kjz,45,59,0|gb3kk0,47,40,1|glwgjz,47,40,1|glwgk0,45,59,0|gu6lvz,45,59,0|gu6lw0,47,40,1|h4mj7z,47,40,1|h4mj80,45,59,0|hcwojz,45,59,0|hcwok0,47,40,1|hnclvz,47,40,1|hnclw0,45,59,0|hv9sjz,45,59,0|hv9sk0,47,40,1|j7vsjz,47,40,1|j7vsk0,45,59,0|jeq37z,45,59,0|jeq380,47,40,1|jqlv7z,47,40,1|jqlv80,45,59,0|jxt4jz,45,59,0|jxt4k0,47,40,1|k9bxvz,47,40,1|k9bxw0,45,59,0|kg68jz,45,59,0|kg68k0,47,40,1|ks20jz,47,40,1|ks20k0,45,59,0|kz99vz,45,59,0|kz99w0,47,40,1|lb51vz,47,40,1|lb51w0,45,59,0|licb7z,45,59,0|licb80,47,40,1|lul1vz,47,40,1|lul1w0,45,59,0|m1sb7z,45,59,0|m1sb80,47,40,1|mcy5vz,47,40,1|mcy5w0,45,59,0|mjfhvz,45,59,0|mjfhw0,47,40,1|mvo8jz,47,40,1|mvo8k0,45,59,0|n25kjz,45,59,0|n25kk0,47,40,1|neeb7z,47,40,1|neeb80,45,59,0|nkvn7z,45,59,0|nkvn80,47,40,1|nx4dvz,47,40,1|nx4dw0,45,59,0|o3yojz,45,59,0|o3yok0,47,40,1|og7f7z,47,40,1|og7f80,45,59,0|omor7z,45,59,0|omor80,47,40,1|oyxhvz,47,40,1|oyxhw0,45,59,0|p5etvz,45,59,0|p5etw0,47,40,1|phnkjz,47,40,1|phnkk0,45,59,0|po4wjz,45,59,0|po4wk0,47,40,1|q0dn7z,47,40,1|q0dn80,45,59,0|q6uz7z,45,59,0|q6uz80,47,40,1|qj3pvz,47,40,1|qj3pw0,45,59,0|qpy0jz,45,59,0|qpy0k0,47,40,1|r26r7z,47,40,1|r26r80,45,59,0|r8o37z,45,59,0|r8o380,47,40,1|rkwtvz,47,40,1|rkwtw0,45,59,0|rre5vz,45,59,0|rre5w0,47,40,1|s3mwjz,47,40,1|s3mwk0,45,59,0|sa48jz,45,59,0|sa48k0,47,40,1|smcz7z,47,40,1|smcz80,45,59,0|ssub7z,45,59,0|ssub80,47,40,1|t531vz,47,40,1|t531w0,45,59,0|tbkdvz,45,59,0|tbkdw0,47,40,1|tnt4jz,47,40,1|tnt4k0,45,59,0|tunf7z,45,59,0|tunf80,47,40,1|u6w5vz,47,40,1|u6w5w0,45,59,0|uddhvz,45,59,0|uddhw0,47,40,1|upm8jz,47,40,1|upm8k0,45,59,0|uw3kjz,45,59,0|uw3kk0,47,40,1|v8cb7z,47,40,1|v8cb80,45,59,0|vetn7z,45,59,0|vetn80,47,40,1|vr2dvz,47,40,1|vr2dw0,45,59,0|vxjpvz,45,59,0|vxjpw0,47,40,1|w9sgjz,47,40,1|w9sgk0,45,59,0|wgmr7z,45,59,0|wgmr80,47,40,1|wsvhvz,47,40,1|wsvhw0,45,59,0|wzctvz,45,59,0|wzctw0,47,40,1|xblkjz,47,40,1|xblkk0,45,59,0|xi2wjz,45,59,0|xi2wk0,47,40,1|xubn7z,47,40,1|xubn80,45,59,0|y0sz7z,45,59,0|y0sz80,47,40,1|yd1pvz,47,40,1|yd1pw0,45,59,0|yjj1vz,45,59,0|yjj1w0,47,40,1|yvrsjz,47,40,1|yvrsk0,45,59,0|z294jz,45,59,0|z294k0,47,40,1|zehv7z,47,40,1|zehv80,45,59,0|zlc5vz,45,59,0|zlc5w0,47,40,1|zxkwjz,47,40,1|zxkwk0,45,59,0|10428jz,45,59,0|10428k0,47,40,1|10gaz7z,47,40,1|10gaz80,45,59,0|10msb7z,45,59,0|10msb80,47,40,1|10z11vz,47,40,1|10z11w0,45,59,0|115idvz,45,59,0|115idw0,47,40,1|11hr4jz,47,40,1|11hr4k0,45,59,0|11o8gjz,45,59,0|11o8gk0,47,40,1|120h77z,47,40,1|120h780,45,59,0|126yj7z,45,59,0|126yj80,47,40,1|12j79vz,47,40,1|12j79w0,45,59,0|12q1kjz,45,59,0|12q1kk0,47,40,1|132ab7z,47,40,1|132ab80,45,59,0|138rn7z,45,59,0|138rn80,47,40,1|13l0dvz,47,40,1|13l0dw0,45,59,0|13rhpvz,45,59,0|13rhpw0,47,40,1|143qgjz,47,40,1|143qgk0,45,59,0|14a7sjz,45,59,0|14a7sk0,47,40,1|14mgj7z,47,40,1|14mgj80,45,59,0|14sxv7z,45,59,0|14sxv80,47,40,1|1556lvz,47,40,1|1556lw0,45,59,0|15c0wjz,45,59,0|15c0wk0,47,40,1|15o9n7z,47,40,1|15o9n80,45,59,0|15uqz7z,45,59,0|15uqz80,47,40,1|166zpvz,47,40,1|166zpw0,45,59,0|16dh1vz,45,59,0|16dh1w0,47,40,1|16ppsjz,47,40,1|16ppsk0,45,59,0|16w74jz,45,59,0|16w74k0,47,40,1|178fv7z,47,40,1|178fv80,45,59,0|17ex77z,45,59,0|17ex780,47,40,1|17r5xvz,47,40,1|17r5xw0,45,59,0|17xn9vz,45,59,0|17xn9w0,47,40,1|189w0jz,47,40,1|189w0k0,45,59,0|18gqb7z,45,59,0|18gqb80,47,40,1|18sz1vz,47,40,1|18sz1w0,45,59,0|18zgdvz,45,59,0|18zgdw0,47,40,1|19bp4jz,47,40,1|19bp4k0,45,59,0|19i6gjz,45,59,0|19i6gk0,47,40,1|19uf77z,47,40,1|19uf780,45,59,0|1a0wj7z,45,59,0|1a0wj80,47,40,1|1ad59vz,47,40,1|1ad59w0,45,59,0|1ajmlvz,45,59,0|1ajmlw0,47,40,1|1avvcjz,47,40,1|1avvck0,45,59,0|1b2pn7z,45,59,0|1b2pn80,47,40,1|1beydvz,47,40,1|1beydw0,45,59,0|1blfpvz,45,59,0|1blfpw0,47,40,1|1bxogjz,47,40,1|1bxogk0,45,59,0|1c45sjz,45,59,0|1c45sk0,47,40,1|1cgej7z,47,40,1|1cgej80,45,59,0|1cmvv7z,45,59,0|1cmvv80,47,40,1|1cz4lvz,47,40,1|1cz4lw0,45,59,0|1d5lxvz,45,59,0|1d5lxw0,47,40,1|1dhuojz,47,40,1|1dhuok0,45,59,0|1doc0jz,45,59,0|1doc0k0,47,40,1|1e0kr7z,47,40,1|1e0kr80,45,59,0|1e7f1vz,45,59,0|1e7f1w0,47,40,1|1ejnsjz,47,40,1|1ejnsk0,45,59,0|1eq54jz,45,59,0|1eq54k0,47,40,1|1f2dv7z,47,40,1|1f2dv80,45,59,0|1f8v77z,45,59,0|1f8v780,47,40,1|1fl3xvz,47,40,1|1fl3xw0,45,59,0|1frl9vz,45,59,0|1frl9w0,47,40,1|1g3u0jz,47,40,1|1g3u0k0,45,59,0|1gabcjz,45,59,0|1gabck0,47,40,1|1gmk37z,47,40,1|1gmk380,45,59,0|1gt1f7z,45,59,0|1gt1f80,47,40,1|1h5a5vz,47,40,1|1h5a5w0,45,59,0|1hc4gjz,45,59,0|1hc4gk0,47,40,1|1hod77z,47,40,1|1hod780,45,59,0|1huuj7z,45,59,0|1huuj80,47,40,1|1i739vz,47,40,1|1i739w0,45,59,0|1idklvz,45,59,0|1idklw0,47,40,1|1iptcjz,47,40,1|1iptck0,45,59,0|1iwaojz,45,59,0|1iwaok0,47,40,1|1j8jf7z,47,40,1|1j8jf80,45,59,0|1jf0r7z,45,59,0|1jf0r80,47,40,1|1jr9hvz,47,40,1|1jr9hw0,45,59,0|1jy3sjz,45,59,0|1jy3sk0,47,40,1|1kacj7z,47,40,1|1kacj80,45,59,0|1kgtv7z,45,59,0|1kgtv80,47,40,1|1kt2lvz,47,40,1|1kt2lw0,45,59,0|1kzjxvz,45,59,0|1kzjxw0,47,40,1|1lbsojz,47,40,1|1lbsok0,45,59,0|1lia0jz,45,59,0|1lia0k0,47,40,1|1luir7z,47,40,1|1luir80,45,59,0|1m1037z,45,59,0|1m10380,47,40,1|1md8tvz,47,40,1|1md8tw0,45,59,0|1mjq5vz,45,59,0|1mjq5w0,47,40,1|1mvywjz,47,40,1|1mvywk0,45,59,0|1n2t77z,45,59,0|1n2t780,47,40,1|1nf1xvz,47,40,1|1nf1xw0,45,59,0|1nlj9vz,45,59,0|1nlj9w0,47,40,1|1nxs0jz,47,40,1|1nxs0k0,45,59,0|1o49cjz,45,59,0|1o49ck0,47,40,1|1ogi37z,47,40,1|1ogi380,45,59,0|1omzf7z,45,59,0|1omzf80,47,40,1|1oz85vz,47,40,1|1oz85w0,45,59,0|1p5phvz,45,59,0|1p5phw0,47,40,1|1phy8jz,47,40,1|1phy8k0,45,59,0|1posj7z,45,59,0|1posj80,47,40,1|1q119vz,47,40,1|1q119w0,45,59,0|1q7ilvz,45,59,0|1q7ilw0,47,40,1|1qjrcjz,47,40,1|1qjrck0,45,59,0|1qq8ojz,45,59,0|1qq8ok0,47,40,1|1r2hf7z,47,40,1|1r2hf80,45,59,0|1r8yr7z,45,59,0|1r8yr80,47,40,1|1rl7hvz,47,40,1|1rl7hw0,45,59,0|1rrotvz,45,59,0|1rrotw0,47,40,1|1s3xkjz,47,40,1|1s3xkk0,45,59,0|1saewjz,45,59,0|1saewk0,47,40,1|1smnn7z,47,40,1|1smnn80,45,59,0|1sthxvz,45,59,0|1sthxw0,47,40,1|1t5qojz,47,40,1|1t5qok0,45,59,0|1tc80jz,45,59,0|1tc80k0,47,40,1|1togr7z,47,40,1|1togr80,45,59,0|1tuy37z,45,59,0|1tuy380,47,40,1|1u76tvz,47,40,1|1u76tw0,45,59,0|1udo5vz,45,59,0|1udo5w0,47,40,1|1upwwjz,47,40,1|1upwwk0,45,59,0|1uwe8jz,45,59,0|1uwe8k0,47,40,1|1v8mz7z,47,40,1|1v8mz80,45,59,0|1vf4b7z,45,59,0|1vf4b80,47,40,1|1vrd1vz,47,40,1|1vrd1w0,45,59,0|NaN,45,59,0",
        "America/Hermosillo|,0,109,0|-p1u4k1,0,109,0|-p1u4k0,44,62,0|-m7ock1,44,62,0|-m7ock0,45,63,0|-kf67c1,45,63,0|-kf67c0,44,62,0|-k6mpw1,44,62,0|-k6mpw0,46,63,1|-jypm01,46,63,1|-jypm00,44,62,0|-jpan81,44,62,0|-jpan80,45,63,0|-eg9601,45,63,0|-eg9600,44,62,0|dphibz,44,62,0|dphic0,46,63,1|dzxcvz,46,63,1|dzxcw0,44,62,0|e87kzz,44,62,0|e87l00,46,63,1|einfjz,46,63,1|einfk0,44,62,0|eqxnnz,44,62,0|eqxno0,46,63,1|f1di7z,46,63,1|f1di80,44,62,0|NaN,44,62,0",
        "America/Indiana/Indianapolis|,0,110,0|-18y0m01,0,110,0|-18y0m00,45,63,0|-r0esg1,45,63,0|-r0esg0,47,59,1|-qplz81,47,59,1|-qplz80,45,63,0|-qhops1,45,63,0|-qhops0,47,59,1|-q6vwk1,47,59,1|-q6vwk0,45,63,0|-evzog1,45,63,0|-evzog0,47,59,1|-eqy9w1,47,59,1|-eqy9w0,45,63,0|-ek21s1,45,63,0|-ek21s0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cnp0k1,52,59,1|-cnp0k0,45,63,0|-ccw1s1,45,63,0|-ccw1s0,47,59,1|-c4yxw1,47,59,1|-c4yxw0,45,63,0|-bu5z41,45,63,0|-bu5z40,47,59,1|-bm8v81,47,59,1|-bm8v80,45,63,0|-bbfwg1,45,63,0|-bbfwg0,47,59,1|-b3isk1,47,59,1|-b3isk0,45,63,0|-aspts1,45,63,0|-aspts0,47,59,1|-akspw1,47,59,1|-akspw0,45,63,0|-a9msg1,45,63,0|-a9msg0,47,59,1|-a22n81,47,59,1|-a22n80,45,63,0|-9qwps1,45,63,0|-9qwps0,47,59,1|-9izlw1,47,59,1|-9izlw0,45,63,0|-986n41,45,63,0|-986n40,47,59,1|-909j81,47,59,1|-909j80,45,63,0|-8pgkg1,45,63,0|-8pgkg0,47,59,1|-8hjgk1,47,59,1|-8hjgk0,45,63,0|-86qhs1,45,63,0|-86qhs0,47,59,1|-7ytdw1,47,59,1|-7ytdw0,45,63,0|-7o0f41,45,63,0|-7o0f40,43,59,0|-6ea781,43,59,0|-6ea780,45,63,0|-63h8g1,45,63,0|-63h8g0,43,59,0|-cskk1,43,59,0|-cskk0,60,40,1|-3fm01,60,40,1|-3fm00,43,59,0|5xi3z,43,59,0|5xi40,60,40,1|fagnz,60,40,1|fago0,43,59,0|ix323z,43,59,0|ix3240,60,40,1|j7vvbz,60,40,1|j7vvc0,43,59,0|jeq8rz,43,59,0|jeq8s0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Indiana/Knox|,0,111,0|-18y0m01,0,111,0|-18y0m00,45,63,0|-r0esg1,45,63,0|-r0esg0,47,59,1|-qplz81,47,59,1|-qplz80,45,63,0|-qhops1,45,63,0|-qhops0,47,59,1|-q6vwk1,47,59,1|-q6vwk0,45,63,0|-ek21s1,45,63,0|-ek21s0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cnp0k1,52,59,1|-cnp0k0,45,63,0|-bu5z41,45,63,0|-bu5z40,47,59,1|-bm8v81,47,59,1|-bm8v80,45,63,0|-bbfwg1,45,63,0|-bbfwg0,47,59,1|-b3isk1,47,59,1|-b3isk0,45,63,0|-aspts1,45,63,0|-aspts0,47,59,1|-akspw1,47,59,1|-akspw0,45,63,0|-a9msg1,45,63,0|-a9msg0,47,59,1|-a22n81,47,59,1|-a22n80,45,63,0|-9qwps1,45,63,0|-9qwps0,47,59,1|-9izlw1,47,59,1|-9izlw0,45,63,0|-986n41,45,63,0|-986n40,47,59,1|-909j81,47,59,1|-909j80,45,63,0|-8pgkg1,45,63,0|-8pgkg0,47,59,1|-8hjgk1,47,59,1|-8hjgk0,45,63,0|-86qhs1,45,63,0|-86qhs0,47,59,1|-7ytdw1,47,59,1|-7ytdw0,45,63,0|-7o0f41,45,63,0|-7o0f40,47,59,1|-7eahw1,47,59,1|-7eahw0,45,63,0|-74xds1,45,63,0|-74xds0,47,59,1|-6vkf81,47,59,1|-6vkf80,45,63,0|-6m7b41,45,63,0|-6m7b40,47,59,1|-6ea781,47,59,1|-6ea780,45,63,0|-63h8g1,45,63,0|-63h8g0,47,59,1|-5vk4k1,47,59,1|-5vk4k0,45,63,0|-5kr5s1,45,63,0|-5kr5s0,47,59,1|-5be781,47,59,1|-5be780,45,63,0|-521341,45,63,0|-521340,47,59,1|-4sb5w1,47,59,1|-4sb5w0,45,63,0|-4iy1s1,45,63,0|-4iy1s0,47,59,1|-49l381,47,59,1|-49l380,45,63,0|-407z41,45,63,0|-407z40,43,59,0|-384xw1,43,59,0|-384xw0,45,63,0|-1e8n41,45,63,0|-1e8n40,47,59,1|-14vok1,47,59,1|-14vok0,45,63,0|-vikg1,45,63,0|-vikg0,47,59,1|-m5lw1,47,59,1|-m5lw0,45,63,0|-cshs1,45,63,0|-cshs0,47,59,1|-3fj81,47,59,1|-3fj80,45,63,0|5xkvz,45,63,0|5xkw0,47,59,1|fajfz,47,59,1|fajg0,45,63,0|onnjz,45,63,0|onnk0,47,59,1|ydkrz,47,59,1|ydks0,45,63,0|17qovz,45,63,0|17qow0,47,59,1|1h3nfz,47,59,1|1h3ng0,45,63,0|1qgrjz,45,63,0|1qgrk0,47,59,1|1ztq3z,47,59,1|1ztq40,45,63,0|23ffjz,45,63,0|23ffk0,47,59,1|2ijsrz,47,59,1|2ijss0,45,63,0|2oo8vz,45,63,0|2oo8w0,47,59,1|319vfz,47,59,1|319vg0,45,63,0|3amzjz,45,63,0|3amzk0,47,59,1|3kcwrz,47,59,1|3kcws0,45,63,0|3td27z,45,63,0|3td280,47,59,1|432zfz,47,59,1|432zg0,45,63,0|4cg3jz,45,63,0|4cg3k0,47,59,1|4lt23z,47,59,1|4lt240,45,63,0|4v667z,45,63,0|4v6680,47,59,1|54j4rz,47,59,1|54j4s0,45,63,0|5dw8vz,45,63,0|5dw8w0,47,59,1|5n97fz,47,59,1|5n97g0,45,63,0|5wmbjz,45,63,0|5wmbk0,47,59,1|65za3z,47,59,1|65za40,45,63,0|6fce7z,45,63,0|6fce80,47,59,1|6p2bfz,47,59,1|6p2bg0,45,63,0|6y2gvz,45,63,0|6y2gw0,47,59,1|77se3z,47,59,1|77se40,45,63,0|7h5i7z,45,63,0|7h5i80,47,59,1|7qigrz,47,59,1|7qigs0,45,63,0|7zvkvz,45,63,0|7zvkw0,47,59,1|898jfz,47,59,1|898jg0,45,63,0|8ilnjz,45,63,0|8ilnk0,47,59,1|8rym3z,47,59,1|8rym40,45,63,0|908u7z,45,63,0|908u80,47,59,1|9aoorz,47,59,1|9aoos0,45,63,0|9iywvz,45,63,0|9iyww0,47,59,1|9trq3z,47,59,1|9trq40,45,63,0|a1ozjz,45,63,0|a1ozk0,47,59,1|achsrz,47,59,1|achss0,45,63,0|akf27z,45,63,0|akf280,47,59,1|av7vfz,47,59,1|av7vg0,45,63,0|b3i3jz,45,63,0|b3i3k0,47,59,1|bdxy3z,47,59,1|bdxy40,43,59,0|ix323z,43,59,0|ix3240,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jeqbjz,45,63,0|jeqbk0,47,59,1|jqyzfz,47,59,1|jqyzg0,45,63,0|jxge7z,45,63,0|jxge80,47,59,1|k9p23z,47,59,1|k9p240,45,63,0|kg6gvz,45,63,0|kg6gw0,47,59,1|ksf4rz,47,59,1|ksf4s0,45,63,0|kz9i7z,45,63,0|kz9i80,47,59,1|lbi63z,47,59,1|lbi640,45,63,0|lhzkvz,45,63,0|lhzkw0,47,59,1|lu88rz,47,59,1|lu88s0,45,63,0|m0pnjz,45,63,0|m0pnk0,47,59,1|mcybfz,47,59,1|mcybg0,45,63,0|mjfq7z,45,63,0|mjfq80,47,59,1|mvoe3z,47,59,1|mvoe40,45,63,0|n25svz,45,63,0|n25sw0,47,59,1|neegrz,47,59,1|neegs0,45,63,0|nkvvjz,45,63,0|nkvvk0,47,59,1|nx4jfz,47,59,1|nx4jg0,45,63,0|o3ywvz,45,63,0|o3yww0,47,59,1|og7krz,47,59,1|og7ks0,45,63,0|omozjz,45,63,0|omozk0,47,59,1|oyxnfz,47,59,1|oyxng0,45,63,0|p5f27z,45,63,0|p5f280,47,59,1|phnq3z,47,59,1|phnq40,45,63,0|po54vz,45,63,0|po54w0,47,59,1|q0dsrz,47,59,1|q0dss0,45,63,0|q6v7jz,45,63,0|q6v7k0,47,59,1|qj3vfz,47,59,1|qj3vg0,45,63,0|qpy8vz,45,63,0|qpy8w0,47,59,1|r26wrz,47,59,1|r26ws0,45,63,0|r8objz,45,63,0|r8obk0,47,59,1|rkwzfz,47,59,1|rkwzg0,45,63,0|rree7z,45,63,0|rree80,47,59,1|s3n23z,47,59,1|s3n240,45,63,0|sa4gvz,45,63,0|sa4gw0,47,59,1|smd4rz,47,59,1|smd4s0,45,63,0|ssujjz,45,63,0|ssujk0,47,59,1|t537fz,47,59,1|t537g0,45,63,0|tbkm7z,45,63,0|tbkm80,47,59,1|tnta3z,47,59,1|tnta40,45,63,0|tunnjz,45,63,0|tunnk0,47,59,1|u6wbfz,47,59,1|u6wbg0,45,63,0|uddq7z,45,63,0|uddq80,47,59,1|upme3z,47,59,1|upme40,45,63,0|uw3svz,45,63,0|uw3sw0,47,59,1|v8cgrz,47,59,1|v8cgs0,45,63,0|vetvjz,45,63,0|vetvk0,47,59,1|vr2jfz,47,59,1|vr2jg0,45,63,0|vxjy7z,45,63,0|vxjy80,47,59,1|w9sm3z,47,59,1|w9sm40,45,63,0|wgmzjz,45,63,0|wgmzk0,47,59,1|wsvnfz,47,59,1|wsvng0,45,63,0|wzd27z,45,63,0|wzd280,47,59,1|xblq3z,47,59,1|xblq40,45,63,0|xi34vz,45,63,0|xi34w0,47,59,1|xubsrz,47,59,1|xubss0,45,63,0|y0t7jz,45,63,0|y0t7k0,47,59,1|yd1vfz,47,59,1|yd1vg0,45,63,0|yjja7z,45,63,0|yjja80,47,59,1|yvry3z,47,59,1|yvry40,45,63,0|z29cvz,45,63,0|z29cw0,47,59,1|zei0rz,47,59,1|zei0s0,45,63,0|zlce7z,45,63,0|zlce80,47,59,1|zxl23z,47,59,1|zxl240,45,63,0|1042gvz,45,63,0|1042gw0,47,59,1|10gb4rz,47,59,1|10gb4s0,45,63,0|10msjjz,45,63,0|10msjk0,47,59,1|10z17fz,47,59,1|10z17g0,45,63,0|115im7z,45,63,0|115im80,47,59,1|11hra3z,47,59,1|11hra40,45,63,0|11o8ovz,45,63,0|11o8ow0,47,59,1|120hcrz,47,59,1|120hcs0,45,63,0|126yrjz,45,63,0|126yrk0,47,59,1|12j7ffz,47,59,1|12j7fg0,45,63,0|12q1svz,45,63,0|12q1sw0,47,59,1|132agrz,47,59,1|132ags0,45,63,0|138rvjz,45,63,0|138rvk0,47,59,1|13l0jfz,47,59,1|13l0jg0,45,63,0|13rhy7z,45,63,0|13rhy80,47,59,1|143qm3z,47,59,1|143qm40,45,63,0|14a80vz,45,63,0|14a80w0,47,59,1|14mgorz,47,59,1|14mgos0,45,63,0|14sy3jz,45,63,0|14sy3k0,47,59,1|1556rfz,47,59,1|1556rg0,45,63,0|15c14vz,45,63,0|15c14w0,47,59,1|15o9srz,47,59,1|15o9ss0,45,63,0|15ur7jz,45,63,0|15ur7k0,47,59,1|166zvfz,47,59,1|166zvg0,45,63,0|16dha7z,45,63,0|16dha80,47,59,1|16ppy3z,47,59,1|16ppy40,45,63,0|16w7cvz,45,63,0|16w7cw0,47,59,1|178g0rz,47,59,1|178g0s0,45,63,0|17exfjz,45,63,0|17exfk0,47,59,1|17r63fz,47,59,1|17r63g0,45,63,0|17xni7z,45,63,0|17xni80,47,59,1|189w63z,47,59,1|189w640,45,63,0|18gqjjz,45,63,0|18gqjk0,47,59,1|18sz7fz,47,59,1|18sz7g0,45,63,0|18zgm7z,45,63,0|18zgm80,47,59,1|19bpa3z,47,59,1|19bpa40,45,63,0|19i6ovz,45,63,0|19i6ow0,47,59,1|19ufcrz,47,59,1|19ufcs0,45,63,0|1a0wrjz,45,63,0|1a0wrk0,47,59,1|1ad5ffz,47,59,1|1ad5fg0,45,63,0|1ajmu7z,45,63,0|1ajmu80,47,59,1|1avvi3z,47,59,1|1avvi40,45,63,0|1b2pvjz,45,63,0|1b2pvk0,47,59,1|1beyjfz,47,59,1|1beyjg0,45,63,0|1blfy7z,45,63,0|1blfy80,47,59,1|1bxom3z,47,59,1|1bxom40,45,63,0|1c460vz,45,63,0|1c460w0,47,59,1|1cgeorz,47,59,1|1cgeos0,45,63,0|1cmw3jz,45,63,0|1cmw3k0,47,59,1|1cz4rfz,47,59,1|1cz4rg0,45,63,0|1d5m67z,45,63,0|1d5m680,47,59,1|1dhuu3z,47,59,1|1dhuu40,45,63,0|1doc8vz,45,63,0|1doc8w0,47,59,1|1e0kwrz,47,59,1|1e0kws0,45,63,0|1e7fa7z,45,63,0|1e7fa80,47,59,1|1ejny3z,47,59,1|1ejny40,45,63,0|1eq5cvz,45,63,0|1eq5cw0,47,59,1|1f2e0rz,47,59,1|1f2e0s0,45,63,0|1f8vfjz,45,63,0|1f8vfk0,47,59,1|1fl43fz,47,59,1|1fl43g0,45,63,0|1frli7z,45,63,0|1frli80,47,59,1|1g3u63z,47,59,1|1g3u640,45,63,0|1gabkvz,45,63,0|1gabkw0,47,59,1|1gmk8rz,47,59,1|1gmk8s0,45,63,0|1gt1njz,45,63,0|1gt1nk0,47,59,1|1h5abfz,47,59,1|1h5abg0,45,63,0|1hc4ovz,45,63,0|1hc4ow0,47,59,1|1hodcrz,47,59,1|1hodcs0,45,63,0|1huurjz,45,63,0|1huurk0,47,59,1|1i73ffz,47,59,1|1i73fg0,45,63,0|1idku7z,45,63,0|1idku80,47,59,1|1ipti3z,47,59,1|1ipti40,45,63,0|1iwawvz,45,63,0|1iwaww0,47,59,1|1j8jkrz,47,59,1|1j8jks0,45,63,0|1jf0zjz,45,63,0|1jf0zk0,47,59,1|1jr9nfz,47,59,1|1jr9ng0,45,63,0|1jy40vz,45,63,0|1jy40w0,47,59,1|1kacorz,47,59,1|1kacos0,45,63,0|1kgu3jz,45,63,0|1kgu3k0,47,59,1|1kt2rfz,47,59,1|1kt2rg0,45,63,0|1kzk67z,45,63,0|1kzk680,47,59,1|1lbsu3z,47,59,1|1lbsu40,45,63,0|1lia8vz,45,63,0|1lia8w0,47,59,1|1luiwrz,47,59,1|1luiws0,45,63,0|1m10bjz,45,63,0|1m10bk0,47,59,1|1md8zfz,47,59,1|1md8zg0,45,63,0|1mjqe7z,45,63,0|1mjqe80,47,59,1|1mvz23z,47,59,1|1mvz240,45,63,0|1n2tfjz,45,63,0|1n2tfk0,47,59,1|1nf23fz,47,59,1|1nf23g0,45,63,0|1nlji7z,45,63,0|1nlji80,47,59,1|1nxs63z,47,59,1|1nxs640,45,63,0|1o49kvz,45,63,0|1o49kw0,47,59,1|1ogi8rz,47,59,1|1ogi8s0,45,63,0|1omznjz,45,63,0|1omznk0,47,59,1|1oz8bfz,47,59,1|1oz8bg0,45,63,0|1p5pq7z,45,63,0|1p5pq80,47,59,1|1phye3z,47,59,1|1phye40,45,63,0|1posrjz,45,63,0|1posrk0,47,59,1|1q11ffz,47,59,1|1q11fg0,45,63,0|1q7iu7z,45,63,0|1q7iu80,47,59,1|1qjri3z,47,59,1|1qjri40,45,63,0|1qq8wvz,45,63,0|1qq8ww0,47,59,1|1r2hkrz,47,59,1|1r2hks0,45,63,0|1r8yzjz,45,63,0|1r8yzk0,47,59,1|1rl7nfz,47,59,1|1rl7ng0,45,63,0|1rrp27z,45,63,0|1rrp280,47,59,1|1s3xq3z,47,59,1|1s3xq40,45,63,0|1saf4vz,45,63,0|1saf4w0,47,59,1|1smnsrz,47,59,1|1smnss0,45,63,0|1sti67z,45,63,0|1sti680,47,59,1|1t5qu3z,47,59,1|1t5qu40,45,63,0|1tc88vz,45,63,0|1tc88w0,47,59,1|1togwrz,47,59,1|1togws0,45,63,0|1tuybjz,45,63,0|1tuybk0,47,59,1|1u76zfz,47,59,1|1u76zg0,45,63,0|1udoe7z,45,63,0|1udoe80,47,59,1|1upx23z,47,59,1|1upx240,45,63,0|1uwegvz,45,63,0|1uwegw0,47,59,1|1v8n4rz,47,59,1|1v8n4s0,45,63,0|1vf4jjz,45,63,0|1vf4jk0,47,59,1|1vrd7fz,47,59,1|1vrd7g0,45,63,0|NaN,45,63,0",
        "America/Indiana/Marengo|,0,112,0|-18y0m01,0,112,0|-18y0m00,45,63,0|-r0esg1,45,63,0|-r0esg0,47,59,1|-qplz81,47,59,1|-qplz80,45,63,0|-qhops1,45,63,0|-qhops0,47,59,1|-q6vwk1,47,59,1|-q6vwk0,45,63,0|-ek21s1,45,63,0|-ek21s0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cnp0k1,52,59,1|-cnp0k0,45,63,0|-9qwps1,45,63,0|-9qwps0,47,59,1|-9izlw1,47,59,1|-9izlw0,45,63,0|-86qhs1,45,63,0|-86qhs0,47,59,1|-7ytdw1,47,59,1|-7ytdw0,45,63,0|-7o0f41,45,63,0|-7o0f40,47,59,1|-7g3b81,47,59,1|-7g3b80,45,63,0|-74xds1,45,63,0|-74xds0,47,59,1|-6x09w1,47,59,1|-6x09w0,45,63,0|-6m7b41,45,63,0|-6m7b40,47,59,1|-6ea781,47,59,1|-6ea780,45,63,0|-63h8g1,45,63,0|-63h8g0,47,59,1|-5vk4k1,47,59,1|-5vk4k0,45,63,0|-5kr5s1,45,63,0|-5kr5s0,47,59,1|-5cu1w1,47,59,1|-5cu1w0,45,63,0|-521341,45,63,0|-521340,47,59,1|-4u3z81,47,59,1|-4u3z80,45,63,0|-4iy1s1,45,63,0|-4iy1s0,43,59,0|-cskk1,43,59,0|-cskk0,60,40,1|-3fm01,60,40,1|-3fm00,43,59,0|5xi3z,43,59,0|5xi40,60,40,1|fagnz,60,40,1|fago0,43,59,0|onkrz,43,59,0|onks0,60,40,1|ydhzz,60,40,1|ydi00,43,59,0|17qm3z,43,59,0|17qm40,60,40,1|1h3knz,60,40,1|1h3ko0,43,59,0|1qgorz,43,59,0|1qgos0,60,40,1|1ztnbz,60,40,1|1ztnc0,43,59,0|23fcrz,43,59,0|23fcs0,47,59,1|2ijsrz,47,59,1|2ijss0,43,59,0|2oo63z,43,59,0|2oo640,60,40,1|319snz,60,40,1|319so0,43,59,0|ix323z,43,59,0|ix3240,60,40,1|j7vvbz,60,40,1|j7vvc0,43,59,0|jeq8rz,43,59,0|jeq8s0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Indiana/Petersburg|,0,113,0|-18y0m01,0,113,0|-18y0m00,45,63,0|-r0esg1,45,63,0|-r0esg0,47,59,1|-qplz81,47,59,1|-qplz80,45,63,0|-qhops1,45,63,0|-qhops0,47,59,1|-q6vwk1,47,59,1|-q6vwk0,45,63,0|-ek21s1,45,63,0|-ek21s0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cnp0k1,52,59,1|-cnp0k0,45,63,0|-7nnm01,45,63,0|-7nnm00,47,59,1|-7g3b81,47,59,1|-7g3b80,45,63,0|-74xds1,45,63,0|-74xds0,47,59,1|-6x09w1,47,59,1|-6x09w0,45,63,0|-6m7b41,45,63,0|-6m7b40,47,59,1|-6ea781,47,59,1|-6ea780,45,63,0|-63h8g1,45,63,0|-63h8g0,47,59,1|-5vk4k1,47,59,1|-5vk4k0,45,63,0|-5kr5s1,45,63,0|-5kr5s0,47,59,1|-5cu1w1,47,59,1|-5cu1w0,45,63,0|-521341,45,63,0|-521340,47,59,1|-4u3z81,47,59,1|-4u3z80,45,63,0|-4iy1s1,45,63,0|-4iy1s0,47,59,1|-49l381,47,59,1|-49l380,45,63,0|-407z41,45,63,0|-407z40,47,59,1|-3qv0k1,47,59,1|-3qv0k0,45,63,0|-3hhwg1,45,63,0|-3hhwg0,47,59,1|-384xw1,47,59,1|-384xw0,45,63,0|-2yrts1,45,63,0|-2yrts0,47,59,1|-2pev81,47,59,1|-2pev80,45,63,0|-2g1r41,45,63,0|-2g1r40,43,59,0|-1nlr81,43,59,0|-1nlr80,45,63,0|-1e8n41,45,63,0|-1e8n40,47,59,1|-14vok1,47,59,1|-14vok0,45,63,0|-vikg1,45,63,0|-vikg0,47,59,1|-m5lw1,47,59,1|-m5lw0,45,63,0|-cshs1,45,63,0|-cshs0,47,59,1|-3fj81,47,59,1|-3fj80,45,63,0|5xkvz,45,63,0|5xkw0,47,59,1|fajfz,47,59,1|fajg0,45,63,0|onnjz,45,63,0|onnk0,47,59,1|ydkrz,47,59,1|ydks0,45,63,0|17qovz,45,63,0|17qow0,47,59,1|1h3nfz,47,59,1|1h3ng0,45,63,0|1qgrjz,45,63,0|1qgrk0,47,59,1|1ztq3z,47,59,1|1ztq40,45,63,0|23ffjz,45,63,0|23ffk0,47,59,1|2ijsrz,47,59,1|2ijss0,45,63,0|2oo8vz,45,63,0|2oo8w0,47,59,1|319vfz,47,59,1|319vg0,45,63,0|3amzjz,45,63,0|3amzk0,47,59,1|3kcwrz,47,59,1|3kcws0,45,63,0|3td27z,45,63,0|3td280,47,59,1|432zfz,47,59,1|432zg0,43,59,0|ix323z,43,59,0|ix3240,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jeqbjz,45,63,0|jeqbk0,47,59,1|jqyzfz,47,59,1|jqyzg0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Indiana/Tell_City|,0,114,0|-18y0m01,0,114,0|-18y0m00,45,63,0|-r0esg1,45,63,0|-r0esg0,47,59,1|-qplz81,47,59,1|-qplz80,45,63,0|-qhops1,45,63,0|-qhops0,47,59,1|-q6vwk1,47,59,1|-q6vwk0,45,63,0|-ek21s1,45,63,0|-ek21s0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cnp0k1,52,59,1|-cnp0k0,45,63,0|-7nnm01,45,63,0|-7nnm00,47,59,1|-7g3b81,47,59,1|-7g3b80,45,63,0|-74xds1,45,63,0|-74xds0,47,59,1|-6x09w1,47,59,1|-6x09w0,45,63,0|-6m7b41,45,63,0|-6m7b40,47,59,1|-6ea781,47,59,1|-6ea780,45,63,0|-63h8g1,45,63,0|-63h8g0,47,59,1|-5vk4k1,47,59,1|-5vk4k0,45,63,0|-5kr5s1,45,63,0|-5kr5s0,47,59,1|-5cu1w1,47,59,1|-5cu1w0,45,63,0|-521341,45,63,0|-521340,47,59,1|-4u3z81,47,59,1|-4u3z80,45,63,0|-4iy1s1,45,63,0|-4iy1s0,47,59,1|-49l381,47,59,1|-49l380,45,63,0|-407z41,45,63,0|-407z40,47,59,1|-3qv0k1,47,59,1|-3qv0k0,45,63,0|-3hhwg1,45,63,0|-3hhwg0,47,59,1|-384xw1,47,59,1|-384xw0,45,63,0|-2yrts1,45,63,0|-2yrts0,43,59,0|-14vok1,43,59,0|-14vok0,45,63,0|-vikg1,45,63,0|-vikg0,47,59,1|-m5lw1,47,59,1|-m5lw0,45,63,0|-cshs1,45,63,0|-cshs0,60,40,1|-3fm01,60,40,1|-3fm00,43,59,0|5xi3z,43,59,0|5xi40,60,40,1|fagnz,60,40,1|fago0,43,59,0|ix323z,43,59,0|ix3240,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jeqbjz,45,63,0|jeqbk0,47,59,1|jqyzfz,47,59,1|jqyzg0,45,63,0|jxge7z,45,63,0|jxge80,47,59,1|k9p23z,47,59,1|k9p240,45,63,0|kg6gvz,45,63,0|kg6gw0,47,59,1|ksf4rz,47,59,1|ksf4s0,45,63,0|kz9i7z,45,63,0|kz9i80,47,59,1|lbi63z,47,59,1|lbi640,45,63,0|lhzkvz,45,63,0|lhzkw0,47,59,1|lu88rz,47,59,1|lu88s0,45,63,0|m0pnjz,45,63,0|m0pnk0,47,59,1|mcybfz,47,59,1|mcybg0,45,63,0|mjfq7z,45,63,0|mjfq80,47,59,1|mvoe3z,47,59,1|mvoe40,45,63,0|n25svz,45,63,0|n25sw0,47,59,1|neegrz,47,59,1|neegs0,45,63,0|nkvvjz,45,63,0|nkvvk0,47,59,1|nx4jfz,47,59,1|nx4jg0,45,63,0|o3ywvz,45,63,0|o3yww0,47,59,1|og7krz,47,59,1|og7ks0,45,63,0|omozjz,45,63,0|omozk0,47,59,1|oyxnfz,47,59,1|oyxng0,45,63,0|p5f27z,45,63,0|p5f280,47,59,1|phnq3z,47,59,1|phnq40,45,63,0|po54vz,45,63,0|po54w0,47,59,1|q0dsrz,47,59,1|q0dss0,45,63,0|q6v7jz,45,63,0|q6v7k0,47,59,1|qj3vfz,47,59,1|qj3vg0,45,63,0|qpy8vz,45,63,0|qpy8w0,47,59,1|r26wrz,47,59,1|r26ws0,45,63,0|r8objz,45,63,0|r8obk0,47,59,1|rkwzfz,47,59,1|rkwzg0,45,63,0|rree7z,45,63,0|rree80,47,59,1|s3n23z,47,59,1|s3n240,45,63,0|sa4gvz,45,63,0|sa4gw0,47,59,1|smd4rz,47,59,1|smd4s0,45,63,0|ssujjz,45,63,0|ssujk0,47,59,1|t537fz,47,59,1|t537g0,45,63,0|tbkm7z,45,63,0|tbkm80,47,59,1|tnta3z,47,59,1|tnta40,45,63,0|tunnjz,45,63,0|tunnk0,47,59,1|u6wbfz,47,59,1|u6wbg0,45,63,0|uddq7z,45,63,0|uddq80,47,59,1|upme3z,47,59,1|upme40,45,63,0|uw3svz,45,63,0|uw3sw0,47,59,1|v8cgrz,47,59,1|v8cgs0,45,63,0|vetvjz,45,63,0|vetvk0,47,59,1|vr2jfz,47,59,1|vr2jg0,45,63,0|vxjy7z,45,63,0|vxjy80,47,59,1|w9sm3z,47,59,1|w9sm40,45,63,0|wgmzjz,45,63,0|wgmzk0,47,59,1|wsvnfz,47,59,1|wsvng0,45,63,0|wzd27z,45,63,0|wzd280,47,59,1|xblq3z,47,59,1|xblq40,45,63,0|xi34vz,45,63,0|xi34w0,47,59,1|xubsrz,47,59,1|xubss0,45,63,0|y0t7jz,45,63,0|y0t7k0,47,59,1|yd1vfz,47,59,1|yd1vg0,45,63,0|yjja7z,45,63,0|yjja80,47,59,1|yvry3z,47,59,1|yvry40,45,63,0|z29cvz,45,63,0|z29cw0,47,59,1|zei0rz,47,59,1|zei0s0,45,63,0|zlce7z,45,63,0|zlce80,47,59,1|zxl23z,47,59,1|zxl240,45,63,0|1042gvz,45,63,0|1042gw0,47,59,1|10gb4rz,47,59,1|10gb4s0,45,63,0|10msjjz,45,63,0|10msjk0,47,59,1|10z17fz,47,59,1|10z17g0,45,63,0|115im7z,45,63,0|115im80,47,59,1|11hra3z,47,59,1|11hra40,45,63,0|11o8ovz,45,63,0|11o8ow0,47,59,1|120hcrz,47,59,1|120hcs0,45,63,0|126yrjz,45,63,0|126yrk0,47,59,1|12j7ffz,47,59,1|12j7fg0,45,63,0|12q1svz,45,63,0|12q1sw0,47,59,1|132agrz,47,59,1|132ags0,45,63,0|138rvjz,45,63,0|138rvk0,47,59,1|13l0jfz,47,59,1|13l0jg0,45,63,0|13rhy7z,45,63,0|13rhy80,47,59,1|143qm3z,47,59,1|143qm40,45,63,0|14a80vz,45,63,0|14a80w0,47,59,1|14mgorz,47,59,1|14mgos0,45,63,0|14sy3jz,45,63,0|14sy3k0,47,59,1|1556rfz,47,59,1|1556rg0,45,63,0|15c14vz,45,63,0|15c14w0,47,59,1|15o9srz,47,59,1|15o9ss0,45,63,0|15ur7jz,45,63,0|15ur7k0,47,59,1|166zvfz,47,59,1|166zvg0,45,63,0|16dha7z,45,63,0|16dha80,47,59,1|16ppy3z,47,59,1|16ppy40,45,63,0|16w7cvz,45,63,0|16w7cw0,47,59,1|178g0rz,47,59,1|178g0s0,45,63,0|17exfjz,45,63,0|17exfk0,47,59,1|17r63fz,47,59,1|17r63g0,45,63,0|17xni7z,45,63,0|17xni80,47,59,1|189w63z,47,59,1|189w640,45,63,0|18gqjjz,45,63,0|18gqjk0,47,59,1|18sz7fz,47,59,1|18sz7g0,45,63,0|18zgm7z,45,63,0|18zgm80,47,59,1|19bpa3z,47,59,1|19bpa40,45,63,0|19i6ovz,45,63,0|19i6ow0,47,59,1|19ufcrz,47,59,1|19ufcs0,45,63,0|1a0wrjz,45,63,0|1a0wrk0,47,59,1|1ad5ffz,47,59,1|1ad5fg0,45,63,0|1ajmu7z,45,63,0|1ajmu80,47,59,1|1avvi3z,47,59,1|1avvi40,45,63,0|1b2pvjz,45,63,0|1b2pvk0,47,59,1|1beyjfz,47,59,1|1beyjg0,45,63,0|1blfy7z,45,63,0|1blfy80,47,59,1|1bxom3z,47,59,1|1bxom40,45,63,0|1c460vz,45,63,0|1c460w0,47,59,1|1cgeorz,47,59,1|1cgeos0,45,63,0|1cmw3jz,45,63,0|1cmw3k0,47,59,1|1cz4rfz,47,59,1|1cz4rg0,45,63,0|1d5m67z,45,63,0|1d5m680,47,59,1|1dhuu3z,47,59,1|1dhuu40,45,63,0|1doc8vz,45,63,0|1doc8w0,47,59,1|1e0kwrz,47,59,1|1e0kws0,45,63,0|1e7fa7z,45,63,0|1e7fa80,47,59,1|1ejny3z,47,59,1|1ejny40,45,63,0|1eq5cvz,45,63,0|1eq5cw0,47,59,1|1f2e0rz,47,59,1|1f2e0s0,45,63,0|1f8vfjz,45,63,0|1f8vfk0,47,59,1|1fl43fz,47,59,1|1fl43g0,45,63,0|1frli7z,45,63,0|1frli80,47,59,1|1g3u63z,47,59,1|1g3u640,45,63,0|1gabkvz,45,63,0|1gabkw0,47,59,1|1gmk8rz,47,59,1|1gmk8s0,45,63,0|1gt1njz,45,63,0|1gt1nk0,47,59,1|1h5abfz,47,59,1|1h5abg0,45,63,0|1hc4ovz,45,63,0|1hc4ow0,47,59,1|1hodcrz,47,59,1|1hodcs0,45,63,0|1huurjz,45,63,0|1huurk0,47,59,1|1i73ffz,47,59,1|1i73fg0,45,63,0|1idku7z,45,63,0|1idku80,47,59,1|1ipti3z,47,59,1|1ipti40,45,63,0|1iwawvz,45,63,0|1iwaww0,47,59,1|1j8jkrz,47,59,1|1j8jks0,45,63,0|1jf0zjz,45,63,0|1jf0zk0,47,59,1|1jr9nfz,47,59,1|1jr9ng0,45,63,0|1jy40vz,45,63,0|1jy40w0,47,59,1|1kacorz,47,59,1|1kacos0,45,63,0|1kgu3jz,45,63,0|1kgu3k0,47,59,1|1kt2rfz,47,59,1|1kt2rg0,45,63,0|1kzk67z,45,63,0|1kzk680,47,59,1|1lbsu3z,47,59,1|1lbsu40,45,63,0|1lia8vz,45,63,0|1lia8w0,47,59,1|1luiwrz,47,59,1|1luiws0,45,63,0|1m10bjz,45,63,0|1m10bk0,47,59,1|1md8zfz,47,59,1|1md8zg0,45,63,0|1mjqe7z,45,63,0|1mjqe80,47,59,1|1mvz23z,47,59,1|1mvz240,45,63,0|1n2tfjz,45,63,0|1n2tfk0,47,59,1|1nf23fz,47,59,1|1nf23g0,45,63,0|1nlji7z,45,63,0|1nlji80,47,59,1|1nxs63z,47,59,1|1nxs640,45,63,0|1o49kvz,45,63,0|1o49kw0,47,59,1|1ogi8rz,47,59,1|1ogi8s0,45,63,0|1omznjz,45,63,0|1omznk0,47,59,1|1oz8bfz,47,59,1|1oz8bg0,45,63,0|1p5pq7z,45,63,0|1p5pq80,47,59,1|1phye3z,47,59,1|1phye40,45,63,0|1posrjz,45,63,0|1posrk0,47,59,1|1q11ffz,47,59,1|1q11fg0,45,63,0|1q7iu7z,45,63,0|1q7iu80,47,59,1|1qjri3z,47,59,1|1qjri40,45,63,0|1qq8wvz,45,63,0|1qq8ww0,47,59,1|1r2hkrz,47,59,1|1r2hks0,45,63,0|1r8yzjz,45,63,0|1r8yzk0,47,59,1|1rl7nfz,47,59,1|1rl7ng0,45,63,0|1rrp27z,45,63,0|1rrp280,47,59,1|1s3xq3z,47,59,1|1s3xq40,45,63,0|1saf4vz,45,63,0|1saf4w0,47,59,1|1smnsrz,47,59,1|1smnss0,45,63,0|1sti67z,45,63,0|1sti680,47,59,1|1t5qu3z,47,59,1|1t5qu40,45,63,0|1tc88vz,45,63,0|1tc88w0,47,59,1|1togwrz,47,59,1|1togws0,45,63,0|1tuybjz,45,63,0|1tuybk0,47,59,1|1u76zfz,47,59,1|1u76zg0,45,63,0|1udoe7z,45,63,0|1udoe80,47,59,1|1upx23z,47,59,1|1upx240,45,63,0|1uwegvz,45,63,0|1uwegw0,47,59,1|1v8n4rz,47,59,1|1v8n4s0,45,63,0|1vf4jjz,45,63,0|1vf4jk0,47,59,1|1vrd7fz,47,59,1|1vrd7g0,45,63,0|NaN,45,63,0",
        "America/Indiana/Vevay|,0,115,0|-18y0m01,0,115,0|-18y0m00,45,63,0|-r0esg1,45,63,0|-r0esg0,47,59,1|-qplz81,47,59,1|-qplz80,45,63,0|-qhops1,45,63,0|-qhops0,47,59,1|-q6vwk1,47,59,1|-q6vwk0,45,63,0|-ek21s1,45,63,0|-ek21s0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cnp0k1,52,59,1|-cnp0k0,45,63,0|-86qhs1,45,63,0|-86qhs0,43,59,0|-cskk1,43,59,0|-cskk0,60,40,1|-3fm01,60,40,1|-3fm00,43,59,0|5xi3z,43,59,0|5xi40,60,40,1|fagnz,60,40,1|fago0,43,59,0|onkrz,43,59,0|onks0,60,40,1|ydhzz,60,40,1|ydi00,43,59,0|17qm3z,43,59,0|17qm40,60,40,1|1h3knz,60,40,1|1h3ko0,43,59,0|ix323z,43,59,0|ix3240,60,40,1|j7vvbz,60,40,1|j7vvc0,43,59,0|jeq8rz,43,59,0|jeq8s0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Indiana/Vincennes|,0,116,0|-18y0m01,0,116,0|-18y0m00,45,63,0|-r0esg1,45,63,0|-r0esg0,47,59,1|-qplz81,47,59,1|-qplz80,45,63,0|-qhops1,45,63,0|-qhops0,47,59,1|-q6vwk1,47,59,1|-q6vwk0,45,63,0|-ek21s1,45,63,0|-ek21s0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cnp0k1,52,59,1|-cnp0k0,45,63,0|-ccw1s1,45,63,0|-ccw1s0,47,59,1|-c4yxw1,47,59,1|-c4yxw0,45,63,0|-8pgkg1,45,63,0|-8pgkg0,47,59,1|-8hjgk1,47,59,1|-8hjgk0,45,63,0|-86qhs1,45,63,0|-86qhs0,47,59,1|-7ytdw1,47,59,1|-7ytdw0,45,63,0|-7nnm01,45,63,0|-7nnm00,47,59,1|-7g3b81,47,59,1|-7g3b80,45,63,0|-74xds1,45,63,0|-74xds0,47,59,1|-6x09w1,47,59,1|-6x09w0,45,63,0|-6m7b41,45,63,0|-6m7b40,47,59,1|-6ea781,47,59,1|-6ea780,45,63,0|-63h8g1,45,63,0|-63h8g0,47,59,1|-5vk4k1,47,59,1|-5vk4k0,45,63,0|-5kr5s1,45,63,0|-5kr5s0,47,59,1|-5cu1w1,47,59,1|-5cu1w0,45,63,0|-521341,45,63,0|-521340,47,59,1|-4sb5w1,47,59,1|-4sb5w0,45,63,0|-4iy1s1,45,63,0|-4iy1s0,47,59,1|-4bdwk1,47,59,1|-4bdwk0,45,63,0|-407z41,45,63,0|-407z40,47,59,1|-3qv0k1,47,59,1|-3qv0k0,45,63,0|-3hhwg1,45,63,0|-3hhwg0,47,59,1|-384xw1,47,59,1|-384xw0,45,63,0|-2yrts1,45,63,0|-2yrts0,43,59,0|-cskk1,43,59,0|-cskk0,60,40,1|-3fm01,60,40,1|-3fm00,43,59,0|5xi3z,43,59,0|5xi40,60,40,1|fagnz,60,40,1|fago0,43,59,0|ix323z,43,59,0|ix3240,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jeqbjz,45,63,0|jeqbk0,47,59,1|jqyzfz,47,59,1|jqyzg0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Indiana/Winamac|,0,117,0|-18y0m01,0,117,0|-18y0m00,45,63,0|-r0esg1,45,63,0|-r0esg0,47,59,1|-qplz81,47,59,1|-qplz80,45,63,0|-qhops1,45,63,0|-qhops0,47,59,1|-q6vwk1,47,59,1|-q6vwk0,45,63,0|-ek21s1,45,63,0|-ek21s0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cnp0k1,52,59,1|-cnp0k0,45,63,0|-ccw1s1,45,63,0|-ccw1s0,47,59,1|-c4yxw1,47,59,1|-c4yxw0,45,63,0|-bu5z41,45,63,0|-bu5z40,47,59,1|-bm8v81,47,59,1|-bm8v80,45,63,0|-bbfwg1,45,63,0|-bbfwg0,47,59,1|-b3isk1,47,59,1|-b3isk0,45,63,0|-aspts1,45,63,0|-aspts0,47,59,1|-akspw1,47,59,1|-akspw0,45,63,0|-a9msg1,45,63,0|-a9msg0,47,59,1|-a22n81,47,59,1|-a22n80,45,63,0|-9qwps1,45,63,0|-9qwps0,47,59,1|-9izlw1,47,59,1|-9izlw0,45,63,0|-986n41,45,63,0|-986n40,47,59,1|-909j81,47,59,1|-909j80,45,63,0|-8pgkg1,45,63,0|-8pgkg0,47,59,1|-8hjgk1,47,59,1|-8hjgk0,45,63,0|-86qhs1,45,63,0|-86qhs0,47,59,1|-7ytdw1,47,59,1|-7ytdw0,45,63,0|-7o0f41,45,63,0|-7o0f40,47,59,1|-7eahw1,47,59,1|-7eahw0,45,63,0|-74xds1,45,63,0|-74xds0,47,59,1|-6vkf81,47,59,1|-6vkf80,45,63,0|-6m7b41,45,63,0|-6m7b40,47,59,1|-6ea781,47,59,1|-6ea780,45,63,0|-63h8g1,45,63,0|-63h8g0,47,59,1|-5vk4k1,47,59,1|-5vk4k0,45,63,0|-5kr5s1,45,63,0|-5kr5s0,47,59,1|-5cu1w1,47,59,1|-5cu1w0,45,63,0|-521341,45,63,0|-521340,47,59,1|-4u3z81,47,59,1|-4u3z80,45,63,0|-4iy1s1,45,63,0|-4iy1s0,43,59,0|-cskk1,43,59,0|-cskk0,60,40,1|-3fm01,60,40,1|-3fm00,43,59,0|5xi3z,43,59,0|5xi40,60,40,1|fagnz,60,40,1|fago0,43,59,0|ix323z,43,59,0|ix3240,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jeqbjz,45,63,0|jeqbk0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Inuvik|,59,1,0|-8ve5c1,59,1,0|-8ve5c0,55,38,0|17qufz,55,38,0|17qug0,56,62,1|1h3szz,56,62,1|1h3t00,55,38,0|1qgx3z,55,38,0|1qgx40,56,62,1|1ztvnz,56,62,1|1ztvo0,55,38,0|296zrz,55,38,0|296zs0,56,62,1|2ijybz,56,62,1|2ijyc0,55,38,0|2rx2fz,55,38,0|2rx2g0,56,62,1|31a0zz,56,62,1|31a100,55,38,0|3an53z,55,38,0|3an540,56,62,1|3kd2bz,56,62,1|3kd2c0,55,38,0|3td7rz,55,38,0|3td7s0,56,62,1|4334zz,56,62,1|433500,55,38,0|4cg93z,55,38,0|4cg940,56,62,1|4lt7nz,56,62,1|4lt7o0,55,38,0|4v6brz,55,38,0|4v6bs0,46,63,1|54j7jz,46,63,1|54j7k0,44,62,0|5dwbnz,44,62,0|5dwbo0,46,63,1|5n9a7z,46,63,1|5n9a80,44,62,0|5wmebz,44,62,0|5wmec0,46,63,1|65zcvz,46,63,1|65zcw0,44,62,0|6fcgzz,44,62,0|6fch00,46,63,1|6p2e7z,46,63,1|6p2e80,44,62,0|6y2jnz,44,62,0|6y2jo0,46,63,1|77sgvz,46,63,1|77sgw0,44,62,0|7h5kzz,44,62,0|7h5l00,46,63,1|7qijjz,46,63,1|7qijk0,44,62,0|7zvnnz,44,62,0|7zvno0,46,63,1|898m7z,46,63,1|898m80,44,62,0|8ilqbz,44,62,0|8ilqc0,46,63,1|8ryovz,46,63,1|8ryow0,44,62,0|908wzz,44,62,0|908x00,46,63,1|9aorjz,46,63,1|9aork0,44,62,0|9iyznz,44,62,0|9iyzo0,46,63,1|9trsvz,46,63,1|9trsw0,44,62,0|a1p2bz,44,62,0|a1p2c0,46,63,1|achvjz,46,63,1|achvk0,44,62,0|akf4zz,44,62,0|akf500,46,63,1|av7y7z,46,63,1|av7y80,44,62,0|b3i6bz,44,62,0|b3i6c0,46,63,1|bdy0vz,46,63,1|bdy0w0,44,62,0|bm88zz,44,62,0|bm8900,46,63,1|bwo3jz,46,63,1|bwo3k0,44,62,0|c4ybnz,44,62,0|c4ybo0,46,63,1|cfr4vz,46,63,1|cfr4w0,44,62,0|cnoebz,44,62,0|cnoec0,46,63,1|cyh7jz,46,63,1|cyh7k0,44,62,0|d6egzz,44,62,0|d6eh00,46,63,1|dh7a7z,46,63,1|dh7a80,44,62,0|dphibz,44,62,0|dphic0,46,63,1|dzxcvz,46,63,1|dzxcw0,44,62,0|e87kzz,44,62,0|e87l00,46,63,1|einfjz,46,63,1|einfk0,44,62,0|eqxnnz,44,62,0|eqxno0,46,63,1|f1di7z,46,63,1|f1di80,44,62,0|f9nqbz,44,62,0|f9nqc0,46,63,1|fkgjjz,46,63,1|fkgjk0,44,62,0|fsdszz,44,62,0|fsdt00,46,63,1|g36m7z,46,63,1|g36m80,44,62,0|gb3vnz,44,62,0|gb3vo0,46,63,1|glwovz,46,63,1|glwow0,44,62,0|gu6wzz,44,62,0|gu6x00,46,63,1|h4mrjz,46,63,1|h4mrk0,44,62,0|hcwznz,44,62,0|hcwzo0,46,63,1|hncu7z,46,63,1|hncu80,44,62,0|hvn2bz,44,62,0|hvn2c0,46,63,1|i6fvjz,46,63,1|i6fvk0,44,62,0|ied4zz,44,62,0|ied500,46,63,1|ip5y7z,46,63,1|ip5y80,44,62,0|ix37nz,44,62,0|ix37o0,46,63,1|j7w0vz,46,63,1|j7w0w0,44,62,0|jeqebz,44,62,0|jeqec0,46,63,1|jqz27z,46,63,1|jqz280,44,62,0|jxggzz,44,62,0|jxgh00,46,63,1|k9p4vz,46,63,1|k9p4w0,44,62,0|kg6jnz,44,62,0|kg6jo0,46,63,1|ksf7jz,46,63,1|ksf7k0,44,62,0|kz9kzz,44,62,0|kz9l00,46,63,1|lbi8vz,46,63,1|lbi8w0,44,62,0|lhznnz,44,62,0|lhzno0,46,63,1|lu8bjz,46,63,1|lu8bk0,44,62,0|m0pqbz,44,62,0|m0pqc0,46,63,1|mcye7z,46,63,1|mcye80,44,62,0|mjfszz,44,62,0|mjft00,46,63,1|mvogvz,46,63,1|mvogw0,44,62,0|n25vnz,44,62,0|n25vo0,46,63,1|neejjz,46,63,1|neejk0,44,62,0|nkvybz,44,62,0|nkvyc0,46,63,1|nx4m7z,46,63,1|nx4m80,44,62,0|o3yznz,44,62,0|o3yzo0,46,63,1|og7njz,46,63,1|og7nk0,44,62,0|omp2bz,44,62,0|omp2c0,46,63,1|oyxq7z,46,63,1|oyxq80,44,62,0|p5f4zz,44,62,0|p5f500,46,63,1|phnsvz,46,63,1|phnsw0,44,62,0|po57nz,44,62,0|po57o0,46,63,1|q0dvjz,46,63,1|q0dvk0,44,62,0|q6vabz,44,62,0|q6vac0,46,63,1|qj3y7z,46,63,1|qj3y80,44,62,0|qpybnz,44,62,0|qpybo0,46,63,1|r26zjz,46,63,1|r26zk0,44,62,0|r8oebz,44,62,0|r8oec0,46,63,1|rkx27z,46,63,1|rkx280,44,62,0|rregzz,44,62,0|rreh00,46,63,1|s3n4vz,46,63,1|s3n4w0,44,62,0|sa4jnz,44,62,0|sa4jo0,46,63,1|smd7jz,46,63,1|smd7k0,44,62,0|ssumbz,44,62,0|ssumc0,46,63,1|t53a7z,46,63,1|t53a80,44,62,0|tbkozz,44,62,0|tbkp00,46,63,1|tntcvz,46,63,1|tntcw0,44,62,0|tunqbz,44,62,0|tunqc0,46,63,1|u6we7z,46,63,1|u6we80,44,62,0|uddszz,44,62,0|uddt00,46,63,1|upmgvz,46,63,1|upmgw0,44,62,0|uw3vnz,44,62,0|uw3vo0,46,63,1|v8cjjz,46,63,1|v8cjk0,44,62,0|vetybz,44,62,0|vetyc0,46,63,1|vr2m7z,46,63,1|vr2m80,44,62,0|vxk0zz,44,62,0|vxk100,46,63,1|w9sovz,46,63,1|w9sow0,44,62,0|wgn2bz,44,62,0|wgn2c0,46,63,1|wsvq7z,46,63,1|wsvq80,44,62,0|wzd4zz,44,62,0|wzd500,46,63,1|xblsvz,46,63,1|xblsw0,44,62,0|xi37nz,44,62,0|xi37o0,46,63,1|xubvjz,46,63,1|xubvk0,44,62,0|y0tabz,44,62,0|y0tac0,46,63,1|yd1y7z,46,63,1|yd1y80,44,62,0|yjjczz,44,62,0|yjjd00,46,63,1|yvs0vz,46,63,1|yvs0w0,44,62,0|z29fnz,44,62,0|z29fo0,46,63,1|zei3jz,46,63,1|zei3k0,44,62,0|zlcgzz,44,62,0|zlch00,46,63,1|zxl4vz,46,63,1|zxl4w0,44,62,0|1042jnz,44,62,0|1042jo0,46,63,1|10gb7jz,46,63,1|10gb7k0,44,62,0|10msmbz,44,62,0|10msmc0,46,63,1|10z1a7z,46,63,1|10z1a80,44,62,0|115iozz,44,62,0|115ip00,46,63,1|11hrcvz,46,63,1|11hrcw0,44,62,0|11o8rnz,44,62,0|11o8ro0,46,63,1|120hfjz,46,63,1|120hfk0,44,62,0|126yubz,44,62,0|126yuc0,46,63,1|12j7i7z,46,63,1|12j7i80,44,62,0|12q1vnz,44,62,0|12q1vo0,46,63,1|132ajjz,46,63,1|132ajk0,44,62,0|138rybz,44,62,0|138ryc0,46,63,1|13l0m7z,46,63,1|13l0m80,44,62,0|13ri0zz,44,62,0|13ri100,46,63,1|143qovz,46,63,1|143qow0,44,62,0|14a83nz,44,62,0|14a83o0,46,63,1|14mgrjz,46,63,1|14mgrk0,44,62,0|14sy6bz,44,62,0|14sy6c0,46,63,1|1556u7z,46,63,1|1556u80,44,62,0|15c17nz,44,62,0|15c17o0,46,63,1|15o9vjz,46,63,1|15o9vk0,44,62,0|15urabz,44,62,0|15urac0,46,63,1|166zy7z,46,63,1|166zy80,44,62,0|16dhczz,44,62,0|16dhd00,46,63,1|16pq0vz,46,63,1|16pq0w0,44,62,0|16w7fnz,44,62,0|16w7fo0,46,63,1|178g3jz,46,63,1|178g3k0,44,62,0|17exibz,44,62,0|17exic0,46,63,1|17r667z,46,63,1|17r6680,44,62,0|17xnkzz,44,62,0|17xnl00,46,63,1|189w8vz,46,63,1|189w8w0,44,62,0|18gqmbz,44,62,0|18gqmc0,46,63,1|18sza7z,46,63,1|18sza80,44,62,0|18zgozz,44,62,0|18zgp00,46,63,1|19bpcvz,46,63,1|19bpcw0,44,62,0|19i6rnz,44,62,0|19i6ro0,46,63,1|19uffjz,46,63,1|19uffk0,44,62,0|1a0wubz,44,62,0|1a0wuc0,46,63,1|1ad5i7z,46,63,1|1ad5i80,44,62,0|1ajmwzz,44,62,0|1ajmx00,46,63,1|1avvkvz,46,63,1|1avvkw0,44,62,0|1b2pybz,44,62,0|1b2pyc0,46,63,1|1beym7z,46,63,1|1beym80,44,62,0|1blg0zz,44,62,0|1blg100,46,63,1|1bxoovz,46,63,1|1bxoow0,44,62,0|1c463nz,44,62,0|1c463o0,46,63,1|1cgerjz,46,63,1|1cgerk0,44,62,0|1cmw6bz,44,62,0|1cmw6c0,46,63,1|1cz4u7z,46,63,1|1cz4u80,44,62,0|1d5m8zz,44,62,0|1d5m900,46,63,1|1dhuwvz,46,63,1|1dhuww0,44,62,0|1docbnz,44,62,0|1docbo0,46,63,1|1e0kzjz,46,63,1|1e0kzk0,44,62,0|1e7fczz,44,62,0|1e7fd00,46,63,1|1ejo0vz,46,63,1|1ejo0w0,44,62,0|1eq5fnz,44,62,0|1eq5fo0,46,63,1|1f2e3jz,46,63,1|1f2e3k0,44,62,0|1f8vibz,44,62,0|1f8vic0,46,63,1|1fl467z,46,63,1|1fl4680,44,62,0|1frlkzz,44,62,0|1frll00,46,63,1|1g3u8vz,46,63,1|1g3u8w0,44,62,0|1gabnnz,44,62,0|1gabno0,46,63,1|1gmkbjz,46,63,1|1gmkbk0,44,62,0|1gt1qbz,44,62,0|1gt1qc0,46,63,1|1h5ae7z,46,63,1|1h5ae80,44,62,0|1hc4rnz,44,62,0|1hc4ro0,46,63,1|1hodfjz,46,63,1|1hodfk0,44,62,0|1huuubz,44,62,0|1huuuc0,46,63,1|1i73i7z,46,63,1|1i73i80,44,62,0|1idkwzz,44,62,0|1idkx00,46,63,1|1iptkvz,46,63,1|1iptkw0,44,62,0|1iwaznz,44,62,0|1iwazo0,46,63,1|1j8jnjz,46,63,1|1j8jnk0,44,62,0|1jf12bz,44,62,0|1jf12c0,46,63,1|1jr9q7z,46,63,1|1jr9q80,44,62,0|1jy43nz,44,62,0|1jy43o0,46,63,1|1kacrjz,46,63,1|1kacrk0,44,62,0|1kgu6bz,44,62,0|1kgu6c0,46,63,1|1kt2u7z,46,63,1|1kt2u80,44,62,0|1kzk8zz,44,62,0|1kzk900,46,63,1|1lbswvz,46,63,1|1lbsww0,44,62,0|1liabnz,44,62,0|1liabo0,46,63,1|1luizjz,46,63,1|1luizk0,44,62,0|1m10ebz,44,62,0|1m10ec0,46,63,1|1md927z,46,63,1|1md9280,44,62,0|1mjqgzz,44,62,0|1mjqh00,46,63,1|1mvz4vz,46,63,1|1mvz4w0,44,62,0|1n2tibz,44,62,0|1n2tic0,46,63,1|1nf267z,46,63,1|1nf2680,44,62,0|1nljkzz,44,62,0|1nljl00,46,63,1|1nxs8vz,46,63,1|1nxs8w0,44,62,0|1o49nnz,44,62,0|1o49no0,46,63,1|1ogibjz,46,63,1|1ogibk0,44,62,0|1omzqbz,44,62,0|1omzqc0,46,63,1|1oz8e7z,46,63,1|1oz8e80,44,62,0|1p5pszz,44,62,0|1p5pt00,46,63,1|1phygvz,46,63,1|1phygw0,44,62,0|1posubz,44,62,0|1posuc0,46,63,1|1q11i7z,46,63,1|1q11i80,44,62,0|1q7iwzz,44,62,0|1q7ix00,46,63,1|1qjrkvz,46,63,1|1qjrkw0,44,62,0|1qq8znz,44,62,0|1qq8zo0,46,63,1|1r2hnjz,46,63,1|1r2hnk0,44,62,0|1r8z2bz,44,62,0|1r8z2c0,46,63,1|1rl7q7z,46,63,1|1rl7q80,44,62,0|1rrp4zz,44,62,0|1rrp500,46,63,1|1s3xsvz,46,63,1|1s3xsw0,44,62,0|1saf7nz,44,62,0|1saf7o0,46,63,1|1smnvjz,46,63,1|1smnvk0,44,62,0|1sti8zz,44,62,0|1sti900,46,63,1|1t5qwvz,46,63,1|1t5qww0,44,62,0|1tc8bnz,44,62,0|1tc8bo0,46,63,1|1togzjz,46,63,1|1togzk0,44,62,0|1tuyebz,44,62,0|1tuyec0,46,63,1|1u7727z,46,63,1|1u77280,44,62,0|1udogzz,44,62,0|1udoh00,46,63,1|1upx4vz,46,63,1|1upx4w0,44,62,0|1uwejnz,44,62,0|1uwejo0,46,63,1|1v8n7jz,46,63,1|1v8n7k0,44,62,0|1vf4mbz,44,62,0|1vf4mc0,46,63,1|1vrda7z,46,63,1|1vrda80,44,62,0|NaN,44,62,0",
        "America/Iqaluit|,59,1,0|-eb6ao1,59,1,0|-eb6ao0,69,40,1|-cq2tg1,69,40,1|-cq2tg0,70,40,1|-cnp3c1,70,40,1|-cnp3c0,43,59,0|17qm3z,43,59,0|17qm40,60,40,1|1h3knz,60,40,1|1h3ko0,43,59,0|1qgorz,43,59,0|1qgos0,60,40,1|1ztnbz,60,40,1|1ztnc0,43,59,0|296rfz,43,59,0|296rg0,60,40,1|2ijpzz,60,40,1|2ijq00,43,59,0|2rwu3z,43,59,0|2rwu40,60,40,1|319snz,60,40,1|319so0,43,59,0|3amwrz,43,59,0|3amws0,60,40,1|3kctzz,60,40,1|3kcu00,43,59,0|3tczfz,43,59,0|3tczg0,60,40,1|432wnz,60,40,1|432wo0,43,59,0|4cg0rz,43,59,0|4cg0s0,60,40,1|4lszbz,60,40,1|4lszc0,43,59,0|4v63fz,43,59,0|4v63g0,60,40,1|54j1zz,60,40,1|54j200,43,59,0|5dw63z,43,59,0|5dw640,60,40,1|5n94nz,60,40,1|5n94o0,43,59,0|5wm8rz,43,59,0|5wm8s0,60,40,1|65z7bz,60,40,1|65z7c0,43,59,0|6fcbfz,43,59,0|6fcbg0,60,40,1|6p28nz,60,40,1|6p28o0,43,59,0|6y2e3z,43,59,0|6y2e40,60,40,1|77sbbz,60,40,1|77sbc0,43,59,0|7h5ffz,43,59,0|7h5fg0,60,40,1|7qidzz,60,40,1|7qie00,43,59,0|7zvi3z,43,59,0|7zvi40,60,40,1|898gnz,60,40,1|898go0,43,59,0|8ilkrz,43,59,0|8ilks0,60,40,1|8ryjbz,60,40,1|8ryjc0,43,59,0|908rfz,43,59,0|908rg0,60,40,1|9aolzz,60,40,1|9aom00,43,59,0|9iyu3z,43,59,0|9iyu40,60,40,1|9trnbz,60,40,1|9trnc0,43,59,0|a1owrz,43,59,0|a1ows0,60,40,1|achpzz,60,40,1|achq00,43,59,0|akezfz,43,59,0|akezg0,60,40,1|av7snz,60,40,1|av7so0,43,59,0|b3i0rz,43,59,0|b3i0s0,60,40,1|bdxvbz,60,40,1|bdxvc0,43,59,0|bm83fz,43,59,0|bm83g0,60,40,1|bwnxzz,60,40,1|bwny00,43,59,0|c4y63z,43,59,0|c4y640,60,40,1|cfqzbz,60,40,1|cfqzc0,43,59,0|cno8rz,43,59,0|cno8s0,60,40,1|cyh1zz,60,40,1|cyh200,43,59,0|d6ebfz,43,59,0|d6ebg0,60,40,1|dh74nz,60,40,1|dh74o0,43,59,0|dphcrz,43,59,0|dphcs0,60,40,1|dzx7bz,60,40,1|dzx7c0,43,59,0|e87ffz,43,59,0|e87fg0,60,40,1|ein9zz,60,40,1|eina00,43,59,0|eqxi3z,43,59,0|eqxi40,60,40,1|f1dcnz,60,40,1|f1dco0,43,59,0|f9nkrz,43,59,0|f9nks0,60,40,1|fkgdzz,60,40,1|fkge00,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36jfz,47,59,1|g36jg0,43,59,0|gb3q3z,43,59,0|gb3q40,60,40,1|glwjbz,60,40,1|glwjc0,43,59,0|gu6rfz,43,59,0|gu6rg0,60,40,1|h4mlzz,60,40,1|h4mm00,43,59,0|hcwu3z,43,59,0|hcwu40,60,40,1|hnconz,60,40,1|hncoo0,43,59,0|hvmwrz,43,59,0|hvmws0,60,40,1|i6fpzz,60,40,1|i6fq00,43,59,0|ieczfz,43,59,0|ieczg0,60,40,1|ip5snz,60,40,1|ip5so0,43,59,0|ix323z,43,59,0|ix3240,60,40,1|j7vvbz,60,40,1|j7vvc0,43,59,0|jeq8rz,43,59,0|jeq8s0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Jamaica|,0,100,0|-15r0v43,0,100,0|-15r0v42,73,100,0|-u85og3,73,100,0|-u85og2,43,59,0|23fcrz,43,59,0|23fcs0,60,40,1|2ijpzz,60,40,1|2ijq00,43,59,0|2oo63z,43,59,0|2oo640,60,40,1|319snz,60,40,1|319so0,43,59,0|3amwrz,43,59,0|3amws0,60,40,1|3kctzz,60,40,1|3kcu00,43,59,0|3tczfz,43,59,0|3tczg0,60,40,1|432wnz,60,40,1|432wo0,43,59,0|4cg0rz,43,59,0|4cg0s0,60,40,1|4lszbz,60,40,1|4lszc0,43,59,0|4v63fz,43,59,0|4v63g0,60,40,1|54j1zz,60,40,1|54j200,43,59,0|5dw63z,43,59,0|5dw640,60,40,1|5n94nz,60,40,1|5n94o0,43,59,0|5wm8rz,43,59,0|5wm8s0,60,40,1|65z7bz,60,40,1|65z7c0,43,59,0|6fcbfz,43,59,0|6fcbg0,60,40,1|6p28nz,60,40,1|6p28o0,43,59,0|6y2e3z,43,59,0|6y2e40,60,40,1|77sbbz,60,40,1|77sbc0,43,59,0|NaN,43,59,0",
        "America/Juneau|,0,118,0|-1hc7qk0,0,118,0|-1hc7qjz,0,119,0|-1078wfw,0,119,0|-1078wfv,55,38,0|-ek1w81,55,38,0|-ek1w80,67,62,1|-cq2tg1,67,62,1|-cq2tg0,68,62,1|-cnov01,68,62,1|-cnov00,55,38,0|-csc81,55,38,0|-csc80,56,62,1|-3fdo1,56,62,1|-3fdo0,55,38,0|5xqfz,55,38,0|5xqg0,56,62,1|faozz,56,62,1|fap00,55,38,0|ont3z,55,38,0|ont40,56,62,1|ydqbz,56,62,1|ydqc0,55,38,0|17qufz,55,38,0|17qug0,56,62,1|1h3szz,56,62,1|1h3t00,55,38,0|1qgx3z,55,38,0|1qgx40,56,62,1|1ztvnz,56,62,1|1ztvo0,55,38,0|23fl3z,55,38,0|23fl40,56,62,1|2ijybz,56,62,1|2ijyc0,55,38,0|2ooefz,55,38,0|2ooeg0,56,62,1|31a0zz,56,62,1|31a100,55,38,0|3an53z,55,38,0|3an540,56,62,1|3kd2bz,56,62,1|3kd2c0,55,38,0|3td7rz,55,38,0|3td7s0,56,62,1|4334zz,56,62,1|433500,55,38,0|4cg93z,55,38,0|4cg940,56,62,1|4lt7nz,56,62,1|4lt7o0,55,38,0|4v6brz,55,38,0|4v6bs0,56,62,1|54jabz,56,62,1|54jac0,55,38,0|5dwefz,55,38,0|5dweg0,63,38,1|5n9frz,63,38,1|5n9fs0,55,38,0|5wmh3z,55,38,0|5wmh40,56,62,1|65zfnz,56,62,1|65zfo0,55,38,0|6fcjrz,55,38,0|6fcjs0,56,62,1|6p2gzz,56,62,1|6p2h00,55,38,0|6y2mfz,55,38,0|6y2mg0,56,62,1|77sjnz,56,62,1|77sjo0,35,35,0|79dybz,35,35,0|79dyc0,36,35,0|7h5qjz,36,35,0|7h5qk0,37,38,1|7qip3z,37,38,1|7qip40,36,35,0|7zvt7z,36,35,0|7zvt80,37,38,1|898rrz,37,38,1|898rs0,36,35,0|8ilvvz,36,35,0|8ilvw0,37,38,1|8ryufz,37,38,1|8ryug0,36,35,0|9092jz,36,35,0|9092k0,37,38,1|9aox3z,37,38,1|9aox40,36,35,0|9iz57z,36,35,0|9iz580,37,38,1|9tryfz,37,38,1|9tryg0,36,35,0|a1p7vz,36,35,0|a1p7w0,37,38,1|aci13z,37,38,1|aci140,36,35,0|akfajz,36,35,0|akfak0,37,38,1|av83rz,37,38,1|av83s0,36,35,0|b3ibvz,36,35,0|b3ibw0,37,38,1|bdy6fz,37,38,1|bdy6g0,36,35,0|bm8ejz,36,35,0|bm8ek0,37,38,1|bwo93z,37,38,1|bwo940,36,35,0|c4yh7z,36,35,0|c4yh80,37,38,1|cfrafz,37,38,1|cfrag0,36,35,0|cnojvz,36,35,0|cnojw0,37,38,1|cyhd3z,37,38,1|cyhd40,36,35,0|d6emjz,36,35,0|d6emk0,37,38,1|dh7frz,37,38,1|dh7fs0,36,35,0|dphnvz,36,35,0|dphnw0,37,38,1|dzxifz,37,38,1|dzxig0,36,35,0|e87qjz,36,35,0|e87qk0,37,38,1|einl3z,37,38,1|einl40,36,35,0|eqxt7z,36,35,0|eqxt80,37,38,1|f1dnrz,37,38,1|f1dns0,36,35,0|f9nvvz,36,35,0|f9nvw0,37,38,1|fkgp3z,37,38,1|fkgp40,36,35,0|fsdyjz,36,35,0|fsdyk0,37,38,1|g36rrz,37,38,1|g36rs0,36,35,0|gb417z,36,35,0|gb4180,37,38,1|glwufz,37,38,1|glwug0,36,35,0|gu72jz,36,35,0|gu72k0,37,38,1|h4mx3z,37,38,1|h4mx40,36,35,0|hcx57z,36,35,0|hcx580,37,38,1|hnczrz,37,38,1|hnczs0,36,35,0|hvn7vz,36,35,0|hvn7w0,37,38,1|i6g13z,37,38,1|i6g140,36,35,0|iedajz,36,35,0|iedak0,37,38,1|ip63rz,37,38,1|ip63s0,36,35,0|ix3d7z,36,35,0|ix3d80,37,38,1|j7w6fz,37,38,1|j7w6g0,36,35,0|jeqjvz,36,35,0|jeqjw0,37,38,1|jqz7rz,37,38,1|jqz7s0,36,35,0|jxgmjz,36,35,0|jxgmk0,37,38,1|k9pafz,37,38,1|k9pag0,36,35,0|kg6p7z,36,35,0|kg6p80,37,38,1|ksfd3z,37,38,1|ksfd40,36,35,0|kz9qjz,36,35,0|kz9qk0,37,38,1|lbiefz,37,38,1|lbieg0,36,35,0|lhzt7z,36,35,0|lhzt80,37,38,1|lu8h3z,37,38,1|lu8h40,36,35,0|m0pvvz,36,35,0|m0pvw0,37,38,1|mcyjrz,37,38,1|mcyjs0,36,35,0|mjfyjz,36,35,0|mjfyk0,37,38,1|mvomfz,37,38,1|mvomg0,36,35,0|n2617z,36,35,0|n26180,37,38,1|neep3z,37,38,1|neep40,36,35,0|nkw3vz,36,35,0|nkw3w0,37,38,1|nx4rrz,37,38,1|nx4rs0,36,35,0|o3z57z,36,35,0|o3z580,37,38,1|og7t3z,37,38,1|og7t40,36,35,0|omp7vz,36,35,0|omp7w0,37,38,1|oyxvrz,37,38,1|oyxvs0,36,35,0|p5fajz,36,35,0|p5fak0,37,38,1|phnyfz,37,38,1|phnyg0,36,35,0|po5d7z,36,35,0|po5d80,37,38,1|q0e13z,37,38,1|q0e140,36,35,0|q6vfvz,36,35,0|q6vfw0,37,38,1|qj43rz,37,38,1|qj43s0,36,35,0|qpyh7z,36,35,0|qpyh80,37,38,1|r2753z,37,38,1|r27540,36,35,0|r8ojvz,36,35,0|r8ojw0,37,38,1|rkx7rz,37,38,1|rkx7s0,36,35,0|rremjz,36,35,0|rremk0,37,38,1|s3nafz,37,38,1|s3nag0,36,35,0|sa4p7z,36,35,0|sa4p80,37,38,1|smdd3z,37,38,1|smdd40,36,35,0|ssurvz,36,35,0|ssurw0,37,38,1|t53frz,37,38,1|t53fs0,36,35,0|tbkujz,36,35,0|tbkuk0,37,38,1|tntifz,37,38,1|tntig0,36,35,0|tunvvz,36,35,0|tunvw0,37,38,1|u6wjrz,37,38,1|u6wjs0,36,35,0|uddyjz,36,35,0|uddyk0,37,38,1|upmmfz,37,38,1|upmmg0,36,35,0|uw417z,36,35,0|uw4180,37,38,1|v8cp3z,37,38,1|v8cp40,36,35,0|veu3vz,36,35,0|veu3w0,37,38,1|vr2rrz,37,38,1|vr2rs0,36,35,0|vxk6jz,36,35,0|vxk6k0,37,38,1|w9sufz,37,38,1|w9sug0,36,35,0|wgn7vz,36,35,0|wgn7w0,37,38,1|wsvvrz,37,38,1|wsvvs0,36,35,0|wzdajz,36,35,0|wzdak0,37,38,1|xblyfz,37,38,1|xblyg0,36,35,0|xi3d7z,36,35,0|xi3d80,37,38,1|xuc13z,37,38,1|xuc140,36,35,0|y0tfvz,36,35,0|y0tfw0,37,38,1|yd23rz,37,38,1|yd23s0,36,35,0|yjjijz,36,35,0|yjjik0,37,38,1|yvs6fz,37,38,1|yvs6g0,36,35,0|z29l7z,36,35,0|z29l80,37,38,1|zei93z,37,38,1|zei940,36,35,0|zlcmjz,36,35,0|zlcmk0,37,38,1|zxlafz,37,38,1|zxlag0,36,35,0|1042p7z,36,35,0|1042p80,37,38,1|10gbd3z,37,38,1|10gbd40,36,35,0|10msrvz,36,35,0|10msrw0,37,38,1|10z1frz,37,38,1|10z1fs0,36,35,0|115iujz,36,35,0|115iuk0,37,38,1|11hrifz,37,38,1|11hrig0,36,35,0|11o8x7z,36,35,0|11o8x80,37,38,1|120hl3z,37,38,1|120hl40,36,35,0|126yzvz,36,35,0|126yzw0,37,38,1|12j7nrz,37,38,1|12j7ns0,36,35,0|12q217z,36,35,0|12q2180,37,38,1|132ap3z,37,38,1|132ap40,36,35,0|138s3vz,36,35,0|138s3w0,37,38,1|13l0rrz,37,38,1|13l0rs0,36,35,0|13ri6jz,36,35,0|13ri6k0,37,38,1|143qufz,37,38,1|143qug0,36,35,0|14a897z,36,35,0|14a8980,37,38,1|14mgx3z,37,38,1|14mgx40,36,35,0|14sybvz,36,35,0|14sybw0,37,38,1|1556zrz,37,38,1|1556zs0,36,35,0|15c1d7z,36,35,0|15c1d80,37,38,1|15oa13z,37,38,1|15oa140,36,35,0|15urfvz,36,35,0|15urfw0,37,38,1|16703rz,37,38,1|16703s0,36,35,0|16dhijz,36,35,0|16dhik0,37,38,1|16pq6fz,37,38,1|16pq6g0,36,35,0|16w7l7z,36,35,0|16w7l80,37,38,1|178g93z,37,38,1|178g940,36,35,0|17exnvz,36,35,0|17exnw0,37,38,1|17r6brz,37,38,1|17r6bs0,36,35,0|17xnqjz,36,35,0|17xnqk0,37,38,1|189wefz,37,38,1|189weg0,36,35,0|18gqrvz,36,35,0|18gqrw0,37,38,1|18szfrz,37,38,1|18szfs0,36,35,0|18zgujz,36,35,0|18zguk0,37,38,1|19bpifz,37,38,1|19bpig0,36,35,0|19i6x7z,36,35,0|19i6x80,37,38,1|19ufl3z,37,38,1|19ufl40,36,35,0|1a0wzvz,36,35,0|1a0wzw0,37,38,1|1ad5nrz,37,38,1|1ad5ns0,36,35,0|1ajn2jz,36,35,0|1ajn2k0,37,38,1|1avvqfz,37,38,1|1avvqg0,36,35,0|1b2q3vz,36,35,0|1b2q3w0,37,38,1|1beyrrz,37,38,1|1beyrs0,36,35,0|1blg6jz,36,35,0|1blg6k0,37,38,1|1bxoufz,37,38,1|1bxoug0,36,35,0|1c4697z,36,35,0|1c46980,37,38,1|1cgex3z,37,38,1|1cgex40,36,35,0|1cmwbvz,36,35,0|1cmwbw0,37,38,1|1cz4zrz,37,38,1|1cz4zs0,36,35,0|1d5mejz,36,35,0|1d5mek0,37,38,1|1dhv2fz,37,38,1|1dhv2g0,36,35,0|1doch7z,36,35,0|1doch80,37,38,1|1e0l53z,37,38,1|1e0l540,36,35,0|1e7fijz,36,35,0|1e7fik0,37,38,1|1ejo6fz,37,38,1|1ejo6g0,36,35,0|1eq5l7z,36,35,0|1eq5l80,37,38,1|1f2e93z,37,38,1|1f2e940,36,35,0|1f8vnvz,36,35,0|1f8vnw0,37,38,1|1fl4brz,37,38,1|1fl4bs0,36,35,0|1frlqjz,36,35,0|1frlqk0,37,38,1|1g3uefz,37,38,1|1g3ueg0,36,35,0|1gabt7z,36,35,0|1gabt80,37,38,1|1gmkh3z,37,38,1|1gmkh40,36,35,0|1gt1vvz,36,35,0|1gt1vw0,37,38,1|1h5ajrz,37,38,1|1h5ajs0,36,35,0|1hc4x7z,36,35,0|1hc4x80,37,38,1|1hodl3z,37,38,1|1hodl40,36,35,0|1huuzvz,36,35,0|1huuzw0,37,38,1|1i73nrz,37,38,1|1i73ns0,36,35,0|1idl2jz,36,35,0|1idl2k0,37,38,1|1iptqfz,37,38,1|1iptqg0,36,35,0|1iwb57z,36,35,0|1iwb580,37,38,1|1j8jt3z,37,38,1|1j8jt40,36,35,0|1jf17vz,36,35,0|1jf17w0,37,38,1|1jr9vrz,37,38,1|1jr9vs0,36,35,0|1jy497z,36,35,0|1jy4980,37,38,1|1kacx3z,37,38,1|1kacx40,36,35,0|1kgubvz,36,35,0|1kgubw0,37,38,1|1kt2zrz,37,38,1|1kt2zs0,36,35,0|1kzkejz,36,35,0|1kzkek0,37,38,1|1lbt2fz,37,38,1|1lbt2g0,36,35,0|1liah7z,36,35,0|1liah80,37,38,1|1luj53z,37,38,1|1luj540,36,35,0|1m10jvz,36,35,0|1m10jw0,37,38,1|1md97rz,37,38,1|1md97s0,36,35,0|1mjqmjz,36,35,0|1mjqmk0,37,38,1|1mvzafz,37,38,1|1mvzag0,36,35,0|1n2tnvz,36,35,0|1n2tnw0,37,38,1|1nf2brz,37,38,1|1nf2bs0,36,35,0|1nljqjz,36,35,0|1nljqk0,37,38,1|1nxsefz,37,38,1|1nxseg0,36,35,0|1o49t7z,36,35,0|1o49t80,37,38,1|1ogih3z,37,38,1|1ogih40,36,35,0|1omzvvz,36,35,0|1omzvw0,37,38,1|1oz8jrz,37,38,1|1oz8js0,36,35,0|1p5pyjz,36,35,0|1p5pyk0,37,38,1|1phymfz,37,38,1|1phymg0,36,35,0|1poszvz,36,35,0|1poszw0,37,38,1|1q11nrz,37,38,1|1q11ns0,36,35,0|1q7j2jz,36,35,0|1q7j2k0,37,38,1|1qjrqfz,37,38,1|1qjrqg0,36,35,0|1qq957z,36,35,0|1qq9580,37,38,1|1r2ht3z,37,38,1|1r2ht40,36,35,0|1r8z7vz,36,35,0|1r8z7w0,37,38,1|1rl7vrz,37,38,1|1rl7vs0,36,35,0|1rrpajz,36,35,0|1rrpak0,37,38,1|1s3xyfz,37,38,1|1s3xyg0,36,35,0|1safd7z,36,35,0|1safd80,37,38,1|1smo13z,37,38,1|1smo140,36,35,0|1stiejz,36,35,0|1stiek0,37,38,1|1t5r2fz,37,38,1|1t5r2g0,36,35,0|1tc8h7z,36,35,0|1tc8h80,37,38,1|1toh53z,37,38,1|1toh540,36,35,0|1tuyjvz,36,35,0|1tuyjw0,37,38,1|1u777rz,37,38,1|1u777s0,36,35,0|1udomjz,36,35,0|1udomk0,37,38,1|1upxafz,37,38,1|1upxag0,36,35,0|1uwep7z,36,35,0|1uwep80,37,38,1|1v8nd3z,37,38,1|1v8nd40,36,35,0|1vf4rvz,36,35,0|1vf4rw0,37,38,1|1vrdfrz,37,38,1|1vrdfs0,36,35,0|NaN,36,35,0",
        "America/Kentucky/Louisville|,0,120,0|-18y0m01,0,120,0|-18y0m00,45,63,0|-r0esg1,45,63,0|-r0esg0,47,59,1|-qplz81,47,59,1|-qplz80,45,63,0|-qhops1,45,63,0|-qhops0,47,59,1|-q6vwk1,47,59,1|-q6vwk0,45,63,0|-pefr41,45,63,0|-pefr40,47,59,1|-p841w1,47,59,1|-p841w0,45,63,0|-eyvds1,45,63,0|-eyvds0,47,59,1|-eqy9w1,47,59,1|-eqy9w0,45,63,0|-ek21s1,45,63,0|-ek21s0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cnp0k1,52,59,1|-cnp0k0,45,63,0|-ccw7ad,45,63,0|-ccw7ac,47,59,1|-cb3b81,47,59,1|-cb3b80,45,63,0|-a9msg1,45,63,0|-a9msg0,47,59,1|-a22n81,47,59,1|-a22n80,45,63,0|-9qwps1,45,63,0|-9qwps0,47,59,1|-9izlw1,47,59,1|-9izlw0,45,63,0|-986n41,45,63,0|-986n40,47,59,1|-909j81,47,59,1|-909j80,45,63,0|-8pgkg1,45,63,0|-8pgkg0,47,59,1|-8hjgk1,47,59,1|-8hjgk0,45,63,0|-86qhs1,45,63,0|-86qhs0,47,59,1|-7ytdw1,47,59,1|-7ytdw0,45,63,0|-7o0f41,45,63,0|-7o0f40,47,59,1|-7g3b81,47,59,1|-7g3b80,45,63,0|-74xds1,45,63,0|-74xds0,47,59,1|-6vkf81,47,59,1|-6vkf80,45,63,0|-6m7b41,45,63,0|-6m7b40,47,59,1|-6cuck1,47,59,1|-6cuck0,45,63,0|-63h8g1,45,63,0|-63h8g0,47,59,1|-5u49w1,47,59,1|-5u49w0,45,63,0|-5kr5s1,45,63,0|-5kr5s0,47,59,1|-5be781,47,59,1|-5be780,45,63,0|-521341,45,63,0|-521340,47,59,1|-4sb5w1,47,59,1|-4sb5w0,45,63,0|-4iy1s1,45,63,0|-4iy1s0,47,59,1|-4emkk1,47,59,1|-4emkk0,43,59,0|-vin81,43,59,0|-vin80,60,40,1|-m5oo1,60,40,1|-m5oo0,43,59,0|-cskk1,43,59,0|-cskk0,60,40,1|-3fm01,60,40,1|-3fm00,43,59,0|5xi3z,43,59,0|5xi40,60,40,1|fagnz,60,40,1|fago0,43,59,0|onkrz,43,59,0|onks0,60,40,1|ydhzz,60,40,1|ydi00,43,59,0|17qm3z,43,59,0|17qm40,60,40,1|1h3knz,60,40,1|1h3ko0,43,59,0|1qgorz,43,59,0|1qgos0,60,40,1|1ztnbz,60,40,1|1ztnc0,43,59,0|23fcrz,43,59,0|23fcs0,47,59,1|2ijsrz,47,59,1|2ijss0,43,59,0|2oo63z,43,59,0|2oo640,60,40,1|319snz,60,40,1|319so0,43,59,0|3amwrz,43,59,0|3amws0,60,40,1|3kctzz,60,40,1|3kcu00,43,59,0|3tczfz,43,59,0|3tczg0,60,40,1|432wnz,60,40,1|432wo0,43,59,0|4cg0rz,43,59,0|4cg0s0,60,40,1|4lszbz,60,40,1|4lszc0,43,59,0|4v63fz,43,59,0|4v63g0,60,40,1|54j1zz,60,40,1|54j200,43,59,0|5dw63z,43,59,0|5dw640,60,40,1|5n94nz,60,40,1|5n94o0,43,59,0|5wm8rz,43,59,0|5wm8s0,60,40,1|65z7bz,60,40,1|65z7c0,43,59,0|6fcbfz,43,59,0|6fcbg0,60,40,1|6p28nz,60,40,1|6p28o0,43,59,0|6y2e3z,43,59,0|6y2e40,60,40,1|77sbbz,60,40,1|77sbc0,43,59,0|7h5ffz,43,59,0|7h5fg0,60,40,1|7qidzz,60,40,1|7qie00,43,59,0|7zvi3z,43,59,0|7zvi40,60,40,1|898gnz,60,40,1|898go0,43,59,0|8ilkrz,43,59,0|8ilks0,60,40,1|8ryjbz,60,40,1|8ryjc0,43,59,0|908rfz,43,59,0|908rg0,60,40,1|9aolzz,60,40,1|9aom00,43,59,0|9iyu3z,43,59,0|9iyu40,60,40,1|9trnbz,60,40,1|9trnc0,43,59,0|a1owrz,43,59,0|a1ows0,60,40,1|achpzz,60,40,1|achq00,43,59,0|akezfz,43,59,0|akezg0,60,40,1|av7snz,60,40,1|av7so0,43,59,0|b3i0rz,43,59,0|b3i0s0,60,40,1|bdxvbz,60,40,1|bdxvc0,43,59,0|bm83fz,43,59,0|bm83g0,60,40,1|bwnxzz,60,40,1|bwny00,43,59,0|c4y63z,43,59,0|c4y640,60,40,1|cfqzbz,60,40,1|cfqzc0,43,59,0|cno8rz,43,59,0|cno8s0,60,40,1|cyh1zz,60,40,1|cyh200,43,59,0|d6ebfz,43,59,0|d6ebg0,60,40,1|dh74nz,60,40,1|dh74o0,43,59,0|dphcrz,43,59,0|dphcs0,60,40,1|dzx7bz,60,40,1|dzx7c0,43,59,0|e87ffz,43,59,0|e87fg0,60,40,1|ein9zz,60,40,1|eina00,43,59,0|eqxi3z,43,59,0|eqxi40,60,40,1|f1dcnz,60,40,1|f1dco0,43,59,0|f9nkrz,43,59,0|f9nks0,60,40,1|fkgdzz,60,40,1|fkge00,43,59,0|fsdnfz,43,59,0|fsdng0,60,40,1|g36gnz,60,40,1|g36go0,43,59,0|gb3q3z,43,59,0|gb3q40,60,40,1|glwjbz,60,40,1|glwjc0,43,59,0|gu6rfz,43,59,0|gu6rg0,60,40,1|h4mlzz,60,40,1|h4mm00,43,59,0|hcwu3z,43,59,0|hcwu40,60,40,1|hnconz,60,40,1|hncoo0,43,59,0|hvmwrz,43,59,0|hvmws0,60,40,1|i6fpzz,60,40,1|i6fq00,43,59,0|ieczfz,43,59,0|ieczg0,60,40,1|ip5snz,60,40,1|ip5so0,43,59,0|ix323z,43,59,0|ix3240,60,40,1|j7vvbz,60,40,1|j7vvc0,43,59,0|jeq8rz,43,59,0|jeq8s0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Kentucky/Monticello|,0,121,0|-18y0m01,0,121,0|-18y0m00,45,63,0|-r0esg1,45,63,0|-r0esg0,47,59,1|-qplz81,47,59,1|-qplz80,45,63,0|-qhops1,45,63,0|-qhops0,47,59,1|-q6vwk1,47,59,1|-q6vwk0,45,63,0|-ek21s1,45,63,0|-ek21s0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cnp0k1,52,59,1|-cnp0k0,45,63,0|-vikg1,45,63,0|-vikg0,47,59,1|-m5lw1,47,59,1|-m5lw0,45,63,0|-cshs1,45,63,0|-cshs0,47,59,1|-3fj81,47,59,1|-3fj80,45,63,0|5xkvz,45,63,0|5xkw0,47,59,1|fajfz,47,59,1|fajg0,45,63,0|onnjz,45,63,0|onnk0,47,59,1|ydkrz,47,59,1|ydks0,45,63,0|17qovz,45,63,0|17qow0,47,59,1|1h3nfz,47,59,1|1h3ng0,45,63,0|1qgrjz,45,63,0|1qgrk0,47,59,1|1ztq3z,47,59,1|1ztq40,45,63,0|23ffjz,45,63,0|23ffk0,47,59,1|2ijsrz,47,59,1|2ijss0,45,63,0|2oo8vz,45,63,0|2oo8w0,47,59,1|319vfz,47,59,1|319vg0,45,63,0|3amzjz,45,63,0|3amzk0,47,59,1|3kcwrz,47,59,1|3kcws0,45,63,0|3td27z,45,63,0|3td280,47,59,1|432zfz,47,59,1|432zg0,45,63,0|4cg3jz,45,63,0|4cg3k0,47,59,1|4lt23z,47,59,1|4lt240,45,63,0|4v667z,45,63,0|4v6680,47,59,1|54j4rz,47,59,1|54j4s0,45,63,0|5dw8vz,45,63,0|5dw8w0,47,59,1|5n97fz,47,59,1|5n97g0,45,63,0|5wmbjz,45,63,0|5wmbk0,47,59,1|65za3z,47,59,1|65za40,45,63,0|6fce7z,45,63,0|6fce80,47,59,1|6p2bfz,47,59,1|6p2bg0,45,63,0|6y2gvz,45,63,0|6y2gw0,47,59,1|77se3z,47,59,1|77se40,45,63,0|7h5i7z,45,63,0|7h5i80,47,59,1|7qigrz,47,59,1|7qigs0,45,63,0|7zvkvz,45,63,0|7zvkw0,47,59,1|898jfz,47,59,1|898jg0,45,63,0|8ilnjz,45,63,0|8ilnk0,47,59,1|8rym3z,47,59,1|8rym40,45,63,0|908u7z,45,63,0|908u80,47,59,1|9aoorz,47,59,1|9aoos0,45,63,0|9iywvz,45,63,0|9iyww0,47,59,1|9trq3z,47,59,1|9trq40,45,63,0|a1ozjz,45,63,0|a1ozk0,47,59,1|achsrz,47,59,1|achss0,45,63,0|akf27z,45,63,0|akf280,47,59,1|av7vfz,47,59,1|av7vg0,45,63,0|b3i3jz,45,63,0|b3i3k0,47,59,1|bdxy3z,47,59,1|bdxy40,45,63,0|bm867z,45,63,0|bm8680,47,59,1|bwo0rz,47,59,1|bwo0s0,45,63,0|c4y8vz,45,63,0|c4y8w0,47,59,1|cfr23z,47,59,1|cfr240,45,63,0|cnobjz,45,63,0|cnobk0,47,59,1|cyh4rz,47,59,1|cyh4s0,45,63,0|d6ee7z,45,63,0|d6ee80,47,59,1|dh77fz,47,59,1|dh77g0,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxa3z,47,59,1|dzxa40,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|eincrz,47,59,1|eincs0,45,63,0|eqxkvz,45,63,0|eqxkw0,47,59,1|f1dffz,47,59,1|f1dfg0,45,63,0|f9nnjz,45,63,0|f9nnk0,47,59,1|fkggrz,47,59,1|fkggs0,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36jfz,47,59,1|g36jg0,43,59,0|gb3q3z,43,59,0|gb3q40,60,40,1|glwjbz,60,40,1|glwjc0,43,59,0|gu6rfz,43,59,0|gu6rg0,60,40,1|h4mlzz,60,40,1|h4mm00,43,59,0|hcwu3z,43,59,0|hcwu40,60,40,1|hnconz,60,40,1|hncoo0,43,59,0|hvmwrz,43,59,0|hvmws0,60,40,1|i6fpzz,60,40,1|i6fq00,43,59,0|ieczfz,43,59,0|ieczg0,60,40,1|ip5snz,60,40,1|ip5so0,43,59,0|ix323z,43,59,0|ix3240,60,40,1|j7vvbz,60,40,1|j7vvc0,43,59,0|jeq8rz,43,59,0|jeq8s0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Kralendijk|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/La_Paz|,0,122,0|-15r0wpp,0,122,0|-15r0wpo,40,122,0|-jxzspp,40,122,0|-jxzspo,26,123,1|-jpva5p,26,123,1|-jpva5o,41,40,0|NaN,41,40,0",
        "America/Lima|,0,124,0|-15r0v2d,0,124,0|-15r0v2c,0,125,0|-w25lpp,0,125,0|-w25lpo,54,59,0|-gp8241,54,59,0|-gp8240,41,40,1|-gklgw1,41,40,1|-gklgw0,54,59,0|-gbhm41,54,59,0|-gbhm40,41,40,1|-g24nk1,41,40,1|-g24nk0,54,59,0|-fsrjg1,54,59,0|-fsrjg0,41,40,1|-fjekw1,41,40,1|-fjekw0,54,59,0|8cmlvz,54,59,0|8cmlw0,41,40,1|8h973z,41,40,1|8h9740,54,59,0|8vej7z,54,59,0|8vej80,41,40,1|9014fz,41,40,1|9014g0,54,59,0|afs5vz,54,59,0|afs5w0,41,40,1|aker3z,41,40,1|aker40,54,59,0|cixpvz,54,59,0|cixpw0,41,40,1|cnkb3z,41,40,1|cnkb40,54,59,0|NaN,54,59,0",
        "America/Los_Angeles|,0,126,0|-18y0gg1,0,126,0|-18y0gg0,55,38,0|-r0emw1,55,38,0|-r0emw0,56,62,1|-qplto1,56,62,1|-qplto0,55,38,0|-qhok81,55,38,0|-qhok80,56,62,1|-q6vr01,56,62,1|-q6vr00,55,38,0|-ek1w81,55,38,0|-ek1w80,67,62,1|-cq2tg1,67,62,1|-cq2tg0,68,62,1|-cnov01,68,62,1|-cnov00,55,38,0|-bdliud,55,38,0|-bdliuc,56,62,1|-ayj0c1,56,62,1|-ayj0c0,55,38,0|-a9mpo1,55,38,0|-a9mpo0,56,62,1|-a22ho1,56,62,1|-a22ho0,55,38,0|-9qwn01,55,38,0|-9qwn00,56,62,1|-9izgc1,56,62,1|-9izgc0,55,38,0|-986kc1,55,38,0|-986kc0,56,62,1|-909do1,56,62,1|-909do0,55,38,0|-8pgho1,55,38,0|-8pgho0,56,62,1|-8hjb01,56,62,1|-8hjb00,55,38,0|-86qf01,55,38,0|-86qf00,56,62,1|-7yt8c1,56,62,1|-7yt8c0,55,38,0|-7o0cc1,55,38,0|-7o0cc0,56,62,1|-7g35o1,56,62,1|-7g35o0,55,38,0|-74xb01,55,38,0|-74xb00,56,62,1|-6x04c1,56,62,1|-6x04c0,55,38,0|-6m78c1,55,38,0|-6m78c0,56,62,1|-6ea1o1,56,62,1|-6ea1o0,55,38,0|-63h5o1,55,38,0|-63h5o0,56,62,1|-5vjz01,56,62,1|-5vjz00,55,38,0|-5kr301,55,38,0|-5kr300,56,62,1|-5ctwc1,56,62,1|-5ctwc0,55,38,0|-5210c1,55,38,0|-5210c0,56,62,1|-4u3to1,56,62,1|-4u3to0,55,38,0|-4ixz01,55,38,0|-4ixz00,56,62,1|-4bdr01,56,62,1|-4bdr00,55,38,0|-407wc1,55,38,0|-407wc0,56,62,1|-3quv01,56,62,1|-3quv00,55,38,0|-3hhto1,55,38,0|-3hhto0,56,62,1|-384sc1,56,62,1|-384sc0,55,38,0|-2yrr01,55,38,0|-2yrr00,56,62,1|-2pepo1,56,62,1|-2pepo0,55,38,0|-2g1oc1,55,38,0|-2g1oc0,56,62,1|-26boc1,56,62,1|-26boc0,55,38,0|-1xblo1,55,38,0|-1xblo0,56,62,1|-1nllo1,56,62,1|-1nllo0,55,38,0|-1e8hk1,55,38,0|-1e8hk0,56,62,1|-14vj01,56,62,1|-14vj00,55,38,0|-view1,55,38,0|-view0,56,62,1|-m5gc1,56,62,1|-m5gc0,55,38,0|-csc81,55,38,0|-csc80,56,62,1|-3fdo1,56,62,1|-3fdo0,55,38,0|5xqfz,55,38,0|5xqg0,56,62,1|faozz,56,62,1|fap00,55,38,0|ont3z,55,38,0|ont40,56,62,1|ydqbz,56,62,1|ydqc0,55,38,0|17qufz,55,38,0|17qug0,56,62,1|1h3szz,56,62,1|1h3t00,55,38,0|1qgx3z,55,38,0|1qgx40,56,62,1|1ztvnz,56,62,1|1ztvo0,55,38,0|23fl3z,55,38,0|23fl40,56,62,1|2ijybz,56,62,1|2ijyc0,55,38,0|2ooefz,55,38,0|2ooeg0,56,62,1|31a0zz,56,62,1|31a100,55,38,0|3an53z,55,38,0|3an540,56,62,1|3kd2bz,56,62,1|3kd2c0,55,38,0|3td7rz,55,38,0|3td7s0,56,62,1|4334zz,56,62,1|433500,55,38,0|4cg93z,55,38,0|4cg940,56,62,1|4lt7nz,56,62,1|4lt7o0,55,38,0|4v6brz,55,38,0|4v6bs0,56,62,1|54jabz,56,62,1|54jac0,55,38,0|5dwefz,55,38,0|5dweg0,56,62,1|5n9czz,56,62,1|5n9d00,55,38,0|5wmh3z,55,38,0|5wmh40,56,62,1|65zfnz,56,62,1|65zfo0,55,38,0|6fcjrz,55,38,0|6fcjs0,56,62,1|6p2gzz,56,62,1|6p2h00,55,38,0|6y2mfz,55,38,0|6y2mg0,56,62,1|77sjnz,56,62,1|77sjo0,55,38,0|7h5nrz,55,38,0|7h5ns0,56,62,1|7qimbz,56,62,1|7qimc0,55,38,0|7zvqfz,55,38,0|7zvqg0,56,62,1|898ozz,56,62,1|898p00,55,38,0|8ilt3z,55,38,0|8ilt40,56,62,1|8ryrnz,56,62,1|8ryro0,55,38,0|908zrz,55,38,0|908zs0,56,62,1|9aoubz,56,62,1|9aouc0,55,38,0|9iz2fz,55,38,0|9iz2g0,56,62,1|9trvnz,56,62,1|9trvo0,55,38,0|a1p53z,55,38,0|a1p540,56,62,1|achybz,56,62,1|achyc0,55,38,0|akf7rz,55,38,0|akf7s0,56,62,1|av80zz,56,62,1|av8100,55,38,0|b3i93z,55,38,0|b3i940,56,62,1|bdy3nz,56,62,1|bdy3o0,55,38,0|bm8brz,55,38,0|bm8bs0,56,62,1|bwo6bz,56,62,1|bwo6c0,55,38,0|c4yefz,55,38,0|c4yeg0,56,62,1|cfr7nz,56,62,1|cfr7o0,55,38,0|cnoh3z,55,38,0|cnoh40,56,62,1|cyhabz,56,62,1|cyhac0,55,38,0|d6ejrz,55,38,0|d6ejs0,56,62,1|dh7czz,56,62,1|dh7d00,55,38,0|dphl3z,55,38,0|dphl40,56,62,1|dzxfnz,56,62,1|dzxfo0,55,38,0|e87nrz,55,38,0|e87ns0,56,62,1|einibz,56,62,1|einic0,55,38,0|eqxqfz,55,38,0|eqxqg0,56,62,1|f1dkzz,56,62,1|f1dl00,55,38,0|f9nt3z,55,38,0|f9nt40,56,62,1|fkgmbz,56,62,1|fkgmc0,55,38,0|fsdvrz,55,38,0|fsdvs0,56,62,1|g36ozz,56,62,1|g36p00,55,38,0|gb3yfz,55,38,0|gb3yg0,56,62,1|glwrnz,56,62,1|glwro0,55,38,0|gu6zrz,55,38,0|gu6zs0,56,62,1|h4mubz,56,62,1|h4muc0,55,38,0|hcx2fz,55,38,0|hcx2g0,56,62,1|hncwzz,56,62,1|hncx00,55,38,0|hvn53z,55,38,0|hvn540,56,62,1|i6fybz,56,62,1|i6fyc0,55,38,0|ied7rz,55,38,0|ied7s0,56,62,1|ip60zz,56,62,1|ip6100,55,38,0|ix3afz,55,38,0|ix3ag0,56,62,1|j7w3nz,56,62,1|j7w3o0,55,38,0|jeqh3z,55,38,0|jeqh40,56,62,1|jqz4zz,56,62,1|jqz500,55,38,0|jxgjrz,55,38,0|jxgjs0,56,62,1|k9p7nz,56,62,1|k9p7o0,55,38,0|kg6mfz,55,38,0|kg6mg0,56,62,1|ksfabz,56,62,1|ksfac0,55,38,0|kz9nrz,55,38,0|kz9ns0,56,62,1|lbibnz,56,62,1|lbibo0,55,38,0|lhzqfz,55,38,0|lhzqg0,56,62,1|lu8ebz,56,62,1|lu8ec0,55,38,0|m0pt3z,55,38,0|m0pt40,56,62,1|mcygzz,56,62,1|mcyh00,55,38,0|mjfvrz,55,38,0|mjfvs0,56,62,1|mvojnz,56,62,1|mvojo0,55,38,0|n25yfz,55,38,0|n25yg0,56,62,1|neembz,56,62,1|neemc0,55,38,0|nkw13z,55,38,0|nkw140,56,62,1|nx4ozz,56,62,1|nx4p00,55,38,0|o3z2fz,55,38,0|o3z2g0,56,62,1|og7qbz,56,62,1|og7qc0,55,38,0|omp53z,55,38,0|omp540,56,62,1|oyxszz,56,62,1|oyxt00,55,38,0|p5f7rz,55,38,0|p5f7s0,56,62,1|phnvnz,56,62,1|phnvo0,55,38,0|po5afz,55,38,0|po5ag0,56,62,1|q0dybz,56,62,1|q0dyc0,55,38,0|q6vd3z,55,38,0|q6vd40,56,62,1|qj40zz,56,62,1|qj4100,55,38,0|qpyefz,55,38,0|qpyeg0,56,62,1|r272bz,56,62,1|r272c0,55,38,0|r8oh3z,55,38,0|r8oh40,56,62,1|rkx4zz,56,62,1|rkx500,55,38,0|rrejrz,55,38,0|rrejs0,56,62,1|s3n7nz,56,62,1|s3n7o0,55,38,0|sa4mfz,55,38,0|sa4mg0,56,62,1|smdabz,56,62,1|smdac0,55,38,0|ssup3z,55,38,0|ssup40,56,62,1|t53czz,56,62,1|t53d00,55,38,0|tbkrrz,55,38,0|tbkrs0,56,62,1|tntfnz,56,62,1|tntfo0,55,38,0|tunt3z,55,38,0|tunt40,56,62,1|u6wgzz,56,62,1|u6wh00,55,38,0|uddvrz,55,38,0|uddvs0,56,62,1|upmjnz,56,62,1|upmjo0,55,38,0|uw3yfz,55,38,0|uw3yg0,56,62,1|v8cmbz,56,62,1|v8cmc0,55,38,0|veu13z,55,38,0|veu140,56,62,1|vr2ozz,56,62,1|vr2p00,55,38,0|vxk3rz,55,38,0|vxk3s0,56,62,1|w9srnz,56,62,1|w9sro0,55,38,0|wgn53z,55,38,0|wgn540,56,62,1|wsvszz,56,62,1|wsvt00,55,38,0|wzd7rz,55,38,0|wzd7s0,56,62,1|xblvnz,56,62,1|xblvo0,55,38,0|xi3afz,55,38,0|xi3ag0,56,62,1|xubybz,56,62,1|xubyc0,55,38,0|y0td3z,55,38,0|y0td40,56,62,1|yd20zz,56,62,1|yd2100,55,38,0|yjjfrz,55,38,0|yjjfs0,56,62,1|yvs3nz,56,62,1|yvs3o0,55,38,0|z29ifz,55,38,0|z29ig0,56,62,1|zei6bz,56,62,1|zei6c0,55,38,0|zlcjrz,55,38,0|zlcjs0,56,62,1|zxl7nz,56,62,1|zxl7o0,55,38,0|1042mfz,55,38,0|1042mg0,56,62,1|10gbabz,56,62,1|10gbac0,55,38,0|10msp3z,55,38,0|10msp40,56,62,1|10z1czz,56,62,1|10z1d00,55,38,0|115irrz,55,38,0|115irs0,56,62,1|11hrfnz,56,62,1|11hrfo0,55,38,0|11o8ufz,55,38,0|11o8ug0,56,62,1|120hibz,56,62,1|120hic0,55,38,0|126yx3z,55,38,0|126yx40,56,62,1|12j7kzz,56,62,1|12j7l00,55,38,0|12q1yfz,55,38,0|12q1yg0,56,62,1|132ambz,56,62,1|132amc0,55,38,0|138s13z,55,38,0|138s140,56,62,1|13l0ozz,56,62,1|13l0p00,55,38,0|13ri3rz,55,38,0|13ri3s0,56,62,1|143qrnz,56,62,1|143qro0,55,38,0|14a86fz,55,38,0|14a86g0,56,62,1|14mgubz,56,62,1|14mguc0,55,38,0|14sy93z,55,38,0|14sy940,56,62,1|1556wzz,56,62,1|1556x00,55,38,0|15c1afz,55,38,0|15c1ag0,56,62,1|15o9ybz,56,62,1|15o9yc0,55,38,0|15urd3z,55,38,0|15urd40,56,62,1|16700zz,56,62,1|1670100,55,38,0|16dhfrz,55,38,0|16dhfs0,56,62,1|16pq3nz,56,62,1|16pq3o0,55,38,0|16w7ifz,55,38,0|16w7ig0,56,62,1|178g6bz,56,62,1|178g6c0,55,38,0|17exl3z,55,38,0|17exl40,56,62,1|17r68zz,56,62,1|17r6900,55,38,0|17xnnrz,55,38,0|17xnns0,56,62,1|189wbnz,56,62,1|189wbo0,55,38,0|18gqp3z,55,38,0|18gqp40,56,62,1|18szczz,56,62,1|18szd00,55,38,0|18zgrrz,55,38,0|18zgrs0,56,62,1|19bpfnz,56,62,1|19bpfo0,55,38,0|19i6ufz,55,38,0|19i6ug0,56,62,1|19ufibz,56,62,1|19ufic0,55,38,0|1a0wx3z,55,38,0|1a0wx40,56,62,1|1ad5kzz,56,62,1|1ad5l00,55,38,0|1ajmzrz,55,38,0|1ajmzs0,56,62,1|1avvnnz,56,62,1|1avvno0,55,38,0|1b2q13z,55,38,0|1b2q140,56,62,1|1beyozz,56,62,1|1beyp00,55,38,0|1blg3rz,55,38,0|1blg3s0,56,62,1|1bxornz,56,62,1|1bxoro0,55,38,0|1c466fz,55,38,0|1c466g0,56,62,1|1cgeubz,56,62,1|1cgeuc0,55,38,0|1cmw93z,55,38,0|1cmw940,56,62,1|1cz4wzz,56,62,1|1cz4x00,55,38,0|1d5mbrz,55,38,0|1d5mbs0,56,62,1|1dhuznz,56,62,1|1dhuzo0,55,38,0|1docefz,55,38,0|1doceg0,56,62,1|1e0l2bz,56,62,1|1e0l2c0,55,38,0|1e7ffrz,55,38,0|1e7ffs0,56,62,1|1ejo3nz,56,62,1|1ejo3o0,55,38,0|1eq5ifz,55,38,0|1eq5ig0,56,62,1|1f2e6bz,56,62,1|1f2e6c0,55,38,0|1f8vl3z,55,38,0|1f8vl40,56,62,1|1fl48zz,56,62,1|1fl4900,55,38,0|1frlnrz,55,38,0|1frlns0,56,62,1|1g3ubnz,56,62,1|1g3ubo0,55,38,0|1gabqfz,55,38,0|1gabqg0,56,62,1|1gmkebz,56,62,1|1gmkec0,55,38,0|1gt1t3z,55,38,0|1gt1t40,56,62,1|1h5agzz,56,62,1|1h5ah00,55,38,0|1hc4ufz,55,38,0|1hc4ug0,56,62,1|1hodibz,56,62,1|1hodic0,55,38,0|1huux3z,55,38,0|1huux40,56,62,1|1i73kzz,56,62,1|1i73l00,55,38,0|1idkzrz,55,38,0|1idkzs0,56,62,1|1iptnnz,56,62,1|1iptno0,55,38,0|1iwb2fz,55,38,0|1iwb2g0,56,62,1|1j8jqbz,56,62,1|1j8jqc0,55,38,0|1jf153z,55,38,0|1jf1540,56,62,1|1jr9szz,56,62,1|1jr9t00,55,38,0|1jy46fz,55,38,0|1jy46g0,56,62,1|1kacubz,56,62,1|1kacuc0,55,38,0|1kgu93z,55,38,0|1kgu940,56,62,1|1kt2wzz,56,62,1|1kt2x00,55,38,0|1kzkbrz,55,38,0|1kzkbs0,56,62,1|1lbsznz,56,62,1|1lbszo0,55,38,0|1liaefz,55,38,0|1liaeg0,56,62,1|1luj2bz,56,62,1|1luj2c0,55,38,0|1m10h3z,55,38,0|1m10h40,56,62,1|1md94zz,56,62,1|1md9500,55,38,0|1mjqjrz,55,38,0|1mjqjs0,56,62,1|1mvz7nz,56,62,1|1mvz7o0,55,38,0|1n2tl3z,55,38,0|1n2tl40,56,62,1|1nf28zz,56,62,1|1nf2900,55,38,0|1nljnrz,55,38,0|1nljns0,56,62,1|1nxsbnz,56,62,1|1nxsbo0,55,38,0|1o49qfz,55,38,0|1o49qg0,56,62,1|1ogiebz,56,62,1|1ogiec0,55,38,0|1omzt3z,55,38,0|1omzt40,56,62,1|1oz8gzz,56,62,1|1oz8h00,55,38,0|1p5pvrz,55,38,0|1p5pvs0,56,62,1|1phyjnz,56,62,1|1phyjo0,55,38,0|1posx3z,55,38,0|1posx40,56,62,1|1q11kzz,56,62,1|1q11l00,55,38,0|1q7izrz,55,38,0|1q7izs0,56,62,1|1qjrnnz,56,62,1|1qjrno0,55,38,0|1qq92fz,55,38,0|1qq92g0,56,62,1|1r2hqbz,56,62,1|1r2hqc0,55,38,0|1r8z53z,55,38,0|1r8z540,56,62,1|1rl7szz,56,62,1|1rl7t00,55,38,0|1rrp7rz,55,38,0|1rrp7s0,56,62,1|1s3xvnz,56,62,1|1s3xvo0,55,38,0|1safafz,55,38,0|1safag0,56,62,1|1smnybz,56,62,1|1smnyc0,55,38,0|1stibrz,55,38,0|1stibs0,56,62,1|1t5qznz,56,62,1|1t5qzo0,55,38,0|1tc8efz,55,38,0|1tc8eg0,56,62,1|1toh2bz,56,62,1|1toh2c0,55,38,0|1tuyh3z,55,38,0|1tuyh40,56,62,1|1u774zz,56,62,1|1u77500,55,38,0|1udojrz,55,38,0|1udojs0,56,62,1|1upx7nz,56,62,1|1upx7o0,55,38,0|1uwemfz,55,38,0|1uwemg0,56,62,1|1v8nabz,56,62,1|1v8nac0,55,38,0|1vf4p3z,55,38,0|1vf4p40,56,62,1|1vrdczz,56,62,1|1vrdd00,55,38,0|NaN,55,38,0",
        "America/Lower_Princes|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Maceio|,0,127,0|-t85ldx,0,127,0|-t85ldw,38,41,0|-jylag1,38,41,0|-jylag0,39,43,1|-jpb141,39,43,1|-jpb140,38,41,0|-jfsd01,38,41,0|-jfsd00,39,43,1|-j6j3s1,39,43,1|-j6j3s0,38,41,0|-ahcyc1,38,41,0|-ahcyc0,39,43,1|-aad3o1,39,43,1|-aad3o0,38,41,0|-9yl101,38,41,0|-9yl100,39,43,1|-9sd141,39,43,1|-9sd140,38,41,0|-9ft3o1,38,41,0|-9ft3o0,39,43,1|-99j941,39,43,1|-99j940,38,41,0|-8wzbo1,38,41,0|-8wzbo0,39,43,1|-8scqg1,39,43,1|-8scqg0,38,41,0|-35xmc1,38,41,0|-35xmc0,39,43,1|-31nzs1,39,43,1|-31nzs0,38,41,0|-2kdp01,38,41,0|-2kdp00,39,43,1|-2hcig1,39,43,1|-2hcig0,38,41,0|-24qqc1,38,41,0|-24qqc0,39,43,1|-204541,39,43,1|-204540,38,41,0|-1nid01,38,41,0|-1nid00,39,43,1|-1hc7s1,39,43,1|-1hc7s0,38,41,0|-14qfo1,38,41,0|-14qfo0,39,43,1|-yifs1,39,43,1|-yifs0,38,41,0|89jcbz,38,41,0|89jcc0,39,43,1|8gdk7z,39,43,1|8gdk80,38,41,0|8rwgbz,38,41,0|8rwgc0,39,43,1|8xns7z,39,43,1|8xns80,38,41,0|9aodnz,38,41,0|9aodo0,39,43,1|9g2qvz,39,43,1|9g2qw0,38,41,0|9t1hnz,38,41,0|9t1ho0,39,43,1|9yfuvz,39,43,1|9yfuw0,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|ahvuvz,39,43,1|ahvuw0,38,41,0|dggyzz,38,41,0|dggz00,39,43,1|dml9jz,39,43,1|dml9k0,38,41,0|fj0azz,38,41,0|fj0b00,39,43,1|fqkg7z,39,43,1|fqkg80,38,41,0|g23cbz,38,41,0|g23cc0,39,43,1|g2t6vz,39,43,1|g2t6w0,38,41,0|gl6dnz,38,41,0|gl6do0,39,43,1|grnmvz,39,43,1|grnmw0,38,41,0|NaN,38,41,0",
        "America/Managua|,0,128,0|-15r0tct,0,128,0|-15r0tcs,20,129,0|-ijh6op,20,129,0|-ijh6oo,45,63,0|1qkbbz,45,63,0|1qkbc0,43,59,0|2ob1vz,43,59,0|2ob1w0,45,63,0|4t08nz,45,63,0|4t08o0,47,59,1|4y3hvz,47,59,1|4y3hw0,45,63,0|5bqbbz,45,63,0|5bqbc0,47,59,1|5gtkjz,47,59,1|5gtkk0,45,63,0|bhcefz,45,63,0|bhceg0,43,59,0|bv2gjz,43,59,0|bv2gk0,45,63,0|c05vbz,45,63,0|c05vc0,43,59,0|e3bcjz,43,59,0|e3bck0,45,63,0|iepvbz,45,63,0|iepvc0,47,59,1|inpv7z,47,59,1|inpv80,45,63,0|iyizjz,45,63,0|iyizk0,47,59,1|j6g0nz,47,59,1|j6g0o0,45,63,0|NaN,45,63,0",
        "America/Manaus|,0,130,0|-t85gvx,0,130,0|-t85gvw,41,40,0|-jyl7o1,41,40,0|-jyl7o0,38,41,1|-jpayc1,38,41,1|-jpayc0,41,40,0|-jfsa81,41,40,0|-jfsa80,38,41,1|-j6j101,38,41,1|-j6j100,41,40,0|-ahcvk1,41,40,0|-ahcvk0,38,41,1|-aad0w1,38,41,1|-aad0w0,41,40,0|-9yky81,41,40,0|-9yky80,38,41,1|-9scyc1,38,41,1|-9scyc0,41,40,0|-9ft0w1,41,40,0|-9ft0w0,38,41,1|-99j6c1,38,41,1|-99j6c0,41,40,0|-8wz8w1,41,40,0|-8wz8w0,38,41,1|-8scno1,38,41,1|-8scno0,41,40,0|-35xjk1,41,40,0|-35xjk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2kdm81,41,40,0|-2kdm80,38,41,1|-2hcfo1,38,41,1|-2hcfo0,41,40,0|-24qnk1,41,40,0|-24qnk0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1nia81,41,40,0|-1nia80,38,41,1|-1hc501,38,41,1|-1hc500,41,40,0|-14qcw1,41,40,0|-14qcw0,38,41,1|-yid01,38,41,1|-yid00,41,40,0|89jf3z,41,40,0|89jf40,38,41,1|8gdmzz,38,41,1|8gdn00,41,40,0|8rwj3z,41,40,0|8rwj40,38,41,1|8xnuzz,38,41,1|8xnv00,41,40,0|9aogfz,41,40,0|9aogg0,38,41,1|9g2tnz,38,41,1|9g2to0,41,40,0|cf0wfz,41,40,0|cf0wg0,38,41,1|cli5nz,38,41,1|cli5o0,41,40,0|NaN,41,40,0",
        "America/Marigot|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Martinique|,0,131,0|-15r0y0t,0,131,0|-15r0y0s,77,131,0|-umcvct,77,131,0|-umcvcs,31,40,0|5ct1rz,31,40,0|5ct1s0,48,41,1|5lt1nz,48,41,1|5lt1o0,31,40,0|NaN,31,40,0",
        "America/Matamoros|,0,132,0|-p1u7c1,0,132,0|-p1u7c0,45,63,0|9iywvz,45,63,0|9iyww0,47,59,1|9trq3z,47,59,1|9trq40,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxa3z,47,59,1|dzxa40,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|eincrz,47,59,1|eincs0,45,63,0|eqxkvz,45,63,0|eqxkw0,47,59,1|f1dffz,47,59,1|f1dfg0,45,63,0|f9nnjz,45,63,0|f9nnk0,47,59,1|fkggrz,47,59,1|fkggs0,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36jfz,47,59,1|g36jg0,45,63,0|gcwm7z,45,63,0|gcwm80,47,59,1|gkgrfz,47,59,1|gkgrg0,45,63,0|gu6u7z,45,63,0|gu6u80,47,59,1|h4morz,47,59,1|h4mos0,45,63,0|hcwwvz,45,63,0|hcwww0,47,59,1|hncrfz,47,59,1|hncrg0,45,63,0|hvmzjz,45,63,0|hvmzk0,47,59,1|i6fsrz,47,59,1|i6fss0,45,63,0|ied27z,45,63,0|ied280,47,59,1|ip5vfz,47,59,1|ip5vg0,45,63,0|ix34vz,45,63,0|ix34w0,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jft7jz,45,63,0|jft7k0,47,59,1|jqm0rz,47,59,1|jqm0s0,45,63,0|jyw8vz,45,63,0|jyw8w0,47,59,1|k9c3fz,47,59,1|k9c3g0,45,63,0|khmbjz,45,63,0|khmbk0,47,59,1|ks263z,47,59,1|ks2640,45,63,0|kz9i7z,45,63,0|kz9i80,47,59,1|lbi63z,47,59,1|lbi640,45,63,0|lhzkvz,45,63,0|lhzkw0,47,59,1|lu88rz,47,59,1|lu88s0,45,63,0|m0pnjz,45,63,0|m0pnk0,47,59,1|mcybfz,47,59,1|mcybg0,45,63,0|mjfq7z,45,63,0|mjfq80,47,59,1|mvoe3z,47,59,1|mvoe40,45,63,0|n25svz,45,63,0|n25sw0,47,59,1|neegrz,47,59,1|neegs0,45,63,0|nkvvjz,45,63,0|nkvvk0,47,59,1|nx4jfz,47,59,1|nx4jg0,45,63,0|o3ywvz,45,63,0|o3yww0,47,59,1|og7krz,47,59,1|og7ks0,45,63,0|omozjz,45,63,0|omozk0,47,59,1|oyxnfz,47,59,1|oyxng0,45,63,0|p5f27z,45,63,0|p5f280,47,59,1|phnq3z,47,59,1|phnq40,45,63,0|po54vz,45,63,0|po54w0,47,59,1|q0dsrz,47,59,1|q0dss0,45,63,0|q6v7jz,45,63,0|q6v7k0,47,59,1|qj3vfz,47,59,1|qj3vg0,45,63,0|qpy8vz,45,63,0|qpy8w0,47,59,1|r26wrz,47,59,1|r26ws0,45,63,0|r8objz,45,63,0|r8obk0,47,59,1|rkwzfz,47,59,1|rkwzg0,45,63,0|rree7z,45,63,0|rree80,47,59,1|s3n23z,47,59,1|s3n240,45,63,0|sa4gvz,45,63,0|sa4gw0,47,59,1|smd4rz,47,59,1|smd4s0,45,63,0|ssujjz,45,63,0|ssujk0,47,59,1|t537fz,47,59,1|t537g0,45,63,0|tbkm7z,45,63,0|tbkm80,47,59,1|tnta3z,47,59,1|tnta40,45,63,0|tunnjz,45,63,0|tunnk0,47,59,1|u6wbfz,47,59,1|u6wbg0,45,63,0|uddq7z,45,63,0|uddq80,47,59,1|upme3z,47,59,1|upme40,45,63,0|uw3svz,45,63,0|uw3sw0,47,59,1|v8cgrz,47,59,1|v8cgs0,45,63,0|vetvjz,45,63,0|vetvk0,47,59,1|vr2jfz,47,59,1|vr2jg0,45,63,0|vxjy7z,45,63,0|vxjy80,47,59,1|w9sm3z,47,59,1|w9sm40,45,63,0|wgmzjz,45,63,0|wgmzk0,47,59,1|wsvnfz,47,59,1|wsvng0,45,63,0|wzd27z,45,63,0|wzd280,47,59,1|xblq3z,47,59,1|xblq40,45,63,0|xi34vz,45,63,0|xi34w0,47,59,1|xubsrz,47,59,1|xubss0,45,63,0|y0t7jz,45,63,0|y0t7k0,47,59,1|yd1vfz,47,59,1|yd1vg0,45,63,0|yjja7z,45,63,0|yjja80,47,59,1|yvry3z,47,59,1|yvry40,45,63,0|z29cvz,45,63,0|z29cw0,47,59,1|zei0rz,47,59,1|zei0s0,45,63,0|zlce7z,45,63,0|zlce80,47,59,1|zxl23z,47,59,1|zxl240,45,63,0|1042gvz,45,63,0|1042gw0,47,59,1|10gb4rz,47,59,1|10gb4s0,45,63,0|10msjjz,45,63,0|10msjk0,47,59,1|10z17fz,47,59,1|10z17g0,45,63,0|115im7z,45,63,0|115im80,47,59,1|11hra3z,47,59,1|11hra40,45,63,0|11o8ovz,45,63,0|11o8ow0,47,59,1|120hcrz,47,59,1|120hcs0,45,63,0|126yrjz,45,63,0|126yrk0,47,59,1|12j7ffz,47,59,1|12j7fg0,45,63,0|12q1svz,45,63,0|12q1sw0,47,59,1|132agrz,47,59,1|132ags0,45,63,0|138rvjz,45,63,0|138rvk0,47,59,1|13l0jfz,47,59,1|13l0jg0,45,63,0|13rhy7z,45,63,0|13rhy80,47,59,1|143qm3z,47,59,1|143qm40,45,63,0|14a80vz,45,63,0|14a80w0,47,59,1|14mgorz,47,59,1|14mgos0,45,63,0|14sy3jz,45,63,0|14sy3k0,47,59,1|1556rfz,47,59,1|1556rg0,45,63,0|15c14vz,45,63,0|15c14w0,47,59,1|15o9srz,47,59,1|15o9ss0,45,63,0|15ur7jz,45,63,0|15ur7k0,47,59,1|166zvfz,47,59,1|166zvg0,45,63,0|16dha7z,45,63,0|16dha80,47,59,1|16ppy3z,47,59,1|16ppy40,45,63,0|16w7cvz,45,63,0|16w7cw0,47,59,1|178g0rz,47,59,1|178g0s0,45,63,0|17exfjz,45,63,0|17exfk0,47,59,1|17r63fz,47,59,1|17r63g0,45,63,0|17xni7z,45,63,0|17xni80,47,59,1|189w63z,47,59,1|189w640,45,63,0|18gqjjz,45,63,0|18gqjk0,47,59,1|18sz7fz,47,59,1|18sz7g0,45,63,0|18zgm7z,45,63,0|18zgm80,47,59,1|19bpa3z,47,59,1|19bpa40,45,63,0|19i6ovz,45,63,0|19i6ow0,47,59,1|19ufcrz,47,59,1|19ufcs0,45,63,0|1a0wrjz,45,63,0|1a0wrk0,47,59,1|1ad5ffz,47,59,1|1ad5fg0,45,63,0|1ajmu7z,45,63,0|1ajmu80,47,59,1|1avvi3z,47,59,1|1avvi40,45,63,0|1b2pvjz,45,63,0|1b2pvk0,47,59,1|1beyjfz,47,59,1|1beyjg0,45,63,0|1blfy7z,45,63,0|1blfy80,47,59,1|1bxom3z,47,59,1|1bxom40,45,63,0|1c460vz,45,63,0|1c460w0,47,59,1|1cgeorz,47,59,1|1cgeos0,45,63,0|1cmw3jz,45,63,0|1cmw3k0,47,59,1|1cz4rfz,47,59,1|1cz4rg0,45,63,0|1d5m67z,45,63,0|1d5m680,47,59,1|1dhuu3z,47,59,1|1dhuu40,45,63,0|1doc8vz,45,63,0|1doc8w0,47,59,1|1e0kwrz,47,59,1|1e0kws0,45,63,0|1e7fa7z,45,63,0|1e7fa80,47,59,1|1ejny3z,47,59,1|1ejny40,45,63,0|1eq5cvz,45,63,0|1eq5cw0,47,59,1|1f2e0rz,47,59,1|1f2e0s0,45,63,0|1f8vfjz,45,63,0|1f8vfk0,47,59,1|1fl43fz,47,59,1|1fl43g0,45,63,0|1frli7z,45,63,0|1frli80,47,59,1|1g3u63z,47,59,1|1g3u640,45,63,0|1gabkvz,45,63,0|1gabkw0,47,59,1|1gmk8rz,47,59,1|1gmk8s0,45,63,0|1gt1njz,45,63,0|1gt1nk0,47,59,1|1h5abfz,47,59,1|1h5abg0,45,63,0|1hc4ovz,45,63,0|1hc4ow0,47,59,1|1hodcrz,47,59,1|1hodcs0,45,63,0|1huurjz,45,63,0|1huurk0,47,59,1|1i73ffz,47,59,1|1i73fg0,45,63,0|1idku7z,45,63,0|1idku80,47,59,1|1ipti3z,47,59,1|1ipti40,45,63,0|1iwawvz,45,63,0|1iwaww0,47,59,1|1j8jkrz,47,59,1|1j8jks0,45,63,0|1jf0zjz,45,63,0|1jf0zk0,47,59,1|1jr9nfz,47,59,1|1jr9ng0,45,63,0|1jy40vz,45,63,0|1jy40w0,47,59,1|1kacorz,47,59,1|1kacos0,45,63,0|1kgu3jz,45,63,0|1kgu3k0,47,59,1|1kt2rfz,47,59,1|1kt2rg0,45,63,0|1kzk67z,45,63,0|1kzk680,47,59,1|1lbsu3z,47,59,1|1lbsu40,45,63,0|1lia8vz,45,63,0|1lia8w0,47,59,1|1luiwrz,47,59,1|1luiws0,45,63,0|1m10bjz,45,63,0|1m10bk0,47,59,1|1md8zfz,47,59,1|1md8zg0,45,63,0|1mjqe7z,45,63,0|1mjqe80,47,59,1|1mvz23z,47,59,1|1mvz240,45,63,0|1n2tfjz,45,63,0|1n2tfk0,47,59,1|1nf23fz,47,59,1|1nf23g0,45,63,0|1nlji7z,45,63,0|1nlji80,47,59,1|1nxs63z,47,59,1|1nxs640,45,63,0|1o49kvz,45,63,0|1o49kw0,47,59,1|1ogi8rz,47,59,1|1ogi8s0,45,63,0|1omznjz,45,63,0|1omznk0,47,59,1|1oz8bfz,47,59,1|1oz8bg0,45,63,0|1p5pq7z,45,63,0|1p5pq80,47,59,1|1phye3z,47,59,1|1phye40,45,63,0|1posrjz,45,63,0|1posrk0,47,59,1|1q11ffz,47,59,1|1q11fg0,45,63,0|1q7iu7z,45,63,0|1q7iu80,47,59,1|1qjri3z,47,59,1|1qjri40,45,63,0|1qq8wvz,45,63,0|1qq8ww0,47,59,1|1r2hkrz,47,59,1|1r2hks0,45,63,0|1r8yzjz,45,63,0|1r8yzk0,47,59,1|1rl7nfz,47,59,1|1rl7ng0,45,63,0|1rrp27z,45,63,0|1rrp280,47,59,1|1s3xq3z,47,59,1|1s3xq40,45,63,0|1saf4vz,45,63,0|1saf4w0,47,59,1|1smnsrz,47,59,1|1smnss0,45,63,0|1sti67z,45,63,0|1sti680,47,59,1|1t5qu3z,47,59,1|1t5qu40,45,63,0|1tc88vz,45,63,0|1tc88w0,47,59,1|1togwrz,47,59,1|1togws0,45,63,0|1tuybjz,45,63,0|1tuybk0,47,59,1|1u76zfz,47,59,1|1u76zg0,45,63,0|1udoe7z,45,63,0|1udoe80,47,59,1|1upx23z,47,59,1|1upx240,45,63,0|1uwegvz,45,63,0|1uwegw0,47,59,1|1v8n4rz,47,59,1|1v8n4s0,45,63,0|1vf4jjz,45,63,0|1vf4jk0,47,59,1|1vrd7fz,47,59,1|1vrd7g0,45,63,0|NaN,45,63,0",
        "America/Mazatlan|,0,133,0|-p1u4k1,0,133,0|-p1u4k0,44,62,0|-m7ock1,44,62,0|-m7ock0,45,63,0|-kf67c1,45,63,0|-kf67c0,44,62,0|-k6mpw1,44,62,0|-k6mpw0,46,63,1|-jypm01,46,63,1|-jypm00,44,62,0|-jpan81,44,62,0|-jpan80,45,63,0|-eg9601,45,63,0|-eg9600,44,62,0|dphibz,44,62,0|dphic0,46,63,1|dzxcvz,46,63,1|dzxcw0,44,62,0|e87kzz,44,62,0|e87l00,46,63,1|einfjz,46,63,1|einfk0,44,62,0|eqxnnz,44,62,0|eqxno0,46,63,1|f1di7z,46,63,1|f1di80,44,62,0|f9nqbz,44,62,0|f9nqc0,46,63,1|fkgjjz,46,63,1|fkgjk0,44,62,0|fsdszz,44,62,0|fsdt00,46,63,1|g36m7z,46,63,1|g36m80,44,62,0|gcwozz,44,62,0|gcwp00,46,63,1|gkgu7z,46,63,1|gkgu80,44,62,0|gu6wzz,44,62,0|gu6x00,46,63,1|h4mrjz,46,63,1|h4mrk0,44,62,0|hcwznz,44,62,0|hcwzo0,46,63,1|hncu7z,46,63,1|hncu80,44,62,0|hvn2bz,44,62,0|hvn2c0,46,63,1|i6fvjz,46,63,1|i6fvk0,44,62,0|ied4zz,44,62,0|ied500,46,63,1|ip5y7z,46,63,1|ip5y80,44,62,0|ix37nz,44,62,0|ix37o0,46,63,1|j7w0vz,46,63,1|j7w0w0,44,62,0|jftabz,44,62,0|jftac0,46,63,1|jqm3jz,46,63,1|jqm3k0,44,62,0|jywbnz,44,62,0|jywbo0,46,63,1|k9c67z,46,63,1|k9c680,44,62,0|khmebz,44,62,0|khmec0,46,63,1|ks28vz,46,63,1|ks28w0,44,62,0|l0cgzz,44,62,0|l0ch00,46,63,1|lb5a7z,46,63,1|lb5a80,44,62,0|lj2jnz,44,62,0|lj2jo0,46,63,1|ltvcvz,46,63,1|ltvcw0,44,62,0|m1smbz,44,62,0|m1smc0,46,63,1|mclfjz,46,63,1|mclfk0,44,62,0|mkvnnz,44,62,0|mkvno0,46,63,1|mvbi7z,46,63,1|mvbi80,44,62,0|n3lqbz,44,62,0|n3lqc0,46,63,1|ne1kvz,46,63,1|ne1kw0,44,62,0|nmbszz,44,62,0|nmbt00,46,63,1|nwrnjz,46,63,1|nwrnk0,44,62,0|o51vnz,44,62,0|o51vo0,46,63,1|ofuovz,46,63,1|ofuow0,44,62,0|onrybz,44,62,0|onryc0,46,63,1|oykrjz,46,63,1|oykrk0,44,62,0|p6i0zz,44,62,0|p6i100,46,63,1|phau7z,46,63,1|phau80,44,62,0|ppl2bz,44,62,0|ppl2c0,46,63,1|q00wvz,46,63,1|q00ww0,44,62,0|q8b4zz,44,62,0|q8b500,46,63,1|qiqzjz,46,63,1|qiqzk0,44,62,0|qr17nz,44,62,0|qr17o0,46,63,1|r1u0vz,46,63,1|r1u0w0,44,62,0|r9rabz,44,62,0|r9rac0,46,63,1|rkk3jz,46,63,1|rkk3k0,44,62,0|NaN,44,62,0",
        "America/Menominee|,0,134,0|-17zjvry,0,134,0|-17zjvrx,45,63,0|-r0esg1,45,63,0|-r0esg0,47,59,1|-qplz81,47,59,1|-qplz80,45,63,0|-qhops1,45,63,0|-qhops0,47,59,1|-q6vwk1,47,59,1|-q6vwk0,45,63,0|-ek21s1,45,63,0|-ek21s0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cnp0k1,52,59,1|-cnp0k0,45,63,0|-ccw1s1,45,63,0|-ccw1s0,47,59,1|-c4yxw1,47,59,1|-c4yxw0,45,63,0|-1xbog1,45,63,0|-1xbog0,47,59,1|-1nlr81,47,59,1|-1nlr80,45,63,0|-cshs1,45,63,0|-cshs0,43,59,0|1qgorz,43,59,0|1qgos0,47,59,1|1ztq3z,47,59,1|1ztq40,45,63,0|23ffjz,45,63,0|23ffk0,47,59,1|2ijsrz,47,59,1|2ijss0,45,63,0|2oo8vz,45,63,0|2oo8w0,47,59,1|319vfz,47,59,1|319vg0,45,63,0|3amzjz,45,63,0|3amzk0,47,59,1|3kcwrz,47,59,1|3kcws0,45,63,0|3td27z,45,63,0|3td280,47,59,1|432zfz,47,59,1|432zg0,45,63,0|4cg3jz,45,63,0|4cg3k0,47,59,1|4lt23z,47,59,1|4lt240,45,63,0|4v667z,45,63,0|4v6680,47,59,1|54j4rz,47,59,1|54j4s0,45,63,0|5dw8vz,45,63,0|5dw8w0,47,59,1|5n97fz,47,59,1|5n97g0,45,63,0|5wmbjz,45,63,0|5wmbk0,47,59,1|65za3z,47,59,1|65za40,45,63,0|6fce7z,45,63,0|6fce80,47,59,1|6p2bfz,47,59,1|6p2bg0,45,63,0|6y2gvz,45,63,0|6y2gw0,47,59,1|77se3z,47,59,1|77se40,45,63,0|7h5i7z,45,63,0|7h5i80,47,59,1|7qigrz,47,59,1|7qigs0,45,63,0|7zvkvz,45,63,0|7zvkw0,47,59,1|898jfz,47,59,1|898jg0,45,63,0|8ilnjz,45,63,0|8ilnk0,47,59,1|8rym3z,47,59,1|8rym40,45,63,0|908u7z,45,63,0|908u80,47,59,1|9aoorz,47,59,1|9aoos0,45,63,0|9iywvz,45,63,0|9iyww0,47,59,1|9trq3z,47,59,1|9trq40,45,63,0|a1ozjz,45,63,0|a1ozk0,47,59,1|achsrz,47,59,1|achss0,45,63,0|akf27z,45,63,0|akf280,47,59,1|av7vfz,47,59,1|av7vg0,45,63,0|b3i3jz,45,63,0|b3i3k0,47,59,1|bdxy3z,47,59,1|bdxy40,45,63,0|bm867z,45,63,0|bm8680,47,59,1|bwo0rz,47,59,1|bwo0s0,45,63,0|c4y8vz,45,63,0|c4y8w0,47,59,1|cfr23z,47,59,1|cfr240,45,63,0|cnobjz,45,63,0|cnobk0,47,59,1|cyh4rz,47,59,1|cyh4s0,45,63,0|d6ee7z,45,63,0|d6ee80,47,59,1|dh77fz,47,59,1|dh77g0,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxa3z,47,59,1|dzxa40,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|eincrz,47,59,1|eincs0,45,63,0|eqxkvz,45,63,0|eqxkw0,47,59,1|f1dffz,47,59,1|f1dfg0,45,63,0|f9nnjz,45,63,0|f9nnk0,47,59,1|fkggrz,47,59,1|fkggs0,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36jfz,47,59,1|g36jg0,45,63,0|gb3svz,45,63,0|gb3sw0,47,59,1|glwm3z,47,59,1|glwm40,45,63,0|gu6u7z,45,63,0|gu6u80,47,59,1|h4morz,47,59,1|h4mos0,45,63,0|hcwwvz,45,63,0|hcwww0,47,59,1|hncrfz,47,59,1|hncrg0,45,63,0|hvmzjz,45,63,0|hvmzk0,47,59,1|i6fsrz,47,59,1|i6fss0,45,63,0|ied27z,45,63,0|ied280,47,59,1|ip5vfz,47,59,1|ip5vg0,45,63,0|ix34vz,45,63,0|ix34w0,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jeqbjz,45,63,0|jeqbk0,47,59,1|jqyzfz,47,59,1|jqyzg0,45,63,0|jxge7z,45,63,0|jxge80,47,59,1|k9p23z,47,59,1|k9p240,45,63,0|kg6gvz,45,63,0|kg6gw0,47,59,1|ksf4rz,47,59,1|ksf4s0,45,63,0|kz9i7z,45,63,0|kz9i80,47,59,1|lbi63z,47,59,1|lbi640,45,63,0|lhzkvz,45,63,0|lhzkw0,47,59,1|lu88rz,47,59,1|lu88s0,45,63,0|m0pnjz,45,63,0|m0pnk0,47,59,1|mcybfz,47,59,1|mcybg0,45,63,0|mjfq7z,45,63,0|mjfq80,47,59,1|mvoe3z,47,59,1|mvoe40,45,63,0|n25svz,45,63,0|n25sw0,47,59,1|neegrz,47,59,1|neegs0,45,63,0|nkvvjz,45,63,0|nkvvk0,47,59,1|nx4jfz,47,59,1|nx4jg0,45,63,0|o3ywvz,45,63,0|o3yww0,47,59,1|og7krz,47,59,1|og7ks0,45,63,0|omozjz,45,63,0|omozk0,47,59,1|oyxnfz,47,59,1|oyxng0,45,63,0|p5f27z,45,63,0|p5f280,47,59,1|phnq3z,47,59,1|phnq40,45,63,0|po54vz,45,63,0|po54w0,47,59,1|q0dsrz,47,59,1|q0dss0,45,63,0|q6v7jz,45,63,0|q6v7k0,47,59,1|qj3vfz,47,59,1|qj3vg0,45,63,0|qpy8vz,45,63,0|qpy8w0,47,59,1|r26wrz,47,59,1|r26ws0,45,63,0|r8objz,45,63,0|r8obk0,47,59,1|rkwzfz,47,59,1|rkwzg0,45,63,0|rree7z,45,63,0|rree80,47,59,1|s3n23z,47,59,1|s3n240,45,63,0|sa4gvz,45,63,0|sa4gw0,47,59,1|smd4rz,47,59,1|smd4s0,45,63,0|ssujjz,45,63,0|ssujk0,47,59,1|t537fz,47,59,1|t537g0,45,63,0|tbkm7z,45,63,0|tbkm80,47,59,1|tnta3z,47,59,1|tnta40,45,63,0|tunnjz,45,63,0|tunnk0,47,59,1|u6wbfz,47,59,1|u6wbg0,45,63,0|uddq7z,45,63,0|uddq80,47,59,1|upme3z,47,59,1|upme40,45,63,0|uw3svz,45,63,0|uw3sw0,47,59,1|v8cgrz,47,59,1|v8cgs0,45,63,0|vetvjz,45,63,0|vetvk0,47,59,1|vr2jfz,47,59,1|vr2jg0,45,63,0|vxjy7z,45,63,0|vxjy80,47,59,1|w9sm3z,47,59,1|w9sm40,45,63,0|wgmzjz,45,63,0|wgmzk0,47,59,1|wsvnfz,47,59,1|wsvng0,45,63,0|wzd27z,45,63,0|wzd280,47,59,1|xblq3z,47,59,1|xblq40,45,63,0|xi34vz,45,63,0|xi34w0,47,59,1|xubsrz,47,59,1|xubss0,45,63,0|y0t7jz,45,63,0|y0t7k0,47,59,1|yd1vfz,47,59,1|yd1vg0,45,63,0|yjja7z,45,63,0|yjja80,47,59,1|yvry3z,47,59,1|yvry40,45,63,0|z29cvz,45,63,0|z29cw0,47,59,1|zei0rz,47,59,1|zei0s0,45,63,0|zlce7z,45,63,0|zlce80,47,59,1|zxl23z,47,59,1|zxl240,45,63,0|1042gvz,45,63,0|1042gw0,47,59,1|10gb4rz,47,59,1|10gb4s0,45,63,0|10msjjz,45,63,0|10msjk0,47,59,1|10z17fz,47,59,1|10z17g0,45,63,0|115im7z,45,63,0|115im80,47,59,1|11hra3z,47,59,1|11hra40,45,63,0|11o8ovz,45,63,0|11o8ow0,47,59,1|120hcrz,47,59,1|120hcs0,45,63,0|126yrjz,45,63,0|126yrk0,47,59,1|12j7ffz,47,59,1|12j7fg0,45,63,0|12q1svz,45,63,0|12q1sw0,47,59,1|132agrz,47,59,1|132ags0,45,63,0|138rvjz,45,63,0|138rvk0,47,59,1|13l0jfz,47,59,1|13l0jg0,45,63,0|13rhy7z,45,63,0|13rhy80,47,59,1|143qm3z,47,59,1|143qm40,45,63,0|14a80vz,45,63,0|14a80w0,47,59,1|14mgorz,47,59,1|14mgos0,45,63,0|14sy3jz,45,63,0|14sy3k0,47,59,1|1556rfz,47,59,1|1556rg0,45,63,0|15c14vz,45,63,0|15c14w0,47,59,1|15o9srz,47,59,1|15o9ss0,45,63,0|15ur7jz,45,63,0|15ur7k0,47,59,1|166zvfz,47,59,1|166zvg0,45,63,0|16dha7z,45,63,0|16dha80,47,59,1|16ppy3z,47,59,1|16ppy40,45,63,0|16w7cvz,45,63,0|16w7cw0,47,59,1|178g0rz,47,59,1|178g0s0,45,63,0|17exfjz,45,63,0|17exfk0,47,59,1|17r63fz,47,59,1|17r63g0,45,63,0|17xni7z,45,63,0|17xni80,47,59,1|189w63z,47,59,1|189w640,45,63,0|18gqjjz,45,63,0|18gqjk0,47,59,1|18sz7fz,47,59,1|18sz7g0,45,63,0|18zgm7z,45,63,0|18zgm80,47,59,1|19bpa3z,47,59,1|19bpa40,45,63,0|19i6ovz,45,63,0|19i6ow0,47,59,1|19ufcrz,47,59,1|19ufcs0,45,63,0|1a0wrjz,45,63,0|1a0wrk0,47,59,1|1ad5ffz,47,59,1|1ad5fg0,45,63,0|1ajmu7z,45,63,0|1ajmu80,47,59,1|1avvi3z,47,59,1|1avvi40,45,63,0|1b2pvjz,45,63,0|1b2pvk0,47,59,1|1beyjfz,47,59,1|1beyjg0,45,63,0|1blfy7z,45,63,0|1blfy80,47,59,1|1bxom3z,47,59,1|1bxom40,45,63,0|1c460vz,45,63,0|1c460w0,47,59,1|1cgeorz,47,59,1|1cgeos0,45,63,0|1cmw3jz,45,63,0|1cmw3k0,47,59,1|1cz4rfz,47,59,1|1cz4rg0,45,63,0|1d5m67z,45,63,0|1d5m680,47,59,1|1dhuu3z,47,59,1|1dhuu40,45,63,0|1doc8vz,45,63,0|1doc8w0,47,59,1|1e0kwrz,47,59,1|1e0kws0,45,63,0|1e7fa7z,45,63,0|1e7fa80,47,59,1|1ejny3z,47,59,1|1ejny40,45,63,0|1eq5cvz,45,63,0|1eq5cw0,47,59,1|1f2e0rz,47,59,1|1f2e0s0,45,63,0|1f8vfjz,45,63,0|1f8vfk0,47,59,1|1fl43fz,47,59,1|1fl43g0,45,63,0|1frli7z,45,63,0|1frli80,47,59,1|1g3u63z,47,59,1|1g3u640,45,63,0|1gabkvz,45,63,0|1gabkw0,47,59,1|1gmk8rz,47,59,1|1gmk8s0,45,63,0|1gt1njz,45,63,0|1gt1nk0,47,59,1|1h5abfz,47,59,1|1h5abg0,45,63,0|1hc4ovz,45,63,0|1hc4ow0,47,59,1|1hodcrz,47,59,1|1hodcs0,45,63,0|1huurjz,45,63,0|1huurk0,47,59,1|1i73ffz,47,59,1|1i73fg0,45,63,0|1idku7z,45,63,0|1idku80,47,59,1|1ipti3z,47,59,1|1ipti40,45,63,0|1iwawvz,45,63,0|1iwaww0,47,59,1|1j8jkrz,47,59,1|1j8jks0,45,63,0|1jf0zjz,45,63,0|1jf0zk0,47,59,1|1jr9nfz,47,59,1|1jr9ng0,45,63,0|1jy40vz,45,63,0|1jy40w0,47,59,1|1kacorz,47,59,1|1kacos0,45,63,0|1kgu3jz,45,63,0|1kgu3k0,47,59,1|1kt2rfz,47,59,1|1kt2rg0,45,63,0|1kzk67z,45,63,0|1kzk680,47,59,1|1lbsu3z,47,59,1|1lbsu40,45,63,0|1lia8vz,45,63,0|1lia8w0,47,59,1|1luiwrz,47,59,1|1luiws0,45,63,0|1m10bjz,45,63,0|1m10bk0,47,59,1|1md8zfz,47,59,1|1md8zg0,45,63,0|1mjqe7z,45,63,0|1mjqe80,47,59,1|1mvz23z,47,59,1|1mvz240,45,63,0|1n2tfjz,45,63,0|1n2tfk0,47,59,1|1nf23fz,47,59,1|1nf23g0,45,63,0|1nlji7z,45,63,0|1nlji80,47,59,1|1nxs63z,47,59,1|1nxs640,45,63,0|1o49kvz,45,63,0|1o49kw0,47,59,1|1ogi8rz,47,59,1|1ogi8s0,45,63,0|1omznjz,45,63,0|1omznk0,47,59,1|1oz8bfz,47,59,1|1oz8bg0,45,63,0|1p5pq7z,45,63,0|1p5pq80,47,59,1|1phye3z,47,59,1|1phye40,45,63,0|1posrjz,45,63,0|1posrk0,47,59,1|1q11ffz,47,59,1|1q11fg0,45,63,0|1q7iu7z,45,63,0|1q7iu80,47,59,1|1qjri3z,47,59,1|1qjri40,45,63,0|1qq8wvz,45,63,0|1qq8ww0,47,59,1|1r2hkrz,47,59,1|1r2hks0,45,63,0|1r8yzjz,45,63,0|1r8yzk0,47,59,1|1rl7nfz,47,59,1|1rl7ng0,45,63,0|1rrp27z,45,63,0|1rrp280,47,59,1|1s3xq3z,47,59,1|1s3xq40,45,63,0|1saf4vz,45,63,0|1saf4w0,47,59,1|1smnsrz,47,59,1|1smnss0,45,63,0|1sti67z,45,63,0|1sti680,47,59,1|1t5qu3z,47,59,1|1t5qu40,45,63,0|1tc88vz,45,63,0|1tc88w0,47,59,1|1togwrz,47,59,1|1togws0,45,63,0|1tuybjz,45,63,0|1tuybk0,47,59,1|1u76zfz,47,59,1|1u76zg0,45,63,0|1udoe7z,45,63,0|1udoe80,47,59,1|1upx23z,47,59,1|1upx240,45,63,0|1uwegvz,45,63,0|1uwegw0,47,59,1|1v8n4rz,47,59,1|1v8n4s0,45,63,0|1vf4jjz,45,63,0|1vf4jk0,47,59,1|1vrd7fz,47,59,1|1vrd7g0,45,63,0|NaN,45,63,0",
        "America/Merida|,0,135,0|-p1u7c1,0,135,0|-p1u7c0,45,63,0|69667z,45,63,0|696680,43,59,0|6p60rz,43,59,0|6p60s0,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxa3z,47,59,1|dzxa40,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|eincrz,47,59,1|eincs0,45,63,0|eqxkvz,45,63,0|eqxkw0,47,59,1|f1dffz,47,59,1|f1dfg0,45,63,0|f9nnjz,45,63,0|f9nnk0,47,59,1|fkggrz,47,59,1|fkggs0,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36jfz,47,59,1|g36jg0,45,63,0|gcwm7z,45,63,0|gcwm80,47,59,1|gkgrfz,47,59,1|gkgrg0,45,63,0|gu6u7z,45,63,0|gu6u80,47,59,1|h4morz,47,59,1|h4mos0,45,63,0|hcwwvz,45,63,0|hcwww0,47,59,1|hncrfz,47,59,1|hncrg0,45,63,0|hvmzjz,45,63,0|hvmzk0,47,59,1|i6fsrz,47,59,1|i6fss0,45,63,0|ied27z,45,63,0|ied280,47,59,1|ip5vfz,47,59,1|ip5vg0,45,63,0|ix34vz,45,63,0|ix34w0,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jft7jz,45,63,0|jft7k0,47,59,1|jqm0rz,47,59,1|jqm0s0,45,63,0|jyw8vz,45,63,0|jyw8w0,47,59,1|k9c3fz,47,59,1|k9c3g0,45,63,0|khmbjz,45,63,0|khmbk0,47,59,1|ks263z,47,59,1|ks2640,45,63,0|l0ce7z,45,63,0|l0ce80,47,59,1|lb57fz,47,59,1|lb57g0,45,63,0|lj2gvz,45,63,0|lj2gw0,47,59,1|ltva3z,47,59,1|ltva40,45,63,0|m1sjjz,45,63,0|m1sjk0,47,59,1|mclcrz,47,59,1|mclcs0,45,63,0|mkvkvz,45,63,0|mkvkw0,47,59,1|mvbffz,47,59,1|mvbfg0,45,63,0|n3lnjz,45,63,0|n3lnk0,47,59,1|ne1i3z,47,59,1|ne1i40,45,63,0|nmbq7z,45,63,0|nmbq80,47,59,1|nwrkrz,47,59,1|nwrks0,45,63,0|o51svz,45,63,0|o51sw0,47,59,1|ofum3z,47,59,1|ofum40,45,63,0|onrvjz,45,63,0|onrvk0,47,59,1|oykorz,47,59,1|oykos0,45,63,0|p6hy7z,45,63,0|p6hy80,47,59,1|pharfz,47,59,1|pharg0,45,63,0|ppkzjz,45,63,0|ppkzk0,47,59,1|q00u3z,47,59,1|q00u40,45,63,0|q8b27z,45,63,0|q8b280,47,59,1|qiqwrz,47,59,1|qiqws0,45,63,0|qr14vz,45,63,0|qr14w0,47,59,1|r1ty3z,47,59,1|r1ty40,45,63,0|r9r7jz,45,63,0|r9r7k0,47,59,1|rkk0rz,47,59,1|rkk0s0,45,63,0|NaN,45,63,0",
        "America/Metlakatla|,0,136,0|-1hc7qk0,0,136,0|-1hc7qjz,0,137,0|-1078wyv,0,137,0|-1078wyu,55,38,0|-ek1w81,55,38,0|-ek1w80,67,62,1|-cq2tg1,67,62,1|-cq2tg0,68,62,1|-cnov01,68,62,1|-cnov00,55,38,0|-csc81,55,38,0|-csc80,56,62,1|-3fdo1,56,62,1|-3fdo0,55,38,0|5xqfz,55,38,0|5xqg0,56,62,1|faozz,56,62,1|fap00,55,38,0|ont3z,55,38,0|ont40,56,62,1|ydqbz,56,62,1|ydqc0,55,38,0|17qufz,55,38,0|17qug0,56,62,1|1h3szz,56,62,1|1h3t00,55,38,0|1qgx3z,55,38,0|1qgx40,56,62,1|1ztvnz,56,62,1|1ztvo0,55,38,0|23fl3z,55,38,0|23fl40,56,62,1|2ijybz,56,62,1|2ijyc0,55,38,0|2ooefz,55,38,0|2ooeg0,56,62,1|31a0zz,56,62,1|31a100,55,38,0|3an53z,55,38,0|3an540,56,62,1|3kd2bz,56,62,1|3kd2c0,55,38,0|3td7rz,55,38,0|3td7s0,56,62,1|4334zz,56,62,1|433500,55,38,0|4cg93z,55,38,0|4cg940,56,62,1|4lt7nz,56,62,1|4lt7o0,55,38,0|4v6brz,55,38,0|4v6bs0,56,62,1|54jabz,56,62,1|54jac0,55,38,0|5dwefz,55,38,0|5dweg0,56,62,1|5n9czz,56,62,1|5n9d00,55,38,0|5wmh3z,55,38,0|5wmh40,56,62,1|65zfnz,56,62,1|65zfo0,55,38,0|6fcjrz,55,38,0|6fcjs0,56,62,1|6p2gzz,56,62,1|6p2h00,55,38,0|6y2mfz,55,38,0|6y2mg0,56,62,1|77sjnz,56,62,1|77sjo0,55,38,0|nx4rrz,55,38,0|nx4rs0,36,35,0|o3z57z,36,35,0|o3z580,37,38,1|og7t3z,37,38,1|og7t40,36,35,0|omp7vz,36,35,0|omp7w0,37,38,1|oyxvrz,37,38,1|oyxvs0,36,35,0|p5fajz,36,35,0|p5fak0,37,38,1|phnyfz,37,38,1|phnyg0,55,38,0|plmjrz,55,38,0|plmjs0,36,35,0|po5d7z,36,35,0|po5d80,37,38,1|q0e13z,37,38,1|q0e140,36,35,0|q6vfvz,36,35,0|q6vfw0,37,38,1|qj43rz,37,38,1|qj43s0,36,35,0|qpyh7z,36,35,0|qpyh80,37,38,1|r2753z,37,38,1|r27540,36,35,0|r8ojvz,36,35,0|r8ojw0,37,38,1|rkx7rz,37,38,1|rkx7s0,36,35,0|rremjz,36,35,0|rremk0,37,38,1|s3nafz,37,38,1|s3nag0,36,35,0|sa4p7z,36,35,0|sa4p80,37,38,1|smdd3z,37,38,1|smdd40,36,35,0|ssurvz,36,35,0|ssurw0,37,38,1|t53frz,37,38,1|t53fs0,36,35,0|tbkujz,36,35,0|tbkuk0,37,38,1|tntifz,37,38,1|tntig0,36,35,0|tunvvz,36,35,0|tunvw0,37,38,1|u6wjrz,37,38,1|u6wjs0,36,35,0|uddyjz,36,35,0|uddyk0,37,38,1|upmmfz,37,38,1|upmmg0,36,35,0|uw417z,36,35,0|uw4180,37,38,1|v8cp3z,37,38,1|v8cp40,36,35,0|veu3vz,36,35,0|veu3w0,37,38,1|vr2rrz,37,38,1|vr2rs0,36,35,0|vxk6jz,36,35,0|vxk6k0,37,38,1|w9sufz,37,38,1|w9sug0,36,35,0|wgn7vz,36,35,0|wgn7w0,37,38,1|wsvvrz,37,38,1|wsvvs0,36,35,0|wzdajz,36,35,0|wzdak0,37,38,1|xblyfz,37,38,1|xblyg0,36,35,0|xi3d7z,36,35,0|xi3d80,37,38,1|xuc13z,37,38,1|xuc140,36,35,0|y0tfvz,36,35,0|y0tfw0,37,38,1|yd23rz,37,38,1|yd23s0,36,35,0|yjjijz,36,35,0|yjjik0,37,38,1|yvs6fz,37,38,1|yvs6g0,36,35,0|z29l7z,36,35,0|z29l80,37,38,1|zei93z,37,38,1|zei940,36,35,0|zlcmjz,36,35,0|zlcmk0,37,38,1|zxlafz,37,38,1|zxlag0,36,35,0|1042p7z,36,35,0|1042p80,37,38,1|10gbd3z,37,38,1|10gbd40,36,35,0|10msrvz,36,35,0|10msrw0,37,38,1|10z1frz,37,38,1|10z1fs0,36,35,0|115iujz,36,35,0|115iuk0,37,38,1|11hrifz,37,38,1|11hrig0,36,35,0|11o8x7z,36,35,0|11o8x80,37,38,1|120hl3z,37,38,1|120hl40,36,35,0|126yzvz,36,35,0|126yzw0,37,38,1|12j7nrz,37,38,1|12j7ns0,36,35,0|12q217z,36,35,0|12q2180,37,38,1|132ap3z,37,38,1|132ap40,36,35,0|138s3vz,36,35,0|138s3w0,37,38,1|13l0rrz,37,38,1|13l0rs0,36,35,0|13ri6jz,36,35,0|13ri6k0,37,38,1|143qufz,37,38,1|143qug0,36,35,0|14a897z,36,35,0|14a8980,37,38,1|14mgx3z,37,38,1|14mgx40,36,35,0|14sybvz,36,35,0|14sybw0,37,38,1|1556zrz,37,38,1|1556zs0,36,35,0|15c1d7z,36,35,0|15c1d80,37,38,1|15oa13z,37,38,1|15oa140,36,35,0|15urfvz,36,35,0|15urfw0,37,38,1|16703rz,37,38,1|16703s0,36,35,0|16dhijz,36,35,0|16dhik0,37,38,1|16pq6fz,37,38,1|16pq6g0,36,35,0|16w7l7z,36,35,0|16w7l80,37,38,1|178g93z,37,38,1|178g940,36,35,0|17exnvz,36,35,0|17exnw0,37,38,1|17r6brz,37,38,1|17r6bs0,36,35,0|17xnqjz,36,35,0|17xnqk0,37,38,1|189wefz,37,38,1|189weg0,36,35,0|18gqrvz,36,35,0|18gqrw0,37,38,1|18szfrz,37,38,1|18szfs0,36,35,0|18zgujz,36,35,0|18zguk0,37,38,1|19bpifz,37,38,1|19bpig0,36,35,0|19i6x7z,36,35,0|19i6x80,37,38,1|19ufl3z,37,38,1|19ufl40,36,35,0|1a0wzvz,36,35,0|1a0wzw0,37,38,1|1ad5nrz,37,38,1|1ad5ns0,36,35,0|1ajn2jz,36,35,0|1ajn2k0,37,38,1|1avvqfz,37,38,1|1avvqg0,36,35,0|1b2q3vz,36,35,0|1b2q3w0,37,38,1|1beyrrz,37,38,1|1beyrs0,36,35,0|1blg6jz,36,35,0|1blg6k0,37,38,1|1bxoufz,37,38,1|1bxoug0,36,35,0|1c4697z,36,35,0|1c46980,37,38,1|1cgex3z,37,38,1|1cgex40,36,35,0|1cmwbvz,36,35,0|1cmwbw0,37,38,1|1cz4zrz,37,38,1|1cz4zs0,36,35,0|1d5mejz,36,35,0|1d5mek0,37,38,1|1dhv2fz,37,38,1|1dhv2g0,36,35,0|1doch7z,36,35,0|1doch80,37,38,1|1e0l53z,37,38,1|1e0l540,36,35,0|1e7fijz,36,35,0|1e7fik0,37,38,1|1ejo6fz,37,38,1|1ejo6g0,36,35,0|1eq5l7z,36,35,0|1eq5l80,37,38,1|1f2e93z,37,38,1|1f2e940,36,35,0|1f8vnvz,36,35,0|1f8vnw0,37,38,1|1fl4brz,37,38,1|1fl4bs0,36,35,0|1frlqjz,36,35,0|1frlqk0,37,38,1|1g3uefz,37,38,1|1g3ueg0,36,35,0|1gabt7z,36,35,0|1gabt80,37,38,1|1gmkh3z,37,38,1|1gmkh40,36,35,0|1gt1vvz,36,35,0|1gt1vw0,37,38,1|1h5ajrz,37,38,1|1h5ajs0,36,35,0|1hc4x7z,36,35,0|1hc4x80,37,38,1|1hodl3z,37,38,1|1hodl40,36,35,0|1huuzvz,36,35,0|1huuzw0,37,38,1|1i73nrz,37,38,1|1i73ns0,36,35,0|1idl2jz,36,35,0|1idl2k0,37,38,1|1iptqfz,37,38,1|1iptqg0,36,35,0|1iwb57z,36,35,0|1iwb580,37,38,1|1j8jt3z,37,38,1|1j8jt40,36,35,0|1jf17vz,36,35,0|1jf17w0,37,38,1|1jr9vrz,37,38,1|1jr9vs0,36,35,0|1jy497z,36,35,0|1jy4980,37,38,1|1kacx3z,37,38,1|1kacx40,36,35,0|1kgubvz,36,35,0|1kgubw0,37,38,1|1kt2zrz,37,38,1|1kt2zs0,36,35,0|1kzkejz,36,35,0|1kzkek0,37,38,1|1lbt2fz,37,38,1|1lbt2g0,36,35,0|1liah7z,36,35,0|1liah80,37,38,1|1luj53z,37,38,1|1luj540,36,35,0|1m10jvz,36,35,0|1m10jw0,37,38,1|1md97rz,37,38,1|1md97s0,36,35,0|1mjqmjz,36,35,0|1mjqmk0,37,38,1|1mvzafz,37,38,1|1mvzag0,36,35,0|1n2tnvz,36,35,0|1n2tnw0,37,38,1|1nf2brz,37,38,1|1nf2bs0,36,35,0|1nljqjz,36,35,0|1nljqk0,37,38,1|1nxsefz,37,38,1|1nxseg0,36,35,0|1o49t7z,36,35,0|1o49t80,37,38,1|1ogih3z,37,38,1|1ogih40,36,35,0|1omzvvz,36,35,0|1omzvw0,37,38,1|1oz8jrz,37,38,1|1oz8js0,36,35,0|1p5pyjz,36,35,0|1p5pyk0,37,38,1|1phymfz,37,38,1|1phymg0,36,35,0|1poszvz,36,35,0|1poszw0,37,38,1|1q11nrz,37,38,1|1q11ns0,36,35,0|1q7j2jz,36,35,0|1q7j2k0,37,38,1|1qjrqfz,37,38,1|1qjrqg0,36,35,0|1qq957z,36,35,0|1qq9580,37,38,1|1r2ht3z,37,38,1|1r2ht40,36,35,0|1r8z7vz,36,35,0|1r8z7w0,37,38,1|1rl7vrz,37,38,1|1rl7vs0,36,35,0|1rrpajz,36,35,0|1rrpak0,37,38,1|1s3xyfz,37,38,1|1s3xyg0,36,35,0|1safd7z,36,35,0|1safd80,37,38,1|1smo13z,37,38,1|1smo140,36,35,0|1stiejz,36,35,0|1stiek0,37,38,1|1t5r2fz,37,38,1|1t5r2g0,36,35,0|1tc8h7z,36,35,0|1tc8h80,37,38,1|1toh53z,37,38,1|1toh540,36,35,0|1tuyjvz,36,35,0|1tuyjw0,37,38,1|1u777rz,37,38,1|1u777s0,36,35,0|1udomjz,36,35,0|1udomk0,37,38,1|1upxafz,37,38,1|1upxag0,36,35,0|1uwep7z,36,35,0|1uwep80,37,38,1|1v8nd3z,37,38,1|1v8nd40,36,35,0|1vf4rvz,36,35,0|1vf4rw0,37,38,1|1vrdfrz,37,38,1|1vrdfs0,36,35,0|NaN,36,35,0",
        "America/Mexico_City|,0,138,0|-p1u4k1,0,138,0|-p1u4k0,44,62,0|-m7ock1,44,62,0|-m7ock0,45,63,0|-kf67c1,45,63,0|-kf67c0,44,62,0|-k6mpw1,44,62,0|-k6mpw0,46,63,1|-jypm01,46,63,1|-jypm00,44,62,0|-jpan81,44,62,0|-jpan80,45,63,0|-g4n8o1,45,63,0|-g4n8o0,47,59,1|-fxg241,47,59,1|-fxg240,45,63,0|-f60y01,45,63,0|-f60y00,47,59,1|-f07rg1,47,59,1|-f07rg0,45,63,0|-dlc7c1,45,63,0|-dlc7c0,51,59,1|-deaks1,51,59,1|-deaks0,45,63,0|-adljc1,45,63,0|-adljc0,47,59,1|-a4yi41,47,59,1|-a4yi40,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxa3z,47,59,1|dzxa40,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|eincrz,47,59,1|eincs0,45,63,0|eqxkvz,45,63,0|eqxkw0,47,59,1|f1dffz,47,59,1|f1dfg0,45,63,0|f9nnjz,45,63,0|f9nnk0,47,59,1|fkggrz,47,59,1|fkggs0,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36jfz,47,59,1|g36jg0,45,63,0|gcwm7z,45,63,0|gcwm80,47,59,1|gkgrfz,47,59,1|gkgrg0,45,63,0|gu6u7z,45,63,0|gu6u80,47,59,1|h4morz,47,59,1|h4mos0,45,63,0|hcwwvz,45,63,0|hcwww0,47,59,1|hncrfz,47,59,1|hncrg0,45,63,0|hvmzjz,45,63,0|hvmzk0,47,59,1|i6fsrz,47,59,1|i6fss0,45,63,0|ied27z,45,63,0|ied280,47,59,1|ip5vfz,47,59,1|ip5vg0,45,63,0|ix34vz,45,63,0|ix34w0,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jft7jz,45,63,0|jft7k0,47,59,1|jqm0rz,47,59,1|jqm0s0,45,63,0|jyw8vz,45,63,0|jyw8w0,47,59,1|k9c3fz,47,59,1|k9c3g0,45,63,0|khmbjz,45,63,0|khmbk0,47,59,1|ks263z,47,59,1|ks2640,45,63,0|l0ce7z,45,63,0|l0ce80,47,59,1|lb57fz,47,59,1|lb57g0,45,63,0|lj2gvz,45,63,0|lj2gw0,47,59,1|ltva3z,47,59,1|ltva40,45,63,0|m1sjjz,45,63,0|m1sjk0,47,59,1|mclcrz,47,59,1|mclcs0,45,63,0|mkvkvz,45,63,0|mkvkw0,47,59,1|mvbffz,47,59,1|mvbfg0,45,63,0|n3lnjz,45,63,0|n3lnk0,47,59,1|ne1i3z,47,59,1|ne1i40,45,63,0|nmbq7z,45,63,0|nmbq80,47,59,1|nwrkrz,47,59,1|nwrks0,45,63,0|o51svz,45,63,0|o51sw0,47,59,1|ofum3z,47,59,1|ofum40,45,63,0|onrvjz,45,63,0|onrvk0,47,59,1|oykorz,47,59,1|oykos0,45,63,0|p6hy7z,45,63,0|p6hy80,47,59,1|pharfz,47,59,1|pharg0,45,63,0|ppkzjz,45,63,0|ppkzk0,47,59,1|q00u3z,47,59,1|q00u40,45,63,0|q8b27z,45,63,0|q8b280,47,59,1|qiqwrz,47,59,1|qiqws0,45,63,0|qr14vz,45,63,0|qr14w0,47,59,1|r1ty3z,47,59,1|r1ty40,45,63,0|r9r7jz,45,63,0|r9r7k0,47,59,1|rkk0rz,47,59,1|rkk0s0,45,63,0|NaN,45,63,0",
        "America/Miquelon|,0,139,0|-uk1k9l,0,139,0|-uk1k9k,31,40,0|5e3cfz,31,40,0|5e3cg0,38,41,0|908lvz,38,41,0|908lw0,39,43,1|9aogfz,39,43,1|9aogg0,38,41,0|9iyojz,38,41,0|9iyok0,39,43,1|9trhrz,39,43,1|9trhs0,38,41,0|a1or7z,38,41,0|a1or80,39,43,1|achkfz,39,43,1|achkg0,38,41,0|aketvz,38,41,0|aketw0,39,43,1|av7n3z,39,43,1|av7n40,38,41,0|b3hv7z,38,41,0|b3hv80,39,43,1|bdxprz,39,43,1|bdxps0,38,41,0|bm7xvz,38,41,0|bm7xw0,39,43,1|bwnsfz,39,43,1|bwnsg0,38,41,0|c4y0jz,38,41,0|c4y0k0,39,43,1|cfqtrz,39,43,1|cfqts0,38,41,0|cno37z,38,41,0|cno380,39,43,1|cygwfz,39,43,1|cygwg0,38,41,0|d6e5vz,38,41,0|d6e5w0,39,43,1|dh6z3z,39,43,1|dh6z40,38,41,0|dph77z,38,41,0|dph780,39,43,1|dzx1rz,39,43,1|dzx1s0,38,41,0|e879vz,38,41,0|e879w0,39,43,1|ein4fz,39,43,1|ein4g0,38,41,0|eqxcjz,38,41,0|eqxck0,39,43,1|f1d73z,39,43,1|f1d740,38,41,0|f9nf7z,38,41,0|f9nf80,39,43,1|fkg8fz,39,43,1|fkg8g0,38,41,0|fsdhvz,38,41,0|fsdhw0,39,43,1|g36b3z,39,43,1|g36b40,38,41,0|gb3kjz,38,41,0|gb3kk0,39,43,1|glwdrz,39,43,1|glwds0,38,41,0|gu6lvz,38,41,0|gu6lw0,39,43,1|h4mgfz,39,43,1|h4mgg0,38,41,0|hcwojz,38,41,0|hcwok0,39,43,1|hncj3z,39,43,1|hncj40,38,41,0|hvmr7z,38,41,0|hvmr80,39,43,1|i6fkfz,39,43,1|i6fkg0,38,41,0|iectvz,38,41,0|iectw0,39,43,1|ip5n3z,39,43,1|ip5n40,38,41,0|ix2wjz,38,41,0|ix2wk0,39,43,1|j7vprz,39,43,1|j7vps0,38,41,0|jeq37z,38,41,0|jeq380,39,43,1|jqyr3z,39,43,1|jqyr40,38,41,0|jxg5vz,38,41,0|jxg5w0,39,43,1|k9otrz,39,43,1|k9ots0,38,41,0|kg68jz,38,41,0|kg68k0,39,43,1|ksewfz,39,43,1|ksewg0,38,41,0|kz99vz,38,41,0|kz99w0,39,43,1|lbhxrz,39,43,1|lbhxs0,38,41,0|lhzcjz,38,41,0|lhzck0,39,43,1|lu80fz,39,43,1|lu80g0,38,41,0|m0pf7z,38,41,0|m0pf80,39,43,1|mcy33z,39,43,1|mcy340,38,41,0|mjfhvz,38,41,0|mjfhw0,39,43,1|mvo5rz,39,43,1|mvo5s0,38,41,0|n25kjz,38,41,0|n25kk0,39,43,1|nee8fz,39,43,1|nee8g0,38,41,0|nkvn7z,38,41,0|nkvn80,39,43,1|nx4b3z,39,43,1|nx4b40,38,41,0|o3yojz,38,41,0|o3yok0,39,43,1|og7cfz,39,43,1|og7cg0,38,41,0|omor7z,38,41,0|omor80,39,43,1|oyxf3z,39,43,1|oyxf40,38,41,0|p5etvz,38,41,0|p5etw0,39,43,1|phnhrz,39,43,1|phnhs0,38,41,0|po4wjz,38,41,0|po4wk0,39,43,1|q0dkfz,39,43,1|q0dkg0,38,41,0|q6uz7z,38,41,0|q6uz80,39,43,1|qj3n3z,39,43,1|qj3n40,38,41,0|qpy0jz,38,41,0|qpy0k0,39,43,1|r26ofz,39,43,1|r26og0,38,41,0|r8o37z,38,41,0|r8o380,39,43,1|rkwr3z,39,43,1|rkwr40,38,41,0|rre5vz,38,41,0|rre5w0,39,43,1|s3mtrz,39,43,1|s3mts0,38,41,0|sa48jz,38,41,0|sa48k0,39,43,1|smcwfz,39,43,1|smcwg0,38,41,0|ssub7z,38,41,0|ssub80,39,43,1|t52z3z,39,43,1|t52z40,38,41,0|tbkdvz,38,41,0|tbkdw0,39,43,1|tnt1rz,39,43,1|tnt1s0,38,41,0|tunf7z,38,41,0|tunf80,39,43,1|u6w33z,39,43,1|u6w340,38,41,0|uddhvz,38,41,0|uddhw0,39,43,1|upm5rz,39,43,1|upm5s0,38,41,0|uw3kjz,38,41,0|uw3kk0,39,43,1|v8c8fz,39,43,1|v8c8g0,38,41,0|vetn7z,38,41,0|vetn80,39,43,1|vr2b3z,39,43,1|vr2b40,38,41,0|vxjpvz,38,41,0|vxjpw0,39,43,1|w9sdrz,39,43,1|w9sds0,38,41,0|wgmr7z,38,41,0|wgmr80,39,43,1|wsvf3z,39,43,1|wsvf40,38,41,0|wzctvz,38,41,0|wzctw0,39,43,1|xblhrz,39,43,1|xblhs0,38,41,0|xi2wjz,38,41,0|xi2wk0,39,43,1|xubkfz,39,43,1|xubkg0,38,41,0|y0sz7z,38,41,0|y0sz80,39,43,1|yd1n3z,39,43,1|yd1n40,38,41,0|yjj1vz,38,41,0|yjj1w0,39,43,1|yvrprz,39,43,1|yvrps0,38,41,0|z294jz,38,41,0|z294k0,39,43,1|zehsfz,39,43,1|zehsg0,38,41,0|zlc5vz,38,41,0|zlc5w0,39,43,1|zxktrz,39,43,1|zxkts0,38,41,0|10428jz,38,41,0|10428k0,39,43,1|10gawfz,39,43,1|10gawg0,38,41,0|10msb7z,38,41,0|10msb80,39,43,1|10z0z3z,39,43,1|10z0z40,38,41,0|115idvz,38,41,0|115idw0,39,43,1|11hr1rz,39,43,1|11hr1s0,38,41,0|11o8gjz,38,41,0|11o8gk0,39,43,1|120h4fz,39,43,1|120h4g0,38,41,0|126yj7z,38,41,0|126yj80,39,43,1|12j773z,39,43,1|12j7740,38,41,0|12q1kjz,38,41,0|12q1kk0,39,43,1|132a8fz,39,43,1|132a8g0,38,41,0|138rn7z,38,41,0|138rn80,39,43,1|13l0b3z,39,43,1|13l0b40,38,41,0|13rhpvz,38,41,0|13rhpw0,39,43,1|143qdrz,39,43,1|143qds0,38,41,0|14a7sjz,38,41,0|14a7sk0,39,43,1|14mggfz,39,43,1|14mggg0,38,41,0|14sxv7z,38,41,0|14sxv80,39,43,1|1556j3z,39,43,1|1556j40,38,41,0|15c0wjz,38,41,0|15c0wk0,39,43,1|15o9kfz,39,43,1|15o9kg0,38,41,0|15uqz7z,38,41,0|15uqz80,39,43,1|166zn3z,39,43,1|166zn40,38,41,0|16dh1vz,38,41,0|16dh1w0,39,43,1|16ppprz,39,43,1|16ppps0,38,41,0|16w74jz,38,41,0|16w74k0,39,43,1|178fsfz,39,43,1|178fsg0,38,41,0|17ex77z,38,41,0|17ex780,39,43,1|17r5v3z,39,43,1|17r5v40,38,41,0|17xn9vz,38,41,0|17xn9w0,39,43,1|189vxrz,39,43,1|189vxs0,38,41,0|18gqb7z,38,41,0|18gqb80,39,43,1|18syz3z,39,43,1|18syz40,38,41,0|18zgdvz,38,41,0|18zgdw0,39,43,1|19bp1rz,39,43,1|19bp1s0,38,41,0|19i6gjz,38,41,0|19i6gk0,39,43,1|19uf4fz,39,43,1|19uf4g0,38,41,0|1a0wj7z,38,41,0|1a0wj80,39,43,1|1ad573z,39,43,1|1ad5740,38,41,0|1ajmlvz,38,41,0|1ajmlw0,39,43,1|1avv9rz,39,43,1|1avv9s0,38,41,0|1b2pn7z,38,41,0|1b2pn80,39,43,1|1beyb3z,39,43,1|1beyb40,38,41,0|1blfpvz,38,41,0|1blfpw0,39,43,1|1bxodrz,39,43,1|1bxods0,38,41,0|1c45sjz,38,41,0|1c45sk0,39,43,1|1cgegfz,39,43,1|1cgegg0,38,41,0|1cmvv7z,38,41,0|1cmvv80,39,43,1|1cz4j3z,39,43,1|1cz4j40,38,41,0|1d5lxvz,38,41,0|1d5lxw0,39,43,1|1dhulrz,39,43,1|1dhuls0,38,41,0|1doc0jz,38,41,0|1doc0k0,39,43,1|1e0kofz,39,43,1|1e0kog0,38,41,0|1e7f1vz,38,41,0|1e7f1w0,39,43,1|1ejnprz,39,43,1|1ejnps0,38,41,0|1eq54jz,38,41,0|1eq54k0,39,43,1|1f2dsfz,39,43,1|1f2dsg0,38,41,0|1f8v77z,38,41,0|1f8v780,39,43,1|1fl3v3z,39,43,1|1fl3v40,38,41,0|1frl9vz,38,41,0|1frl9w0,39,43,1|1g3txrz,39,43,1|1g3txs0,38,41,0|1gabcjz,38,41,0|1gabck0,39,43,1|1gmk0fz,39,43,1|1gmk0g0,38,41,0|1gt1f7z,38,41,0|1gt1f80,39,43,1|1h5a33z,39,43,1|1h5a340,38,41,0|1hc4gjz,38,41,0|1hc4gk0,39,43,1|1hod4fz,39,43,1|1hod4g0,38,41,0|1huuj7z,38,41,0|1huuj80,39,43,1|1i7373z,39,43,1|1i73740,38,41,0|1idklvz,38,41,0|1idklw0,39,43,1|1ipt9rz,39,43,1|1ipt9s0,38,41,0|1iwaojz,38,41,0|1iwaok0,39,43,1|1j8jcfz,39,43,1|1j8jcg0,38,41,0|1jf0r7z,38,41,0|1jf0r80,39,43,1|1jr9f3z,39,43,1|1jr9f40,38,41,0|1jy3sjz,38,41,0|1jy3sk0,39,43,1|1kacgfz,39,43,1|1kacgg0,38,41,0|1kgtv7z,38,41,0|1kgtv80,39,43,1|1kt2j3z,39,43,1|1kt2j40,38,41,0|1kzjxvz,38,41,0|1kzjxw0,39,43,1|1lbslrz,39,43,1|1lbsls0,38,41,0|1lia0jz,38,41,0|1lia0k0,39,43,1|1luiofz,39,43,1|1luiog0,38,41,0|1m1037z,38,41,0|1m10380,39,43,1|1md8r3z,39,43,1|1md8r40,38,41,0|1mjq5vz,38,41,0|1mjq5w0,39,43,1|1mvytrz,39,43,1|1mvyts0,38,41,0|1n2t77z,38,41,0|1n2t780,39,43,1|1nf1v3z,39,43,1|1nf1v40,38,41,0|1nlj9vz,38,41,0|1nlj9w0,39,43,1|1nxrxrz,39,43,1|1nxrxs0,38,41,0|1o49cjz,38,41,0|1o49ck0,39,43,1|1ogi0fz,39,43,1|1ogi0g0,38,41,0|1omzf7z,38,41,0|1omzf80,39,43,1|1oz833z,39,43,1|1oz8340,38,41,0|1p5phvz,38,41,0|1p5phw0,39,43,1|1phy5rz,39,43,1|1phy5s0,38,41,0|1posj7z,38,41,0|1posj80,39,43,1|1q1173z,39,43,1|1q11740,38,41,0|1q7ilvz,38,41,0|1q7ilw0,39,43,1|1qjr9rz,39,43,1|1qjr9s0,38,41,0|1qq8ojz,38,41,0|1qq8ok0,39,43,1|1r2hcfz,39,43,1|1r2hcg0,38,41,0|1r8yr7z,38,41,0|1r8yr80,39,43,1|1rl7f3z,39,43,1|1rl7f40,38,41,0|1rrotvz,38,41,0|1rrotw0,39,43,1|1s3xhrz,39,43,1|1s3xhs0,38,41,0|1saewjz,38,41,0|1saewk0,39,43,1|1smnkfz,39,43,1|1smnkg0,38,41,0|1sthxvz,38,41,0|1sthxw0,39,43,1|1t5qlrz,39,43,1|1t5qls0,38,41,0|1tc80jz,38,41,0|1tc80k0,39,43,1|1togofz,39,43,1|1togog0,38,41,0|1tuy37z,38,41,0|1tuy380,39,43,1|1u76r3z,39,43,1|1u76r40,38,41,0|1udo5vz,38,41,0|1udo5w0,39,43,1|1upwtrz,39,43,1|1upwts0,38,41,0|1uwe8jz,38,41,0|1uwe8k0,39,43,1|1v8mwfz,39,43,1|1v8mwg0,38,41,0|1vf4b7z,38,41,0|1vf4b80,39,43,1|1vrcz3z,39,43,1|1vrcz40,38,41,0|NaN,38,41,0",
        "America/Moncton|,0,140,0|-18wys05,0,140,0|-18wys04,43,59,0|-z94i41,43,59,0|-z94i40,31,40,0|-qzp0o1,31,40,0|-qzp0o0,48,41,1|-qpm4s1,48,41,1|-qpm4s0,31,40,0|-j2ve41,31,40,0|-j2ve40,48,41,1|-iy6y81,48,41,1|-iy6y80,31,40,0|-ik5bg1,31,40,0|-ik5bg0,48,41,1|-ifgvk1,48,41,1|-ifgvk0,31,40,0|-i1f8s1,31,40,0|-i1f8s0,48,41,1|-hwqsw1,48,41,1|-hwqsw0,31,40,0|-hip641,31,40,0|-hip640,48,41,1|-he0q81,48,41,1|-he0q80,31,40,0|-gzz3g1,31,40,0|-gzz3g0,48,41,1|-gvank1,48,41,1|-gvank0,31,40,0|-gh90s1,31,40,0|-gh90s0,48,41,1|-gckkw1,48,41,1|-gckkw0,31,40,0|-fyxrg1,31,40,0|-fyxrg0,48,41,1|-fstgw1,48,41,1|-fstgw0,31,40,0|-fgiss1,31,40,0|-fgiss0,48,41,1|-fa3e81,48,41,1|-fa3e80,31,40,0|-eying1,31,40,0|-eying0,48,41,1|-er0cw1,48,41,1|-er0cw0,31,40,0|-ek27c1,31,40,0|-ek27c0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|-ccw7c1,31,40,0|-ccw7c0,48,41,1|-c4z3g1,48,41,1|-c4z3g0,31,40,0|-bu64o1,31,40,0|-bu64o0,48,41,1|-bm90s1,48,41,1|-bm90s0,31,40,0|-bbg201,31,40,0|-bbg200,48,41,1|-b3iy41,48,41,1|-b3iy40,31,40,0|-aspzc1,31,40,0|-aspzc0,48,41,1|-aksvg1,48,41,1|-aksvg0,31,40,0|-a9my01,31,40,0|-a9my00,48,41,1|-a22ss1,48,41,1|-a22ss0,31,40,0|-9qwvc1,31,40,0|-9qwvc0,48,41,1|-9izrg1,48,41,1|-9izrg0,31,40,0|-986so1,31,40,0|-986so0,48,41,1|-909os1,48,41,1|-909os0,31,40,0|-8pgq01,31,40,0|-8pgq00,48,41,1|-8hjm41,48,41,1|-8hjm40,31,40,0|-86qnc1,31,40,0|-86qnc0,48,41,1|-7ytjg1,48,41,1|-7ytjg0,31,40,0|-7o0ko1,31,40,0|-7o0ko0,48,41,1|-7g3gs1,48,41,1|-7g3gs0,31,40,0|-74xjc1,31,40,0|-74xjc0,48,41,1|-6x0fg1,48,41,1|-6x0fg0,31,40,0|-6m7go1,31,40,0|-6m7go0,48,41,1|-6cui41,48,41,1|-6cui40,31,40,0|-63he01,31,40,0|-63he00,48,41,1|-5u4fg1,48,41,1|-5u4fg0,31,40,0|-5krbc1,31,40,0|-5krbc0,48,41,1|-5becs1,48,41,1|-5becs0,31,40,0|-5218o1,31,40,0|-5218o0,48,41,1|-4sbbg1,48,41,1|-4sbbg0,31,40,0|-4iy7c1,31,40,0|-4iy7c0,48,41,1|-49l8s1,48,41,1|-49l8s0,31,40,0|-4084o1,31,40,0|-4084o0,48,41,1|-3qv641,48,41,1|-3qv640,31,40,0|-3hi201,31,40,0|-3hi200,48,41,1|-3853g1,48,41,1|-3853g0,31,40,0|-2yrzc1,31,40,0|-2yrzc0,48,41,1|-2pf0s1,48,41,1|-2pf0s0,31,40,0|-2g1wo1,31,40,0|-2g1wo0,48,41,1|-26bzg1,48,41,1|-26bzg0,31,40,0|-1xbu01,31,40,0|-1xbu00,48,41,1|-1nlws1,48,41,1|-1nlws0,31,40,0|-1e8so1,31,40,0|-1e8so0,48,41,1|-14vu41,48,41,1|-14vu40,31,40,0|-viq01,31,40,0|-viq00,48,41,1|-m5rg1,48,41,1|-m5rg0,31,40,0|-csnc1,31,40,0|-csnc0,48,41,1|-3fos1,48,41,1|-3fos0,31,40,0|5xfbz,31,40,0|5xfc0,48,41,1|fadvz,48,41,1|fadw0,31,40,0|onhzz,31,40,0|oni00,48,41,1|ydf7z,48,41,1|ydf80,31,40,0|17qjbz,31,40,0|17qjc0,48,41,1|1h3hvz,48,41,1|1h3hw0,31,40,0|296onz,31,40,0|296oo0,48,41,1|2ijn7z,48,41,1|2ijn80,31,40,0|2rwrbz,31,40,0|2rwrc0,48,41,1|319pvz,48,41,1|319pw0,31,40,0|3amtzz,31,40,0|3amu00,48,41,1|3kcr7z,48,41,1|3kcr80,31,40,0|3tcwnz,31,40,0|3tcwo0,48,41,1|432tvz,48,41,1|432tw0,31,40,0|4cfxzz,31,40,0|4cfy00,48,41,1|4lswjz,48,41,1|4lswk0,31,40,0|4v60nz,31,40,0|4v60o0,48,41,1|54iz7z,48,41,1|54iz80,31,40,0|5dw3bz,31,40,0|5dw3c0,48,41,1|5n91vz,48,41,1|5n91w0,31,40,0|5wm5zz,31,40,0|5wm600,48,41,1|65z4jz,48,41,1|65z4k0,31,40,0|6fc8nz,31,40,0|6fc8o0,48,41,1|6p25vz,48,41,1|6p25w0,31,40,0|6y2bbz,31,40,0|6y2bc0,48,41,1|77s8jz,48,41,1|77s8k0,31,40,0|7h5cnz,31,40,0|7h5co0,48,41,1|7qib7z,48,41,1|7qib80,31,40,0|7zvfbz,31,40,0|7zvfc0,48,41,1|898dvz,48,41,1|898dw0,31,40,0|8ilhzz,31,40,0|8ili00,48,41,1|8rygjz,48,41,1|8rygk0,31,40,0|908onz,31,40,0|908oo0,48,41,1|9aoj7z,48,41,1|9aoj80,31,40,0|9iyrbz,31,40,0|9iyrc0,48,41,1|9trkjz,48,41,1|9trkk0,31,40,0|a1otzz,31,40,0|a1ou00,48,41,1|achn7z,48,41,1|achn80,31,40,0|akewnz,31,40,0|akewo0,48,41,1|av7pvz,48,41,1|av7pw0,31,40,0|b3hxzz,31,40,0|b3hy00,48,41,1|bdxsjz,48,41,1|bdxsk0,31,40,0|bm80nz,31,40,0|bm80o0,48,41,1|bwnv7z,48,41,1|bwnv80,31,40,0|c4xxtn,31,40,0|c4xxto,48,41,1|cfqr1n,48,41,1|cfqr1o,31,40,0|cno0hn,31,40,0|cno0ho,48,41,1|cygtpn,48,41,1|cygtpo,31,40,0|d6e35n,31,40,0|d6e35o,48,41,1|dh6wdn,48,41,1|dh6wdo,31,40,0|dph4hn,31,40,0|dph4ho,48,41,1|dzwz1n,48,41,1|dzwz1o,31,40,0|e8775n,31,40,0|e8775o,48,41,1|ein1pn,48,41,1|ein1po,31,40,0|eqx9tn,31,40,0|eqx9to,48,41,1|f1d4dn,48,41,1|f1d4do,31,40,0|f9nchn,31,40,0|f9ncho,48,41,1|fkg5pn,48,41,1|fkg5po,31,40,0|fsdf5n,31,40,0|fsdf5o,48,41,1|g368dn,48,41,1|g368do,31,40,0|gb3htn,31,40,0|gb3hto,48,41,1|glwb1n,48,41,1|glwb1o,31,40,0|gu6j5n,31,40,0|gu6j5o,48,41,1|h4mdpn,48,41,1|h4mdpo,31,40,0|hcwltn,31,40,0|hcwlto,48,41,1|hncgdn,48,41,1|hncgdo,31,40,0|hvmohn,31,40,0|hvmoho,48,41,1|i6fhpn,48,41,1|i6fhpo,31,40,0|iecr5n,31,40,0|iecr5o,48,41,1|ip5kdn,48,41,1|ip5kdo,31,40,0|ix2ttn,31,40,0|ix2tto,48,41,1|j7vn1n,48,41,1|j7vn1o,31,40,0|jeq5zz,31,40,0|jeq600,48,41,1|jqytvz,48,41,1|jqytw0,31,40,0|jxg8nz,31,40,0|jxg8o0,48,41,1|k9owjz,48,41,1|k9owk0,31,40,0|kg6bbz,31,40,0|kg6bc0,48,41,1|ksez7z,48,41,1|ksez80,31,40,0|kz9cnz,31,40,0|kz9co0,48,41,1|lbi0jz,48,41,1|lbi0k0,31,40,0|lhzfbz,31,40,0|lhzfc0,48,41,1|lu837z,48,41,1|lu8380,31,40,0|m0phzz,31,40,0|m0pi00,48,41,1|mcy5vz,48,41,1|mcy5w0,31,40,0|mjfknz,31,40,0|mjfko0,48,41,1|mvo8jz,48,41,1|mvo8k0,31,40,0|n25nbz,31,40,0|n25nc0,48,41,1|neeb7z,48,41,1|neeb80,31,40,0|nkvpzz,31,40,0|nkvq00,48,41,1|nx4dvz,48,41,1|nx4dw0,31,40,0|o3yrbz,31,40,0|o3yrc0,48,41,1|og7f7z,48,41,1|og7f80,31,40,0|omotzz,31,40,0|omou00,48,41,1|oyxhvz,48,41,1|oyxhw0,31,40,0|p5ewnz,31,40,0|p5ewo0,48,41,1|phnkjz,48,41,1|phnkk0,31,40,0|po4zbz,31,40,0|po4zc0,48,41,1|q0dn7z,48,41,1|q0dn80,31,40,0|q6v1zz,31,40,0|q6v200,48,41,1|qj3pvz,48,41,1|qj3pw0,31,40,0|qpy3bz,31,40,0|qpy3c0,48,41,1|r26r7z,48,41,1|r26r80,31,40,0|r8o5zz,31,40,0|r8o600,48,41,1|rkwtvz,48,41,1|rkwtw0,31,40,0|rre8nz,31,40,0|rre8o0,48,41,1|s3mwjz,48,41,1|s3mwk0,31,40,0|sa4bbz,31,40,0|sa4bc0,48,41,1|smcz7z,48,41,1|smcz80,31,40,0|ssudzz,31,40,0|ssue00,48,41,1|t531vz,48,41,1|t531w0,31,40,0|tbkgnz,31,40,0|tbkgo0,48,41,1|tnt4jz,48,41,1|tnt4k0,31,40,0|tunhzz,31,40,0|tuni00,48,41,1|u6w5vz,48,41,1|u6w5w0,31,40,0|uddknz,31,40,0|uddko0,48,41,1|upm8jz,48,41,1|upm8k0,31,40,0|uw3nbz,31,40,0|uw3nc0,48,41,1|v8cb7z,48,41,1|v8cb80,31,40,0|vetpzz,31,40,0|vetq00,48,41,1|vr2dvz,48,41,1|vr2dw0,31,40,0|vxjsnz,31,40,0|vxjso0,48,41,1|w9sgjz,48,41,1|w9sgk0,31,40,0|wgmtzz,31,40,0|wgmu00,48,41,1|wsvhvz,48,41,1|wsvhw0,31,40,0|wzcwnz,31,40,0|wzcwo0,48,41,1|xblkjz,48,41,1|xblkk0,31,40,0|xi2zbz,31,40,0|xi2zc0,48,41,1|xubn7z,48,41,1|xubn80,31,40,0|y0t1zz,31,40,0|y0t200,48,41,1|yd1pvz,48,41,1|yd1pw0,31,40,0|yjj4nz,31,40,0|yjj4o0,48,41,1|yvrsjz,48,41,1|yvrsk0,31,40,0|z297bz,31,40,0|z297c0,48,41,1|zehv7z,48,41,1|zehv80,31,40,0|zlc8nz,31,40,0|zlc8o0,48,41,1|zxkwjz,48,41,1|zxkwk0,31,40,0|1042bbz,31,40,0|1042bc0,48,41,1|10gaz7z,48,41,1|10gaz80,31,40,0|10msdzz,31,40,0|10mse00,48,41,1|10z11vz,48,41,1|10z11w0,31,40,0|115ignz,31,40,0|115igo0,48,41,1|11hr4jz,48,41,1|11hr4k0,31,40,0|11o8jbz,31,40,0|11o8jc0,48,41,1|120h77z,48,41,1|120h780,31,40,0|126ylzz,31,40,0|126ym00,48,41,1|12j79vz,48,41,1|12j79w0,31,40,0|12q1nbz,31,40,0|12q1nc0,48,41,1|132ab7z,48,41,1|132ab80,31,40,0|138rpzz,31,40,0|138rq00,48,41,1|13l0dvz,48,41,1|13l0dw0,31,40,0|13rhsnz,31,40,0|13rhso0,48,41,1|143qgjz,48,41,1|143qgk0,31,40,0|14a7vbz,31,40,0|14a7vc0,48,41,1|14mgj7z,48,41,1|14mgj80,31,40,0|14sxxzz,31,40,0|14sxy00,48,41,1|1556lvz,48,41,1|1556lw0,31,40,0|15c0zbz,31,40,0|15c0zc0,48,41,1|15o9n7z,48,41,1|15o9n80,31,40,0|15ur1zz,31,40,0|15ur200,48,41,1|166zpvz,48,41,1|166zpw0,31,40,0|16dh4nz,31,40,0|16dh4o0,48,41,1|16ppsjz,48,41,1|16ppsk0,31,40,0|16w77bz,31,40,0|16w77c0,48,41,1|178fv7z,48,41,1|178fv80,31,40,0|17ex9zz,31,40,0|17exa00,48,41,1|17r5xvz,48,41,1|17r5xw0,31,40,0|17xncnz,31,40,0|17xnco0,48,41,1|189w0jz,48,41,1|189w0k0,31,40,0|18gqdzz,31,40,0|18gqe00,48,41,1|18sz1vz,48,41,1|18sz1w0,31,40,0|18zggnz,31,40,0|18zggo0,48,41,1|19bp4jz,48,41,1|19bp4k0,31,40,0|19i6jbz,31,40,0|19i6jc0,48,41,1|19uf77z,48,41,1|19uf780,31,40,0|1a0wlzz,31,40,0|1a0wm00,48,41,1|1ad59vz,48,41,1|1ad59w0,31,40,0|1ajmonz,31,40,0|1ajmoo0,48,41,1|1avvcjz,48,41,1|1avvck0,31,40,0|1b2ppzz,31,40,0|1b2pq00,48,41,1|1beydvz,48,41,1|1beydw0,31,40,0|1blfsnz,31,40,0|1blfso0,48,41,1|1bxogjz,48,41,1|1bxogk0,31,40,0|1c45vbz,31,40,0|1c45vc0,48,41,1|1cgej7z,48,41,1|1cgej80,31,40,0|1cmvxzz,31,40,0|1cmvy00,48,41,1|1cz4lvz,48,41,1|1cz4lw0,31,40,0|1d5m0nz,31,40,0|1d5m0o0,48,41,1|1dhuojz,48,41,1|1dhuok0,31,40,0|1doc3bz,31,40,0|1doc3c0,48,41,1|1e0kr7z,48,41,1|1e0kr80,31,40,0|1e7f4nz,31,40,0|1e7f4o0,48,41,1|1ejnsjz,48,41,1|1ejnsk0,31,40,0|1eq57bz,31,40,0|1eq57c0,48,41,1|1f2dv7z,48,41,1|1f2dv80,31,40,0|1f8v9zz,31,40,0|1f8va00,48,41,1|1fl3xvz,48,41,1|1fl3xw0,31,40,0|1frlcnz,31,40,0|1frlco0,48,41,1|1g3u0jz,48,41,1|1g3u0k0,31,40,0|1gabfbz,31,40,0|1gabfc0,48,41,1|1gmk37z,48,41,1|1gmk380,31,40,0|1gt1hzz,31,40,0|1gt1i00,48,41,1|1h5a5vz,48,41,1|1h5a5w0,31,40,0|1hc4jbz,31,40,0|1hc4jc0,48,41,1|1hod77z,48,41,1|1hod780,31,40,0|1huulzz,31,40,0|1huum00,48,41,1|1i739vz,48,41,1|1i739w0,31,40,0|1idkonz,31,40,0|1idkoo0,48,41,1|1iptcjz,48,41,1|1iptck0,31,40,0|1iwarbz,31,40,0|1iwarc0,48,41,1|1j8jf7z,48,41,1|1j8jf80,31,40,0|1jf0tzz,31,40,0|1jf0u00,48,41,1|1jr9hvz,48,41,1|1jr9hw0,31,40,0|1jy3vbz,31,40,0|1jy3vc0,48,41,1|1kacj7z,48,41,1|1kacj80,31,40,0|1kgtxzz,31,40,0|1kgty00,48,41,1|1kt2lvz,48,41,1|1kt2lw0,31,40,0|1kzk0nz,31,40,0|1kzk0o0,48,41,1|1lbsojz,48,41,1|1lbsok0,31,40,0|1lia3bz,31,40,0|1lia3c0,48,41,1|1luir7z,48,41,1|1luir80,31,40,0|1m105zz,31,40,0|1m10600,48,41,1|1md8tvz,48,41,1|1md8tw0,31,40,0|1mjq8nz,31,40,0|1mjq8o0,48,41,1|1mvywjz,48,41,1|1mvywk0,31,40,0|1n2t9zz,31,40,0|1n2ta00,48,41,1|1nf1xvz,48,41,1|1nf1xw0,31,40,0|1nljcnz,31,40,0|1nljco0,48,41,1|1nxs0jz,48,41,1|1nxs0k0,31,40,0|1o49fbz,31,40,0|1o49fc0,48,41,1|1ogi37z,48,41,1|1ogi380,31,40,0|1omzhzz,31,40,0|1omzi00,48,41,1|1oz85vz,48,41,1|1oz85w0,31,40,0|1p5pknz,31,40,0|1p5pko0,48,41,1|1phy8jz,48,41,1|1phy8k0,31,40,0|1poslzz,31,40,0|1posm00,48,41,1|1q119vz,48,41,1|1q119w0,31,40,0|1q7ionz,31,40,0|1q7ioo0,48,41,1|1qjrcjz,48,41,1|1qjrck0,31,40,0|1qq8rbz,31,40,0|1qq8rc0,48,41,1|1r2hf7z,48,41,1|1r2hf80,31,40,0|1r8ytzz,31,40,0|1r8yu00,48,41,1|1rl7hvz,48,41,1|1rl7hw0,31,40,0|1rrownz,31,40,0|1rrowo0,48,41,1|1s3xkjz,48,41,1|1s3xkk0,31,40,0|1saezbz,31,40,0|1saezc0,48,41,1|1smnn7z,48,41,1|1smnn80,31,40,0|1sti0nz,31,40,0|1sti0o0,48,41,1|1t5qojz,48,41,1|1t5qok0,31,40,0|1tc83bz,31,40,0|1tc83c0,48,41,1|1togr7z,48,41,1|1togr80,31,40,0|1tuy5zz,31,40,0|1tuy600,48,41,1|1u76tvz,48,41,1|1u76tw0,31,40,0|1udo8nz,31,40,0|1udo8o0,48,41,1|1upwwjz,48,41,1|1upwwk0,31,40,0|1uwebbz,31,40,0|1uwebc0,48,41,1|1v8mz7z,48,41,1|1v8mz80,31,40,0|1vf4dzz,31,40,0|1vf4e00,48,41,1|1vrd1vz,48,41,1|1vrd1w0,31,40,0|NaN,31,40,0",
        "America/Monterrey|,0,141,0|-p1u7c1,0,141,0|-p1u7c0,44,62,0|-m7ock1,44,62,0|-m7ock0,45,63,0|-kf67c1,45,63,0|-kf67c0,44,62,0|-k6mpw1,44,62,0|-k6mpw0,46,63,1|-jypm01,46,63,1|-jypm00,44,62,0|-jpan81,44,62,0|-jpan80,45,63,0|9iywvz,45,63,0|9iyww0,47,59,1|9trq3z,47,59,1|9trq40,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxa3z,47,59,1|dzxa40,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|eincrz,47,59,1|eincs0,45,63,0|eqxkvz,45,63,0|eqxkw0,47,59,1|f1dffz,47,59,1|f1dfg0,45,63,0|f9nnjz,45,63,0|f9nnk0,47,59,1|fkggrz,47,59,1|fkggs0,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36jfz,47,59,1|g36jg0,45,63,0|gcwm7z,45,63,0|gcwm80,47,59,1|gkgrfz,47,59,1|gkgrg0,45,63,0|gu6u7z,45,63,0|gu6u80,47,59,1|h4morz,47,59,1|h4mos0,45,63,0|hcwwvz,45,63,0|hcwww0,47,59,1|hncrfz,47,59,1|hncrg0,45,63,0|hvmzjz,45,63,0|hvmzk0,47,59,1|i6fsrz,47,59,1|i6fss0,45,63,0|ied27z,45,63,0|ied280,47,59,1|ip5vfz,47,59,1|ip5vg0,45,63,0|ix34vz,45,63,0|ix34w0,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jft7jz,45,63,0|jft7k0,47,59,1|jqm0rz,47,59,1|jqm0s0,45,63,0|jyw8vz,45,63,0|jyw8w0,47,59,1|k9c3fz,47,59,1|k9c3g0,45,63,0|khmbjz,45,63,0|khmbk0,47,59,1|ks263z,47,59,1|ks2640,45,63,0|l0ce7z,45,63,0|l0ce80,47,59,1|lb57fz,47,59,1|lb57g0,45,63,0|lj2gvz,45,63,0|lj2gw0,47,59,1|ltva3z,47,59,1|ltva40,45,63,0|m1sjjz,45,63,0|m1sjk0,47,59,1|mclcrz,47,59,1|mclcs0,45,63,0|mkvkvz,45,63,0|mkvkw0,47,59,1|mvbffz,47,59,1|mvbfg0,45,63,0|n3lnjz,45,63,0|n3lnk0,47,59,1|ne1i3z,47,59,1|ne1i40,45,63,0|nmbq7z,45,63,0|nmbq80,47,59,1|nwrkrz,47,59,1|nwrks0,45,63,0|o51svz,45,63,0|o51sw0,47,59,1|ofum3z,47,59,1|ofum40,45,63,0|onrvjz,45,63,0|onrvk0,47,59,1|oykorz,47,59,1|oykos0,45,63,0|p6hy7z,45,63,0|p6hy80,47,59,1|pharfz,47,59,1|pharg0,45,63,0|ppkzjz,45,63,0|ppkzk0,47,59,1|q00u3z,47,59,1|q00u40,45,63,0|q8b27z,45,63,0|q8b280,47,59,1|qiqwrz,47,59,1|qiqws0,45,63,0|qr14vz,45,63,0|qr14w0,47,59,1|r1ty3z,47,59,1|r1ty40,45,63,0|r9r7jz,45,63,0|r9r7k0,47,59,1|rkk0rz,47,59,1|rkk0s0,45,63,0|NaN,45,63,0",
        "America/Montevideo|,0,142,0|-w4mlla,0,142,0|-w4mll9,20,142,0|-px809a,20,142,0|-px8099,41,40,0|-o50vk1,41,40,0|-o50vk0,38,41,1|-nvm2c1,38,41,1|-nvm2c0,49,65,0|-nm74y1,49,65,0|-nm74y0,38,41,1|-ncu501,38,41,1|-ncu500,49,65,0|-n3f7m1,49,65,0|-n3f7m0,38,41,1|-mu27o1,38,41,1|-mu27o0,49,65,0|-ivo8y1,49,65,0|-ivo8y0,38,41,1|-inr3o1,38,41,1|-inr3o0,49,65,0|-icy6a1,49,65,0|-icy6a0,38,41,1|-i51101,38,41,1|-i51100,49,65,0|-hu83m1,49,65,0|-hu83m0,38,41,1|-hmayc1,38,41,1|-hmayc0,49,65,0|-hbi0y1,49,65,0|-hbi0y0,38,41,1|-h3kvo1,38,41,1|-h3kvo0,49,65,0|-gsezm1,49,65,0|-gsezm0,38,41,1|-gkut01,38,41,1|-gkut00,49,65,0|-g9owy1,49,65,0|-g9owy0,38,41,1|-g24qc1,38,41,1|-g24qc0,49,65,0|-fseoy1,49,65,0|-fseoy0,38,41,1|-fj1p01,38,41,1|-fj1p00,49,65,0|-f88rm1,49,65,0|-f88rm0,38,41,1|-f0bmc1,38,41,1|-f0bmc0,49,65,0|-etxya1,49,65,0|-etxya0,38,41,1|-e482c1,38,41,1|-e482c0,78,98,1|-dzlfq1,78,98,1|-dzlfq0,38,41,0|-5jbp01,38,41,0|-5jbp00,78,98,1|-5abnq1,78,98,1|-5abnq0,38,41,0|-572yc1,38,41,0|-572yc0,39,43,1|-54kag1,39,43,1|-54kag0,38,41,0|-2h5101,38,41,0|-2h5100,39,43,1|-285141,39,43,1|-285140,38,41,0|-u1901,38,41,0|-u1900,78,98,1|-kd521,78,98,1|-kd520,38,41,0|5vcbz,38,41,0|5vcc0,39,43,1|8fuvz,39,43,1|8fuw0,38,41,0|17dcbz,38,41,0|17dcc0,39,43,1|1botjz,39,43,1|1botk0,38,41,0|23s0bz,38,41,0|23s0c0,79,143,1|26nlhz,79,143,1|26nli0,78,98,1|2fnqxz,78,98,1|2fnqy0,38,41,0|2lf6zz,38,41,0|2lf700,39,43,1|2qgljz,39,43,1|2qglk0,38,41,0|3mvcbz,38,41,0|3mvcc0,39,43,1|3qtuvz,39,43,1|3qtuw0,38,41,0|44vhnz,38,41,0|44vho0,39,43,1|49jxjz,39,43,1|49jxk0,38,41,0|4obhnz,38,41,0|4obho0,39,43,1|4sa07z,39,43,1|4sa080,38,41,0|4v5sbz,38,41,0|4v5sc0,39,43,1|5bq07z,39,43,1|5bq080,38,41,0|9d8yzz,38,41,0|9d8z00,39,43,1|9h5mvz,39,43,1|9h5mw0,38,41,0|9vx6zz,38,41,0|9vx700,39,43,1|a08o7z,39,43,1|a08o80,38,41,0|achhnz,38,41,0|achho0,39,43,1|ails7z,39,43,1|ails80,38,41,0|auulnz,38,41,0|auulo0,39,43,1|b1otjz,39,43,1|b1otk0,38,41,0|bdxmzz,38,41,0|bdxn00,39,43,1|bkew7z,39,43,1|bkew80,38,41,0|bwaqzz,38,41,0|bwar00,39,43,1|c34yvz,39,43,1|c34yw0,38,41,0|i49pnz,38,41,0|i49po0,39,43,1|idzsfz,39,43,1|idzsg0,38,41,0|io2tvz,38,41,0|io2tw0,39,43,1|ivzxrz,39,43,1|ivzxs0,38,41,0|j6fxvz,38,41,0|j6fxw0,39,43,1|jeq0fz,39,43,1|jeq0g0,38,41,0|jpiz7z,38,41,0|jpiz80,39,43,1|jxg33z,39,43,1|jxg340,38,41,0|k891vz,38,41,0|k891w0,39,43,1|kg65rz,39,43,1|kg65s0,38,41,0|kqz4jz,38,41,0|kqz4k0,39,43,1|kz973z,39,43,1|kz9740,38,41,0|l9p77z,38,41,0|l9p780,39,43,1|lhz9rz,39,43,1|lhz9s0,38,41,0|lsf9vz,38,41,0|lsf9w0,39,43,1|m0pcfz,39,43,1|m0pcg0,38,41,0|mbib7z,38,41,0|mbib80,39,43,1|mjff3z,39,43,1|mjff40,38,41,0|mu8dvz,38,41,0|mu8dw0,39,43,1|n25hrz,39,43,1|n25hs0,38,41,0|ncygjz,38,41,0|ncygk0,39,43,1|nkvkfz,39,43,1|nkvkg0,38,41,0|NaN,38,41,0",
        "America/Montserrat|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Nassau|,0,144,0|-1353dat,0,144,0|-1353das,43,59,0|-qzoxw1,43,59,0|-qzoxw0,60,40,1|-qpm201,60,40,1|-qpm200,43,59,0|-qhn4u1,43,59,0|-qhn4u0,60,40,1|-q6w4w1,60,40,1|-q6w4w0,43,59,0|-px5wk1,43,59,0|-px5wk0,60,40,1|-pplww1,60,40,1|-pplww0,43,59,0|-pdpwk1,43,59,0|-pdpwk0,60,40,1|-p7e7c1,60,40,1|-p7e7c0,43,59,0|-ouztw1,43,59,0|-ouztw0,60,40,1|-ooiko1,60,40,1|-ooiko0,43,59,0|-oc9r81,43,59,0|-oc9r80,60,40,1|-o5si01,60,40,1|-o5si00,43,59,0|-ntwn81,43,59,0|-ntwn80,60,40,1|-nmpgo1,60,40,1|-nmpgo0,43,59,0|-nb6kk1,43,59,0|-nb6kk0,60,40,1|-n3ze01,60,40,1|-n3ze00,43,59,0|-msghw1,43,59,0|-msghw0,60,40,1|-ml9bc1,60,40,1|-ml9bc0,43,59,0|-m9qf81,43,59,0|-m9qf80,60,40,1|-m26a01,60,40,1|-m26a00,43,59,0|-lr0ck1,43,59,0|-lr0ck0,60,40,1|-lj38o1,60,40,1|-lj38o0,43,59,0|-l8a9w1,43,59,0|-l8a9w0,60,40,1|-l0d601,60,40,1|-l0d600,43,59,0|-kpk781,43,59,0|-kpk780,60,40,1|-khn3c1,60,40,1|-khn3c0,43,59,0|-k6u4k1,43,59,0|-k6u4k0,60,40,1|-jyx0o1,60,40,1|-jyx0o0,43,59,0|-jnr381,43,59,0|-jnr380,60,40,1|-jg6y01,60,40,1|-jg6y00,43,59,0|-j510k1,43,59,0|-j510k0,60,40,1|-ix3wo1,60,40,1|-ix3wo0,43,59,0|-imaxw1,43,59,0|-imaxw0,60,40,1|-iedu01,60,40,1|-iedu00,43,59,0|-i3kv81,43,59,0|-i3kv80,60,40,1|-hvnrc1,60,40,1|-hvnrc0,43,59,0|-hkusk1,43,59,0|-hkusk0,60,40,1|-hcxoo1,60,40,1|-hcxoo0,43,59,0|-h24pw1,43,59,0|-h24pw0,60,40,1|-gu7m01,60,40,1|-gu7m00,43,59,0|-gjen81,43,59,0|-gjen80,60,40,1|-gbhjc1,60,40,1|-gbhjc0,43,59,0|-g0blw1,43,59,0|-g0blw0,60,40,1|-fsrgo1,60,40,1|-fsrgo0,43,59,0|-fhlj81,43,59,0|-fhlj80,60,40,1|-ek24k1,60,40,1|-ek24k0,69,40,1|-cq2tg1,69,40,1|-cq2tg0,70,40,1|-cnp3c1,70,40,1|-cnp3c0,43,59,0|-ccw4k1,43,59,0|-ccw4k0,60,40,1|-c4z0o1,60,40,1|-c4z0o0,43,59,0|-bu61w1,43,59,0|-bu61w0,60,40,1|-bm8y01,60,40,1|-bm8y00,43,59,0|-bbfz81,43,59,0|-bbfz80,60,40,1|-b3ivc1,60,40,1|-b3ivc0,43,59,0|-aspwk1,43,59,0|-aspwk0,60,40,1|-ahk4o1,60,40,1|-ahk4o0,43,59,0|-a9mv81,43,59,0|-a9mv80,60,40,1|-9yu201,60,40,1|-9yu200,43,59,0|-9qwsk1,43,59,0|-9qwsk0,60,40,1|-9izoo1,60,40,1|-9izoo0,43,59,0|-986pw1,43,59,0|-986pw0,60,40,1|-909m01,60,40,1|-909m00,43,59,0|-8pgn81,43,59,0|-8pgn80,60,40,1|-8hjjc1,60,40,1|-8hjjc0,43,59,0|-86qkk1,43,59,0|-86qkk0,60,40,1|-7ytgo1,60,40,1|-7ytgo0,43,59,0|-7o0hw1,43,59,0|-7o0hw0,60,40,1|-7g3e01,60,40,1|-7g3e00,43,59,0|-74xgk1,43,59,0|-74xgk0,60,40,1|-6x0co1,60,40,1|-6x0co0,43,59,0|-6m7dw1,43,59,0|-6m7dw0,60,40,1|-6cufc1,60,40,1|-6cufc0,43,59,0|-63hb81,43,59,0|-63hb80,60,40,1|-5u4co1,60,40,1|-5u4co0,43,59,0|-5kr8k1,43,59,0|-5kr8k0,60,40,1|-5bea01,60,40,1|-5bea00,43,59,0|-5215w1,43,59,0|-5215w0,60,40,1|-4sb8o1,60,40,1|-4sb8o0,43,59,0|-4iy4k1,43,59,0|-4iy4k0,60,40,1|-49l601,60,40,1|-49l600,43,59,0|-4081w1,43,59,0|-4081w0,60,40,1|-3qv3c1,60,40,1|-3qv3c0,43,59,0|-3hhz81,43,59,0|-3hhz80,60,40,1|-3850o1,60,40,1|-3850o0,43,59,0|-2yrwk1,43,59,0|-2yrwk0,60,40,1|-2pey01,60,40,1|-2pey00,43,59,0|-2g1tw1,43,59,0|-2g1tw0,60,40,1|-26bwo1,60,40,1|-26bwo0,43,59,0|-1xbr81,43,59,0|-1xbr80,60,40,1|-1nlu01,60,40,1|-1nlu00,43,59,0|-1e8pw1,43,59,0|-1e8pw0,60,40,1|-14vrc1,60,40,1|-14vrc0,43,59,0|-vin81,43,59,0|-vin80,60,40,1|-m5oo1,60,40,1|-m5oo0,43,59,0|-cskk1,43,59,0|-cskk0,60,40,1|-3fm01,60,40,1|-3fm00,43,59,0|5xi3z,43,59,0|5xi40,60,40,1|fagnz,60,40,1|fago0,43,59,0|onkrz,43,59,0|onks0,60,40,1|ydhzz,60,40,1|ydi00,43,59,0|17qm3z,43,59,0|17qm40,60,40,1|1h3knz,60,40,1|1h3ko0,43,59,0|1qgorz,43,59,0|1qgos0,60,40,1|1ztnbz,60,40,1|1ztnc0,43,59,0|296rfz,43,59,0|296rg0,60,40,1|2ijpzz,60,40,1|2ijq00,43,59,0|2rwu3z,43,59,0|2rwu40,60,40,1|319snz,60,40,1|319so0,43,59,0|3amwrz,43,59,0|3amws0,60,40,1|3kctzz,60,40,1|3kcu00,43,59,0|3tczfz,43,59,0|3tczg0,60,40,1|432wnz,60,40,1|432wo0,43,59,0|4cg0rz,43,59,0|4cg0s0,60,40,1|4lszbz,60,40,1|4lszc0,43,59,0|4v63fz,43,59,0|4v63g0,60,40,1|54j1zz,60,40,1|54j200,43,59,0|5dw63z,43,59,0|5dw640,60,40,1|5n94nz,60,40,1|5n94o0,43,59,0|5wm8rz,43,59,0|5wm8s0,60,40,1|65z7bz,60,40,1|65z7c0,43,59,0|6fcbfz,43,59,0|6fcbg0,60,40,1|6p28nz,60,40,1|6p28o0,43,59,0|6y2e3z,43,59,0|6y2e40,60,40,1|77sbbz,60,40,1|77sbc0,43,59,0|7h5ffz,43,59,0|7h5fg0,60,40,1|7qidzz,60,40,1|7qie00,43,59,0|7zvi3z,43,59,0|7zvi40,60,40,1|898gnz,60,40,1|898go0,43,59,0|8ilkrz,43,59,0|8ilks0,60,40,1|8ryjbz,60,40,1|8ryjc0,43,59,0|908rfz,43,59,0|908rg0,60,40,1|9aolzz,60,40,1|9aom00,43,59,0|9iyu3z,43,59,0|9iyu40,60,40,1|9trnbz,60,40,1|9trnc0,43,59,0|a1owrz,43,59,0|a1ows0,60,40,1|achpzz,60,40,1|achq00,43,59,0|akezfz,43,59,0|akezg0,60,40,1|av7snz,60,40,1|av7so0,43,59,0|b3i0rz,43,59,0|b3i0s0,60,40,1|bdxvbz,60,40,1|bdxvc0,43,59,0|bm83fz,43,59,0|bm83g0,60,40,1|bwnxzz,60,40,1|bwny00,43,59,0|c4y63z,43,59,0|c4y640,60,40,1|cfqzbz,60,40,1|cfqzc0,43,59,0|cno8rz,43,59,0|cno8s0,60,40,1|cyh1zz,60,40,1|cyh200,43,59,0|d6ebfz,43,59,0|d6ebg0,60,40,1|dh74nz,60,40,1|dh74o0,43,59,0|dphcrz,43,59,0|dphcs0,60,40,1|dzx7bz,60,40,1|dzx7c0,43,59,0|e87ffz,43,59,0|e87fg0,60,40,1|ein9zz,60,40,1|eina00,43,59,0|eqxi3z,43,59,0|eqxi40,60,40,1|f1dcnz,60,40,1|f1dco0,43,59,0|f9nkrz,43,59,0|f9nks0,60,40,1|fkgdzz,60,40,1|fkge00,43,59,0|fsdnfz,43,59,0|fsdng0,60,40,1|g36gnz,60,40,1|g36go0,43,59,0|gb3q3z,43,59,0|gb3q40,60,40,1|glwjbz,60,40,1|glwjc0,43,59,0|gu6rfz,43,59,0|gu6rg0,60,40,1|h4mlzz,60,40,1|h4mm00,43,59,0|hcwu3z,43,59,0|hcwu40,60,40,1|hnconz,60,40,1|hncoo0,43,59,0|hvmwrz,43,59,0|hvmws0,60,40,1|i6fpzz,60,40,1|i6fq00,43,59,0|ieczfz,43,59,0|ieczg0,60,40,1|ip5snz,60,40,1|ip5so0,43,59,0|ix323z,43,59,0|ix3240,60,40,1|j7vvbz,60,40,1|j7vvc0,43,59,0|jeq8rz,43,59,0|jeq8s0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/New_York|,0,145,0|-18y0os1,0,145,0|-18y0os0,43,59,0|-r0ev81,43,59,0|-r0ev80,60,40,1|-qpm201,60,40,1|-qpm200,43,59,0|-qhosk1,43,59,0|-qhosk0,60,40,1|-q6vzc1,60,40,1|-q6vzc0,43,59,0|-pyypw1,43,59,0|-pyypw0,60,40,1|-pnsy01,60,40,1|-pnsy00,43,59,0|-pessk1,43,59,0|-pessk0,60,40,1|-p6voo1,60,40,1|-p6voo0,43,59,0|-ovpr81,43,59,0|-ovpr80,60,40,1|-oo5m01,60,40,1|-oo5m00,43,59,0|-oczok1,43,59,0|-oczok0,60,40,1|-o52ko1,60,40,1|-o52ko0,43,59,0|-nu9lw1,43,59,0|-nu9lw0,60,40,1|-nmci01,60,40,1|-nmci00,43,59,0|-nbjj81,43,59,0|-nbjj80,60,40,1|-n3mfc1,60,40,1|-n3mfc0,43,59,0|-mstgk1,43,59,0|-mstgk0,60,40,1|-mkwco1,60,40,1|-mkwco0,43,59,0|-ma3dw1,43,59,0|-ma3dw0,60,40,1|-m26a01,60,40,1|-m26a00,43,59,0|-lr0ck1,43,59,0|-lr0ck0,60,40,1|-lj38o1,60,40,1|-lj38o0,43,59,0|-l8a9w1,43,59,0|-l8a9w0,60,40,1|-l0d601,60,40,1|-l0d600,43,59,0|-kpk781,43,59,0|-kpk780,60,40,1|-khn3c1,60,40,1|-khn3c0,43,59,0|-k6u4k1,43,59,0|-k6u4k0,60,40,1|-jyx0o1,60,40,1|-jyx0o0,43,59,0|-jo41w1,43,59,0|-jo41w0,60,40,1|-jg6y01,60,40,1|-jg6y00,43,59,0|-j510k1,43,59,0|-j510k0,60,40,1|-ixgvc1,60,40,1|-ixgvc0,43,59,0|-imaxw1,43,59,0|-imaxw0,60,40,1|-iedu01,60,40,1|-iedu00,43,59,0|-i3kv81,43,59,0|-i3kv80,60,40,1|-hvnrc1,60,40,1|-hvnrc0,43,59,0|-hkusk1,43,59,0|-hkusk0,60,40,1|-hcxoo1,60,40,1|-hcxoo0,43,59,0|-h24pw1,43,59,0|-h24pw0,60,40,1|-gu7m01,60,40,1|-gu7m00,43,59,0|-gjen81,43,59,0|-gjen80,60,40,1|-gbhjc1,60,40,1|-gbhjc0,43,59,0|-g0blw1,43,59,0|-g0blw0,60,40,1|-fsrgo1,60,40,1|-fsrgo0,43,59,0|-fhlj81,43,59,0|-fhlj80,60,40,1|-f9ofc1,60,40,1|-f9ofc0,43,59,0|-eyvgk1,43,59,0|-eyvgk0,60,40,1|-eqyco1,60,40,1|-eqyco0,43,59,0|-ek24k1,43,59,0|-ek24k0,69,40,1|-cq2tg1,69,40,1|-cq2tg0,70,40,1|-cnp3c1,70,40,1|-cnp3c0,43,59,0|-ccw4k1,43,59,0|-ccw4k0,60,40,1|-c4z0o1,60,40,1|-c4z0o0,43,59,0|-bu61w1,43,59,0|-bu61w0,60,40,1|-bm8y01,60,40,1|-bm8y00,43,59,0|-bbfz81,43,59,0|-bbfz80,60,40,1|-b3ivc1,60,40,1|-b3ivc0,43,59,0|-aspwk1,43,59,0|-aspwk0,60,40,1|-aksso1,60,40,1|-aksso0,43,59,0|-a9mv81,43,59,0|-a9mv80,60,40,1|-a22q01,60,40,1|-a22q00,43,59,0|-9qwsk1,43,59,0|-9qwsk0,60,40,1|-9izoo1,60,40,1|-9izoo0,43,59,0|-986pw1,43,59,0|-986pw0,60,40,1|-909m01,60,40,1|-909m00,43,59,0|-8pgn81,43,59,0|-8pgn80,60,40,1|-8hjjc1,60,40,1|-8hjjc0,43,59,0|-86qkk1,43,59,0|-86qkk0,60,40,1|-7ytgo1,60,40,1|-7ytgo0,43,59,0|-7o0hw1,43,59,0|-7o0hw0,60,40,1|-7eako1,60,40,1|-7eako0,43,59,0|-74xgk1,43,59,0|-74xgk0,60,40,1|-6vki01,60,40,1|-6vki00,43,59,0|-6m7dw1,43,59,0|-6m7dw0,60,40,1|-6cufc1,60,40,1|-6cufc0,43,59,0|-63hb81,43,59,0|-63hb80,60,40,1|-5u4co1,60,40,1|-5u4co0,43,59,0|-5kr8k1,43,59,0|-5kr8k0,60,40,1|-5bea01,60,40,1|-5bea00,43,59,0|-5215w1,43,59,0|-5215w0,60,40,1|-4sb8o1,60,40,1|-4sb8o0,43,59,0|-4iy4k1,43,59,0|-4iy4k0,60,40,1|-49l601,60,40,1|-49l600,43,59,0|-4081w1,43,59,0|-4081w0,60,40,1|-3qv3c1,60,40,1|-3qv3c0,43,59,0|-3hhz81,43,59,0|-3hhz80,60,40,1|-3850o1,60,40,1|-3850o0,43,59,0|-2yrwk1,43,59,0|-2yrwk0,60,40,1|-2pey01,60,40,1|-2pey00,43,59,0|-2g1tw1,43,59,0|-2g1tw0,60,40,1|-26bwo1,60,40,1|-26bwo0,43,59,0|-1xbr81,43,59,0|-1xbr80,60,40,1|-1nlu01,60,40,1|-1nlu00,43,59,0|-1e8pw1,43,59,0|-1e8pw0,60,40,1|-14vrc1,60,40,1|-14vrc0,43,59,0|-vin81,43,59,0|-vin80,60,40,1|-m5oo1,60,40,1|-m5oo0,43,59,0|-cskk1,43,59,0|-cskk0,60,40,1|-3fm01,60,40,1|-3fm00,43,59,0|5xi3z,43,59,0|5xi40,60,40,1|fagnz,60,40,1|fago0,43,59,0|onkrz,43,59,0|onks0,60,40,1|ydhzz,60,40,1|ydi00,43,59,0|17qm3z,43,59,0|17qm40,60,40,1|1h3knz,60,40,1|1h3ko0,43,59,0|1qgorz,43,59,0|1qgos0,60,40,1|1ztnbz,60,40,1|1ztnc0,43,59,0|23fcrz,43,59,0|23fcs0,60,40,1|2ijpzz,60,40,1|2ijq00,43,59,0|2oo63z,43,59,0|2oo640,60,40,1|319snz,60,40,1|319so0,43,59,0|3amwrz,43,59,0|3amws0,60,40,1|3kctzz,60,40,1|3kcu00,43,59,0|3tczfz,43,59,0|3tczg0,60,40,1|432wnz,60,40,1|432wo0,43,59,0|4cg0rz,43,59,0|4cg0s0,60,40,1|4lszbz,60,40,1|4lszc0,43,59,0|4v63fz,43,59,0|4v63g0,60,40,1|54j1zz,60,40,1|54j200,43,59,0|5dw63z,43,59,0|5dw640,60,40,1|5n94nz,60,40,1|5n94o0,43,59,0|5wm8rz,43,59,0|5wm8s0,60,40,1|65z7bz,60,40,1|65z7c0,43,59,0|6fcbfz,43,59,0|6fcbg0,60,40,1|6p28nz,60,40,1|6p28o0,43,59,0|6y2e3z,43,59,0|6y2e40,60,40,1|77sbbz,60,40,1|77sbc0,43,59,0|7h5ffz,43,59,0|7h5fg0,60,40,1|7qidzz,60,40,1|7qie00,43,59,0|7zvi3z,43,59,0|7zvi40,60,40,1|898gnz,60,40,1|898go0,43,59,0|8ilkrz,43,59,0|8ilks0,60,40,1|8ryjbz,60,40,1|8ryjc0,43,59,0|908rfz,43,59,0|908rg0,60,40,1|9aolzz,60,40,1|9aom00,43,59,0|9iyu3z,43,59,0|9iyu40,60,40,1|9trnbz,60,40,1|9trnc0,43,59,0|a1owrz,43,59,0|a1ows0,60,40,1|achpzz,60,40,1|achq00,43,59,0|akezfz,43,59,0|akezg0,60,40,1|av7snz,60,40,1|av7so0,43,59,0|b3i0rz,43,59,0|b3i0s0,60,40,1|bdxvbz,60,40,1|bdxvc0,43,59,0|bm83fz,43,59,0|bm83g0,60,40,1|bwnxzz,60,40,1|bwny00,43,59,0|c4y63z,43,59,0|c4y640,60,40,1|cfqzbz,60,40,1|cfqzc0,43,59,0|cno8rz,43,59,0|cno8s0,60,40,1|cyh1zz,60,40,1|cyh200,43,59,0|d6ebfz,43,59,0|d6ebg0,60,40,1|dh74nz,60,40,1|dh74o0,43,59,0|dphcrz,43,59,0|dphcs0,60,40,1|dzx7bz,60,40,1|dzx7c0,43,59,0|e87ffz,43,59,0|e87fg0,60,40,1|ein9zz,60,40,1|eina00,43,59,0|eqxi3z,43,59,0|eqxi40,60,40,1|f1dcnz,60,40,1|f1dco0,43,59,0|f9nkrz,43,59,0|f9nks0,60,40,1|fkgdzz,60,40,1|fkge00,43,59,0|fsdnfz,43,59,0|fsdng0,60,40,1|g36gnz,60,40,1|g36go0,43,59,0|gb3q3z,43,59,0|gb3q40,60,40,1|glwjbz,60,40,1|glwjc0,43,59,0|gu6rfz,43,59,0|gu6rg0,60,40,1|h4mlzz,60,40,1|h4mm00,43,59,0|hcwu3z,43,59,0|hcwu40,60,40,1|hnconz,60,40,1|hncoo0,43,59,0|hvmwrz,43,59,0|hvmws0,60,40,1|i6fpzz,60,40,1|i6fq00,43,59,0|ieczfz,43,59,0|ieczg0,60,40,1|ip5snz,60,40,1|ip5so0,43,59,0|ix323z,43,59,0|ix3240,60,40,1|j7vvbz,60,40,1|j7vvc0,43,59,0|jeq8rz,43,59,0|jeq8s0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Nipigon|,0,144,0|-1353dat,0,144,0|-1353das,43,59,0|-qzoxw1,43,59,0|-qzoxw0,60,40,1|-qpm201,60,40,1|-qpm200,43,59,0|-qhn4u1,43,59,0|-qhn4u0,60,40,1|-q6w4w1,60,40,1|-q6w4w0,43,59,0|-px5wk1,43,59,0|-px5wk0,60,40,1|-pplww1,60,40,1|-pplww0,43,59,0|-pdpwk1,43,59,0|-pdpwk0,60,40,1|-p7e7c1,60,40,1|-p7e7c0,43,59,0|-ouztw1,43,59,0|-ouztw0,60,40,1|-ooiko1,60,40,1|-ooiko0,43,59,0|-oc9r81,43,59,0|-oc9r80,60,40,1|-o5si01,60,40,1|-o5si00,43,59,0|-ntwn81,43,59,0|-ntwn80,60,40,1|-nmpgo1,60,40,1|-nmpgo0,43,59,0|-nb6kk1,43,59,0|-nb6kk0,60,40,1|-n3ze01,60,40,1|-n3ze00,43,59,0|-msghw1,43,59,0|-msghw0,60,40,1|-ml9bc1,60,40,1|-ml9bc0,43,59,0|-m9qf81,43,59,0|-m9qf80,60,40,1|-m26a01,60,40,1|-m26a00,43,59,0|-lr0ck1,43,59,0|-lr0ck0,60,40,1|-lj38o1,60,40,1|-lj38o0,43,59,0|-l8a9w1,43,59,0|-l8a9w0,60,40,1|-l0d601,60,40,1|-l0d600,43,59,0|-kpk781,43,59,0|-kpk780,60,40,1|-khn3c1,60,40,1|-khn3c0,43,59,0|-k6u4k1,43,59,0|-k6u4k0,60,40,1|-jyx0o1,60,40,1|-jyx0o0,43,59,0|-jnr381,43,59,0|-jnr380,60,40,1|-jg6y01,60,40,1|-jg6y00,43,59,0|-j510k1,43,59,0|-j510k0,60,40,1|-ix3wo1,60,40,1|-ix3wo0,43,59,0|-imaxw1,43,59,0|-imaxw0,60,40,1|-iedu01,60,40,1|-iedu00,43,59,0|-i3kv81,43,59,0|-i3kv80,60,40,1|-hvnrc1,60,40,1|-hvnrc0,43,59,0|-hkusk1,43,59,0|-hkusk0,60,40,1|-hcxoo1,60,40,1|-hcxoo0,43,59,0|-h24pw1,43,59,0|-h24pw0,60,40,1|-gu7m01,60,40,1|-gu7m00,43,59,0|-gjen81,43,59,0|-gjen80,60,40,1|-gbhjc1,60,40,1|-gbhjc0,43,59,0|-g0blw1,43,59,0|-g0blw0,60,40,1|-fsrgo1,60,40,1|-fsrgo0,43,59,0|-fhlj81,43,59,0|-fhlj80,60,40,1|-ek24k1,60,40,1|-ek24k0,69,40,1|-cq2tg1,69,40,1|-cq2tg0,70,40,1|-cnp3c1,70,40,1|-cnp3c0,43,59,0|-ccw4k1,43,59,0|-ccw4k0,60,40,1|-c4z0o1,60,40,1|-c4z0o0,43,59,0|-bu61w1,43,59,0|-bu61w0,60,40,1|-bm8y01,60,40,1|-bm8y00,43,59,0|-bbfz81,43,59,0|-bbfz80,60,40,1|-b3ivc1,60,40,1|-b3ivc0,43,59,0|-aspwk1,43,59,0|-aspwk0,60,40,1|-ahk4o1,60,40,1|-ahk4o0,43,59,0|-a9mv81,43,59,0|-a9mv80,60,40,1|-9yu201,60,40,1|-9yu200,43,59,0|-9qwsk1,43,59,0|-9qwsk0,60,40,1|-9izoo1,60,40,1|-9izoo0,43,59,0|-986pw1,43,59,0|-986pw0,60,40,1|-909m01,60,40,1|-909m00,43,59,0|-8pgn81,43,59,0|-8pgn80,60,40,1|-8hjjc1,60,40,1|-8hjjc0,43,59,0|-86qkk1,43,59,0|-86qkk0,60,40,1|-7ytgo1,60,40,1|-7ytgo0,43,59,0|-7o0hw1,43,59,0|-7o0hw0,60,40,1|-7g3e01,60,40,1|-7g3e00,43,59,0|-74xgk1,43,59,0|-74xgk0,60,40,1|-6x0co1,60,40,1|-6x0co0,43,59,0|-6m7dw1,43,59,0|-6m7dw0,60,40,1|-6cufc1,60,40,1|-6cufc0,43,59,0|-63hb81,43,59,0|-63hb80,60,40,1|-5u4co1,60,40,1|-5u4co0,43,59,0|-5kr8k1,43,59,0|-5kr8k0,60,40,1|-5bea01,60,40,1|-5bea00,43,59,0|-5215w1,43,59,0|-5215w0,60,40,1|-4sb8o1,60,40,1|-4sb8o0,43,59,0|-4iy4k1,43,59,0|-4iy4k0,60,40,1|-49l601,60,40,1|-49l600,43,59,0|-4081w1,43,59,0|-4081w0,60,40,1|-3qv3c1,60,40,1|-3qv3c0,43,59,0|-3hhz81,43,59,0|-3hhz80,60,40,1|-3850o1,60,40,1|-3850o0,43,59,0|-2yrwk1,43,59,0|-2yrwk0,60,40,1|-2pey01,60,40,1|-2pey00,43,59,0|-2g1tw1,43,59,0|-2g1tw0,60,40,1|-26bwo1,60,40,1|-26bwo0,43,59,0|-1xbr81,43,59,0|-1xbr80,60,40,1|-1nlu01,60,40,1|-1nlu00,43,59,0|-1e8pw1,43,59,0|-1e8pw0,60,40,1|-14vrc1,60,40,1|-14vrc0,43,59,0|-vin81,43,59,0|-vin80,60,40,1|-m5oo1,60,40,1|-m5oo0,43,59,0|-cskk1,43,59,0|-cskk0,60,40,1|-3fm01,60,40,1|-3fm00,43,59,0|5xi3z,43,59,0|5xi40,60,40,1|fagnz,60,40,1|fago0,43,59,0|onkrz,43,59,0|onks0,60,40,1|ydhzz,60,40,1|ydi00,43,59,0|17qm3z,43,59,0|17qm40,60,40,1|1h3knz,60,40,1|1h3ko0,43,59,0|1qgorz,43,59,0|1qgos0,60,40,1|1ztnbz,60,40,1|1ztnc0,43,59,0|296rfz,43,59,0|296rg0,60,40,1|2ijpzz,60,40,1|2ijq00,43,59,0|2rwu3z,43,59,0|2rwu40,60,40,1|319snz,60,40,1|319so0,43,59,0|3amwrz,43,59,0|3amws0,60,40,1|3kctzz,60,40,1|3kcu00,43,59,0|3tczfz,43,59,0|3tczg0,60,40,1|432wnz,60,40,1|432wo0,43,59,0|4cg0rz,43,59,0|4cg0s0,60,40,1|4lszbz,60,40,1|4lszc0,43,59,0|4v63fz,43,59,0|4v63g0,60,40,1|54j1zz,60,40,1|54j200,43,59,0|5dw63z,43,59,0|5dw640,60,40,1|5n94nz,60,40,1|5n94o0,43,59,0|5wm8rz,43,59,0|5wm8s0,60,40,1|65z7bz,60,40,1|65z7c0,43,59,0|6fcbfz,43,59,0|6fcbg0,60,40,1|6p28nz,60,40,1|6p28o0,43,59,0|6y2e3z,43,59,0|6y2e40,60,40,1|77sbbz,60,40,1|77sbc0,43,59,0|7h5ffz,43,59,0|7h5fg0,60,40,1|7qidzz,60,40,1|7qie00,43,59,0|7zvi3z,43,59,0|7zvi40,60,40,1|898gnz,60,40,1|898go0,43,59,0|8ilkrz,43,59,0|8ilks0,60,40,1|8ryjbz,60,40,1|8ryjc0,43,59,0|908rfz,43,59,0|908rg0,60,40,1|9aolzz,60,40,1|9aom00,43,59,0|9iyu3z,43,59,0|9iyu40,60,40,1|9trnbz,60,40,1|9trnc0,43,59,0|a1owrz,43,59,0|a1ows0,60,40,1|achpzz,60,40,1|achq00,43,59,0|akezfz,43,59,0|akezg0,60,40,1|av7snz,60,40,1|av7so0,43,59,0|b3i0rz,43,59,0|b3i0s0,60,40,1|bdxvbz,60,40,1|bdxvc0,43,59,0|bm83fz,43,59,0|bm83g0,60,40,1|bwnxzz,60,40,1|bwny00,43,59,0|c4y63z,43,59,0|c4y640,60,40,1|cfqzbz,60,40,1|cfqzc0,43,59,0|cno8rz,43,59,0|cno8s0,60,40,1|cyh1zz,60,40,1|cyh200,43,59,0|d6ebfz,43,59,0|d6ebg0,60,40,1|dh74nz,60,40,1|dh74o0,43,59,0|dphcrz,43,59,0|dphcs0,60,40,1|dzx7bz,60,40,1|dzx7c0,43,59,0|e87ffz,43,59,0|e87fg0,60,40,1|ein9zz,60,40,1|eina00,43,59,0|eqxi3z,43,59,0|eqxi40,60,40,1|f1dcnz,60,40,1|f1dco0,43,59,0|f9nkrz,43,59,0|f9nks0,60,40,1|fkgdzz,60,40,1|fkge00,43,59,0|fsdnfz,43,59,0|fsdng0,60,40,1|g36gnz,60,40,1|g36go0,43,59,0|gb3q3z,43,59,0|gb3q40,60,40,1|glwjbz,60,40,1|glwjc0,43,59,0|gu6rfz,43,59,0|gu6rg0,60,40,1|h4mlzz,60,40,1|h4mm00,43,59,0|hcwu3z,43,59,0|hcwu40,60,40,1|hnconz,60,40,1|hncoo0,43,59,0|hvmwrz,43,59,0|hvmws0,60,40,1|i6fpzz,60,40,1|i6fq00,43,59,0|ieczfz,43,59,0|ieczg0,60,40,1|ip5snz,60,40,1|ip5so0,43,59,0|ix323z,43,59,0|ix3240,60,40,1|j7vvbz,60,40,1|j7vvc0,43,59,0|jeq8rz,43,59,0|jeq8s0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Nome|,0,146,0|-1hc7qk0,0,146,0|-1hc7qjz,0,147,0|-1078qpb,0,147,0|-1078qpa,23,33,0|-ek1nw1,23,33,0|-ek1nw0,24,34,1|-cq2tg1,24,34,1|-cq2tg0,25,34,1|-cnomo1,25,34,1|-cnomo0,23,33,0|-1fq441,23,33,0|-1fq440,26,33,0|-cs3w1,26,33,0|-cs3w0,27,34,1|-3f5c1,27,34,1|-3f5c0,26,33,0|5xyrz,26,33,0|5xys0,27,34,1|faxbz,27,34,1|faxc0,26,33,0|oo1fz,26,33,0|oo1g0,27,34,1|ydynz,27,34,1|ydyo0,26,33,0|17r2rz,26,33,0|17r2s0,27,34,1|1h41bz,27,34,1|1h41c0,26,33,0|1qh5fz,26,33,0|1qh5g0,27,34,1|1zu3zz,27,34,1|1zu400,26,33,0|23ftfz,26,33,0|23ftg0,27,34,1|2ik6nz,27,34,1|2ik6o0,26,33,0|2oomrz,26,33,0|2ooms0,27,34,1|31a9bz,27,34,1|31a9c0,26,33,0|3andfz,26,33,0|3andg0,27,34,1|3kdanz,27,34,1|3kdao0,26,33,0|3tdg3z,26,33,0|3tdg40,27,34,1|433dbz,27,34,1|433dc0,26,33,0|4cghfz,26,33,0|4cghg0,27,34,1|4ltfzz,27,34,1|4ltg00,26,33,0|4v6k3z,26,33,0|4v6k40,27,34,1|54jinz,27,34,1|54jio0,26,33,0|5dwmrz,26,33,0|5dwms0,27,34,1|5n9lbz,27,34,1|5n9lc0,26,33,0|5wmpfz,26,33,0|5wmpg0,27,34,1|65znzz,27,34,1|65zo00,26,33,0|6fcs3z,26,33,0|6fcs40,27,34,1|6p2pbz,27,34,1|6p2pc0,26,33,0|6y2urz,26,33,0|6y2us0,27,34,1|77srzz,27,34,1|77ss00,35,35,0|79dybz,35,35,0|79dyc0,36,35,0|7h5qjz,36,35,0|7h5qk0,37,38,1|7qip3z,37,38,1|7qip40,36,35,0|7zvt7z,36,35,0|7zvt80,37,38,1|898rrz,37,38,1|898rs0,36,35,0|8ilvvz,36,35,0|8ilvw0,37,38,1|8ryufz,37,38,1|8ryug0,36,35,0|9092jz,36,35,0|9092k0,37,38,1|9aox3z,37,38,1|9aox40,36,35,0|9iz57z,36,35,0|9iz580,37,38,1|9tryfz,37,38,1|9tryg0,36,35,0|a1p7vz,36,35,0|a1p7w0,37,38,1|aci13z,37,38,1|aci140,36,35,0|akfajz,36,35,0|akfak0,37,38,1|av83rz,37,38,1|av83s0,36,35,0|b3ibvz,36,35,0|b3ibw0,37,38,1|bdy6fz,37,38,1|bdy6g0,36,35,0|bm8ejz,36,35,0|bm8ek0,37,38,1|bwo93z,37,38,1|bwo940,36,35,0|c4yh7z,36,35,0|c4yh80,37,38,1|cfrafz,37,38,1|cfrag0,36,35,0|cnojvz,36,35,0|cnojw0,37,38,1|cyhd3z,37,38,1|cyhd40,36,35,0|d6emjz,36,35,0|d6emk0,37,38,1|dh7frz,37,38,1|dh7fs0,36,35,0|dphnvz,36,35,0|dphnw0,37,38,1|dzxifz,37,38,1|dzxig0,36,35,0|e87qjz,36,35,0|e87qk0,37,38,1|einl3z,37,38,1|einl40,36,35,0|eqxt7z,36,35,0|eqxt80,37,38,1|f1dnrz,37,38,1|f1dns0,36,35,0|f9nvvz,36,35,0|f9nvw0,37,38,1|fkgp3z,37,38,1|fkgp40,36,35,0|fsdyjz,36,35,0|fsdyk0,37,38,1|g36rrz,37,38,1|g36rs0,36,35,0|gb417z,36,35,0|gb4180,37,38,1|glwufz,37,38,1|glwug0,36,35,0|gu72jz,36,35,0|gu72k0,37,38,1|h4mx3z,37,38,1|h4mx40,36,35,0|hcx57z,36,35,0|hcx580,37,38,1|hnczrz,37,38,1|hnczs0,36,35,0|hvn7vz,36,35,0|hvn7w0,37,38,1|i6g13z,37,38,1|i6g140,36,35,0|iedajz,36,35,0|iedak0,37,38,1|ip63rz,37,38,1|ip63s0,36,35,0|ix3d7z,36,35,0|ix3d80,37,38,1|j7w6fz,37,38,1|j7w6g0,36,35,0|jeqjvz,36,35,0|jeqjw0,37,38,1|jqz7rz,37,38,1|jqz7s0,36,35,0|jxgmjz,36,35,0|jxgmk0,37,38,1|k9pafz,37,38,1|k9pag0,36,35,0|kg6p7z,36,35,0|kg6p80,37,38,1|ksfd3z,37,38,1|ksfd40,36,35,0|kz9qjz,36,35,0|kz9qk0,37,38,1|lbiefz,37,38,1|lbieg0,36,35,0|lhzt7z,36,35,0|lhzt80,37,38,1|lu8h3z,37,38,1|lu8h40,36,35,0|m0pvvz,36,35,0|m0pvw0,37,38,1|mcyjrz,37,38,1|mcyjs0,36,35,0|mjfyjz,36,35,0|mjfyk0,37,38,1|mvomfz,37,38,1|mvomg0,36,35,0|n2617z,36,35,0|n26180,37,38,1|neep3z,37,38,1|neep40,36,35,0|nkw3vz,36,35,0|nkw3w0,37,38,1|nx4rrz,37,38,1|nx4rs0,36,35,0|o3z57z,36,35,0|o3z580,37,38,1|og7t3z,37,38,1|og7t40,36,35,0|omp7vz,36,35,0|omp7w0,37,38,1|oyxvrz,37,38,1|oyxvs0,36,35,0|p5fajz,36,35,0|p5fak0,37,38,1|phnyfz,37,38,1|phnyg0,36,35,0|po5d7z,36,35,0|po5d80,37,38,1|q0e13z,37,38,1|q0e140,36,35,0|q6vfvz,36,35,0|q6vfw0,37,38,1|qj43rz,37,38,1|qj43s0,36,35,0|qpyh7z,36,35,0|qpyh80,37,38,1|r2753z,37,38,1|r27540,36,35,0|r8ojvz,36,35,0|r8ojw0,37,38,1|rkx7rz,37,38,1|rkx7s0,36,35,0|rremjz,36,35,0|rremk0,37,38,1|s3nafz,37,38,1|s3nag0,36,35,0|sa4p7z,36,35,0|sa4p80,37,38,1|smdd3z,37,38,1|smdd40,36,35,0|ssurvz,36,35,0|ssurw0,37,38,1|t53frz,37,38,1|t53fs0,36,35,0|tbkujz,36,35,0|tbkuk0,37,38,1|tntifz,37,38,1|tntig0,36,35,0|tunvvz,36,35,0|tunvw0,37,38,1|u6wjrz,37,38,1|u6wjs0,36,35,0|uddyjz,36,35,0|uddyk0,37,38,1|upmmfz,37,38,1|upmmg0,36,35,0|uw417z,36,35,0|uw4180,37,38,1|v8cp3z,37,38,1|v8cp40,36,35,0|veu3vz,36,35,0|veu3w0,37,38,1|vr2rrz,37,38,1|vr2rs0,36,35,0|vxk6jz,36,35,0|vxk6k0,37,38,1|w9sufz,37,38,1|w9sug0,36,35,0|wgn7vz,36,35,0|wgn7w0,37,38,1|wsvvrz,37,38,1|wsvvs0,36,35,0|wzdajz,36,35,0|wzdak0,37,38,1|xblyfz,37,38,1|xblyg0,36,35,0|xi3d7z,36,35,0|xi3d80,37,38,1|xuc13z,37,38,1|xuc140,36,35,0|y0tfvz,36,35,0|y0tfw0,37,38,1|yd23rz,37,38,1|yd23s0,36,35,0|yjjijz,36,35,0|yjjik0,37,38,1|yvs6fz,37,38,1|yvs6g0,36,35,0|z29l7z,36,35,0|z29l80,37,38,1|zei93z,37,38,1|zei940,36,35,0|zlcmjz,36,35,0|zlcmk0,37,38,1|zxlafz,37,38,1|zxlag0,36,35,0|1042p7z,36,35,0|1042p80,37,38,1|10gbd3z,37,38,1|10gbd40,36,35,0|10msrvz,36,35,0|10msrw0,37,38,1|10z1frz,37,38,1|10z1fs0,36,35,0|115iujz,36,35,0|115iuk0,37,38,1|11hrifz,37,38,1|11hrig0,36,35,0|11o8x7z,36,35,0|11o8x80,37,38,1|120hl3z,37,38,1|120hl40,36,35,0|126yzvz,36,35,0|126yzw0,37,38,1|12j7nrz,37,38,1|12j7ns0,36,35,0|12q217z,36,35,0|12q2180,37,38,1|132ap3z,37,38,1|132ap40,36,35,0|138s3vz,36,35,0|138s3w0,37,38,1|13l0rrz,37,38,1|13l0rs0,36,35,0|13ri6jz,36,35,0|13ri6k0,37,38,1|143qufz,37,38,1|143qug0,36,35,0|14a897z,36,35,0|14a8980,37,38,1|14mgx3z,37,38,1|14mgx40,36,35,0|14sybvz,36,35,0|14sybw0,37,38,1|1556zrz,37,38,1|1556zs0,36,35,0|15c1d7z,36,35,0|15c1d80,37,38,1|15oa13z,37,38,1|15oa140,36,35,0|15urfvz,36,35,0|15urfw0,37,38,1|16703rz,37,38,1|16703s0,36,35,0|16dhijz,36,35,0|16dhik0,37,38,1|16pq6fz,37,38,1|16pq6g0,36,35,0|16w7l7z,36,35,0|16w7l80,37,38,1|178g93z,37,38,1|178g940,36,35,0|17exnvz,36,35,0|17exnw0,37,38,1|17r6brz,37,38,1|17r6bs0,36,35,0|17xnqjz,36,35,0|17xnqk0,37,38,1|189wefz,37,38,1|189weg0,36,35,0|18gqrvz,36,35,0|18gqrw0,37,38,1|18szfrz,37,38,1|18szfs0,36,35,0|18zgujz,36,35,0|18zguk0,37,38,1|19bpifz,37,38,1|19bpig0,36,35,0|19i6x7z,36,35,0|19i6x80,37,38,1|19ufl3z,37,38,1|19ufl40,36,35,0|1a0wzvz,36,35,0|1a0wzw0,37,38,1|1ad5nrz,37,38,1|1ad5ns0,36,35,0|1ajn2jz,36,35,0|1ajn2k0,37,38,1|1avvqfz,37,38,1|1avvqg0,36,35,0|1b2q3vz,36,35,0|1b2q3w0,37,38,1|1beyrrz,37,38,1|1beyrs0,36,35,0|1blg6jz,36,35,0|1blg6k0,37,38,1|1bxoufz,37,38,1|1bxoug0,36,35,0|1c4697z,36,35,0|1c46980,37,38,1|1cgex3z,37,38,1|1cgex40,36,35,0|1cmwbvz,36,35,0|1cmwbw0,37,38,1|1cz4zrz,37,38,1|1cz4zs0,36,35,0|1d5mejz,36,35,0|1d5mek0,37,38,1|1dhv2fz,37,38,1|1dhv2g0,36,35,0|1doch7z,36,35,0|1doch80,37,38,1|1e0l53z,37,38,1|1e0l540,36,35,0|1e7fijz,36,35,0|1e7fik0,37,38,1|1ejo6fz,37,38,1|1ejo6g0,36,35,0|1eq5l7z,36,35,0|1eq5l80,37,38,1|1f2e93z,37,38,1|1f2e940,36,35,0|1f8vnvz,36,35,0|1f8vnw0,37,38,1|1fl4brz,37,38,1|1fl4bs0,36,35,0|1frlqjz,36,35,0|1frlqk0,37,38,1|1g3uefz,37,38,1|1g3ueg0,36,35,0|1gabt7z,36,35,0|1gabt80,37,38,1|1gmkh3z,37,38,1|1gmkh40,36,35,0|1gt1vvz,36,35,0|1gt1vw0,37,38,1|1h5ajrz,37,38,1|1h5ajs0,36,35,0|1hc4x7z,36,35,0|1hc4x80,37,38,1|1hodl3z,37,38,1|1hodl40,36,35,0|1huuzvz,36,35,0|1huuzw0,37,38,1|1i73nrz,37,38,1|1i73ns0,36,35,0|1idl2jz,36,35,0|1idl2k0,37,38,1|1iptqfz,37,38,1|1iptqg0,36,35,0|1iwb57z,36,35,0|1iwb580,37,38,1|1j8jt3z,37,38,1|1j8jt40,36,35,0|1jf17vz,36,35,0|1jf17w0,37,38,1|1jr9vrz,37,38,1|1jr9vs0,36,35,0|1jy497z,36,35,0|1jy4980,37,38,1|1kacx3z,37,38,1|1kacx40,36,35,0|1kgubvz,36,35,0|1kgubw0,37,38,1|1kt2zrz,37,38,1|1kt2zs0,36,35,0|1kzkejz,36,35,0|1kzkek0,37,38,1|1lbt2fz,37,38,1|1lbt2g0,36,35,0|1liah7z,36,35,0|1liah80,37,38,1|1luj53z,37,38,1|1luj540,36,35,0|1m10jvz,36,35,0|1m10jw0,37,38,1|1md97rz,37,38,1|1md97s0,36,35,0|1mjqmjz,36,35,0|1mjqmk0,37,38,1|1mvzafz,37,38,1|1mvzag0,36,35,0|1n2tnvz,36,35,0|1n2tnw0,37,38,1|1nf2brz,37,38,1|1nf2bs0,36,35,0|1nljqjz,36,35,0|1nljqk0,37,38,1|1nxsefz,37,38,1|1nxseg0,36,35,0|1o49t7z,36,35,0|1o49t80,37,38,1|1ogih3z,37,38,1|1ogih40,36,35,0|1omzvvz,36,35,0|1omzvw0,37,38,1|1oz8jrz,37,38,1|1oz8js0,36,35,0|1p5pyjz,36,35,0|1p5pyk0,37,38,1|1phymfz,37,38,1|1phymg0,36,35,0|1poszvz,36,35,0|1poszw0,37,38,1|1q11nrz,37,38,1|1q11ns0,36,35,0|1q7j2jz,36,35,0|1q7j2k0,37,38,1|1qjrqfz,37,38,1|1qjrqg0,36,35,0|1qq957z,36,35,0|1qq9580,37,38,1|1r2ht3z,37,38,1|1r2ht40,36,35,0|1r8z7vz,36,35,0|1r8z7w0,37,38,1|1rl7vrz,37,38,1|1rl7vs0,36,35,0|1rrpajz,36,35,0|1rrpak0,37,38,1|1s3xyfz,37,38,1|1s3xyg0,36,35,0|1safd7z,36,35,0|1safd80,37,38,1|1smo13z,37,38,1|1smo140,36,35,0|1stiejz,36,35,0|1stiek0,37,38,1|1t5r2fz,37,38,1|1t5r2g0,36,35,0|1tc8h7z,36,35,0|1tc8h80,37,38,1|1toh53z,37,38,1|1toh540,36,35,0|1tuyjvz,36,35,0|1tuyjw0,37,38,1|1u777rz,37,38,1|1u777s0,36,35,0|1udomjz,36,35,0|1udomk0,37,38,1|1upxafz,37,38,1|1upxag0,36,35,0|1uwep7z,36,35,0|1uwep80,37,38,1|1v8nd3z,37,38,1|1v8nd40,36,35,0|1vf4rvz,36,35,0|1vf4rw0,37,38,1|1vrdfrz,37,38,1|1vrdfs0,36,35,0|NaN,36,35,0",
        "America/Noronha|,0,148,0|-t85lzx,0,148,0|-t85lzw,39,43,0|-jyld81,39,43,0|-jyld80,12,13,1|-jpb3w1,12,13,1|-jpb3w0,39,43,0|-jfsfs1,39,43,0|-jfsfs0,12,13,1|-j6j6k1,12,13,1|-j6j6k0,39,43,0|-ahd141,39,43,0|-ahd140,12,13,1|-aad6g1,12,13,1|-aad6g0,39,43,0|-9yl3s1,39,43,0|-9yl3s0,12,13,1|-9sd3w1,12,13,1|-9sd3w0,39,43,0|-9ft6g1,39,43,0|-9ft6g0,12,13,1|-99jbw1,12,13,1|-99jbw0,39,43,0|-8wzeg1,39,43,0|-8wzeg0,12,13,1|-8sct81,12,13,1|-8sct80,39,43,0|-35xp41,39,43,0|-35xp40,12,13,1|-31o2k1,12,13,1|-31o2k0,39,43,0|-2kdrs1,39,43,0|-2kdrs0,12,13,1|-2hcl81,12,13,1|-2hcl80,39,43,0|-24qt41,39,43,0|-24qt40,12,13,1|-2047w1,12,13,1|-2047w0,39,43,0|-1nifs1,39,43,0|-1nifs0,12,13,1|-1hcak1,12,13,1|-1hcak0,39,43,0|-14qig1,39,43,0|-14qig0,12,13,1|-yiik1,12,13,1|-yiik0,39,43,0|89j9jz,39,43,0|89j9k0,12,13,1|8gdhfz,12,13,1|8gdhg0,39,43,0|8rwdjz,39,43,0|8rwdk0,12,13,1|8xnpfz,12,13,1|8xnpg0,39,43,0|9aoavz,39,43,0|9aoaw0,12,13,1|9g2o3z,12,13,1|9g2o40,39,43,0|9t1evz,39,43,0|9t1ew0,12,13,1|9yfs3z,12,13,1|9yfs40,39,43,0|abrhjz,39,43,0|abrhk0,12,13,1|ahvs3z,12,13,1|ahvs40,39,43,0|fj087z,39,43,0|fj0880,12,13,1|fqkdfz,12,13,1|fqkdg0,39,43,0|g239jz,39,43,0|g239k0,12,13,1|g2g5fz,12,13,1|g2g5g0,39,43,0|gl6avz,39,43,0|gl6aw0,12,13,1|grnk3z,12,13,1|grnk40,39,43,0|NaN,39,43,0",
        "America/North_Dakota/Beulah|,0,149,0|-18y0j81,0,149,0|-18y0j80,44,62,0|-r0epo1,44,62,0|-r0epo0,46,63,1|-qplwg1,46,63,1|-qplwg0,44,62,0|-qhon01,44,62,0|-qhon00,46,63,1|-q6vts1,46,63,1|-q6vts0,44,62,0|-ek1z01,44,62,0|-ek1z00,57,63,1|-cq2tg1,57,63,1|-cq2tg0,58,63,1|-cnoxs1,58,63,1|-cnoxs0,44,62,0|-1e8kc1,44,62,0|-1e8kc0,46,63,1|-14vls1,46,63,1|-14vls0,44,62,0|-viho1,44,62,0|-viho0,46,63,1|-m5j41,46,63,1|-m5j40,44,62,0|-csf01,44,62,0|-csf00,46,63,1|-3fgg1,46,63,1|-3fgg0,44,62,0|5xnnz,44,62,0|5xno0,46,63,1|fam7z,46,63,1|fam80,44,62,0|onqbz,44,62,0|onqc0,46,63,1|ydnjz,46,63,1|ydnk0,44,62,0|17qrnz,44,62,0|17qro0,46,63,1|1h3q7z,46,63,1|1h3q80,44,62,0|1qgubz,44,62,0|1qguc0,46,63,1|1ztsvz,46,63,1|1ztsw0,44,62,0|23fibz,44,62,0|23fic0,46,63,1|2ijvjz,46,63,1|2ijvk0,44,62,0|2oobnz,44,62,0|2oobo0,46,63,1|319y7z,46,63,1|319y80,44,62,0|3an2bz,44,62,0|3an2c0,46,63,1|3kczjz,46,63,1|3kczk0,44,62,0|3td4zz,44,62,0|3td500,46,63,1|43327z,46,63,1|433280,44,62,0|4cg6bz,44,62,0|4cg6c0,46,63,1|4lt4vz,46,63,1|4lt4w0,44,62,0|4v68zz,44,62,0|4v6900,46,63,1|54j7jz,46,63,1|54j7k0,44,62,0|5dwbnz,44,62,0|5dwbo0,46,63,1|5n9a7z,46,63,1|5n9a80,44,62,0|5wmebz,44,62,0|5wmec0,46,63,1|65zcvz,46,63,1|65zcw0,44,62,0|6fcgzz,44,62,0|6fch00,46,63,1|6p2e7z,46,63,1|6p2e80,44,62,0|6y2jnz,44,62,0|6y2jo0,46,63,1|77sgvz,46,63,1|77sgw0,44,62,0|7h5kzz,44,62,0|7h5l00,46,63,1|7qijjz,46,63,1|7qijk0,44,62,0|7zvnnz,44,62,0|7zvno0,46,63,1|898m7z,46,63,1|898m80,44,62,0|8ilqbz,44,62,0|8ilqc0,46,63,1|8ryovz,46,63,1|8ryow0,44,62,0|908wzz,44,62,0|908x00,46,63,1|9aorjz,46,63,1|9aork0,44,62,0|9iyznz,44,62,0|9iyzo0,46,63,1|9trsvz,46,63,1|9trsw0,44,62,0|a1p2bz,44,62,0|a1p2c0,46,63,1|achvjz,46,63,1|achvk0,44,62,0|akf4zz,44,62,0|akf500,46,63,1|av7y7z,46,63,1|av7y80,44,62,0|b3i6bz,44,62,0|b3i6c0,46,63,1|bdy0vz,46,63,1|bdy0w0,44,62,0|bm88zz,44,62,0|bm8900,46,63,1|bwo3jz,46,63,1|bwo3k0,44,62,0|c4ybnz,44,62,0|c4ybo0,46,63,1|cfr4vz,46,63,1|cfr4w0,44,62,0|cnoebz,44,62,0|cnoec0,46,63,1|cyh7jz,46,63,1|cyh7k0,44,62,0|d6egzz,44,62,0|d6eh00,46,63,1|dh7a7z,46,63,1|dh7a80,44,62,0|dphibz,44,62,0|dphic0,46,63,1|dzxcvz,46,63,1|dzxcw0,44,62,0|e87kzz,44,62,0|e87l00,46,63,1|einfjz,46,63,1|einfk0,44,62,0|eqxnnz,44,62,0|eqxno0,46,63,1|f1di7z,46,63,1|f1di80,44,62,0|f9nqbz,44,62,0|f9nqc0,46,63,1|fkgjjz,46,63,1|fkgjk0,44,62,0|fsdszz,44,62,0|fsdt00,46,63,1|g36m7z,46,63,1|g36m80,44,62,0|gb3vnz,44,62,0|gb3vo0,46,63,1|glwovz,46,63,1|glwow0,44,62,0|gu6wzz,44,62,0|gu6x00,46,63,1|h4mrjz,46,63,1|h4mrk0,44,62,0|hcwznz,44,62,0|hcwzo0,46,63,1|hncu7z,46,63,1|hncu80,44,62,0|hvn2bz,44,62,0|hvn2c0,46,63,1|i6fvjz,46,63,1|i6fvk0,44,62,0|ied4zz,44,62,0|ied500,46,63,1|ip5y7z,46,63,1|ip5y80,44,62,0|ix37nz,44,62,0|ix37o0,46,63,1|j7w0vz,46,63,1|j7w0w0,44,62,0|jeqebz,44,62,0|jeqec0,46,63,1|jqz27z,46,63,1|jqz280,44,62,0|jxggzz,44,62,0|jxgh00,46,63,1|k9p4vz,46,63,1|k9p4w0,44,62,0|kg6jnz,44,62,0|kg6jo0,46,63,1|ksf7jz,46,63,1|ksf7k0,44,62,0|kz9kzz,44,62,0|kz9l00,46,63,1|lbi8vz,46,63,1|lbi8w0,45,63,0|lhzkvz,45,63,0|lhzkw0,47,59,1|lu88rz,47,59,1|lu88s0,45,63,0|m0pnjz,45,63,0|m0pnk0,47,59,1|mcybfz,47,59,1|mcybg0,45,63,0|mjfq7z,45,63,0|mjfq80,47,59,1|mvoe3z,47,59,1|mvoe40,45,63,0|n25svz,45,63,0|n25sw0,47,59,1|neegrz,47,59,1|neegs0,45,63,0|nkvvjz,45,63,0|nkvvk0,47,59,1|nx4jfz,47,59,1|nx4jg0,45,63,0|o3ywvz,45,63,0|o3yww0,47,59,1|og7krz,47,59,1|og7ks0,45,63,0|omozjz,45,63,0|omozk0,47,59,1|oyxnfz,47,59,1|oyxng0,45,63,0|p5f27z,45,63,0|p5f280,47,59,1|phnq3z,47,59,1|phnq40,45,63,0|po54vz,45,63,0|po54w0,47,59,1|q0dsrz,47,59,1|q0dss0,45,63,0|q6v7jz,45,63,0|q6v7k0,47,59,1|qj3vfz,47,59,1|qj3vg0,45,63,0|qpy8vz,45,63,0|qpy8w0,47,59,1|r26wrz,47,59,1|r26ws0,45,63,0|r8objz,45,63,0|r8obk0,47,59,1|rkwzfz,47,59,1|rkwzg0,45,63,0|rree7z,45,63,0|rree80,47,59,1|s3n23z,47,59,1|s3n240,45,63,0|sa4gvz,45,63,0|sa4gw0,47,59,1|smd4rz,47,59,1|smd4s0,45,63,0|ssujjz,45,63,0|ssujk0,47,59,1|t537fz,47,59,1|t537g0,45,63,0|tbkm7z,45,63,0|tbkm80,47,59,1|tnta3z,47,59,1|tnta40,45,63,0|tunnjz,45,63,0|tunnk0,47,59,1|u6wbfz,47,59,1|u6wbg0,45,63,0|uddq7z,45,63,0|uddq80,47,59,1|upme3z,47,59,1|upme40,45,63,0|uw3svz,45,63,0|uw3sw0,47,59,1|v8cgrz,47,59,1|v8cgs0,45,63,0|vetvjz,45,63,0|vetvk0,47,59,1|vr2jfz,47,59,1|vr2jg0,45,63,0|vxjy7z,45,63,0|vxjy80,47,59,1|w9sm3z,47,59,1|w9sm40,45,63,0|wgmzjz,45,63,0|wgmzk0,47,59,1|wsvnfz,47,59,1|wsvng0,45,63,0|wzd27z,45,63,0|wzd280,47,59,1|xblq3z,47,59,1|xblq40,45,63,0|xi34vz,45,63,0|xi34w0,47,59,1|xubsrz,47,59,1|xubss0,45,63,0|y0t7jz,45,63,0|y0t7k0,47,59,1|yd1vfz,47,59,1|yd1vg0,45,63,0|yjja7z,45,63,0|yjja80,47,59,1|yvry3z,47,59,1|yvry40,45,63,0|z29cvz,45,63,0|z29cw0,47,59,1|zei0rz,47,59,1|zei0s0,45,63,0|zlce7z,45,63,0|zlce80,47,59,1|zxl23z,47,59,1|zxl240,45,63,0|1042gvz,45,63,0|1042gw0,47,59,1|10gb4rz,47,59,1|10gb4s0,45,63,0|10msjjz,45,63,0|10msjk0,47,59,1|10z17fz,47,59,1|10z17g0,45,63,0|115im7z,45,63,0|115im80,47,59,1|11hra3z,47,59,1|11hra40,45,63,0|11o8ovz,45,63,0|11o8ow0,47,59,1|120hcrz,47,59,1|120hcs0,45,63,0|126yrjz,45,63,0|126yrk0,47,59,1|12j7ffz,47,59,1|12j7fg0,45,63,0|12q1svz,45,63,0|12q1sw0,47,59,1|132agrz,47,59,1|132ags0,45,63,0|138rvjz,45,63,0|138rvk0,47,59,1|13l0jfz,47,59,1|13l0jg0,45,63,0|13rhy7z,45,63,0|13rhy80,47,59,1|143qm3z,47,59,1|143qm40,45,63,0|14a80vz,45,63,0|14a80w0,47,59,1|14mgorz,47,59,1|14mgos0,45,63,0|14sy3jz,45,63,0|14sy3k0,47,59,1|1556rfz,47,59,1|1556rg0,45,63,0|15c14vz,45,63,0|15c14w0,47,59,1|15o9srz,47,59,1|15o9ss0,45,63,0|15ur7jz,45,63,0|15ur7k0,47,59,1|166zvfz,47,59,1|166zvg0,45,63,0|16dha7z,45,63,0|16dha80,47,59,1|16ppy3z,47,59,1|16ppy40,45,63,0|16w7cvz,45,63,0|16w7cw0,47,59,1|178g0rz,47,59,1|178g0s0,45,63,0|17exfjz,45,63,0|17exfk0,47,59,1|17r63fz,47,59,1|17r63g0,45,63,0|17xni7z,45,63,0|17xni80,47,59,1|189w63z,47,59,1|189w640,45,63,0|18gqjjz,45,63,0|18gqjk0,47,59,1|18sz7fz,47,59,1|18sz7g0,45,63,0|18zgm7z,45,63,0|18zgm80,47,59,1|19bpa3z,47,59,1|19bpa40,45,63,0|19i6ovz,45,63,0|19i6ow0,47,59,1|19ufcrz,47,59,1|19ufcs0,45,63,0|1a0wrjz,45,63,0|1a0wrk0,47,59,1|1ad5ffz,47,59,1|1ad5fg0,45,63,0|1ajmu7z,45,63,0|1ajmu80,47,59,1|1avvi3z,47,59,1|1avvi40,45,63,0|1b2pvjz,45,63,0|1b2pvk0,47,59,1|1beyjfz,47,59,1|1beyjg0,45,63,0|1blfy7z,45,63,0|1blfy80,47,59,1|1bxom3z,47,59,1|1bxom40,45,63,0|1c460vz,45,63,0|1c460w0,47,59,1|1cgeorz,47,59,1|1cgeos0,45,63,0|1cmw3jz,45,63,0|1cmw3k0,47,59,1|1cz4rfz,47,59,1|1cz4rg0,45,63,0|1d5m67z,45,63,0|1d5m680,47,59,1|1dhuu3z,47,59,1|1dhuu40,45,63,0|1doc8vz,45,63,0|1doc8w0,47,59,1|1e0kwrz,47,59,1|1e0kws0,45,63,0|1e7fa7z,45,63,0|1e7fa80,47,59,1|1ejny3z,47,59,1|1ejny40,45,63,0|1eq5cvz,45,63,0|1eq5cw0,47,59,1|1f2e0rz,47,59,1|1f2e0s0,45,63,0|1f8vfjz,45,63,0|1f8vfk0,47,59,1|1fl43fz,47,59,1|1fl43g0,45,63,0|1frli7z,45,63,0|1frli80,47,59,1|1g3u63z,47,59,1|1g3u640,45,63,0|1gabkvz,45,63,0|1gabkw0,47,59,1|1gmk8rz,47,59,1|1gmk8s0,45,63,0|1gt1njz,45,63,0|1gt1nk0,47,59,1|1h5abfz,47,59,1|1h5abg0,45,63,0|1hc4ovz,45,63,0|1hc4ow0,47,59,1|1hodcrz,47,59,1|1hodcs0,45,63,0|1huurjz,45,63,0|1huurk0,47,59,1|1i73ffz,47,59,1|1i73fg0,45,63,0|1idku7z,45,63,0|1idku80,47,59,1|1ipti3z,47,59,1|1ipti40,45,63,0|1iwawvz,45,63,0|1iwaww0,47,59,1|1j8jkrz,47,59,1|1j8jks0,45,63,0|1jf0zjz,45,63,0|1jf0zk0,47,59,1|1jr9nfz,47,59,1|1jr9ng0,45,63,0|1jy40vz,45,63,0|1jy40w0,47,59,1|1kacorz,47,59,1|1kacos0,45,63,0|1kgu3jz,45,63,0|1kgu3k0,47,59,1|1kt2rfz,47,59,1|1kt2rg0,45,63,0|1kzk67z,45,63,0|1kzk680,47,59,1|1lbsu3z,47,59,1|1lbsu40,45,63,0|1lia8vz,45,63,0|1lia8w0,47,59,1|1luiwrz,47,59,1|1luiws0,45,63,0|1m10bjz,45,63,0|1m10bk0,47,59,1|1md8zfz,47,59,1|1md8zg0,45,63,0|1mjqe7z,45,63,0|1mjqe80,47,59,1|1mvz23z,47,59,1|1mvz240,45,63,0|1n2tfjz,45,63,0|1n2tfk0,47,59,1|1nf23fz,47,59,1|1nf23g0,45,63,0|1nlji7z,45,63,0|1nlji80,47,59,1|1nxs63z,47,59,1|1nxs640,45,63,0|1o49kvz,45,63,0|1o49kw0,47,59,1|1ogi8rz,47,59,1|1ogi8s0,45,63,0|1omznjz,45,63,0|1omznk0,47,59,1|1oz8bfz,47,59,1|1oz8bg0,45,63,0|1p5pq7z,45,63,0|1p5pq80,47,59,1|1phye3z,47,59,1|1phye40,45,63,0|1posrjz,45,63,0|1posrk0,47,59,1|1q11ffz,47,59,1|1q11fg0,45,63,0|1q7iu7z,45,63,0|1q7iu80,47,59,1|1qjri3z,47,59,1|1qjri40,45,63,0|1qq8wvz,45,63,0|1qq8ww0,47,59,1|1r2hkrz,47,59,1|1r2hks0,45,63,0|1r8yzjz,45,63,0|1r8yzk0,47,59,1|1rl7nfz,47,59,1|1rl7ng0,45,63,0|1rrp27z,45,63,0|1rrp280,47,59,1|1s3xq3z,47,59,1|1s3xq40,45,63,0|1saf4vz,45,63,0|1saf4w0,47,59,1|1smnsrz,47,59,1|1smnss0,45,63,0|1sti67z,45,63,0|1sti680,47,59,1|1t5qu3z,47,59,1|1t5qu40,45,63,0|1tc88vz,45,63,0|1tc88w0,47,59,1|1togwrz,47,59,1|1togws0,45,63,0|1tuybjz,45,63,0|1tuybk0,47,59,1|1u76zfz,47,59,1|1u76zg0,45,63,0|1udoe7z,45,63,0|1udoe80,47,59,1|1upx23z,47,59,1|1upx240,45,63,0|1uwegvz,45,63,0|1uwegw0,47,59,1|1v8n4rz,47,59,1|1v8n4s0,45,63,0|1vf4jjz,45,63,0|1vf4jk0,47,59,1|1vrd7fz,47,59,1|1vrd7g0,45,63,0|NaN,45,63,0",
        "America/North_Dakota/Center|,0,150,0|-18y0j81,0,150,0|-18y0j80,44,62,0|-r0epo1,44,62,0|-r0epo0,46,63,1|-qplwg1,46,63,1|-qplwg0,44,62,0|-qhon01,44,62,0|-qhon00,46,63,1|-q6vts1,46,63,1|-q6vts0,44,62,0|-ek1z01,44,62,0|-ek1z00,57,63,1|-cq2tg1,57,63,1|-cq2tg0,58,63,1|-cnoxs1,58,63,1|-cnoxs0,44,62,0|-1e8kc1,44,62,0|-1e8kc0,46,63,1|-14vls1,46,63,1|-14vls0,44,62,0|-viho1,44,62,0|-viho0,46,63,1|-m5j41,46,63,1|-m5j40,44,62,0|-csf01,44,62,0|-csf00,46,63,1|-3fgg1,46,63,1|-3fgg0,44,62,0|5xnnz,44,62,0|5xno0,46,63,1|fam7z,46,63,1|fam80,44,62,0|onqbz,44,62,0|onqc0,46,63,1|ydnjz,46,63,1|ydnk0,44,62,0|17qrnz,44,62,0|17qro0,46,63,1|1h3q7z,46,63,1|1h3q80,44,62,0|1qgubz,44,62,0|1qguc0,46,63,1|1ztsvz,46,63,1|1ztsw0,44,62,0|23fibz,44,62,0|23fic0,46,63,1|2ijvjz,46,63,1|2ijvk0,44,62,0|2oobnz,44,62,0|2oobo0,46,63,1|319y7z,46,63,1|319y80,44,62,0|3an2bz,44,62,0|3an2c0,46,63,1|3kczjz,46,63,1|3kczk0,44,62,0|3td4zz,44,62,0|3td500,46,63,1|43327z,46,63,1|433280,44,62,0|4cg6bz,44,62,0|4cg6c0,46,63,1|4lt4vz,46,63,1|4lt4w0,44,62,0|4v68zz,44,62,0|4v6900,46,63,1|54j7jz,46,63,1|54j7k0,44,62,0|5dwbnz,44,62,0|5dwbo0,46,63,1|5n9a7z,46,63,1|5n9a80,44,62,0|5wmebz,44,62,0|5wmec0,46,63,1|65zcvz,46,63,1|65zcw0,44,62,0|6fcgzz,44,62,0|6fch00,46,63,1|6p2e7z,46,63,1|6p2e80,44,62,0|6y2jnz,44,62,0|6y2jo0,46,63,1|77sgvz,46,63,1|77sgw0,44,62,0|7h5kzz,44,62,0|7h5l00,46,63,1|7qijjz,46,63,1|7qijk0,44,62,0|7zvnnz,44,62,0|7zvno0,46,63,1|898m7z,46,63,1|898m80,44,62,0|8ilqbz,44,62,0|8ilqc0,46,63,1|8ryovz,46,63,1|8ryow0,44,62,0|908wzz,44,62,0|908x00,46,63,1|9aorjz,46,63,1|9aork0,44,62,0|9iyznz,44,62,0|9iyzo0,46,63,1|9trsvz,46,63,1|9trsw0,44,62,0|a1p2bz,44,62,0|a1p2c0,46,63,1|achvjz,46,63,1|achvk0,44,62,0|akf4zz,44,62,0|akf500,46,63,1|av7y7z,46,63,1|av7y80,44,62,0|b3i6bz,44,62,0|b3i6c0,46,63,1|bdy0vz,46,63,1|bdy0w0,44,62,0|bm88zz,44,62,0|bm8900,46,63,1|bwo3jz,46,63,1|bwo3k0,45,63,0|c4y8vz,45,63,0|c4y8w0,47,59,1|cfr23z,47,59,1|cfr240,45,63,0|cnobjz,45,63,0|cnobk0,47,59,1|cyh4rz,47,59,1|cyh4s0,45,63,0|d6ee7z,45,63,0|d6ee80,47,59,1|dh77fz,47,59,1|dh77g0,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxa3z,47,59,1|dzxa40,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|eincrz,47,59,1|eincs0,45,63,0|eqxkvz,45,63,0|eqxkw0,47,59,1|f1dffz,47,59,1|f1dfg0,45,63,0|f9nnjz,45,63,0|f9nnk0,47,59,1|fkggrz,47,59,1|fkggs0,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36jfz,47,59,1|g36jg0,45,63,0|gb3svz,45,63,0|gb3sw0,47,59,1|glwm3z,47,59,1|glwm40,45,63,0|gu6u7z,45,63,0|gu6u80,47,59,1|h4morz,47,59,1|h4mos0,45,63,0|hcwwvz,45,63,0|hcwww0,47,59,1|hncrfz,47,59,1|hncrg0,45,63,0|hvmzjz,45,63,0|hvmzk0,47,59,1|i6fsrz,47,59,1|i6fss0,45,63,0|ied27z,45,63,0|ied280,47,59,1|ip5vfz,47,59,1|ip5vg0,45,63,0|ix34vz,45,63,0|ix34w0,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jeqbjz,45,63,0|jeqbk0,47,59,1|jqyzfz,47,59,1|jqyzg0,45,63,0|jxge7z,45,63,0|jxge80,47,59,1|k9p23z,47,59,1|k9p240,45,63,0|kg6gvz,45,63,0|kg6gw0,47,59,1|ksf4rz,47,59,1|ksf4s0,45,63,0|kz9i7z,45,63,0|kz9i80,47,59,1|lbi63z,47,59,1|lbi640,45,63,0|lhzkvz,45,63,0|lhzkw0,47,59,1|lu88rz,47,59,1|lu88s0,45,63,0|m0pnjz,45,63,0|m0pnk0,47,59,1|mcybfz,47,59,1|mcybg0,45,63,0|mjfq7z,45,63,0|mjfq80,47,59,1|mvoe3z,47,59,1|mvoe40,45,63,0|n25svz,45,63,0|n25sw0,47,59,1|neegrz,47,59,1|neegs0,45,63,0|nkvvjz,45,63,0|nkvvk0,47,59,1|nx4jfz,47,59,1|nx4jg0,45,63,0|o3ywvz,45,63,0|o3yww0,47,59,1|og7krz,47,59,1|og7ks0,45,63,0|omozjz,45,63,0|omozk0,47,59,1|oyxnfz,47,59,1|oyxng0,45,63,0|p5f27z,45,63,0|p5f280,47,59,1|phnq3z,47,59,1|phnq40,45,63,0|po54vz,45,63,0|po54w0,47,59,1|q0dsrz,47,59,1|q0dss0,45,63,0|q6v7jz,45,63,0|q6v7k0,47,59,1|qj3vfz,47,59,1|qj3vg0,45,63,0|qpy8vz,45,63,0|qpy8w0,47,59,1|r26wrz,47,59,1|r26ws0,45,63,0|r8objz,45,63,0|r8obk0,47,59,1|rkwzfz,47,59,1|rkwzg0,45,63,0|rree7z,45,63,0|rree80,47,59,1|s3n23z,47,59,1|s3n240,45,63,0|sa4gvz,45,63,0|sa4gw0,47,59,1|smd4rz,47,59,1|smd4s0,45,63,0|ssujjz,45,63,0|ssujk0,47,59,1|t537fz,47,59,1|t537g0,45,63,0|tbkm7z,45,63,0|tbkm80,47,59,1|tnta3z,47,59,1|tnta40,45,63,0|tunnjz,45,63,0|tunnk0,47,59,1|u6wbfz,47,59,1|u6wbg0,45,63,0|uddq7z,45,63,0|uddq80,47,59,1|upme3z,47,59,1|upme40,45,63,0|uw3svz,45,63,0|uw3sw0,47,59,1|v8cgrz,47,59,1|v8cgs0,45,63,0|vetvjz,45,63,0|vetvk0,47,59,1|vr2jfz,47,59,1|vr2jg0,45,63,0|vxjy7z,45,63,0|vxjy80,47,59,1|w9sm3z,47,59,1|w9sm40,45,63,0|wgmzjz,45,63,0|wgmzk0,47,59,1|wsvnfz,47,59,1|wsvng0,45,63,0|wzd27z,45,63,0|wzd280,47,59,1|xblq3z,47,59,1|xblq40,45,63,0|xi34vz,45,63,0|xi34w0,47,59,1|xubsrz,47,59,1|xubss0,45,63,0|y0t7jz,45,63,0|y0t7k0,47,59,1|yd1vfz,47,59,1|yd1vg0,45,63,0|yjja7z,45,63,0|yjja80,47,59,1|yvry3z,47,59,1|yvry40,45,63,0|z29cvz,45,63,0|z29cw0,47,59,1|zei0rz,47,59,1|zei0s0,45,63,0|zlce7z,45,63,0|zlce80,47,59,1|zxl23z,47,59,1|zxl240,45,63,0|1042gvz,45,63,0|1042gw0,47,59,1|10gb4rz,47,59,1|10gb4s0,45,63,0|10msjjz,45,63,0|10msjk0,47,59,1|10z17fz,47,59,1|10z17g0,45,63,0|115im7z,45,63,0|115im80,47,59,1|11hra3z,47,59,1|11hra40,45,63,0|11o8ovz,45,63,0|11o8ow0,47,59,1|120hcrz,47,59,1|120hcs0,45,63,0|126yrjz,45,63,0|126yrk0,47,59,1|12j7ffz,47,59,1|12j7fg0,45,63,0|12q1svz,45,63,0|12q1sw0,47,59,1|132agrz,47,59,1|132ags0,45,63,0|138rvjz,45,63,0|138rvk0,47,59,1|13l0jfz,47,59,1|13l0jg0,45,63,0|13rhy7z,45,63,0|13rhy80,47,59,1|143qm3z,47,59,1|143qm40,45,63,0|14a80vz,45,63,0|14a80w0,47,59,1|14mgorz,47,59,1|14mgos0,45,63,0|14sy3jz,45,63,0|14sy3k0,47,59,1|1556rfz,47,59,1|1556rg0,45,63,0|15c14vz,45,63,0|15c14w0,47,59,1|15o9srz,47,59,1|15o9ss0,45,63,0|15ur7jz,45,63,0|15ur7k0,47,59,1|166zvfz,47,59,1|166zvg0,45,63,0|16dha7z,45,63,0|16dha80,47,59,1|16ppy3z,47,59,1|16ppy40,45,63,0|16w7cvz,45,63,0|16w7cw0,47,59,1|178g0rz,47,59,1|178g0s0,45,63,0|17exfjz,45,63,0|17exfk0,47,59,1|17r63fz,47,59,1|17r63g0,45,63,0|17xni7z,45,63,0|17xni80,47,59,1|189w63z,47,59,1|189w640,45,63,0|18gqjjz,45,63,0|18gqjk0,47,59,1|18sz7fz,47,59,1|18sz7g0,45,63,0|18zgm7z,45,63,0|18zgm80,47,59,1|19bpa3z,47,59,1|19bpa40,45,63,0|19i6ovz,45,63,0|19i6ow0,47,59,1|19ufcrz,47,59,1|19ufcs0,45,63,0|1a0wrjz,45,63,0|1a0wrk0,47,59,1|1ad5ffz,47,59,1|1ad5fg0,45,63,0|1ajmu7z,45,63,0|1ajmu80,47,59,1|1avvi3z,47,59,1|1avvi40,45,63,0|1b2pvjz,45,63,0|1b2pvk0,47,59,1|1beyjfz,47,59,1|1beyjg0,45,63,0|1blfy7z,45,63,0|1blfy80,47,59,1|1bxom3z,47,59,1|1bxom40,45,63,0|1c460vz,45,63,0|1c460w0,47,59,1|1cgeorz,47,59,1|1cgeos0,45,63,0|1cmw3jz,45,63,0|1cmw3k0,47,59,1|1cz4rfz,47,59,1|1cz4rg0,45,63,0|1d5m67z,45,63,0|1d5m680,47,59,1|1dhuu3z,47,59,1|1dhuu40,45,63,0|1doc8vz,45,63,0|1doc8w0,47,59,1|1e0kwrz,47,59,1|1e0kws0,45,63,0|1e7fa7z,45,63,0|1e7fa80,47,59,1|1ejny3z,47,59,1|1ejny40,45,63,0|1eq5cvz,45,63,0|1eq5cw0,47,59,1|1f2e0rz,47,59,1|1f2e0s0,45,63,0|1f8vfjz,45,63,0|1f8vfk0,47,59,1|1fl43fz,47,59,1|1fl43g0,45,63,0|1frli7z,45,63,0|1frli80,47,59,1|1g3u63z,47,59,1|1g3u640,45,63,0|1gabkvz,45,63,0|1gabkw0,47,59,1|1gmk8rz,47,59,1|1gmk8s0,45,63,0|1gt1njz,45,63,0|1gt1nk0,47,59,1|1h5abfz,47,59,1|1h5abg0,45,63,0|1hc4ovz,45,63,0|1hc4ow0,47,59,1|1hodcrz,47,59,1|1hodcs0,45,63,0|1huurjz,45,63,0|1huurk0,47,59,1|1i73ffz,47,59,1|1i73fg0,45,63,0|1idku7z,45,63,0|1idku80,47,59,1|1ipti3z,47,59,1|1ipti40,45,63,0|1iwawvz,45,63,0|1iwaww0,47,59,1|1j8jkrz,47,59,1|1j8jks0,45,63,0|1jf0zjz,45,63,0|1jf0zk0,47,59,1|1jr9nfz,47,59,1|1jr9ng0,45,63,0|1jy40vz,45,63,0|1jy40w0,47,59,1|1kacorz,47,59,1|1kacos0,45,63,0|1kgu3jz,45,63,0|1kgu3k0,47,59,1|1kt2rfz,47,59,1|1kt2rg0,45,63,0|1kzk67z,45,63,0|1kzk680,47,59,1|1lbsu3z,47,59,1|1lbsu40,45,63,0|1lia8vz,45,63,0|1lia8w0,47,59,1|1luiwrz,47,59,1|1luiws0,45,63,0|1m10bjz,45,63,0|1m10bk0,47,59,1|1md8zfz,47,59,1|1md8zg0,45,63,0|1mjqe7z,45,63,0|1mjqe80,47,59,1|1mvz23z,47,59,1|1mvz240,45,63,0|1n2tfjz,45,63,0|1n2tfk0,47,59,1|1nf23fz,47,59,1|1nf23g0,45,63,0|1nlji7z,45,63,0|1nlji80,47,59,1|1nxs63z,47,59,1|1nxs640,45,63,0|1o49kvz,45,63,0|1o49kw0,47,59,1|1ogi8rz,47,59,1|1ogi8s0,45,63,0|1omznjz,45,63,0|1omznk0,47,59,1|1oz8bfz,47,59,1|1oz8bg0,45,63,0|1p5pq7z,45,63,0|1p5pq80,47,59,1|1phye3z,47,59,1|1phye40,45,63,0|1posrjz,45,63,0|1posrk0,47,59,1|1q11ffz,47,59,1|1q11fg0,45,63,0|1q7iu7z,45,63,0|1q7iu80,47,59,1|1qjri3z,47,59,1|1qjri40,45,63,0|1qq8wvz,45,63,0|1qq8ww0,47,59,1|1r2hkrz,47,59,1|1r2hks0,45,63,0|1r8yzjz,45,63,0|1r8yzk0,47,59,1|1rl7nfz,47,59,1|1rl7ng0,45,63,0|1rrp27z,45,63,0|1rrp280,47,59,1|1s3xq3z,47,59,1|1s3xq40,45,63,0|1saf4vz,45,63,0|1saf4w0,47,59,1|1smnsrz,47,59,1|1smnss0,45,63,0|1sti67z,45,63,0|1sti680,47,59,1|1t5qu3z,47,59,1|1t5qu40,45,63,0|1tc88vz,45,63,0|1tc88w0,47,59,1|1togwrz,47,59,1|1togws0,45,63,0|1tuybjz,45,63,0|1tuybk0,47,59,1|1u76zfz,47,59,1|1u76zg0,45,63,0|1udoe7z,45,63,0|1udoe80,47,59,1|1upx23z,47,59,1|1upx240,45,63,0|1uwegvz,45,63,0|1uwegw0,47,59,1|1v8n4rz,47,59,1|1v8n4s0,45,63,0|1vf4jjz,45,63,0|1vf4jk0,47,59,1|1vrd7fz,47,59,1|1vrd7g0,45,63,0|NaN,45,63,0",
        "America/North_Dakota/New_Salem|,0,151,0|-18y0j81,0,151,0|-18y0j80,44,62,0|-r0epo1,44,62,0|-r0epo0,46,63,1|-qplwg1,46,63,1|-qplwg0,44,62,0|-qhon01,44,62,0|-qhon00,46,63,1|-q6vts1,46,63,1|-q6vts0,44,62,0|-ek1z01,44,62,0|-ek1z00,57,63,1|-cq2tg1,57,63,1|-cq2tg0,58,63,1|-cnoxs1,58,63,1|-cnoxs0,44,62,0|-1e8kc1,44,62,0|-1e8kc0,46,63,1|-14vls1,46,63,1|-14vls0,44,62,0|-viho1,44,62,0|-viho0,46,63,1|-m5j41,46,63,1|-m5j40,44,62,0|-csf01,44,62,0|-csf00,46,63,1|-3fgg1,46,63,1|-3fgg0,44,62,0|5xnnz,44,62,0|5xno0,46,63,1|fam7z,46,63,1|fam80,44,62,0|onqbz,44,62,0|onqc0,46,63,1|ydnjz,46,63,1|ydnk0,44,62,0|17qrnz,44,62,0|17qro0,46,63,1|1h3q7z,46,63,1|1h3q80,44,62,0|1qgubz,44,62,0|1qguc0,46,63,1|1ztsvz,46,63,1|1ztsw0,44,62,0|23fibz,44,62,0|23fic0,46,63,1|2ijvjz,46,63,1|2ijvk0,44,62,0|2oobnz,44,62,0|2oobo0,46,63,1|319y7z,46,63,1|319y80,44,62,0|3an2bz,44,62,0|3an2c0,46,63,1|3kczjz,46,63,1|3kczk0,44,62,0|3td4zz,44,62,0|3td500,46,63,1|43327z,46,63,1|433280,44,62,0|4cg6bz,44,62,0|4cg6c0,46,63,1|4lt4vz,46,63,1|4lt4w0,44,62,0|4v68zz,44,62,0|4v6900,46,63,1|54j7jz,46,63,1|54j7k0,44,62,0|5dwbnz,44,62,0|5dwbo0,46,63,1|5n9a7z,46,63,1|5n9a80,44,62,0|5wmebz,44,62,0|5wmec0,46,63,1|65zcvz,46,63,1|65zcw0,44,62,0|6fcgzz,44,62,0|6fch00,46,63,1|6p2e7z,46,63,1|6p2e80,44,62,0|6y2jnz,44,62,0|6y2jo0,46,63,1|77sgvz,46,63,1|77sgw0,44,62,0|7h5kzz,44,62,0|7h5l00,46,63,1|7qijjz,46,63,1|7qijk0,44,62,0|7zvnnz,44,62,0|7zvno0,46,63,1|898m7z,46,63,1|898m80,44,62,0|8ilqbz,44,62,0|8ilqc0,46,63,1|8ryovz,46,63,1|8ryow0,44,62,0|908wzz,44,62,0|908x00,46,63,1|9aorjz,46,63,1|9aork0,44,62,0|9iyznz,44,62,0|9iyzo0,46,63,1|9trsvz,46,63,1|9trsw0,44,62,0|a1p2bz,44,62,0|a1p2c0,46,63,1|achvjz,46,63,1|achvk0,44,62,0|akf4zz,44,62,0|akf500,46,63,1|av7y7z,46,63,1|av7y80,44,62,0|b3i6bz,44,62,0|b3i6c0,46,63,1|bdy0vz,46,63,1|bdy0w0,44,62,0|bm88zz,44,62,0|bm8900,46,63,1|bwo3jz,46,63,1|bwo3k0,44,62,0|c4ybnz,44,62,0|c4ybo0,46,63,1|cfr4vz,46,63,1|cfr4w0,44,62,0|cnoebz,44,62,0|cnoec0,46,63,1|cyh7jz,46,63,1|cyh7k0,44,62,0|d6egzz,44,62,0|d6eh00,46,63,1|dh7a7z,46,63,1|dh7a80,44,62,0|dphibz,44,62,0|dphic0,46,63,1|dzxcvz,46,63,1|dzxcw0,44,62,0|e87kzz,44,62,0|e87l00,46,63,1|einfjz,46,63,1|einfk0,44,62,0|eqxnnz,44,62,0|eqxno0,46,63,1|f1di7z,46,63,1|f1di80,44,62,0|f9nqbz,44,62,0|f9nqc0,46,63,1|fkgjjz,46,63,1|fkgjk0,44,62,0|fsdszz,44,62,0|fsdt00,46,63,1|g36m7z,46,63,1|g36m80,44,62,0|gb3vnz,44,62,0|gb3vo0,46,63,1|glwovz,46,63,1|glwow0,44,62,0|gu6wzz,44,62,0|gu6x00,46,63,1|h4mrjz,46,63,1|h4mrk0,44,62,0|hcwznz,44,62,0|hcwzo0,46,63,1|hncu7z,46,63,1|hncu80,45,63,0|hvmzjz,45,63,0|hvmzk0,47,59,1|i6fsrz,47,59,1|i6fss0,45,63,0|ied27z,45,63,0|ied280,47,59,1|ip5vfz,47,59,1|ip5vg0,45,63,0|ix34vz,45,63,0|ix34w0,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jeqbjz,45,63,0|jeqbk0,47,59,1|jqyzfz,47,59,1|jqyzg0,45,63,0|jxge7z,45,63,0|jxge80,47,59,1|k9p23z,47,59,1|k9p240,45,63,0|kg6gvz,45,63,0|kg6gw0,47,59,1|ksf4rz,47,59,1|ksf4s0,45,63,0|kz9i7z,45,63,0|kz9i80,47,59,1|lbi63z,47,59,1|lbi640,45,63,0|lhzkvz,45,63,0|lhzkw0,47,59,1|lu88rz,47,59,1|lu88s0,45,63,0|m0pnjz,45,63,0|m0pnk0,47,59,1|mcybfz,47,59,1|mcybg0,45,63,0|mjfq7z,45,63,0|mjfq80,47,59,1|mvoe3z,47,59,1|mvoe40,45,63,0|n25svz,45,63,0|n25sw0,47,59,1|neegrz,47,59,1|neegs0,45,63,0|nkvvjz,45,63,0|nkvvk0,47,59,1|nx4jfz,47,59,1|nx4jg0,45,63,0|o3ywvz,45,63,0|o3yww0,47,59,1|og7krz,47,59,1|og7ks0,45,63,0|omozjz,45,63,0|omozk0,47,59,1|oyxnfz,47,59,1|oyxng0,45,63,0|p5f27z,45,63,0|p5f280,47,59,1|phnq3z,47,59,1|phnq40,45,63,0|po54vz,45,63,0|po54w0,47,59,1|q0dsrz,47,59,1|q0dss0,45,63,0|q6v7jz,45,63,0|q6v7k0,47,59,1|qj3vfz,47,59,1|qj3vg0,45,63,0|qpy8vz,45,63,0|qpy8w0,47,59,1|r26wrz,47,59,1|r26ws0,45,63,0|r8objz,45,63,0|r8obk0,47,59,1|rkwzfz,47,59,1|rkwzg0,45,63,0|rree7z,45,63,0|rree80,47,59,1|s3n23z,47,59,1|s3n240,45,63,0|sa4gvz,45,63,0|sa4gw0,47,59,1|smd4rz,47,59,1|smd4s0,45,63,0|ssujjz,45,63,0|ssujk0,47,59,1|t537fz,47,59,1|t537g0,45,63,0|tbkm7z,45,63,0|tbkm80,47,59,1|tnta3z,47,59,1|tnta40,45,63,0|tunnjz,45,63,0|tunnk0,47,59,1|u6wbfz,47,59,1|u6wbg0,45,63,0|uddq7z,45,63,0|uddq80,47,59,1|upme3z,47,59,1|upme40,45,63,0|uw3svz,45,63,0|uw3sw0,47,59,1|v8cgrz,47,59,1|v8cgs0,45,63,0|vetvjz,45,63,0|vetvk0,47,59,1|vr2jfz,47,59,1|vr2jg0,45,63,0|vxjy7z,45,63,0|vxjy80,47,59,1|w9sm3z,47,59,1|w9sm40,45,63,0|wgmzjz,45,63,0|wgmzk0,47,59,1|wsvnfz,47,59,1|wsvng0,45,63,0|wzd27z,45,63,0|wzd280,47,59,1|xblq3z,47,59,1|xblq40,45,63,0|xi34vz,45,63,0|xi34w0,47,59,1|xubsrz,47,59,1|xubss0,45,63,0|y0t7jz,45,63,0|y0t7k0,47,59,1|yd1vfz,47,59,1|yd1vg0,45,63,0|yjja7z,45,63,0|yjja80,47,59,1|yvry3z,47,59,1|yvry40,45,63,0|z29cvz,45,63,0|z29cw0,47,59,1|zei0rz,47,59,1|zei0s0,45,63,0|zlce7z,45,63,0|zlce80,47,59,1|zxl23z,47,59,1|zxl240,45,63,0|1042gvz,45,63,0|1042gw0,47,59,1|10gb4rz,47,59,1|10gb4s0,45,63,0|10msjjz,45,63,0|10msjk0,47,59,1|10z17fz,47,59,1|10z17g0,45,63,0|115im7z,45,63,0|115im80,47,59,1|11hra3z,47,59,1|11hra40,45,63,0|11o8ovz,45,63,0|11o8ow0,47,59,1|120hcrz,47,59,1|120hcs0,45,63,0|126yrjz,45,63,0|126yrk0,47,59,1|12j7ffz,47,59,1|12j7fg0,45,63,0|12q1svz,45,63,0|12q1sw0,47,59,1|132agrz,47,59,1|132ags0,45,63,0|138rvjz,45,63,0|138rvk0,47,59,1|13l0jfz,47,59,1|13l0jg0,45,63,0|13rhy7z,45,63,0|13rhy80,47,59,1|143qm3z,47,59,1|143qm40,45,63,0|14a80vz,45,63,0|14a80w0,47,59,1|14mgorz,47,59,1|14mgos0,45,63,0|14sy3jz,45,63,0|14sy3k0,47,59,1|1556rfz,47,59,1|1556rg0,45,63,0|15c14vz,45,63,0|15c14w0,47,59,1|15o9srz,47,59,1|15o9ss0,45,63,0|15ur7jz,45,63,0|15ur7k0,47,59,1|166zvfz,47,59,1|166zvg0,45,63,0|16dha7z,45,63,0|16dha80,47,59,1|16ppy3z,47,59,1|16ppy40,45,63,0|16w7cvz,45,63,0|16w7cw0,47,59,1|178g0rz,47,59,1|178g0s0,45,63,0|17exfjz,45,63,0|17exfk0,47,59,1|17r63fz,47,59,1|17r63g0,45,63,0|17xni7z,45,63,0|17xni80,47,59,1|189w63z,47,59,1|189w640,45,63,0|18gqjjz,45,63,0|18gqjk0,47,59,1|18sz7fz,47,59,1|18sz7g0,45,63,0|18zgm7z,45,63,0|18zgm80,47,59,1|19bpa3z,47,59,1|19bpa40,45,63,0|19i6ovz,45,63,0|19i6ow0,47,59,1|19ufcrz,47,59,1|19ufcs0,45,63,0|1a0wrjz,45,63,0|1a0wrk0,47,59,1|1ad5ffz,47,59,1|1ad5fg0,45,63,0|1ajmu7z,45,63,0|1ajmu80,47,59,1|1avvi3z,47,59,1|1avvi40,45,63,0|1b2pvjz,45,63,0|1b2pvk0,47,59,1|1beyjfz,47,59,1|1beyjg0,45,63,0|1blfy7z,45,63,0|1blfy80,47,59,1|1bxom3z,47,59,1|1bxom40,45,63,0|1c460vz,45,63,0|1c460w0,47,59,1|1cgeorz,47,59,1|1cgeos0,45,63,0|1cmw3jz,45,63,0|1cmw3k0,47,59,1|1cz4rfz,47,59,1|1cz4rg0,45,63,0|1d5m67z,45,63,0|1d5m680,47,59,1|1dhuu3z,47,59,1|1dhuu40,45,63,0|1doc8vz,45,63,0|1doc8w0,47,59,1|1e0kwrz,47,59,1|1e0kws0,45,63,0|1e7fa7z,45,63,0|1e7fa80,47,59,1|1ejny3z,47,59,1|1ejny40,45,63,0|1eq5cvz,45,63,0|1eq5cw0,47,59,1|1f2e0rz,47,59,1|1f2e0s0,45,63,0|1f8vfjz,45,63,0|1f8vfk0,47,59,1|1fl43fz,47,59,1|1fl43g0,45,63,0|1frli7z,45,63,0|1frli80,47,59,1|1g3u63z,47,59,1|1g3u640,45,63,0|1gabkvz,45,63,0|1gabkw0,47,59,1|1gmk8rz,47,59,1|1gmk8s0,45,63,0|1gt1njz,45,63,0|1gt1nk0,47,59,1|1h5abfz,47,59,1|1h5abg0,45,63,0|1hc4ovz,45,63,0|1hc4ow0,47,59,1|1hodcrz,47,59,1|1hodcs0,45,63,0|1huurjz,45,63,0|1huurk0,47,59,1|1i73ffz,47,59,1|1i73fg0,45,63,0|1idku7z,45,63,0|1idku80,47,59,1|1ipti3z,47,59,1|1ipti40,45,63,0|1iwawvz,45,63,0|1iwaww0,47,59,1|1j8jkrz,47,59,1|1j8jks0,45,63,0|1jf0zjz,45,63,0|1jf0zk0,47,59,1|1jr9nfz,47,59,1|1jr9ng0,45,63,0|1jy40vz,45,63,0|1jy40w0,47,59,1|1kacorz,47,59,1|1kacos0,45,63,0|1kgu3jz,45,63,0|1kgu3k0,47,59,1|1kt2rfz,47,59,1|1kt2rg0,45,63,0|1kzk67z,45,63,0|1kzk680,47,59,1|1lbsu3z,47,59,1|1lbsu40,45,63,0|1lia8vz,45,63,0|1lia8w0,47,59,1|1luiwrz,47,59,1|1luiws0,45,63,0|1m10bjz,45,63,0|1m10bk0,47,59,1|1md8zfz,47,59,1|1md8zg0,45,63,0|1mjqe7z,45,63,0|1mjqe80,47,59,1|1mvz23z,47,59,1|1mvz240,45,63,0|1n2tfjz,45,63,0|1n2tfk0,47,59,1|1nf23fz,47,59,1|1nf23g0,45,63,0|1nlji7z,45,63,0|1nlji80,47,59,1|1nxs63z,47,59,1|1nxs640,45,63,0|1o49kvz,45,63,0|1o49kw0,47,59,1|1ogi8rz,47,59,1|1ogi8s0,45,63,0|1omznjz,45,63,0|1omznk0,47,59,1|1oz8bfz,47,59,1|1oz8bg0,45,63,0|1p5pq7z,45,63,0|1p5pq80,47,59,1|1phye3z,47,59,1|1phye40,45,63,0|1posrjz,45,63,0|1posrk0,47,59,1|1q11ffz,47,59,1|1q11fg0,45,63,0|1q7iu7z,45,63,0|1q7iu80,47,59,1|1qjri3z,47,59,1|1qjri40,45,63,0|1qq8wvz,45,63,0|1qq8ww0,47,59,1|1r2hkrz,47,59,1|1r2hks0,45,63,0|1r8yzjz,45,63,0|1r8yzk0,47,59,1|1rl7nfz,47,59,1|1rl7ng0,45,63,0|1rrp27z,45,63,0|1rrp280,47,59,1|1s3xq3z,47,59,1|1s3xq40,45,63,0|1saf4vz,45,63,0|1saf4w0,47,59,1|1smnsrz,47,59,1|1smnss0,45,63,0|1sti67z,45,63,0|1sti680,47,59,1|1t5qu3z,47,59,1|1t5qu40,45,63,0|1tc88vz,45,63,0|1tc88w0,47,59,1|1togwrz,47,59,1|1togws0,45,63,0|1tuybjz,45,63,0|1tuybk0,47,59,1|1u76zfz,47,59,1|1u76zg0,45,63,0|1udoe7z,45,63,0|1udoe80,47,59,1|1upx23z,47,59,1|1upx240,45,63,0|1uwegvz,45,63,0|1uwegw0,47,59,1|1v8n4rz,47,59,1|1v8n4s0,45,63,0|1vf4jjz,45,63,0|1vf4jk0,47,59,1|1vrd7fz,47,59,1|1vrd7g0,45,63,0|NaN,45,63,0",
        "America/Nuuk|,0,152,0|-rvumf5,0,152,0|-rvumf4,38,41,0|5ct4jz,38,41,0|5ct4k0,39,43,1|5lsw3z,39,43,1|5lsw40,38,41,0|5v5xfz,38,41,0|5v5xg0,39,43,1|64iyrz,39,43,1|64iys0,38,41,0|6dw03z,38,41,0|6dw040,39,43,1|6n91fz,39,43,1|6n91g0,38,41,0|6wm2rz,38,41,0|6wm2s0,39,43,1|75z43z,39,43,1|75z440,38,41,0|7fc5fz,38,41,0|7fc5g0,39,43,1|7p25fz,39,43,1|7p25g0,38,41,0|7yf6rz,38,41,0|7yf6s0,39,43,1|87s83z,39,43,1|87s840,38,41,0|8h59fz,38,41,0|8h59g0,39,43,1|8qiarz,39,43,1|8qias0,38,41,0|8zvc3z,38,41,0|8zvc40,39,43,1|998dfz,39,43,1|998dg0,38,41,0|9ilerz,38,41,0|9iles0,39,43,1|9ryg3z,39,43,1|9ryg40,38,41,0|a1bhfz,38,41,0|a1bhg0,39,43,1|aaoirz,39,43,1|aaois0,38,41,0|ak1k3z,38,41,0|ak1k40,39,43,1|atrk3z,39,43,1|atrk40,38,41,0|b34lfz,38,41,0|b34lg0,39,43,1|bchmrz,39,43,1|bchms0,38,41,0|bluo3z,38,41,0|bluo40,39,43,1|bv7pfz,39,43,1|bv7pg0,38,41,0|c4kqrz,38,41,0|c4kqs0,39,43,1|cdxs3z,39,43,1|cdxs40,38,41,0|cnatfz,38,41,0|cnatg0,39,43,1|cwnurz,39,43,1|cwnus0,38,41,0|d60w3z,38,41,0|d60w40,39,43,1|dfdxfz,39,43,1|dfdxg0,38,41,0|dp3xfz,38,41,0|dp3xg0,39,43,1|dzwtfz,39,43,1|dzwtg0,38,41,0|e7u03z,38,41,0|e7u040,39,43,1|eimw3z,39,43,1|eimw40,38,41,0|eqk2rz,38,41,0|eqk2s0,39,43,1|f1cyrz,39,43,1|f1cys0,38,41,0|f9a5fz,38,41,0|f9a5g0,39,43,1|fkg03z,39,43,1|fkg040,38,41,0|fs083z,38,41,0|fs0840,39,43,1|g362rz,39,43,1|g362s0,38,41,0|gaqarz,38,41,0|gaqas0,39,43,1|glw5fz,39,43,1|glw5g0,38,41,0|gttc3z,38,41,0|gttc40,39,43,1|h4m83z,39,43,1|h4m840,38,41,0|hcjerz,38,41,0|hcjes0,39,43,1|hncarz,39,43,1|hncas0,38,41,0|hv9hfz,38,41,0|hv9hg0,39,43,1|i6fc3z,39,43,1|i6fc40,38,41,0|idzk3z,38,41,0|idzk40,39,43,1|ip5erz,39,43,1|ip5es0,38,41,0|iwpmrz,38,41,0|iwpms0,39,43,1|j7vhfz,39,43,1|j7vhg0,38,41,0|jffpfz,38,41,0|jffpg0,39,43,1|jqlk3z,39,43,1|jqlk40,38,41,0|jyiqrz,38,41,0|jyiqs0,39,43,1|k9bmrz,39,43,1|k9bms0,38,41,0|kh8tfz,38,41,0|kh8tg0,39,43,1|ks1pfz,39,43,1|ks1pg0,38,41,0|kzyw3z,38,41,0|kzyw40,39,43,1|lb4qrz,39,43,1|lb4qs0,38,41,0|lioyrz,38,41,0|lioys0,39,43,1|ltutfz,39,43,1|ltutg0,38,41,0|m1f1fz,38,41,0|m1f1g0,39,43,1|mckw3z,39,43,1|mckw40,38,41,0|mki2rz,38,41,0|mki2s0,39,43,1|mvayrz,39,43,1|mvays0,38,41,0|n385fz,38,41,0|n385g0,39,43,1|ne11fz,39,43,1|ne11g0,38,41,0|nly83z,38,41,0|nly840,39,43,1|nwr43z,39,43,1|nwr440,38,41,0|o4oarz,38,41,0|o4oas0,39,43,1|ofu5fz,39,43,1|ofu5g0,38,41,0|onedfz,38,41,0|onedg0,39,43,1|oyk83z,39,43,1|oyk840,38,41,0|p64g3z,38,41,0|p64g40,39,43,1|phaarz,39,43,1|phaas0,38,41,0|pp7hfz,38,41,0|pp7hg0,39,43,1|q00dfz,39,43,1|q00dg0,38,41,0|q7xk3z,38,41,0|q7xk40,39,43,1|qiqg3z,39,43,1|qiqg40,38,41,0|qqnmrz,38,41,0|qqnms0,39,43,1|r1thfz,39,43,1|r1thg0,38,41,0|r9dpfz,38,41,0|r9dpg0,39,43,1|rkjk3z,39,43,1|rkjk40,38,41,0|rs3s3z,38,41,0|rs3s40,39,43,0|sb6tfz,39,43,0|sb6tg0,12,13,1|slzpfz,12,13,1|slzpg0,39,43,0|stww3z,39,43,0|stww40,12,13,1|t4ps3z,12,13,1|t4ps40,39,43,0|tcmyrz,39,43,0|tcmys0,12,13,1|tnfurz,12,13,1|tnfus0,39,43,0|tvd1fz,39,43,0|tvd1g0,12,13,1|u6iw3z,12,13,1|u6iw40,39,43,0|ue343z,39,43,0|ue3440,12,13,1|up8yrz,12,13,1|up8ys0,39,43,0|uwt6rz,39,43,0|uwt6s0,12,13,1|v7z1fz,12,13,1|v7z1g0,39,43,0|vfw83z,39,43,0|vfw840,12,13,1|vqp43z,12,13,1|vqp440,39,43,0|vymarz,39,43,0|vymas0,12,13,1|w9f6rz,12,13,1|w9f6s0,39,43,0|whcdfz,39,43,0|whcdg0,12,13,1|wsi83z,12,13,1|wsi840,39,43,0|x02g3z,39,43,0|x02g40,12,13,1|xb8arz,12,13,1|xb8as0,39,43,0|xisirz,39,43,0|xisis0,12,13,1|xtydfz,12,13,1|xtydg0,39,43,0|y1ilfz,39,43,0|y1ilg0,12,13,1|ycog3z,12,13,1|ycog40,39,43,0|yklmrz,39,43,0|yklms0,12,13,1|yveirz,12,13,1|yveis0,39,43,0|z3bpfz,39,43,0|z3bpg0,12,13,1|ze4lfz,12,13,1|ze4lg0,39,43,0|zm1s3z,39,43,0|zm1s40,12,13,1|zx7mrz,12,13,1|zx7ms0,39,43,0|104rurz,39,43,0|104rus0,12,13,1|10fxpfz,12,13,1|10fxpg0,39,43,0|10nhxfz,39,43,0|10nhxg0,12,13,1|10yns3z,12,13,1|10yns40,39,43,0|116kyrz,39,43,0|116kys0,12,13,1|11hdurz,12,13,1|11hdus0,39,43,0|11pb1fz,39,43,0|11pb1g0,12,13,1|1203xfz,12,13,1|1203xg0,39,43,0|128143z,39,43,0|1281440,12,13,1|12iu03z,12,13,1|12iu040,39,43,0|12qr6rz,39,43,0|12qr6s0,12,13,1|131x1fz,12,13,1|131x1g0,39,43,0|139h9fz,39,43,0|139h9g0,12,13,1|13kn43z,12,13,1|13kn440,39,43,0|13s7c3z,39,43,0|13s7c40,12,13,1|143d6rz,12,13,1|143d6s0,39,43,0|14badfz,39,43,0|14badg0,12,13,1|14m39fz,12,13,1|14m39g0,39,43,0|14u0g3z,39,43,0|14u0g40,12,13,1|154tc3z,12,13,1|154tc40,39,43,0|15cqirz,39,43,0|15cqis0,12,13,1|15nwdfz,12,13,1|15nwdg0,39,43,0|15vglfz,39,43,0|15vglg0,12,13,1|166mg3z,12,13,1|166mg40,39,43,0|16e6o3z,39,43,0|16e6o40,12,13,1|16pcirz,12,13,1|16pcis0,39,43,0|16x9pfz,39,43,0|16x9pg0,12,13,1|1782lfz,12,13,1|1782lg0,39,43,0|17fzs3z,39,43,0|17fzs40,12,13,1|17qso3z,12,13,1|17qso40,39,43,0|17ypurz,39,43,0|17ypus0,12,13,1|189iqrz,12,13,1|189iqs0,39,43,0|18hfxfz,39,43,0|18hfxg0,12,13,1|18sls3z,12,13,1|18sls40,39,43,0|190603z,39,43,0|1906040,12,13,1|19bburz,12,13,1|19bbus0,39,43,0|19iw2rz,39,43,0|19iw2s0,12,13,1|19u1xfz,12,13,1|19u1xg0,39,43,0|1a1z43z,39,43,0|1a1z440,12,13,1|1acs03z,12,13,1|1acs040,39,43,0|1akp6rz,39,43,0|1akp6s0,12,13,1|1avi2rz,12,13,1|1avi2s0,39,43,0|1b3f9fz,39,43,0|1b3f9g0,12,13,1|1bel43z,12,13,1|1bel440,39,43,0|1bm5c3z,39,43,0|1bm5c40,12,13,1|1bxb6rz,12,13,1|1bxb6s0,39,43,0|1c4verz,39,43,0|1c4ves0,12,13,1|1cg19fz,12,13,1|1cg19g0,39,43,0|1cnlhfz,39,43,0|1cnlhg0,12,13,1|1cyrc3z,12,13,1|1cyrc40,39,43,0|1d6oirz,39,43,0|1d6ois0,12,13,1|1dhherz,12,13,1|1dhhes0,39,43,0|1dpelfz,39,43,0|1dpelg0,12,13,1|1e07hfz,12,13,1|1e07hg0,39,43,0|1e84o3z,39,43,0|1e84o40,12,13,1|1ejairz,12,13,1|1ejais0,39,43,0|1equqrz,39,43,0|1equqs0,12,13,1|1f20lfz,12,13,1|1f20lg0,39,43,0|1f9ktfz,39,43,0|1f9ktg0,12,13,1|1fkqo3z,12,13,1|1fkqo40,39,43,0|1fsnurz,39,43,0|1fsnus0,12,13,1|1g3gqrz,12,13,1|1g3gqs0,39,43,0|1gbdxfz,39,43,0|1gbdxg0,12,13,1|1gm6tfz,12,13,1|1gm6tg0,39,43,0|1gu403z,39,43,0|1gu4040,12,13,1|1h4ww3z,12,13,1|1h4ww40,39,43,0|1hcu2rz,39,43,0|1hcu2s0,12,13,1|1hnzxfz,12,13,1|1hnzxg0,39,43,0|1hvk5fz,39,43,0|1hvk5g0,12,13,1|1i6q03z,12,13,1|1i6q040,39,43,0|1iea83z,39,43,0|1iea840,12,13,1|1ipg2rz,12,13,1|1ipg2s0,39,43,0|1ixd9fz,39,43,0|1ixd9g0,12,13,1|1j865fz,12,13,1|1j865g0,39,43,0|1jg3c3z,39,43,0|1jg3c40,12,13,1|1jqw83z,12,13,1|1jqw840,39,43,0|1jyterz,39,43,0|1jytes0,12,13,1|1k9z9fz,12,13,1|1k9z9g0,39,43,0|1khjhfz,39,43,0|1khjhg0,12,13,1|1kspc3z,12,13,1|1kspc40,39,43,0|1l09k3z,39,43,0|1l09k40,12,13,1|1lbferz,12,13,1|1lbfes0,39,43,0|1ljclfz,39,43,0|1ljclg0,12,13,1|1lu5hfz,12,13,1|1lu5hg0,39,43,0|1m22o3z,39,43,0|1m22o40,12,13,1|1mcvk3z,12,13,1|1mcvk40,39,43,0|1mksqrz,39,43,0|1mksqs0,12,13,1|1mvlmrz,12,13,1|1mvlms0,39,43,0|1n3itfz,39,43,0|1n3itg0,12,13,1|1neoo3z,12,13,1|1neoo40,39,43,0|1nm8w3z,39,43,0|1nm8w40,12,13,1|1nxeqrz,12,13,1|1nxeqs0,39,43,0|1o4yyrz,39,43,0|1o4yys0,12,13,1|1og4tfz,12,13,1|1og4tg0,39,43,0|1oo203z,39,43,0|1oo2040,12,13,1|1oyuw3z,12,13,1|1oyuw40,39,43,0|1p6s2rz,39,43,0|1p6s2s0,12,13,1|1phkyrz,12,13,1|1phkys0,39,43,0|1ppi5fz,39,43,0|1ppi5g0,12,13,1|1q0o03z,12,13,1|1q0o040,39,43,0|1q8883z,39,43,0|1q88840,12,13,1|1qje2rz,12,13,1|1qje2s0,39,43,0|1qqyarz,39,43,0|1qqyas0,12,13,1|1r245fz,12,13,1|1r245g0,39,43,0|1r9odfz,39,43,0|1r9odg0,12,13,1|1rku83z,12,13,1|1rku840,39,43,0|1rsrerz,39,43,0|1rsres0,12,13,1|1s3karz,12,13,1|1s3kas0,39,43,0|1sbhhfz,39,43,0|1sbhhg0,12,13,1|1smadfz,12,13,1|1smadg0,39,43,0|1su7k3z,39,43,0|1su7k40,12,13,1|1t5derz,12,13,1|1t5des0,39,43,0|1tcxmrz,39,43,0|1tcxms0,12,13,1|1to3hfz,12,13,1|1to3hg0,39,43,0|1tvnpfz,39,43,0|1tvnpg0,12,13,1|1u6tk3z,12,13,1|1u6tk40,39,43,0|1ueqqrz,39,43,0|1ueqqs0,12,13,1|1upjmrz,12,13,1|1upjms0,39,43,0|1uxgtfz,39,43,0|1uxgtg0,12,13,1|1v89pfz,12,13,1|1v89pg0,39,43,0|1vg6w3z,39,43,0|1vg6w40,12,13,1|1vqzs3z,12,13,1|1vqzs40,39,43,0|NaN,39,43,0",
        "America/Ojinaga|,0,153,0|-p1u4k1,0,153,0|-p1u4k0,44,62,0|-m7ock1,44,62,0|-m7ock0,45,63,0|-kf67c1,45,63,0|-kf67c0,44,62,0|-k6mpw1,44,62,0|-k6mpw0,46,63,1|-jypm01,46,63,1|-jypm00,44,62,0|-jpan81,44,62,0|-jpan80,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxa3z,47,59,1|dzxa40,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|eincrz,47,59,1|eincs0,45,63,0|eqxnnz,45,63,0|eqxno0,46,63,1|f1di7z,46,63,1|f1di80,44,62,0|f9nqbz,44,62,0|f9nqc0,46,63,1|fkgjjz,46,63,1|fkgjk0,44,62,0|fsdszz,44,62,0|fsdt00,46,63,1|g36m7z,46,63,1|g36m80,44,62,0|gcwozz,44,62,0|gcwp00,46,63,1|gkgu7z,46,63,1|gkgu80,44,62,0|gu6wzz,44,62,0|gu6x00,46,63,1|h4mrjz,46,63,1|h4mrk0,44,62,0|hcwznz,44,62,0|hcwzo0,46,63,1|hncu7z,46,63,1|hncu80,44,62,0|hvn2bz,44,62,0|hvn2c0,46,63,1|i6fvjz,46,63,1|i6fvk0,44,62,0|ied4zz,44,62,0|ied500,46,63,1|ip5y7z,46,63,1|ip5y80,44,62,0|ix37nz,44,62,0|ix37o0,46,63,1|j7w0vz,46,63,1|j7w0w0,44,62,0|jftabz,44,62,0|jftac0,46,63,1|jqm3jz,46,63,1|jqm3k0,44,62,0|jywbnz,44,62,0|jywbo0,46,63,1|k9c67z,46,63,1|k9c680,44,62,0|khmebz,44,62,0|khmec0,46,63,1|ks28vz,46,63,1|ks28w0,44,62,0|kz9kzz,44,62,0|kz9l00,46,63,1|lbi8vz,46,63,1|lbi8w0,44,62,0|lhznnz,44,62,0|lhzno0,46,63,1|lu8bjz,46,63,1|lu8bk0,44,62,0|m0pqbz,44,62,0|m0pqc0,46,63,1|mcye7z,46,63,1|mcye80,44,62,0|mjfszz,44,62,0|mjft00,46,63,1|mvogvz,46,63,1|mvogw0,44,62,0|n25vnz,44,62,0|n25vo0,46,63,1|neejjz,46,63,1|neejk0,44,62,0|nkvybz,44,62,0|nkvyc0,46,63,1|nx4m7z,46,63,1|nx4m80,44,62,0|o3yznz,44,62,0|o3yzo0,46,63,1|og7njz,46,63,1|og7nk0,44,62,0|omp2bz,44,62,0|omp2c0,46,63,1|oyxq7z,46,63,1|oyxq80,44,62,0|p5f4zz,44,62,0|p5f500,46,63,1|phnsvz,46,63,1|phnsw0,44,62,0|po57nz,44,62,0|po57o0,46,63,1|q0dvjz,46,63,1|q0dvk0,44,62,0|q6vabz,44,62,0|q6vac0,46,63,1|qj3y7z,46,63,1|qj3y80,44,62,0|qpybnz,44,62,0|qpybo0,46,63,1|r26zjz,46,63,1|r26zk0,44,62,0|r8oebz,44,62,0|r8oec0,46,63,1|rkk3jz,46,63,1|rkk3k0,45,63,0|rree7z,45,63,0|rree80,47,59,1|s3n23z,47,59,1|s3n240,45,63,0|sa4gvz,45,63,0|sa4gw0,47,59,1|smd4rz,47,59,1|smd4s0,45,63,0|ssujjz,45,63,0|ssujk0,47,59,1|t537fz,47,59,1|t537g0,45,63,0|tbkm7z,45,63,0|tbkm80,47,59,1|tnta3z,47,59,1|tnta40,45,63,0|tunnjz,45,63,0|tunnk0,47,59,1|u6wbfz,47,59,1|u6wbg0,45,63,0|uddq7z,45,63,0|uddq80,47,59,1|upme3z,47,59,1|upme40,45,63,0|uw3svz,45,63,0|uw3sw0,47,59,1|v8cgrz,47,59,1|v8cgs0,45,63,0|vetvjz,45,63,0|vetvk0,47,59,1|vr2jfz,47,59,1|vr2jg0,45,63,0|vxjy7z,45,63,0|vxjy80,47,59,1|w9sm3z,47,59,1|w9sm40,45,63,0|wgmzjz,45,63,0|wgmzk0,47,59,1|wsvnfz,47,59,1|wsvng0,45,63,0|wzd27z,45,63,0|wzd280,47,59,1|xblq3z,47,59,1|xblq40,45,63,0|xi34vz,45,63,0|xi34w0,47,59,1|xubsrz,47,59,1|xubss0,45,63,0|y0t7jz,45,63,0|y0t7k0,47,59,1|yd1vfz,47,59,1|yd1vg0,45,63,0|yjja7z,45,63,0|yjja80,47,59,1|yvry3z,47,59,1|yvry40,45,63,0|z29cvz,45,63,0|z29cw0,47,59,1|zei0rz,47,59,1|zei0s0,45,63,0|zlce7z,45,63,0|zlce80,47,59,1|zxl23z,47,59,1|zxl240,45,63,0|1042gvz,45,63,0|1042gw0,47,59,1|10gb4rz,47,59,1|10gb4s0,45,63,0|10msjjz,45,63,0|10msjk0,47,59,1|10z17fz,47,59,1|10z17g0,45,63,0|115im7z,45,63,0|115im80,47,59,1|11hra3z,47,59,1|11hra40,45,63,0|11o8ovz,45,63,0|11o8ow0,47,59,1|120hcrz,47,59,1|120hcs0,45,63,0|126yrjz,45,63,0|126yrk0,47,59,1|12j7ffz,47,59,1|12j7fg0,45,63,0|12q1svz,45,63,0|12q1sw0,47,59,1|132agrz,47,59,1|132ags0,45,63,0|138rvjz,45,63,0|138rvk0,47,59,1|13l0jfz,47,59,1|13l0jg0,45,63,0|13rhy7z,45,63,0|13rhy80,47,59,1|143qm3z,47,59,1|143qm40,45,63,0|14a80vz,45,63,0|14a80w0,47,59,1|14mgorz,47,59,1|14mgos0,45,63,0|14sy3jz,45,63,0|14sy3k0,47,59,1|1556rfz,47,59,1|1556rg0,45,63,0|15c14vz,45,63,0|15c14w0,47,59,1|15o9srz,47,59,1|15o9ss0,45,63,0|15ur7jz,45,63,0|15ur7k0,47,59,1|166zvfz,47,59,1|166zvg0,45,63,0|16dha7z,45,63,0|16dha80,47,59,1|16ppy3z,47,59,1|16ppy40,45,63,0|16w7cvz,45,63,0|16w7cw0,47,59,1|178g0rz,47,59,1|178g0s0,45,63,0|17exfjz,45,63,0|17exfk0,47,59,1|17r63fz,47,59,1|17r63g0,45,63,0|17xni7z,45,63,0|17xni80,47,59,1|189w63z,47,59,1|189w640,45,63,0|18gqjjz,45,63,0|18gqjk0,47,59,1|18sz7fz,47,59,1|18sz7g0,45,63,0|18zgm7z,45,63,0|18zgm80,47,59,1|19bpa3z,47,59,1|19bpa40,45,63,0|19i6ovz,45,63,0|19i6ow0,47,59,1|19ufcrz,47,59,1|19ufcs0,45,63,0|1a0wrjz,45,63,0|1a0wrk0,47,59,1|1ad5ffz,47,59,1|1ad5fg0,45,63,0|1ajmu7z,45,63,0|1ajmu80,47,59,1|1avvi3z,47,59,1|1avvi40,45,63,0|1b2pvjz,45,63,0|1b2pvk0,47,59,1|1beyjfz,47,59,1|1beyjg0,45,63,0|1blfy7z,45,63,0|1blfy80,47,59,1|1bxom3z,47,59,1|1bxom40,45,63,0|1c460vz,45,63,0|1c460w0,47,59,1|1cgeorz,47,59,1|1cgeos0,45,63,0|1cmw3jz,45,63,0|1cmw3k0,47,59,1|1cz4rfz,47,59,1|1cz4rg0,45,63,0|1d5m67z,45,63,0|1d5m680,47,59,1|1dhuu3z,47,59,1|1dhuu40,45,63,0|1doc8vz,45,63,0|1doc8w0,47,59,1|1e0kwrz,47,59,1|1e0kws0,45,63,0|1e7fa7z,45,63,0|1e7fa80,47,59,1|1ejny3z,47,59,1|1ejny40,45,63,0|1eq5cvz,45,63,0|1eq5cw0,47,59,1|1f2e0rz,47,59,1|1f2e0s0,45,63,0|1f8vfjz,45,63,0|1f8vfk0,47,59,1|1fl43fz,47,59,1|1fl43g0,45,63,0|1frli7z,45,63,0|1frli80,47,59,1|1g3u63z,47,59,1|1g3u640,45,63,0|1gabkvz,45,63,0|1gabkw0,47,59,1|1gmk8rz,47,59,1|1gmk8s0,45,63,0|1gt1njz,45,63,0|1gt1nk0,47,59,1|1h5abfz,47,59,1|1h5abg0,45,63,0|1hc4ovz,45,63,0|1hc4ow0,47,59,1|1hodcrz,47,59,1|1hodcs0,45,63,0|1huurjz,45,63,0|1huurk0,47,59,1|1i73ffz,47,59,1|1i73fg0,45,63,0|1idku7z,45,63,0|1idku80,47,59,1|1ipti3z,47,59,1|1ipti40,45,63,0|1iwawvz,45,63,0|1iwaww0,47,59,1|1j8jkrz,47,59,1|1j8jks0,45,63,0|1jf0zjz,45,63,0|1jf0zk0,47,59,1|1jr9nfz,47,59,1|1jr9ng0,45,63,0|1jy40vz,45,63,0|1jy40w0,47,59,1|1kacorz,47,59,1|1kacos0,45,63,0|1kgu3jz,45,63,0|1kgu3k0,47,59,1|1kt2rfz,47,59,1|1kt2rg0,45,63,0|1kzk67z,45,63,0|1kzk680,47,59,1|1lbsu3z,47,59,1|1lbsu40,45,63,0|1lia8vz,45,63,0|1lia8w0,47,59,1|1luiwrz,47,59,1|1luiws0,45,63,0|1m10bjz,45,63,0|1m10bk0,47,59,1|1md8zfz,47,59,1|1md8zg0,45,63,0|1mjqe7z,45,63,0|1mjqe80,47,59,1|1mvz23z,47,59,1|1mvz240,45,63,0|1n2tfjz,45,63,0|1n2tfk0,47,59,1|1nf23fz,47,59,1|1nf23g0,45,63,0|1nlji7z,45,63,0|1nlji80,47,59,1|1nxs63z,47,59,1|1nxs640,45,63,0|1o49kvz,45,63,0|1o49kw0,47,59,1|1ogi8rz,47,59,1|1ogi8s0,45,63,0|1omznjz,45,63,0|1omznk0,47,59,1|1oz8bfz,47,59,1|1oz8bg0,45,63,0|1p5pq7z,45,63,0|1p5pq80,47,59,1|1phye3z,47,59,1|1phye40,45,63,0|1posrjz,45,63,0|1posrk0,47,59,1|1q11ffz,47,59,1|1q11fg0,45,63,0|1q7iu7z,45,63,0|1q7iu80,47,59,1|1qjri3z,47,59,1|1qjri40,45,63,0|1qq8wvz,45,63,0|1qq8ww0,47,59,1|1r2hkrz,47,59,1|1r2hks0,45,63,0|1r8yzjz,45,63,0|1r8yzk0,47,59,1|1rl7nfz,47,59,1|1rl7ng0,45,63,0|1rrp27z,45,63,0|1rrp280,47,59,1|1s3xq3z,47,59,1|1s3xq40,45,63,0|1saf4vz,45,63,0|1saf4w0,47,59,1|1smnsrz,47,59,1|1smnss0,45,63,0|1sti67z,45,63,0|1sti680,47,59,1|1t5qu3z,47,59,1|1t5qu40,45,63,0|1tc88vz,45,63,0|1tc88w0,47,59,1|1togwrz,47,59,1|1togws0,45,63,0|1tuybjz,45,63,0|1tuybk0,47,59,1|1u76zfz,47,59,1|1u76zg0,45,63,0|1udoe7z,45,63,0|1udoe80,47,59,1|1upx23z,47,59,1|1upx240,45,63,0|1uwegvz,45,63,0|1uwegw0,47,59,1|1v8n4rz,47,59,1|1v8n4s0,45,63,0|1vf4jjz,45,63,0|1vf4jk0,47,59,1|1vrd7fz,47,59,1|1vrd7g0,45,63,0|NaN,45,63,0",
        "America/Panama|,0,57,0|-15r0ult,0,57,0|-15r0uls,40,58,0|-w757vd,40,58,0|-w757vc,43,59,0|NaN,43,59,0",
        "America/Pangnirtung|,59,1,0|-eb6ao1,59,1,0|-eb6ao0,69,40,1|-cq2tg1,69,40,1|-cq2tg0,70,40,1|-cnp3c1,70,40,1|-cnp3c0,43,59,0|17qm3z,43,59,0|17qm40,60,40,1|1h3knz,60,40,1|1h3ko0,43,59,0|1qgorz,43,59,0|1qgos0,60,40,1|1ztnbz,60,40,1|1ztnc0,43,59,0|296rfz,43,59,0|296rg0,60,40,1|2ijpzz,60,40,1|2ijq00,43,59,0|2rwu3z,43,59,0|2rwu40,60,40,1|319snz,60,40,1|319so0,43,59,0|3amwrz,43,59,0|3amws0,60,40,1|3kctzz,60,40,1|3kcu00,43,59,0|3tczfz,43,59,0|3tczg0,60,40,1|432wnz,60,40,1|432wo0,43,59,0|4cg0rz,43,59,0|4cg0s0,60,40,1|4lszbz,60,40,1|4lszc0,43,59,0|4v63fz,43,59,0|4v63g0,60,40,1|54j1zz,60,40,1|54j200,43,59,0|5dw63z,43,59,0|5dw640,60,40,1|5n94nz,60,40,1|5n94o0,43,59,0|5wm8rz,43,59,0|5wm8s0,60,40,1|65z7bz,60,40,1|65z7c0,43,59,0|6fcbfz,43,59,0|6fcbg0,60,40,1|6p28nz,60,40,1|6p28o0,43,59,0|6y2e3z,43,59,0|6y2e40,60,40,1|77sbbz,60,40,1|77sbc0,43,59,0|7h5ffz,43,59,0|7h5fg0,60,40,1|7qidzz,60,40,1|7qie00,43,59,0|7zvi3z,43,59,0|7zvi40,60,40,1|898gnz,60,40,1|898go0,43,59,0|8ilkrz,43,59,0|8ilks0,60,40,1|8ryjbz,60,40,1|8ryjc0,43,59,0|908rfz,43,59,0|908rg0,60,40,1|9aolzz,60,40,1|9aom00,43,59,0|9iyu3z,43,59,0|9iyu40,60,40,1|9trnbz,60,40,1|9trnc0,43,59,0|a1owrz,43,59,0|a1ows0,60,40,1|achpzz,60,40,1|achq00,43,59,0|akezfz,43,59,0|akezg0,60,40,1|av7snz,60,40,1|av7so0,43,59,0|b3i0rz,43,59,0|b3i0s0,60,40,1|bdxvbz,60,40,1|bdxvc0,43,59,0|bm83fz,43,59,0|bm83g0,60,40,1|bwnxzz,60,40,1|bwny00,43,59,0|c4y63z,43,59,0|c4y640,60,40,1|cfqzbz,60,40,1|cfqzc0,43,59,0|cno8rz,43,59,0|cno8s0,60,40,1|cyh1zz,60,40,1|cyh200,43,59,0|d6ebfz,43,59,0|d6ebg0,60,40,1|dh74nz,60,40,1|dh74o0,43,59,0|dphcrz,43,59,0|dphcs0,60,40,1|dzx7bz,60,40,1|dzx7c0,43,59,0|e87ffz,43,59,0|e87fg0,60,40,1|ein9zz,60,40,1|eina00,43,59,0|eqxi3z,43,59,0|eqxi40,60,40,1|f1dcnz,60,40,1|f1dco0,43,59,0|f9nkrz,43,59,0|f9nks0,60,40,1|fkgdzz,60,40,1|fkge00,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36jfz,47,59,1|g36jg0,43,59,0|gb3q3z,43,59,0|gb3q40,60,40,1|glwjbz,60,40,1|glwjc0,43,59,0|gu6rfz,43,59,0|gu6rg0,60,40,1|h4mlzz,60,40,1|h4mm00,43,59,0|hcwu3z,43,59,0|hcwu40,60,40,1|hnconz,60,40,1|hncoo0,43,59,0|hvmwrz,43,59,0|hvmws0,60,40,1|i6fpzz,60,40,1|i6fq00,43,59,0|ieczfz,43,59,0|ieczg0,60,40,1|ip5snz,60,40,1|ip5so0,43,59,0|ix323z,43,59,0|ix3240,60,40,1|j7vvbz,60,40,1|j7vvc0,43,59,0|jeq8rz,43,59,0|jeq8s0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Paramaribo|,0,154,0|-usj4g9,0,154,0|-usj4g8,5,155,0|-i9lsfx,5,155,0|-i9lsfw,5,156,0|-cnnf4d,5,156,0|-cnnf4c,49,65,0|7p471z,49,65,0|7p4720,38,41,0|NaN,38,41,0",
        "America/Phoenix|,0,82,0|-18y0j81,0,82,0|-18y0j80,44,62,0|-r0epo1,44,62,0|-r0epo0,46,63,1|-qplwg1,46,63,1|-qplwg0,44,62,0|-qhon01,44,62,0|-qhon00,46,63,1|-q6vts1,46,63,1|-q6vts0,44,62,0|-ek1z01,44,62,0|-ek1z00,57,63,1|-dkikmd,57,63,1|-dkikmc,44,62,0|-dftz6d,44,62,0|-dftz6c,57,63,1|-d6f5yd,57,63,1|-d6f5yc,44,62,0|-1e8kc1,44,62,0|-1e8kc0,46,63,1|-14vls1,46,63,1|-14vls0,44,62,0|NaN,44,62,0",
        "America/Port-au-Prince|,0,157,0|-15r0vxt,0,157,0|-15r0vxs,80,158,0|-rmk9ad,80,158,0|-rmk9ac,43,59,0|6ys5vz,43,59,0|6ys5w0,60,40,1|77s5rz,60,40,1|77s5s0,43,59,0|7h59vz,43,59,0|7h59w0,60,40,1|7qi8fz,60,40,1|7qi8g0,43,59,0|7zvcjz,43,59,0|7zvck0,60,40,1|898b3z,60,40,1|898b40,43,59,0|8ilf7z,43,59,0|8ilf80,60,40,1|8rydrz,60,40,1|8ryds0,43,59,0|91bhvz,43,59,0|91bhw0,60,40,1|9aogfz,60,40,1|9aogg0,43,59,0|9iyrbz,43,59,0|9iyrc0,60,40,1|9trnbz,60,40,1|9trnc0,43,59,0|a1otzz,43,59,0|a1ou00,60,40,1|achpzz,60,40,1|achq00,43,59,0|akewnz,43,59,0|akewo0,60,40,1|av7snz,60,40,1|av7so0,43,59,0|b3hxzz,43,59,0|b3hy00,60,40,1|bdxvbz,60,40,1|bdxvc0,43,59,0|bm80nz,43,59,0|bm80o0,60,40,1|bwnxzz,60,40,1|bwny00,43,59,0|c4y3bz,43,59,0|c4y3c0,60,40,1|cfqzbz,60,40,1|cfqzc0,43,59,0|cno5zz,43,59,0|cno600,60,40,1|cyh1zz,60,40,1|cyh200,43,59,0|d6e8nz,43,59,0|d6e8o0,60,40,1|dh74nz,60,40,1|dh74o0,43,59,0|dph9zz,43,59,0|dpha00,60,40,1|dzx7bz,60,40,1|dzx7c0,43,59,0|e87cnz,43,59,0|e87co0,60,40,1|ein9zz,60,40,1|eina00,43,59,0|iectvz,43,59,0|iectw0,60,40,1|ip5n3z,60,40,1|ip5n40,43,59,0|ix2wjz,43,59,0|ix2wk0,60,40,1|j7vprz,60,40,1|j7vps0,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Port_of_Spain|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Porto_Velho|,0,159,0|-t85g61,0,159,0|-t85g60,41,40,0|-jyl7o1,41,40,0|-jyl7o0,38,41,1|-jpayc1,38,41,1|-jpayc0,41,40,0|-jfsa81,41,40,0|-jfsa80,38,41,1|-j6j101,38,41,1|-j6j100,41,40,0|-ahcvk1,41,40,0|-ahcvk0,38,41,1|-aad0w1,38,41,1|-aad0w0,41,40,0|-9yky81,41,40,0|-9yky80,38,41,1|-9scyc1,38,41,1|-9scyc0,41,40,0|-9ft0w1,41,40,0|-9ft0w0,38,41,1|-99j6c1,38,41,1|-99j6c0,41,40,0|-8wz8w1,41,40,0|-8wz8w0,38,41,1|-8scno1,38,41,1|-8scno0,41,40,0|-35xjk1,41,40,0|-35xjk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2kdm81,41,40,0|-2kdm80,38,41,1|-2hcfo1,38,41,1|-2hcfo0,41,40,0|-24qnk1,41,40,0|-24qnk0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1nia81,41,40,0|-1nia80,38,41,1|-1hc501,38,41,1|-1hc500,41,40,0|-14qcw1,41,40,0|-14qcw0,38,41,1|-yid01,38,41,1|-yid00,41,40,0|89jf3z,41,40,0|89jf40,38,41,1|8gdmzz,38,41,1|8gdn00,41,40,0|8rwj3z,41,40,0|8rwj40,38,41,1|8xnuzz,38,41,1|8xnv00,41,40,0|9aogfz,41,40,0|9aogg0,38,41,1|9g2tnz,38,41,1|9g2to0,41,40,0|NaN,41,40,0",
        "America/Puerto_Rico|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Punta_Arenas|,0,160,0|-15r0w79,0,160,0|-15r0w78,81,161,0|-vauaws,81,161,0|-vauawr,54,59,0|-rx8i41,54,59,0|-rx8i40,81,161,0|-qs16ws,81,161,0|-qs16wr,41,40,0|-qcwsw1,41,40,0|-qcwsw0,81,161,0|-m3etks,81,161,0|-m3etkr,41,40,1|-lsgfk1,41,40,1|-lsgfk0,54,59,0|-lkl0s1,54,59,0|-lkl0s0,41,40,1|-l9oi81,41,40,1|-l9oi80,54,59,0|-l1t3g1,54,59,0|-l1t3g0,41,40,1|-kqwkw1,41,40,1|-kqwkw0,54,59,0|-kj1641,54,59,0|-kj1640,41,40,1|-k84nk1,41,40,1|-k84nk0,54,59,0|-k098s1,54,59,0|-k098s0,41,40,1|-jpavk1,41,40,1|-jpavk0,54,59,0|-jhfgs1,54,59,0|-jhfgs0,41,40,0|-eeay81,41,40,0|-eeay80,54,59,0|-eb5ws1,54,59,0|-eb5ws0,41,40,0|-c6kkw1,41,40,0|-c6kkw0,41,40,1|-bvifk1,41,40,1|-bvifk0,54,59,0|-bsvzk1,54,59,0|-bsvzk0,41,40,0|-lsvk1,41,40,0|-lsvk0,38,41,1|-e8qc1,38,41,1|-e8qc0,41,40,0|-1zww1,41,40,0|-1zww0,38,41,1|4hcbz,38,41,1|4hcc0,41,40,0|ekdrz,41,40,0|ekds0,38,41,1|mhhnz,38,41,1|mhho0,41,40,0|xagfz,41,40,0|xagg0,38,41,1|157kbz,38,41,1|157kc0,41,40,0|1gdhrz,41,40,0|1gdhs0,38,41,1|1nxmzz,38,41,1|1nxn00,41,40,0|1ydn3z,41,40,0|1ydn40,38,41,1|26npnz,38,41,1|26npo0,41,40,0|2htn3z,41,40,0|2htn40,38,41,1|2pdsbz,38,41,1|2pdsc0,41,40,0|30jprz,41,40,0|30jps0,38,41,1|38gtnz,38,41,1|38gto0,41,40,0|3j9sfz,41,40,0|3j9sg0,38,41,1|3r6wbz,38,41,1|3r6wc0,41,40,0|41zv3z,41,40,0|41zv40,38,41,1|49wyzz,38,41,1|49wz00,41,40,0|4l2wfz,41,40,0|4l2wg0,38,41,1|4sn1nz,38,41,1|4sn1o0,41,40,0|53sz3z,41,40,0|53sz40,38,41,1|5bd4bz,38,41,1|5bd4c0,41,40,0|5mj1rz,41,40,0|5mj1s0,38,41,1|5ug5nz,38,41,1|5ug5o0,41,40,0|6594fz,41,40,0|6594g0,38,41,1|6d68bz,38,41,1|6d68c0,41,40,0|6nz73z,41,40,0|6nz740,38,41,1|6vwazz,38,41,1|6vwb00,41,40,0|76p9rz,41,40,0|76p9s0,38,41,1|7emdnz,38,41,1|7emdo0,41,40,0|7psb3z,41,40,0|7psb40,38,41,1|7xcgbz,38,41,1|7xcgc0,41,40,0|88idrz,41,40,0|88ids0,38,41,1|8g2izz,38,41,1|8g2j00,41,40,0|8r8gfz,41,40,0|8r8gg0,38,41,1|90lezz,38,41,1|90lf00,41,40,0|99yj3z,41,40,0|99yj40,38,41,1|9hvmzz,38,41,1|9hvn00,41,40,0|9solrz,41,40,0|9sols0,38,41,1|a0lpnz,38,41,1|a0lpo0,41,40,0|abrn3z,41,40,0|abrn40,38,41,1|ajbsbz,38,41,1|ajbsc0,41,40,0|at1v3z,41,40,0|at1v40,38,41,1|b21uzz,38,41,1|b21v00,41,40,0|bd7sfz,41,40,0|bd7sg0,38,41,1|bl4wbz,38,41,1|bl4wc0,41,40,0|bvxv3z,41,40,0|bvxv40,38,41,1|c3uyzz,38,41,1|c3uz00,41,40,0|cenxrz,41,40,0|cenxs0,38,41,1|cml1nz,38,41,1|cml1o0,41,40,0|cxe0fz,41,40,0|cxe0g0,38,41,1|d5b4bz,38,41,1|d5b4c0,41,40,0|dgh1rz,41,40,0|dgh1s0,38,41,1|do16zz,38,41,1|do1700,41,40,0|dz74fz,41,40,0|dz74g0,38,41,1|e7u5nz,38,41,1|e7u5o0,41,40,0|ehx73z,41,40,0|ehx740,38,41,1|epuazz,38,41,1|epub00,41,40,0|ezxcfz,41,40,0|ezxcg0,38,41,1|f9n9nz,38,41,1|f9n9o0,41,40,0|fjdcfz,41,40,0|fjdcg0,38,41,1|fragbz,38,41,1|fragc0,41,40,0|g2gdrz,41,40,0|g2gds0,38,41,1|ga0izz,38,41,1|ga0j00,41,40,0|gl6gfz,41,40,0|gl6gg0,38,41,1|gsqlnz,38,41,1|gsqlo0,41,40,0|h3wj3z,41,40,0|h3wj40,38,41,1|hbgobz,38,41,1|hbgoc0,41,40,0|hmmlrz,41,40,0|hmmls0,38,41,1|hujpnz,38,41,1|hujpo0,41,40,0|i5cofz,41,40,0|i5cog0,38,41,1|id9sbz,38,41,1|id9sc0,41,40,0|io2r3z,41,40,0|io2r40,38,41,1|ivzuzz,38,41,1|ivzv00,41,40,0|j75sfz,41,40,0|j75sg0,38,41,1|jepxnz,38,41,1|jepxo0,41,40,0|jpvv3z,41,40,0|jpvv40,38,41,1|jyiwbz,38,41,1|jyiwc0,41,40,0|k8lxrz,41,40,0|k8lxs0,38,41,1|kgj1nz,38,41,1|kgj1o0,41,40,0|krc0fz,41,40,0|krc0g0,38,41,1|l0c0bz,38,41,1|l0c0c0,41,40,0|la233z,41,40,0|la2340,38,41,1|lkuwbz,38,41,1|lkuwc0,41,40,0|lq9f3z,41,40,0|lq9f40,38,41,1|m380bz,38,41,1|m380c0,41,40,0|m9pf3z,41,40,0|m9pf40,38,41,1|mly2zz,38,41,1|mly300,41,40,0|mssgfz,41,40,0|mssgg0,38,41,1|n4o5nz,38,41,1|n4o5o0,41,40,0|nbij3z,41,40,0|nbij40,38,41,1|o776zz,38,41,1|o77700,41,40,0|obvsfz,41,40,0|obvsg0,38,41,1|ohn4bz,38,41,1|ohn4c0,38,41,0|NaN,38,41,0",
        "America/Rainy_River|,0,162,0|-171bfcd,0,162,0|-171bfcc,45,63,0|-s0s7c1,45,63,0|-s0s7c0,47,59,1|-rt8241,47,59,1|-rt8240,45,63,0|-qzov41,45,63,0|-qzov40,47,59,1|-qplz81,47,59,1|-qplz80,45,63,0|-h11r41,45,63,0|-h11r40,47,59,1|-gu7j81,47,59,1|-gu7j80,45,63,0|-ek21s1,45,63,0|-ek21s0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cnp0k1,52,59,1|-cnp0k0,45,63,0|-cc64g1,45,63,0|-cc64g0,47,59,1|-c490k1,47,59,1|-c490k0,45,63,0|-bu5z41,45,63,0|-bu5z40,47,59,1|-bm8v81,47,59,1|-bm8v80,45,63,0|-bbfwg1,45,63,0|-bbfwg0,47,59,1|-b3isk1,47,59,1|-b3isk0,45,63,0|-aspts1,45,63,0|-aspts0,47,59,1|-akspw1,47,59,1|-akspw0,45,63,0|-a9kxs1,45,63,0|-a9kxs0,47,59,1|-a1rj81,47,59,1|-a1rj80,45,63,0|-9qwps1,45,63,0|-9qwps0,47,59,1|-9izlw1,47,59,1|-9izlw0,45,63,0|-986n41,45,63,0|-986n40,47,59,1|-909j81,47,59,1|-909j80,45,63,0|-8pgkg1,45,63,0|-8pgkg0,47,59,1|-8hjgk1,47,59,1|-8hjgk0,45,63,0|-86qhs1,45,63,0|-86qhs0,47,59,1|-7ytdw1,47,59,1|-7ytdw0,45,63,0|-7o0f41,45,63,0|-7o0f40,47,59,1|-7g3b81,47,59,1|-7g3b80,45,63,0|-74xds1,45,63,0|-74xds0,47,59,1|-6x09w1,47,59,1|-6x09w0,45,63,0|-6m7b41,45,63,0|-6m7b40,47,59,1|-6ea781,47,59,1|-6ea780,45,63,0|-63h8g1,45,63,0|-63h8g0,47,59,1|-5vk4k1,47,59,1|-5vk4k0,45,63,0|-5kr5s1,45,63,0|-5kr5s0,47,59,1|-5be781,47,59,1|-5be780,45,63,0|-521341,45,63,0|-521340,47,59,1|-4u3z81,47,59,1|-4u3z80,45,63,0|-3hhwg1,45,63,0|-3hhwg0,47,59,1|-39xr81,47,59,1|-39xr80,45,63,0|-1xbog1,45,63,0|-1xbog0,47,59,1|-1nlog1,47,59,1|-1nlog0,45,63,0|-1e8n41,45,63,0|-1e8n40,47,59,1|-14vls1,47,59,1|-14vls0,45,63,0|-vikg1,45,63,0|-vikg0,47,59,1|-m5j41,47,59,1|-m5j40,45,63,0|-cshs1,45,63,0|-cshs0,47,59,1|-3fgg1,47,59,1|-3fgg0,45,63,0|5xkvz,45,63,0|5xkw0,47,59,1|fam7z,47,59,1|fam80,45,63,0|onnjz,45,63,0|onnk0,47,59,1|ydnjz,47,59,1|ydnk0,45,63,0|17qovz,45,63,0|17qow0,47,59,1|1h3q7z,47,59,1|1h3q80,45,63,0|1qgrjz,45,63,0|1qgrk0,47,59,1|1ztsvz,47,59,1|1ztsw0,45,63,0|296u7z,45,63,0|296u80,47,59,1|2ijvjz,47,59,1|2ijvk0,45,63,0|2rwwvz,45,63,0|2rwww0,47,59,1|319y7z,47,59,1|319y80,45,63,0|3amzjz,45,63,0|3amzk0,47,59,1|3kczjz,47,59,1|3kczk0,45,63,0|3td27z,45,63,0|3td280,47,59,1|43327z,47,59,1|433280,45,63,0|4cg3jz,45,63,0|4cg3k0,47,59,1|4lt4vz,47,59,1|4lt4w0,45,63,0|4v667z,45,63,0|4v6680,47,59,1|54j7jz,47,59,1|54j7k0,45,63,0|5dw8vz,45,63,0|5dw8w0,47,59,1|5n9a7z,47,59,1|5n9a80,45,63,0|5wmbjz,45,63,0|5wmbk0,47,59,1|65zcvz,47,59,1|65zcw0,45,63,0|6fce7z,45,63,0|6fce80,47,59,1|6p2e7z,47,59,1|6p2e80,45,63,0|6y2gvz,45,63,0|6y2gw0,47,59,1|77sgvz,47,59,1|77sgw0,45,63,0|7h5i7z,45,63,0|7h5i80,47,59,1|7qijjz,47,59,1|7qijk0,45,63,0|7zvkvz,45,63,0|7zvkw0,47,59,1|898m7z,47,59,1|898m80,45,63,0|8ilnjz,45,63,0|8ilnk0,47,59,1|8ryovz,47,59,1|8ryow0,45,63,0|908u7z,45,63,0|908u80,47,59,1|9aorjz,47,59,1|9aork0,45,63,0|9iywvz,45,63,0|9iyww0,47,59,1|9trsvz,47,59,1|9trsw0,45,63,0|a1ozjz,45,63,0|a1ozk0,47,59,1|achvjz,47,59,1|achvk0,45,63,0|akf27z,45,63,0|akf280,47,59,1|av7y7z,47,59,1|av7y80,45,63,0|b3i3jz,45,63,0|b3i3k0,47,59,1|bdy0vz,47,59,1|bdy0w0,45,63,0|bm867z,45,63,0|bm8680,47,59,1|bwo3jz,47,59,1|bwo3k0,45,63,0|c4y8vz,45,63,0|c4y8w0,47,59,1|cfr4vz,47,59,1|cfr4w0,45,63,0|cnobjz,45,63,0|cnobk0,47,59,1|cyh7jz,47,59,1|cyh7k0,45,63,0|d6ee7z,45,63,0|d6ee80,47,59,1|dh7a7z,47,59,1|dh7a80,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxcvz,47,59,1|dzxcw0,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|einfjz,47,59,1|einfk0,45,63,0|eqxkvz,45,63,0|eqxkw0,47,59,1|f1di7z,47,59,1|f1di80,45,63,0|f9nnjz,45,63,0|f9nnk0,47,59,1|fkgjjz,47,59,1|fkgjk0,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36m7z,47,59,1|g36m80,45,63,0|gb3svz,45,63,0|gb3sw0,47,59,1|glwovz,47,59,1|glwow0,45,63,0|gu6u7z,45,63,0|gu6u80,47,59,1|h4mrjz,47,59,1|h4mrk0,45,63,0|hcwwvz,45,63,0|hcwww0,47,59,1|hncu7z,47,59,1|hncu80,45,63,0|hvmzjz,45,63,0|hvmzk0,47,59,1|i6fvjz,47,59,1|i6fvk0,45,63,0|ied27z,45,63,0|ied280,47,59,1|ip5y7z,47,59,1|ip5y80,45,63,0|ix34vz,45,63,0|ix34w0,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jeqbjz,45,63,0|jeqbk0,47,59,1|jqyzfz,47,59,1|jqyzg0,45,63,0|jxge7z,45,63,0|jxge80,47,59,1|k9p23z,47,59,1|k9p240,45,63,0|kg6gvz,45,63,0|kg6gw0,47,59,1|ksf4rz,47,59,1|ksf4s0,45,63,0|kz9i7z,45,63,0|kz9i80,47,59,1|lbi63z,47,59,1|lbi640,45,63,0|lhzkvz,45,63,0|lhzkw0,47,59,1|lu88rz,47,59,1|lu88s0,45,63,0|m0pnjz,45,63,0|m0pnk0,47,59,1|mcybfz,47,59,1|mcybg0,45,63,0|mjfq7z,45,63,0|mjfq80,47,59,1|mvoe3z,47,59,1|mvoe40,45,63,0|n25svz,45,63,0|n25sw0,47,59,1|neegrz,47,59,1|neegs0,45,63,0|nkvvjz,45,63,0|nkvvk0,47,59,1|nx4jfz,47,59,1|nx4jg0,45,63,0|o3ywvz,45,63,0|o3yww0,47,59,1|og7krz,47,59,1|og7ks0,45,63,0|omozjz,45,63,0|omozk0,47,59,1|oyxnfz,47,59,1|oyxng0,45,63,0|p5f27z,45,63,0|p5f280,47,59,1|phnq3z,47,59,1|phnq40,45,63,0|po54vz,45,63,0|po54w0,47,59,1|q0dsrz,47,59,1|q0dss0,45,63,0|q6v7jz,45,63,0|q6v7k0,47,59,1|qj3vfz,47,59,1|qj3vg0,45,63,0|qpy8vz,45,63,0|qpy8w0,47,59,1|r26wrz,47,59,1|r26ws0,45,63,0|r8objz,45,63,0|r8obk0,47,59,1|rkwzfz,47,59,1|rkwzg0,45,63,0|rree7z,45,63,0|rree80,47,59,1|s3n23z,47,59,1|s3n240,45,63,0|sa4gvz,45,63,0|sa4gw0,47,59,1|smd4rz,47,59,1|smd4s0,45,63,0|ssujjz,45,63,0|ssujk0,47,59,1|t537fz,47,59,1|t537g0,45,63,0|tbkm7z,45,63,0|tbkm80,47,59,1|tnta3z,47,59,1|tnta40,45,63,0|tunnjz,45,63,0|tunnk0,47,59,1|u6wbfz,47,59,1|u6wbg0,45,63,0|uddq7z,45,63,0|uddq80,47,59,1|upme3z,47,59,1|upme40,45,63,0|uw3svz,45,63,0|uw3sw0,47,59,1|v8cgrz,47,59,1|v8cgs0,45,63,0|vetvjz,45,63,0|vetvk0,47,59,1|vr2jfz,47,59,1|vr2jg0,45,63,0|vxjy7z,45,63,0|vxjy80,47,59,1|w9sm3z,47,59,1|w9sm40,45,63,0|wgmzjz,45,63,0|wgmzk0,47,59,1|wsvnfz,47,59,1|wsvng0,45,63,0|wzd27z,45,63,0|wzd280,47,59,1|xblq3z,47,59,1|xblq40,45,63,0|xi34vz,45,63,0|xi34w0,47,59,1|xubsrz,47,59,1|xubss0,45,63,0|y0t7jz,45,63,0|y0t7k0,47,59,1|yd1vfz,47,59,1|yd1vg0,45,63,0|yjja7z,45,63,0|yjja80,47,59,1|yvry3z,47,59,1|yvry40,45,63,0|z29cvz,45,63,0|z29cw0,47,59,1|zei0rz,47,59,1|zei0s0,45,63,0|zlce7z,45,63,0|zlce80,47,59,1|zxl23z,47,59,1|zxl240,45,63,0|1042gvz,45,63,0|1042gw0,47,59,1|10gb4rz,47,59,1|10gb4s0,45,63,0|10msjjz,45,63,0|10msjk0,47,59,1|10z17fz,47,59,1|10z17g0,45,63,0|115im7z,45,63,0|115im80,47,59,1|11hra3z,47,59,1|11hra40,45,63,0|11o8ovz,45,63,0|11o8ow0,47,59,1|120hcrz,47,59,1|120hcs0,45,63,0|126yrjz,45,63,0|126yrk0,47,59,1|12j7ffz,47,59,1|12j7fg0,45,63,0|12q1svz,45,63,0|12q1sw0,47,59,1|132agrz,47,59,1|132ags0,45,63,0|138rvjz,45,63,0|138rvk0,47,59,1|13l0jfz,47,59,1|13l0jg0,45,63,0|13rhy7z,45,63,0|13rhy80,47,59,1|143qm3z,47,59,1|143qm40,45,63,0|14a80vz,45,63,0|14a80w0,47,59,1|14mgorz,47,59,1|14mgos0,45,63,0|14sy3jz,45,63,0|14sy3k0,47,59,1|1556rfz,47,59,1|1556rg0,45,63,0|15c14vz,45,63,0|15c14w0,47,59,1|15o9srz,47,59,1|15o9ss0,45,63,0|15ur7jz,45,63,0|15ur7k0,47,59,1|166zvfz,47,59,1|166zvg0,45,63,0|16dha7z,45,63,0|16dha80,47,59,1|16ppy3z,47,59,1|16ppy40,45,63,0|16w7cvz,45,63,0|16w7cw0,47,59,1|178g0rz,47,59,1|178g0s0,45,63,0|17exfjz,45,63,0|17exfk0,47,59,1|17r63fz,47,59,1|17r63g0,45,63,0|17xni7z,45,63,0|17xni80,47,59,1|189w63z,47,59,1|189w640,45,63,0|18gqjjz,45,63,0|18gqjk0,47,59,1|18sz7fz,47,59,1|18sz7g0,45,63,0|18zgm7z,45,63,0|18zgm80,47,59,1|19bpa3z,47,59,1|19bpa40,45,63,0|19i6ovz,45,63,0|19i6ow0,47,59,1|19ufcrz,47,59,1|19ufcs0,45,63,0|1a0wrjz,45,63,0|1a0wrk0,47,59,1|1ad5ffz,47,59,1|1ad5fg0,45,63,0|1ajmu7z,45,63,0|1ajmu80,47,59,1|1avvi3z,47,59,1|1avvi40,45,63,0|1b2pvjz,45,63,0|1b2pvk0,47,59,1|1beyjfz,47,59,1|1beyjg0,45,63,0|1blfy7z,45,63,0|1blfy80,47,59,1|1bxom3z,47,59,1|1bxom40,45,63,0|1c460vz,45,63,0|1c460w0,47,59,1|1cgeorz,47,59,1|1cgeos0,45,63,0|1cmw3jz,45,63,0|1cmw3k0,47,59,1|1cz4rfz,47,59,1|1cz4rg0,45,63,0|1d5m67z,45,63,0|1d5m680,47,59,1|1dhuu3z,47,59,1|1dhuu40,45,63,0|1doc8vz,45,63,0|1doc8w0,47,59,1|1e0kwrz,47,59,1|1e0kws0,45,63,0|1e7fa7z,45,63,0|1e7fa80,47,59,1|1ejny3z,47,59,1|1ejny40,45,63,0|1eq5cvz,45,63,0|1eq5cw0,47,59,1|1f2e0rz,47,59,1|1f2e0s0,45,63,0|1f8vfjz,45,63,0|1f8vfk0,47,59,1|1fl43fz,47,59,1|1fl43g0,45,63,0|1frli7z,45,63,0|1frli80,47,59,1|1g3u63z,47,59,1|1g3u640,45,63,0|1gabkvz,45,63,0|1gabkw0,47,59,1|1gmk8rz,47,59,1|1gmk8s0,45,63,0|1gt1njz,45,63,0|1gt1nk0,47,59,1|1h5abfz,47,59,1|1h5abg0,45,63,0|1hc4ovz,45,63,0|1hc4ow0,47,59,1|1hodcrz,47,59,1|1hodcs0,45,63,0|1huurjz,45,63,0|1huurk0,47,59,1|1i73ffz,47,59,1|1i73fg0,45,63,0|1idku7z,45,63,0|1idku80,47,59,1|1ipti3z,47,59,1|1ipti40,45,63,0|1iwawvz,45,63,0|1iwaww0,47,59,1|1j8jkrz,47,59,1|1j8jks0,45,63,0|1jf0zjz,45,63,0|1jf0zk0,47,59,1|1jr9nfz,47,59,1|1jr9ng0,45,63,0|1jy40vz,45,63,0|1jy40w0,47,59,1|1kacorz,47,59,1|1kacos0,45,63,0|1kgu3jz,45,63,0|1kgu3k0,47,59,1|1kt2rfz,47,59,1|1kt2rg0,45,63,0|1kzk67z,45,63,0|1kzk680,47,59,1|1lbsu3z,47,59,1|1lbsu40,45,63,0|1lia8vz,45,63,0|1lia8w0,47,59,1|1luiwrz,47,59,1|1luiws0,45,63,0|1m10bjz,45,63,0|1m10bk0,47,59,1|1md8zfz,47,59,1|1md8zg0,45,63,0|1mjqe7z,45,63,0|1mjqe80,47,59,1|1mvz23z,47,59,1|1mvz240,45,63,0|1n2tfjz,45,63,0|1n2tfk0,47,59,1|1nf23fz,47,59,1|1nf23g0,45,63,0|1nlji7z,45,63,0|1nlji80,47,59,1|1nxs63z,47,59,1|1nxs640,45,63,0|1o49kvz,45,63,0|1o49kw0,47,59,1|1ogi8rz,47,59,1|1ogi8s0,45,63,0|1omznjz,45,63,0|1omznk0,47,59,1|1oz8bfz,47,59,1|1oz8bg0,45,63,0|1p5pq7z,45,63,0|1p5pq80,47,59,1|1phye3z,47,59,1|1phye40,45,63,0|1posrjz,45,63,0|1posrk0,47,59,1|1q11ffz,47,59,1|1q11fg0,45,63,0|1q7iu7z,45,63,0|1q7iu80,47,59,1|1qjri3z,47,59,1|1qjri40,45,63,0|1qq8wvz,45,63,0|1qq8ww0,47,59,1|1r2hkrz,47,59,1|1r2hks0,45,63,0|1r8yzjz,45,63,0|1r8yzk0,47,59,1|1rl7nfz,47,59,1|1rl7ng0,45,63,0|1rrp27z,45,63,0|1rrp280,47,59,1|1s3xq3z,47,59,1|1s3xq40,45,63,0|1saf4vz,45,63,0|1saf4w0,47,59,1|1smnsrz,47,59,1|1smnss0,45,63,0|1sti67z,45,63,0|1sti680,47,59,1|1t5qu3z,47,59,1|1t5qu40,45,63,0|1tc88vz,45,63,0|1tc88w0,47,59,1|1togwrz,47,59,1|1togws0,45,63,0|1tuybjz,45,63,0|1tuybk0,47,59,1|1u76zfz,47,59,1|1u76zg0,45,63,0|1udoe7z,45,63,0|1udoe80,47,59,1|1upx23z,47,59,1|1upx240,45,63,0|1uwegvz,45,63,0|1uwegw0,47,59,1|1v8n4rz,47,59,1|1v8n4s0,45,63,0|1vf4jjz,45,63,0|1vf4jk0,47,59,1|1vrd7fz,47,59,1|1vrd7g0,45,63,0|NaN,45,63,0",
        "America/Rankin_Inlet|,59,1,0|-6s8lc1,59,1,0|-6s8lc0,45,63,0|17qovz,45,63,0|17qow0,47,59,1|1h3nfz,47,59,1|1h3ng0,45,63,0|1qgrjz,45,63,0|1qgrk0,47,59,1|1ztq3z,47,59,1|1ztq40,45,63,0|296u7z,45,63,0|296u80,47,59,1|2ijsrz,47,59,1|2ijss0,45,63,0|2rwwvz,45,63,0|2rwww0,47,59,1|319vfz,47,59,1|319vg0,45,63,0|3amzjz,45,63,0|3amzk0,47,59,1|3kcwrz,47,59,1|3kcws0,45,63,0|3td27z,45,63,0|3td280,47,59,1|432zfz,47,59,1|432zg0,45,63,0|4cg3jz,45,63,0|4cg3k0,47,59,1|4lt23z,47,59,1|4lt240,45,63,0|4v667z,45,63,0|4v6680,47,59,1|54j4rz,47,59,1|54j4s0,45,63,0|5dw8vz,45,63,0|5dw8w0,47,59,1|5n97fz,47,59,1|5n97g0,45,63,0|5wmbjz,45,63,0|5wmbk0,47,59,1|65za3z,47,59,1|65za40,45,63,0|6fce7z,45,63,0|6fce80,47,59,1|6p2bfz,47,59,1|6p2bg0,45,63,0|6y2gvz,45,63,0|6y2gw0,47,59,1|77se3z,47,59,1|77se40,45,63,0|7h5i7z,45,63,0|7h5i80,47,59,1|7qigrz,47,59,1|7qigs0,45,63,0|7zvkvz,45,63,0|7zvkw0,47,59,1|898jfz,47,59,1|898jg0,45,63,0|8ilnjz,45,63,0|8ilnk0,47,59,1|8rym3z,47,59,1|8rym40,45,63,0|908u7z,45,63,0|908u80,47,59,1|9aoorz,47,59,1|9aoos0,45,63,0|9iywvz,45,63,0|9iyww0,47,59,1|9trq3z,47,59,1|9trq40,45,63,0|a1ozjz,45,63,0|a1ozk0,47,59,1|achsrz,47,59,1|achss0,45,63,0|akf27z,45,63,0|akf280,47,59,1|av7vfz,47,59,1|av7vg0,45,63,0|b3i3jz,45,63,0|b3i3k0,47,59,1|bdxy3z,47,59,1|bdxy40,45,63,0|bm867z,45,63,0|bm8680,47,59,1|bwo0rz,47,59,1|bwo0s0,45,63,0|c4y8vz,45,63,0|c4y8w0,47,59,1|cfr23z,47,59,1|cfr240,45,63,0|cnobjz,45,63,0|cnobk0,47,59,1|cyh4rz,47,59,1|cyh4s0,45,63,0|d6ee7z,45,63,0|d6ee80,47,59,1|dh77fz,47,59,1|dh77g0,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxa3z,47,59,1|dzxa40,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|eincrz,47,59,1|eincs0,45,63,0|eqxkvz,45,63,0|eqxkw0,47,59,1|f1dffz,47,59,1|f1dfg0,45,63,0|f9nnjz,45,63,0|f9nnk0,47,59,1|fkggrz,47,59,1|fkggs0,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36jfz,47,59,1|g36jg0,43,59,0|gb3svz,43,59,0|gb3sw0,47,59,1|glwm3z,47,59,1|glwm40,45,63,0|gu6u7z,45,63,0|gu6u80,47,59,1|h4morz,47,59,1|h4mos0,45,63,0|hcwwvz,45,63,0|hcwww0,47,59,1|hncrfz,47,59,1|hncrg0,45,63,0|hvmzjz,45,63,0|hvmzk0,47,59,1|i6fsrz,47,59,1|i6fss0,45,63,0|ied27z,45,63,0|ied280,47,59,1|ip5vfz,47,59,1|ip5vg0,45,63,0|ix34vz,45,63,0|ix34w0,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jeqbjz,45,63,0|jeqbk0,47,59,1|jqyzfz,47,59,1|jqyzg0,45,63,0|jxge7z,45,63,0|jxge80,47,59,1|k9p23z,47,59,1|k9p240,45,63,0|kg6gvz,45,63,0|kg6gw0,47,59,1|ksf4rz,47,59,1|ksf4s0,45,63,0|kz9i7z,45,63,0|kz9i80,47,59,1|lbi63z,47,59,1|lbi640,45,63,0|lhzkvz,45,63,0|lhzkw0,47,59,1|lu88rz,47,59,1|lu88s0,45,63,0|m0pnjz,45,63,0|m0pnk0,47,59,1|mcybfz,47,59,1|mcybg0,45,63,0|mjfq7z,45,63,0|mjfq80,47,59,1|mvoe3z,47,59,1|mvoe40,45,63,0|n25svz,45,63,0|n25sw0,47,59,1|neegrz,47,59,1|neegs0,45,63,0|nkvvjz,45,63,0|nkvvk0,47,59,1|nx4jfz,47,59,1|nx4jg0,45,63,0|o3ywvz,45,63,0|o3yww0,47,59,1|og7krz,47,59,1|og7ks0,45,63,0|omozjz,45,63,0|omozk0,47,59,1|oyxnfz,47,59,1|oyxng0,45,63,0|p5f27z,45,63,0|p5f280,47,59,1|phnq3z,47,59,1|phnq40,45,63,0|po54vz,45,63,0|po54w0,47,59,1|q0dsrz,47,59,1|q0dss0,45,63,0|q6v7jz,45,63,0|q6v7k0,47,59,1|qj3vfz,47,59,1|qj3vg0,45,63,0|qpy8vz,45,63,0|qpy8w0,47,59,1|r26wrz,47,59,1|r26ws0,45,63,0|r8objz,45,63,0|r8obk0,47,59,1|rkwzfz,47,59,1|rkwzg0,45,63,0|rree7z,45,63,0|rree80,47,59,1|s3n23z,47,59,1|s3n240,45,63,0|sa4gvz,45,63,0|sa4gw0,47,59,1|smd4rz,47,59,1|smd4s0,45,63,0|ssujjz,45,63,0|ssujk0,47,59,1|t537fz,47,59,1|t537g0,45,63,0|tbkm7z,45,63,0|tbkm80,47,59,1|tnta3z,47,59,1|tnta40,45,63,0|tunnjz,45,63,0|tunnk0,47,59,1|u6wbfz,47,59,1|u6wbg0,45,63,0|uddq7z,45,63,0|uddq80,47,59,1|upme3z,47,59,1|upme40,45,63,0|uw3svz,45,63,0|uw3sw0,47,59,1|v8cgrz,47,59,1|v8cgs0,45,63,0|vetvjz,45,63,0|vetvk0,47,59,1|vr2jfz,47,59,1|vr2jg0,45,63,0|vxjy7z,45,63,0|vxjy80,47,59,1|w9sm3z,47,59,1|w9sm40,45,63,0|wgmzjz,45,63,0|wgmzk0,47,59,1|wsvnfz,47,59,1|wsvng0,45,63,0|wzd27z,45,63,0|wzd280,47,59,1|xblq3z,47,59,1|xblq40,45,63,0|xi34vz,45,63,0|xi34w0,47,59,1|xubsrz,47,59,1|xubss0,45,63,0|y0t7jz,45,63,0|y0t7k0,47,59,1|yd1vfz,47,59,1|yd1vg0,45,63,0|yjja7z,45,63,0|yjja80,47,59,1|yvry3z,47,59,1|yvry40,45,63,0|z29cvz,45,63,0|z29cw0,47,59,1|zei0rz,47,59,1|zei0s0,45,63,0|zlce7z,45,63,0|zlce80,47,59,1|zxl23z,47,59,1|zxl240,45,63,0|1042gvz,45,63,0|1042gw0,47,59,1|10gb4rz,47,59,1|10gb4s0,45,63,0|10msjjz,45,63,0|10msjk0,47,59,1|10z17fz,47,59,1|10z17g0,45,63,0|115im7z,45,63,0|115im80,47,59,1|11hra3z,47,59,1|11hra40,45,63,0|11o8ovz,45,63,0|11o8ow0,47,59,1|120hcrz,47,59,1|120hcs0,45,63,0|126yrjz,45,63,0|126yrk0,47,59,1|12j7ffz,47,59,1|12j7fg0,45,63,0|12q1svz,45,63,0|12q1sw0,47,59,1|132agrz,47,59,1|132ags0,45,63,0|138rvjz,45,63,0|138rvk0,47,59,1|13l0jfz,47,59,1|13l0jg0,45,63,0|13rhy7z,45,63,0|13rhy80,47,59,1|143qm3z,47,59,1|143qm40,45,63,0|14a80vz,45,63,0|14a80w0,47,59,1|14mgorz,47,59,1|14mgos0,45,63,0|14sy3jz,45,63,0|14sy3k0,47,59,1|1556rfz,47,59,1|1556rg0,45,63,0|15c14vz,45,63,0|15c14w0,47,59,1|15o9srz,47,59,1|15o9ss0,45,63,0|15ur7jz,45,63,0|15ur7k0,47,59,1|166zvfz,47,59,1|166zvg0,45,63,0|16dha7z,45,63,0|16dha80,47,59,1|16ppy3z,47,59,1|16ppy40,45,63,0|16w7cvz,45,63,0|16w7cw0,47,59,1|178g0rz,47,59,1|178g0s0,45,63,0|17exfjz,45,63,0|17exfk0,47,59,1|17r63fz,47,59,1|17r63g0,45,63,0|17xni7z,45,63,0|17xni80,47,59,1|189w63z,47,59,1|189w640,45,63,0|18gqjjz,45,63,0|18gqjk0,47,59,1|18sz7fz,47,59,1|18sz7g0,45,63,0|18zgm7z,45,63,0|18zgm80,47,59,1|19bpa3z,47,59,1|19bpa40,45,63,0|19i6ovz,45,63,0|19i6ow0,47,59,1|19ufcrz,47,59,1|19ufcs0,45,63,0|1a0wrjz,45,63,0|1a0wrk0,47,59,1|1ad5ffz,47,59,1|1ad5fg0,45,63,0|1ajmu7z,45,63,0|1ajmu80,47,59,1|1avvi3z,47,59,1|1avvi40,45,63,0|1b2pvjz,45,63,0|1b2pvk0,47,59,1|1beyjfz,47,59,1|1beyjg0,45,63,0|1blfy7z,45,63,0|1blfy80,47,59,1|1bxom3z,47,59,1|1bxom40,45,63,0|1c460vz,45,63,0|1c460w0,47,59,1|1cgeorz,47,59,1|1cgeos0,45,63,0|1cmw3jz,45,63,0|1cmw3k0,47,59,1|1cz4rfz,47,59,1|1cz4rg0,45,63,0|1d5m67z,45,63,0|1d5m680,47,59,1|1dhuu3z,47,59,1|1dhuu40,45,63,0|1doc8vz,45,63,0|1doc8w0,47,59,1|1e0kwrz,47,59,1|1e0kws0,45,63,0|1e7fa7z,45,63,0|1e7fa80,47,59,1|1ejny3z,47,59,1|1ejny40,45,63,0|1eq5cvz,45,63,0|1eq5cw0,47,59,1|1f2e0rz,47,59,1|1f2e0s0,45,63,0|1f8vfjz,45,63,0|1f8vfk0,47,59,1|1fl43fz,47,59,1|1fl43g0,45,63,0|1frli7z,45,63,0|1frli80,47,59,1|1g3u63z,47,59,1|1g3u640,45,63,0|1gabkvz,45,63,0|1gabkw0,47,59,1|1gmk8rz,47,59,1|1gmk8s0,45,63,0|1gt1njz,45,63,0|1gt1nk0,47,59,1|1h5abfz,47,59,1|1h5abg0,45,63,0|1hc4ovz,45,63,0|1hc4ow0,47,59,1|1hodcrz,47,59,1|1hodcs0,45,63,0|1huurjz,45,63,0|1huurk0,47,59,1|1i73ffz,47,59,1|1i73fg0,45,63,0|1idku7z,45,63,0|1idku80,47,59,1|1ipti3z,47,59,1|1ipti40,45,63,0|1iwawvz,45,63,0|1iwaww0,47,59,1|1j8jkrz,47,59,1|1j8jks0,45,63,0|1jf0zjz,45,63,0|1jf0zk0,47,59,1|1jr9nfz,47,59,1|1jr9ng0,45,63,0|1jy40vz,45,63,0|1jy40w0,47,59,1|1kacorz,47,59,1|1kacos0,45,63,0|1kgu3jz,45,63,0|1kgu3k0,47,59,1|1kt2rfz,47,59,1|1kt2rg0,45,63,0|1kzk67z,45,63,0|1kzk680,47,59,1|1lbsu3z,47,59,1|1lbsu40,45,63,0|1lia8vz,45,63,0|1lia8w0,47,59,1|1luiwrz,47,59,1|1luiws0,45,63,0|1m10bjz,45,63,0|1m10bk0,47,59,1|1md8zfz,47,59,1|1md8zg0,45,63,0|1mjqe7z,45,63,0|1mjqe80,47,59,1|1mvz23z,47,59,1|1mvz240,45,63,0|1n2tfjz,45,63,0|1n2tfk0,47,59,1|1nf23fz,47,59,1|1nf23g0,45,63,0|1nlji7z,45,63,0|1nlji80,47,59,1|1nxs63z,47,59,1|1nxs640,45,63,0|1o49kvz,45,63,0|1o49kw0,47,59,1|1ogi8rz,47,59,1|1ogi8s0,45,63,0|1omznjz,45,63,0|1omznk0,47,59,1|1oz8bfz,47,59,1|1oz8bg0,45,63,0|1p5pq7z,45,63,0|1p5pq80,47,59,1|1phye3z,47,59,1|1phye40,45,63,0|1posrjz,45,63,0|1posrk0,47,59,1|1q11ffz,47,59,1|1q11fg0,45,63,0|1q7iu7z,45,63,0|1q7iu80,47,59,1|1qjri3z,47,59,1|1qjri40,45,63,0|1qq8wvz,45,63,0|1qq8ww0,47,59,1|1r2hkrz,47,59,1|1r2hks0,45,63,0|1r8yzjz,45,63,0|1r8yzk0,47,59,1|1rl7nfz,47,59,1|1rl7ng0,45,63,0|1rrp27z,45,63,0|1rrp280,47,59,1|1s3xq3z,47,59,1|1s3xq40,45,63,0|1saf4vz,45,63,0|1saf4w0,47,59,1|1smnsrz,47,59,1|1smnss0,45,63,0|1sti67z,45,63,0|1sti680,47,59,1|1t5qu3z,47,59,1|1t5qu40,45,63,0|1tc88vz,45,63,0|1tc88w0,47,59,1|1togwrz,47,59,1|1togws0,45,63,0|1tuybjz,45,63,0|1tuybk0,47,59,1|1u76zfz,47,59,1|1u76zg0,45,63,0|1udoe7z,45,63,0|1udoe80,47,59,1|1upx23z,47,59,1|1upx240,45,63,0|1uwegvz,45,63,0|1uwegw0,47,59,1|1v8n4rz,47,59,1|1v8n4s0,45,63,0|1vf4jjz,45,63,0|1vf4jk0,47,59,1|1vrd7fz,47,59,1|1vrd7g0,45,63,0|NaN,45,63,0",
        "America/Recife|,0,163,0|-t85ljd,0,163,0|-t85ljc,38,41,0|-jylag1,38,41,0|-jylag0,39,43,1|-jpb141,39,43,1|-jpb140,38,41,0|-jfsd01,38,41,0|-jfsd00,39,43,1|-j6j3s1,39,43,1|-j6j3s0,38,41,0|-ahcyc1,38,41,0|-ahcyc0,39,43,1|-aad3o1,39,43,1|-aad3o0,38,41,0|-9yl101,38,41,0|-9yl100,39,43,1|-9sd141,39,43,1|-9sd140,38,41,0|-9ft3o1,38,41,0|-9ft3o0,39,43,1|-99j941,39,43,1|-99j940,38,41,0|-8wzbo1,38,41,0|-8wzbo0,39,43,1|-8scqg1,39,43,1|-8scqg0,38,41,0|-35xmc1,38,41,0|-35xmc0,39,43,1|-31nzs1,39,43,1|-31nzs0,38,41,0|-2kdp01,38,41,0|-2kdp00,39,43,1|-2hcig1,39,43,1|-2hcig0,38,41,0|-24qqc1,38,41,0|-24qqc0,39,43,1|-204541,39,43,1|-204540,38,41,0|-1nid01,38,41,0|-1nid00,39,43,1|-1hc7s1,39,43,1|-1hc7s0,38,41,0|-14qfo1,38,41,0|-14qfo0,39,43,1|-yifs1,39,43,1|-yifs0,38,41,0|89jcbz,38,41,0|89jcc0,39,43,1|8gdk7z,39,43,1|8gdk80,38,41,0|8rwgbz,38,41,0|8rwgc0,39,43,1|8xns7z,39,43,1|8xns80,38,41,0|9aodnz,38,41,0|9aodo0,39,43,1|9g2qvz,39,43,1|9g2qw0,38,41,0|9t1hnz,38,41,0|9t1ho0,39,43,1|9yfuvz,39,43,1|9yfuw0,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|ahvuvz,39,43,1|ahvuw0,38,41,0|fj0azz,38,41,0|fj0b00,39,43,1|fqkg7z,39,43,1|fqkg80,38,41,0|g23cbz,38,41,0|g23cc0,39,43,1|g2g87z,39,43,1|g2g880,38,41,0|gl6dnz,38,41,0|gl6do0,39,43,1|grnmvz,39,43,1|grnmw0,38,41,0|NaN,38,41,0",
        "America/Regina|,0,164,0|-xkq9yd,0,164,0|-xkq9yc,44,62,0|-qzosc1,44,62,0|-qzosc0,46,63,1|-qplwg1,46,63,1|-qplwg0,44,62,0|-kp78k1,44,62,0|-kp78k0,46,63,1|-kha4o1,46,63,1|-kha4o0,44,62,0|-k6h5w1,44,62,0|-k6h5w0,46,63,1|-jyk201,46,63,1|-jyk200,44,62,0|-jnr381,44,62,0|-jnr380,46,63,1|-jftzc1,46,63,1|-jftzc0,44,62,0|-j4o1w1,44,62,0|-j4o1w0,46,63,1|-ix3wo1,46,63,1|-ix3wo0,44,62,0|-ilxz81,44,62,0|-ilxz80,46,63,1|-ie0vc1,46,63,1|-ie0vc0,44,62,0|-h2un81,44,62,0|-h2un80,46,63,1|-gthoo1,46,63,1|-gthoo0,44,62,0|-gk4kk1,44,62,0|-gk4kk0,46,63,1|-gb4ko1,46,63,1|-gb4ko0,44,62,0|-g1ehw1,44,62,0|-g1ehw0,46,63,1|-fs1jc1,46,63,1|-fs1jc0,44,62,0|-fibgk1,44,62,0|-fibgk0,46,63,1|-f8yi01,46,63,1|-f8yi00,44,62,0|-ezldw1,44,62,0|-ezldw0,46,63,1|-eq8fc1,46,63,1|-eq8fc0,44,62,0|-ek1z01,44,62,0|-ek1z00,57,63,1|-cq2tg1,57,63,1|-cq2tg0,58,63,1|-cnoxs1,58,63,1|-cnoxs0,44,62,0|-cdlwc1,44,62,0|-cdlwc0,46,63,1|-c48xs1,46,63,1|-c48xs0,44,62,0|-bu5wc1,44,62,0|-bu5wc0,46,63,1|-bm8sg1,46,63,1|-bm8sg0,44,62,0|-bbfto1,44,62,0|-bbfto0,46,63,1|-b3ips1,46,63,1|-b3ips0,44,62,0|-aspr01,44,62,0|-aspr00,46,63,1|-aksn41,46,63,1|-aksn40,44,62,0|-a9mpo1,44,62,0|-a9mpo0,46,63,1|-a22kg1,46,63,1|-a22kg0,44,62,0|-9qwn01,44,62,0|-9qwn00,46,63,1|-9izj41,46,63,1|-9izj40,44,62,0|-986kc1,44,62,0|-986kc0,46,63,1|-909gg1,46,63,1|-909gg0,44,62,0|-8pgho1,44,62,0|-8pgho0,46,63,1|-8hjds1,46,63,1|-8hjds0,44,62,0|-86qf01,44,62,0|-86qf00,46,63,1|-7ytb41,46,63,1|-7ytb40,44,62,0|-7o0cc1,44,62,0|-7o0cc0,46,63,1|-7g38g1,46,63,1|-7g38g0,44,62,0|-74xb01,44,62,0|-74xb00,46,63,1|-6x0741,46,63,1|-6x0740,44,62,0|-6m78c1,44,62,0|-6m78c0,46,63,1|-6ea4g1,46,63,1|-6ea4g0,44,62,0|-5kr301,44,62,0|-5kr300,46,63,1|-5be4g1,46,63,1|-5be4g0,44,62,0|-5210c1,44,62,0|-5210c0,45,63,0|NaN,45,63,0",
        "America/Resolute|,59,1,0|-bnp9c1,59,1,0|-bnp9c0,45,63,0|17qovz,45,63,0|17qow0,47,59,1|1h3nfz,47,59,1|1h3ng0,45,63,0|1qgrjz,45,63,0|1qgrk0,47,59,1|1ztq3z,47,59,1|1ztq40,45,63,0|296u7z,45,63,0|296u80,47,59,1|2ijsrz,47,59,1|2ijss0,45,63,0|2rwwvz,45,63,0|2rwww0,47,59,1|319vfz,47,59,1|319vg0,45,63,0|3amzjz,45,63,0|3amzk0,47,59,1|3kcwrz,47,59,1|3kcws0,45,63,0|3td27z,45,63,0|3td280,47,59,1|432zfz,47,59,1|432zg0,45,63,0|4cg3jz,45,63,0|4cg3k0,47,59,1|4lt23z,47,59,1|4lt240,45,63,0|4v667z,45,63,0|4v6680,47,59,1|54j4rz,47,59,1|54j4s0,45,63,0|5dw8vz,45,63,0|5dw8w0,47,59,1|5n97fz,47,59,1|5n97g0,45,63,0|5wmbjz,45,63,0|5wmbk0,47,59,1|65za3z,47,59,1|65za40,45,63,0|6fce7z,45,63,0|6fce80,47,59,1|6p2bfz,47,59,1|6p2bg0,45,63,0|6y2gvz,45,63,0|6y2gw0,47,59,1|77se3z,47,59,1|77se40,45,63,0|7h5i7z,45,63,0|7h5i80,47,59,1|7qigrz,47,59,1|7qigs0,45,63,0|7zvkvz,45,63,0|7zvkw0,47,59,1|898jfz,47,59,1|898jg0,45,63,0|8ilnjz,45,63,0|8ilnk0,47,59,1|8rym3z,47,59,1|8rym40,45,63,0|908u7z,45,63,0|908u80,47,59,1|9aoorz,47,59,1|9aoos0,45,63,0|9iywvz,45,63,0|9iyww0,47,59,1|9trq3z,47,59,1|9trq40,45,63,0|a1ozjz,45,63,0|a1ozk0,47,59,1|achsrz,47,59,1|achss0,45,63,0|akf27z,45,63,0|akf280,47,59,1|av7vfz,47,59,1|av7vg0,45,63,0|b3i3jz,45,63,0|b3i3k0,47,59,1|bdxy3z,47,59,1|bdxy40,45,63,0|bm867z,45,63,0|bm8680,47,59,1|bwo0rz,47,59,1|bwo0s0,45,63,0|c4y8vz,45,63,0|c4y8w0,47,59,1|cfr23z,47,59,1|cfr240,45,63,0|cnobjz,45,63,0|cnobk0,47,59,1|cyh4rz,47,59,1|cyh4s0,45,63,0|d6ee7z,45,63,0|d6ee80,47,59,1|dh77fz,47,59,1|dh77g0,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxa3z,47,59,1|dzxa40,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|eincrz,47,59,1|eincs0,45,63,0|eqxkvz,45,63,0|eqxkw0,47,59,1|f1dffz,47,59,1|f1dfg0,45,63,0|f9nnjz,45,63,0|f9nnk0,47,59,1|fkggrz,47,59,1|fkggs0,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36jfz,47,59,1|g36jg0,43,59,0|gb3svz,43,59,0|gb3sw0,47,59,1|glwm3z,47,59,1|glwm40,45,63,0|gu6u7z,45,63,0|gu6u80,47,59,1|h4morz,47,59,1|h4mos0,45,63,0|hcwwvz,45,63,0|hcwww0,47,59,1|hncrfz,47,59,1|hncrg0,45,63,0|hvmzjz,45,63,0|hvmzk0,47,59,1|i6fsrz,47,59,1|i6fss0,45,63,0|ied27z,45,63,0|ied280,47,59,1|ip5vfz,47,59,1|ip5vg0,45,63,0|ix34vz,45,63,0|ix34w0,47,59,1|j7vy3z,47,59,1|j7vy40,43,59,0|jeqbjz,43,59,0|jeqbk0,47,59,1|jqyzfz,47,59,1|jqyzg0,45,63,0|jxge7z,45,63,0|jxge80,47,59,1|k9p23z,47,59,1|k9p240,45,63,0|kg6gvz,45,63,0|kg6gw0,47,59,1|ksf4rz,47,59,1|ksf4s0,45,63,0|kz9i7z,45,63,0|kz9i80,47,59,1|lbi63z,47,59,1|lbi640,45,63,0|lhzkvz,45,63,0|lhzkw0,47,59,1|lu88rz,47,59,1|lu88s0,45,63,0|m0pnjz,45,63,0|m0pnk0,47,59,1|mcybfz,47,59,1|mcybg0,45,63,0|mjfq7z,45,63,0|mjfq80,47,59,1|mvoe3z,47,59,1|mvoe40,45,63,0|n25svz,45,63,0|n25sw0,47,59,1|neegrz,47,59,1|neegs0,45,63,0|nkvvjz,45,63,0|nkvvk0,47,59,1|nx4jfz,47,59,1|nx4jg0,45,63,0|o3ywvz,45,63,0|o3yww0,47,59,1|og7krz,47,59,1|og7ks0,45,63,0|omozjz,45,63,0|omozk0,47,59,1|oyxnfz,47,59,1|oyxng0,45,63,0|p5f27z,45,63,0|p5f280,47,59,1|phnq3z,47,59,1|phnq40,45,63,0|po54vz,45,63,0|po54w0,47,59,1|q0dsrz,47,59,1|q0dss0,45,63,0|q6v7jz,45,63,0|q6v7k0,47,59,1|qj3vfz,47,59,1|qj3vg0,45,63,0|qpy8vz,45,63,0|qpy8w0,47,59,1|r26wrz,47,59,1|r26ws0,45,63,0|r8objz,45,63,0|r8obk0,47,59,1|rkwzfz,47,59,1|rkwzg0,45,63,0|rree7z,45,63,0|rree80,47,59,1|s3n23z,47,59,1|s3n240,45,63,0|sa4gvz,45,63,0|sa4gw0,47,59,1|smd4rz,47,59,1|smd4s0,45,63,0|ssujjz,45,63,0|ssujk0,47,59,1|t537fz,47,59,1|t537g0,45,63,0|tbkm7z,45,63,0|tbkm80,47,59,1|tnta3z,47,59,1|tnta40,45,63,0|tunnjz,45,63,0|tunnk0,47,59,1|u6wbfz,47,59,1|u6wbg0,45,63,0|uddq7z,45,63,0|uddq80,47,59,1|upme3z,47,59,1|upme40,45,63,0|uw3svz,45,63,0|uw3sw0,47,59,1|v8cgrz,47,59,1|v8cgs0,45,63,0|vetvjz,45,63,0|vetvk0,47,59,1|vr2jfz,47,59,1|vr2jg0,45,63,0|vxjy7z,45,63,0|vxjy80,47,59,1|w9sm3z,47,59,1|w9sm40,45,63,0|wgmzjz,45,63,0|wgmzk0,47,59,1|wsvnfz,47,59,1|wsvng0,45,63,0|wzd27z,45,63,0|wzd280,47,59,1|xblq3z,47,59,1|xblq40,45,63,0|xi34vz,45,63,0|xi34w0,47,59,1|xubsrz,47,59,1|xubss0,45,63,0|y0t7jz,45,63,0|y0t7k0,47,59,1|yd1vfz,47,59,1|yd1vg0,45,63,0|yjja7z,45,63,0|yjja80,47,59,1|yvry3z,47,59,1|yvry40,45,63,0|z29cvz,45,63,0|z29cw0,47,59,1|zei0rz,47,59,1|zei0s0,45,63,0|zlce7z,45,63,0|zlce80,47,59,1|zxl23z,47,59,1|zxl240,45,63,0|1042gvz,45,63,0|1042gw0,47,59,1|10gb4rz,47,59,1|10gb4s0,45,63,0|10msjjz,45,63,0|10msjk0,47,59,1|10z17fz,47,59,1|10z17g0,45,63,0|115im7z,45,63,0|115im80,47,59,1|11hra3z,47,59,1|11hra40,45,63,0|11o8ovz,45,63,0|11o8ow0,47,59,1|120hcrz,47,59,1|120hcs0,45,63,0|126yrjz,45,63,0|126yrk0,47,59,1|12j7ffz,47,59,1|12j7fg0,45,63,0|12q1svz,45,63,0|12q1sw0,47,59,1|132agrz,47,59,1|132ags0,45,63,0|138rvjz,45,63,0|138rvk0,47,59,1|13l0jfz,47,59,1|13l0jg0,45,63,0|13rhy7z,45,63,0|13rhy80,47,59,1|143qm3z,47,59,1|143qm40,45,63,0|14a80vz,45,63,0|14a80w0,47,59,1|14mgorz,47,59,1|14mgos0,45,63,0|14sy3jz,45,63,0|14sy3k0,47,59,1|1556rfz,47,59,1|1556rg0,45,63,0|15c14vz,45,63,0|15c14w0,47,59,1|15o9srz,47,59,1|15o9ss0,45,63,0|15ur7jz,45,63,0|15ur7k0,47,59,1|166zvfz,47,59,1|166zvg0,45,63,0|16dha7z,45,63,0|16dha80,47,59,1|16ppy3z,47,59,1|16ppy40,45,63,0|16w7cvz,45,63,0|16w7cw0,47,59,1|178g0rz,47,59,1|178g0s0,45,63,0|17exfjz,45,63,0|17exfk0,47,59,1|17r63fz,47,59,1|17r63g0,45,63,0|17xni7z,45,63,0|17xni80,47,59,1|189w63z,47,59,1|189w640,45,63,0|18gqjjz,45,63,0|18gqjk0,47,59,1|18sz7fz,47,59,1|18sz7g0,45,63,0|18zgm7z,45,63,0|18zgm80,47,59,1|19bpa3z,47,59,1|19bpa40,45,63,0|19i6ovz,45,63,0|19i6ow0,47,59,1|19ufcrz,47,59,1|19ufcs0,45,63,0|1a0wrjz,45,63,0|1a0wrk0,47,59,1|1ad5ffz,47,59,1|1ad5fg0,45,63,0|1ajmu7z,45,63,0|1ajmu80,47,59,1|1avvi3z,47,59,1|1avvi40,45,63,0|1b2pvjz,45,63,0|1b2pvk0,47,59,1|1beyjfz,47,59,1|1beyjg0,45,63,0|1blfy7z,45,63,0|1blfy80,47,59,1|1bxom3z,47,59,1|1bxom40,45,63,0|1c460vz,45,63,0|1c460w0,47,59,1|1cgeorz,47,59,1|1cgeos0,45,63,0|1cmw3jz,45,63,0|1cmw3k0,47,59,1|1cz4rfz,47,59,1|1cz4rg0,45,63,0|1d5m67z,45,63,0|1d5m680,47,59,1|1dhuu3z,47,59,1|1dhuu40,45,63,0|1doc8vz,45,63,0|1doc8w0,47,59,1|1e0kwrz,47,59,1|1e0kws0,45,63,0|1e7fa7z,45,63,0|1e7fa80,47,59,1|1ejny3z,47,59,1|1ejny40,45,63,0|1eq5cvz,45,63,0|1eq5cw0,47,59,1|1f2e0rz,47,59,1|1f2e0s0,45,63,0|1f8vfjz,45,63,0|1f8vfk0,47,59,1|1fl43fz,47,59,1|1fl43g0,45,63,0|1frli7z,45,63,0|1frli80,47,59,1|1g3u63z,47,59,1|1g3u640,45,63,0|1gabkvz,45,63,0|1gabkw0,47,59,1|1gmk8rz,47,59,1|1gmk8s0,45,63,0|1gt1njz,45,63,0|1gt1nk0,47,59,1|1h5abfz,47,59,1|1h5abg0,45,63,0|1hc4ovz,45,63,0|1hc4ow0,47,59,1|1hodcrz,47,59,1|1hodcs0,45,63,0|1huurjz,45,63,0|1huurk0,47,59,1|1i73ffz,47,59,1|1i73fg0,45,63,0|1idku7z,45,63,0|1idku80,47,59,1|1ipti3z,47,59,1|1ipti40,45,63,0|1iwawvz,45,63,0|1iwaww0,47,59,1|1j8jkrz,47,59,1|1j8jks0,45,63,0|1jf0zjz,45,63,0|1jf0zk0,47,59,1|1jr9nfz,47,59,1|1jr9ng0,45,63,0|1jy40vz,45,63,0|1jy40w0,47,59,1|1kacorz,47,59,1|1kacos0,45,63,0|1kgu3jz,45,63,0|1kgu3k0,47,59,1|1kt2rfz,47,59,1|1kt2rg0,45,63,0|1kzk67z,45,63,0|1kzk680,47,59,1|1lbsu3z,47,59,1|1lbsu40,45,63,0|1lia8vz,45,63,0|1lia8w0,47,59,1|1luiwrz,47,59,1|1luiws0,45,63,0|1m10bjz,45,63,0|1m10bk0,47,59,1|1md8zfz,47,59,1|1md8zg0,45,63,0|1mjqe7z,45,63,0|1mjqe80,47,59,1|1mvz23z,47,59,1|1mvz240,45,63,0|1n2tfjz,45,63,0|1n2tfk0,47,59,1|1nf23fz,47,59,1|1nf23g0,45,63,0|1nlji7z,45,63,0|1nlji80,47,59,1|1nxs63z,47,59,1|1nxs640,45,63,0|1o49kvz,45,63,0|1o49kw0,47,59,1|1ogi8rz,47,59,1|1ogi8s0,45,63,0|1omznjz,45,63,0|1omznk0,47,59,1|1oz8bfz,47,59,1|1oz8bg0,45,63,0|1p5pq7z,45,63,0|1p5pq80,47,59,1|1phye3z,47,59,1|1phye40,45,63,0|1posrjz,45,63,0|1posrk0,47,59,1|1q11ffz,47,59,1|1q11fg0,45,63,0|1q7iu7z,45,63,0|1q7iu80,47,59,1|1qjri3z,47,59,1|1qjri40,45,63,0|1qq8wvz,45,63,0|1qq8ww0,47,59,1|1r2hkrz,47,59,1|1r2hks0,45,63,0|1r8yzjz,45,63,0|1r8yzk0,47,59,1|1rl7nfz,47,59,1|1rl7ng0,45,63,0|1rrp27z,45,63,0|1rrp280,47,59,1|1s3xq3z,47,59,1|1s3xq40,45,63,0|1saf4vz,45,63,0|1saf4w0,47,59,1|1smnsrz,47,59,1|1smnss0,45,63,0|1sti67z,45,63,0|1sti680,47,59,1|1t5qu3z,47,59,1|1t5qu40,45,63,0|1tc88vz,45,63,0|1tc88w0,47,59,1|1togwrz,47,59,1|1togws0,45,63,0|1tuybjz,45,63,0|1tuybk0,47,59,1|1u76zfz,47,59,1|1u76zg0,45,63,0|1udoe7z,45,63,0|1udoe80,47,59,1|1upx23z,47,59,1|1upx240,45,63,0|1uwegvz,45,63,0|1uwegw0,47,59,1|1v8n4rz,47,59,1|1v8n4s0,45,63,0|1vf4jjz,45,63,0|1vf4jk0,47,59,1|1vrd7fz,47,59,1|1vrd7g0,45,63,0|NaN,45,63,0",
        "America/Rio_Branco|,0,165,0|-t85fg1,0,165,0|-t85fg0,54,59,0|-jyl4w1,54,59,0|-jyl4w0,41,40,1|-jpavk1,41,40,1|-jpavk0,54,59,0|-jfs7g1,54,59,0|-jfs7g0,41,40,1|-j6iy81,41,40,1|-j6iy80,54,59,0|-ahcss1,54,59,0|-ahcss0,41,40,1|-aacy41,41,40,1|-aacy40,54,59,0|-9ykvg1,54,59,0|-9ykvg0,41,40,1|-9scvk1,41,40,1|-9scvk0,54,59,0|-9fsy41,54,59,0|-9fsy40,41,40,1|-99j3k1,41,40,1|-99j3k0,54,59,0|-8wz641,54,59,0|-8wz640,41,40,1|-8sckw1,41,40,1|-8sckw0,54,59,0|-35xgs1,54,59,0|-35xgs0,41,40,1|-31nu81,41,40,1|-31nu80,54,59,0|-2kdjg1,54,59,0|-2kdjg0,41,40,1|-2hccw1,41,40,1|-2hccw0,54,59,0|-24qks1,54,59,0|-24qks0,41,40,1|-203zk1,41,40,1|-203zk0,54,59,0|-1ni7g1,54,59,0|-1ni7g0,41,40,1|-1hc281,41,40,1|-1hc280,54,59,0|-14qa41,54,59,0|-14qa40,41,40,1|-yia81,41,40,1|-yia80,54,59,0|89jhvz,54,59,0|89jhw0,41,40,1|8gdprz,41,40,1|8gdps0,54,59,0|8rwlvz,54,59,0|8rwlw0,41,40,1|8xnxrz,41,40,1|8xnxs0,54,59,0|9aoj7z,54,59,0|9aoj80,41,40,1|9g2wfz,41,40,1|9g2wg0,54,59,0|k2yb7z,54,59,0|k2yb80,41,40,0|mw14fz,41,40,0|mw14g0,54,59,0|NaN,54,59,0",
        "America/Santarem|,0,166,0|-t85hvd,0,166,0|-t85hvc,41,40,0|-jyl7o1,41,40,0|-jyl7o0,38,41,1|-jpayc1,38,41,1|-jpayc0,41,40,0|-jfsa81,41,40,0|-jfsa80,38,41,1|-j6j101,38,41,1|-j6j100,41,40,0|-ahcvk1,41,40,0|-ahcvk0,38,41,1|-aad0w1,38,41,1|-aad0w0,41,40,0|-9yky81,41,40,0|-9yky80,38,41,1|-9scyc1,38,41,1|-9scyc0,41,40,0|-9ft0w1,41,40,0|-9ft0w0,38,41,1|-99j6c1,38,41,1|-99j6c0,41,40,0|-8wz8w1,41,40,0|-8wz8w0,38,41,1|-8scno1,38,41,1|-8scno0,41,40,0|-35xjk1,41,40,0|-35xjk0,38,41,1|-31nx01,38,41,1|-31nx00,41,40,0|-2kdm81,41,40,0|-2kdm80,38,41,1|-2hcfo1,38,41,1|-2hcfo0,41,40,0|-24qnk1,41,40,0|-24qnk0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1nia81,41,40,0|-1nia80,38,41,1|-1hc501,38,41,1|-1hc500,41,40,0|-14qcw1,41,40,0|-14qcw0,38,41,1|-yid01,38,41,1|-yid00,41,40,0|89jf3z,41,40,0|89jf40,38,41,1|8gdmzz,38,41,1|8gdn00,41,40,0|8rwj3z,41,40,0|8rwj40,38,41,1|8xnuzz,38,41,1|8xnv00,41,40,0|9aogfz,41,40,0|9aogg0,38,41,1|9g2tnz,38,41,1|9g2to0,41,40,0|k2y8fz,41,40,0|k2y8g0,38,41,0|NaN,38,41,0",
        "America/Santiago|,0,161,0|-15r0w8s,0,161,0|-15r0w8r,81,161,0|-vauaws,81,161,0|-vauawr,54,59,0|-rx8i41,54,59,0|-rx8i40,81,161,0|-qs16ws,81,161,0|-qs16wr,41,40,0|-qcwsw1,41,40,0|-qcwsw0,81,161,0|-m3etks,81,161,0|-m3etkr,41,40,1|-lsgfk1,41,40,1|-lsgfk0,54,59,0|-lkl0s1,54,59,0|-lkl0s0,41,40,1|-l9oi81,41,40,1|-l9oi80,54,59,0|-l1t3g1,54,59,0|-l1t3g0,41,40,1|-kqwkw1,41,40,1|-kqwkw0,54,59,0|-kj1641,54,59,0|-kj1640,41,40,1|-k84nk1,41,40,1|-k84nk0,54,59,0|-k098s1,54,59,0|-k098s0,41,40,1|-jpavk1,41,40,1|-jpavk0,54,59,0|-jhfgs1,54,59,0|-jhfgs0,41,40,0|-eeay81,41,40,0|-eeay80,54,59,0|-eb5ws1,54,59,0|-eb5ws0,41,40,0|-c8vww1,41,40,0|-c8vww0,38,41,1|-c6kno1,38,41,1|-c6kno0,41,40,1|-bvifk1,41,40,1|-bvifk0,54,59,0|-bsvzk1,54,59,0|-bsvzk0,41,40,0|-lsvk1,41,40,0|-lsvk0,38,41,1|-e8qc1,38,41,1|-e8qc0,41,40,0|-1zww1,41,40,0|-1zww0,38,41,1|4hcbz,38,41,1|4hcc0,41,40,0|ekdrz,41,40,0|ekds0,38,41,1|mhhnz,38,41,1|mhho0,41,40,0|xagfz,41,40,0|xagg0,38,41,1|157kbz,38,41,1|157kc0,41,40,0|1gdhrz,41,40,0|1gdhs0,38,41,1|1nxmzz,38,41,1|1nxn00,41,40,0|1ydn3z,41,40,0|1ydn40,38,41,1|26npnz,38,41,1|26npo0,41,40,0|2htn3z,41,40,0|2htn40,38,41,1|2pdsbz,38,41,1|2pdsc0,41,40,0|30jprz,41,40,0|30jps0,38,41,1|38gtnz,38,41,1|38gto0,41,40,0|3j9sfz,41,40,0|3j9sg0,38,41,1|3r6wbz,38,41,1|3r6wc0,41,40,0|41zv3z,41,40,0|41zv40,38,41,1|49wyzz,38,41,1|49wz00,41,40,0|4l2wfz,41,40,0|4l2wg0,38,41,1|4sn1nz,38,41,1|4sn1o0,41,40,0|53sz3z,41,40,0|53sz40,38,41,1|5bd4bz,38,41,1|5bd4c0,41,40,0|5mj1rz,41,40,0|5mj1s0,38,41,1|5ug5nz,38,41,1|5ug5o0,41,40,0|6594fz,41,40,0|6594g0,38,41,1|6d68bz,38,41,1|6d68c0,41,40,0|6nz73z,41,40,0|6nz740,38,41,1|6vwazz,38,41,1|6vwb00,41,40,0|76p9rz,41,40,0|76p9s0,38,41,1|7emdnz,38,41,1|7emdo0,41,40,0|7psb3z,41,40,0|7psb40,38,41,1|7xcgbz,38,41,1|7xcgc0,41,40,0|88idrz,41,40,0|88ids0,38,41,1|8g2izz,38,41,1|8g2j00,41,40,0|8r8gfz,41,40,0|8r8gg0,38,41,1|90lezz,38,41,1|90lf00,41,40,0|99yj3z,41,40,0|99yj40,38,41,1|9hvmzz,38,41,1|9hvn00,41,40,0|9solrz,41,40,0|9sols0,38,41,1|a0lpnz,38,41,1|a0lpo0,41,40,0|abrn3z,41,40,0|abrn40,38,41,1|ajbsbz,38,41,1|ajbsc0,41,40,0|at1v3z,41,40,0|at1v40,38,41,1|b21uzz,38,41,1|b21v00,41,40,0|bd7sfz,41,40,0|bd7sg0,38,41,1|bl4wbz,38,41,1|bl4wc0,41,40,0|bvxv3z,41,40,0|bvxv40,38,41,1|c3uyzz,38,41,1|c3uz00,41,40,0|cenxrz,41,40,0|cenxs0,38,41,1|cml1nz,38,41,1|cml1o0,41,40,0|cxe0fz,41,40,0|cxe0g0,38,41,1|d5b4bz,38,41,1|d5b4c0,41,40,0|dgh1rz,41,40,0|dgh1s0,38,41,1|do16zz,38,41,1|do1700,41,40,0|dz74fz,41,40,0|dz74g0,38,41,1|e7u5nz,38,41,1|e7u5o0,41,40,0|ehx73z,41,40,0|ehx740,38,41,1|epuazz,38,41,1|epub00,41,40,0|ezxcfz,41,40,0|ezxcg0,38,41,1|f9n9nz,38,41,1|f9n9o0,41,40,0|fjdcfz,41,40,0|fjdcg0,38,41,1|fragbz,38,41,1|fragc0,41,40,0|g2gdrz,41,40,0|g2gds0,38,41,1|ga0izz,38,41,1|ga0j00,41,40,0|gl6gfz,41,40,0|gl6gg0,38,41,1|gsqlnz,38,41,1|gsqlo0,41,40,0|h3wj3z,41,40,0|h3wj40,38,41,1|hbgobz,38,41,1|hbgoc0,41,40,0|hmmlrz,41,40,0|hmmls0,38,41,1|hujpnz,38,41,1|hujpo0,41,40,0|i5cofz,41,40,0|i5cog0,38,41,1|id9sbz,38,41,1|id9sc0,41,40,0|io2r3z,41,40,0|io2r40,38,41,1|ivzuzz,38,41,1|ivzv00,41,40,0|j75sfz,41,40,0|j75sg0,38,41,1|jepxnz,38,41,1|jepxo0,41,40,0|jpvv3z,41,40,0|jpvv40,38,41,1|jyiwbz,38,41,1|jyiwc0,41,40,0|k8lxrz,41,40,0|k8lxs0,38,41,1|kgj1nz,38,41,1|kgj1o0,41,40,0|krc0fz,41,40,0|krc0g0,38,41,1|l0c0bz,38,41,1|l0c0c0,41,40,0|la233z,41,40,0|la2340,38,41,1|lkuwbz,38,41,1|lkuwc0,41,40,0|lq9f3z,41,40,0|lq9f40,38,41,1|m380bz,38,41,1|m380c0,41,40,0|m9pf3z,41,40,0|m9pf40,38,41,1|mly2zz,38,41,1|mly300,41,40,0|mssgfz,41,40,0|mssgg0,38,41,1|n4o5nz,38,41,1|n4o5o0,41,40,0|nbij3z,41,40,0|nbij40,38,41,1|o776zz,38,41,1|o77700,41,40,0|obvsfz,41,40,0|obvsg0,38,41,1|opx9nz,38,41,1|opx9o0,41,40,0|oulv3z,41,40,0|oulv40,38,41,1|p8ncbz,38,41,1|p8ncc0,41,40,0|pdbxrz,41,40,0|pdbxs0,38,41,1|ppklnz,38,41,1|ppklo0,41,40,0|pxhv3z,41,40,0|pxhv40,38,41,1|q8aobz,38,41,1|q8aoc0,41,40,0|qg7xrz,41,40,0|qg7xs0,38,41,1|qr0qzz,38,41,1|qr0r00,41,40,0|qyy0fz,41,40,0|qyy0g0,38,41,1|r9qtnz,38,41,1|r9qto0,41,40,0|ri11rz,41,40,0|ri11s0,38,41,1|rsgwbz,38,41,1|rsgwc0,41,40,0|s0e5rz,41,40,0|s0e5s0,38,41,1|sbjxnz,38,41,1|sbjxo0,41,40,0|sjh73z,41,40,0|sjh740,38,41,1|sua0bz,38,41,1|sua0c0,41,40,0|t279rz,41,40,0|t279s0,38,41,1|td02zz,38,41,1|td0300,41,40,0|tkxcfz,41,40,0|tkxcg0,38,41,1|tvq5nz,38,41,1|tvq5o0,41,40,0|u3nf3z,41,40,0|u3nf40,38,41,1|ueg8bz,38,41,1|ueg8c0,41,40,0|umdhrz,41,40,0|umdhs0,38,41,1|uxj9nz,38,41,1|uxj9o0,41,40,0|v53kfz,41,40,0|v53kg0,38,41,1|vg9cbz,38,41,1|vg9cc0,41,40,0|vo6lrz,41,40,0|vo6ls0,38,41,1|vyzezz,38,41,1|vyzf00,41,40,0|w6wofz,41,40,0|w6wog0,38,41,1|whphnz,38,41,1|whpho0,41,40,0|wpmr3z,41,40,0|wpmr40,38,41,1|x0fkbz,38,41,1|x0fkc0,41,40,0|x8ctrz,41,40,0|x8cts0,38,41,1|xj5mzz,38,41,1|xj5n00,41,40,0|xr2wfz,41,40,0|xr2wg0,38,41,1|y28obz,38,41,1|y28oc0,41,40,0|y9sz3z,41,40,0|y9sz40,38,41,1|ykyqzz,38,41,1|ykyr00,41,40,0|ysw0fz,41,40,0|ysw0g0,38,41,1|z3otnz,38,41,1|z3oto0,41,40,0|zbm33z,41,40,0|zbm340,38,41,1|zmewbz,38,41,1|zmewc0,41,40,0|zuc5rz,41,40,0|zuc5s0,38,41,1|1054yzz,38,41,1|1054z00,41,40,0|10d28fz,41,40,0|10d28g0,38,41,1|10o80bz,38,41,1|10o80c0,41,40,0|10vsb3z,41,40,0|10vsb40,38,41,1|116y2zz,38,41,1|116y300,41,40,0|11evcfz,41,40,0|11evcg0,38,41,1|11po5nz,38,41,1|11po5o0,41,40,0|11xlf3z,41,40,0|11xlf40,38,41,1|128e8bz,38,41,1|128e8c0,41,40,0|12gbhrz,41,40,0|12gbhs0,38,41,1|12r4azz,38,41,1|12r4b00,41,40,0|12z1kfz,41,40,0|12z1kg0,38,41,1|139udnz,38,41,1|139udo0,41,40,0|13hrn3z,41,40,0|13hrn40,38,41,1|13sxezz,38,41,1|13sxf00,41,40,0|140hprz,41,40,0|140hps0,38,41,1|14bnhnz,38,41,1|14bnho0,41,40,0|14jkr3z,41,40,0|14jkr40,38,41,1|14udkbz,38,41,1|14udkc0,41,40,0|152atrz,41,40,0|152ats0,38,41,1|15d3mzz,38,41,1|15d3n00,41,40,0|15l0wfz,41,40,0|15l0wg0,38,41,1|15vtpnz,38,41,1|15vtpo0,41,40,0|163qz3z,41,40,0|163qz40,38,41,1|16ejsbz,38,41,1|16ejsc0,41,40,0|16mh1rz,41,40,0|16mh1s0,38,41,1|16xmtnz,38,41,1|16xmto0,41,40,0|175k33z,41,40,0|175k340,38,41,1|17gcwbz,38,41,1|17gcwc0,41,40,0|17oa5rz,41,40,0|17oa5s0,38,41,1|17z2yzz,38,41,1|17z2z00,41,40,0|18708fz,41,40,0|18708g0,38,41,1|18ht1nz,38,41,1|18ht1o0,41,40,0|18pqb3z,41,40,0|18pqb40,38,41,1|190j4bz,38,41,1|190j4c0,41,40,0|198gdrz,41,40,0|198gds0,38,41,1|19jm5nz,38,41,1|19jm5o0,41,40,0|19r6gfz,41,40,0|19r6gg0,38,41,1|1a2c8bz,38,41,1|1a2c8c0,41,40,0|1aa9hrz,41,40,0|1aa9hs0,38,41,1|1al2azz,38,41,1|1al2b00,41,40,0|1aszkfz,41,40,0|1aszkg0,38,41,1|1b3sdnz,38,41,1|1b3sdo0,41,40,0|1bbpn3z,41,40,0|1bbpn40,38,41,1|1bmigbz,38,41,1|1bmigc0,41,40,0|1bufprz,41,40,0|1bufps0,38,41,1|1c58izz,38,41,1|1c58j00,41,40,0|1cd5sfz,41,40,0|1cd5sg0,38,41,1|1cobkbz,38,41,1|1cobkc0,41,40,0|1cvvv3z,41,40,0|1cvvv40,38,41,1|1d71mzz,38,41,1|1d71n00,41,40,0|1deywfz,41,40,0|1deywg0,38,41,1|1dprpnz,38,41,1|1dprpo0,41,40,0|1dxoz3z,41,40,0|1dxoz40,38,41,1|1e8hsbz,38,41,1|1e8hsc0,41,40,0|1egf1rz,41,40,0|1egf1s0,38,41,1|1er7uzz,38,41,1|1er7v00,41,40,0|1ez54fz,41,40,0|1ez54g0,38,41,1|1faawbz,38,41,1|1faawc0,41,40,0|1fhv73z,41,40,0|1fhv740,38,41,1|1ft0yzz,38,41,1|1ft0z00,41,40,0|1g0y8fz,41,40,0|1g0y8g0,38,41,1|1gbr1nz,38,41,1|1gbr1o0,41,40,0|1gjob3z,41,40,0|1gjob40,38,41,1|1guh4bz,38,41,1|1guh4c0,41,40,0|1h2edrz,41,40,0|1h2eds0,38,41,1|1hd76zz,38,41,1|1hd7700,41,40,0|1hl4gfz,41,40,0|1hl4gg0,38,41,1|1hvx9nz,38,41,1|1hvx9o0,41,40,0|1i3uj3z,41,40,0|1i3uj40,38,41,1|1if0azz,38,41,1|1if0b00,41,40,0|1imklrz,41,40,0|1imkls0,38,41,1|1ixqdnz,38,41,1|1ixqdo0,41,40,0|1j5nn3z,41,40,0|1j5nn40,38,41,1|1jgggbz,38,41,1|1jgggc0,41,40,0|1jodprz,41,40,0|1jodps0,38,41,1|1jz6izz,38,41,1|1jz6j00,41,40,0|1k73sfz,41,40,0|1k73sg0,38,41,1|1khwlnz,38,41,1|1khwlo0,41,40,0|1kptv3z,41,40,0|1kptv40,38,41,1|1l0mobz,38,41,1|1l0moc0,41,40,0|1l8jxrz,41,40,0|1l8jxs0,38,41,1|1ljppnz,38,41,1|1ljppo0,41,40,0|1lrmz3z,41,40,0|1lrmz40,38,41,1|1m2fsbz,38,41,1|1m2fsc0,41,40,0|1mad1rz,41,40,0|1mad1s0,38,41,1|1ml5uzz,38,41,1|1ml5v00,41,40,0|1mt34fz,41,40,0|1mt34g0,38,41,1|1n3vxnz,38,41,1|1n3vxo0,41,40,0|1nbt73z,41,40,0|1nbt740,38,41,1|1nmm0bz,38,41,1|1nmm0c0,41,40,0|1nuj9rz,41,40,0|1nuj9s0,38,41,1|1o5p1nz,38,41,1|1o5p1o0,41,40,0|1od9cfz,41,40,0|1od9cg0,38,41,1|1oof4bz,38,41,1|1oof4c0,41,40,0|1owcdrz,41,40,0|1owcds0,38,41,1|1p756zz,38,41,1|1p75700,41,40,0|1pf2gfz,41,40,0|1pf2gg0,38,41,1|1ppv9nz,38,41,1|1ppv9o0,41,40,0|1pxsj3z,41,40,0|1pxsj40,38,41,1|1q8lcbz,38,41,1|1q8lcc0,41,40,0|1qgilrz,41,40,0|1qgils0,38,41,1|1qrbezz,38,41,1|1qrbf00,41,40,0|1qz8ofz,41,40,0|1qz8og0,38,41,1|1raegbz,38,41,1|1raegc0,41,40,0|1rhyr3z,41,40,0|1rhyr40,38,41,1|1rt4izz,38,41,1|1rt4j00,41,40,0|1s11sfz,41,40,0|1s11sg0,38,41,1|1sbulnz,38,41,1|1sbulo0,41,40,0|1sjrv3z,41,40,0|1sjrv40,38,41,1|1sukobz,38,41,1|1sukoc0,41,40,0|1t2hxrz,41,40,0|1t2hxs0,38,41,1|1tdaqzz,38,41,1|1tdar00,41,40,0|1tl80fz,41,40,0|1tl80g0,38,41,1|1twdsbz,38,41,1|1twdsc0,41,40,0|1u3y33z,41,40,0|1u3y340,38,41,1|1uf3uzz,38,41,1|1uf3v00,41,40,0|1un14fz,41,40,0|1un14g0,38,41,1|1uxtxnz,38,41,1|1uxtxo0,41,40,0|1v5r73z,41,40,0|1v5r740,38,41,1|1vgk0bz,38,41,1|1vgk0c0,41,40,0|1voh9rz,41,40,0|1voh9s0,38,41,1|NaN,38,41,1",
        "America/Santo_Domingo|,0,167,0|-15r0we1,0,167,0|-15r0we0,82,168,0|-j6hz1d,82,168,0|-j6hz1c,43,59,0|-1nlws1,43,59,0|-1nlws0,60,40,1|-1hdww1,60,40,1|-1hdww0,43,59,0|-3fos1,43,59,0|-3fos0,61,76,1|2mshz,61,76,1|2msi0,43,59,0|fadvz,43,59,0|fadw0,61,76,1|jrghz,61,76,1|jrgi0,43,59,0|ydf7z,43,59,0|ydf80,61,76,1|12l8hz,61,76,1|12l8i0,43,59,0|1h3hvz,43,59,0|1h3hw0,61,76,1|1lf0hz,61,76,1|1lf0i0,43,59,0|1ztkjz,43,59,0|1ztkk0,61,76,1|246xtz,61,76,1|246xu0,43,59,0|2ijn7z,43,59,0|2ijn80,31,40,0|g36gnz,31,40,0|g36go0,43,59,0|g4z9zz,43,59,0|g4za00,31,40,0|NaN,31,40,0",
        "America/Sao_Paulo|,0,169,0|-t85jd9,0,169,0|-t85jd8,38,41,0|-jylag1,38,41,0|-jylag0,39,43,1|-jpb141,39,43,1|-jpb140,38,41,0|-jfsd01,38,41,0|-jfsd00,39,43,1|-j6j3s1,39,43,1|-j6j3s0,38,41,0|-ahcyc1,38,41,0|-ahcyc0,39,43,1|-aad3o1,39,43,1|-aad3o0,38,41,0|-9yl101,38,41,0|-9yl100,39,43,1|-9sd141,39,43,1|-9sd140,38,41,0|-9ft3o1,38,41,0|-9ft3o0,39,43,1|-99j941,39,43,1|-99j940,38,41,0|-8wzbo1,38,41,0|-8wzbo0,39,43,1|-8scqg1,39,43,1|-8scqg0,38,41,0|-38cno1,38,41,0|-38cno0,39,43,1|-31nzs1,39,43,1|-31nzs0,38,41,0|-2kdp01,38,41,0|-2kdp00,39,43,1|-2hcig1,39,43,1|-2hcig0,38,41,0|-24qqc1,38,41,0|-24qqc0,39,43,1|-204541,39,43,1|-204540,38,41,0|-1nid01,38,41,0|-1nid00,39,43,1|-1hc7s1,39,43,1|-1hc7s0,38,41,0|-14qfo1,38,41,0|-14qfo0,39,43,1|-yifs1,39,43,1|-yifs0,38,41,0|89jcbz,38,41,0|89jcc0,39,43,1|8gdk7z,39,43,1|8gdk80,38,41,0|8rwgbz,38,41,0|8rwgc0,39,43,1|8xns7z,39,43,1|8xns80,38,41,0|9aodnz,38,41,0|9aodo0,39,43,1|9g2qvz,39,43,1|9g2qw0,38,41,0|9t1hnz,38,41,0|9t1ho0,39,43,1|9yfuvz,39,43,1|9yfuw0,38,41,0|abrkbz,38,41,0|abrkc0,39,43,1|ahvuvz,39,43,1|ahvuw0,38,41,0|auulnz,38,41,0|auulo0,39,43,1|b0yw7z,39,43,1|b0yw80,38,41,0|bdkobz,38,41,0|bdkoc0,39,43,1|bjc07z,39,43,1|bjc080,38,41,0|bwnpnz,38,41,0|bwnpo0,39,43,1|c1p47z,39,43,1|c1p480,38,41,0|cf0tnz,38,41,0|cf0to0,39,43,1|cli2vz,39,43,1|cli2w0,38,41,0|cxqwbz,38,41,0|cxqwc0,39,43,1|d485jz,39,43,1|d485k0,38,41,0|dggyzz,38,41,0|dggz00,39,43,1|dml9jz,39,43,1|dml9k0,38,41,0|dyu2zz,38,41,0|dyu300,39,43,1|e5oavz,39,43,1|e5oaw0,38,41,0|ehm0bz,38,41,0|ehm0c0,39,43,1|ep4avz,39,43,1|ep4aw0,38,41,0|f0n6zz,38,41,0|f0n700,39,43,1|f7hevz,39,43,1|f7hew0,38,41,0|fj0azz,38,41,0|fj0b00,39,43,1|fqkg7z,39,43,1|fqkg80,38,41,0|g23cbz,38,41,0|g23cc0,39,43,1|g8xk7z,39,43,1|g8xk80,38,41,0|gl6dnz,38,41,0|gl6do0,39,43,1|grnmvz,39,43,1|grnmw0,38,41,0|h4zcbz,38,41,0|h4zcc0,39,43,1|hadpjz,39,43,1|hadpk0,38,41,0|hmzhnz,38,41,0|hmzho0,39,43,1|ht3s7z,39,43,1|ht3s80,38,41,0|i6j6zz,38,41,0|i6j700,39,43,1|ic6tjz,39,43,1|ic6tk0,38,41,0|iofmzz,38,41,0|iofn00,39,43,1|iuww7z,39,43,1|iuww80,38,41,0|j88lnz,38,41,0|j88lo0,39,43,1|jdzxjz,39,43,1|jdzxk0,38,41,0|jpvsbz,38,41,0|jpvsc0,39,43,1|jwd1jz,39,43,1|jwd1k0,38,41,0|k8ytnz,38,41,0|k8yto0,39,43,1|kf347z,39,43,1|kf3480,38,41,0|krowbz,38,41,0|krowc0,39,43,1|ky65jz,39,43,1|ky65k0,38,41,0|laeyzz,38,41,0|laez00,39,43,1|lgw87z,39,43,1|lgw880,38,41,0|lt51nz,38,41,0|lt51o0,39,43,1|lzz9jz,39,43,1|lzz9k0,38,41,0|mc82zz,38,41,0|mc8300,39,43,1|micdjz,39,43,1|micdk0,38,41,0|muy5nz,38,41,0|muy5o0,39,43,1|n12g7z,39,43,1|n12g80,38,41,0|ndo8bz,38,41,0|ndo8c0,39,43,1|nk5hjz,39,43,1|nk5hk0,38,41,0|nweazz,38,41,0|nweb00,39,43,1|o2vk7z,39,43,1|o2vk80,38,41,0|of4dnz,38,41,0|of4do0,39,43,1|ollmvz,39,43,1|ollmw0,38,41,0|oxugbz,38,41,0|oxugc0,39,43,1|p4bpjz,39,43,1|p4bpk0,38,41,0|phnezz,38,41,0|phnf00,39,43,1|pn1s7z,39,43,1|pn1s80,38,41,0|NaN,38,41,0",
        "America/Scoresbysund|,0,170,0|-rvurxl,0,170,0|-rvurxk,39,43,0|5ct1rz,39,43,0|5ct1s0,12,13,1|5lt4fz,12,13,1|5lt4g0,39,43,0|5v607z,39,43,0|5v6080,16,1,1|64iyrz,16,1,1|64iys0,12,13,0|6dw03z,12,13,0|6dw040,16,1,1|6n91fz,16,1,1|6n91g0,12,13,0|6wm2rz,12,13,0|6wm2s0,16,1,1|75z43z,16,1,1|75z440,12,13,0|7fc5fz,12,13,0|7fc5g0,16,1,1|7p25fz,16,1,1|7p25g0,12,13,0|7yf6rz,12,13,0|7yf6s0,16,1,1|87s83z,16,1,1|87s840,12,13,0|8h59fz,12,13,0|8h59g0,16,1,1|8qiarz,16,1,1|8qias0,12,13,0|8zvc3z,12,13,0|8zvc40,16,1,1|998dfz,16,1,1|998dg0,12,13,0|9ilerz,12,13,0|9iles0,16,1,1|9ryg3z,16,1,1|9ryg40,12,13,0|a1bhfz,12,13,0|a1bhg0,16,1,1|aaoirz,16,1,1|aaois0,12,13,0|ak1k3z,12,13,0|ak1k40,16,1,1|atrk3z,16,1,1|atrk40,12,13,0|b34lfz,12,13,0|b34lg0,16,1,1|bchmrz,16,1,1|bchms0,12,13,0|bluo3z,12,13,0|bluo40,16,1,1|bv7pfz,16,1,1|bv7pg0,12,13,0|c4kqrz,12,13,0|c4kqs0,16,1,1|cdxs3z,16,1,1|cdxs40,12,13,0|cnatfz,12,13,0|cnatg0,16,1,1|cwnurz,16,1,1|cwnus0,12,13,0|d60w3z,12,13,0|d60w40,16,1,1|dfdxfz,16,1,1|dfdxg0,12,13,0|dp3xfz,12,13,0|dp3xg0,16,1,1|dzwtfz,16,1,1|dzwtg0,12,13,0|e7u03z,12,13,0|e7u040,16,1,1|eimw3z,16,1,1|eimw40,12,13,0|eqk2rz,12,13,0|eqk2s0,16,1,1|f1cyrz,16,1,1|f1cys0,12,13,0|f9a5fz,12,13,0|f9a5g0,16,1,1|fkg03z,16,1,1|fkg040,12,13,0|fs083z,12,13,0|fs0840,16,1,1|g362rz,16,1,1|g362s0,12,13,0|gaqarz,12,13,0|gaqas0,16,1,1|glw5fz,16,1,1|glw5g0,12,13,0|gttc3z,12,13,0|gttc40,16,1,1|h4m83z,16,1,1|h4m840,12,13,0|hcjerz,12,13,0|hcjes0,16,1,1|hncarz,16,1,1|hncas0,12,13,0|hv9hfz,12,13,0|hv9hg0,16,1,1|i6fc3z,16,1,1|i6fc40,12,13,0|idzk3z,12,13,0|idzk40,16,1,1|ip5erz,16,1,1|ip5es0,12,13,0|iwpmrz,12,13,0|iwpms0,16,1,1|j7vhfz,16,1,1|j7vhg0,12,13,0|jffpfz,12,13,0|jffpg0,16,1,1|jqlk3z,16,1,1|jqlk40,12,13,0|jyiqrz,12,13,0|jyiqs0,16,1,1|k9bmrz,16,1,1|k9bms0,12,13,0|kh8tfz,12,13,0|kh8tg0,16,1,1|ks1pfz,16,1,1|ks1pg0,12,13,0|kzyw3z,12,13,0|kzyw40,16,1,1|lb4qrz,16,1,1|lb4qs0,12,13,0|lioyrz,12,13,0|lioys0,16,1,1|ltutfz,16,1,1|ltutg0,12,13,0|m1f1fz,12,13,0|m1f1g0,16,1,1|mckw3z,16,1,1|mckw40,12,13,0|mki2rz,12,13,0|mki2s0,16,1,1|mvayrz,16,1,1|mvays0,12,13,0|n385fz,12,13,0|n385g0,16,1,1|ne11fz,16,1,1|ne11g0,12,13,0|nly83z,12,13,0|nly840,16,1,1|nwr43z,16,1,1|nwr440,12,13,0|o4oarz,12,13,0|o4oas0,16,1,1|ofu5fz,16,1,1|ofu5g0,12,13,0|onedfz,12,13,0|onedg0,16,1,1|oyk83z,16,1,1|oyk840,12,13,0|p64g3z,12,13,0|p64g40,16,1,1|phaarz,16,1,1|phaas0,12,13,0|pp7hfz,12,13,0|pp7hg0,16,1,1|q00dfz,16,1,1|q00dg0,12,13,0|q7xk3z,12,13,0|q7xk40,16,1,1|qiqg3z,16,1,1|qiqg40,12,13,0|qqnmrz,12,13,0|qqnms0,16,1,1|r1thfz,16,1,1|r1thg0,12,13,0|r9dpfz,12,13,0|r9dpg0,16,1,1|rkjk3z,16,1,1|rkjk40,12,13,0|rs3s3z,12,13,0|rs3s40,16,1,1|s39mrz,16,1,1|s39ms0,12,13,0|sb6tfz,12,13,0|sb6tg0,12,13,1|slzpfz,12,13,1|slzpg0,39,43,0|stww3z,39,43,0|stww40,12,13,1|t4ps3z,12,13,1|t4ps40,39,43,0|tcmyrz,39,43,0|tcmys0,12,13,1|tnfurz,12,13,1|tnfus0,39,43,0|tvd1fz,39,43,0|tvd1g0,12,13,1|u6iw3z,12,13,1|u6iw40,39,43,0|ue343z,39,43,0|ue3440,12,13,1|up8yrz,12,13,1|up8ys0,39,43,0|uwt6rz,39,43,0|uwt6s0,12,13,1|v7z1fz,12,13,1|v7z1g0,39,43,0|vfw83z,39,43,0|vfw840,12,13,1|vqp43z,12,13,1|vqp440,39,43,0|vymarz,39,43,0|vymas0,12,13,1|w9f6rz,12,13,1|w9f6s0,39,43,0|whcdfz,39,43,0|whcdg0,12,13,1|wsi83z,12,13,1|wsi840,39,43,0|x02g3z,39,43,0|x02g40,12,13,1|xb8arz,12,13,1|xb8as0,39,43,0|xisirz,39,43,0|xisis0,12,13,1|xtydfz,12,13,1|xtydg0,39,43,0|y1ilfz,39,43,0|y1ilg0,12,13,1|ycog3z,12,13,1|ycog40,39,43,0|yklmrz,39,43,0|yklms0,12,13,1|yveirz,12,13,1|yveis0,39,43,0|z3bpfz,39,43,0|z3bpg0,12,13,1|ze4lfz,12,13,1|ze4lg0,39,43,0|zm1s3z,39,43,0|zm1s40,12,13,1|zx7mrz,12,13,1|zx7ms0,39,43,0|104rurz,39,43,0|104rus0,12,13,1|10fxpfz,12,13,1|10fxpg0,39,43,0|10nhxfz,39,43,0|10nhxg0,12,13,1|10yns3z,12,13,1|10yns40,39,43,0|116kyrz,39,43,0|116kys0,12,13,1|11hdurz,12,13,1|11hdus0,39,43,0|11pb1fz,39,43,0|11pb1g0,12,13,1|1203xfz,12,13,1|1203xg0,39,43,0|128143z,39,43,0|1281440,12,13,1|12iu03z,12,13,1|12iu040,39,43,0|12qr6rz,39,43,0|12qr6s0,12,13,1|131x1fz,12,13,1|131x1g0,39,43,0|139h9fz,39,43,0|139h9g0,12,13,1|13kn43z,12,13,1|13kn440,39,43,0|13s7c3z,39,43,0|13s7c40,12,13,1|143d6rz,12,13,1|143d6s0,39,43,0|14badfz,39,43,0|14badg0,12,13,1|14m39fz,12,13,1|14m39g0,39,43,0|14u0g3z,39,43,0|14u0g40,12,13,1|154tc3z,12,13,1|154tc40,39,43,0|15cqirz,39,43,0|15cqis0,12,13,1|15nwdfz,12,13,1|15nwdg0,39,43,0|15vglfz,39,43,0|15vglg0,12,13,1|166mg3z,12,13,1|166mg40,39,43,0|16e6o3z,39,43,0|16e6o40,12,13,1|16pcirz,12,13,1|16pcis0,39,43,0|16x9pfz,39,43,0|16x9pg0,12,13,1|1782lfz,12,13,1|1782lg0,39,43,0|17fzs3z,39,43,0|17fzs40,12,13,1|17qso3z,12,13,1|17qso40,39,43,0|17ypurz,39,43,0|17ypus0,12,13,1|189iqrz,12,13,1|189iqs0,39,43,0|18hfxfz,39,43,0|18hfxg0,12,13,1|18sls3z,12,13,1|18sls40,39,43,0|190603z,39,43,0|1906040,12,13,1|19bburz,12,13,1|19bbus0,39,43,0|19iw2rz,39,43,0|19iw2s0,12,13,1|19u1xfz,12,13,1|19u1xg0,39,43,0|1a1z43z,39,43,0|1a1z440,12,13,1|1acs03z,12,13,1|1acs040,39,43,0|1akp6rz,39,43,0|1akp6s0,12,13,1|1avi2rz,12,13,1|1avi2s0,39,43,0|1b3f9fz,39,43,0|1b3f9g0,12,13,1|1bel43z,12,13,1|1bel440,39,43,0|1bm5c3z,39,43,0|1bm5c40,12,13,1|1bxb6rz,12,13,1|1bxb6s0,39,43,0|1c4verz,39,43,0|1c4ves0,12,13,1|1cg19fz,12,13,1|1cg19g0,39,43,0|1cnlhfz,39,43,0|1cnlhg0,12,13,1|1cyrc3z,12,13,1|1cyrc40,39,43,0|1d6oirz,39,43,0|1d6ois0,12,13,1|1dhherz,12,13,1|1dhhes0,39,43,0|1dpelfz,39,43,0|1dpelg0,12,13,1|1e07hfz,12,13,1|1e07hg0,39,43,0|1e84o3z,39,43,0|1e84o40,12,13,1|1ejairz,12,13,1|1ejais0,39,43,0|1equqrz,39,43,0|1equqs0,12,13,1|1f20lfz,12,13,1|1f20lg0,39,43,0|1f9ktfz,39,43,0|1f9ktg0,12,13,1|1fkqo3z,12,13,1|1fkqo40,39,43,0|1fsnurz,39,43,0|1fsnus0,12,13,1|1g3gqrz,12,13,1|1g3gqs0,39,43,0|1gbdxfz,39,43,0|1gbdxg0,12,13,1|1gm6tfz,12,13,1|1gm6tg0,39,43,0|1gu403z,39,43,0|1gu4040,12,13,1|1h4ww3z,12,13,1|1h4ww40,39,43,0|1hcu2rz,39,43,0|1hcu2s0,12,13,1|1hnzxfz,12,13,1|1hnzxg0,39,43,0|1hvk5fz,39,43,0|1hvk5g0,12,13,1|1i6q03z,12,13,1|1i6q040,39,43,0|1iea83z,39,43,0|1iea840,12,13,1|1ipg2rz,12,13,1|1ipg2s0,39,43,0|1ixd9fz,39,43,0|1ixd9g0,12,13,1|1j865fz,12,13,1|1j865g0,39,43,0|1jg3c3z,39,43,0|1jg3c40,12,13,1|1jqw83z,12,13,1|1jqw840,39,43,0|1jyterz,39,43,0|1jytes0,12,13,1|1k9z9fz,12,13,1|1k9z9g0,39,43,0|1khjhfz,39,43,0|1khjhg0,12,13,1|1kspc3z,12,13,1|1kspc40,39,43,0|1l09k3z,39,43,0|1l09k40,12,13,1|1lbferz,12,13,1|1lbfes0,39,43,0|1ljclfz,39,43,0|1ljclg0,12,13,1|1lu5hfz,12,13,1|1lu5hg0,39,43,0|1m22o3z,39,43,0|1m22o40,12,13,1|1mcvk3z,12,13,1|1mcvk40,39,43,0|1mksqrz,39,43,0|1mksqs0,12,13,1|1mvlmrz,12,13,1|1mvlms0,39,43,0|1n3itfz,39,43,0|1n3itg0,12,13,1|1neoo3z,12,13,1|1neoo40,39,43,0|1nm8w3z,39,43,0|1nm8w40,12,13,1|1nxeqrz,12,13,1|1nxeqs0,39,43,0|1o4yyrz,39,43,0|1o4yys0,12,13,1|1og4tfz,12,13,1|1og4tg0,39,43,0|1oo203z,39,43,0|1oo2040,12,13,1|1oyuw3z,12,13,1|1oyuw40,39,43,0|1p6s2rz,39,43,0|1p6s2s0,12,13,1|1phkyrz,12,13,1|1phkys0,39,43,0|1ppi5fz,39,43,0|1ppi5g0,12,13,1|1q0o03z,12,13,1|1q0o040,39,43,0|1q8883z,39,43,0|1q88840,12,13,1|1qje2rz,12,13,1|1qje2s0,39,43,0|1qqyarz,39,43,0|1qqyas0,12,13,1|1r245fz,12,13,1|1r245g0,39,43,0|1r9odfz,39,43,0|1r9odg0,12,13,1|1rku83z,12,13,1|1rku840,39,43,0|1rsrerz,39,43,0|1rsres0,12,13,1|1s3karz,12,13,1|1s3kas0,39,43,0|1sbhhfz,39,43,0|1sbhhg0,12,13,1|1smadfz,12,13,1|1smadg0,39,43,0|1su7k3z,39,43,0|1su7k40,12,13,1|1t5derz,12,13,1|1t5des0,39,43,0|1tcxmrz,39,43,0|1tcxms0,12,13,1|1to3hfz,12,13,1|1to3hg0,39,43,0|1tvnpfz,39,43,0|1tvnpg0,12,13,1|1u6tk3z,12,13,1|1u6tk40,39,43,0|1ueqqrz,39,43,0|1ueqqs0,12,13,1|1upjmrz,12,13,1|1upjms0,39,43,0|1uxgtfz,39,43,0|1uxgtg0,12,13,1|1v89pfz,12,13,1|1v89pg0,39,43,0|1vg6w3z,39,43,0|1vg6w40,12,13,1|1vqzs3z,12,13,1|1vqzs40,39,43,0|NaN,39,43,0",
        "America/Sitka|,0,171,0|-1hc7qk0,0,171,0|-1hc7qjz,0,172,0|-1078wa0,0,172,0|-1078w9z,55,38,0|-ek1w81,55,38,0|-ek1w80,67,62,1|-cq2tg1,67,62,1|-cq2tg0,68,62,1|-cnov01,68,62,1|-cnov00,55,38,0|-csc81,55,38,0|-csc80,56,62,1|-3fdo1,56,62,1|-3fdo0,55,38,0|5xqfz,55,38,0|5xqg0,56,62,1|faozz,56,62,1|fap00,55,38,0|ont3z,55,38,0|ont40,56,62,1|ydqbz,56,62,1|ydqc0,55,38,0|17qufz,55,38,0|17qug0,56,62,1|1h3szz,56,62,1|1h3t00,55,38,0|1qgx3z,55,38,0|1qgx40,56,62,1|1ztvnz,56,62,1|1ztvo0,55,38,0|23fl3z,55,38,0|23fl40,56,62,1|2ijybz,56,62,1|2ijyc0,55,38,0|2ooefz,55,38,0|2ooeg0,56,62,1|31a0zz,56,62,1|31a100,55,38,0|3an53z,55,38,0|3an540,56,62,1|3kd2bz,56,62,1|3kd2c0,55,38,0|3td7rz,55,38,0|3td7s0,56,62,1|4334zz,56,62,1|433500,55,38,0|4cg93z,55,38,0|4cg940,56,62,1|4lt7nz,56,62,1|4lt7o0,55,38,0|4v6brz,55,38,0|4v6bs0,56,62,1|54jabz,56,62,1|54jac0,55,38,0|5dwefz,55,38,0|5dweg0,56,62,1|5n9czz,56,62,1|5n9d00,55,38,0|5wmh3z,55,38,0|5wmh40,56,62,1|65zfnz,56,62,1|65zfo0,55,38,0|6fcjrz,55,38,0|6fcjs0,56,62,1|6p2gzz,56,62,1|6p2h00,55,38,0|6y2mfz,55,38,0|6y2mg0,56,62,1|77sjnz,56,62,1|77sjo0,35,35,0|79dybz,35,35,0|79dyc0,36,35,0|7h5qjz,36,35,0|7h5qk0,37,38,1|7qip3z,37,38,1|7qip40,36,35,0|7zvt7z,36,35,0|7zvt80,37,38,1|898rrz,37,38,1|898rs0,36,35,0|8ilvvz,36,35,0|8ilvw0,37,38,1|8ryufz,37,38,1|8ryug0,36,35,0|9092jz,36,35,0|9092k0,37,38,1|9aox3z,37,38,1|9aox40,36,35,0|9iz57z,36,35,0|9iz580,37,38,1|9tryfz,37,38,1|9tryg0,36,35,0|a1p7vz,36,35,0|a1p7w0,37,38,1|aci13z,37,38,1|aci140,36,35,0|akfajz,36,35,0|akfak0,37,38,1|av83rz,37,38,1|av83s0,36,35,0|b3ibvz,36,35,0|b3ibw0,37,38,1|bdy6fz,37,38,1|bdy6g0,36,35,0|bm8ejz,36,35,0|bm8ek0,37,38,1|bwo93z,37,38,1|bwo940,36,35,0|c4yh7z,36,35,0|c4yh80,37,38,1|cfrafz,37,38,1|cfrag0,36,35,0|cnojvz,36,35,0|cnojw0,37,38,1|cyhd3z,37,38,1|cyhd40,36,35,0|d6emjz,36,35,0|d6emk0,37,38,1|dh7frz,37,38,1|dh7fs0,36,35,0|dphnvz,36,35,0|dphnw0,37,38,1|dzxifz,37,38,1|dzxig0,36,35,0|e87qjz,36,35,0|e87qk0,37,38,1|einl3z,37,38,1|einl40,36,35,0|eqxt7z,36,35,0|eqxt80,37,38,1|f1dnrz,37,38,1|f1dns0,36,35,0|f9nvvz,36,35,0|f9nvw0,37,38,1|fkgp3z,37,38,1|fkgp40,36,35,0|fsdyjz,36,35,0|fsdyk0,37,38,1|g36rrz,37,38,1|g36rs0,36,35,0|gb417z,36,35,0|gb4180,37,38,1|glwufz,37,38,1|glwug0,36,35,0|gu72jz,36,35,0|gu72k0,37,38,1|h4mx3z,37,38,1|h4mx40,36,35,0|hcx57z,36,35,0|hcx580,37,38,1|hnczrz,37,38,1|hnczs0,36,35,0|hvn7vz,36,35,0|hvn7w0,37,38,1|i6g13z,37,38,1|i6g140,36,35,0|iedajz,36,35,0|iedak0,37,38,1|ip63rz,37,38,1|ip63s0,36,35,0|ix3d7z,36,35,0|ix3d80,37,38,1|j7w6fz,37,38,1|j7w6g0,36,35,0|jeqjvz,36,35,0|jeqjw0,37,38,1|jqz7rz,37,38,1|jqz7s0,36,35,0|jxgmjz,36,35,0|jxgmk0,37,38,1|k9pafz,37,38,1|k9pag0,36,35,0|kg6p7z,36,35,0|kg6p80,37,38,1|ksfd3z,37,38,1|ksfd40,36,35,0|kz9qjz,36,35,0|kz9qk0,37,38,1|lbiefz,37,38,1|lbieg0,36,35,0|lhzt7z,36,35,0|lhzt80,37,38,1|lu8h3z,37,38,1|lu8h40,36,35,0|m0pvvz,36,35,0|m0pvw0,37,38,1|mcyjrz,37,38,1|mcyjs0,36,35,0|mjfyjz,36,35,0|mjfyk0,37,38,1|mvomfz,37,38,1|mvomg0,36,35,0|n2617z,36,35,0|n26180,37,38,1|neep3z,37,38,1|neep40,36,35,0|nkw3vz,36,35,0|nkw3w0,37,38,1|nx4rrz,37,38,1|nx4rs0,36,35,0|o3z57z,36,35,0|o3z580,37,38,1|og7t3z,37,38,1|og7t40,36,35,0|omp7vz,36,35,0|omp7w0,37,38,1|oyxvrz,37,38,1|oyxvs0,36,35,0|p5fajz,36,35,0|p5fak0,37,38,1|phnyfz,37,38,1|phnyg0,36,35,0|po5d7z,36,35,0|po5d80,37,38,1|q0e13z,37,38,1|q0e140,36,35,0|q6vfvz,36,35,0|q6vfw0,37,38,1|qj43rz,37,38,1|qj43s0,36,35,0|qpyh7z,36,35,0|qpyh80,37,38,1|r2753z,37,38,1|r27540,36,35,0|r8ojvz,36,35,0|r8ojw0,37,38,1|rkx7rz,37,38,1|rkx7s0,36,35,0|rremjz,36,35,0|rremk0,37,38,1|s3nafz,37,38,1|s3nag0,36,35,0|sa4p7z,36,35,0|sa4p80,37,38,1|smdd3z,37,38,1|smdd40,36,35,0|ssurvz,36,35,0|ssurw0,37,38,1|t53frz,37,38,1|t53fs0,36,35,0|tbkujz,36,35,0|tbkuk0,37,38,1|tntifz,37,38,1|tntig0,36,35,0|tunvvz,36,35,0|tunvw0,37,38,1|u6wjrz,37,38,1|u6wjs0,36,35,0|uddyjz,36,35,0|uddyk0,37,38,1|upmmfz,37,38,1|upmmg0,36,35,0|uw417z,36,35,0|uw4180,37,38,1|v8cp3z,37,38,1|v8cp40,36,35,0|veu3vz,36,35,0|veu3w0,37,38,1|vr2rrz,37,38,1|vr2rs0,36,35,0|vxk6jz,36,35,0|vxk6k0,37,38,1|w9sufz,37,38,1|w9sug0,36,35,0|wgn7vz,36,35,0|wgn7w0,37,38,1|wsvvrz,37,38,1|wsvvs0,36,35,0|wzdajz,36,35,0|wzdak0,37,38,1|xblyfz,37,38,1|xblyg0,36,35,0|xi3d7z,36,35,0|xi3d80,37,38,1|xuc13z,37,38,1|xuc140,36,35,0|y0tfvz,36,35,0|y0tfw0,37,38,1|yd23rz,37,38,1|yd23s0,36,35,0|yjjijz,36,35,0|yjjik0,37,38,1|yvs6fz,37,38,1|yvs6g0,36,35,0|z29l7z,36,35,0|z29l80,37,38,1|zei93z,37,38,1|zei940,36,35,0|zlcmjz,36,35,0|zlcmk0,37,38,1|zxlafz,37,38,1|zxlag0,36,35,0|1042p7z,36,35,0|1042p80,37,38,1|10gbd3z,37,38,1|10gbd40,36,35,0|10msrvz,36,35,0|10msrw0,37,38,1|10z1frz,37,38,1|10z1fs0,36,35,0|115iujz,36,35,0|115iuk0,37,38,1|11hrifz,37,38,1|11hrig0,36,35,0|11o8x7z,36,35,0|11o8x80,37,38,1|120hl3z,37,38,1|120hl40,36,35,0|126yzvz,36,35,0|126yzw0,37,38,1|12j7nrz,37,38,1|12j7ns0,36,35,0|12q217z,36,35,0|12q2180,37,38,1|132ap3z,37,38,1|132ap40,36,35,0|138s3vz,36,35,0|138s3w0,37,38,1|13l0rrz,37,38,1|13l0rs0,36,35,0|13ri6jz,36,35,0|13ri6k0,37,38,1|143qufz,37,38,1|143qug0,36,35,0|14a897z,36,35,0|14a8980,37,38,1|14mgx3z,37,38,1|14mgx40,36,35,0|14sybvz,36,35,0|14sybw0,37,38,1|1556zrz,37,38,1|1556zs0,36,35,0|15c1d7z,36,35,0|15c1d80,37,38,1|15oa13z,37,38,1|15oa140,36,35,0|15urfvz,36,35,0|15urfw0,37,38,1|16703rz,37,38,1|16703s0,36,35,0|16dhijz,36,35,0|16dhik0,37,38,1|16pq6fz,37,38,1|16pq6g0,36,35,0|16w7l7z,36,35,0|16w7l80,37,38,1|178g93z,37,38,1|178g940,36,35,0|17exnvz,36,35,0|17exnw0,37,38,1|17r6brz,37,38,1|17r6bs0,36,35,0|17xnqjz,36,35,0|17xnqk0,37,38,1|189wefz,37,38,1|189weg0,36,35,0|18gqrvz,36,35,0|18gqrw0,37,38,1|18szfrz,37,38,1|18szfs0,36,35,0|18zgujz,36,35,0|18zguk0,37,38,1|19bpifz,37,38,1|19bpig0,36,35,0|19i6x7z,36,35,0|19i6x80,37,38,1|19ufl3z,37,38,1|19ufl40,36,35,0|1a0wzvz,36,35,0|1a0wzw0,37,38,1|1ad5nrz,37,38,1|1ad5ns0,36,35,0|1ajn2jz,36,35,0|1ajn2k0,37,38,1|1avvqfz,37,38,1|1avvqg0,36,35,0|1b2q3vz,36,35,0|1b2q3w0,37,38,1|1beyrrz,37,38,1|1beyrs0,36,35,0|1blg6jz,36,35,0|1blg6k0,37,38,1|1bxoufz,37,38,1|1bxoug0,36,35,0|1c4697z,36,35,0|1c46980,37,38,1|1cgex3z,37,38,1|1cgex40,36,35,0|1cmwbvz,36,35,0|1cmwbw0,37,38,1|1cz4zrz,37,38,1|1cz4zs0,36,35,0|1d5mejz,36,35,0|1d5mek0,37,38,1|1dhv2fz,37,38,1|1dhv2g0,36,35,0|1doch7z,36,35,0|1doch80,37,38,1|1e0l53z,37,38,1|1e0l540,36,35,0|1e7fijz,36,35,0|1e7fik0,37,38,1|1ejo6fz,37,38,1|1ejo6g0,36,35,0|1eq5l7z,36,35,0|1eq5l80,37,38,1|1f2e93z,37,38,1|1f2e940,36,35,0|1f8vnvz,36,35,0|1f8vnw0,37,38,1|1fl4brz,37,38,1|1fl4bs0,36,35,0|1frlqjz,36,35,0|1frlqk0,37,38,1|1g3uefz,37,38,1|1g3ueg0,36,35,0|1gabt7z,36,35,0|1gabt80,37,38,1|1gmkh3z,37,38,1|1gmkh40,36,35,0|1gt1vvz,36,35,0|1gt1vw0,37,38,1|1h5ajrz,37,38,1|1h5ajs0,36,35,0|1hc4x7z,36,35,0|1hc4x80,37,38,1|1hodl3z,37,38,1|1hodl40,36,35,0|1huuzvz,36,35,0|1huuzw0,37,38,1|1i73nrz,37,38,1|1i73ns0,36,35,0|1idl2jz,36,35,0|1idl2k0,37,38,1|1iptqfz,37,38,1|1iptqg0,36,35,0|1iwb57z,36,35,0|1iwb580,37,38,1|1j8jt3z,37,38,1|1j8jt40,36,35,0|1jf17vz,36,35,0|1jf17w0,37,38,1|1jr9vrz,37,38,1|1jr9vs0,36,35,0|1jy497z,36,35,0|1jy4980,37,38,1|1kacx3z,37,38,1|1kacx40,36,35,0|1kgubvz,36,35,0|1kgubw0,37,38,1|1kt2zrz,37,38,1|1kt2zs0,36,35,0|1kzkejz,36,35,0|1kzkek0,37,38,1|1lbt2fz,37,38,1|1lbt2g0,36,35,0|1liah7z,36,35,0|1liah80,37,38,1|1luj53z,37,38,1|1luj540,36,35,0|1m10jvz,36,35,0|1m10jw0,37,38,1|1md97rz,37,38,1|1md97s0,36,35,0|1mjqmjz,36,35,0|1mjqmk0,37,38,1|1mvzafz,37,38,1|1mvzag0,36,35,0|1n2tnvz,36,35,0|1n2tnw0,37,38,1|1nf2brz,37,38,1|1nf2bs0,36,35,0|1nljqjz,36,35,0|1nljqk0,37,38,1|1nxsefz,37,38,1|1nxseg0,36,35,0|1o49t7z,36,35,0|1o49t80,37,38,1|1ogih3z,37,38,1|1ogih40,36,35,0|1omzvvz,36,35,0|1omzvw0,37,38,1|1oz8jrz,37,38,1|1oz8js0,36,35,0|1p5pyjz,36,35,0|1p5pyk0,37,38,1|1phymfz,37,38,1|1phymg0,36,35,0|1poszvz,36,35,0|1poszw0,37,38,1|1q11nrz,37,38,1|1q11ns0,36,35,0|1q7j2jz,36,35,0|1q7j2k0,37,38,1|1qjrqfz,37,38,1|1qjrqg0,36,35,0|1qq957z,36,35,0|1qq9580,37,38,1|1r2ht3z,37,38,1|1r2ht40,36,35,0|1r8z7vz,36,35,0|1r8z7w0,37,38,1|1rl7vrz,37,38,1|1rl7vs0,36,35,0|1rrpajz,36,35,0|1rrpak0,37,38,1|1s3xyfz,37,38,1|1s3xyg0,36,35,0|1safd7z,36,35,0|1safd80,37,38,1|1smo13z,37,38,1|1smo140,36,35,0|1stiejz,36,35,0|1stiek0,37,38,1|1t5r2fz,37,38,1|1t5r2g0,36,35,0|1tc8h7z,36,35,0|1tc8h80,37,38,1|1toh53z,37,38,1|1toh540,36,35,0|1tuyjvz,36,35,0|1tuyjw0,37,38,1|1u777rz,37,38,1|1u777s0,36,35,0|1udomjz,36,35,0|1udomk0,37,38,1|1upxafz,37,38,1|1upxag0,36,35,0|1uwep7z,36,35,0|1uwep80,37,38,1|1v8nd3z,37,38,1|1v8nd40,36,35,0|1vf4rvz,36,35,0|1vf4rw0,37,38,1|1vrdfrz,37,38,1|1vrdfs0,36,35,0|NaN,36,35,0",
        "America/St_Barthelemy|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/St_Johns|,0,96,0|-18vs8wl,0,96,0|-18vs8wk,23,96,0|-ris3cl,23,96,0|-ris3ck,71,97,1|-rag64l,71,97,1|-rag64k,23,96,0|-qzp20l,23,96,0|-qzp20k,71,97,1|-qpm64l,71,97,1|-qpm64k,23,96,0|-qfsmcl,23,96,0|-qfsmck,71,97,1|-qapd4l,71,97,1|-qapd4k,23,96,0|-px4ecl,23,96,0|-px4eck,71,97,1|-pnrfsl,71,97,1|-pnrfsk,23,96,0|-peebol,23,96,0|-peebok,71,97,1|-p51d4l,71,97,1|-p51d4k,23,96,0|-ovbacl,23,96,0|-ovback,71,97,1|-ombagl,71,97,1|-ombagk,23,96,0|-ocl7ol,23,96,0|-ocl7ok,71,97,1|-o3l7sl,71,97,1|-o3l7sk,23,96,0|-ntv50l,23,96,0|-ntv50k,71,97,1|-nkv54l,71,97,1|-nkv54k,23,96,0|-nb52cl,23,96,0|-nb52ck,71,97,1|-n252gl,71,97,1|-n252gk,23,96,0|-msezol,23,96,0|-msezok,71,97,1|-mj214l,71,97,1|-mj214k,23,96,0|-m9ox0l,23,96,0|-m9ox0k,71,97,1|-m0bygl,71,97,1|-m0bygk,23,96,0|-lqlvol,23,96,0|-lqlvok,71,97,1|-lhlvsl,71,97,1|-lhlvsk,23,96,0|-l7vt0l,23,96,0|-l7vt0k,71,97,1|-kyvt4l,71,97,1|-kyvt4k,23,96,0|-kp5qcl,23,96,0|-kp5qck,71,97,1|-kg5qgl,71,97,1|-kg5qgk,23,96,0|-k6fnol,23,96,0|-k6fnok,71,97,1|-jxfnsl,71,97,1|-jxfnsk,23,96,0|-jnpl0l,23,96,0|-jnpl0k,71,97,1|-jecmgl,71,97,1|-jecmgk,23,96,0|-j4mjol,23,96,0|-j4mjok,71,97,1|-ivmjsl,71,97,1|-ivmjsk,23,96,0|-ilwh0l,23,96,0|-ilwh0k,71,97,1|-icwh4l,71,97,1|-icwh4k,23,96,0|-i52u8l,23,96,0|-i52u8k,23,65,0|-i36ee1,23,65,0|-i36ee0,71,98,1|-hu6ei1,71,98,1|-hu6ei0,23,65,0|-hk3aa1,23,65,0|-hk3aa0,71,98,1|-hcj521,71,98,1|-hcj520,23,65,0|-h1d7m1,23,65,0|-h1d7m0,71,98,1|-gtt2e1,71,98,1|-gtt2e0,23,65,0|-gin4y1,23,65,0|-gin4y0,71,98,1|-gb2zq1,71,98,1|-gb2zq0,23,65,0|-fzk3m1,23,65,0|-fzk3m0,71,98,1|-fscx21,71,98,1|-fscx20,23,65,0|-fgu0y1,23,65,0|-fgu0y0,71,98,1|-f99vq1,71,98,1|-f99vq0,23,65,0|-ey3ya1,23,65,0|-ey3ya0,71,98,1|-eqjt21,71,98,1|-eqjt20,23,65,0|-efdvm1,23,65,0|-efdvm0,24,98,1|-cq2tg1,24,98,1|-cq2tg0,25,98,1|-cnp7i1,25,98,1|-cnp7i0,23,65,0|-cc6be1,23,65,0|-cc6be0,71,98,1|-c4m661,71,98,1|-c4m660,23,65,0|-btg8q1,23,65,0|-btg8q0,71,98,1|-blw3i1,71,98,1|-blw3i0,23,65,0|-baq621,23,65,0|-baq620,71,98,1|-b360u1,71,98,1|-b360u0,23,65,0|-as03e1,23,65,0|-as03e0,71,98,1|-akfy61,71,98,1|-akfy60,23,65,0|-a8x221,23,65,0|-a8x220,71,98,1|-a1cwu1,71,98,1|-a1cwu0,23,65,0|-9qwwq1,23,65,0|-9qwwq0,71,98,1|-9izsu1,71,98,1|-9izsu0,23,65,0|-986u21,23,65,0|-986u20,71,98,1|-909q61,71,98,1|-909q60,23,65,0|-8pgre1,23,65,0|-8pgre0,71,98,1|-8hjni1,71,98,1|-8hjni0,23,65,0|-86qoq1,23,65,0|-86qoq0,71,98,1|-7ytku1,71,98,1|-7ytku0,23,65,0|-7o0m21,23,65,0|-7o0m20,71,98,1|-7g3i61,71,98,1|-7g3i60,23,65,0|-74xkq1,23,65,0|-74xkq0,71,98,1|-6x0gu1,71,98,1|-6x0gu0,23,65,0|-6m7i21,23,65,0|-6m7i20,71,98,1|-6eae61,71,98,1|-6eae60,23,65,0|-63hfe1,23,65,0|-63hfe0,71,98,1|-5vkbi1,71,98,1|-5vkbi0,23,65,0|-5krcq1,23,65,0|-5krcq0,71,98,1|-5cu8u1,71,98,1|-5cu8u0,23,65,0|-521a21,23,65,0|-521a20,71,98,1|-4sbcu1,71,98,1|-4sbcu0,23,65,0|-4iy8q1,23,65,0|-4iy8q0,71,98,1|-49la61,71,98,1|-49la60,23,65,0|-408621,23,65,0|-408620,71,98,1|-3qv7i1,71,98,1|-3qv7i0,23,65,0|-3hi3e1,23,65,0|-3hi3e0,71,98,1|-3854u1,71,98,1|-3854u0,23,65,0|-2ys0q1,23,65,0|-2ys0q0,71,98,1|-2pf261,71,98,1|-2pf260,23,65,0|-2g1y21,23,65,0|-2g1y20,71,98,1|-26c0u1,71,98,1|-26c0u0,23,65,0|-1xbve1,23,65,0|-1xbve0,71,98,1|-1nly61,71,98,1|-1nly60,23,65,0|-1e8u21,23,65,0|-1e8u20,71,98,1|-14vvi1,71,98,1|-14vvi0,23,65,0|-vire1,23,65,0|-vire0,71,98,1|-m5su1,71,98,1|-m5su0,23,65,0|-csoq1,23,65,0|-csoq0,71,98,1|-3fq61,71,98,1|-3fq60,23,65,0|5xdxz,23,65,0|5xdy0,71,98,1|fachz,71,98,1|faci0,23,65,0|onglz,23,65,0|ongm0,71,98,1|yddtz,71,98,1|yddu0,23,65,0|17qhxz,23,65,0|17qhy0,71,98,1|1h3ghz,71,98,1|1h3gi0,23,65,0|1qgklz,23,65,0|1qgkm0,71,98,1|1ztj5z,71,98,1|1ztj60,23,65,0|296n9z,23,65,0|296na0,71,98,1|2ijltz,71,98,1|2ijlu0,23,65,0|2rwpxz,23,65,0|2rwpy0,71,98,1|319ohz,71,98,1|319oi0,23,65,0|3amslz,23,65,0|3amsm0,71,98,1|3kcptz,71,98,1|3kcpu0,23,65,0|3tcv9z,23,65,0|3tcva0,71,98,1|432shz,71,98,1|432si0,23,65,0|4cfwlz,23,65,0|4cfwm0,71,98,1|4lsv5z,71,98,1|4lsv60,23,65,0|4v5z9z,23,65,0|4v5za0,71,98,1|54ixtz,71,98,1|54ixu0,23,65,0|5dw1xz,23,65,0|5dw1y0,71,98,1|5n90hz,71,98,1|5n90i0,23,65,0|5wm4lz,23,65,0|5wm4m0,71,98,1|65z35z,71,98,1|65z360,23,65,0|6fc79z,23,65,0|6fc7a0,71,98,1|6p24hz,71,98,1|6p24i0,23,65,0|6y29xz,23,65,0|6y29y0,71,98,1|77s75z,71,98,1|77s760,23,65,0|7h5b9z,23,65,0|7h5ba0,71,98,1|7qi9tz,71,98,1|7qi9u0,23,65,0|7zvdxz,23,65,0|7zvdy0,71,98,1|898chz,71,98,1|898ci0,23,65,0|8ilglz,23,65,0|8ilgm0,71,98,1|8ryf5z,71,98,1|8ryf60,23,65,0|908hrn,23,65,0|908hro,71,98,1|9aocbn,71,98,1|9aocbo,23,65,0|9iykfn,23,65,0|9iykfo,83,143,1|9travn,83,143,1|9travo,23,65,0|a1on3n,23,65,0|a1on3o,71,98,1|achgbn,71,98,1|achgbo,23,65,0|akeprn,23,65,0|akepro,71,98,1|av7izn,71,98,1|av7izo,23,65,0|b3hr3n,23,65,0|b3hr3o,71,98,1|bdxlnn,71,98,1|bdxlno,23,65,0|bm7trn,23,65,0|bm7tro,71,98,1|bwnobn,71,98,1|bwnobo,23,65,0|c4xwfn,23,65,0|c4xwfo,71,98,1|cfqpnn,71,98,1|cfqpno,23,65,0|cnnz3n,23,65,0|cnnz3o,71,98,1|cygsbn,71,98,1|cygsbo,23,65,0|d6e1rn,23,65,0|d6e1ro,71,98,1|dh6uzn,71,98,1|dh6uzo,23,65,0|dph33n,23,65,0|dph33o,71,98,1|dzwxnn,71,98,1|dzwxno,23,65,0|e875rn,23,65,0|e875ro,71,98,1|ein0bn,71,98,1|ein0bo,23,65,0|eqx8fn,23,65,0|eqx8fo,71,98,1|f1d2zn,71,98,1|f1d2zo,23,65,0|f9nb3n,23,65,0|f9nb3o,71,98,1|fkg4bn,71,98,1|fkg4bo,23,65,0|fsddrn,23,65,0|fsddro,71,98,1|g366zn,71,98,1|g366zo,23,65,0|gb3gfn,23,65,0|gb3gfo,71,98,1|glw9nn,71,98,1|glw9no,23,65,0|gu6hrn,23,65,0|gu6hro,71,98,1|h4mcbn,71,98,1|h4mcbo,23,65,0|hcwkfn,23,65,0|hcwkfo,71,98,1|hncezn,71,98,1|hncezo,23,65,0|hvmn3n,23,65,0|hvmn3o,71,98,1|i6fgbn,71,98,1|i6fgbo,23,65,0|iecprn,23,65,0|iecpro,71,98,1|ip5izn,71,98,1|ip5izo,23,65,0|ix2sfn,23,65,0|ix2sfo,71,98,1|j7vlnn,71,98,1|j7vlno,23,65,0|jepz3n,23,65,0|jepz3o,71,98,1|jqymzn,71,98,1|jqymzo,23,65,0|jxg1rn,23,65,0|jxg1ro,71,98,1|k9opnn,71,98,1|k9opno,23,65,0|kg64fn,23,65,0|kg64fo,71,98,1|ksesbn,71,98,1|ksesbo,23,65,0|kz95rn,23,65,0|kz95ro,71,98,1|lbhtnn,71,98,1|lbhtno,23,65,0|lhz8fn,23,65,0|lhz8fo,71,98,1|lu81tz,71,98,1|lu81u0,23,65,0|m0pglz,23,65,0|m0pgm0,71,98,1|mcy4hz,71,98,1|mcy4i0,23,65,0|mjfj9z,23,65,0|mjfja0,71,98,1|mvo75z,71,98,1|mvo760,23,65,0|n25lxz,23,65,0|n25ly0,71,98,1|nee9tz,71,98,1|nee9u0,23,65,0|nkvolz,23,65,0|nkvom0,71,98,1|nx4chz,71,98,1|nx4ci0,23,65,0|o3ypxz,23,65,0|o3ypy0,71,98,1|og7dtz,71,98,1|og7du0,23,65,0|omoslz,23,65,0|omosm0,71,98,1|oyxghz,71,98,1|oyxgi0,23,65,0|p5ev9z,23,65,0|p5eva0,71,98,1|phnj5z,71,98,1|phnj60,23,65,0|po4xxz,23,65,0|po4xy0,71,98,1|q0dltz,71,98,1|q0dlu0,23,65,0|q6v0lz,23,65,0|q6v0m0,71,98,1|qj3ohz,71,98,1|qj3oi0,23,65,0|qpy1xz,23,65,0|qpy1y0,71,98,1|r26ptz,71,98,1|r26pu0,23,65,0|r8o4lz,23,65,0|r8o4m0,71,98,1|rkwshz,71,98,1|rkwsi0,23,65,0|rre79z,23,65,0|rre7a0,71,98,1|s3mv5z,71,98,1|s3mv60,23,65,0|sa49xz,23,65,0|sa49y0,71,98,1|smcxtz,71,98,1|smcxu0,23,65,0|ssuclz,23,65,0|ssucm0,71,98,1|t530hz,71,98,1|t530i0,23,65,0|tbkf9z,23,65,0|tbkfa0,71,98,1|tnt35z,71,98,1|tnt360,23,65,0|tunglz,23,65,0|tungm0,71,98,1|u6w4hz,71,98,1|u6w4i0,23,65,0|uddj9z,23,65,0|uddja0,71,98,1|upm75z,71,98,1|upm760,23,65,0|uw3lxz,23,65,0|uw3ly0,71,98,1|v8c9tz,71,98,1|v8c9u0,23,65,0|vetolz,23,65,0|vetom0,71,98,1|vr2chz,71,98,1|vr2ci0,23,65,0|vxjr9z,23,65,0|vxjra0,71,98,1|w9sf5z,71,98,1|w9sf60,23,65,0|wgmslz,23,65,0|wgmsm0,71,98,1|wsvghz,71,98,1|wsvgi0,23,65,0|wzcv9z,23,65,0|wzcva0,71,98,1|xblj5z,71,98,1|xblj60,23,65,0|xi2xxz,23,65,0|xi2xy0,71,98,1|xubltz,71,98,1|xublu0,23,65,0|y0t0lz,23,65,0|y0t0m0,71,98,1|yd1ohz,71,98,1|yd1oi0,23,65,0|yjj39z,23,65,0|yjj3a0,71,98,1|yvrr5z,71,98,1|yvrr60,23,65,0|z295xz,23,65,0|z295y0,71,98,1|zehttz,71,98,1|zehtu0,23,65,0|zlc79z,23,65,0|zlc7a0,71,98,1|zxkv5z,71,98,1|zxkv60,23,65,0|10429xz,23,65,0|10429y0,71,98,1|10gaxtz,71,98,1|10gaxu0,23,65,0|10msclz,23,65,0|10mscm0,71,98,1|10z10hz,71,98,1|10z10i0,23,65,0|115if9z,23,65,0|115ifa0,71,98,1|11hr35z,71,98,1|11hr360,23,65,0|11o8hxz,23,65,0|11o8hy0,71,98,1|120h5tz,71,98,1|120h5u0,23,65,0|126yklz,23,65,0|126ykm0,71,98,1|12j78hz,71,98,1|12j78i0,23,65,0|12q1lxz,23,65,0|12q1ly0,71,98,1|132a9tz,71,98,1|132a9u0,23,65,0|138rolz,23,65,0|138rom0,71,98,1|13l0chz,71,98,1|13l0ci0,23,65,0|13rhr9z,23,65,0|13rhra0,71,98,1|143qf5z,71,98,1|143qf60,23,65,0|14a7txz,23,65,0|14a7ty0,71,98,1|14mghtz,71,98,1|14mghu0,23,65,0|14sxwlz,23,65,0|14sxwm0,71,98,1|1556khz,71,98,1|1556ki0,23,65,0|15c0xxz,23,65,0|15c0xy0,71,98,1|15o9ltz,71,98,1|15o9lu0,23,65,0|15ur0lz,23,65,0|15ur0m0,71,98,1|166zohz,71,98,1|166zoi0,23,65,0|16dh39z,23,65,0|16dh3a0,71,98,1|16ppr5z,71,98,1|16ppr60,23,65,0|16w75xz,23,65,0|16w75y0,71,98,1|178fttz,71,98,1|178ftu0,23,65,0|17ex8lz,23,65,0|17ex8m0,71,98,1|17r5whz,71,98,1|17r5wi0,23,65,0|17xnb9z,23,65,0|17xnba0,71,98,1|189vz5z,71,98,1|189vz60,23,65,0|18gqclz,23,65,0|18gqcm0,71,98,1|18sz0hz,71,98,1|18sz0i0,23,65,0|18zgf9z,23,65,0|18zgfa0,71,98,1|19bp35z,71,98,1|19bp360,23,65,0|19i6hxz,23,65,0|19i6hy0,71,98,1|19uf5tz,71,98,1|19uf5u0,23,65,0|1a0wklz,23,65,0|1a0wkm0,71,98,1|1ad58hz,71,98,1|1ad58i0,23,65,0|1ajmn9z,23,65,0|1ajmna0,71,98,1|1avvb5z,71,98,1|1avvb60,23,65,0|1b2polz,23,65,0|1b2pom0,71,98,1|1beychz,71,98,1|1beyci0,23,65,0|1blfr9z,23,65,0|1blfra0,71,98,1|1bxof5z,71,98,1|1bxof60,23,65,0|1c45txz,23,65,0|1c45ty0,71,98,1|1cgehtz,71,98,1|1cgehu0,23,65,0|1cmvwlz,23,65,0|1cmvwm0,71,98,1|1cz4khz,71,98,1|1cz4ki0,23,65,0|1d5lz9z,23,65,0|1d5lza0,71,98,1|1dhun5z,71,98,1|1dhun60,23,65,0|1doc1xz,23,65,0|1doc1y0,71,98,1|1e0kptz,71,98,1|1e0kpu0,23,65,0|1e7f39z,23,65,0|1e7f3a0,71,98,1|1ejnr5z,71,98,1|1ejnr60,23,65,0|1eq55xz,23,65,0|1eq55y0,71,98,1|1f2dttz,71,98,1|1f2dtu0,23,65,0|1f8v8lz,23,65,0|1f8v8m0,71,98,1|1fl3whz,71,98,1|1fl3wi0,23,65,0|1frlb9z,23,65,0|1frlba0,71,98,1|1g3tz5z,71,98,1|1g3tz60,23,65,0|1gabdxz,23,65,0|1gabdy0,71,98,1|1gmk1tz,71,98,1|1gmk1u0,23,65,0|1gt1glz,23,65,0|1gt1gm0,71,98,1|1h5a4hz,71,98,1|1h5a4i0,23,65,0|1hc4hxz,23,65,0|1hc4hy0,71,98,1|1hod5tz,71,98,1|1hod5u0,23,65,0|1huuklz,23,65,0|1huukm0,71,98,1|1i738hz,71,98,1|1i738i0,23,65,0|1idkn9z,23,65,0|1idkna0,71,98,1|1iptb5z,71,98,1|1iptb60,23,65,0|1iwapxz,23,65,0|1iwapy0,71,98,1|1j8jdtz,71,98,1|1j8jdu0,23,65,0|1jf0slz,23,65,0|1jf0sm0,71,98,1|1jr9ghz,71,98,1|1jr9gi0,23,65,0|1jy3txz,23,65,0|1jy3ty0,71,98,1|1kachtz,71,98,1|1kachu0,23,65,0|1kgtwlz,23,65,0|1kgtwm0,71,98,1|1kt2khz,71,98,1|1kt2ki0,23,65,0|1kzjz9z,23,65,0|1kzjza0,71,98,1|1lbsn5z,71,98,1|1lbsn60,23,65,0|1lia1xz,23,65,0|1lia1y0,71,98,1|1luiptz,71,98,1|1luipu0,23,65,0|1m104lz,23,65,0|1m104m0,71,98,1|1md8shz,71,98,1|1md8si0,23,65,0|1mjq79z,23,65,0|1mjq7a0,71,98,1|1mvyv5z,71,98,1|1mvyv60,23,65,0|1n2t8lz,23,65,0|1n2t8m0,71,98,1|1nf1whz,71,98,1|1nf1wi0,23,65,0|1nljb9z,23,65,0|1nljba0,71,98,1|1nxrz5z,71,98,1|1nxrz60,23,65,0|1o49dxz,23,65,0|1o49dy0,71,98,1|1ogi1tz,71,98,1|1ogi1u0,23,65,0|1omzglz,23,65,0|1omzgm0,71,98,1|1oz84hz,71,98,1|1oz84i0,23,65,0|1p5pj9z,23,65,0|1p5pja0,71,98,1|1phy75z,71,98,1|1phy760,23,65,0|1posklz,23,65,0|1poskm0,71,98,1|1q118hz,71,98,1|1q118i0,23,65,0|1q7in9z,23,65,0|1q7ina0,71,98,1|1qjrb5z,71,98,1|1qjrb60,23,65,0|1qq8pxz,23,65,0|1qq8py0,71,98,1|1r2hdtz,71,98,1|1r2hdu0,23,65,0|1r8yslz,23,65,0|1r8ysm0,71,98,1|1rl7ghz,71,98,1|1rl7gi0,23,65,0|1rrov9z,23,65,0|1rrova0,71,98,1|1s3xj5z,71,98,1|1s3xj60,23,65,0|1saexxz,23,65,0|1saexy0,71,98,1|1smnltz,71,98,1|1smnlu0,23,65,0|1sthz9z,23,65,0|1sthza0,71,98,1|1t5qn5z,71,98,1|1t5qn60,23,65,0|1tc81xz,23,65,0|1tc81y0,71,98,1|1togptz,71,98,1|1togpu0,23,65,0|1tuy4lz,23,65,0|1tuy4m0,71,98,1|1u76shz,71,98,1|1u76si0,23,65,0|1udo79z,23,65,0|1udo7a0,71,98,1|1upwv5z,71,98,1|1upwv60,23,65,0|1uwe9xz,23,65,0|1uwe9y0,71,98,1|1v8mxtz,71,98,1|1v8mxu0,23,65,0|1vf4clz,23,65,0|1vf4cm0,71,98,1|1vrd0hz,71,98,1|1vrd0i0,23,65,0|NaN,23,65,0",
        "America/St_Kitts|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/St_Lucia|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/St_Thomas|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/St_Vincent|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Swift_Current|,0,173,0|-xkq9d5,0,173,0|-xkq9d4,44,62,0|-qzosc1,44,62,0|-qzosc0,46,63,1|-qplwg1,46,63,1|-qplwg0,44,62,0|-ek1z01,44,62,0|-ek1z00,57,63,1|-cq2tg1,57,63,1|-cq2tg0,58,63,1|-cnoxs1,58,63,1|-cnoxs0,44,62,0|-ccvz01,44,62,0|-ccvz00,46,63,1|-c48xs1,46,63,1|-c48xs0,44,62,0|-bu5wc1,44,62,0|-bu5wc0,46,63,1|-bm8sg1,46,63,1|-bm8sg0,44,62,0|-bbfto1,44,62,0|-bbfto0,46,63,1|-b3ips1,46,63,1|-b3ips0,44,62,0|-aspr01,44,62,0|-aspr00,46,63,1|-aksn41,46,63,1|-aksn40,44,62,0|-6m78c1,44,62,0|-6m78c0,46,63,1|-6cu9s1,46,63,1|-6cu9s0,44,62,0|-5kr301,44,62,0|-5kr300,46,63,1|-5be4g1,46,63,1|-5be4g0,44,62,0|-5210c1,44,62,0|-5210c0,46,63,1|-4u3wg1,46,63,1|-4u3wg0,44,62,0|-4ixz01,44,62,0|-4ixz00,46,63,1|-4bdts1,46,63,1|-4bdts0,44,62,0|17qrnz,44,62,0|17qro0,45,63,0|NaN,45,63,0",
        "America/Tegucigalpa|,0,174,0|-pfzh6l,0,174,0|-pfzh6k,45,63,0|91ojbz,45,63,0|91ojc0,47,59,1|998ojz,47,59,1|998ok0,45,63,0|9kelzz,45,63,0|9kem00,47,59,1|9ryr7z,47,59,1|9ryr80,45,63,0|iyvsnz,45,63,0|iyvso0,47,59,1|j3m37z,47,59,1|j3m380,45,63,0|NaN,45,63,0",
        "America/Thule|,0,175,0|-rvuj9h,0,175,0|-rvuj9g,31,40,0|b34zbz,31,40,0|b34zc0,48,41,1|bchxvz,48,41,1|bchxw0,31,40,0|blv1zz,31,40,0|blv200,48,41,1|bv80jz,48,41,1|bv80k0,31,40,0|c4y3bz,31,40,0|c4y3c0,48,41,1|cfqwjz,48,41,1|cfqwk0,31,40,0|cno5zz,31,40,0|cno600,48,41,1|cygz7z,48,41,1|cygz80,31,40,0|d6e8nz,31,40,0|d6e8o0,48,41,1|dh71vz,48,41,1|dh71w0,31,40,0|dph9zz,31,40,0|dpha00,48,41,1|dzx4jz,48,41,1|dzx4k0,31,40,0|e87cnz,31,40,0|e87co0,48,41,1|ein77z,48,41,1|ein780,31,40,0|eqxfbz,31,40,0|eqxfc0,48,41,1|f1d9vz,48,41,1|f1d9w0,31,40,0|f9nhzz,31,40,0|f9ni00,48,41,1|fkgb7z,48,41,1|fkgb80,31,40,0|fsdknz,31,40,0|fsdko0,48,41,1|g36dvz,48,41,1|g36dw0,31,40,0|gb3nbz,31,40,0|gb3nc0,48,41,1|glwgjz,48,41,1|glwgk0,31,40,0|gu6onz,31,40,0|gu6oo0,48,41,1|h4mj7z,48,41,1|h4mj80,31,40,0|hcwrbz,31,40,0|hcwrc0,48,41,1|hnclvz,48,41,1|hnclw0,31,40,0|hvmtzz,31,40,0|hvmu00,48,41,1|i6fn7z,48,41,1|i6fn80,31,40,0|iecwnz,31,40,0|iecwo0,48,41,1|ip5pvz,48,41,1|ip5pw0,31,40,0|ix2zbz,31,40,0|ix2zc0,48,41,1|j7vsjz,48,41,1|j7vsk0,31,40,0|jeq5zz,31,40,0|jeq600,48,41,1|jqytvz,48,41,1|jqytw0,31,40,0|jxg8nz,31,40,0|jxg8o0,48,41,1|k9owjz,48,41,1|k9owk0,31,40,0|kg6bbz,31,40,0|kg6bc0,48,41,1|ksez7z,48,41,1|ksez80,31,40,0|kz9cnz,31,40,0|kz9co0,48,41,1|lbi0jz,48,41,1|lbi0k0,31,40,0|lhzfbz,31,40,0|lhzfc0,48,41,1|lu837z,48,41,1|lu8380,31,40,0|m0phzz,31,40,0|m0pi00,48,41,1|mcy5vz,48,41,1|mcy5w0,31,40,0|mjfknz,31,40,0|mjfko0,48,41,1|mvo8jz,48,41,1|mvo8k0,31,40,0|n25nbz,31,40,0|n25nc0,48,41,1|neeb7z,48,41,1|neeb80,31,40,0|nkvpzz,31,40,0|nkvq00,48,41,1|nx4dvz,48,41,1|nx4dw0,31,40,0|o3yrbz,31,40,0|o3yrc0,48,41,1|og7f7z,48,41,1|og7f80,31,40,0|omotzz,31,40,0|omou00,48,41,1|oyxhvz,48,41,1|oyxhw0,31,40,0|p5ewnz,31,40,0|p5ewo0,48,41,1|phnkjz,48,41,1|phnkk0,31,40,0|po4zbz,31,40,0|po4zc0,48,41,1|q0dn7z,48,41,1|q0dn80,31,40,0|q6v1zz,31,40,0|q6v200,48,41,1|qj3pvz,48,41,1|qj3pw0,31,40,0|qpy3bz,31,40,0|qpy3c0,48,41,1|r26r7z,48,41,1|r26r80,31,40,0|r8o5zz,31,40,0|r8o600,48,41,1|rkwtvz,48,41,1|rkwtw0,31,40,0|rre8nz,31,40,0|rre8o0,48,41,1|s3mwjz,48,41,1|s3mwk0,31,40,0|sa4bbz,31,40,0|sa4bc0,48,41,1|smcz7z,48,41,1|smcz80,31,40,0|ssudzz,31,40,0|ssue00,48,41,1|t531vz,48,41,1|t531w0,31,40,0|tbkgnz,31,40,0|tbkgo0,48,41,1|tnt4jz,48,41,1|tnt4k0,31,40,0|tunhzz,31,40,0|tuni00,48,41,1|u6w5vz,48,41,1|u6w5w0,31,40,0|uddknz,31,40,0|uddko0,48,41,1|upm8jz,48,41,1|upm8k0,31,40,0|uw3nbz,31,40,0|uw3nc0,48,41,1|v8cb7z,48,41,1|v8cb80,31,40,0|vetpzz,31,40,0|vetq00,48,41,1|vr2dvz,48,41,1|vr2dw0,31,40,0|vxjsnz,31,40,0|vxjso0,48,41,1|w9sgjz,48,41,1|w9sgk0,31,40,0|wgmtzz,31,40,0|wgmu00,48,41,1|wsvhvz,48,41,1|wsvhw0,31,40,0|wzcwnz,31,40,0|wzcwo0,48,41,1|xblkjz,48,41,1|xblkk0,31,40,0|xi2zbz,31,40,0|xi2zc0,48,41,1|xubn7z,48,41,1|xubn80,31,40,0|y0t1zz,31,40,0|y0t200,48,41,1|yd1pvz,48,41,1|yd1pw0,31,40,0|yjj4nz,31,40,0|yjj4o0,48,41,1|yvrsjz,48,41,1|yvrsk0,31,40,0|z297bz,31,40,0|z297c0,48,41,1|zehv7z,48,41,1|zehv80,31,40,0|zlc8nz,31,40,0|zlc8o0,48,41,1|zxkwjz,48,41,1|zxkwk0,31,40,0|1042bbz,31,40,0|1042bc0,48,41,1|10gaz7z,48,41,1|10gaz80,31,40,0|10msdzz,31,40,0|10mse00,48,41,1|10z11vz,48,41,1|10z11w0,31,40,0|115ignz,31,40,0|115igo0,48,41,1|11hr4jz,48,41,1|11hr4k0,31,40,0|11o8jbz,31,40,0|11o8jc0,48,41,1|120h77z,48,41,1|120h780,31,40,0|126ylzz,31,40,0|126ym00,48,41,1|12j79vz,48,41,1|12j79w0,31,40,0|12q1nbz,31,40,0|12q1nc0,48,41,1|132ab7z,48,41,1|132ab80,31,40,0|138rpzz,31,40,0|138rq00,48,41,1|13l0dvz,48,41,1|13l0dw0,31,40,0|13rhsnz,31,40,0|13rhso0,48,41,1|143qgjz,48,41,1|143qgk0,31,40,0|14a7vbz,31,40,0|14a7vc0,48,41,1|14mgj7z,48,41,1|14mgj80,31,40,0|14sxxzz,31,40,0|14sxy00,48,41,1|1556lvz,48,41,1|1556lw0,31,40,0|15c0zbz,31,40,0|15c0zc0,48,41,1|15o9n7z,48,41,1|15o9n80,31,40,0|15ur1zz,31,40,0|15ur200,48,41,1|166zpvz,48,41,1|166zpw0,31,40,0|16dh4nz,31,40,0|16dh4o0,48,41,1|16ppsjz,48,41,1|16ppsk0,31,40,0|16w77bz,31,40,0|16w77c0,48,41,1|178fv7z,48,41,1|178fv80,31,40,0|17ex9zz,31,40,0|17exa00,48,41,1|17r5xvz,48,41,1|17r5xw0,31,40,0|17xncnz,31,40,0|17xnco0,48,41,1|189w0jz,48,41,1|189w0k0,31,40,0|18gqdzz,31,40,0|18gqe00,48,41,1|18sz1vz,48,41,1|18sz1w0,31,40,0|18zggnz,31,40,0|18zggo0,48,41,1|19bp4jz,48,41,1|19bp4k0,31,40,0|19i6jbz,31,40,0|19i6jc0,48,41,1|19uf77z,48,41,1|19uf780,31,40,0|1a0wlzz,31,40,0|1a0wm00,48,41,1|1ad59vz,48,41,1|1ad59w0,31,40,0|1ajmonz,31,40,0|1ajmoo0,48,41,1|1avvcjz,48,41,1|1avvck0,31,40,0|1b2ppzz,31,40,0|1b2pq00,48,41,1|1beydvz,48,41,1|1beydw0,31,40,0|1blfsnz,31,40,0|1blfso0,48,41,1|1bxogjz,48,41,1|1bxogk0,31,40,0|1c45vbz,31,40,0|1c45vc0,48,41,1|1cgej7z,48,41,1|1cgej80,31,40,0|1cmvxzz,31,40,0|1cmvy00,48,41,1|1cz4lvz,48,41,1|1cz4lw0,31,40,0|1d5m0nz,31,40,0|1d5m0o0,48,41,1|1dhuojz,48,41,1|1dhuok0,31,40,0|1doc3bz,31,40,0|1doc3c0,48,41,1|1e0kr7z,48,41,1|1e0kr80,31,40,0|1e7f4nz,31,40,0|1e7f4o0,48,41,1|1ejnsjz,48,41,1|1ejnsk0,31,40,0|1eq57bz,31,40,0|1eq57c0,48,41,1|1f2dv7z,48,41,1|1f2dv80,31,40,0|1f8v9zz,31,40,0|1f8va00,48,41,1|1fl3xvz,48,41,1|1fl3xw0,31,40,0|1frlcnz,31,40,0|1frlco0,48,41,1|1g3u0jz,48,41,1|1g3u0k0,31,40,0|1gabfbz,31,40,0|1gabfc0,48,41,1|1gmk37z,48,41,1|1gmk380,31,40,0|1gt1hzz,31,40,0|1gt1i00,48,41,1|1h5a5vz,48,41,1|1h5a5w0,31,40,0|1hc4jbz,31,40,0|1hc4jc0,48,41,1|1hod77z,48,41,1|1hod780,31,40,0|1huulzz,31,40,0|1huum00,48,41,1|1i739vz,48,41,1|1i739w0,31,40,0|1idkonz,31,40,0|1idkoo0,48,41,1|1iptcjz,48,41,1|1iptck0,31,40,0|1iwarbz,31,40,0|1iwarc0,48,41,1|1j8jf7z,48,41,1|1j8jf80,31,40,0|1jf0tzz,31,40,0|1jf0u00,48,41,1|1jr9hvz,48,41,1|1jr9hw0,31,40,0|1jy3vbz,31,40,0|1jy3vc0,48,41,1|1kacj7z,48,41,1|1kacj80,31,40,0|1kgtxzz,31,40,0|1kgty00,48,41,1|1kt2lvz,48,41,1|1kt2lw0,31,40,0|1kzk0nz,31,40,0|1kzk0o0,48,41,1|1lbsojz,48,41,1|1lbsok0,31,40,0|1lia3bz,31,40,0|1lia3c0,48,41,1|1luir7z,48,41,1|1luir80,31,40,0|1m105zz,31,40,0|1m10600,48,41,1|1md8tvz,48,41,1|1md8tw0,31,40,0|1mjq8nz,31,40,0|1mjq8o0,48,41,1|1mvywjz,48,41,1|1mvywk0,31,40,0|1n2t9zz,31,40,0|1n2ta00,48,41,1|1nf1xvz,48,41,1|1nf1xw0,31,40,0|1nljcnz,31,40,0|1nljco0,48,41,1|1nxs0jz,48,41,1|1nxs0k0,31,40,0|1o49fbz,31,40,0|1o49fc0,48,41,1|1ogi37z,48,41,1|1ogi380,31,40,0|1omzhzz,31,40,0|1omzi00,48,41,1|1oz85vz,48,41,1|1oz85w0,31,40,0|1p5pknz,31,40,0|1p5pko0,48,41,1|1phy8jz,48,41,1|1phy8k0,31,40,0|1poslzz,31,40,0|1posm00,48,41,1|1q119vz,48,41,1|1q119w0,31,40,0|1q7ionz,31,40,0|1q7ioo0,48,41,1|1qjrcjz,48,41,1|1qjrck0,31,40,0|1qq8rbz,31,40,0|1qq8rc0,48,41,1|1r2hf7z,48,41,1|1r2hf80,31,40,0|1r8ytzz,31,40,0|1r8yu00,48,41,1|1rl7hvz,48,41,1|1rl7hw0,31,40,0|1rrownz,31,40,0|1rrowo0,48,41,1|1s3xkjz,48,41,1|1s3xkk0,31,40,0|1saezbz,31,40,0|1saezc0,48,41,1|1smnn7z,48,41,1|1smnn80,31,40,0|1sti0nz,31,40,0|1sti0o0,48,41,1|1t5qojz,48,41,1|1t5qok0,31,40,0|1tc83bz,31,40,0|1tc83c0,48,41,1|1togr7z,48,41,1|1togr80,31,40,0|1tuy5zz,31,40,0|1tuy600,48,41,1|1u76tvz,48,41,1|1u76tw0,31,40,0|1udo8nz,31,40,0|1udo8o0,48,41,1|1upwwjz,48,41,1|1upwwk0,31,40,0|1uwebbz,31,40,0|1uwebc0,48,41,1|1v8mz7z,48,41,1|1v8mz80,31,40,0|1vf4dzz,31,40,0|1vf4e00,48,41,1|1vrd1vz,48,41,1|1vrd1w0,31,40,0|NaN,31,40,0",
        "America/Thunder_Bay|,0,144,0|-1353dat,0,144,0|-1353das,43,59,0|-qzoxw1,43,59,0|-qzoxw0,60,40,1|-qpm201,60,40,1|-qpm200,43,59,0|-qhn4u1,43,59,0|-qhn4u0,60,40,1|-q6w4w1,60,40,1|-q6w4w0,43,59,0|-px5wk1,43,59,0|-px5wk0,60,40,1|-pplww1,60,40,1|-pplww0,43,59,0|-pdpwk1,43,59,0|-pdpwk0,60,40,1|-p7e7c1,60,40,1|-p7e7c0,43,59,0|-ouztw1,43,59,0|-ouztw0,60,40,1|-ooiko1,60,40,1|-ooiko0,43,59,0|-oc9r81,43,59,0|-oc9r80,60,40,1|-o5si01,60,40,1|-o5si00,43,59,0|-ntwn81,43,59,0|-ntwn80,60,40,1|-nmpgo1,60,40,1|-nmpgo0,43,59,0|-nb6kk1,43,59,0|-nb6kk0,60,40,1|-n3ze01,60,40,1|-n3ze00,43,59,0|-msghw1,43,59,0|-msghw0,60,40,1|-ml9bc1,60,40,1|-ml9bc0,43,59,0|-m9qf81,43,59,0|-m9qf80,60,40,1|-m26a01,60,40,1|-m26a00,43,59,0|-lr0ck1,43,59,0|-lr0ck0,60,40,1|-lj38o1,60,40,1|-lj38o0,43,59,0|-l8a9w1,43,59,0|-l8a9w0,60,40,1|-l0d601,60,40,1|-l0d600,43,59,0|-kpk781,43,59,0|-kpk780,60,40,1|-khn3c1,60,40,1|-khn3c0,43,59,0|-k6u4k1,43,59,0|-k6u4k0,60,40,1|-jyx0o1,60,40,1|-jyx0o0,43,59,0|-jnr381,43,59,0|-jnr380,60,40,1|-jg6y01,60,40,1|-jg6y00,43,59,0|-j510k1,43,59,0|-j510k0,60,40,1|-ix3wo1,60,40,1|-ix3wo0,43,59,0|-imaxw1,43,59,0|-imaxw0,60,40,1|-iedu01,60,40,1|-iedu00,43,59,0|-i3kv81,43,59,0|-i3kv80,60,40,1|-hvnrc1,60,40,1|-hvnrc0,43,59,0|-hkusk1,43,59,0|-hkusk0,60,40,1|-hcxoo1,60,40,1|-hcxoo0,43,59,0|-h24pw1,43,59,0|-h24pw0,60,40,1|-gu7m01,60,40,1|-gu7m00,43,59,0|-gjen81,43,59,0|-gjen80,60,40,1|-gbhjc1,60,40,1|-gbhjc0,43,59,0|-g0blw1,43,59,0|-g0blw0,60,40,1|-fsrgo1,60,40,1|-fsrgo0,43,59,0|-fhlj81,43,59,0|-fhlj80,60,40,1|-ek24k1,60,40,1|-ek24k0,69,40,1|-cq2tg1,69,40,1|-cq2tg0,70,40,1|-cnp3c1,70,40,1|-cnp3c0,43,59,0|-ccw4k1,43,59,0|-ccw4k0,60,40,1|-c4z0o1,60,40,1|-c4z0o0,43,59,0|-bu61w1,43,59,0|-bu61w0,60,40,1|-bm8y01,60,40,1|-bm8y00,43,59,0|-bbfz81,43,59,0|-bbfz80,60,40,1|-b3ivc1,60,40,1|-b3ivc0,43,59,0|-aspwk1,43,59,0|-aspwk0,60,40,1|-ahk4o1,60,40,1|-ahk4o0,43,59,0|-a9mv81,43,59,0|-a9mv80,60,40,1|-9yu201,60,40,1|-9yu200,43,59,0|-9qwsk1,43,59,0|-9qwsk0,60,40,1|-9izoo1,60,40,1|-9izoo0,43,59,0|-986pw1,43,59,0|-986pw0,60,40,1|-909m01,60,40,1|-909m00,43,59,0|-8pgn81,43,59,0|-8pgn80,60,40,1|-8hjjc1,60,40,1|-8hjjc0,43,59,0|-86qkk1,43,59,0|-86qkk0,60,40,1|-7ytgo1,60,40,1|-7ytgo0,43,59,0|-7o0hw1,43,59,0|-7o0hw0,60,40,1|-7g3e01,60,40,1|-7g3e00,43,59,0|-74xgk1,43,59,0|-74xgk0,60,40,1|-6x0co1,60,40,1|-6x0co0,43,59,0|-6m7dw1,43,59,0|-6m7dw0,60,40,1|-6cufc1,60,40,1|-6cufc0,43,59,0|-63hb81,43,59,0|-63hb80,60,40,1|-5u4co1,60,40,1|-5u4co0,43,59,0|-5kr8k1,43,59,0|-5kr8k0,60,40,1|-5bea01,60,40,1|-5bea00,43,59,0|-5215w1,43,59,0|-5215w0,60,40,1|-4sb8o1,60,40,1|-4sb8o0,43,59,0|-4iy4k1,43,59,0|-4iy4k0,60,40,1|-49l601,60,40,1|-49l600,43,59,0|-4081w1,43,59,0|-4081w0,60,40,1|-3qv3c1,60,40,1|-3qv3c0,43,59,0|-3hhz81,43,59,0|-3hhz80,60,40,1|-3850o1,60,40,1|-3850o0,43,59,0|-2yrwk1,43,59,0|-2yrwk0,60,40,1|-2pey01,60,40,1|-2pey00,43,59,0|-2g1tw1,43,59,0|-2g1tw0,60,40,1|-26bwo1,60,40,1|-26bwo0,43,59,0|-1xbr81,43,59,0|-1xbr80,60,40,1|-1nlu01,60,40,1|-1nlu00,43,59,0|-1e8pw1,43,59,0|-1e8pw0,60,40,1|-14vrc1,60,40,1|-14vrc0,43,59,0|-vin81,43,59,0|-vin80,60,40,1|-m5oo1,60,40,1|-m5oo0,43,59,0|-cskk1,43,59,0|-cskk0,60,40,1|-3fm01,60,40,1|-3fm00,43,59,0|5xi3z,43,59,0|5xi40,60,40,1|fagnz,60,40,1|fago0,43,59,0|onkrz,43,59,0|onks0,60,40,1|ydhzz,60,40,1|ydi00,43,59,0|17qm3z,43,59,0|17qm40,60,40,1|1h3knz,60,40,1|1h3ko0,43,59,0|1qgorz,43,59,0|1qgos0,60,40,1|1ztnbz,60,40,1|1ztnc0,43,59,0|296rfz,43,59,0|296rg0,60,40,1|2ijpzz,60,40,1|2ijq00,43,59,0|2rwu3z,43,59,0|2rwu40,60,40,1|319snz,60,40,1|319so0,43,59,0|3amwrz,43,59,0|3amws0,60,40,1|3kctzz,60,40,1|3kcu00,43,59,0|3tczfz,43,59,0|3tczg0,60,40,1|432wnz,60,40,1|432wo0,43,59,0|4cg0rz,43,59,0|4cg0s0,60,40,1|4lszbz,60,40,1|4lszc0,43,59,0|4v63fz,43,59,0|4v63g0,60,40,1|54j1zz,60,40,1|54j200,43,59,0|5dw63z,43,59,0|5dw640,60,40,1|5n94nz,60,40,1|5n94o0,43,59,0|5wm8rz,43,59,0|5wm8s0,60,40,1|65z7bz,60,40,1|65z7c0,43,59,0|6fcbfz,43,59,0|6fcbg0,60,40,1|6p28nz,60,40,1|6p28o0,43,59,0|6y2e3z,43,59,0|6y2e40,60,40,1|77sbbz,60,40,1|77sbc0,43,59,0|7h5ffz,43,59,0|7h5fg0,60,40,1|7qidzz,60,40,1|7qie00,43,59,0|7zvi3z,43,59,0|7zvi40,60,40,1|898gnz,60,40,1|898go0,43,59,0|8ilkrz,43,59,0|8ilks0,60,40,1|8ryjbz,60,40,1|8ryjc0,43,59,0|908rfz,43,59,0|908rg0,60,40,1|9aolzz,60,40,1|9aom00,43,59,0|9iyu3z,43,59,0|9iyu40,60,40,1|9trnbz,60,40,1|9trnc0,43,59,0|a1owrz,43,59,0|a1ows0,60,40,1|achpzz,60,40,1|achq00,43,59,0|akezfz,43,59,0|akezg0,60,40,1|av7snz,60,40,1|av7so0,43,59,0|b3i0rz,43,59,0|b3i0s0,60,40,1|bdxvbz,60,40,1|bdxvc0,43,59,0|bm83fz,43,59,0|bm83g0,60,40,1|bwnxzz,60,40,1|bwny00,43,59,0|c4y63z,43,59,0|c4y640,60,40,1|cfqzbz,60,40,1|cfqzc0,43,59,0|cno8rz,43,59,0|cno8s0,60,40,1|cyh1zz,60,40,1|cyh200,43,59,0|d6ebfz,43,59,0|d6ebg0,60,40,1|dh74nz,60,40,1|dh74o0,43,59,0|dphcrz,43,59,0|dphcs0,60,40,1|dzx7bz,60,40,1|dzx7c0,43,59,0|e87ffz,43,59,0|e87fg0,60,40,1|ein9zz,60,40,1|eina00,43,59,0|eqxi3z,43,59,0|eqxi40,60,40,1|f1dcnz,60,40,1|f1dco0,43,59,0|f9nkrz,43,59,0|f9nks0,60,40,1|fkgdzz,60,40,1|fkge00,43,59,0|fsdnfz,43,59,0|fsdng0,60,40,1|g36gnz,60,40,1|g36go0,43,59,0|gb3q3z,43,59,0|gb3q40,60,40,1|glwjbz,60,40,1|glwjc0,43,59,0|gu6rfz,43,59,0|gu6rg0,60,40,1|h4mlzz,60,40,1|h4mm00,43,59,0|hcwu3z,43,59,0|hcwu40,60,40,1|hnconz,60,40,1|hncoo0,43,59,0|hvmwrz,43,59,0|hvmws0,60,40,1|i6fpzz,60,40,1|i6fq00,43,59,0|ieczfz,43,59,0|ieczg0,60,40,1|ip5snz,60,40,1|ip5so0,43,59,0|ix323z,43,59,0|ix3240,60,40,1|j7vvbz,60,40,1|j7vvc0,43,59,0|jeq8rz,43,59,0|jeq8s0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Tijuana|,0,176,0|-p1u4k1,0,176,0|-p1u4k0,44,62,0|-o0a9w1,44,62,0|-o0a9w0,55,38,0|-m7o9s1,55,38,0|-m7o9s0,44,62,0|-kf64k1,44,62,0|-kf64k0,55,38,0|-k84cg1,55,38,0|-k84cg0,56,62,1|-jyrdw1,56,62,1|-jyrdw0,55,38,0|-eg90g1,55,38,0|-eg90g0,67,62,1|-cq2tg1,67,62,1|-cq2tg0,68,62,1|-clbtw1,68,62,1|-clbtw0,55,38,0|-bcgxs1,55,38,0|-bcgxs0,56,62,1|-axv381,56,62,1|-axv380,55,38,0|-a9kxs1,55,38,0|-a9kxs0,56,62,1|-a22n81,56,62,1|-a22n80,55,38,0|-9qwk81,55,38,0|-9qwk80,56,62,1|-9izgc1,56,62,1|-9izgc0,55,38,0|-986hk1,55,38,0|-986hk0,56,62,1|-909do1,56,62,1|-909do0,55,38,0|-86qf01,55,38,0|-86qf00,56,62,1|-7yt8c1,56,62,1|-7yt8c0,55,38,0|-7o0cc1,55,38,0|-7o0cc0,56,62,1|-7g35o1,56,62,1|-7g35o0,55,38,0|-74xb01,55,38,0|-74xb00,56,62,1|-6x04c1,56,62,1|-6x04c0,55,38,0|-6m78c1,55,38,0|-6m78c0,56,62,1|-6ea1o1,56,62,1|-6ea1o0,55,38,0|-63h5o1,55,38,0|-63h5o0,56,62,1|-5vjz01,56,62,1|-5vjz00,55,38,0|-5kr301,55,38,0|-5kr300,56,62,1|-5ctwc1,56,62,1|-5ctwc0,55,38,0|-5210c1,55,38,0|-5210c0,56,62,1|-4u3to1,56,62,1|-4u3to0,55,38,0|3an53z,55,38,0|3an540,56,62,1|3kd2bz,56,62,1|3kd2c0,55,38,0|3td7rz,55,38,0|3td7s0,56,62,1|4334zz,56,62,1|433500,55,38,0|4cg93z,55,38,0|4cg940,56,62,1|4lt7nz,56,62,1|4lt7o0,55,38,0|4v6brz,55,38,0|4v6bs0,56,62,1|54jabz,56,62,1|54jac0,55,38,0|5dwefz,55,38,0|5dweg0,56,62,1|5n9czz,56,62,1|5n9d00,55,38,0|5wmh3z,55,38,0|5wmh40,56,62,1|65zfnz,56,62,1|65zfo0,55,38,0|6fcjrz,55,38,0|6fcjs0,56,62,1|6p2gzz,56,62,1|6p2h00,55,38,0|6y2mfz,55,38,0|6y2mg0,56,62,1|77sjnz,56,62,1|77sjo0,55,38,0|7h5nrz,55,38,0|7h5ns0,56,62,1|7qimbz,56,62,1|7qimc0,55,38,0|7zvqfz,55,38,0|7zvqg0,56,62,1|898ozz,56,62,1|898p00,55,38,0|8ilt3z,55,38,0|8ilt40,56,62,1|8ryrnz,56,62,1|8ryro0,55,38,0|908zrz,55,38,0|908zs0,56,62,1|9aoubz,56,62,1|9aouc0,55,38,0|9iz2fz,55,38,0|9iz2g0,56,62,1|9trvnz,56,62,1|9trvo0,55,38,0|a1p53z,55,38,0|a1p540,56,62,1|achybz,56,62,1|achyc0,55,38,0|akf7rz,55,38,0|akf7s0,56,62,1|av80zz,56,62,1|av8100,55,38,0|b3i93z,55,38,0|b3i940,56,62,1|bdy3nz,56,62,1|bdy3o0,55,38,0|bm8brz,55,38,0|bm8bs0,56,62,1|bwo6bz,56,62,1|bwo6c0,55,38,0|c4yefz,55,38,0|c4yeg0,56,62,1|cfr7nz,56,62,1|cfr7o0,55,38,0|cnoh3z,55,38,0|cnoh40,56,62,1|cyhabz,56,62,1|cyhac0,55,38,0|d6ejrz,55,38,0|d6ejs0,56,62,1|dh7czz,56,62,1|dh7d00,55,38,0|dphl3z,55,38,0|dphl40,56,62,1|dzxfnz,56,62,1|dzxfo0,55,38,0|e87nrz,55,38,0|e87ns0,56,62,1|einibz,56,62,1|einic0,55,38,0|eqxqfz,55,38,0|eqxqg0,56,62,1|f1dkzz,56,62,1|f1dl00,55,38,0|f9nt3z,55,38,0|f9nt40,56,62,1|fkgmbz,56,62,1|fkgmc0,55,38,0|fsdvrz,55,38,0|fsdvs0,56,62,1|g36ozz,56,62,1|g36p00,55,38,0|gb3yfz,55,38,0|gb3yg0,56,62,1|glwrnz,56,62,1|glwro0,55,38,0|gu6zrz,55,38,0|gu6zs0,56,62,1|h4mubz,56,62,1|h4muc0,55,38,0|hcx2fz,55,38,0|hcx2g0,56,62,1|hncwzz,56,62,1|hncx00,55,38,0|hvn53z,55,38,0|hvn540,56,62,1|i6fybz,56,62,1|i6fyc0,55,38,0|ied7rz,55,38,0|ied7s0,56,62,1|ip60zz,56,62,1|ip6100,55,38,0|ix3afz,55,38,0|ix3ag0,56,62,1|j7w3nz,56,62,1|j7w3o0,55,38,0|jftd3z,55,38,0|jftd40,56,62,1|jqm6bz,56,62,1|jqm6c0,55,38,0|jywefz,55,38,0|jyweg0,56,62,1|k9c8zz,56,62,1|k9c900,55,38,0|khmh3z,55,38,0|khmh40,56,62,1|ks2bnz,56,62,1|ks2bo0,55,38,0|kz9nrz,55,38,0|kz9ns0,56,62,1|lbibnz,56,62,1|lbibo0,55,38,0|lhzqfz,55,38,0|lhzqg0,56,62,1|lu8ebz,56,62,1|lu8ec0,55,38,0|m0pt3z,55,38,0|m0pt40,56,62,1|mcygzz,56,62,1|mcyh00,55,38,0|mjfvrz,55,38,0|mjfvs0,56,62,1|mvojnz,56,62,1|mvojo0,55,38,0|n25yfz,55,38,0|n25yg0,56,62,1|neembz,56,62,1|neemc0,55,38,0|nkw13z,55,38,0|nkw140,56,62,1|nx4ozz,56,62,1|nx4p00,55,38,0|o3z2fz,55,38,0|o3z2g0,56,62,1|og7qbz,56,62,1|og7qc0,55,38,0|omp53z,55,38,0|omp540,56,62,1|oyxszz,56,62,1|oyxt00,55,38,0|p5f7rz,55,38,0|p5f7s0,56,62,1|phnvnz,56,62,1|phnvo0,55,38,0|po5afz,55,38,0|po5ag0,56,62,1|q0dybz,56,62,1|q0dyc0,55,38,0|q6vd3z,55,38,0|q6vd40,56,62,1|qj40zz,56,62,1|qj4100,55,38,0|qpyefz,55,38,0|qpyeg0,56,62,1|r272bz,56,62,1|r272c0,55,38,0|r8oh3z,55,38,0|r8oh40,56,62,1|rkx4zz,56,62,1|rkx500,55,38,0|rrejrz,55,38,0|rrejs0,56,62,1|s3n7nz,56,62,1|s3n7o0,55,38,0|sa4mfz,55,38,0|sa4mg0,56,62,1|smdabz,56,62,1|smdac0,55,38,0|ssup3z,55,38,0|ssup40,56,62,1|t53czz,56,62,1|t53d00,55,38,0|tbkrrz,55,38,0|tbkrs0,56,62,1|tntfnz,56,62,1|tntfo0,55,38,0|tunt3z,55,38,0|tunt40,56,62,1|u6wgzz,56,62,1|u6wh00,55,38,0|uddvrz,55,38,0|uddvs0,56,62,1|upmjnz,56,62,1|upmjo0,55,38,0|uw3yfz,55,38,0|uw3yg0,56,62,1|v8cmbz,56,62,1|v8cmc0,55,38,0|veu13z,55,38,0|veu140,56,62,1|vr2ozz,56,62,1|vr2p00,55,38,0|vxk3rz,55,38,0|vxk3s0,56,62,1|w9srnz,56,62,1|w9sro0,55,38,0|wgn53z,55,38,0|wgn540,56,62,1|wsvszz,56,62,1|wsvt00,55,38,0|wzd7rz,55,38,0|wzd7s0,56,62,1|xblvnz,56,62,1|xblvo0,55,38,0|xi3afz,55,38,0|xi3ag0,56,62,1|xubybz,56,62,1|xubyc0,55,38,0|y0td3z,55,38,0|y0td40,56,62,1|yd20zz,56,62,1|yd2100,55,38,0|yjjfrz,55,38,0|yjjfs0,56,62,1|yvs3nz,56,62,1|yvs3o0,55,38,0|z29ifz,55,38,0|z29ig0,56,62,1|zei6bz,56,62,1|zei6c0,55,38,0|zlcjrz,55,38,0|zlcjs0,56,62,1|zxl7nz,56,62,1|zxl7o0,55,38,0|1042mfz,55,38,0|1042mg0,56,62,1|10gbabz,56,62,1|10gbac0,55,38,0|10msp3z,55,38,0|10msp40,56,62,1|10z1czz,56,62,1|10z1d00,55,38,0|115irrz,55,38,0|115irs0,56,62,1|11hrfnz,56,62,1|11hrfo0,55,38,0|11o8ufz,55,38,0|11o8ug0,56,62,1|120hibz,56,62,1|120hic0,55,38,0|126yx3z,55,38,0|126yx40,56,62,1|12j7kzz,56,62,1|12j7l00,55,38,0|12q1yfz,55,38,0|12q1yg0,56,62,1|132ambz,56,62,1|132amc0,55,38,0|138s13z,55,38,0|138s140,56,62,1|13l0ozz,56,62,1|13l0p00,55,38,0|13ri3rz,55,38,0|13ri3s0,56,62,1|143qrnz,56,62,1|143qro0,55,38,0|14a86fz,55,38,0|14a86g0,56,62,1|14mgubz,56,62,1|14mguc0,55,38,0|14sy93z,55,38,0|14sy940,56,62,1|1556wzz,56,62,1|1556x00,55,38,0|15c1afz,55,38,0|15c1ag0,56,62,1|15o9ybz,56,62,1|15o9yc0,55,38,0|15urd3z,55,38,0|15urd40,56,62,1|16700zz,56,62,1|1670100,55,38,0|16dhfrz,55,38,0|16dhfs0,56,62,1|16pq3nz,56,62,1|16pq3o0,55,38,0|16w7ifz,55,38,0|16w7ig0,56,62,1|178g6bz,56,62,1|178g6c0,55,38,0|17exl3z,55,38,0|17exl40,56,62,1|17r68zz,56,62,1|17r6900,55,38,0|17xnnrz,55,38,0|17xnns0,56,62,1|189wbnz,56,62,1|189wbo0,55,38,0|18gqp3z,55,38,0|18gqp40,56,62,1|18szczz,56,62,1|18szd00,55,38,0|18zgrrz,55,38,0|18zgrs0,56,62,1|19bpfnz,56,62,1|19bpfo0,55,38,0|19i6ufz,55,38,0|19i6ug0,56,62,1|19ufibz,56,62,1|19ufic0,55,38,0|1a0wx3z,55,38,0|1a0wx40,56,62,1|1ad5kzz,56,62,1|1ad5l00,55,38,0|1ajmzrz,55,38,0|1ajmzs0,56,62,1|1avvnnz,56,62,1|1avvno0,55,38,0|1b2q13z,55,38,0|1b2q140,56,62,1|1beyozz,56,62,1|1beyp00,55,38,0|1blg3rz,55,38,0|1blg3s0,56,62,1|1bxornz,56,62,1|1bxoro0,55,38,0|1c466fz,55,38,0|1c466g0,56,62,1|1cgeubz,56,62,1|1cgeuc0,55,38,0|1cmw93z,55,38,0|1cmw940,56,62,1|1cz4wzz,56,62,1|1cz4x00,55,38,0|1d5mbrz,55,38,0|1d5mbs0,56,62,1|1dhuznz,56,62,1|1dhuzo0,55,38,0|1docefz,55,38,0|1doceg0,56,62,1|1e0l2bz,56,62,1|1e0l2c0,55,38,0|1e7ffrz,55,38,0|1e7ffs0,56,62,1|1ejo3nz,56,62,1|1ejo3o0,55,38,0|1eq5ifz,55,38,0|1eq5ig0,56,62,1|1f2e6bz,56,62,1|1f2e6c0,55,38,0|1f8vl3z,55,38,0|1f8vl40,56,62,1|1fl48zz,56,62,1|1fl4900,55,38,0|1frlnrz,55,38,0|1frlns0,56,62,1|1g3ubnz,56,62,1|1g3ubo0,55,38,0|1gabqfz,55,38,0|1gabqg0,56,62,1|1gmkebz,56,62,1|1gmkec0,55,38,0|1gt1t3z,55,38,0|1gt1t40,56,62,1|1h5agzz,56,62,1|1h5ah00,55,38,0|1hc4ufz,55,38,0|1hc4ug0,56,62,1|1hodibz,56,62,1|1hodic0,55,38,0|1huux3z,55,38,0|1huux40,56,62,1|1i73kzz,56,62,1|1i73l00,55,38,0|1idkzrz,55,38,0|1idkzs0,56,62,1|1iptnnz,56,62,1|1iptno0,55,38,0|1iwb2fz,55,38,0|1iwb2g0,56,62,1|1j8jqbz,56,62,1|1j8jqc0,55,38,0|1jf153z,55,38,0|1jf1540,56,62,1|1jr9szz,56,62,1|1jr9t00,55,38,0|1jy46fz,55,38,0|1jy46g0,56,62,1|1kacubz,56,62,1|1kacuc0,55,38,0|1kgu93z,55,38,0|1kgu940,56,62,1|1kt2wzz,56,62,1|1kt2x00,55,38,0|1kzkbrz,55,38,0|1kzkbs0,56,62,1|1lbsznz,56,62,1|1lbszo0,55,38,0|1liaefz,55,38,0|1liaeg0,56,62,1|1luj2bz,56,62,1|1luj2c0,55,38,0|1m10h3z,55,38,0|1m10h40,56,62,1|1md94zz,56,62,1|1md9500,55,38,0|1mjqjrz,55,38,0|1mjqjs0,56,62,1|1mvz7nz,56,62,1|1mvz7o0,55,38,0|1n2tl3z,55,38,0|1n2tl40,56,62,1|1nf28zz,56,62,1|1nf2900,55,38,0|1nljnrz,55,38,0|1nljns0,56,62,1|1nxsbnz,56,62,1|1nxsbo0,55,38,0|1o49qfz,55,38,0|1o49qg0,56,62,1|1ogiebz,56,62,1|1ogiec0,55,38,0|1omzt3z,55,38,0|1omzt40,56,62,1|1oz8gzz,56,62,1|1oz8h00,55,38,0|1p5pvrz,55,38,0|1p5pvs0,56,62,1|1phyjnz,56,62,1|1phyjo0,55,38,0|1posx3z,55,38,0|1posx40,56,62,1|1q11kzz,56,62,1|1q11l00,55,38,0|1q7izrz,55,38,0|1q7izs0,56,62,1|1qjrnnz,56,62,1|1qjrno0,55,38,0|1qq92fz,55,38,0|1qq92g0,56,62,1|1r2hqbz,56,62,1|1r2hqc0,55,38,0|1r8z53z,55,38,0|1r8z540,56,62,1|1rl7szz,56,62,1|1rl7t00,55,38,0|1rrp7rz,55,38,0|1rrp7s0,56,62,1|1s3xvnz,56,62,1|1s3xvo0,55,38,0|1safafz,55,38,0|1safag0,56,62,1|1smnybz,56,62,1|1smnyc0,55,38,0|1stibrz,55,38,0|1stibs0,56,62,1|1t5qznz,56,62,1|1t5qzo0,55,38,0|1tc8efz,55,38,0|1tc8eg0,56,62,1|1toh2bz,56,62,1|1toh2c0,55,38,0|1tuyh3z,55,38,0|1tuyh40,56,62,1|1u774zz,56,62,1|1u77500,55,38,0|1udojrz,55,38,0|1udojs0,56,62,1|1upx7nz,56,62,1|1upx7o0,55,38,0|1uwemfz,55,38,0|1uwemg0,56,62,1|1v8nabz,56,62,1|1v8nac0,55,38,0|1vf4p3z,55,38,0|1vf4p40,56,62,1|1vrdczz,56,62,1|1vrdd00,55,38,0|NaN,55,38,0",
        "America/Toronto|,0,144,0|-1353dat,0,144,0|-1353das,43,59,0|-qzoxw1,43,59,0|-qzoxw0,60,40,1|-qpm201,60,40,1|-qpm200,43,59,0|-qhn4u1,43,59,0|-qhn4u0,60,40,1|-q6w4w1,60,40,1|-q6w4w0,43,59,0|-px5wk1,43,59,0|-px5wk0,60,40,1|-pplww1,60,40,1|-pplww0,43,59,0|-pdpwk1,43,59,0|-pdpwk0,60,40,1|-p7e7c1,60,40,1|-p7e7c0,43,59,0|-ouztw1,43,59,0|-ouztw0,60,40,1|-ooiko1,60,40,1|-ooiko0,43,59,0|-oc9r81,43,59,0|-oc9r80,60,40,1|-o5si01,60,40,1|-o5si00,43,59,0|-ntwn81,43,59,0|-ntwn80,60,40,1|-nmpgo1,60,40,1|-nmpgo0,43,59,0|-nb6kk1,43,59,0|-nb6kk0,60,40,1|-n3ze01,60,40,1|-n3ze00,43,59,0|-msghw1,43,59,0|-msghw0,60,40,1|-ml9bc1,60,40,1|-ml9bc0,43,59,0|-m9qf81,43,59,0|-m9qf80,60,40,1|-m26a01,60,40,1|-m26a00,43,59,0|-lr0ck1,43,59,0|-lr0ck0,60,40,1|-lj38o1,60,40,1|-lj38o0,43,59,0|-l8a9w1,43,59,0|-l8a9w0,60,40,1|-l0d601,60,40,1|-l0d600,43,59,0|-kpk781,43,59,0|-kpk780,60,40,1|-khn3c1,60,40,1|-khn3c0,43,59,0|-k6u4k1,43,59,0|-k6u4k0,60,40,1|-jyx0o1,60,40,1|-jyx0o0,43,59,0|-jnr381,43,59,0|-jnr380,60,40,1|-jg6y01,60,40,1|-jg6y00,43,59,0|-j510k1,43,59,0|-j510k0,60,40,1|-ix3wo1,60,40,1|-ix3wo0,43,59,0|-imaxw1,43,59,0|-imaxw0,60,40,1|-iedu01,60,40,1|-iedu00,43,59,0|-i3kv81,43,59,0|-i3kv80,60,40,1|-hvnrc1,60,40,1|-hvnrc0,43,59,0|-hkusk1,43,59,0|-hkusk0,60,40,1|-hcxoo1,60,40,1|-hcxoo0,43,59,0|-h24pw1,43,59,0|-h24pw0,60,40,1|-gu7m01,60,40,1|-gu7m00,43,59,0|-gjen81,43,59,0|-gjen80,60,40,1|-gbhjc1,60,40,1|-gbhjc0,43,59,0|-g0blw1,43,59,0|-g0blw0,60,40,1|-fsrgo1,60,40,1|-fsrgo0,43,59,0|-fhlj81,43,59,0|-fhlj80,60,40,1|-ek24k1,60,40,1|-ek24k0,69,40,1|-cq2tg1,69,40,1|-cq2tg0,70,40,1|-cnp3c1,70,40,1|-cnp3c0,43,59,0|-ccw4k1,43,59,0|-ccw4k0,60,40,1|-c4z0o1,60,40,1|-c4z0o0,43,59,0|-bu61w1,43,59,0|-bu61w0,60,40,1|-bm8y01,60,40,1|-bm8y00,43,59,0|-bbfz81,43,59,0|-bbfz80,60,40,1|-b3ivc1,60,40,1|-b3ivc0,43,59,0|-aspwk1,43,59,0|-aspwk0,60,40,1|-ahk4o1,60,40,1|-ahk4o0,43,59,0|-a9mv81,43,59,0|-a9mv80,60,40,1|-9yu201,60,40,1|-9yu200,43,59,0|-9qwsk1,43,59,0|-9qwsk0,60,40,1|-9izoo1,60,40,1|-9izoo0,43,59,0|-986pw1,43,59,0|-986pw0,60,40,1|-909m01,60,40,1|-909m00,43,59,0|-8pgn81,43,59,0|-8pgn80,60,40,1|-8hjjc1,60,40,1|-8hjjc0,43,59,0|-86qkk1,43,59,0|-86qkk0,60,40,1|-7ytgo1,60,40,1|-7ytgo0,43,59,0|-7o0hw1,43,59,0|-7o0hw0,60,40,1|-7g3e01,60,40,1|-7g3e00,43,59,0|-74xgk1,43,59,0|-74xgk0,60,40,1|-6x0co1,60,40,1|-6x0co0,43,59,0|-6m7dw1,43,59,0|-6m7dw0,60,40,1|-6cufc1,60,40,1|-6cufc0,43,59,0|-63hb81,43,59,0|-63hb80,60,40,1|-5u4co1,60,40,1|-5u4co0,43,59,0|-5kr8k1,43,59,0|-5kr8k0,60,40,1|-5bea01,60,40,1|-5bea00,43,59,0|-5215w1,43,59,0|-5215w0,60,40,1|-4sb8o1,60,40,1|-4sb8o0,43,59,0|-4iy4k1,43,59,0|-4iy4k0,60,40,1|-49l601,60,40,1|-49l600,43,59,0|-4081w1,43,59,0|-4081w0,60,40,1|-3qv3c1,60,40,1|-3qv3c0,43,59,0|-3hhz81,43,59,0|-3hhz80,60,40,1|-3850o1,60,40,1|-3850o0,43,59,0|-2yrwk1,43,59,0|-2yrwk0,60,40,1|-2pey01,60,40,1|-2pey00,43,59,0|-2g1tw1,43,59,0|-2g1tw0,60,40,1|-26bwo1,60,40,1|-26bwo0,43,59,0|-1xbr81,43,59,0|-1xbr80,60,40,1|-1nlu01,60,40,1|-1nlu00,43,59,0|-1e8pw1,43,59,0|-1e8pw0,60,40,1|-14vrc1,60,40,1|-14vrc0,43,59,0|-vin81,43,59,0|-vin80,60,40,1|-m5oo1,60,40,1|-m5oo0,43,59,0|-cskk1,43,59,0|-cskk0,60,40,1|-3fm01,60,40,1|-3fm00,43,59,0|5xi3z,43,59,0|5xi40,60,40,1|fagnz,60,40,1|fago0,43,59,0|onkrz,43,59,0|onks0,60,40,1|ydhzz,60,40,1|ydi00,43,59,0|17qm3z,43,59,0|17qm40,60,40,1|1h3knz,60,40,1|1h3ko0,43,59,0|1qgorz,43,59,0|1qgos0,60,40,1|1ztnbz,60,40,1|1ztnc0,43,59,0|296rfz,43,59,0|296rg0,60,40,1|2ijpzz,60,40,1|2ijq00,43,59,0|2rwu3z,43,59,0|2rwu40,60,40,1|319snz,60,40,1|319so0,43,59,0|3amwrz,43,59,0|3amws0,60,40,1|3kctzz,60,40,1|3kcu00,43,59,0|3tczfz,43,59,0|3tczg0,60,40,1|432wnz,60,40,1|432wo0,43,59,0|4cg0rz,43,59,0|4cg0s0,60,40,1|4lszbz,60,40,1|4lszc0,43,59,0|4v63fz,43,59,0|4v63g0,60,40,1|54j1zz,60,40,1|54j200,43,59,0|5dw63z,43,59,0|5dw640,60,40,1|5n94nz,60,40,1|5n94o0,43,59,0|5wm8rz,43,59,0|5wm8s0,60,40,1|65z7bz,60,40,1|65z7c0,43,59,0|6fcbfz,43,59,0|6fcbg0,60,40,1|6p28nz,60,40,1|6p28o0,43,59,0|6y2e3z,43,59,0|6y2e40,60,40,1|77sbbz,60,40,1|77sbc0,43,59,0|7h5ffz,43,59,0|7h5fg0,60,40,1|7qidzz,60,40,1|7qie00,43,59,0|7zvi3z,43,59,0|7zvi40,60,40,1|898gnz,60,40,1|898go0,43,59,0|8ilkrz,43,59,0|8ilks0,60,40,1|8ryjbz,60,40,1|8ryjc0,43,59,0|908rfz,43,59,0|908rg0,60,40,1|9aolzz,60,40,1|9aom00,43,59,0|9iyu3z,43,59,0|9iyu40,60,40,1|9trnbz,60,40,1|9trnc0,43,59,0|a1owrz,43,59,0|a1ows0,60,40,1|achpzz,60,40,1|achq00,43,59,0|akezfz,43,59,0|akezg0,60,40,1|av7snz,60,40,1|av7so0,43,59,0|b3i0rz,43,59,0|b3i0s0,60,40,1|bdxvbz,60,40,1|bdxvc0,43,59,0|bm83fz,43,59,0|bm83g0,60,40,1|bwnxzz,60,40,1|bwny00,43,59,0|c4y63z,43,59,0|c4y640,60,40,1|cfqzbz,60,40,1|cfqzc0,43,59,0|cno8rz,43,59,0|cno8s0,60,40,1|cyh1zz,60,40,1|cyh200,43,59,0|d6ebfz,43,59,0|d6ebg0,60,40,1|dh74nz,60,40,1|dh74o0,43,59,0|dphcrz,43,59,0|dphcs0,60,40,1|dzx7bz,60,40,1|dzx7c0,43,59,0|e87ffz,43,59,0|e87fg0,60,40,1|ein9zz,60,40,1|eina00,43,59,0|eqxi3z,43,59,0|eqxi40,60,40,1|f1dcnz,60,40,1|f1dco0,43,59,0|f9nkrz,43,59,0|f9nks0,60,40,1|fkgdzz,60,40,1|fkge00,43,59,0|fsdnfz,43,59,0|fsdng0,60,40,1|g36gnz,60,40,1|g36go0,43,59,0|gb3q3z,43,59,0|gb3q40,60,40,1|glwjbz,60,40,1|glwjc0,43,59,0|gu6rfz,43,59,0|gu6rg0,60,40,1|h4mlzz,60,40,1|h4mm00,43,59,0|hcwu3z,43,59,0|hcwu40,60,40,1|hnconz,60,40,1|hncoo0,43,59,0|hvmwrz,43,59,0|hvmws0,60,40,1|i6fpzz,60,40,1|i6fq00,43,59,0|ieczfz,43,59,0|ieczg0,60,40,1|ip5snz,60,40,1|ip5so0,43,59,0|ix323z,43,59,0|ix3240,60,40,1|j7vvbz,60,40,1|j7vvc0,43,59,0|jeq8rz,43,59,0|jeq8s0,60,40,1|jqywnz,60,40,1|jqywo0,43,59,0|jxgbfz,43,59,0|jxgbg0,60,40,1|k9ozbz,60,40,1|k9ozc0,43,59,0|kg6e3z,43,59,0|kg6e40,60,40,1|ksf1zz,60,40,1|ksf200,43,59,0|kz9ffz,43,59,0|kz9fg0,60,40,1|lbi3bz,60,40,1|lbi3c0,43,59,0|lhzi3z,43,59,0|lhzi40,60,40,1|lu85zz,60,40,1|lu8600,43,59,0|m0pkrz,43,59,0|m0pks0,60,40,1|mcy8nz,60,40,1|mcy8o0,43,59,0|mjfnfz,43,59,0|mjfng0,60,40,1|mvobbz,60,40,1|mvobc0,43,59,0|n25q3z,43,59,0|n25q40,60,40,1|needzz,60,40,1|neee00,43,59,0|nkvsrz,43,59,0|nkvss0,60,40,1|nx4gnz,60,40,1|nx4go0,43,59,0|o3yu3z,43,59,0|o3yu40,60,40,1|og7hzz,60,40,1|og7i00,43,59,0|omowrz,43,59,0|omows0,60,40,1|oyxknz,60,40,1|oyxko0,43,59,0|p5ezfz,43,59,0|p5ezg0,60,40,1|phnnbz,60,40,1|phnnc0,43,59,0|po523z,43,59,0|po5240,60,40,1|q0dpzz,60,40,1|q0dq00,43,59,0|q6v4rz,43,59,0|q6v4s0,60,40,1|qj3snz,60,40,1|qj3so0,43,59,0|qpy63z,43,59,0|qpy640,60,40,1|r26tzz,60,40,1|r26u00,43,59,0|r8o8rz,43,59,0|r8o8s0,60,40,1|rkwwnz,60,40,1|rkwwo0,43,59,0|rrebfz,43,59,0|rrebg0,60,40,1|s3mzbz,60,40,1|s3mzc0,43,59,0|sa4e3z,43,59,0|sa4e40,60,40,1|smd1zz,60,40,1|smd200,43,59,0|ssugrz,43,59,0|ssugs0,60,40,1|t534nz,60,40,1|t534o0,43,59,0|tbkjfz,43,59,0|tbkjg0,60,40,1|tnt7bz,60,40,1|tnt7c0,43,59,0|tunkrz,43,59,0|tunks0,60,40,1|u6w8nz,60,40,1|u6w8o0,43,59,0|uddnfz,43,59,0|uddng0,60,40,1|upmbbz,60,40,1|upmbc0,43,59,0|uw3q3z,43,59,0|uw3q40,60,40,1|v8cdzz,60,40,1|v8ce00,43,59,0|vetsrz,43,59,0|vetss0,60,40,1|vr2gnz,60,40,1|vr2go0,43,59,0|vxjvfz,43,59,0|vxjvg0,60,40,1|w9sjbz,60,40,1|w9sjc0,43,59,0|wgmwrz,43,59,0|wgmws0,60,40,1|wsvknz,60,40,1|wsvko0,43,59,0|wzczfz,43,59,0|wzczg0,60,40,1|xblnbz,60,40,1|xblnc0,43,59,0|xi323z,43,59,0|xi3240,60,40,1|xubpzz,60,40,1|xubq00,43,59,0|y0t4rz,43,59,0|y0t4s0,60,40,1|yd1snz,60,40,1|yd1so0,43,59,0|yjj7fz,43,59,0|yjj7g0,60,40,1|yvrvbz,60,40,1|yvrvc0,43,59,0|z29a3z,43,59,0|z29a40,60,40,1|zehxzz,60,40,1|zehy00,43,59,0|zlcbfz,43,59,0|zlcbg0,60,40,1|zxkzbz,60,40,1|zxkzc0,43,59,0|1042e3z,43,59,0|1042e40,60,40,1|10gb1zz,60,40,1|10gb200,43,59,0|10msgrz,43,59,0|10msgs0,60,40,1|10z14nz,60,40,1|10z14o0,43,59,0|115ijfz,43,59,0|115ijg0,60,40,1|11hr7bz,60,40,1|11hr7c0,43,59,0|11o8m3z,43,59,0|11o8m40,60,40,1|120h9zz,60,40,1|120ha00,43,59,0|126yorz,43,59,0|126yos0,60,40,1|12j7cnz,60,40,1|12j7co0,43,59,0|12q1q3z,43,59,0|12q1q40,60,40,1|132adzz,60,40,1|132ae00,43,59,0|138rsrz,43,59,0|138rss0,60,40,1|13l0gnz,60,40,1|13l0go0,43,59,0|13rhvfz,43,59,0|13rhvg0,60,40,1|143qjbz,60,40,1|143qjc0,43,59,0|14a7y3z,43,59,0|14a7y40,60,40,1|14mglzz,60,40,1|14mgm00,43,59,0|14sy0rz,43,59,0|14sy0s0,60,40,1|1556onz,60,40,1|1556oo0,43,59,0|15c123z,43,59,0|15c1240,60,40,1|15o9pzz,60,40,1|15o9q00,43,59,0|15ur4rz,43,59,0|15ur4s0,60,40,1|166zsnz,60,40,1|166zso0,43,59,0|16dh7fz,43,59,0|16dh7g0,60,40,1|16ppvbz,60,40,1|16ppvc0,43,59,0|16w7a3z,43,59,0|16w7a40,60,40,1|178fxzz,60,40,1|178fy00,43,59,0|17excrz,43,59,0|17excs0,60,40,1|17r60nz,60,40,1|17r60o0,43,59,0|17xnffz,43,59,0|17xnfg0,60,40,1|189w3bz,60,40,1|189w3c0,43,59,0|18gqgrz,43,59,0|18gqgs0,60,40,1|18sz4nz,60,40,1|18sz4o0,43,59,0|18zgjfz,43,59,0|18zgjg0,60,40,1|19bp7bz,60,40,1|19bp7c0,43,59,0|19i6m3z,43,59,0|19i6m40,60,40,1|19uf9zz,60,40,1|19ufa00,43,59,0|1a0worz,43,59,0|1a0wos0,60,40,1|1ad5cnz,60,40,1|1ad5co0,43,59,0|1ajmrfz,43,59,0|1ajmrg0,60,40,1|1avvfbz,60,40,1|1avvfc0,43,59,0|1b2psrz,43,59,0|1b2pss0,60,40,1|1beygnz,60,40,1|1beygo0,43,59,0|1blfvfz,43,59,0|1blfvg0,60,40,1|1bxojbz,60,40,1|1bxojc0,43,59,0|1c45y3z,43,59,0|1c45y40,60,40,1|1cgelzz,60,40,1|1cgem00,43,59,0|1cmw0rz,43,59,0|1cmw0s0,60,40,1|1cz4onz,60,40,1|1cz4oo0,43,59,0|1d5m3fz,43,59,0|1d5m3g0,60,40,1|1dhurbz,60,40,1|1dhurc0,43,59,0|1doc63z,43,59,0|1doc640,60,40,1|1e0ktzz,60,40,1|1e0ku00,43,59,0|1e7f7fz,43,59,0|1e7f7g0,60,40,1|1ejnvbz,60,40,1|1ejnvc0,43,59,0|1eq5a3z,43,59,0|1eq5a40,60,40,1|1f2dxzz,60,40,1|1f2dy00,43,59,0|1f8vcrz,43,59,0|1f8vcs0,60,40,1|1fl40nz,60,40,1|1fl40o0,43,59,0|1frlffz,43,59,0|1frlfg0,60,40,1|1g3u3bz,60,40,1|1g3u3c0,43,59,0|1gabi3z,43,59,0|1gabi40,60,40,1|1gmk5zz,60,40,1|1gmk600,43,59,0|1gt1krz,43,59,0|1gt1ks0,60,40,1|1h5a8nz,60,40,1|1h5a8o0,43,59,0|1hc4m3z,43,59,0|1hc4m40,60,40,1|1hod9zz,60,40,1|1hoda00,43,59,0|1huuorz,43,59,0|1huuos0,60,40,1|1i73cnz,60,40,1|1i73co0,43,59,0|1idkrfz,43,59,0|1idkrg0,60,40,1|1iptfbz,60,40,1|1iptfc0,43,59,0|1iwau3z,43,59,0|1iwau40,60,40,1|1j8jhzz,60,40,1|1j8ji00,43,59,0|1jf0wrz,43,59,0|1jf0ws0,60,40,1|1jr9knz,60,40,1|1jr9ko0,43,59,0|1jy3y3z,43,59,0|1jy3y40,60,40,1|1kaclzz,60,40,1|1kacm00,43,59,0|1kgu0rz,43,59,0|1kgu0s0,60,40,1|1kt2onz,60,40,1|1kt2oo0,43,59,0|1kzk3fz,43,59,0|1kzk3g0,60,40,1|1lbsrbz,60,40,1|1lbsrc0,43,59,0|1lia63z,43,59,0|1lia640,60,40,1|1luitzz,60,40,1|1luiu00,43,59,0|1m108rz,43,59,0|1m108s0,60,40,1|1md8wnz,60,40,1|1md8wo0,43,59,0|1mjqbfz,43,59,0|1mjqbg0,60,40,1|1mvyzbz,60,40,1|1mvyzc0,43,59,0|1n2tcrz,43,59,0|1n2tcs0,60,40,1|1nf20nz,60,40,1|1nf20o0,43,59,0|1nljffz,43,59,0|1nljfg0,60,40,1|1nxs3bz,60,40,1|1nxs3c0,43,59,0|1o49i3z,43,59,0|1o49i40,60,40,1|1ogi5zz,60,40,1|1ogi600,43,59,0|1omzkrz,43,59,0|1omzks0,60,40,1|1oz88nz,60,40,1|1oz88o0,43,59,0|1p5pnfz,43,59,0|1p5png0,60,40,1|1phybbz,60,40,1|1phybc0,43,59,0|1posorz,43,59,0|1posos0,60,40,1|1q11cnz,60,40,1|1q11co0,43,59,0|1q7irfz,43,59,0|1q7irg0,60,40,1|1qjrfbz,60,40,1|1qjrfc0,43,59,0|1qq8u3z,43,59,0|1qq8u40,60,40,1|1r2hhzz,60,40,1|1r2hi00,43,59,0|1r8ywrz,43,59,0|1r8yws0,60,40,1|1rl7knz,60,40,1|1rl7ko0,43,59,0|1rrozfz,43,59,0|1rrozg0,60,40,1|1s3xnbz,60,40,1|1s3xnc0,43,59,0|1saf23z,43,59,0|1saf240,60,40,1|1smnpzz,60,40,1|1smnq00,43,59,0|1sti3fz,43,59,0|1sti3g0,60,40,1|1t5qrbz,60,40,1|1t5qrc0,43,59,0|1tc863z,43,59,0|1tc8640,60,40,1|1togtzz,60,40,1|1togu00,43,59,0|1tuy8rz,43,59,0|1tuy8s0,60,40,1|1u76wnz,60,40,1|1u76wo0,43,59,0|1udobfz,43,59,0|1udobg0,60,40,1|1upwzbz,60,40,1|1upwzc0,43,59,0|1uwee3z,43,59,0|1uwee40,60,40,1|1v8n1zz,60,40,1|1v8n200,43,59,0|1vf4grz,43,59,0|1vf4gs0,60,40,1|1vrd4nz,60,40,1|1vrd4o0,43,59,0|NaN,43,59,0",
        "America/Tortola|,0,39,0|-10xhp3c,0,39,0|-10xhp3b,31,40,0|-efsnk1,31,40,0|-efsnk0,32,41,1|-cq2tg1,32,41,1|-cq2tg0,33,41,1|-cnp641,33,41,1|-cnp640,31,40,0|NaN,31,40,0",
        "America/Vancouver|,0,177,0|-18vrvv9,0,177,0|-18vrvv8,55,38,0|-qzopk1,55,38,0|-qzopk0,56,62,1|-qplto1,56,62,1|-qplto0,55,38,0|-ek1w81,55,38,0|-ek1w80,67,62,1|-cq2tg1,67,62,1|-cq2tg0,68,62,1|-cnov01,68,62,1|-cnov00,55,38,0|-ccvw81,55,38,0|-ccvw80,56,62,1|-c4ysc1,56,62,1|-c4ysc0,55,38,0|-bu5tk1,55,38,0|-bu5tk0,56,62,1|-bm8po1,56,62,1|-bm8po0,55,38,0|-bbfqw1,55,38,0|-bbfqw0,56,62,1|-b3in01,56,62,1|-b3in00,55,38,0|-aspo81,55,38,0|-aspo80,56,62,1|-akskc1,56,62,1|-akskc0,55,38,0|-a9mmw1,55,38,0|-a9mmw0,56,62,1|-a22ho1,56,62,1|-a22ho0,55,38,0|-9qwk81,55,38,0|-9qwk80,56,62,1|-9izgc1,56,62,1|-9izgc0,55,38,0|-986hk1,55,38,0|-986hk0,56,62,1|-909do1,56,62,1|-909do0,55,38,0|-8pgew1,55,38,0|-8pgew0,56,62,1|-8hjb01,56,62,1|-8hjb00,55,38,0|-86qc81,55,38,0|-86qc80,56,62,1|-7yt8c1,56,62,1|-7yt8c0,55,38,0|-7o09k1,55,38,0|-7o09k0,56,62,1|-7g35o1,56,62,1|-7g35o0,55,38,0|-74x881,55,38,0|-74x880,56,62,1|-6x04c1,56,62,1|-6x04c0,55,38,0|-6m75k1,55,38,0|-6m75k0,56,62,1|-6ea1o1,56,62,1|-6ea1o0,55,38,0|-63h2w1,55,38,0|-63h2w0,56,62,1|-5vjz01,56,62,1|-5vjz00,55,38,0|-5kr081,55,38,0|-5kr080,56,62,1|-5ctwc1,56,62,1|-5ctwc0,55,38,0|-520xk1,55,38,0|-520xk0,56,62,1|-4u3to1,56,62,1|-4u3to0,55,38,0|-4ixw81,55,38,0|-4ixw80,56,62,1|-4bdr01,56,62,1|-4bdr00,55,38,0|-407tk1,55,38,0|-407tk0,56,62,1|-3quv01,56,62,1|-3quv00,55,38,0|-3hhqw1,55,38,0|-3hhqw0,56,62,1|-384sc1,56,62,1|-384sc0,55,38,0|-2yro81,55,38,0|-2yro80,56,62,1|-2pepo1,56,62,1|-2pepo0,55,38,0|-2g1lk1,55,38,0|-2g1lk0,56,62,1|-26boc1,56,62,1|-26boc0,55,38,0|-1xbiw1,55,38,0|-1xbiw0,56,62,1|-1nllo1,56,62,1|-1nllo0,55,38,0|-1e8hk1,55,38,0|-1e8hk0,56,62,1|-14vj01,56,62,1|-14vj00,55,38,0|-view1,55,38,0|-view0,56,62,1|-m5gc1,56,62,1|-m5gc0,55,38,0|-csc81,55,38,0|-csc80,56,62,1|-3fdo1,56,62,1|-3fdo0,55,38,0|5xqfz,55,38,0|5xqg0,56,62,1|faozz,56,62,1|fap00,55,38,0|ont3z,55,38,0|ont40,56,62,1|ydqbz,56,62,1|ydqc0,55,38,0|17qufz,55,38,0|17qug0,56,62,1|1h3szz,56,62,1|1h3t00,55,38,0|1qgx3z,55,38,0|1qgx40,56,62,1|1ztvnz,56,62,1|1ztvo0,55,38,0|296zrz,55,38,0|296zs0,56,62,1|2ijybz,56,62,1|2ijyc0,55,38,0|2rx2fz,55,38,0|2rx2g0,56,62,1|31a0zz,56,62,1|31a100,55,38,0|3an53z,55,38,0|3an540,56,62,1|3kd2bz,56,62,1|3kd2c0,55,38,0|3td7rz,55,38,0|3td7s0,56,62,1|4334zz,56,62,1|433500,55,38,0|4cg93z,55,38,0|4cg940,56,62,1|4lt7nz,56,62,1|4lt7o0,55,38,0|4v6brz,55,38,0|4v6bs0,56,62,1|54jabz,56,62,1|54jac0,55,38,0|5dwefz,55,38,0|5dweg0,56,62,1|5n9czz,56,62,1|5n9d00,55,38,0|5wmh3z,55,38,0|5wmh40,56,62,1|65zfnz,56,62,1|65zfo0,55,38,0|6fcjrz,55,38,0|6fcjs0,56,62,1|6p2gzz,56,62,1|6p2h00,55,38,0|6y2mfz,55,38,0|6y2mg0,56,62,1|77sjnz,56,62,1|77sjo0,55,38,0|7h5nrz,55,38,0|7h5ns0,56,62,1|7qimbz,56,62,1|7qimc0,55,38,0|7zvqfz,55,38,0|7zvqg0,56,62,1|898ozz,56,62,1|898p00,55,38,0|8ilt3z,55,38,0|8ilt40,56,62,1|8ryrnz,56,62,1|8ryro0,55,38,0|908zrz,55,38,0|908zs0,56,62,1|9aoubz,56,62,1|9aouc0,55,38,0|9iz2fz,55,38,0|9iz2g0,56,62,1|9trvnz,56,62,1|9trvo0,55,38,0|a1p53z,55,38,0|a1p540,56,62,1|achybz,56,62,1|achyc0,55,38,0|akf7rz,55,38,0|akf7s0,56,62,1|av80zz,56,62,1|av8100,55,38,0|b3i93z,55,38,0|b3i940,56,62,1|bdy3nz,56,62,1|bdy3o0,55,38,0|bm8brz,55,38,0|bm8bs0,56,62,1|bwo6bz,56,62,1|bwo6c0,55,38,0|c4yefz,55,38,0|c4yeg0,56,62,1|cfr7nz,56,62,1|cfr7o0,55,38,0|cnoh3z,55,38,0|cnoh40,56,62,1|cyhabz,56,62,1|cyhac0,55,38,0|d6ejrz,55,38,0|d6ejs0,56,62,1|dh7czz,56,62,1|dh7d00,55,38,0|dphl3z,55,38,0|dphl40,56,62,1|dzxfnz,56,62,1|dzxfo0,55,38,0|e87nrz,55,38,0|e87ns0,56,62,1|einibz,56,62,1|einic0,55,38,0|eqxqfz,55,38,0|eqxqg0,56,62,1|f1dkzz,56,62,1|f1dl00,55,38,0|f9nt3z,55,38,0|f9nt40,56,62,1|fkgmbz,56,62,1|fkgmc0,55,38,0|fsdvrz,55,38,0|fsdvs0,56,62,1|g36ozz,56,62,1|g36p00,55,38,0|gb3yfz,55,38,0|gb3yg0,56,62,1|glwrnz,56,62,1|glwro0,55,38,0|gu6zrz,55,38,0|gu6zs0,56,62,1|h4mubz,56,62,1|h4muc0,55,38,0|hcx2fz,55,38,0|hcx2g0,56,62,1|hncwzz,56,62,1|hncx00,55,38,0|hvn53z,55,38,0|hvn540,56,62,1|i6fybz,56,62,1|i6fyc0,55,38,0|ied7rz,55,38,0|ied7s0,56,62,1|ip60zz,56,62,1|ip6100,55,38,0|ix3afz,55,38,0|ix3ag0,56,62,1|j7w3nz,56,62,1|j7w3o0,55,38,0|jeqh3z,55,38,0|jeqh40,56,62,1|jqz4zz,56,62,1|jqz500,55,38,0|jxgjrz,55,38,0|jxgjs0,56,62,1|k9p7nz,56,62,1|k9p7o0,55,38,0|kg6mfz,55,38,0|kg6mg0,56,62,1|ksfabz,56,62,1|ksfac0,55,38,0|kz9nrz,55,38,0|kz9ns0,56,62,1|lbibnz,56,62,1|lbibo0,55,38,0|lhzqfz,55,38,0|lhzqg0,56,62,1|lu8ebz,56,62,1|lu8ec0,55,38,0|m0pt3z,55,38,0|m0pt40,56,62,1|mcygzz,56,62,1|mcyh00,55,38,0|mjfvrz,55,38,0|mjfvs0,56,62,1|mvojnz,56,62,1|mvojo0,55,38,0|n25yfz,55,38,0|n25yg0,56,62,1|neembz,56,62,1|neemc0,55,38,0|nkw13z,55,38,0|nkw140,56,62,1|nx4ozz,56,62,1|nx4p00,55,38,0|o3z2fz,55,38,0|o3z2g0,56,62,1|og7qbz,56,62,1|og7qc0,55,38,0|omp53z,55,38,0|omp540,56,62,1|oyxszz,56,62,1|oyxt00,55,38,0|p5f7rz,55,38,0|p5f7s0,56,62,1|phnvnz,56,62,1|phnvo0,55,38,0|po5afz,55,38,0|po5ag0,56,62,1|q0dybz,56,62,1|q0dyc0,55,38,0|q6vd3z,55,38,0|q6vd40,56,62,1|qj40zz,56,62,1|qj4100,55,38,0|qpyefz,55,38,0|qpyeg0,56,62,1|r272bz,56,62,1|r272c0,55,38,0|r8oh3z,55,38,0|r8oh40,56,62,1|rkx4zz,56,62,1|rkx500,55,38,0|rrejrz,55,38,0|rrejs0,56,62,1|s3n7nz,56,62,1|s3n7o0,55,38,0|sa4mfz,55,38,0|sa4mg0,56,62,1|smdabz,56,62,1|smdac0,55,38,0|ssup3z,55,38,0|ssup40,56,62,1|t53czz,56,62,1|t53d00,55,38,0|tbkrrz,55,38,0|tbkrs0,56,62,1|tntfnz,56,62,1|tntfo0,55,38,0|tunt3z,55,38,0|tunt40,56,62,1|u6wgzz,56,62,1|u6wh00,55,38,0|uddvrz,55,38,0|uddvs0,56,62,1|upmjnz,56,62,1|upmjo0,55,38,0|uw3yfz,55,38,0|uw3yg0,56,62,1|v8cmbz,56,62,1|v8cmc0,55,38,0|veu13z,55,38,0|veu140,56,62,1|vr2ozz,56,62,1|vr2p00,55,38,0|vxk3rz,55,38,0|vxk3s0,56,62,1|w9srnz,56,62,1|w9sro0,55,38,0|wgn53z,55,38,0|wgn540,56,62,1|wsvszz,56,62,1|wsvt00,55,38,0|wzd7rz,55,38,0|wzd7s0,56,62,1|xblvnz,56,62,1|xblvo0,55,38,0|xi3afz,55,38,0|xi3ag0,56,62,1|xubybz,56,62,1|xubyc0,55,38,0|y0td3z,55,38,0|y0td40,56,62,1|yd20zz,56,62,1|yd2100,55,38,0|yjjfrz,55,38,0|yjjfs0,56,62,1|yvs3nz,56,62,1|yvs3o0,55,38,0|z29ifz,55,38,0|z29ig0,56,62,1|zei6bz,56,62,1|zei6c0,55,38,0|zlcjrz,55,38,0|zlcjs0,56,62,1|zxl7nz,56,62,1|zxl7o0,55,38,0|1042mfz,55,38,0|1042mg0,56,62,1|10gbabz,56,62,1|10gbac0,55,38,0|10msp3z,55,38,0|10msp40,56,62,1|10z1czz,56,62,1|10z1d00,55,38,0|115irrz,55,38,0|115irs0,56,62,1|11hrfnz,56,62,1|11hrfo0,55,38,0|11o8ufz,55,38,0|11o8ug0,56,62,1|120hibz,56,62,1|120hic0,55,38,0|126yx3z,55,38,0|126yx40,56,62,1|12j7kzz,56,62,1|12j7l00,55,38,0|12q1yfz,55,38,0|12q1yg0,56,62,1|132ambz,56,62,1|132amc0,55,38,0|138s13z,55,38,0|138s140,56,62,1|13l0ozz,56,62,1|13l0p00,55,38,0|13ri3rz,55,38,0|13ri3s0,56,62,1|143qrnz,56,62,1|143qro0,55,38,0|14a86fz,55,38,0|14a86g0,56,62,1|14mgubz,56,62,1|14mguc0,55,38,0|14sy93z,55,38,0|14sy940,56,62,1|1556wzz,56,62,1|1556x00,55,38,0|15c1afz,55,38,0|15c1ag0,56,62,1|15o9ybz,56,62,1|15o9yc0,55,38,0|15urd3z,55,38,0|15urd40,56,62,1|16700zz,56,62,1|1670100,55,38,0|16dhfrz,55,38,0|16dhfs0,56,62,1|16pq3nz,56,62,1|16pq3o0,55,38,0|16w7ifz,55,38,0|16w7ig0,56,62,1|178g6bz,56,62,1|178g6c0,55,38,0|17exl3z,55,38,0|17exl40,56,62,1|17r68zz,56,62,1|17r6900,55,38,0|17xnnrz,55,38,0|17xnns0,56,62,1|189wbnz,56,62,1|189wbo0,55,38,0|18gqp3z,55,38,0|18gqp40,56,62,1|18szczz,56,62,1|18szd00,55,38,0|18zgrrz,55,38,0|18zgrs0,56,62,1|19bpfnz,56,62,1|19bpfo0,55,38,0|19i6ufz,55,38,0|19i6ug0,56,62,1|19ufibz,56,62,1|19ufic0,55,38,0|1a0wx3z,55,38,0|1a0wx40,56,62,1|1ad5kzz,56,62,1|1ad5l00,55,38,0|1ajmzrz,55,38,0|1ajmzs0,56,62,1|1avvnnz,56,62,1|1avvno0,55,38,0|1b2q13z,55,38,0|1b2q140,56,62,1|1beyozz,56,62,1|1beyp00,55,38,0|1blg3rz,55,38,0|1blg3s0,56,62,1|1bxornz,56,62,1|1bxoro0,55,38,0|1c466fz,55,38,0|1c466g0,56,62,1|1cgeubz,56,62,1|1cgeuc0,55,38,0|1cmw93z,55,38,0|1cmw940,56,62,1|1cz4wzz,56,62,1|1cz4x00,55,38,0|1d5mbrz,55,38,0|1d5mbs0,56,62,1|1dhuznz,56,62,1|1dhuzo0,55,38,0|1docefz,55,38,0|1doceg0,56,62,1|1e0l2bz,56,62,1|1e0l2c0,55,38,0|1e7ffrz,55,38,0|1e7ffs0,56,62,1|1ejo3nz,56,62,1|1ejo3o0,55,38,0|1eq5ifz,55,38,0|1eq5ig0,56,62,1|1f2e6bz,56,62,1|1f2e6c0,55,38,0|1f8vl3z,55,38,0|1f8vl40,56,62,1|1fl48zz,56,62,1|1fl4900,55,38,0|1frlnrz,55,38,0|1frlns0,56,62,1|1g3ubnz,56,62,1|1g3ubo0,55,38,0|1gabqfz,55,38,0|1gabqg0,56,62,1|1gmkebz,56,62,1|1gmkec0,55,38,0|1gt1t3z,55,38,0|1gt1t40,56,62,1|1h5agzz,56,62,1|1h5ah00,55,38,0|1hc4ufz,55,38,0|1hc4ug0,56,62,1|1hodibz,56,62,1|1hodic0,55,38,0|1huux3z,55,38,0|1huux40,56,62,1|1i73kzz,56,62,1|1i73l00,55,38,0|1idkzrz,55,38,0|1idkzs0,56,62,1|1iptnnz,56,62,1|1iptno0,55,38,0|1iwb2fz,55,38,0|1iwb2g0,56,62,1|1j8jqbz,56,62,1|1j8jqc0,55,38,0|1jf153z,55,38,0|1jf1540,56,62,1|1jr9szz,56,62,1|1jr9t00,55,38,0|1jy46fz,55,38,0|1jy46g0,56,62,1|1kacubz,56,62,1|1kacuc0,55,38,0|1kgu93z,55,38,0|1kgu940,56,62,1|1kt2wzz,56,62,1|1kt2x00,55,38,0|1kzkbrz,55,38,0|1kzkbs0,56,62,1|1lbsznz,56,62,1|1lbszo0,55,38,0|1liaefz,55,38,0|1liaeg0,56,62,1|1luj2bz,56,62,1|1luj2c0,55,38,0|1m10h3z,55,38,0|1m10h40,56,62,1|1md94zz,56,62,1|1md9500,55,38,0|1mjqjrz,55,38,0|1mjqjs0,56,62,1|1mvz7nz,56,62,1|1mvz7o0,55,38,0|1n2tl3z,55,38,0|1n2tl40,56,62,1|1nf28zz,56,62,1|1nf2900,55,38,0|1nljnrz,55,38,0|1nljns0,56,62,1|1nxsbnz,56,62,1|1nxsbo0,55,38,0|1o49qfz,55,38,0|1o49qg0,56,62,1|1ogiebz,56,62,1|1ogiec0,55,38,0|1omzt3z,55,38,0|1omzt40,56,62,1|1oz8gzz,56,62,1|1oz8h00,55,38,0|1p5pvrz,55,38,0|1p5pvs0,56,62,1|1phyjnz,56,62,1|1phyjo0,55,38,0|1posx3z,55,38,0|1posx40,56,62,1|1q11kzz,56,62,1|1q11l00,55,38,0|1q7izrz,55,38,0|1q7izs0,56,62,1|1qjrnnz,56,62,1|1qjrno0,55,38,0|1qq92fz,55,38,0|1qq92g0,56,62,1|1r2hqbz,56,62,1|1r2hqc0,55,38,0|1r8z53z,55,38,0|1r8z540,56,62,1|1rl7szz,56,62,1|1rl7t00,55,38,0|1rrp7rz,55,38,0|1rrp7s0,56,62,1|1s3xvnz,56,62,1|1s3xvo0,55,38,0|1safafz,55,38,0|1safag0,56,62,1|1smnybz,56,62,1|1smnyc0,55,38,0|1stibrz,55,38,0|1stibs0,56,62,1|1t5qznz,56,62,1|1t5qzo0,55,38,0|1tc8efz,55,38,0|1tc8eg0,56,62,1|1toh2bz,56,62,1|1toh2c0,55,38,0|1tuyh3z,55,38,0|1tuyh40,56,62,1|1u774zz,56,62,1|1u77500,55,38,0|1udojrz,55,38,0|1udojs0,56,62,1|1upx7nz,56,62,1|1upx7o0,55,38,0|1uwemfz,55,38,0|1uwemg0,56,62,1|1v8nabz,56,62,1|1v8nac0,55,38,0|1vf4p3z,55,38,0|1vf4p40,56,62,1|1vrdczz,56,62,1|1vrdd00,55,38,0|NaN,55,38,0",
        "America/Whitehorse|,0,178,0|-1079tnp,0,178,0|-1079tno,35,35,0|-qzoms1,35,35,0|-qzoms0,63,38,1|-qplqw1,63,38,1|-qplqw0,35,35,0|-qess41,35,35,0|-qess40,63,38,1|-q6kps1,63,38,1|-q6kps0,35,35,0|-ek1tg1,35,35,0|-ek1tg0,64,38,1|-cq2tg1,64,38,1|-cq2tg0,65,38,1|-cnos81,65,38,1|-cnos80,35,35,0|-2g1oc1,35,35,0|-2g1oc0,66,62,1|-26boc1,66,62,1|-26boc0,35,35,0|-207b01,35,35,0|-207b00,55,38,0|5dwefz,55,38,0|5dweg0,56,62,1|5n9czz,56,62,1|5n9d00,55,38,0|5wmh3z,55,38,0|5wmh40,56,62,1|65zfnz,56,62,1|65zfo0,55,38,0|6fcjrz,55,38,0|6fcjs0,56,62,1|6p2gzz,56,62,1|6p2h00,55,38,0|6y2mfz,55,38,0|6y2mg0,56,62,1|77sjnz,56,62,1|77sjo0,55,38,0|7h5nrz,55,38,0|7h5ns0,56,62,1|7qimbz,56,62,1|7qimc0,55,38,0|7zvqfz,55,38,0|7zvqg0,56,62,1|898ozz,56,62,1|898p00,55,38,0|8ilt3z,55,38,0|8ilt40,56,62,1|8ryrnz,56,62,1|8ryro0,55,38,0|908zrz,55,38,0|908zs0,56,62,1|9aoubz,56,62,1|9aouc0,55,38,0|9iz2fz,55,38,0|9iz2g0,56,62,1|9trvnz,56,62,1|9trvo0,55,38,0|a1p53z,55,38,0|a1p540,56,62,1|achybz,56,62,1|achyc0,55,38,0|akf7rz,55,38,0|akf7s0,56,62,1|av80zz,56,62,1|av8100,55,38,0|b3i93z,55,38,0|b3i940,56,62,1|bdy3nz,56,62,1|bdy3o0,55,38,0|bm8brz,55,38,0|bm8bs0,56,62,1|bwo6bz,56,62,1|bwo6c0,55,38,0|c4yefz,55,38,0|c4yeg0,56,62,1|cfr7nz,56,62,1|cfr7o0,55,38,0|cnoh3z,55,38,0|cnoh40,56,62,1|cyhabz,56,62,1|cyhac0,55,38,0|d6ejrz,55,38,0|d6ejs0,56,62,1|dh7czz,56,62,1|dh7d00,55,38,0|dphl3z,55,38,0|dphl40,56,62,1|dzxfnz,56,62,1|dzxfo0,55,38,0|e87nrz,55,38,0|e87ns0,56,62,1|einibz,56,62,1|einic0,55,38,0|eqxqfz,55,38,0|eqxqg0,56,62,1|f1dkzz,56,62,1|f1dl00,55,38,0|f9nt3z,55,38,0|f9nt40,56,62,1|fkgmbz,56,62,1|fkgmc0,55,38,0|fsdvrz,55,38,0|fsdvs0,56,62,1|g36ozz,56,62,1|g36p00,55,38,0|gb3yfz,55,38,0|gb3yg0,56,62,1|glwrnz,56,62,1|glwro0,55,38,0|gu6zrz,55,38,0|gu6zs0,56,62,1|h4mubz,56,62,1|h4muc0,55,38,0|hcx2fz,55,38,0|hcx2g0,56,62,1|hncwzz,56,62,1|hncx00,55,38,0|hvn53z,55,38,0|hvn540,56,62,1|i6fybz,56,62,1|i6fyc0,55,38,0|ied7rz,55,38,0|ied7s0,56,62,1|ip60zz,56,62,1|ip6100,55,38,0|ix3afz,55,38,0|ix3ag0,56,62,1|j7w3nz,56,62,1|j7w3o0,55,38,0|jeqh3z,55,38,0|jeqh40,56,62,1|jqz4zz,56,62,1|jqz500,55,38,0|jxgjrz,55,38,0|jxgjs0,56,62,1|k9p7nz,56,62,1|k9p7o0,55,38,0|kg6mfz,55,38,0|kg6mg0,56,62,1|ksfabz,56,62,1|ksfac0,55,38,0|kz9nrz,55,38,0|kz9ns0,56,62,1|lbibnz,56,62,1|lbibo0,55,38,0|lhzqfz,55,38,0|lhzqg0,56,62,1|lu8ebz,56,62,1|lu8ec0,55,38,0|m0pt3z,55,38,0|m0pt40,56,62,1|mcygzz,56,62,1|mcyh00,55,38,0|mjfvrz,55,38,0|mjfvs0,56,62,1|mvojnz,56,62,1|mvojo0,55,38,0|n25yfz,55,38,0|n25yg0,56,62,1|neembz,56,62,1|neemc0,55,38,0|nkw13z,55,38,0|nkw140,56,62,1|nx4ozz,56,62,1|nx4p00,55,38,0|o3z2fz,55,38,0|o3z2g0,56,62,1|og7qbz,56,62,1|og7qc0,55,38,0|omp53z,55,38,0|omp540,56,62,1|oyxszz,56,62,1|oyxt00,55,38,0|p5f7rz,55,38,0|p5f7s0,56,62,1|phnvnz,56,62,1|phnvo0,55,38,0|po5afz,55,38,0|po5ag0,56,62,1|q0dybz,56,62,1|q0dyc0,55,38,0|q6vd3z,55,38,0|q6vd40,56,62,1|qj3vfz,56,62,1|qj3vg0,44,62,0|NaN,44,62,0",
        "America/Winnipeg|,0,162,0|-171bfcd,0,162,0|-171bfcc,45,63,0|-s0s7c1,45,63,0|-s0s7c0,47,59,1|-rt8241,47,59,1|-rt8240,45,63,0|-qzov41,45,63,0|-qzov40,47,59,1|-qplz81,47,59,1|-qplz80,45,63,0|-h11r41,45,63,0|-h11r40,47,59,1|-gu7j81,47,59,1|-gu7j80,45,63,0|-ek21s1,45,63,0|-ek21s0,51,59,1|-cq2tg1,51,59,1|-cq2tg0,52,59,1|-cnp0k1,52,59,1|-cnp0k0,45,63,0|-cc64g1,45,63,0|-cc64g0,47,59,1|-c490k1,47,59,1|-c490k0,45,63,0|-bu5z41,45,63,0|-bu5z40,47,59,1|-bm8v81,47,59,1|-bm8v80,45,63,0|-bbfwg1,45,63,0|-bbfwg0,47,59,1|-b3isk1,47,59,1|-b3isk0,45,63,0|-aspts1,45,63,0|-aspts0,47,59,1|-akspw1,47,59,1|-akspw0,45,63,0|-a9kxs1,45,63,0|-a9kxs0,47,59,1|-a1rj81,47,59,1|-a1rj80,45,63,0|-9qwps1,45,63,0|-9qwps0,47,59,1|-9izlw1,47,59,1|-9izlw0,45,63,0|-986n41,45,63,0|-986n40,47,59,1|-909j81,47,59,1|-909j80,45,63,0|-8pgkg1,45,63,0|-8pgkg0,47,59,1|-8hjgk1,47,59,1|-8hjgk0,45,63,0|-86qhs1,45,63,0|-86qhs0,47,59,1|-7ytdw1,47,59,1|-7ytdw0,45,63,0|-7o0f41,45,63,0|-7o0f40,47,59,1|-7g3b81,47,59,1|-7g3b80,45,63,0|-74xds1,45,63,0|-74xds0,47,59,1|-6x09w1,47,59,1|-6x09w0,45,63,0|-6m7b41,45,63,0|-6m7b40,47,59,1|-6ea781,47,59,1|-6ea780,45,63,0|-63h8g1,45,63,0|-63h8g0,47,59,1|-5vk4k1,47,59,1|-5vk4k0,45,63,0|-5kr5s1,45,63,0|-5kr5s0,47,59,1|-5be781,47,59,1|-5be780,45,63,0|-521341,45,63,0|-521340,47,59,1|-4u3z81,47,59,1|-4u3z80,45,63,0|-3hhwg1,45,63,0|-3hhwg0,47,59,1|-39xr81,47,59,1|-39xr80,45,63,0|-1xbog1,45,63,0|-1xbog0,47,59,1|-1nlog1,47,59,1|-1nlog0,45,63,0|-1e8n41,45,63,0|-1e8n40,47,59,1|-14vls1,47,59,1|-14vls0,45,63,0|-vikg1,45,63,0|-vikg0,47,59,1|-m5j41,47,59,1|-m5j40,45,63,0|-cshs1,45,63,0|-cshs0,47,59,1|-3fgg1,47,59,1|-3fgg0,45,63,0|5xkvz,45,63,0|5xkw0,47,59,1|fam7z,47,59,1|fam80,45,63,0|onnjz,45,63,0|onnk0,47,59,1|ydnjz,47,59,1|ydnk0,45,63,0|17qovz,45,63,0|17qow0,47,59,1|1h3q7z,47,59,1|1h3q80,45,63,0|1qgrjz,45,63,0|1qgrk0,47,59,1|1ztsvz,47,59,1|1ztsw0,45,63,0|296u7z,45,63,0|296u80,47,59,1|2ijvjz,47,59,1|2ijvk0,45,63,0|2rwwvz,45,63,0|2rwww0,47,59,1|319y7z,47,59,1|319y80,45,63,0|3amzjz,45,63,0|3amzk0,47,59,1|3kczjz,47,59,1|3kczk0,45,63,0|3td27z,45,63,0|3td280,47,59,1|43327z,47,59,1|433280,45,63,0|4cg3jz,45,63,0|4cg3k0,47,59,1|4lt4vz,47,59,1|4lt4w0,45,63,0|4v667z,45,63,0|4v6680,47,59,1|54j7jz,47,59,1|54j7k0,45,63,0|5dw8vz,45,63,0|5dw8w0,47,59,1|5n9a7z,47,59,1|5n9a80,45,63,0|5wmbjz,45,63,0|5wmbk0,47,59,1|65zcvz,47,59,1|65zcw0,45,63,0|6fce7z,45,63,0|6fce80,47,59,1|6p2e7z,47,59,1|6p2e80,45,63,0|6y2gvz,45,63,0|6y2gw0,47,59,1|77sgvz,47,59,1|77sgw0,45,63,0|7h5i7z,45,63,0|7h5i80,47,59,1|7qijjz,47,59,1|7qijk0,45,63,0|7zvkvz,45,63,0|7zvkw0,47,59,1|898m7z,47,59,1|898m80,45,63,0|8ilnjz,45,63,0|8ilnk0,47,59,1|8ryovz,47,59,1|8ryow0,45,63,0|908u7z,45,63,0|908u80,47,59,1|9aorjz,47,59,1|9aork0,45,63,0|9iywvz,45,63,0|9iyww0,47,59,1|9trsvz,47,59,1|9trsw0,45,63,0|a1ozjz,45,63,0|a1ozk0,47,59,1|achvjz,47,59,1|achvk0,45,63,0|akf27z,45,63,0|akf280,47,59,1|av7y7z,47,59,1|av7y80,45,63,0|b3i3jz,45,63,0|b3i3k0,47,59,1|bdy0vz,47,59,1|bdy0w0,45,63,0|bm867z,45,63,0|bm8680,47,59,1|bwo3jz,47,59,1|bwo3k0,45,63,0|c4y8vz,45,63,0|c4y8w0,47,59,1|cfr4vz,47,59,1|cfr4w0,45,63,0|cnobjz,45,63,0|cnobk0,47,59,1|cyh7jz,47,59,1|cyh7k0,45,63,0|d6ee7z,45,63,0|d6ee80,47,59,1|dh7a7z,47,59,1|dh7a80,45,63,0|dphfjz,45,63,0|dphfk0,47,59,1|dzxcvz,47,59,1|dzxcw0,45,63,0|e87i7z,45,63,0|e87i80,47,59,1|einfjz,47,59,1|einfk0,45,63,0|eqxkvz,45,63,0|eqxkw0,47,59,1|f1di7z,47,59,1|f1di80,45,63,0|f9nnjz,45,63,0|f9nnk0,47,59,1|fkgjjz,47,59,1|fkgjk0,45,63,0|fsdq7z,45,63,0|fsdq80,47,59,1|g36m7z,47,59,1|g36m80,45,63,0|gb3svz,45,63,0|gb3sw0,47,59,1|glwovz,47,59,1|glwow0,45,63,0|gu6u7z,45,63,0|gu6u80,47,59,1|h4mrjz,47,59,1|h4mrk0,45,63,0|hcwwvz,45,63,0|hcwww0,47,59,1|hncu7z,47,59,1|hncu80,45,63,0|hvmzjz,45,63,0|hvmzk0,47,59,1|i6fvjz,47,59,1|i6fvk0,45,63,0|ied27z,45,63,0|ied280,47,59,1|ip5y7z,47,59,1|ip5y80,45,63,0|ix34vz,45,63,0|ix34w0,47,59,1|j7vy3z,47,59,1|j7vy40,45,63,0|jeqbjz,45,63,0|jeqbk0,47,59,1|jqyzfz,47,59,1|jqyzg0,45,63,0|jxge7z,45,63,0|jxge80,47,59,1|k9p23z,47,59,1|k9p240,45,63,0|kg6gvz,45,63,0|kg6gw0,47,59,1|ksf4rz,47,59,1|ksf4s0,45,63,0|kz9i7z,45,63,0|kz9i80,47,59,1|lbi63z,47,59,1|lbi640,45,63,0|lhzkvz,45,63,0|lhzkw0,47,59,1|lu88rz,47,59,1|lu88s0,45,63,0|m0pnjz,45,63,0|m0pnk0,47,59,1|mcybfz,47,59,1|mcybg0,45,63,0|mjfq7z,45,63,0|mjfq80,47,59,1|mvoe3z,47,59,1|mvoe40,45,63,0|n25svz,45,63,0|n25sw0,47,59,1|neegrz,47,59,1|neegs0,45,63,0|nkvvjz,45,63,0|nkvvk0,47,59,1|nx4jfz,47,59,1|nx4jg0,45,63,0|o3ywvz,45,63,0|o3yww0,47,59,1|og7krz,47,59,1|og7ks0,45,63,0|omozjz,45,63,0|omozk0,47,59,1|oyxnfz,47,59,1|oyxng0,45,63,0|p5f27z,45,63,0|p5f280,47,59,1|phnq3z,47,59,1|phnq40,45,63,0|po54vz,45,63,0|po54w0,47,59,1|q0dsrz,47,59,1|q0dss0,45,63,0|q6v7jz,45,63,0|q6v7k0,47,59,1|qj3vfz,47,59,1|qj3vg0,45,63,0|qpy8vz,45,63,0|qpy8w0,47,59,1|r26wrz,47,59,1|r26ws0,45,63,0|r8objz,45,63,0|r8obk0,47,59,1|rkwzfz,47,59,1|rkwzg0,45,63,0|rree7z,45,63,0|rree80,47,59,1|s3n23z,47,59,1|s3n240,45,63,0|sa4gvz,45,63,0|sa4gw0,47,59,1|smd4rz,47,59,1|smd4s0,45,63,0|ssujjz,45,63,0|ssujk0,47,59,1|t537fz,47,59,1|t537g0,45,63,0|tbkm7z,45,63,0|tbkm80,47,59,1|tnta3z,47,59,1|tnta40,45,63,0|tunnjz,45,63,0|tunnk0,47,59,1|u6wbfz,47,59,1|u6wbg0,45,63,0|uddq7z,45,63,0|uddq80,47,59,1|upme3z,47,59,1|upme40,45,63,0|uw3svz,45,63,0|uw3sw0,47,59,1|v8cgrz,47,59,1|v8cgs0,45,63,0|vetvjz,45,63,0|vetvk0,47,59,1|vr2jfz,47,59,1|vr2jg0,45,63,0|vxjy7z,45,63,0|vxjy80,47,59,1|w9sm3z,47,59,1|w9sm40,45,63,0|wgmzjz,45,63,0|wgmzk0,47,59,1|wsvnfz,47,59,1|wsvng0,45,63,0|wzd27z,45,63,0|wzd280,47,59,1|xblq3z,47,59,1|xblq40,45,63,0|xi34vz,45,63,0|xi34w0,47,59,1|xubsrz,47,59,1|xubss0,45,63,0|y0t7jz,45,63,0|y0t7k0,47,59,1|yd1vfz,47,59,1|yd1vg0,45,63,0|yjja7z,45,63,0|yjja80,47,59,1|yvry3z,47,59,1|yvry40,45,63,0|z29cvz,45,63,0|z29cw0,47,59,1|zei0rz,47,59,1|zei0s0,45,63,0|zlce7z,45,63,0|zlce80,47,59,1|zxl23z,47,59,1|zxl240,45,63,0|1042gvz,45,63,0|1042gw0,47,59,1|10gb4rz,47,59,1|10gb4s0,45,63,0|10msjjz,45,63,0|10msjk0,47,59,1|10z17fz,47,59,1|10z17g0,45,63,0|115im7z,45,63,0|115im80,47,59,1|11hra3z,47,59,1|11hra40,45,63,0|11o8ovz,45,63,0|11o8ow0,47,59,1|120hcrz,47,59,1|120hcs0,45,63,0|126yrjz,45,63,0|126yrk0,47,59,1|12j7ffz,47,59,1|12j7fg0,45,63,0|12q1svz,45,63,0|12q1sw0,47,59,1|132agrz,47,59,1|132ags0,45,63,0|138rvjz,45,63,0|138rvk0,47,59,1|13l0jfz,47,59,1|13l0jg0,45,63,0|13rhy7z,45,63,0|13rhy80,47,59,1|143qm3z,47,59,1|143qm40,45,63,0|14a80vz,45,63,0|14a80w0,47,59,1|14mgorz,47,59,1|14mgos0,45,63,0|14sy3jz,45,63,0|14sy3k0,47,59,1|1556rfz,47,59,1|1556rg0,45,63,0|15c14vz,45,63,0|15c14w0,47,59,1|15o9srz,47,59,1|15o9ss0,45,63,0|15ur7jz,45,63,0|15ur7k0,47,59,1|166zvfz,47,59,1|166zvg0,45,63,0|16dha7z,45,63,0|16dha80,47,59,1|16ppy3z,47,59,1|16ppy40,45,63,0|16w7cvz,45,63,0|16w7cw0,47,59,1|178g0rz,47,59,1|178g0s0,45,63,0|17exfjz,45,63,0|17exfk0,47,59,1|17r63fz,47,59,1|17r63g0,45,63,0|17xni7z,45,63,0|17xni80,47,59,1|189w63z,47,59,1|189w640,45,63,0|18gqjjz,45,63,0|18gqjk0,47,59,1|18sz7fz,47,59,1|18sz7g0,45,63,0|18zgm7z,45,63,0|18zgm80,47,59,1|19bpa3z,47,59,1|19bpa40,45,63,0|19i6ovz,45,63,0|19i6ow0,47,59,1|19ufcrz,47,59,1|19ufcs0,45,63,0|1a0wrjz,45,63,0|1a0wrk0,47,59,1|1ad5ffz,47,59,1|1ad5fg0,45,63,0|1ajmu7z,45,63,0|1ajmu80,47,59,1|1avvi3z,47,59,1|1avvi40,45,63,0|1b2pvjz,45,63,0|1b2pvk0,47,59,1|1beyjfz,47,59,1|1beyjg0,45,63,0|1blfy7z,45,63,0|1blfy80,47,59,1|1bxom3z,47,59,1|1bxom40,45,63,0|1c460vz,45,63,0|1c460w0,47,59,1|1cgeorz,47,59,1|1cgeos0,45,63,0|1cmw3jz,45,63,0|1cmw3k0,47,59,1|1cz4rfz,47,59,1|1cz4rg0,45,63,0|1d5m67z,45,63,0|1d5m680,47,59,1|1dhuu3z,47,59,1|1dhuu40,45,63,0|1doc8vz,45,63,0|1doc8w0,47,59,1|1e0kwrz,47,59,1|1e0kws0,45,63,0|1e7fa7z,45,63,0|1e7fa80,47,59,1|1ejny3z,47,59,1|1ejny40,45,63,0|1eq5cvz,45,63,0|1eq5cw0,47,59,1|1f2e0rz,47,59,1|1f2e0s0,45,63,0|1f8vfjz,45,63,0|1f8vfk0,47,59,1|1fl43fz,47,59,1|1fl43g0,45,63,0|1frli7z,45,63,0|1frli80,47,59,1|1g3u63z,47,59,1|1g3u640,45,63,0|1gabkvz,45,63,0|1gabkw0,47,59,1|1gmk8rz,47,59,1|1gmk8s0,45,63,0|1gt1njz,45,63,0|1gt1nk0,47,59,1|1h5abfz,47,59,1|1h5abg0,45,63,0|1hc4ovz,45,63,0|1hc4ow0,47,59,1|1hodcrz,47,59,1|1hodcs0,45,63,0|1huurjz,45,63,0|1huurk0,47,59,1|1i73ffz,47,59,1|1i73fg0,45,63,0|1idku7z,45,63,0|1idku80,47,59,1|1ipti3z,47,59,1|1ipti40,45,63,0|1iwawvz,45,63,0|1iwaww0,47,59,1|1j8jkrz,47,59,1|1j8jks0,45,63,0|1jf0zjz,45,63,0|1jf0zk0,47,59,1|1jr9nfz,47,59,1|1jr9ng0,45,63,0|1jy40vz,45,63,0|1jy40w0,47,59,1|1kacorz,47,59,1|1kacos0,45,63,0|1kgu3jz,45,63,0|1kgu3k0,47,59,1|1kt2rfz,47,59,1|1kt2rg0,45,63,0|1kzk67z,45,63,0|1kzk680,47,59,1|1lbsu3z,47,59,1|1lbsu40,45,63,0|1lia8vz,45,63,0|1lia8w0,47,59,1|1luiwrz,47,59,1|1luiws0,45,63,0|1m10bjz,45,63,0|1m10bk0,47,59,1|1md8zfz,47,59,1|1md8zg0,45,63,0|1mjqe7z,45,63,0|1mjqe80,47,59,1|1mvz23z,47,59,1|1mvz240,45,63,0|1n2tfjz,45,63,0|1n2tfk0,47,59,1|1nf23fz,47,59,1|1nf23g0,45,63,0|1nlji7z,45,63,0|1nlji80,47,59,1|1nxs63z,47,59,1|1nxs640,45,63,0|1o49kvz,45,63,0|1o49kw0,47,59,1|1ogi8rz,47,59,1|1ogi8s0,45,63,0|1omznjz,45,63,0|1omznk0,47,59,1|1oz8bfz,47,59,1|1oz8bg0,45,63,0|1p5pq7z,45,63,0|1p5pq80,47,59,1|1phye3z,47,59,1|1phye40,45,63,0|1posrjz,45,63,0|1posrk0,47,59,1|1q11ffz,47,59,1|1q11fg0,45,63,0|1q7iu7z,45,63,0|1q7iu80,47,59,1|1qjri3z,47,59,1|1qjri40,45,63,0|1qq8wvz,45,63,0|1qq8ww0,47,59,1|1r2hkrz,47,59,1|1r2hks0,45,63,0|1r8yzjz,45,63,0|1r8yzk0,47,59,1|1rl7nfz,47,59,1|1rl7ng0,45,63,0|1rrp27z,45,63,0|1rrp280,47,59,1|1s3xq3z,47,59,1|1s3xq40,45,63,0|1saf4vz,45,63,0|1saf4w0,47,59,1|1smnsrz,47,59,1|1smnss0,45,63,0|1sti67z,45,63,0|1sti680,47,59,1|1t5qu3z,47,59,1|1t5qu40,45,63,0|1tc88vz,45,63,0|1tc88w0,47,59,1|1togwrz,47,59,1|1togws0,45,63,0|1tuybjz,45,63,0|1tuybk0,47,59,1|1u76zfz,47,59,1|1u76zg0,45,63,0|1udoe7z,45,63,0|1udoe80,47,59,1|1upx23z,47,59,1|1upx240,45,63,0|1uwegvz,45,63,0|1uwegw0,47,59,1|1v8n4rz,47,59,1|1v8n4s0,45,63,0|1vf4jjz,45,63,0|1vf4jk0,47,59,1|1vrd7fz,47,59,1|1vrd7g0,45,63,0|NaN,45,63,0",
        "America/Yakutat|,0,179,0|-1hc7qk0,0,179,0|-1hc7qjz,0,180,0|-1078vgi,0,180,0|-1078vgh,35,35,0|-ek1tg1,35,35,0|-ek1tg0,64,38,1|-cq2tg1,64,38,1|-cq2tg0,65,38,1|-cnos81,65,38,1|-cnos80,35,35,0|-cs9g1,35,35,0|-cs9g0,63,38,1|-3faw1,63,38,1|-3faw0,35,35,0|5xt7z,35,35,0|5xt80,63,38,1|farrz,63,38,1|fars0,35,35,0|onvvz,35,35,0|onvw0,63,38,1|ydt3z,63,38,1|ydt40,35,35,0|17qx7z,35,35,0|17qx80,63,38,1|1h3vrz,63,38,1|1h3vs0,35,35,0|1qgzvz,35,35,0|1qgzw0,63,38,1|1ztyfz,63,38,1|1ztyg0,35,35,0|23fnvz,35,35,0|23fnw0,63,38,1|2ik13z,63,38,1|2ik140,35,35,0|2ooh7z,35,35,0|2ooh80,63,38,1|31a3rz,63,38,1|31a3s0,35,35,0|3an7vz,35,35,0|3an7w0,63,38,1|3kd53z,63,38,1|3kd540,35,35,0|3tdajz,35,35,0|3tdak0,63,38,1|4337rz,63,38,1|4337s0,35,35,0|4cgbvz,35,35,0|4cgbw0,63,38,1|4ltafz,63,38,1|4ltag0,35,35,0|4v6ejz,35,35,0|4v6ek0,63,38,1|54jd3z,63,38,1|54jd40,35,35,0|5dwh7z,35,35,0|5dwh80,63,38,1|5n9frz,63,38,1|5n9fs0,35,35,0|5wmjvz,35,35,0|5wmjw0,63,38,1|65zifz,63,38,1|65zig0,35,35,0|6fcmjz,35,35,0|6fcmk0,63,38,1|6p2jrz,63,38,1|6p2js0,35,35,0|6y2p7z,35,35,0|6y2p80,63,38,1|77smfz,63,38,1|77smg0,35,35,0|79dybz,35,35,0|79dyc0,36,35,0|7h5qjz,36,35,0|7h5qk0,37,38,1|7qip3z,37,38,1|7qip40,36,35,0|7zvt7z,36,35,0|7zvt80,37,38,1|898rrz,37,38,1|898rs0,36,35,0|8ilvvz,36,35,0|8ilvw0,37,38,1|8ryufz,37,38,1|8ryug0,36,35,0|9092jz,36,35,0|9092k0,37,38,1|9aox3z,37,38,1|9aox40,36,35,0|9iz57z,36,35,0|9iz580,37,38,1|9tryfz,37,38,1|9tryg0,36,35,0|a1p7vz,36,35,0|a1p7w0,37,38,1|aci13z,37,38,1|aci140,36,35,0|akfajz,36,35,0|akfak0,37,38,1|av83rz,37,38,1|av83s0,36,35,0|b3ibvz,36,35,0|b3ibw0,37,38,1|bdy6fz,37,38,1|bdy6g0,36,35,0|bm8ejz,36,35,0|bm8ek0,37,38,1|bwo93z,37,38,1|bwo940,36,35,0|c4yh7z,36,35,0|c4yh80,37,38,1|cfrafz,37,38,1|cfrag0,36,35,0|cnojvz,36,35,0|cnojw0,37,38,1|cyhd3z,37,38,1|cyhd40,36,35,0|d6emjz,36,35,0|d6emk0,37,38,1|dh7frz,37,38,1|dh7fs0,36,35,0|dphnvz,36,35,0|dphnw0,37,38,1|dzxifz,37,38,1|dzxig0,36,35,0|e87qjz,36,35,0|e87qk0,37,38,1|einl3z,37,38,1|einl40,36,35,0|eqxt7z,36,35,0|eqxt80,37,38,1|f1dnrz,37,38,1|f1dns0,36,35,0|f9nvvz,36,35,0|f9nvw0,37,38,1|fkgp3z,37,38,1|fkgp40,36,35,0|fsdyjz,36,35,0|fsdyk0,37,38,1|g36rrz,37,38,1|g36rs0,36,35,0|gb417z,36,35,0|gb4180,37,38,1|glwufz,37,38,1|glwug0,36,35,0|gu72jz,36,35,0|gu72k0,37,38,1|h4mx3z,37,38,1|h4mx40,36,35,0|hcx57z,36,35,0|hcx580,37,38,1|hnczrz,37,38,1|hnczs0,36,35,0|hvn7vz,36,35,0|hvn7w0,37,38,1|i6g13z,37,38,1|i6g140,36,35,0|iedajz,36,35,0|iedak0,37,38,1|ip63rz,37,38,1|ip63s0,36,35,0|ix3d7z,36,35,0|ix3d80,37,38,1|j7w6fz,37,38,1|j7w6g0,36,35,0|jeqjvz,36,35,0|jeqjw0,37,38,1|jqz7rz,37,38,1|jqz7s0,36,35,0|jxgmjz,36,35,0|jxgmk0,37,38,1|k9pafz,37,38,1|k9pag0,36,35,0|kg6p7z,36,35,0|kg6p80,37,38,1|ksfd3z,37,38,1|ksfd40,36,35,0|kz9qjz,36,35,0|kz9qk0,37,38,1|lbiefz,37,38,1|lbieg0,36,35,0|lhzt7z,36,35,0|lhzt80,37,38,1|lu8h3z,37,38,1|lu8h40,36,35,0|m0pvvz,36,35,0|m0pvw0,37,38,1|mcyjrz,37,38,1|mcyjs0,36,35,0|mjfyjz,36,35,0|mjfyk0,37,38,1|mvomfz,37,38,1|mvomg0,36,35,0|n2617z,36,35,0|n26180,37,38,1|neep3z,37,38,1|neep40,36,35,0|nkw3vz,36,35,0|nkw3w0,37,38,1|nx4rrz,37,38,1|nx4rs0,36,35,0|o3z57z,36,35,0|o3z580,37,38,1|og7t3z,37,38,1|og7t40,36,35,0|omp7vz,36,35,0|omp7w0,37,38,1|oyxvrz,37,38,1|oyxvs0,36,35,0|p5fajz,36,35,0|p5fak0,37,38,1|phnyfz,37,38,1|phnyg0,36,35,0|po5d7z,36,35,0|po5d80,37,38,1|q0e13z,37,38,1|q0e140,36,35,0|q6vfvz,36,35,0|q6vfw0,37,38,1|qj43rz,37,38,1|qj43s0,36,35,0|qpyh7z,36,35,0|qpyh80,37,38,1|r2753z,37,38,1|r27540,36,35,0|r8ojvz,36,35,0|r8ojw0,37,38,1|rkx7rz,37,38,1|rkx7s0,36,35,0|rremjz,36,35,0|rremk0,37,38,1|s3nafz,37,38,1|s3nag0,36,35,0|sa4p7z,36,35,0|sa4p80,37,38,1|smdd3z,37,38,1|smdd40,36,35,0|ssurvz,36,35,0|ssurw0,37,38,1|t53frz,37,38,1|t53fs0,36,35,0|tbkujz,36,35,0|tbkuk0,37,38,1|tntifz,37,38,1|tntig0,36,35,0|tunvvz,36,35,0|tunvw0,37,38,1|u6wjrz,37,38,1|u6wjs0,36,35,0|uddyjz,36,35,0|uddyk0,37,38,1|upmmfz,37,38,1|upmmg0,36,35,0|uw417z,36,35,0|uw4180,37,38,1|v8cp3z,37,38,1|v8cp40,36,35,0|veu3vz,36,35,0|veu3w0,37,38,1|vr2rrz,37,38,1|vr2rs0,36,35,0|vxk6jz,36,35,0|vxk6k0,37,38,1|w9sufz,37,38,1|w9sug0,36,35,0|wgn7vz,36,35,0|wgn7w0,37,38,1|wsvvrz,37,38,1|wsvvs0,36,35,0|wzdajz,36,35,0|wzdak0,37,38,1|xblyfz,37,38,1|xblyg0,36,35,0|xi3d7z,36,35,0|xi3d80,37,38,1|xuc13z,37,38,1|xuc140,36,35,0|y0tfvz,36,35,0|y0tfw0,37,38,1|yd23rz,37,38,1|yd23s0,36,35,0|yjjijz,36,35,0|yjjik0,37,38,1|yvs6fz,37,38,1|yvs6g0,36,35,0|z29l7z,36,35,0|z29l80,37,38,1|zei93z,37,38,1|zei940,36,35,0|zlcmjz,36,35,0|zlcmk0,37,38,1|zxlafz,37,38,1|zxlag0,36,35,0|1042p7z,36,35,0|1042p80,37,38,1|10gbd3z,37,38,1|10gbd40,36,35,0|10msrvz,36,35,0|10msrw0,37,38,1|10z1frz,37,38,1|10z1fs0,36,35,0|115iujz,36,35,0|115iuk0,37,38,1|11hrifz,37,38,1|11hrig0,36,35,0|11o8x7z,36,35,0|11o8x80,37,38,1|120hl3z,37,38,1|120hl40,36,35,0|126yzvz,36,35,0|126yzw0,37,38,1|12j7nrz,37,38,1|12j7ns0,36,35,0|12q217z,36,35,0|12q2180,37,38,1|132ap3z,37,38,1|132ap40,36,35,0|138s3vz,36,35,0|138s3w0,37,38,1|13l0rrz,37,38,1|13l0rs0,36,35,0|13ri6jz,36,35,0|13ri6k0,37,38,1|143qufz,37,38,1|143qug0,36,35,0|14a897z,36,35,0|14a8980,37,38,1|14mgx3z,37,38,1|14mgx40,36,35,0|14sybvz,36,35,0|14sybw0,37,38,1|1556zrz,37,38,1|1556zs0,36,35,0|15c1d7z,36,35,0|15c1d80,37,38,1|15oa13z,37,38,1|15oa140,36,35,0|15urfvz,36,35,0|15urfw0,37,38,1|16703rz,37,38,1|16703s0,36,35,0|16dhijz,36,35,0|16dhik0,37,38,1|16pq6fz,37,38,1|16pq6g0,36,35,0|16w7l7z,36,35,0|16w7l80,37,38,1|178g93z,37,38,1|178g940,36,35,0|17exnvz,36,35,0|17exnw0,37,38,1|17r6brz,37,38,1|17r6bs0,36,35,0|17xnqjz,36,35,0|17xnqk0,37,38,1|189wefz,37,38,1|189weg0,36,35,0|18gqrvz,36,35,0|18gqrw0,37,38,1|18szfrz,37,38,1|18szfs0,36,35,0|18zgujz,36,35,0|18zguk0,37,38,1|19bpifz,37,38,1|19bpig0,36,35,0|19i6x7z,36,35,0|19i6x80,37,38,1|19ufl3z,37,38,1|19ufl40,36,35,0|1a0wzvz,36,35,0|1a0wzw0,37,38,1|1ad5nrz,37,38,1|1ad5ns0,36,35,0|1ajn2jz,36,35,0|1ajn2k0,37,38,1|1avvqfz,37,38,1|1avvqg0,36,35,0|1b2q3vz,36,35,0|1b2q3w0,37,38,1|1beyrrz,37,38,1|1beyrs0,36,35,0|1blg6jz,36,35,0|1blg6k0,37,38,1|1bxoufz,37,38,1|1bxoug0,36,35,0|1c4697z,36,35,0|1c46980,37,38,1|1cgex3z,37,38,1|1cgex40,36,35,0|1cmwbvz,36,35,0|1cmwbw0,37,38,1|1cz4zrz,37,38,1|1cz4zs0,36,35,0|1d5mejz,36,35,0|1d5mek0,37,38,1|1dhv2fz,37,38,1|1dhv2g0,36,35,0|1doch7z,36,35,0|1doch80,37,38,1|1e0l53z,37,38,1|1e0l540,36,35,0|1e7fijz,36,35,0|1e7fik0,37,38,1|1ejo6fz,37,38,1|1ejo6g0,36,35,0|1eq5l7z,36,35,0|1eq5l80,37,38,1|1f2e93z,37,38,1|1f2e940,36,35,0|1f8vnvz,36,35,0|1f8vnw0,37,38,1|1fl4brz,37,38,1|1fl4bs0,36,35,0|1frlqjz,36,35,0|1frlqk0,37,38,1|1g3uefz,37,38,1|1g3ueg0,36,35,0|1gabt7z,36,35,0|1gabt80,37,38,1|1gmkh3z,37,38,1|1gmkh40,36,35,0|1gt1vvz,36,35,0|1gt1vw0,37,38,1|1h5ajrz,37,38,1|1h5ajs0,36,35,0|1hc4x7z,36,35,0|1hc4x80,37,38,1|1hodl3z,37,38,1|1hodl40,36,35,0|1huuzvz,36,35,0|1huuzw0,37,38,1|1i73nrz,37,38,1|1i73ns0,36,35,0|1idl2jz,36,35,0|1idl2k0,37,38,1|1iptqfz,37,38,1|1iptqg0,36,35,0|1iwb57z,36,35,0|1iwb580,37,38,1|1j8jt3z,37,38,1|1j8jt40,36,35,0|1jf17vz,36,35,0|1jf17w0,37,38,1|1jr9vrz,37,38,1|1jr9vs0,36,35,0|1jy497z,36,35,0|1jy4980,37,38,1|1kacx3z,37,38,1|1kacx40,36,35,0|1kgubvz,36,35,0|1kgubw0,37,38,1|1kt2zrz,37,38,1|1kt2zs0,36,35,0|1kzkejz,36,35,0|1kzkek0,37,38,1|1lbt2fz,37,38,1|1lbt2g0,36,35,0|1liah7z,36,35,0|1liah80,37,38,1|1luj53z,37,38,1|1luj540,36,35,0|1m10jvz,36,35,0|1m10jw0,37,38,1|1md97rz,37,38,1|1md97s0,36,35,0|1mjqmjz,36,35,0|1mjqmk0,37,38,1|1mvzafz,37,38,1|1mvzag0,36,35,0|1n2tnvz,36,35,0|1n2tnw0,37,38,1|1nf2brz,37,38,1|1nf2bs0,36,35,0|1nljqjz,36,35,0|1nljqk0,37,38,1|1nxsefz,37,38,1|1nxseg0,36,35,0|1o49t7z,36,35,0|1o49t80,37,38,1|1ogih3z,37,38,1|1ogih40,36,35,0|1omzvvz,36,35,0|1omzvw0,37,38,1|1oz8jrz,37,38,1|1oz8js0,36,35,0|1p5pyjz,36,35,0|1p5pyk0,37,38,1|1phymfz,37,38,1|1phymg0,36,35,0|1poszvz,36,35,0|1poszw0,37,38,1|1q11nrz,37,38,1|1q11ns0,36,35,0|1q7j2jz,36,35,0|1q7j2k0,37,38,1|1qjrqfz,37,38,1|1qjrqg0,36,35,0|1qq957z,36,35,0|1qq9580,37,38,1|1r2ht3z,37,38,1|1r2ht40,36,35,0|1r8z7vz,36,35,0|1r8z7w0,37,38,1|1rl7vrz,37,38,1|1rl7vs0,36,35,0|1rrpajz,36,35,0|1rrpak0,37,38,1|1s3xyfz,37,38,1|1s3xyg0,36,35,0|1safd7z,36,35,0|1safd80,37,38,1|1smo13z,37,38,1|1smo140,36,35,0|1stiejz,36,35,0|1stiek0,37,38,1|1t5r2fz,37,38,1|1t5r2g0,36,35,0|1tc8h7z,36,35,0|1tc8h80,37,38,1|1toh53z,37,38,1|1toh540,36,35,0|1tuyjvz,36,35,0|1tuyjw0,37,38,1|1u777rz,37,38,1|1u777s0,36,35,0|1udomjz,36,35,0|1udomk0,37,38,1|1upxafz,37,38,1|1upxag0,36,35,0|1uwep7z,36,35,0|1uwep80,37,38,1|1v8nd3z,37,38,1|1v8nd40,36,35,0|1vf4rvz,36,35,0|1vf4rw0,37,38,1|1vrdfrz,37,38,1|1vrdfs0,36,35,0|NaN,36,35,0",
        "America/Yellowknife|,0,89,0|-x1yazl,0,89,0|-x1yazk,44,62,0|-qzosc1,44,62,0|-qzosc0,46,63,1|-qplwg1,46,63,1|-qplwg0,44,62,0|-qgypo1,44,62,0|-qgypo0,46,63,1|-qepb41,46,63,1|-qepb40,44,62,0|-pxipo1,44,62,0|-pxipo0,46,63,1|-pnssg1,46,63,1|-pnssg0,44,62,0|-pesn01,44,62,0|-pesn00,46,63,1|-p6vj41,46,63,1|-p6vj40,44,62,0|-ovplo1,44,62,0|-ovplo0,46,63,1|-oo5gg1,46,63,1|-oo5gg0,44,62,0|-oczj01,44,62,0|-oczj00,46,63,1|-o52f41,46,63,1|-o52f40,44,62,0|-ek1z01,44,62,0|-ek1z00,57,63,1|-cq2tg1,57,63,1|-cq2tg0,58,63,1|-cnoxs1,58,63,1|-cnoxs0,44,62,0|-bu5wc1,44,62,0|-bu5wc0,46,63,1|-bm8sg1,46,63,1|-bm8sg0,44,62,0|17qrnz,44,62,0|17qro0,46,63,1|1h3q7z,46,63,1|1h3q80,44,62,0|1qgubz,44,62,0|1qguc0,46,63,1|1ztsvz,46,63,1|1ztsw0,44,62,0|296wzz,44,62,0|296x00,46,63,1|2ijvjz,46,63,1|2ijvk0,44,62,0|2rwznz,44,62,0|2rwzo0,46,63,1|319y7z,46,63,1|319y80,44,62,0|3an2bz,44,62,0|3an2c0,46,63,1|3kczjz,46,63,1|3kczk0,44,62,0|3td4zz,44,62,0|3td500,46,63,1|43327z,46,63,1|433280,44,62,0|4cg6bz,44,62,0|4cg6c0,46,63,1|4lt4vz,46,63,1|4lt4w0,44,62,0|4v68zz,44,62,0|4v6900,46,63,1|54j7jz,46,63,1|54j7k0,44,62,0|5dwbnz,44,62,0|5dwbo0,46,63,1|5n9a7z,46,63,1|5n9a80,44,62,0|5wmebz,44,62,0|5wmec0,46,63,1|65zcvz,46,63,1|65zcw0,44,62,0|6fcgzz,44,62,0|6fch00,46,63,1|6p2e7z,46,63,1|6p2e80,44,62,0|6y2jnz,44,62,0|6y2jo0,46,63,1|77sgvz,46,63,1|77sgw0,44,62,0|7h5kzz,44,62,0|7h5l00,46,63,1|7qijjz,46,63,1|7qijk0,44,62,0|7zvnnz,44,62,0|7zvno0,46,63,1|898m7z,46,63,1|898m80,44,62,0|8ilqbz,44,62,0|8ilqc0,46,63,1|8ryovz,46,63,1|8ryow0,44,62,0|908wzz,44,62,0|908x00,46,63,1|9aorjz,46,63,1|9aork0,44,62,0|9iyznz,44,62,0|9iyzo0,46,63,1|9trsvz,46,63,1|9trsw0,44,62,0|a1p2bz,44,62,0|a1p2c0,46,63,1|achvjz,46,63,1|achvk0,44,62,0|akf4zz,44,62,0|akf500,46,63,1|av7y7z,46,63,1|av7y80,44,62,0|b3i6bz,44,62,0|b3i6c0,46,63,1|bdy0vz,46,63,1|bdy0w0,44,62,0|bm88zz,44,62,0|bm8900,46,63,1|bwo3jz,46,63,1|bwo3k0,44,62,0|c4ybnz,44,62,0|c4ybo0,46,63,1|cfr4vz,46,63,1|cfr4w0,44,62,0|cnoebz,44,62,0|cnoec0,46,63,1|cyh7jz,46,63,1|cyh7k0,44,62,0|d6egzz,44,62,0|d6eh00,46,63,1|dh7a7z,46,63,1|dh7a80,44,62,0|dphibz,44,62,0|dphic0,46,63,1|dzxcvz,46,63,1|dzxcw0,44,62,0|e87kzz,44,62,0|e87l00,46,63,1|einfjz,46,63,1|einfk0,44,62,0|eqxnnz,44,62,0|eqxno0,46,63,1|f1di7z,46,63,1|f1di80,44,62,0|f9nqbz,44,62,0|f9nqc0,46,63,1|fkgjjz,46,63,1|fkgjk0,44,62,0|fsdszz,44,62,0|fsdt00,46,63,1|g36m7z,46,63,1|g36m80,44,62,0|gb3vnz,44,62,0|gb3vo0,46,63,1|glwovz,46,63,1|glwow0,44,62,0|gu6wzz,44,62,0|gu6x00,46,63,1|h4mrjz,46,63,1|h4mrk0,44,62,0|hcwznz,44,62,0|hcwzo0,46,63,1|hncu7z,46,63,1|hncu80,44,62,0|hvn2bz,44,62,0|hvn2c0,46,63,1|i6fvjz,46,63,1|i6fvk0,44,62,0|ied4zz,44,62,0|ied500,46,63,1|ip5y7z,46,63,1|ip5y80,44,62,0|ix37nz,44,62,0|ix37o0,46,63,1|j7w0vz,46,63,1|j7w0w0,44,62,0|jeqebz,44,62,0|jeqec0,46,63,1|jqz27z,46,63,1|jqz280,44,62,0|jxggzz,44,62,0|jxgh00,46,63,1|k9p4vz,46,63,1|k9p4w0,44,62,0|kg6jnz,44,62,0|kg6jo0,46,63,1|ksf7jz,46,63,1|ksf7k0,44,62,0|kz9kzz,44,62,0|kz9l00,46,63,1|lbi8vz,46,63,1|lbi8w0,44,62,0|lhznnz,44,62,0|lhzno0,46,63,1|lu8bjz,46,63,1|lu8bk0,44,62,0|m0pqbz,44,62,0|m0pqc0,46,63,1|mcye7z,46,63,1|mcye80,44,62,0|mjfszz,44,62,0|mjft00,46,63,1|mvogvz,46,63,1|mvogw0,44,62,0|n25vnz,44,62,0|n25vo0,46,63,1|neejjz,46,63,1|neejk0,44,62,0|nkvybz,44,62,0|nkvyc0,46,63,1|nx4m7z,46,63,1|nx4m80,44,62,0|o3yznz,44,62,0|o3yzo0,46,63,1|og7njz,46,63,1|og7nk0,44,62,0|omp2bz,44,62,0|omp2c0,46,63,1|oyxq7z,46,63,1|oyxq80,44,62,0|p5f4zz,44,62,0|p5f500,46,63,1|phnsvz,46,63,1|phnsw0,44,62,0|po57nz,44,62,0|po57o0,46,63,1|q0dvjz,46,63,1|q0dvk0,44,62,0|q6vabz,44,62,0|q6vac0,46,63,1|qj3y7z,46,63,1|qj3y80,44,62,0|qpybnz,44,62,0|qpybo0,46,63,1|r26zjz,46,63,1|r26zk0,44,62,0|r8oebz,44,62,0|r8oec0,46,63,1|rkx27z,46,63,1|rkx280,44,62,0|rregzz,44,62,0|rreh00,46,63,1|s3n4vz,46,63,1|s3n4w0,44,62,0|sa4jnz,44,62,0|sa4jo0,46,63,1|smd7jz,46,63,1|smd7k0,44,62,0|ssumbz,44,62,0|ssumc0,46,63,1|t53a7z,46,63,1|t53a80,44,62,0|tbkozz,44,62,0|tbkp00,46,63,1|tntcvz,46,63,1|tntcw0,44,62,0|tunqbz,44,62,0|tunqc0,46,63,1|u6we7z,46,63,1|u6we80,44,62,0|uddszz,44,62,0|uddt00,46,63,1|upmgvz,46,63,1|upmgw0,44,62,0|uw3vnz,44,62,0|uw3vo0,46,63,1|v8cjjz,46,63,1|v8cjk0,44,62,0|vetybz,44,62,0|vetyc0,46,63,1|vr2m7z,46,63,1|vr2m80,44,62,0|vxk0zz,44,62,0|vxk100,46,63,1|w9sovz,46,63,1|w9sow0,44,62,0|wgn2bz,44,62,0|wgn2c0,46,63,1|wsvq7z,46,63,1|wsvq80,44,62,0|wzd4zz,44,62,0|wzd500,46,63,1|xblsvz,46,63,1|xblsw0,44,62,0|xi37nz,44,62,0|xi37o0,46,63,1|xubvjz,46,63,1|xubvk0,44,62,0|y0tabz,44,62,0|y0tac0,46,63,1|yd1y7z,46,63,1|yd1y80,44,62,0|yjjczz,44,62,0|yjjd00,46,63,1|yvs0vz,46,63,1|yvs0w0,44,62,0|z29fnz,44,62,0|z29fo0,46,63,1|zei3jz,46,63,1|zei3k0,44,62,0|zlcgzz,44,62,0|zlch00,46,63,1|zxl4vz,46,63,1|zxl4w0,44,62,0|1042jnz,44,62,0|1042jo0,46,63,1|10gb7jz,46,63,1|10gb7k0,44,62,0|10msmbz,44,62,0|10msmc0,46,63,1|10z1a7z,46,63,1|10z1a80,44,62,0|115iozz,44,62,0|115ip00,46,63,1|11hrcvz,46,63,1|11hrcw0,44,62,0|11o8rnz,44,62,0|11o8ro0,46,63,1|120hfjz,46,63,1|120hfk0,44,62,0|126yubz,44,62,0|126yuc0,46,63,1|12j7i7z,46,63,1|12j7i80,44,62,0|12q1vnz,44,62,0|12q1vo0,46,63,1|132ajjz,46,63,1|132ajk0,44,62,0|138rybz,44,62,0|138ryc0,46,63,1|13l0m7z,46,63,1|13l0m80,44,62,0|13ri0zz,44,62,0|13ri100,46,63,1|143qovz,46,63,1|143qow0,44,62,0|14a83nz,44,62,0|14a83o0,46,63,1|14mgrjz,46,63,1|14mgrk0,44,62,0|14sy6bz,44,62,0|14sy6c0,46,63,1|1556u7z,46,63,1|1556u80,44,62,0|15c17nz,44,62,0|15c17o0,46,63,1|15o9vjz,46,63,1|15o9vk0,44,62,0|15urabz,44,62,0|15urac0,46,63,1|166zy7z,46,63,1|166zy80,44,62,0|16dhczz,44,62,0|16dhd00,46,63,1|16pq0vz,46,63,1|16pq0w0,44,62,0|16w7fnz,44,62,0|16w7fo0,46,63,1|178g3jz,46,63,1|178g3k0,44,62,0|17exibz,44,62,0|17exic0,46,63,1|17r667z,46,63,1|17r6680,44,62,0|17xnkzz,44,62,0|17xnl00,46,63,1|189w8vz,46,63,1|189w8w0,44,62,0|18gqmbz,44,62,0|18gqmc0,46,63,1|18sza7z,46,63,1|18sza80,44,62,0|18zgozz,44,62,0|18zgp00,46,63,1|19bpcvz,46,63,1|19bpcw0,44,62,0|19i6rnz,44,62,0|19i6ro0,46,63,1|19uffjz,46,63,1|19uffk0,44,62,0|1a0wubz,44,62,0|1a0wuc0,46,63,1|1ad5i7z,46,63,1|1ad5i80,44,62,0|1ajmwzz,44,62,0|1ajmx00,46,63,1|1avvkvz,46,63,1|1avvkw0,44,62,0|1b2pybz,44,62,0|1b2pyc0,46,63,1|1beym7z,46,63,1|1beym80,44,62,0|1blg0zz,44,62,0|1blg100,46,63,1|1bxoovz,46,63,1|1bxoow0,44,62,0|1c463nz,44,62,0|1c463o0,46,63,1|1cgerjz,46,63,1|1cgerk0,44,62,0|1cmw6bz,44,62,0|1cmw6c0,46,63,1|1cz4u7z,46,63,1|1cz4u80,44,62,0|1d5m8zz,44,62,0|1d5m900,46,63,1|1dhuwvz,46,63,1|1dhuww0,44,62,0|1docbnz,44,62,0|1docbo0,46,63,1|1e0kzjz,46,63,1|1e0kzk0,44,62,0|1e7fczz,44,62,0|1e7fd00,46,63,1|1ejo0vz,46,63,1|1ejo0w0,44,62,0|1eq5fnz,44,62,0|1eq5fo0,46,63,1|1f2e3jz,46,63,1|1f2e3k0,44,62,0|1f8vibz,44,62,0|1f8vic0,46,63,1|1fl467z,46,63,1|1fl4680,44,62,0|1frlkzz,44,62,0|1frll00,46,63,1|1g3u8vz,46,63,1|1g3u8w0,44,62,0|1gabnnz,44,62,0|1gabno0,46,63,1|1gmkbjz,46,63,1|1gmkbk0,44,62,0|1gt1qbz,44,62,0|1gt1qc0,46,63,1|1h5ae7z,46,63,1|1h5ae80,44,62,0|1hc4rnz,44,62,0|1hc4ro0,46,63,1|1hodfjz,46,63,1|1hodfk0,44,62,0|1huuubz,44,62,0|1huuuc0,46,63,1|1i73i7z,46,63,1|1i73i80,44,62,0|1idkwzz,44,62,0|1idkx00,46,63,1|1iptkvz,46,63,1|1iptkw0,44,62,0|1iwaznz,44,62,0|1iwazo0,46,63,1|1j8jnjz,46,63,1|1j8jnk0,44,62,0|1jf12bz,44,62,0|1jf12c0,46,63,1|1jr9q7z,46,63,1|1jr9q80,44,62,0|1jy43nz,44,62,0|1jy43o0,46,63,1|1kacrjz,46,63,1|1kacrk0,44,62,0|1kgu6bz,44,62,0|1kgu6c0,46,63,1|1kt2u7z,46,63,1|1kt2u80,44,62,0|1kzk8zz,44,62,0|1kzk900,46,63,1|1lbswvz,46,63,1|1lbsww0,44,62,0|1liabnz,44,62,0|1liabo0,46,63,1|1luizjz,46,63,1|1luizk0,44,62,0|1m10ebz,44,62,0|1m10ec0,46,63,1|1md927z,46,63,1|1md9280,44,62,0|1mjqgzz,44,62,0|1mjqh00,46,63,1|1mvz4vz,46,63,1|1mvz4w0,44,62,0|1n2tibz,44,62,0|1n2tic0,46,63,1|1nf267z,46,63,1|1nf2680,44,62,0|1nljkzz,44,62,0|1nljl00,46,63,1|1nxs8vz,46,63,1|1nxs8w0,44,62,0|1o49nnz,44,62,0|1o49no0,46,63,1|1ogibjz,46,63,1|1ogibk0,44,62,0|1omzqbz,44,62,0|1omzqc0,46,63,1|1oz8e7z,46,63,1|1oz8e80,44,62,0|1p5pszz,44,62,0|1p5pt00,46,63,1|1phygvz,46,63,1|1phygw0,44,62,0|1posubz,44,62,0|1posuc0,46,63,1|1q11i7z,46,63,1|1q11i80,44,62,0|1q7iwzz,44,62,0|1q7ix00,46,63,1|1qjrkvz,46,63,1|1qjrkw0,44,62,0|1qq8znz,44,62,0|1qq8zo0,46,63,1|1r2hnjz,46,63,1|1r2hnk0,44,62,0|1r8z2bz,44,62,0|1r8z2c0,46,63,1|1rl7q7z,46,63,1|1rl7q80,44,62,0|1rrp4zz,44,62,0|1rrp500,46,63,1|1s3xsvz,46,63,1|1s3xsw0,44,62,0|1saf7nz,44,62,0|1saf7o0,46,63,1|1smnvjz,46,63,1|1smnvk0,44,62,0|1sti8zz,44,62,0|1sti900,46,63,1|1t5qwvz,46,63,1|1t5qww0,44,62,0|1tc8bnz,44,62,0|1tc8bo0,46,63,1|1togzjz,46,63,1|1togzk0,44,62,0|1tuyebz,44,62,0|1tuyec0,46,63,1|1u7727z,46,63,1|1u77280,44,62,0|1udogzz,44,62,0|1udoh00,46,63,1|1upx4vz,46,63,1|1upx4w0,44,62,0|1uwejnz,44,62,0|1uwejo0,46,63,1|1v8n7jz,46,63,1|1v8n7k0,44,62,0|1vf4mbz,44,62,0|1vf4mc0,46,63,1|1vrda7z,46,63,1|1vrda80,44,62,0|NaN,44,62,0",
        "Antarctica/Casey|,59,1,0|-irxc1,59,1,0|-irxc0,84,181,0|kro7bz,84,181,0|kro7c0,85,182,0|kyrizz,85,182,0|kyrj00,84,181,0|ltqknz,84,181,0|ltqko0,85,182,0|lzr5vz,85,182,0|lzr5w0,84,181,0|ofen3z,84,181,0|ofen40,85,182,0|p5dwjz,85,182,0|p5dwk0,84,181,0|pg70vz,84,181,0|pg70w0,85,182,0|pogv3z,85,182,0|pogv40,84,181,0|pytbfz,84,181,0|pytbg0,85,182,0|q6tz3z,85,182,0|q6tz40,84,181,0|qhmv5n,84,181,0|qhmv5o,85,182,0|qpws3z,85,182,0|qpws40,84,181,0|r0cxtn,84,181,0|r0cxto,85,182,0|r8murz,85,182,0|r8mus0,84,181,0|rj30hn,84,181,0|rj30ho,85,182,0|rr7lrz,85,182,0|rr7ls0,84,181,0|NaN,84,181,0",
        "Antarctica/Davis|,59,1,0|-6rmdc1,59,1,0|-6rmdc0,86,183,0|-2p2zg1,86,183,0|-2p2zg0,59,1,0|-h6io1,59,1,0|-h6io0,86,183,0|kroa3z,86,183,0|kroa40,87,184,0|kz30vz,87,184,0|kz30w0,86,183,0|ltqnfz,86,183,0|ltqng0,87,184,0|lzre7z,87,184,0|lzre80,86,183,0|NaN,86,183,0",
        "Antarctica/DumontDUrville|,0,185,0|-1ayytx5,0,185,0|-1ayytx4,88,186,0|-1354j8x,88,186,0|-1354j8w,89,187,0|NaN,89,187,0",
        "Antarctica/Macquarie|,59,1,0|-10mb9c1,59,1,0|-10mb9c0,90,187,0|-rsj4w1,90,187,0|-rsj4w0,91,182,1|-rjj281,91,182,1|-rjj280,90,187,0|-qhmeg1,90,187,0|-qhmeg0,59,1,0|-bd1xc1,59,1,0|-bd1xc0,90,187,0|-16cow1,90,187,0|-16cow0,91,182,1|-wznk1,91,182,1|-wznk0,90,187,0|-m6rk1,90,187,0|-m6rk0,91,182,1|-fcgw1,91,182,1|-fcgw0,90,187,0|-3gow1,90,187,0|-3gow0,91,182,1|3dlrz,91,182,1|3dls0,90,187,0|f9drz,90,187,0|f9ds0,91,182,1|mgn3z,91,182,1|mgn40,90,187,0|ycf3z,90,187,0|ycf40,91,182,1|14gsfz,91,182,1|14gsg0,90,187,0|1h2hrz,90,187,0|1h2hs0,91,182,1|1njtrz,91,182,1|1njts0,90,187,0|1zskfz,90,187,0|1zskg0,91,182,1|269wfz,91,182,1|269wg0,90,187,0|2iin3z,90,187,0|2iin40,91,182,1|2ozz3z,91,182,1|2ozz40,90,187,0|318prz,90,187,0|318ps0,91,182,1|3830fz,91,182,1|3830g0,90,187,0|3kbr3z,90,187,0|3kbr40,91,182,1|3qt33z,91,182,1|3qt340,90,187,0|431trz,90,187,0|431ts0,91,182,1|49j5rz,91,182,1|49j5s0,90,187,0|4lrwfz,90,187,0|4lrwg0,91,182,1|4s98fz,91,182,1|4s98g0,90,187,0|54hz3z,90,187,0|54hz40,91,182,1|5azb3z,91,182,1|5azb40,90,187,0|5n81rz,90,187,0|5n81s0,91,182,1|5tpdrz,91,182,1|5tpds0,90,187,0|65y4fz,90,187,0|65y4g0,91,182,1|6dvb3z,91,182,1|6dvb40,90,187,0|6p15rz,90,187,0|6p15s0,91,182,1|6wldrz,91,182,1|6wlds0,90,187,0|77r8fz,90,187,0|77r8g0,91,182,1|7e8kfz,91,182,1|7e8kg0,90,187,0|7qhb3z,90,187,0|7qhb40,91,182,1|7wyn3z,91,182,1|7wyn40,90,187,0|897drz,90,187,0|897ds0,91,182,1|8foprz,91,182,1|8fops0,90,187,0|8rkhrz,90,187,0|8rkhs0,91,182,1|8z4prz,91,182,1|8z4ps0,90,187,0|9anj3z,90,187,0|9anj40,91,182,1|9i7r3z,91,182,1|9i7r40,90,187,0|9tqkfz,90,187,0|9tqkg0,91,182,1|a0xtrz,91,182,1|a0xts0,90,187,0|acgn3z,90,187,0|acgn40,91,182,1|ajnwfz,91,182,1|ajnwg0,90,187,0|av6prz,90,187,0|av6ps0,91,182,1|b33wfz,91,182,1|b33wg0,90,187,0|bctwfz,90,187,0|bctwg0,91,182,1|bltz3z,91,182,1|bltz40,90,187,0|bvjz3z,90,187,0|bvjz40,91,182,1|c4k1rz,91,182,1|c4k1s0,90,187,0|cea1rz,90,187,0|cea1s0,91,182,1|cna4fz,91,182,1|cna4g0,90,187,0|cx04fz,90,187,0|cx04g0,91,182,1|d6073z,91,182,1|d60740,90,187,0|dfq73z,90,187,0|dfq740,91,182,1|dp38fz,91,182,1|dp38g0,90,187,0|dyt8fz,90,187,0|dyt8g0,91,182,1|e7tb3z,91,182,1|e7tb40,90,187,0|ehjb3z,90,187,0|ehjb40,91,182,1|eqjdrz,91,182,1|eqjds0,90,187,0|f09drz,90,187,0|f09ds0,91,182,1|f99gfz,91,182,1|f99gg0,90,187,0|fizgfz,90,187,0|fizgg0,91,182,1|frzj3z,91,182,1|frzj40,90,187,0|fzwprz,90,187,0|fzwps0,91,182,1|gaplrz,91,182,1|gapls0,90,187,0|gkskfz,90,187,0|gkskg0,91,182,1|gtsn3z,91,182,1|gtsn40,90,187,0|h3in3z,90,187,0|h3in40,91,182,1|hciprz,91,182,1|hcips0,90,187,0|hm8prz,90,187,0|hm8ps0,91,182,1|hv8sfz,91,182,1|hv8sg0,90,187,0|i4ysfz,90,187,0|i4ysg0,91,182,1|idyv3z,91,182,1|idyv40,90,187,0|inov3z,90,187,0|inov40,91,182,1|ix1wfz,91,182,1|ix1wg0,90,187,0|j6exrz,90,187,0|j6exs0,91,182,1|jff0fz,91,182,1|jff0g0,90,187,0|jphz3z,90,187,0|jphz40,91,182,1|jyv0fz,91,182,1|jyv0g0,90,187,0|k881rz,90,187,0|k881s0,91,182,1|khl33z,91,182,1|khl340,90,187,0|kqy4fz,90,187,0|kqy4g0,91,182,1|lj18fz,91,182,1|lj18g0,90,187,0|lse9rz,90,187,0|lse9s0,91,182,1|m1rb3z,91,182,1|m1rb40,90,187,0|mbhb3z,90,187,0|mbhb40,91,182,1|mkucfz,91,182,1|mkucg0,90,187,0|mu7drz,90,187,0|mu7ds0,91,182,1|n3kf3z,91,182,1|n3kf40,90,187,0|ncxgfz,90,187,0|ncxgg0,91,182,1|nmahrz,91,182,1|nmahs0,90,187,0|nvnj3z,90,187,0|nvnj40,91,182,1|o50kfz,91,182,1|o50kg0,90,187,0|oedlrz,90,187,0|oedls0,91,182,1|onqn3z,91,182,1|onqn40,90,187,0|ox3ofz,90,187,0|ox3og0,91,182,1|p6gprz,91,182,1|p6gps0,90,187,0|pg6prz,90,187,0|pg6ps0,91,182,1|ppjr3z,91,182,1|ppjr40,90,187,0|pywsfz,90,187,0|pywsg0,91,182,1|q89trz,91,182,1|q89ts0,90,187,0|qhmv3z,90,187,0|qhmv40,91,182,1|qqzwfz,91,182,1|qqzwg0,90,187,0|r0cxrz,90,187,0|r0cxs0,91,182,1|r9pz3z,91,182,1|r9pz40,90,187,0|rj30fz,90,187,0|rj30g0,91,182,1|rsg1rz,91,182,1|rsg1s0,90,187,0|s1t33z,90,187,0|s1t340,91,182,1|sbj33z,91,182,1|sbj340,90,187,0|skw4fz,90,187,0|skw4g0,91,182,1|su95rz,91,182,1|su95s0,90,187,0|t3m73z,90,187,0|t3m740,91,182,1|tcz8fz,91,182,1|tcz8g0,90,187,0|tmc9rz,90,187,0|tmc9s0,91,182,1|tvpb3z,91,182,1|tvpb40,90,187,0|u52cfz,90,187,0|u52cg0,91,182,1|uefdrz,91,182,1|uefds0,90,187,0|unsf3z,90,187,0|unsf40,91,182,1|ux5gfz,91,182,1|ux5gg0,90,187,0|v6vgfz,90,187,0|v6vgg0,91,182,1|vg8hrz,91,182,1|vg8hs0,90,187,0|vplj3z,90,187,0|vplj40,91,182,1|vyykfz,91,182,1|vyykg0,90,187,0|w8blrz,90,187,0|w8bls0,91,182,1|whon3z,91,182,1|whon40,90,187,0|wr1ofz,90,187,0|wr1og0,91,182,1|x0eprz,91,182,1|x0eps0,90,187,0|x9rr3z,90,187,0|x9rr40,91,182,1|xj4sfz,91,182,1|xj4sg0,90,187,0|xshtrz,90,187,0|xshts0,91,182,1|y1uv3z,91,182,1|y1uv40,90,187,0|ybkv3z,90,187,0|ybkv40,91,182,1|ykxwfz,91,182,1|ykxwg0,90,187,0|yuaxrz,90,187,0|yuaxs0,91,182,1|z3nz3z,91,182,1|z3nz40,90,187,0|zd10fz,90,187,0|zd10g0,91,182,1|zme1rz,91,182,1|zme1s0,90,187,0|zvr33z,90,187,0|zvr340,91,182,1|10544fz,91,182,1|10544g0,90,187,0|10eh5rz,90,187,0|10eh5s0,91,182,1|10nu73z,91,182,1|10nu740,90,187,0|10xk73z,90,187,0|10xk740,91,182,1|116x8fz,91,182,1|116x8g0,90,187,0|11ga9rz,90,187,0|11ga9s0,91,182,1|11pnb3z,91,182,1|11pnb40,90,187,0|11z0cfz,90,187,0|11z0cg0,91,182,1|128ddrz,91,182,1|128dds0,90,187,0|12hqf3z,90,187,0|12hqf40,91,182,1|12r3gfz,91,182,1|12r3gg0,90,187,0|130ghrz,90,187,0|130ghs0,91,182,1|139tj3z,91,182,1|139tj40,90,187,0|13j6kfz,90,187,0|13j6kg0,91,182,1|13sjlrz,91,182,1|13sjls0,90,187,0|1429lrz,90,187,0|1429ls0,91,182,1|14bmn3z,91,182,1|14bmn40,90,187,0|14kzofz,90,187,0|14kzog0,91,182,1|14ucprz,91,182,1|14ucps0,90,187,0|153pr3z,90,187,0|153pr40,91,182,1|15d2sfz,91,182,1|15d2sg0,90,187,0|15mftrz,90,187,0|15mfts0,91,182,1|15vsv3z,91,182,1|15vsv40,90,187,0|1655wfz,90,187,0|1655wg0,91,182,1|16eixrz,91,182,1|16eixs0,90,187,0|16nvz3z,90,187,0|16nvz40,91,182,1|16xlz3z,91,182,1|16xlz40,90,187,0|176z0fz,90,187,0|176z0g0,91,182,1|17gc1rz,91,182,1|17gc1s0,90,187,0|17pp33z,90,187,0|17pp340,91,182,1|17z24fz,91,182,1|17z24g0,90,187,0|188f5rz,90,187,0|188f5s0,91,182,1|18hs73z,91,182,1|18hs740,90,187,0|18r58fz,90,187,0|18r58g0,91,182,1|190i9rz,91,182,1|190i9s0,90,187,0|199vb3z,90,187,0|199vb40,91,182,1|19j8cfz,91,182,1|19j8cg0,90,187,0|19sycfz,90,187,0|19sycg0,91,182,1|1a2bdrz,91,182,1|1a2bds0,90,187,0|1abof3z,90,187,0|1abof40,91,182,1|1al1gfz,91,182,1|1al1gg0,90,187,0|1auehrz,90,187,0|1auehs0,91,182,1|1b3rj3z,91,182,1|1b3rj40,90,187,0|1bd4kfz,90,187,0|1bd4kg0,91,182,1|1bmhlrz,91,182,1|1bmhls0,90,187,0|1bvun3z,90,187,0|1bvun40,91,182,1|1c57ofz,91,182,1|1c57og0,90,187,0|1cekprz,90,187,0|1cekps0,91,182,1|1cnxr3z,91,182,1|1cnxr40,90,187,0|1cxnr3z,90,187,0|1cxnr40,91,182,1|1d70sfz,91,182,1|1d70sg0,90,187,0|1dgdtrz,90,187,0|1dgdts0,91,182,1|1dpqv3z,91,182,1|1dpqv40,90,187,0|1dz3wfz,90,187,0|1dz3wg0,91,182,1|1e8gxrz,91,182,1|1e8gxs0,90,187,0|1ehtz3z,90,187,0|1ehtz40,91,182,1|1er70fz,91,182,1|1er70g0,90,187,0|1f0k1rz,90,187,0|1f0k1s0,91,182,1|1f9x33z,91,182,1|1f9x340,90,187,0|1fjn33z,90,187,0|1fjn340,91,182,1|1ft04fz,91,182,1|1ft04g0,90,187,0|1g2d5rz,90,187,0|1g2d5s0,91,182,1|1gbq73z,91,182,1|1gbq740,90,187,0|1gl38fz,90,187,0|1gl38g0,91,182,1|1gug9rz,91,182,1|1gug9s0,90,187,0|1h3tb3z,90,187,0|1h3tb40,91,182,1|1hd6cfz,91,182,1|1hd6cg0,90,187,0|1hmjdrz,90,187,0|1hmjds0,91,182,1|1hvwf3z,91,182,1|1hvwf40,90,187,0|1i59gfz,90,187,0|1i59gg0,91,182,1|1iemhrz,91,182,1|1iemhs0,90,187,0|1iochrz,90,187,0|1iochs0,91,182,1|1ixpj3z,91,182,1|1ixpj40,90,187,0|1j72kfz,90,187,0|1j72kg0,91,182,1|1jgflrz,91,182,1|1jgfls0,90,187,0|1jpsn3z,90,187,0|1jpsn40,91,182,1|1jz5ofz,91,182,1|1jz5og0,90,187,0|1k8iprz,90,187,0|1k8ips0,91,182,1|1khvr3z,91,182,1|1khvr40,90,187,0|1kr8sfz,90,187,0|1kr8sg0,91,182,1|1l0ltrz,91,182,1|1l0lts0,90,187,0|1l9yv3z,90,187,0|1l9yv40,91,182,1|1ljov3z,91,182,1|1ljov40,90,187,0|1lt1wfz,90,187,0|1lt1wg0,91,182,1|1m2exrz,91,182,1|1m2exs0,90,187,0|1mbrz3z,90,187,0|1mbrz40,91,182,1|1ml50fz,91,182,1|1ml50g0,90,187,0|1mui1rz,90,187,0|1mui1s0,91,182,1|1n3v33z,91,182,1|1n3v340,90,187,0|1nd84fz,90,187,0|1nd84g0,91,182,1|1nml5rz,91,182,1|1nml5s0,90,187,0|1nvy73z,90,187,0|1nvy740,91,182,1|1o5b8fz,91,182,1|1o5b8g0,90,187,0|1of18fz,90,187,0|1of18g0,91,182,1|1ooe9rz,91,182,1|1ooe9s0,90,187,0|1oxrb3z,90,187,0|1oxrb40,91,182,1|1p74cfz,91,182,1|1p74cg0,90,187,0|1pghdrz,90,187,0|1pghds0,91,182,1|1ppuf3z,91,182,1|1ppuf40,90,187,0|1pz7gfz,90,187,0|1pz7gg0,91,182,1|1q8khrz,91,182,1|1q8khs0,90,187,0|1qhxj3z,90,187,0|1qhxj40,91,182,1|1qrakfz,91,182,1|1qrakg0,90,187,0|1r0nlrz,90,187,0|1r0nls0,91,182,1|1ra0n3z,91,182,1|1ra0n40,90,187,0|1rjqn3z,90,187,0|1rjqn40,91,182,1|1rt3ofz,91,182,1|1rt3og0,90,187,0|1s2gprz,90,187,0|1s2gps0,91,182,1|1sbtr3z,91,182,1|1sbtr40,90,187,0|1sl6sfz,90,187,0|1sl6sg0,91,182,1|1sujtrz,91,182,1|1sujts0,90,187,0|1t3wv3z,90,187,0|1t3wv40,91,182,1|1td9wfz,91,182,1|1td9wg0,90,187,0|1tmmxrz,90,187,0|1tmmxs0,91,182,1|1tvzz3z,91,182,1|1tvzz40,90,187,0|1u5pz3z,90,187,0|1u5pz40,91,182,1|1uf30fz,91,182,1|1uf30g0,90,187,0|1uog1rz,90,187,0|1uog1s0,91,182,1|1uxt33z,91,182,1|1uxt340,90,187,0|1v764fz,90,187,0|1v764g0,91,182,1|1vgj5rz,91,182,1|1vgj5s0,90,187,0|1vpw73z,90,187,0|1vpw740,91,182,1|NaN,91,182,1",
        "Antarctica/Mawson|,59,1,0|-8aelc1,59,1,0|-8aelc0,92,188,0|krocvz,92,188,0|krocw0,87,184,0|NaN,87,184,0",
        "Antarctica/McMurdo|,0,189,0|-1gsoz15,0,189,0|-1gsoz14,93,190,0|-m01p21,93,190,0|-m01p20,94,191,1|-ltxei1,94,191,1|-ltxei0,93,190,0|-lieie1,93,190,0|-lieie0,94,192,1|-lahd41,94,192,1|-lahd40,93,190,0|-kzofq1,93,190,0|-kzofq0,94,192,1|-krrag1,94,192,1|-krrag0,93,190,0|-kgyd21,93,190,0|-kgyd20,94,192,1|-k917s1,94,192,1|-k917s0,93,190,0|-jy8ae1,93,190,0|-jy8ae0,94,192,1|-jpy6g1,94,192,1|-jpy6g0,93,190,0|-jfi7q1,93,190,0|-jfi7q0,94,192,1|-j783s1,94,192,1|-j783s0,93,190,0|-iws521,93,190,0|-iws520,94,192,1|-imc941,94,192,1|-imc940,93,190,0|-ief121,93,190,0|-ief120,94,192,1|-i3m6g1,94,192,1|-i3m6g0,93,190,0|-hvoye1,93,190,0|-hvoye0,94,192,1|-hkw3s1,94,192,1|-hkw3s0,93,190,0|-hcyvq1,93,190,0|-hcyvq0,94,192,1|-h26141,94,192,1|-h26140,93,190,0|-gu8t21,93,190,0|-gu8t20,94,192,1|-gjfyg1,94,192,1|-gjfyg0,93,190,0|-gbiqe1,93,190,0|-gbiqe0,94,192,1|-g0cx41,94,192,1|-g0cx40,93,190,0|-fssnq1,93,190,0|-fssnq0,94,192,1|-fhmug1,94,192,1|-fhmug0,93,190,0|-f9pme1,93,190,0|-f9pme0,94,192,1|-ciy9c1,94,192,1|-ciy9c0,94,192,0|2ivg7z,94,192,0|2ivg80,95,193,1|2omuvz,95,193,1|2omuw0,94,192,0|318k7z,94,192,0|318k80,95,193,1|382uvz,95,193,1|382uw0,94,192,0|3kbljz,94,192,0|3kblk0,95,193,1|3qsxjz,95,193,1|3qsxk0,94,192,0|431o7z,94,192,0|431o80,95,193,1|49j07z,95,193,1|49j080,94,192,0|4lrqvz,94,192,0|4lrqw0,95,193,1|4s92vz,95,193,1|4s92w0,94,192,0|54htjz,94,192,0|54htk0,95,193,1|5az5jz,95,193,1|5az5k0,94,192,0|5n7w7z,94,192,0|5n7w80,95,193,1|5tp87z,95,193,1|5tp880,94,192,0|65xyvz,94,192,0|65xyw0,95,193,1|6cs9jz,95,193,1|6cs9k0,94,192,0|6p107z,94,192,0|6p1080,95,193,1|6vic7z,95,193,1|6vic80,94,192,0|77r2vz,94,192,0|77r2w0,95,193,1|7e8evz,95,193,1|7e8ew0,94,192,0|7qh5jz,94,192,0|7qh5k0,95,193,1|7wyhjz,95,193,1|7wyhk0,94,192,0|89787z,94,192,0|897880,95,193,1|8fok7z,95,193,1|8fok80,94,192,0|8rxavz,94,192,0|8rxaw0,95,193,1|8yemvz,95,193,1|8yemw0,94,192,0|9andjz,94,192,0|9andk0,95,193,1|9hho7z,95,193,1|9hho80,94,192,0|9tqevz,94,192,0|9tqew0,95,193,1|a07qvz,95,193,1|a07qw0,94,192,0|abdljz,94,192,0|abdlk0,95,193,1|ajnqvz,95,193,1|ajnqw0,94,192,0|au3o7z,94,192,0|au3o80,95,193,1|b2dtjz,95,193,1|b2dtk0,94,192,0|bctqvz,94,192,0|bctqw0,95,193,1|bl3w7z,95,193,1|bl3w80,94,192,0|bvjtjz,94,192,0|bvjtk0,95,193,1|c46xjz,95,193,1|c46xk0,94,192,0|ce9w7z,94,192,0|ce9w80,95,193,1|cmx07z,95,193,1|cmx080,94,192,0|cwzyvz,94,192,0|cwzyw0,95,193,1|d5n2vz,95,193,1|d5n2w0,94,192,0|dfq1jz,94,192,0|dfq1k0,95,193,1|dod5jz,95,193,1|dod5k0,94,192,0|dyt2vz,94,192,0|dyt2w0,95,193,1|e7387z,95,193,1|e73880,94,192,0|ehj5jz,94,192,0|ehj5k0,95,193,1|eptavz,95,193,1|eptaw0,94,192,0|f0987z,94,192,0|f09880,95,193,1|f8wc7z,95,193,1|f8wc80,94,192,0|fizavz,94,192,0|fizaw0,95,193,1|frmevz,95,193,1|frmew0,94,192,0|g1pdjz,94,192,0|g1pdk0,95,193,1|gachjz,95,193,1|gachk0,94,192,0|gksevz,94,192,0|gksew0,95,193,1|gt2k7z,95,193,1|gt2k80,94,192,0|h3ihjz,94,192,0|h3ihk0,95,193,1|hbsmvz,95,193,1|hbsmw0,94,192,0|hm8k7z,94,192,0|hm8k80,95,193,1|huvo7z,95,193,1|huvo80,94,192,0|i4ymvz,94,192,0|i4ymw0,95,193,1|idlqvz,95,193,1|idlqw0,94,192,0|inopjz,94,192,0|inopk0,95,193,1|iwbtjz,95,193,1|iwbtk0,94,192,0|j6es7z,94,192,0|j6es80,95,193,1|jf1w7z,95,193,1|jf1w80,94,192,0|jp4uvz,94,192,0|jp4uw0,95,193,1|jyuuvz,95,193,1|jyuuw0,94,192,0|k7uxjz,94,192,0|k7uxk0,95,193,1|khkxjz,95,193,1|khkxk0,94,192,0|kql07z,94,192,0|kql080,95,193,1|l0b07z,95,193,1|l0b080,94,192,0|l9b2vz,94,192,0|l9b2w0,95,193,1|lj12vz,95,193,1|lj12w0,94,192,0|ls15jz,94,192,0|ls15k0,95,193,1|m1r5jz,95,193,1|m1r5k0,94,192,0|mb46vz,94,192,0|mb46w0,95,193,1|mku6vz,95,193,1|mku6w0,94,192,0|mtu9jz,94,192,0|mtu9k0,95,193,1|n3k9jz,95,193,1|n3k9k0,94,192,0|nckc7z,94,192,0|nckc80,95,193,1|nmac7z,95,193,1|nmac80,94,192,0|nvaevz,94,192,0|nvaew0,95,193,1|o50evz,95,193,1|o50ew0,94,192,0|oe0hjz,94,192,0|oe0hk0,95,193,1|onqhjz,95,193,1|onqhk0,94,192,0|owqk7z,94,192,0|owqk80,95,193,1|p6gk7z,95,193,1|p6gk80,94,192,0|pftljz,94,192,0|pftlk0,95,193,1|ppjljz,95,193,1|ppjlk0,94,192,0|pyjo7z,94,192,0|pyjo80,95,193,1|q89o7z,95,193,1|q89o80,94,192,0|qh9qvz,94,192,0|qh9qw0,95,193,1|qqzqvz,95,193,1|qqzqw0,94,192,0|qzztjz,94,192,0|qzztk0,95,193,1|r9ptjz,95,193,1|r9ptk0,94,192,0|ripw7z,94,192,0|ripw80,95,193,1|rsfw7z,95,193,1|rsfw80,94,192,0|s1fyvz,94,192,0|s1fyw0,95,193,1|sbixjz,95,193,1|sbixk0,94,192,0|skj07z,94,192,0|skj080,95,193,1|su907z,95,193,1|su9080,94,192,0|t392vz,94,192,0|t392w0,95,193,1|tcz2vz,95,193,1|tcz2w0,94,192,0|tlz5jz,94,192,0|tlz5k0,95,193,1|tvp5jz,95,193,1|tvp5k0,94,192,0|u4p87z,94,192,0|u4p880,95,193,1|uef87z,95,193,1|uef880,94,192,0|unfavz,94,192,0|unfaw0,95,193,1|ux5avz,95,193,1|ux5aw0,94,192,0|v6ic7z,94,192,0|v6ic80,95,193,1|vg8c7z,95,193,1|vg8c80,94,192,0|vp8evz,94,192,0|vp8ew0,95,193,1|vyyevz,95,193,1|vyyew0,94,192,0|w7yhjz,94,192,0|w7yhk0,95,193,1|whohjz,95,193,1|whohk0,94,192,0|wqok7z,94,192,0|wqok80,95,193,1|x0ek7z,95,193,1|x0ek80,94,192,0|x9emvz,94,192,0|x9emw0,95,193,1|xj4mvz,95,193,1|xj4mw0,94,192,0|xs4pjz,94,192,0|xs4pk0,95,193,1|y1upjz,95,193,1|y1upk0,94,192,0|yb7qvz,94,192,0|yb7qw0,95,193,1|ykxqvz,95,193,1|ykxqw0,94,192,0|ytxtjz,94,192,0|ytxtk0,95,193,1|z3ntjz,95,193,1|z3ntk0,94,192,0|zcnw7z,94,192,0|zcnw80,95,193,1|zmdw7z,95,193,1|zmdw80,94,192,0|zvdyvz,94,192,0|zvdyw0,95,193,1|1053yvz,95,193,1|1053yw0,94,192,0|10e41jz,94,192,0|10e41k0,95,193,1|10nu1jz,95,193,1|10nu1k0,94,192,0|10x72vz,94,192,0|10x72w0,95,193,1|116x2vz,95,193,1|116x2w0,94,192,0|11fx5jz,94,192,0|11fx5k0,95,193,1|11pn5jz,95,193,1|11pn5k0,94,192,0|11yn87z,94,192,0|11yn880,95,193,1|128d87z,95,193,1|128d880,94,192,0|12hdavz,94,192,0|12hdaw0,95,193,1|12r3avz,95,193,1|12r3aw0,94,192,0|1303djz,94,192,0|1303dk0,95,193,1|139tdjz,95,193,1|139tdk0,94,192,0|13itg7z,94,192,0|13itg80,95,193,1|13sjg7z,95,193,1|13sjg80,94,192,0|141whjz,94,192,0|141whk0,95,193,1|14bmhjz,95,193,1|14bmhk0,94,192,0|14kmk7z,94,192,0|14kmk80,95,193,1|14uck7z,95,193,1|14uck80,94,192,0|153cmvz,94,192,0|153cmw0,95,193,1|15d2mvz,95,193,1|15d2mw0,94,192,0|15m2pjz,94,192,0|15m2pk0,95,193,1|15vspjz,95,193,1|15vspk0,94,192,0|164ss7z,94,192,0|164ss80,95,193,1|16eis7z,95,193,1|16eis80,94,192,0|16niuvz,94,192,0|16niuw0,95,193,1|16xltjz,95,193,1|16xltk0,94,192,0|176lw7z,94,192,0|176lw80,95,193,1|17gbw7z,95,193,1|17gbw80,94,192,0|17pbyvz,94,192,0|17pbyw0,95,193,1|17z1yvz,95,193,1|17z1yw0,94,192,0|18821jz,94,192,0|18821k0,95,193,1|18hs1jz,95,193,1|18hs1k0,94,192,0|18qs47z,94,192,0|18qs480,95,193,1|190i47z,95,193,1|190i480,94,192,0|199i6vz,94,192,0|199i6w0,95,193,1|19j86vz,95,193,1|19j86w0,94,192,0|19sl87z,94,192,0|19sl880,95,193,1|1a2b87z,95,193,1|1a2b880,94,192,0|1abbavz,94,192,0|1abbaw0,95,193,1|1al1avz,95,193,1|1al1aw0,94,192,0|1au1djz,94,192,0|1au1dk0,95,193,1|1b3rdjz,95,193,1|1b3rdk0,94,192,0|1bcrg7z,94,192,0|1bcrg80,95,193,1|1bmhg7z,95,193,1|1bmhg80,94,192,0|1bvhivz,94,192,0|1bvhiw0,95,193,1|1c57ivz,95,193,1|1c57iw0,94,192,0|1ce7ljz,94,192,0|1ce7lk0,95,193,1|1cnxljz,95,193,1|1cnxlk0,94,192,0|1cxamvz,94,192,0|1cxamw0,95,193,1|1d70mvz,95,193,1|1d70mw0,94,192,0|1dg0pjz,94,192,0|1dg0pk0,95,193,1|1dpqpjz,95,193,1|1dpqpk0,94,192,0|1dyqs7z,94,192,0|1dyqs80,95,193,1|1e8gs7z,95,193,1|1e8gs80,94,192,0|1ehguvz,94,192,0|1ehguw0,95,193,1|1er6uvz,95,193,1|1er6uw0,94,192,0|1f06xjz,94,192,0|1f06xk0,95,193,1|1f9wxjz,95,193,1|1f9wxk0,94,192,0|1fj9yvz,94,192,0|1fj9yw0,95,193,1|1fszyvz,95,193,1|1fszyw0,94,192,0|1g201jz,94,192,0|1g201k0,95,193,1|1gbq1jz,95,193,1|1gbq1k0,94,192,0|1gkq47z,94,192,0|1gkq480,95,193,1|1gug47z,95,193,1|1gug480,94,192,0|1h3g6vz,94,192,0|1h3g6w0,95,193,1|1hd66vz,95,193,1|1hd66w0,94,192,0|1hm69jz,94,192,0|1hm69k0,95,193,1|1hvw9jz,95,193,1|1hvw9k0,94,192,0|1i4wc7z,94,192,0|1i4wc80,95,193,1|1iemc7z,95,193,1|1iemc80,94,192,0|1inzdjz,94,192,0|1inzdk0,95,193,1|1ixpdjz,95,193,1|1ixpdk0,94,192,0|1j6pg7z,94,192,0|1j6pg80,95,193,1|1jgfg7z,95,193,1|1jgfg80,94,192,0|1jpfivz,94,192,0|1jpfiw0,95,193,1|1jz5ivz,95,193,1|1jz5iw0,94,192,0|1k85ljz,94,192,0|1k85lk0,95,193,1|1khvljz,95,193,1|1khvlk0,94,192,0|1kqvo7z,94,192,0|1kqvo80,95,193,1|1l0lo7z,95,193,1|1l0lo80,94,192,0|1l9lqvz,94,192,0|1l9lqw0,95,193,1|1ljopjz,95,193,1|1ljopk0,94,192,0|1lsos7z,94,192,0|1lsos80,95,193,1|1m2es7z,95,193,1|1m2es80,94,192,0|1mbeuvz,94,192,0|1mbeuw0,95,193,1|1ml4uvz,95,193,1|1ml4uw0,94,192,0|1mu4xjz,94,192,0|1mu4xk0,95,193,1|1n3uxjz,95,193,1|1n3uxk0,94,192,0|1ncv07z,94,192,0|1ncv080,95,193,1|1nml07z,95,193,1|1nml080,94,192,0|1nvl2vz,94,192,0|1nvl2w0,95,193,1|1o5b2vz,95,193,1|1o5b2w0,94,192,0|1oeo47z,94,192,0|1oeo480,95,193,1|1ooe47z,95,193,1|1ooe480,94,192,0|1oxe6vz,94,192,0|1oxe6w0,95,193,1|1p746vz,95,193,1|1p746w0,94,192,0|1pg49jz,94,192,0|1pg49k0,95,193,1|1ppu9jz,95,193,1|1ppu9k0,94,192,0|1pyuc7z,94,192,0|1pyuc80,95,193,1|1q8kc7z,95,193,1|1q8kc80,94,192,0|1qhkevz,94,192,0|1qhkew0,95,193,1|1qraevz,95,193,1|1qraew0,94,192,0|1r0ahjz,94,192,0|1r0ahk0,95,193,1|1ra0hjz,95,193,1|1ra0hk0,94,192,0|1rjdivz,94,192,0|1rjdiw0,95,193,1|1rt3ivz,95,193,1|1rt3iw0,94,192,0|1s23ljz,94,192,0|1s23lk0,95,193,1|1sbtljz,95,193,1|1sbtlk0,94,192,0|1skto7z,94,192,0|1skto80,95,193,1|1sujo7z,95,193,1|1sujo80,94,192,0|1t3jqvz,94,192,0|1t3jqw0,95,193,1|1td9qvz,95,193,1|1td9qw0,94,192,0|1tm9tjz,94,192,0|1tm9tk0,95,193,1|1tvztjz,95,193,1|1tvztk0,94,192,0|1u5cuvz,94,192,0|1u5cuw0,95,193,1|1uf2uvz,95,193,1|1uf2uw0,94,192,0|1uo2xjz,94,192,0|1uo2xk0,95,193,1|1uxsxjz,95,193,1|1uxsxk0,94,192,0|1v6t07z,94,192,0|1v6t080,95,193,1|1vgj07z,95,193,1|1vgj080,94,192,0|1vpj2vz,94,192,0|1vpj2w0,95,193,1|NaN,95,193,1",
        "Antarctica/Palmer|,59,1,0|-2lxhc1,59,1,0|-2lxhc0,38,41,1|-2ivzo1,38,41,1|-2ivzo0,41,40,0|-275ow1,41,40,0|-275ow0,38,41,1|-2042c1,38,41,1|-2042c0,41,40,0|-1odrk1,41,40,0|-1odrk0,38,41,1|-1fovo1,38,41,1|-1fovo0,41,40,0|-16brk1,41,40,0|-16brk0,38,41,1|-wluc1,38,41,1|-wluc0,41,40,0|-n8q81,41,40,0|-n8q80,38,41,1|-dvro1,38,41,1|-dvro0,41,40,0|-4ink1,41,40,0|-4ink0,38,41,0|24aizz,38,41,0|24aj00,39,43,1|29bxjz,39,43,1|29bxk0,38,41,0|6fn4bz,38,41,0|6fn4c0,41,40,0|6nz73z,41,40,0|6nz740,38,41,1|6vwazz,38,41,1|6vwb00,41,40,0|76p9rz,41,40,0|76p9s0,38,41,1|7emdnz,38,41,1|7emdo0,41,40,0|7psb3z,41,40,0|7psb40,38,41,1|7xcgbz,38,41,1|7xcgc0,41,40,0|88idrz,41,40,0|88ids0,38,41,1|8g2izz,38,41,1|8g2j00,41,40,0|8r8gfz,41,40,0|8r8gg0,38,41,1|90lezz,38,41,1|90lf00,41,40,0|99yj3z,41,40,0|99yj40,38,41,1|9hvmzz,38,41,1|9hvn00,41,40,0|9solrz,41,40,0|9sols0,38,41,1|a0lpnz,38,41,1|a0lpo0,41,40,0|abrn3z,41,40,0|abrn40,38,41,1|ajbsbz,38,41,1|ajbsc0,41,40,0|at1v3z,41,40,0|at1v40,38,41,1|b21uzz,38,41,1|b21v00,41,40,0|bd7sfz,41,40,0|bd7sg0,38,41,1|bl4wbz,38,41,1|bl4wc0,41,40,0|bvxv3z,41,40,0|bvxv40,38,41,1|c3uyzz,38,41,1|c3uz00,41,40,0|cenxrz,41,40,0|cenxs0,38,41,1|cml1nz,38,41,1|cml1o0,41,40,0|cxe0fz,41,40,0|cxe0g0,38,41,1|d5b4bz,38,41,1|d5b4c0,41,40,0|dgh1rz,41,40,0|dgh1s0,38,41,1|do16zz,38,41,1|do1700,41,40,0|dz74fz,41,40,0|dz74g0,38,41,1|e7u5nz,38,41,1|e7u5o0,41,40,0|ehx73z,41,40,0|ehx740,38,41,1|epuazz,38,41,1|epub00,41,40,0|ezxcfz,41,40,0|ezxcg0,38,41,1|f9n9nz,38,41,1|f9n9o0,41,40,0|fjdcfz,41,40,0|fjdcg0,38,41,1|fragbz,38,41,1|fragc0,41,40,0|g2gdrz,41,40,0|g2gds0,38,41,1|ga0izz,38,41,1|ga0j00,41,40,0|gl6gfz,41,40,0|gl6gg0,38,41,1|gsqlnz,38,41,1|gsqlo0,41,40,0|h3wj3z,41,40,0|h3wj40,38,41,1|hbgobz,38,41,1|hbgoc0,41,40,0|hmmlrz,41,40,0|hmmls0,38,41,1|hujpnz,38,41,1|hujpo0,41,40,0|i5cofz,41,40,0|i5cog0,38,41,1|id9sbz,38,41,1|id9sc0,41,40,0|io2r3z,41,40,0|io2r40,38,41,1|ivzuzz,38,41,1|ivzv00,41,40,0|j75sfz,41,40,0|j75sg0,38,41,1|jepxnz,38,41,1|jepxo0,41,40,0|jpvv3z,41,40,0|jpvv40,38,41,1|jyiwbz,38,41,1|jyiwc0,41,40,0|k8lxrz,41,40,0|k8lxs0,38,41,1|kgj1nz,38,41,1|kgj1o0,41,40,0|krc0fz,41,40,0|krc0g0,38,41,1|l0c0bz,38,41,1|l0c0c0,41,40,0|la233z,41,40,0|la2340,38,41,1|lkuwbz,38,41,1|lkuwc0,41,40,0|lq9f3z,41,40,0|lq9f40,38,41,1|m380bz,38,41,1|m380c0,41,40,0|m9pf3z,41,40,0|m9pf40,38,41,1|mly2zz,38,41,1|mly300,41,40,0|mssgfz,41,40,0|mssgg0,38,41,1|n4o5nz,38,41,1|n4o5o0,41,40,0|nbij3z,41,40,0|nbij40,38,41,1|o776zz,38,41,1|o77700,41,40,0|obvsfz,41,40,0|obvsg0,38,41,1|ohn4bz,38,41,1|ohn4c0,38,41,0|NaN,38,41,0",
        "Antarctica/Rothera|,59,1,0|3lxrzz,59,1,0|3lxs00,38,41,0|NaN,38,41,0",
        "Antarctica/Syowa|,0,194,0|-bwgbbh,0,194,0|-bwgbbg,96,4,0|NaN,96,4,0",
        "Antarctica/Troll|,59,1,0|ibrunz,59,1,0|ibruo0,16,1,0|idzk3z,16,1,0|idzk40,97,9,1|ip5erz,97,9,1|ip5es0,16,1,0|iwpmrz,16,1,0|iwpms0,97,9,1|j7vhfz,97,9,1|j7vhg0,16,1,0|jffpfz,16,1,0|jffpg0,97,9,1|jqlk3z,97,9,1|jqlk40,16,1,0|jyiqrz,16,1,0|jyiqs0,97,9,1|k9bmrz,97,9,1|k9bms0,16,1,0|kh8tfz,16,1,0|kh8tg0,97,9,1|ks1pfz,97,9,1|ks1pg0,16,1,0|kzyw3z,16,1,0|kzyw40,97,9,1|lb4qrz,97,9,1|lb4qs0,16,1,0|lioyrz,16,1,0|lioys0,97,9,1|ltutfz,97,9,1|ltutg0,16,1,0|m1f1fz,16,1,0|m1f1g0,97,9,1|mckw3z,97,9,1|mckw40,16,1,0|mki2rz,16,1,0|mki2s0,97,9,1|mvayrz,97,9,1|mvays0,16,1,0|n385fz,16,1,0|n385g0,97,9,1|ne11fz,97,9,1|ne11g0,16,1,0|nly83z,16,1,0|nly840,97,9,1|nwr43z,97,9,1|nwr440,16,1,0|o4oarz,16,1,0|o4oas0,97,9,1|ofu5fz,97,9,1|ofu5g0,16,1,0|onedfz,16,1,0|onedg0,97,9,1|oyk83z,97,9,1|oyk840,16,1,0|p64g3z,16,1,0|p64g40,97,9,1|phaarz,97,9,1|phaas0,16,1,0|pp7hfz,16,1,0|pp7hg0,97,9,1|q00dfz,97,9,1|q00dg0,16,1,0|q7xk3z,16,1,0|q7xk40,97,9,1|qiqg3z,97,9,1|qiqg40,16,1,0|qqnmrz,16,1,0|qqnms0,97,9,1|r1thfz,97,9,1|r1thg0,16,1,0|r9dpfz,16,1,0|r9dpg0,97,9,1|rkjk3z,97,9,1|rkjk40,16,1,0|rs3s3z,16,1,0|rs3s40,97,9,1|s39mrz,97,9,1|s39ms0,16,1,0|sb6tfz,16,1,0|sb6tg0,97,9,1|slzpfz,97,9,1|slzpg0,16,1,0|stww3z,16,1,0|stww40,97,9,1|t4ps3z,97,9,1|t4ps40,16,1,0|tcmyrz,16,1,0|tcmys0,97,9,1|tnfurz,97,9,1|tnfus0,16,1,0|tvd1fz,16,1,0|tvd1g0,97,9,1|u6iw3z,97,9,1|u6iw40,16,1,0|ue343z,16,1,0|ue3440,97,9,1|up8yrz,97,9,1|up8ys0,16,1,0|uwt6rz,16,1,0|uwt6s0,97,9,1|v7z1fz,97,9,1|v7z1g0,16,1,0|vfw83z,16,1,0|vfw840,97,9,1|vqp43z,97,9,1|vqp440,16,1,0|vymarz,16,1,0|vymas0,97,9,1|w9f6rz,97,9,1|w9f6s0,16,1,0|whcdfz,16,1,0|whcdg0,97,9,1|wsi83z,97,9,1|wsi840,16,1,0|x02g3z,16,1,0|x02g40,97,9,1|xb8arz,97,9,1|xb8as0,16,1,0|xisirz,16,1,0|xisis0,97,9,1|xtydfz,97,9,1|xtydg0,16,1,0|y1ilfz,16,1,0|y1ilg0,97,9,1|ycog3z,97,9,1|ycog40,16,1,0|yklmrz,16,1,0|yklms0,97,9,1|yveirz,97,9,1|yveis0,16,1,0|z3bpfz,16,1,0|z3bpg0,97,9,1|ze4lfz,97,9,1|ze4lg0,16,1,0|zm1s3z,16,1,0|zm1s40,97,9,1|zx7mrz,97,9,1|zx7ms0,16,1,0|104rurz,16,1,0|104rus0,97,9,1|10fxpfz,97,9,1|10fxpg0,16,1,0|10nhxfz,16,1,0|10nhxg0,97,9,1|10yns3z,97,9,1|10yns40,16,1,0|116kyrz,16,1,0|116kys0,97,9,1|11hdurz,97,9,1|11hdus0,16,1,0|11pb1fz,16,1,0|11pb1g0,97,9,1|1203xfz,97,9,1|1203xg0,16,1,0|128143z,16,1,0|1281440,97,9,1|12iu03z,97,9,1|12iu040,16,1,0|12qr6rz,16,1,0|12qr6s0,97,9,1|131x1fz,97,9,1|131x1g0,16,1,0|139h9fz,16,1,0|139h9g0,97,9,1|13kn43z,97,9,1|13kn440,16,1,0|13s7c3z,16,1,0|13s7c40,97,9,1|143d6rz,97,9,1|143d6s0,16,1,0|14badfz,16,1,0|14badg0,97,9,1|14m39fz,97,9,1|14m39g0,16,1,0|14u0g3z,16,1,0|14u0g40,97,9,1|154tc3z,97,9,1|154tc40,16,1,0|15cqirz,16,1,0|15cqis0,97,9,1|15nwdfz,97,9,1|15nwdg0,16,1,0|15vglfz,16,1,0|15vglg0,97,9,1|166mg3z,97,9,1|166mg40,16,1,0|16e6o3z,16,1,0|16e6o40,97,9,1|16pcirz,97,9,1|16pcis0,16,1,0|16x9pfz,16,1,0|16x9pg0,97,9,1|1782lfz,97,9,1|1782lg0,16,1,0|17fzs3z,16,1,0|17fzs40,97,9,1|17qso3z,97,9,1|17qso40,16,1,0|17ypurz,16,1,0|17ypus0,97,9,1|189iqrz,97,9,1|189iqs0,16,1,0|18hfxfz,16,1,0|18hfxg0,97,9,1|18sls3z,97,9,1|18sls40,16,1,0|190603z,16,1,0|1906040,97,9,1|19bburz,97,9,1|19bbus0,16,1,0|19iw2rz,16,1,0|19iw2s0,97,9,1|19u1xfz,97,9,1|19u1xg0,16,1,0|1a1z43z,16,1,0|1a1z440,97,9,1|1acs03z,97,9,1|1acs040,16,1,0|1akp6rz,16,1,0|1akp6s0,97,9,1|1avi2rz,97,9,1|1avi2s0,16,1,0|1b3f9fz,16,1,0|1b3f9g0,97,9,1|1bel43z,97,9,1|1bel440,16,1,0|1bm5c3z,16,1,0|1bm5c40,97,9,1|1bxb6rz,97,9,1|1bxb6s0,16,1,0|1c4verz,16,1,0|1c4ves0,97,9,1|1cg19fz,97,9,1|1cg19g0,16,1,0|1cnlhfz,16,1,0|1cnlhg0,97,9,1|1cyrc3z,97,9,1|1cyrc40,16,1,0|1d6oirz,16,1,0|1d6ois0,97,9,1|1dhherz,97,9,1|1dhhes0,16,1,0|1dpelfz,16,1,0|1dpelg0,97,9,1|1e07hfz,97,9,1|1e07hg0,16,1,0|1e84o3z,16,1,0|1e84o40,97,9,1|1ejairz,97,9,1|1ejais0,16,1,0|1equqrz,16,1,0|1equqs0,97,9,1|1f20lfz,97,9,1|1f20lg0,16,1,0|1f9ktfz,16,1,0|1f9ktg0,97,9,1|1fkqo3z,97,9,1|1fkqo40,16,1,0|1fsnurz,16,1,0|1fsnus0,97,9,1|1g3gqrz,97,9,1|1g3gqs0,16,1,0|1gbdxfz,16,1,0|1gbdxg0,97,9,1|1gm6tfz,97,9,1|1gm6tg0,16,1,0|1gu403z,16,1,0|1gu4040,97,9,1|1h4ww3z,97,9,1|1h4ww40,16,1,0|1hcu2rz,16,1,0|1hcu2s0,97,9,1|1hnzxfz,97,9,1|1hnzxg0,16,1,0|1hvk5fz,16,1,0|1hvk5g0,97,9,1|1i6q03z,97,9,1|1i6q040,16,1,0|1iea83z,16,1,0|1iea840,97,9,1|1ipg2rz,97,9,1|1ipg2s0,16,1,0|1ixd9fz,16,1,0|1ixd9g0,97,9,1|1j865fz,97,9,1|1j865g0,16,1,0|1jg3c3z,16,1,0|1jg3c40,97,9,1|1jqw83z,97,9,1|1jqw840,16,1,0|1jyterz,16,1,0|1jytes0,97,9,1|1k9z9fz,97,9,1|1k9z9g0,16,1,0|1khjhfz,16,1,0|1khjhg0,97,9,1|1kspc3z,97,9,1|1kspc40,16,1,0|1l09k3z,16,1,0|1l09k40,97,9,1|1lbferz,97,9,1|1lbfes0,16,1,0|1ljclfz,16,1,0|1ljclg0,97,9,1|1lu5hfz,97,9,1|1lu5hg0,16,1,0|1m22o3z,16,1,0|1m22o40,97,9,1|1mcvk3z,97,9,1|1mcvk40,16,1,0|1mksqrz,16,1,0|1mksqs0,97,9,1|1mvlmrz,97,9,1|1mvlms0,16,1,0|1n3itfz,16,1,0|1n3itg0,97,9,1|1neoo3z,97,9,1|1neoo40,16,1,0|1nm8w3z,16,1,0|1nm8w40,97,9,1|1nxeqrz,97,9,1|1nxeqs0,16,1,0|1o4yyrz,16,1,0|1o4yys0,97,9,1|1og4tfz,97,9,1|1og4tg0,16,1,0|1oo203z,16,1,0|1oo2040,97,9,1|1oyuw3z,97,9,1|1oyuw40,16,1,0|1p6s2rz,16,1,0|1p6s2s0,97,9,1|1phkyrz,97,9,1|1phkys0,16,1,0|1ppi5fz,16,1,0|1ppi5g0,97,9,1|1q0o03z,97,9,1|1q0o040,16,1,0|1q8883z,16,1,0|1q88840,97,9,1|1qje2rz,97,9,1|1qje2s0,16,1,0|1qqyarz,16,1,0|1qqyas0,97,9,1|1r245fz,97,9,1|1r245g0,16,1,0|1r9odfz,16,1,0|1r9odg0,97,9,1|1rku83z,97,9,1|1rku840,16,1,0|1rsrerz,16,1,0|1rsres0,97,9,1|1s3karz,97,9,1|1s3kas0,16,1,0|1sbhhfz,16,1,0|1sbhhg0,97,9,1|1smadfz,97,9,1|1smadg0,16,1,0|1su7k3z,16,1,0|1su7k40,97,9,1|1t5derz,97,9,1|1t5des0,16,1,0|1tcxmrz,16,1,0|1tcxms0,97,9,1|1to3hfz,97,9,1|1to3hg0,16,1,0|1tvnpfz,16,1,0|1tvnpg0,97,9,1|1u6tk3z,97,9,1|1u6tk40,16,1,0|1ueqqrz,16,1,0|1ueqqs0,97,9,1|1upjmrz,97,9,1|1upjms0,16,1,0|1uxgtfz,16,1,0|1uxgtg0,97,9,1|1v89pfz,97,9,1|1v89pg0,16,1,0|1vg6w3z,16,1,0|1vg6w40,97,9,1|1vqzs3z,97,9,1|1vqzs40,16,1,0|NaN,16,1,0",
        "Antarctica/Vostok|,59,1,0|-6aaao1,59,1,0|-6aaao0,86,183,0|cki77z,86,183,0|cki780,59,1,0|cykanz,59,1,0|cykao0,86,183,0|s5trfz,86,183,0|s5trg0,87,184,0|NaN,87,184,0",
        "Arctic/Longyearbyen|,0,195,0|-1421155,0,195,0|-1421154,8,8,0|-s0e081,8,8,0|-s0e080,9,9,1|-rsilg1,9,9,1|-rsilg0,8,8,0|-ridmk1,8,8,0|-ridmk0,9,9,1|-ragfw1,9,9,1|-ragfw0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,8,8,0|-fizzw1,8,8,0|-fizzw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cucg01,9,9,1|-cucg00,98,4,1|-co0o01,98,4,1|-co0o00,9,9,1|-cl6qk1,9,9,1|-cl6qk0,8,8,0|-cdmik1,8,8,0|-cdmik0,9,9,1|-c4kl81,9,9,1|-c4kl80,8,8,0|-bv9bs1,8,8,0|-bv9bs0,9,9,1|-btgl81,9,9,1|-btgl80,98,4,1|-bqxxc1,98,4,1|-bqxxc0,9,9,1|-blwd81,9,9,1|-blwd80,8,8,0|-bbtek1,8,8,0|-bbtek0,9,9,1|-b36ak1,9,9,1|-b36ak0,8,8,0|-atgak1,8,8,0|-atgak0,9,9,1|-akg7w1,9,9,1|-akg7w0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Asia/Aden|,0,194,0|-bwgbbh,0,194,0|-bwgbbg,96,4,0|NaN,96,4,0",
        "Asia/Almaty|,0,196,0|-nu1a91,0,196,0|-nu1a90,87,184,0|-kmr9w1,87,184,0|-kmr9w0,92,188,0|5vaxzz,92,188,0|5vay00,86,183,1|64pr7z,86,183,1|64pr80,92,188,0|6e2vbz,92,188,0|6e2vc0,86,183,1|6nhojz,86,183,1|6nhok0,92,188,0|6wusnz,92,188,0|6wuso0,86,183,1|769lvz,86,183,1|769lw0,92,188,0|7foknz,92,188,0|7foko0,86,183,1|7p1rjz,86,183,1|7p1rk0,92,188,0|7yesvz,92,188,0|7yesw0,86,183,1|87ru7z,86,183,1|87ru80,92,188,0|8h4vjz,92,188,0|8h4vk0,86,183,1|8qhwvz,86,183,1|8qhww0,92,188,0|8zuy7z,92,188,0|8zuy80,86,183,1|997zjz,86,183,1|997zk0,92,188,0|9il0vz,92,188,0|9il0w0,86,183,1|9ry27z,86,183,1|9ry280,92,188,0|a1b3jz,92,188,0|a1b3k0,86,183,1|aao4vz,86,183,1|aao4w0,92,188,0|ak167z,92,188,0|ak1680,86,183,1|atr67z,86,183,1|atr680,92,188,0|b347jz,92,188,0|b347k0,92,188,1|bchbnz,92,188,1|bchbo0,87,184,0|bi8qbz,87,184,0|bi8qc0,92,188,0|blua7z,92,188,0|blua80,86,183,1|bv7bjz,86,183,1|bv7bk0,92,188,0|c4kcvz,92,188,0|c4kcw0,86,183,1|cdxe7z,86,183,1|cdxe80,92,188,0|cnafjz,92,188,0|cnafk0,86,183,1|cwngvz,86,183,1|cwngw0,92,188,0|d60i7z,92,188,0|d60i80,86,183,1|dfdjjz,86,183,1|dfdjk0,92,188,0|dp3jjz,92,188,0|dp3jk0,86,183,1|dzwfjz,86,183,1|dzwfk0,92,188,0|e7tm7z,92,188,0|e7tm80,86,183,1|eimi7z,86,183,1|eimi80,92,188,0|eqjovz,92,188,0|eqjow0,86,183,1|f1ckvz,86,183,1|f1ckw0,92,188,0|f99rjz,92,188,0|f99rk0,86,183,1|fkfm7z,86,183,1|fkfm80,92,188,0|frzu7z,92,188,0|frzu80,86,183,1|g35ovz,86,183,1|g35ow0,92,188,0|gapwvz,92,188,0|gapww0,86,183,1|glvrjz,86,183,1|glvrk0,92,188,0|gtsy7z,92,188,0|gtsy80,86,183,1|h4lu7z,86,183,1|h4lu80,92,188,0|hcj0vz,92,188,0|hcj0w0,86,183,1|hnbwvz,86,183,1|hnbww0,92,188,0|hv93jz,92,188,0|hv93k0,86,183,1|i6ey7z,86,183,1|i6ey80,92,188,0|s9mpzz,92,188,0|s9mq00,87,184,0|NaN,87,184,0",
        "Asia/Amman|,0,197,0|-kcrtbl,0,197,0|-kcrtbk,14,9,0|1sed3z,14,9,0|1sed40,15,4,1|1yeybz,15,4,1|1yeyc0,14,9,0|29bmfz,14,9,0|29bmg0,15,4,1|2h6vnz,15,4,1|2h6vo0,14,9,0|2s3jrz,14,9,0|2s3js0,15,4,1|2zyszz,15,4,1|2zyt00,14,9,0|3axbrz,14,9,0|3axbs0,15,4,1|3kdznz,15,4,1|3kdzo0,14,9,0|3tp93z,14,9,0|3tp940,15,4,1|41kibz,15,4,1|41kic0,14,9,0|4cfbrz,14,9,0|4cfbs0,15,4,1|4kakzz,15,4,1|4kal00,14,9,0|7ygt3z,14,9,0|7ygt40,15,4,1|87vmbz,15,4,1|87vmc0,14,9,0|8heafz,14,9,0|8heag0,15,4,1|8qr8zz,15,4,1|8qr900,14,9,0|904d3z,14,9,0|904d40,15,4,1|99hbnz,15,4,1|99hbo0,14,9,0|9iufrz,14,9,0|9iufs0,15,4,1|9skczz,15,4,1|9skd00,14,9,0|a3ivrz,14,9,0|a3ivs0,15,4,1|abafnz,15,4,1|abafo0,14,9,0|alqfrz,14,9,0|alqfs0,15,4,1|au0ibz,15,4,1|au0ic0,14,9,0|b3zufz,14,9,0|b3zug0,15,4,1|bcdmbz,15,4,1|bcdmc0,14,9,0|bmgnrz,14,9,0|bmgns0,15,4,1|bvgnnz,15,4,1|bvgno0,14,9,0|c4trrz,14,9,0|c4trs0,15,4,1|ce6qbz,15,4,1|ce6qc0,14,9,0|cnjufz,14,9,0|cnjug0,15,4,1|cw6vnz,15,4,1|cw6vo0,14,9,0|d6mvrz,14,9,0|d6mvs0,15,4,1|dex13z,15,4,1|dex140,14,9,0|dpcyfz,14,9,0|dpcyg0,15,4,1|dy02fz,15,4,1|dy02g0,14,9,0|e8313z,14,9,0|e83140,15,4,1|egq53z,15,4,1|egq540,14,9,0|eqt3rz,14,9,0|eqt3s0,15,4,1|ezg7rz,15,4,1|ezg7s0,14,9,0|fe5ufz,14,9,0|fe5ug0,15,4,1|fij93z,15,4,1|fij940,14,9,0|fs7efz,14,9,0|fs7eg0,15,4,1|g1mafz,15,4,1|g1mag0,14,9,0|gaxh3z,14,9,0|gaxh40,15,4,1|gkcd3z,15,4,1|gkcd40,14,9,0|gtpefz,14,9,0|gtpeg0,15,4,1|h32frz,15,4,1|h32fs0,14,9,0|hcfh3z,14,9,0|hcfh40,15,4,1|hn8d3z,15,4,1|hn8d40,14,9,0|hv5jrz,14,9,0|hv5js0,15,4,1|i5lh3z,15,4,1|i5lh40,14,9,0|ie8l3z,14,9,0|ie8l40,15,4,1|inlmfz,15,4,1|inlmg0,14,9,0|iwynrz,14,9,0|iwyns0,15,4,1|j7rjrz,15,4,1|j7rjs0,14,9,0|jfoqfz,14,9,0|jfoqg0,15,4,1|jqhmfz,15,4,1|jqhmg0,14,9,0|jyet3z,14,9,0|jyet40,15,4,1|k9knrz,15,4,1|k9kns0,14,9,0|kh4vrz,14,9,0|kh4vs0,15,4,1|ksaqfz,15,4,1|ksaqg0,14,9,0|kzuyfz,14,9,0|kzuyg0,15,4,1|lb0t3z,15,4,1|lb0t40,14,9,0|lixzrz,14,9,0|lixzs0,15,4,1|ltqvrz,15,4,1|ltqvs0,14,9,0|m1o2fz,14,9,0|m1o2g0,15,4,1|my2nnz,15,4,1|my2no0,14,9,0|n347rz,14,9,0|n347s0,15,4,1|nea2fz,15,4,1|nea2g0,14,9,0|nluafz,14,9,0|nluag0,15,4,1|nx053z,15,4,1|nx0540,14,9,0|o4xbrz,14,9,0|o4xbs0,15,4,1|ofq7rz,15,4,1|ofq7s0,14,9,0|onnefz,14,9,0|onneg0,15,4,1|oygafz,15,4,1|oygag0,14,9,0|p6dh3z,14,9,0|p6dh40,15,4,1|ph6d3z,15,4,1|ph6d40,14,9,0|pp3jrz,14,9,0|pp3js0,15,4,1|pzwfrz,15,4,1|pzwfs0,14,9,0|q7tmfz,14,9,0|q7tmg0,15,4,1|qizh3z,15,4,1|qizh40,14,9,0|qqjp3z,14,9,0|qqjp40,15,4,1|r1pjrz,15,4,1|r1pjs0,14,9,0|r7tx3z,14,9,0|r7tx40,15,4,1|rkfmfz,15,4,1|rkfmg0,96,4,0|NaN,96,4,0",
        "Asia/Anadyr|,0,198,0|-nu1sv9,0,198,0|-nu1sv8,99,192,0|-kmrtc1,99,192,0|-kmrtc0,100,193,0|5vaejz,100,193,0|5vaek0,101,199,1|64p7rz,101,199,1|64p7s0,100,193,0|6e2bvz,100,193,0|6e2bw0,100,193,1|6nh7vz,100,193,1|6nh7w0,99,192,0|6wubzz,99,192,0|6wuc00,100,193,1|76957z,100,193,1|769580,99,192,0|7fo3zz,99,192,0|7fo400,100,193,1|7p1avz,100,193,1|7p1aw0,99,192,0|7yec7z,99,192,0|7yec80,100,193,1|87rdjz,100,193,1|87rdk0,99,192,0|8h4evz,99,192,0|8h4ew0,100,193,1|8qhg7z,100,193,1|8qhg80,99,192,0|8zuhjz,99,192,0|8zuhk0,100,193,1|997ivz,100,193,1|997iw0,99,192,0|9ikk7z,99,192,0|9ikk80,100,193,1|9rxljz,100,193,1|9rxlk0,99,192,0|a1amvz,99,192,0|a1amw0,100,193,1|aano7z,100,193,1|aano80,99,192,0|ak0pjz,99,192,0|ak0pk0,100,193,1|atqpjz,100,193,1|atqpk0,99,192,0|b33qvz,99,192,0|b33qw0,99,192,1|bcguzz,99,192,1|bcgv00,85,182,0|bi89nz,85,182,0|bi89o0,99,192,0|blttjz,99,192,0|blttk0,100,193,1|bv6uvz,100,193,1|bv6uw0,99,192,0|c4jw7z,99,192,0|c4jw80,100,193,1|cdwxjz,100,193,1|cdwxk0,99,192,0|cn9yvz,99,192,0|cn9yw0,100,193,1|cwn07z,100,193,1|cwn080,99,192,0|d601jz,99,192,0|d601k0,100,193,1|dfd2vz,100,193,1|dfd2w0,99,192,0|dp32vz,99,192,0|dp32w0,100,193,1|dzvyvz,100,193,1|dzvyw0,99,192,0|e7t5jz,99,192,0|e7t5k0,100,193,1|eim1jz,100,193,1|eim1k0,99,192,0|eqj87z,99,192,0|eqj880,100,193,1|f1c47z,100,193,1|f1c480,99,192,0|f99avz,99,192,0|f99aw0,100,193,1|fkf5jz,100,193,1|fkf5k0,99,192,0|frzdjz,99,192,0|frzdk0,100,193,1|g3587z,100,193,1|g35880,99,192,0|gapg7z,99,192,0|gapg80,100,193,1|glvavz,100,193,1|glvaw0,99,192,0|gtshjz,99,192,0|gtshk0,100,193,1|h4ldjz,100,193,1|h4ldk0,99,192,0|hcik7z,99,192,0|hcik80,100,193,1|hnbg7z,100,193,1|hnbg80,99,192,0|hv8mvz,99,192,0|hv8mw0,100,193,1|i6ehjz,100,193,1|i6ehk0,99,192,0|idypjz,99,192,0|idypk0,100,193,1|ip4k7z,100,193,1|ip4k80,99,192,0|iwos7z,99,192,0|iwos80,100,193,1|j7umvz,100,193,1|j7umw0,99,192,0|jfeuvz,99,192,0|jfeuw0,100,193,1|jqkpjz,100,193,1|jqkpk0,99,192,0|jyhw7z,99,192,0|jyhw80,100,193,1|k9as7z,100,193,1|k9as80,99,192,0|kh7yvz,99,192,0|kh7yw0,100,193,1|ks0uvz,100,193,1|ks0uw0,99,192,0|kzy1jz,99,192,0|kzy1k0,99,192,1|lb3yzz,99,192,1|lb3z00,85,182,0|lio6zz,85,182,0|lio700,99,192,0|NaN,99,192,0",
        "Asia/Aqtau|,0,200,0|-nu15b5,0,200,0|-nu15b4,102,201,0|-kmr741,102,201,0|-kmr740,87,184,0|64pwrz,87,184,0|64pws0,92,188,0|6e2vbz,92,188,0|6e2vc0,92,188,1|6nhrbz,92,188,1|6nhrc0,87,184,0|6wuvfz,87,184,0|6wuvg0,92,188,1|769onz,92,188,1|769oo0,87,184,0|7fonfz,87,184,0|7fong0,92,188,1|7p1ubz,92,188,1|7p1uc0,87,184,0|7yevnz,87,184,0|7yevo0,92,188,1|87rwzz,92,188,1|87rx00,87,184,0|8h4ybz,87,184,0|8h4yc0,92,188,1|8qhznz,92,188,1|8qhzo0,87,184,0|8zv0zz,87,184,0|8zv100,92,188,1|9982bz,92,188,1|9982c0,87,184,0|9il3nz,87,184,0|9il3o0,92,188,1|9ry4zz,92,188,1|9ry500,87,184,0|a1b6bz,87,184,0|a1b6c0,92,188,1|aao7nz,92,188,1|aao7o0,87,184,0|ak18zz,87,184,0|ak1900,92,188,1|atr8zz,92,188,1|atr900,87,184,0|b34abz,87,184,0|b34ac0,87,184,1|bchefz,87,184,1|bcheg0,102,201,0|bi8t3z,102,201,0|bi8t40,87,184,0|bluczz,87,184,0|blud00,92,188,1|bv7ebz,92,188,1|bv7ec0,87,184,0|c4kfnz,87,184,0|c4kfo0,92,188,1|cdxgzz,92,188,1|cdxh00,87,184,0|cnaibz,87,184,0|cnaic0,92,188,1|cwnjnz,92,188,1|cwnjo0,102,201,0|d60nrz,102,201,0|d60ns0,87,184,1|dfdp3z,87,184,1|dfdp40,102,201,0|dp3p3z,102,201,0|dp3p40,87,184,1|dzwl3z,87,184,1|dzwl40,102,201,0|e7trrz,102,201,0|e7trs0,87,184,1|eimnrz,87,184,1|eimns0,102,201,0|eqjufz,102,201,0|eqjug0,87,184,1|f1cqfz,87,184,1|f1cqg0,102,201,0|f99x3z,102,201,0|f99x40,87,184,1|fkfrrz,87,184,1|fkfrs0,102,201,0|frzzrz,102,201,0|frzzs0,87,184,1|g35ufz,87,184,1|g35ug0,102,201,0|gaq2fz,102,201,0|gaq2g0,87,184,1|glvx3z,87,184,1|glvx40,102,201,0|gtt3rz,102,201,0|gtt3s0,87,184,1|h4lzrz,87,184,1|h4lzs0,102,201,0|hcj6fz,102,201,0|hcj6g0,87,184,1|hnc2fz,87,184,1|hnc2g0,102,201,0|hv993z,102,201,0|hv9940,87,184,1|i6f3rz,87,184,1|i6f3s0,87,184,0|NaN,87,184,0",
        "Asia/Aqtobe|,0,202,0|-nu16l5,0,202,0|-nu16l4,102,201,0|-kmr741,102,201,0|-kmr740,87,184,0|5vb0rz,87,184,0|5vb0s0,92,188,1|64ptzz,92,188,1|64pu00,92,188,0|6e2vbz,92,188,0|6e2vc0,92,188,1|6nhrbz,92,188,1|6nhrc0,87,184,0|6wuvfz,87,184,0|6wuvg0,92,188,1|769onz,92,188,1|769oo0,87,184,0|7fonfz,87,184,0|7fong0,92,188,1|7p1ubz,92,188,1|7p1uc0,87,184,0|7yevnz,87,184,0|7yevo0,92,188,1|87rwzz,92,188,1|87rx00,87,184,0|8h4ybz,87,184,0|8h4yc0,92,188,1|8qhznz,92,188,1|8qhzo0,87,184,0|8zv0zz,87,184,0|8zv100,92,188,1|9982bz,92,188,1|9982c0,87,184,0|9il3nz,87,184,0|9il3o0,92,188,1|9ry4zz,92,188,1|9ry500,87,184,0|a1b6bz,87,184,0|a1b6c0,92,188,1|aao7nz,92,188,1|aao7o0,87,184,0|ak18zz,87,184,0|ak1900,92,188,1|atr8zz,92,188,1|atr900,87,184,0|b34abz,87,184,0|b34ac0,87,184,1|bchefz,87,184,1|bcheg0,102,201,0|bi8t3z,102,201,0|bi8t40,87,184,0|bluczz,87,184,0|blud00,92,188,1|bv7ebz,92,188,1|bv7ec0,87,184,0|c4kfnz,87,184,0|c4kfo0,92,188,1|cdxgzz,92,188,1|cdxh00,87,184,0|cnaibz,87,184,0|cnaic0,92,188,1|cwnjnz,92,188,1|cwnjo0,87,184,0|d60kzz,87,184,0|d60l00,92,188,1|dfdmbz,92,188,1|dfdmc0,87,184,0|dp3mbz,87,184,0|dp3mc0,92,188,1|dzwibz,92,188,1|dzwic0,87,184,0|e7tozz,87,184,0|e7tp00,92,188,1|eimkzz,92,188,1|eiml00,87,184,0|eqjrnz,87,184,0|eqjro0,92,188,1|f1cnnz,92,188,1|f1cno0,87,184,0|f99ubz,87,184,0|f99uc0,92,188,1|fkfozz,92,188,1|fkfp00,87,184,0|frzwzz,87,184,0|frzx00,92,188,1|g35rnz,92,188,1|g35ro0,87,184,0|gapznz,87,184,0|gapzo0,92,188,1|glvubz,92,188,1|glvuc0,87,184,0|gtt0zz,87,184,0|gtt100,92,188,1|h4lwzz,92,188,1|h4lx00,87,184,0|hcj3nz,87,184,0|hcj3o0,92,188,1|hnbznz,92,188,1|hnbzo0,87,184,0|hv96bz,87,184,0|hv96c0,92,188,1|i6f0zz,92,188,1|i6f100,87,184,0|NaN,87,184,0",
        "Asia/Ashgabat|,0,203,0|-nu16t9,0,203,0|-nu16t8,102,201,0|-kmr741,102,201,0|-kmr740,87,184,0|5vb0rz,87,184,0|5vb0s0,92,188,1|64ptzz,92,188,1|64pu00,87,184,0|6e2y3z,87,184,0|6e2y40,92,188,1|6nhrbz,92,188,1|6nhrc0,87,184,0|6wuvfz,87,184,0|6wuvg0,92,188,1|769onz,92,188,1|769oo0,87,184,0|7fonfz,87,184,0|7fong0,92,188,1|7p1ubz,92,188,1|7p1uc0,87,184,0|7yevnz,87,184,0|7yevo0,92,188,1|87rwzz,92,188,1|87rx00,87,184,0|8h4ybz,87,184,0|8h4yc0,92,188,1|8qhznz,92,188,1|8qhzo0,87,184,0|8zv0zz,87,184,0|8zv100,92,188,1|9982bz,92,188,1|9982c0,87,184,0|9il3nz,87,184,0|9il3o0,92,188,1|9ry4zz,92,188,1|9ry500,87,184,0|a1b6bz,87,184,0|a1b6c0,92,188,1|aao7nz,92,188,1|aao7o0,87,184,0|ak18zz,87,184,0|ak1900,92,188,1|atr8zz,92,188,1|atr900,87,184,0|b34abz,87,184,0|b34ac0,87,184,1|bchefz,87,184,1|bcheg0,102,201,0|bi8t3z,102,201,0|bi8t40,87,184,0|NaN,87,184,0",
        "Asia/Atyrau|,0,204,0|-nu15m9,0,204,0|-nu15m8,96,4,0|-kmr4c1,96,4,0|-kmr4c0,87,184,0|64pwrz,87,184,0|64pws0,92,188,0|6e2vbz,92,188,0|6e2vc0,92,188,1|6nhrbz,92,188,1|6nhrc0,87,184,0|6wuvfz,87,184,0|6wuvg0,92,188,1|769onz,92,188,1|769oo0,87,184,0|7fonfz,87,184,0|7fong0,92,188,1|7p1ubz,92,188,1|7p1uc0,87,184,0|7yevnz,87,184,0|7yevo0,92,188,1|87rwzz,92,188,1|87rx00,87,184,0|8h4ybz,87,184,0|8h4yc0,92,188,1|8qhznz,92,188,1|8qhzo0,87,184,0|8zv0zz,87,184,0|8zv100,92,188,1|9982bz,92,188,1|9982c0,87,184,0|9il3nz,87,184,0|9il3o0,92,188,1|9ry4zz,92,188,1|9ry500,87,184,0|a1b6bz,87,184,0|a1b6c0,92,188,1|aao7nz,92,188,1|aao7o0,87,184,0|ak18zz,87,184,0|ak1900,92,188,1|atr8zz,92,188,1|atr900,87,184,0|b34abz,87,184,0|b34ac0,87,184,1|bchefz,87,184,1|bcheg0,102,201,0|bi8t3z,102,201,0|bi8t40,87,184,0|bluczz,87,184,0|blud00,92,188,1|bv7ebz,92,188,1|bv7ec0,87,184,0|c4kfnz,87,184,0|c4kfo0,92,188,1|cdxgzz,92,188,1|cdxh00,87,184,0|cnaibz,87,184,0|cnaic0,92,188,1|cwnjnz,92,188,1|cwnjo0,87,184,0|d60kzz,87,184,0|d60l00,92,188,1|dfdmbz,92,188,1|dfdmc0,87,184,0|dp3mbz,87,184,0|dp3mc0,92,188,1|dzwibz,92,188,1|dzwic0,87,184,0|e7tozz,87,184,0|e7tp00,92,188,1|eimkzz,92,188,1|eiml00,87,184,0|eqjrnz,87,184,0|eqjro0,92,188,1|f1cnnz,92,188,1|f1cno0,87,184,0|f99ubz,87,184,0|f99uc0,87,184,1|fkfrrz,87,184,1|fkfrs0,102,201,0|frzzrz,102,201,0|frzzs0,87,184,1|g35ufz,87,184,1|g35ug0,102,201,0|gaq2fz,102,201,0|gaq2g0,87,184,1|glvx3z,87,184,1|glvx40,102,201,0|gtt3rz,102,201,0|gtt3s0,87,184,1|h4lzrz,87,184,1|h4lzs0,102,201,0|hcj6fz,102,201,0|hcj6g0,87,184,1|hnc2fz,87,184,1|hnc2g0,102,201,0|hv993z,102,201,0|hv9940,87,184,1|i6f3rz,87,184,1|i6f3s0,87,184,0|NaN,87,184,0",
        "Asia/Baghdad|,0,205,0|-15r1hk5,0,205,0|-15r1hk4,53,206,0|-r50g81,53,206,0|-r50g80,96,4,0|6fmnnz,96,4,0|6fmno0,102,201,1|6nhwvz,102,201,1|6nhww0,96,4,0|6wt6bz,96,4,0|6wt6c0,102,201,1|769u7z,102,201,1|769u80,96,4,0|7foszz,96,4,0|7fot00,102,201,1|7p3m7z,102,201,1|7p3m80,96,4,0|7ygqbz,96,4,0|7ygqc0,102,201,1|87rzrz,102,201,1|87rzs0,96,4,0|8h513z,96,4,0|8h5140,102,201,1|8qi2fz,102,201,1|8qi2g0,96,4,0|8zv3rz,96,4,0|8zv3s0,102,201,1|99853z,102,201,1|998540,96,4,0|9il6fz,96,4,0|9il6g0,102,201,1|9ry7rz,102,201,1|9ry7s0,96,4,0|a1b93z,96,4,0|a1b940,102,201,1|aaoafz,102,201,1|aaoag0,96,4,0|ak1brz,96,4,0|ak1bs0,102,201,1|atrbrz,102,201,1|atrbs0,96,4,0|b36dbz,96,4,0|b36dc0,102,201,1|bcl9bz,102,201,1|bcl9c0,96,4,0|bm05bz,96,4,0|bm05c0,102,201,1|bvf1bz,102,201,1|bvf1c0,96,4,0|c4s2nz,96,4,0|c4s2o0,102,201,1|ce6ynz,102,201,1|ce6yo0,96,4,0|cnjzzz,96,4,0|cnk000,102,201,1|cwyvzz,102,201,1|cwyw00,96,4,0|d6bxbz,96,4,0|d6bxc0,102,201,1|dfqtbz,102,201,1|dfqtc0,96,4,0|dp5pbz,96,4,0|dp5pc0,102,201,1|dyklbz,102,201,1|dyklc0,96,4,0|e7xmnz,96,4,0|e7xmo0,102,201,1|ehcinz,102,201,1|ehcio0,96,4,0|eqpjzz,96,4,0|eqpk00,102,201,1|f04fzz,102,201,1|f04g00,96,4,0|f9hhbz,96,4,0|f9hhc0,102,201,1|fiwdbz,102,201,1|fiwdc0,96,4,0|fsb9bz,96,4,0|fsb9c0,102,201,1|g1q5bz,102,201,1|g1q5c0,96,4,0|gb36nz,96,4,0|gb36o0,102,201,1|gki2nz,102,201,1|gki2o0,96,4,0|gtv3zz,96,4,0|gtv400,102,201,1|h39zzz,102,201,1|h3a000,96,4,0|hcn1bz,96,4,0|hcn1c0,102,201,1|hm1xbz,102,201,1|hm1xc0,96,4,0|hvgtbz,96,4,0|hvgtc0,102,201,1|i4vpbz,102,201,1|i4vpc0,96,4,0|ie8qnz,96,4,0|ie8qo0,102,201,1|innmnz,102,201,1|innmo0,96,4,0|ix0nzz,96,4,0|ix0o00,102,201,1|j6fjzz,102,201,1|j6fk00,96,4,0|jfslbz,96,4,0|jfslc0,102,201,1|jp7hbz,102,201,1|jp7hc0,96,4,0|NaN,96,4,0",
        "Asia/Bahrain|,0,207,0|-q3gmvl,0,207,0|-q3gmvk,102,201,0|19d0vz,102,201,0|19d0w0,96,4,0|NaN,96,4,0",
        "Asia/Baku|,0,208,0|-nu158d,0,208,0|-nu158c,96,4,0|-6p7kc1,96,4,0|-6p7kc0,102,201,0|5vb3jz,102,201,0|5vb3k0,87,184,1|64pwrz,87,184,1|64pws0,102,201,0|6e30vz,102,201,0|6e30w0,87,184,1|6nhu3z,87,184,1|6nhu40,102,201,0|6wuy7z,102,201,0|6wuy80,87,184,1|769rfz,87,184,1|769rg0,102,201,0|7foq7z,102,201,0|7foq80,87,184,1|7p1x3z,87,184,1|7p1x40,102,201,0|7yeyfz,102,201,0|7yeyg0,87,184,1|87rzrz,87,184,1|87rzs0,102,201,0|8h513z,102,201,0|8h5140,87,184,1|8qi2fz,87,184,1|8qi2g0,102,201,0|8zv3rz,102,201,0|8zv3s0,87,184,1|99853z,87,184,1|998540,102,201,0|9il6fz,102,201,0|9il6g0,87,184,1|9ry7rz,87,184,1|9ry7s0,102,201,0|a1b93z,102,201,0|a1b940,87,184,1|aaoafz,87,184,1|aaoag0,102,201,0|ak1brz,102,201,0|ak1bs0,87,184,1|atrbrz,87,184,1|atrbs0,102,201,0|b34d3z,102,201,0|b34d40,102,201,1|bchh7z,102,201,1|bchh80,96,4,0|bluijz,96,4,0|bluik0,102,201,1|bv7jvz,102,201,1|bv7jw0,102,201,0|dp3xfz,102,201,0|dp3xg0,87,184,1|dzwtfz,87,184,1|dzwtg0,102,201,0|e7txbz,102,201,0|e7txc0,87,184,1|eimtbz,87,184,1|eimtc0,102,201,0|eqjzzz,102,201,0|eqk000,87,184,1|f1cvzz,87,184,1|f1cw00,102,201,0|f9a2nz,102,201,0|f9a2o0,87,184,1|fkfxbz,87,184,1|fkfxc0,102,201,0|fs05bz,102,201,0|fs05c0,87,184,1|g35zzz,87,184,1|g36000,102,201,0|gaq7zz,102,201,0|gaq800,87,184,1|glw2nz,87,184,1|glw2o0,102,201,0|gtt9bz,102,201,0|gtt9c0,87,184,1|h4m5bz,87,184,1|h4m5c0,102,201,0|hcjbzz,102,201,0|hcjc00,87,184,1|hnc7zz,87,184,1|hnc800,102,201,0|hv9enz,102,201,0|hv9eo0,87,184,1|i6f9bz,87,184,1|i6f9c0,102,201,0|idzhbz,102,201,0|idzhc0,87,184,1|ip5bzz,87,184,1|ip5c00,102,201,0|iwpjzz,102,201,0|iwpk00,87,184,1|j7venz,87,184,1|j7veo0,102,201,0|jffmnz,102,201,0|jffmo0,87,184,1|jqlhbz,87,184,1|jqlhc0,102,201,0|jyinzz,102,201,0|jyio00,87,184,1|k9bjzz,87,184,1|k9bk00,102,201,0|kh8qnz,102,201,0|kh8qo0,87,184,1|ks1mnz,87,184,1|ks1mo0,102,201,0|kzytbz,102,201,0|kzytc0,87,184,1|lb4nzz,87,184,1|lb4o00,102,201,0|liovzz,102,201,0|liow00,87,184,1|ltuqnz,87,184,1|ltuqo0,102,201,0|m1eynz,102,201,0|m1eyo0,87,184,1|mcktbz,87,184,1|mcktc0,102,201,0|mkhzzz,102,201,0|mki000,87,184,1|mvavzz,87,184,1|mvaw00,102,201,0|n382nz,102,201,0|n382o0,87,184,1|ne0ynz,87,184,1|ne0yo0,102,201,0|nly5bz,102,201,0|nly5c0,87,184,1|nwr1bz,87,184,1|nwr1c0,102,201,0|NaN,102,201,0",
        "Asia/Bangkok|,0,209,0|-1ayyla5,0,209,0|-1ayyla4,53,209,0|-pysda5,53,209,0|-pysda4,86,183,0|NaN,86,183,0",
        "Asia/Barnaul|,0,210,0|-q4ljid,0,210,0|-q4ljic,92,188,0|-kmrco1,92,188,0|-kmrco0,86,183,0|5vav7z,86,183,0|5vav80,84,181,1|64pofz,84,181,1|64pog0,86,183,0|6e2sjz,86,183,0|6e2sk0,84,181,1|6nhlrz,84,181,1|6nhls0,86,183,0|6wupvz,86,183,0|6wupw0,84,181,1|769j3z,84,181,1|769j40,86,183,0|7fohvz,86,183,0|7fohw0,84,181,1|7p1orz,84,181,1|7p1os0,86,183,0|7yeq3z,86,183,0|7yeq40,84,181,1|87rrfz,84,181,1|87rrg0,86,183,0|8h4srz,86,183,0|8h4ss0,84,181,1|8qhu3z,84,181,1|8qhu40,86,183,0|8zuvfz,86,183,0|8zuvg0,84,181,1|997wrz,84,181,1|997ws0,86,183,0|9iky3z,86,183,0|9iky40,84,181,1|9rxzfz,84,181,1|9rxzg0,86,183,0|a1b0rz,86,183,0|a1b0s0,84,181,1|aao23z,84,181,1|aao240,86,183,0|ak13fz,86,183,0|ak13g0,84,181,1|atr3fz,84,181,1|atr3g0,86,183,0|b344rz,86,183,0|b344s0,86,183,1|bch8vz,86,183,1|bch8w0,92,188,0|bi8njz,92,188,0|bi8nk0,86,183,0|blu7fz,86,183,0|blu7g0,84,181,1|bv78rz,84,181,1|bv78s0,86,183,0|c4ka3z,86,183,0|c4ka40,84,181,1|cdxbfz,84,181,1|cdxbg0,86,183,0|cnacrz,86,183,0|cnacs0,84,181,1|cwne3z,84,181,1|cwne40,86,183,0|d60ffz,86,183,0|d60fg0,84,181,1|d98v3z,84,181,1|d98v40,86,183,1|dfdjjz,86,183,1|dfdjk0,92,188,0|dp3jjz,92,188,0|dp3jk0,86,183,1|dzwfjz,86,183,1|dzwfk0,92,188,0|e7tm7z,92,188,0|e7tm80,86,183,1|eimi7z,86,183,1|eimi80,92,188,0|eqjovz,92,188,0|eqjow0,86,183,1|f1ckvz,86,183,1|f1ckw0,92,188,0|f99rjz,92,188,0|f99rk0,86,183,1|fkfm7z,86,183,1|fkfm80,92,188,0|frzu7z,92,188,0|frzu80,86,183,1|g35ovz,86,183,1|g35ow0,92,188,0|gapwvz,92,188,0|gapww0,86,183,1|glvrjz,86,183,1|glvrk0,92,188,0|gtsy7z,92,188,0|gtsy80,86,183,1|h4lu7z,86,183,1|h4lu80,92,188,0|hcj0vz,92,188,0|hcj0w0,86,183,1|hnbwvz,86,183,1|hnbww0,92,188,0|hv93jz,92,188,0|hv93k0,86,183,1|i6ey7z,86,183,1|i6ey80,92,188,0|idz67z,92,188,0|idz680,86,183,1|ip50vz,86,183,1|ip50w0,92,188,0|iwp8vz,92,188,0|iwp8w0,86,183,1|j7v3jz,86,183,1|j7v3k0,92,188,0|jffbjz,92,188,0|jffbk0,86,183,1|jql67z,86,183,1|jql680,92,188,0|jyicvz,92,188,0|jyicw0,86,183,1|k9b8vz,86,183,1|k9b8w0,92,188,0|kh8fjz,92,188,0|kh8fk0,86,183,1|ks1bjz,86,183,1|ks1bk0,92,188,0|kzyi7z,92,188,0|kzyi80,86,183,1|lb4cvz,86,183,1|lb4cw0,92,188,0|liokvz,92,188,0|liokw0,86,183,0|ne0krz,86,183,0|ne0ks0,92,188,0|o4nwvz,92,188,0|o4nww0,86,183,0|NaN,86,183,0",
        "Asia/Beirut|,0,211,0|-1ayy98p,0,211,0|-1ayy98o,14,9,0|-pyzew1,14,9,0|-pyzew0,15,4,1|-po4r01,15,4,1|-po4r00,14,9,0|-pfwdk1,14,9,0|-pfwdk0,15,4,1|-p6hkc1,15,4,1|-p6hkc0,14,9,0|-oxj9k1,14,9,0|-oxj9k0,15,4,1|-ongdo1,15,4,1|-ongdo0,14,9,0|-oddc81,14,9,0|-oddc80,15,4,1|-o5t701,15,4,1|-o5t700,14,9,0|-6m2iw1,14,9,0|-6m2iw0,15,4,1|-6e79o1,15,4,1|-6e79o0,14,9,0|-63alk1,14,9,0|-63alk0,15,4,1|-5vfcc1,15,4,1|-5vfcc0,14,9,0|-5kio81,14,9,0|-5kio80,15,4,1|-5cnf01,15,4,1|-5cnf00,14,9,0|-51ow81,14,9,0|-51ow80,15,4,1|-4ttn01,15,4,1|-4ttn00,14,9,0|-4iwyw1,14,9,0|-4iwyw0,15,4,1|-4b1po1,15,4,1|-4b1po0,14,9,0|1ag2fz,14,9,0|1ag2g0,15,4,1|1fn0zz,15,4,1|1fn100,14,9,0|1qjp3z,14,9,0|1qjp40,15,4,1|1yeybz,15,4,1|1yeyc0,14,9,0|29bmfz,14,9,0|29bmg0,15,4,1|2h6vnz,15,4,1|2h6vo0,14,9,0|2s3jrz,14,9,0|2s3js0,15,4,1|2zyszz,15,4,1|2zyt00,14,9,0|3axbrz,14,9,0|3axbs0,15,4,1|3iskzz,15,4,1|3isl00,14,9,0|3tp93z,14,9,0|3tp940,15,4,1|41kibz,15,4,1|41kic0,14,9,0|4cfbrz,14,9,0|4cfbs0,15,4,1|4kakzz,15,4,1|4kal00,14,9,0|7h8frz,14,9,0|7h8fs0,15,4,1|7pvgzz,15,4,1|7pvh00,14,9,0|800d3z,14,9,0|800d40,15,4,1|88nebz,15,4,1|88nec0,14,9,0|8isafz,14,9,0|8isag0,15,4,1|8rfbnz,15,4,1|8rfbo0,14,9,0|91k7rz,14,9,0|91k7s0,15,4,1|9a78zz,15,4,1|9a7900,14,9,0|9lzefz,14,9,0|9lzeg0,15,4,1|9t10zz,15,4,1|9t1100,14,9,0|a3ml3z,14,9,0|a3ml40,15,4,1|absybz,15,4,1|absyc0,14,9,0|alxufz,14,9,0|alxug0,15,4,1|aukvnz,15,4,1|aukvo0,14,9,0|b4prrz,14,9,0|b4prs0,15,4,1|bdcszz,15,4,1|bdct00,14,9,0|bnjjrz,14,9,0|bnjjs0,15,4,1|bvkczz,15,4,1|bvkd00,14,9,0|c4kifz,14,9,0|c4kig0,15,4,1|cdxgzz,15,4,1|cdxh00,14,9,0|cnal3z,14,9,0|cnal40,15,4,1|cwnjnz,15,4,1|cwnjo0,14,9,0|d60nrz,14,9,0|d60ns0,15,4,1|dfdmbz,15,4,1|dfdmc0,14,9,0|dp3p3z,14,9,0|dp3p40,15,4,1|dygnnz,15,4,1|dygno0,14,9,0|e7trrz,14,9,0|e7trs0,15,4,1|eh6qbz,15,4,1|eh6qc0,14,9,0|eqjufz,14,9,0|eqjug0,15,4,1|ezwszz,15,4,1|ezwt00,14,9,0|f99x3z,14,9,0|f99x40,15,4,1|fkfozz,15,4,1|fkfp00,14,9,0|frzzrz,14,9,0|frzzs0,15,4,1|g35rnz,15,4,1|g35ro0,14,9,0|gaq2fz,14,9,0|gaq2g0,15,4,1|glvubz,15,4,1|glvuc0,14,9,0|gtt3rz,14,9,0|gtt3s0,15,4,1|h4lwzz,15,4,1|h4lx00,14,9,0|hcj6fz,14,9,0|hcj6g0,15,4,1|hnbznz,15,4,1|hnbzo0,14,9,0|hv993z,14,9,0|hv9940,15,4,1|i6f0zz,15,4,1|i6f100,14,9,0|idzbrz,14,9,0|idzbs0,15,4,1|ip53nz,15,4,1|ip53o0,14,9,0|iwpefz,14,9,0|iwpeg0,15,4,1|j7v6bz,15,4,1|j7v6c0,14,9,0|jffh3z,14,9,0|jffh40,15,4,1|jql8zz,15,4,1|jql900,14,9,0|jyiifz,14,9,0|jyiig0,15,4,1|k9bbnz,15,4,1|k9bbo0,14,9,0|kh8l3z,14,9,0|kh8l40,15,4,1|ks1ebz,15,4,1|ks1ec0,14,9,0|kzynrz,14,9,0|kzyns0,15,4,1|lb4fnz,15,4,1|lb4fo0,14,9,0|lioqfz,14,9,0|lioqg0,15,4,1|ltuibz,15,4,1|ltuic0,14,9,0|m1et3z,14,9,0|m1et40,15,4,1|mckkzz,15,4,1|mckl00,14,9,0|mkhufz,14,9,0|mkhug0,15,4,1|mvannz,15,4,1|mvano0,14,9,0|n37x3z,14,9,0|n37x40,15,4,1|ne0qbz,15,4,1|ne0qc0,14,9,0|nlxzrz,14,9,0|nlxzs0,15,4,1|nwqszz,15,4,1|nwqt00,14,9,0|o4o2fz,14,9,0|o4o2g0,15,4,1|oftubz,15,4,1|oftuc0,14,9,0|one53z,14,9,0|one540,15,4,1|oyjwzz,15,4,1|oyjx00,14,9,0|p647rz,14,9,0|p647s0,15,4,1|ph9znz,15,4,1|ph9zo0,14,9,0|pp793z,14,9,0|pp7940,15,4,1|q002bz,15,4,1|q002c0,14,9,0|q7xbrz,14,9,0|q7xbs0,15,4,1|qiq4zz,15,4,1|qiq500,14,9,0|qqnefz,14,9,0|qqneg0,15,4,1|r1t6bz,15,4,1|r1t6c0,14,9,0|r9dh3z,14,9,0|r9dh40,15,4,1|rkj8zz,15,4,1|rkj900,14,9,0|rs3jrz,14,9,0|rs3js0,15,4,1|s39bnz,15,4,1|s39bo0,14,9,0|sb6l3z,14,9,0|sb6l40,15,4,1|slzebz,15,4,1|slzec0,14,9,0|stwnrz,14,9,0|stwns0,15,4,1|t4pgzz,15,4,1|t4ph00,14,9,0|tcmqfz,14,9,0|tcmqg0,15,4,1|tnfjnz,15,4,1|tnfjo0,14,9,0|tvct3z,14,9,0|tvct40,15,4,1|u6ikzz,15,4,1|u6il00,14,9,0|ue2vrz,14,9,0|ue2vs0,15,4,1|up8nnz,15,4,1|up8no0,14,9,0|uwsyfz,14,9,0|uwsyg0,15,4,1|v7yqbz,15,4,1|v7yqc0,14,9,0|vfvzrz,14,9,0|vfvzs0,15,4,1|vqoszz,15,4,1|vqot00,14,9,0|vym2fz,14,9,0|vym2g0,15,4,1|w9evnz,15,4,1|w9evo0,14,9,0|whc53z,14,9,0|whc540,15,4,1|wshwzz,15,4,1|wshx00,14,9,0|x027rz,14,9,0|x027s0,15,4,1|xb7znz,15,4,1|xb7zo0,14,9,0|xisafz,14,9,0|xisag0,15,4,1|xty2bz,15,4,1|xty2c0,14,9,0|y1id3z,14,9,0|y1id40,15,4,1|yco4zz,15,4,1|yco500,14,9,0|yklefz,14,9,0|ykleg0,15,4,1|yve7nz,15,4,1|yve7o0,14,9,0|z3bh3z,14,9,0|z3bh40,15,4,1|ze4abz,15,4,1|ze4ac0,14,9,0|zm1jrz,14,9,0|zm1js0,15,4,1|zx7bnz,15,4,1|zx7bo0,14,9,0|104rmfz,14,9,0|104rmg0,15,4,1|10fxebz,15,4,1|10fxec0,14,9,0|10nhp3z,14,9,0|10nhp40,15,4,1|10yngzz,15,4,1|10ynh00,14,9,0|116kqfz,14,9,0|116kqg0,15,4,1|11hdjnz,15,4,1|11hdjo0,14,9,0|11pat3z,14,9,0|11pat40,15,4,1|1203mbz,15,4,1|1203mc0,14,9,0|1280vrz,14,9,0|1280vs0,15,4,1|12itozz,15,4,1|12itp00,14,9,0|12qqyfz,14,9,0|12qqyg0,15,4,1|131wqbz,15,4,1|131wqc0,14,9,0|139h13z,14,9,0|139h140,15,4,1|13kmszz,15,4,1|13kmt00,14,9,0|13s73rz,14,9,0|13s73s0,15,4,1|143cvnz,15,4,1|143cvo0,14,9,0|14ba53z,14,9,0|14ba540,15,4,1|14m2ybz,15,4,1|14m2yc0,14,9,0|14u07rz,14,9,0|14u07s0,15,4,1|154t0zz,15,4,1|154t100,14,9,0|15cqafz,14,9,0|15cqag0,15,4,1|15nw2bz,15,4,1|15nw2c0,14,9,0|15vgd3z,14,9,0|15vgd40,15,4,1|166m4zz,15,4,1|166m500,14,9,0|16e6frz,14,9,0|16e6fs0,15,4,1|16pc7nz,15,4,1|16pc7o0,14,9,0|16x9h3z,14,9,0|16x9h40,15,4,1|1782abz,15,4,1|1782ac0,14,9,0|17fzjrz,14,9,0|17fzjs0,15,4,1|17qsczz,15,4,1|17qsd00,14,9,0|17ypmfz,14,9,0|17ypmg0,15,4,1|189ifnz,15,4,1|189ifo0,14,9,0|18hfp3z,14,9,0|18hfp40,15,4,1|18slgzz,15,4,1|18slh00,14,9,0|1905rrz,14,9,0|1905rs0,15,4,1|19bbjnz,15,4,1|19bbjo0,14,9,0|19ivufz,14,9,0|19ivug0,15,4,1|19u1mbz,15,4,1|19u1mc0,14,9,0|1a1yvrz,14,9,0|1a1yvs0,15,4,1|1acrozz,15,4,1|1acrp00,14,9,0|1akoyfz,14,9,0|1akoyg0,15,4,1|1avhrnz,15,4,1|1avhro0,14,9,0|1b3f13z,14,9,0|1b3f140,15,4,1|1bekszz,15,4,1|1bekt00,14,9,0|1bm53rz,14,9,0|1bm53s0,15,4,1|1bxavnz,15,4,1|1bxavo0,14,9,0|1c4v6fz,14,9,0|1c4v6g0,15,4,1|1cg0ybz,15,4,1|1cg0yc0,14,9,0|1cnl93z,14,9,0|1cnl940,15,4,1|1cyr0zz,15,4,1|1cyr100,14,9,0|1d6oafz,14,9,0|1d6oag0,15,4,1|1dhh3nz,15,4,1|1dhh3o0,14,9,0|1dped3z,14,9,0|1dped40,15,4,1|1e076bz,15,4,1|1e076c0,14,9,0|1e84frz,14,9,0|1e84fs0,15,4,1|1eja7nz,15,4,1|1eja7o0,14,9,0|1equifz,14,9,0|1equig0,15,4,1|1f20abz,15,4,1|1f20ac0,14,9,0|1f9kl3z,14,9,0|1f9kl40,15,4,1|1fkqczz,15,4,1|1fkqd00,14,9,0|1fsnmfz,14,9,0|1fsnmg0,15,4,1|1g3gfnz,15,4,1|1g3gfo0,14,9,0|1gbdp3z,14,9,0|1gbdp40,15,4,1|1gm6ibz,15,4,1|1gm6ic0,14,9,0|1gu3rrz,14,9,0|1gu3rs0,15,4,1|1h4wkzz,15,4,1|1h4wl00,14,9,0|1hctufz,14,9,0|1hctug0,15,4,1|1hnzmbz,15,4,1|1hnzmc0,14,9,0|1hvjx3z,14,9,0|1hvjx40,15,4,1|1i6pozz,15,4,1|1i6pp00,14,9,0|1ie9zrz,14,9,0|1ie9zs0,15,4,1|1ipfrnz,15,4,1|1ipfro0,14,9,0|1ixd13z,14,9,0|1ixd140,15,4,1|1j85ubz,15,4,1|1j85uc0,14,9,0|1jg33rz,14,9,0|1jg33s0,15,4,1|1jqvwzz,15,4,1|1jqvx00,14,9,0|1jyt6fz,14,9,0|1jyt6g0,15,4,1|1k9yybz,15,4,1|1k9yyc0,14,9,0|1khj93z,14,9,0|1khj940,15,4,1|1ksp0zz,15,4,1|1ksp100,14,9,0|1l09brz,14,9,0|1l09bs0,15,4,1|1lbf3nz,15,4,1|1lbf3o0,14,9,0|1ljcd3z,14,9,0|1ljcd40,15,4,1|1lu56bz,15,4,1|1lu56c0,14,9,0|1m22frz,14,9,0|1m22fs0,15,4,1|1mcv8zz,15,4,1|1mcv900,14,9,0|1mksifz,14,9,0|1mksig0,15,4,1|1mvlbnz,15,4,1|1mvlbo0,14,9,0|1n3il3z,14,9,0|1n3il40,15,4,1|1neoczz,15,4,1|1neod00,14,9,0|1nm8nrz,14,9,0|1nm8ns0,15,4,1|1nxefnz,15,4,1|1nxefo0,14,9,0|1o4yqfz,14,9,0|1o4yqg0,15,4,1|1og4ibz,15,4,1|1og4ic0,14,9,0|1oo1rrz,14,9,0|1oo1rs0,15,4,1|1oyukzz,15,4,1|1oyul00,14,9,0|1p6rufz,14,9,0|1p6rug0,15,4,1|1phknnz,15,4,1|1phkno0,14,9,0|1pphx3z,14,9,0|1pphx40,15,4,1|1q0nozz,15,4,1|1q0np00,14,9,0|1q87zrz,14,9,0|1q87zs0,15,4,1|1qjdrnz,15,4,1|1qjdro0,14,9,0|1qqy2fz,14,9,0|1qqy2g0,15,4,1|1r23ubz,15,4,1|1r23uc0,14,9,0|1r9o53z,14,9,0|1r9o540,15,4,1|1rktwzz,15,4,1|1rktx00,14,9,0|1rsr6fz,14,9,0|1rsr6g0,15,4,1|1s3jznz,15,4,1|1s3jzo0,14,9,0|1sbh93z,14,9,0|1sbh940,15,4,1|1sma2bz,15,4,1|1sma2c0,14,9,0|1su7brz,14,9,0|1su7bs0,15,4,1|1t5d3nz,15,4,1|1t5d3o0,14,9,0|1tcxefz,14,9,0|1tcxeg0,15,4,1|1to36bz,15,4,1|1to36c0,14,9,0|1tvnh3z,14,9,0|1tvnh40,15,4,1|1u6t8zz,15,4,1|1u6t900,14,9,0|1ueqifz,14,9,0|1ueqig0,15,4,1|1upjbnz,15,4,1|1upjbo0,14,9,0|1uxgl3z,14,9,0|1uxgl40,15,4,1|1v89ebz,15,4,1|1v89ec0,14,9,0|1vg6nrz,14,9,0|1vg6ns0,15,4,1|1vqzgzz,15,4,1|1vqzh00,14,9,0|NaN,14,9,0",
        "Asia/Bishkek|,0,212,0|-nu19td,0,212,0|-nu19tc,87,184,0|-kmr9w1,87,184,0|-kmr9w0,92,188,0|5vaxzz,92,188,0|5vay00,86,183,1|64pr7z,86,183,1|64pr80,92,188,0|6e2vbz,92,188,0|6e2vc0,86,183,1|6nhojz,86,183,1|6nhok0,92,188,0|6wusnz,92,188,0|6wuso0,86,183,1|769lvz,86,183,1|769lw0,92,188,0|7foknz,92,188,0|7foko0,86,183,1|7p1rjz,86,183,1|7p1rk0,92,188,0|7yesvz,92,188,0|7yesw0,86,183,1|87ru7z,86,183,1|87ru80,92,188,0|8h4vjz,92,188,0|8h4vk0,86,183,1|8qhwvz,86,183,1|8qhww0,92,188,0|8zuy7z,92,188,0|8zuy80,86,183,1|997zjz,86,183,1|997zk0,92,188,0|9il0vz,92,188,0|9il0w0,86,183,1|9ry27z,86,183,1|9ry280,92,188,0|a1b3jz,92,188,0|a1b3k0,86,183,1|aao4vz,86,183,1|aao4w0,92,188,0|ak167z,92,188,0|ak1680,86,183,1|atr67z,86,183,1|atr680,92,188,0|b347jz,92,188,0|b347k0,92,188,1|bazjjz,92,188,1|bazjk0,87,184,0|bmk4rz,87,184,0|bmk4s0,92,188,1|bv75zz,92,188,1|bv7600,87,184,0|c5a7fz,87,184,0|c5a7g0,92,188,1|cdx8nz,92,188,1|cdx8o0,87,184,0|co0a3z,87,184,0|co0a40,92,188,1|cwnbbz,92,188,1|cwnbc0,87,184,0|d6qcrz,87,184,0|d6qcs0,92,188,1|dfddzz,92,188,1|dfde00,87,184,0|dpgffz,87,184,0|dpgfg0,92,188,1|dygfbz,92,188,1|dygfc0,87,184,0|e7tqdz,87,184,0|e7tqe0,92,188,1|eimjlz,92,188,1|eimjm0,87,184,0|eqjt1z,87,184,0|eqjt20,92,188,1|f1cm9z,92,188,1|f1cma0,87,184,0|f99vpz,87,184,0|f99vq0,92,188,1|fkfnlz,92,188,1|fkfnm0,87,184,0|frzydz,87,184,0|frzye0,92,188,1|g35q9z,92,188,1|g35qa0,87,184,0|gaq11z,87,184,0|gaq120,92,188,1|glvsxz,92,188,1|glvsy0,87,184,0|gtt2dz,87,184,0|gtt2e0,92,188,1|h4lvlz,92,188,1|h4lvm0,87,184,0|hcj51z,87,184,0|hcj520,92,188,1|hnby9z,92,188,1|hnbya0,87,184,0|hv97pz,87,184,0|hv97q0,92,188,1|i6ezlz,92,188,1|i6ezm0,87,184,0|idzadz,87,184,0|idzae0,92,188,1|il2knz,92,188,1|il2ko0,92,188,0|NaN,92,188,0",
        "Asia/Brunei|,0,213,0|-mvof3l,0,213,0|-mvof3k,103,214,0|-jb6i61,103,214,0|-jb6i60,84,181,0|-hwgm81,84,181,0|-hwgm80,104,215,1|-hrs4hd,104,215,1|-hrs4hc,84,181,0|-hdmu81,84,181,0|-hdmu80,104,215,1|-h8ychd,104,215,1|-h8ychc,84,181,0|-guuww1,84,181,0|-guuww0,104,215,1|-gq6f5d,104,215,1|-gq6f5c,84,181,0|-gc2zk1,84,181,0|-gc2zk0,104,215,1|-g7ehtd,104,215,1|-g7ehtc,84,181,0|-ftb281,84,181,0|-ftb280,104,215,1|-fomkhd,104,215,1|-fomkhc,84,181,0|-faha81,84,181,0|-faha80,104,215,1|-f5sshd,104,215,1|-f5sshc,84,181,0|-erpcw1,84,181,0|-erpcw0,104,215,1|-en0v5d,104,215,1|-en0v5c,84,181,0|-ejqbk1,84,181,0|-ejqbk0,105,216,0|-conl01,105,216,0|-conl00,84,181,0|NaN,84,181,0",
        "Asia/Chita|,0,217,0|-q4cfoh,0,217,0|-q4cfog,84,181,0|-kmri81,84,181,0|-kmri80,105,216,0|5vapnz,105,216,0|5vapo0,89,187,1|64pivz,89,187,1|64piw0,105,216,0|6e2mzz,105,216,0|6e2n00,89,187,1|6nhg7z,89,187,1|6nhg80,105,216,0|6wukbz,105,216,0|6wukc0,89,187,1|769djz,89,187,1|769dk0,105,216,0|7focbz,105,216,0|7focc0,89,187,1|7p1j7z,89,187,1|7p1j80,105,216,0|7yekjz,105,216,0|7yekk0,89,187,1|87rlvz,89,187,1|87rlw0,105,216,0|8h4n7z,105,216,0|8h4n80,89,187,1|8qhojz,89,187,1|8qhok0,105,216,0|8zupvz,105,216,0|8zupw0,89,187,1|997r7z,89,187,1|997r80,105,216,0|9iksjz,105,216,0|9iksk0,89,187,1|9rxtvz,89,187,1|9rxtw0,105,216,0|a1av7z,105,216,0|a1av80,89,187,1|aanwjz,89,187,1|aanwk0,105,216,0|ak0xvz,105,216,0|ak0xw0,89,187,1|atqxvz,89,187,1|atqxw0,105,216,0|b33z7z,105,216,0|b33z80,105,216,1|bch3bz,105,216,1|bch3c0,84,181,0|bi8hzz,84,181,0|bi8i00,105,216,0|blu1vz,105,216,0|blu1w0,89,187,1|bv737z,89,187,1|bv7380,105,216,0|c4k4jz,105,216,0|c4k4k0,89,187,1|cdx5vz,89,187,1|cdx5w0,105,216,0|cna77z,105,216,0|cna780,89,187,1|cwn8jz,89,187,1|cwn8k0,105,216,0|d609vz,105,216,0|d609w0,89,187,1|dfdb7z,89,187,1|dfdb80,105,216,0|dp3b7z,105,216,0|dp3b80,89,187,1|dzw77z,89,187,1|dzw780,105,216,0|e7tdvz,105,216,0|e7tdw0,89,187,1|eim9vz,89,187,1|eim9w0,105,216,0|eqjgjz,105,216,0|eqjgk0,89,187,1|f1ccjz,89,187,1|f1cck0,105,216,0|f99j7z,105,216,0|f99j80,89,187,1|fkfdvz,89,187,1|fkfdw0,105,216,0|frzlvz,105,216,0|frzlw0,89,187,1|g35gjz,89,187,1|g35gk0,105,216,0|gapojz,105,216,0|gapok0,89,187,1|glvj7z,89,187,1|glvj80,105,216,0|gtspvz,105,216,0|gtspw0,89,187,1|h4llvz,89,187,1|h4llw0,105,216,0|hcisjz,105,216,0|hcisk0,89,187,1|hnbojz,89,187,1|hnbok0,105,216,0|hv8v7z,105,216,0|hv8v80,89,187,1|i6epvz,89,187,1|i6epw0,105,216,0|idyxvz,105,216,0|idyxw0,89,187,1|ip4sjz,89,187,1|ip4sk0,105,216,0|iwp0jz,105,216,0|iwp0k0,89,187,1|j7uv7z,89,187,1|j7uv80,105,216,0|jff37z,105,216,0|jff380,89,187,1|jqkxvz,89,187,1|jqkxw0,105,216,0|jyi4jz,105,216,0|jyi4k0,89,187,1|k9b0jz,89,187,1|k9b0k0,105,216,0|kh877z,105,216,0|kh8780,89,187,1|ks137z,89,187,1|ks1380,105,216,0|kzy9vz,105,216,0|kzy9w0,89,187,1|lb44jz,89,187,1|lb44k0,105,216,0|liocjz,105,216,0|liock0,89,187,0|ne0cfz,89,187,0|ne0cg0,84,181,0|o4nrbz,84,181,0|o4nrc0,105,216,0|NaN,105,216,0",
        "Asia/Choibalsan|,0,218,0|-xmcrsl,0,218,0|-xmcrsk,86,183,0|46akjz,86,183,0|46akk0,84,181,0|6wun3z,84,181,0|6wun40,105,216,1|769gbz,105,216,1|769gc0,84,181,0|7fof3z,84,181,0|7fof40,105,216,1|7p1dnz,105,216,1|7p1do0,84,181,0|7yehrz,84,181,0|7yehs0,105,216,1|87rgbz,105,216,1|87rgc0,84,181,0|8h4kfz,84,181,0|8h4kg0,105,216,1|8qhizz,105,216,1|8qhj00,84,181,0|8zun3z,84,181,0|8zun40,105,216,1|997lnz,105,216,1|997lo0,84,181,0|9ikprz,84,181,0|9ikps0,105,216,1|9rxobz,105,216,1|9rxoc0,84,181,0|a1asfz,84,181,0|a1asg0,105,216,1|aanqzz,105,216,1|aanr00,84,181,0|ak0v3z,84,181,0|ak0v40,105,216,1|atqsbz,105,216,1|atqsc0,84,181,0|b33wfz,84,181,0|b33wg0,105,216,1|bcguzz,105,216,1|bcgv00,84,181,0|bltz3z,84,181,0|bltz40,105,216,1|bv6xnz,105,216,1|bv6xo0,84,181,0|c4k1rz,84,181,0|c4k1s0,105,216,1|cdx0bz,105,216,1|cdx0c0,84,181,0|cna4fz,84,181,0|cna4g0,105,216,1|cwn2zz,105,216,1|cwn300,84,181,0|d6073z,84,181,0|d60740,105,216,1|dfd5nz,105,216,1|dfd5o0,84,181,0|dp38fz,84,181,0|dp38g0,105,216,1|dyg6zz,105,216,1|dyg700,84,181,0|e7tb3z,84,181,0|e7tb40,105,216,1|eh69nz,105,216,1|eh69o0,84,181,0|eqjdrz,84,181,0|eqjds0,105,216,1|ezwcbz,105,216,1|ezwcc0,84,181,0|gcgpzz,84,181,0|gcgq00,105,216,1|gkdtvz,105,216,1|gkdtw0,84,181,0|gtqxzz,84,181,0|gtqy00,105,216,1|h33wjz,105,216,1|h33wk0,84,181,0|hch0nz,84,181,0|hch0o0,105,216,1|hltz7z,105,216,1|hltz80,84,181,0|hv73bz,84,181,0|hv73c0,105,216,1|i4k1vz,105,216,1|i4k1w0,84,181,0|idx5zz,84,181,0|idx600,105,216,1|ina4jz,105,216,1|ina4k0,84,181,0|iwn8nz,84,181,0|iwn8o0,105,216,1|j6d5vz,105,216,1|j6d5w0,84,181,0|nlvtzz,84,181,0|nlvu00,105,216,1|nv8mzz,105,216,1|nv8n00,84,181,0|o4lwnz,84,181,0|o4lwo0,105,216,1|odypnz,105,216,1|odypo0,84,181,0|NaN,84,181,0",
        "Asia/Colombo|,0,219,0|-1ayyhgd,0,219,0|-1ayyhgc,20,220,0|-xehasl,20,220,0|-xehask,106,221,0|-elvwm1,106,221,0|-elvwm0,92,188,1|-e9lco1,92,188,1|-e9lco0,107,222,1|-cmw9u1,107,222,1|-cmw9u0,106,221,0|drxa1z,106,221,0|drxa20,107,222,0|dzufbz,107,222,0|dzufc0,92,188,0|ixq61z,92,188,0|ixq620,106,221,0|NaN,106,221,0",
        "Asia/Damascus|,0,223,0|-q3gk21,0,223,0|-q3gk20,14,9,0|-pxwdc1,14,9,0|-pxwdc0,15,4,1|-pp9c41,15,4,1|-pp9c40,14,9,0|-pf6ao1,14,9,0|-pf6ao0,15,4,1|-p6j9g1,15,4,1|-p6j9g0,14,9,0|-owg801,14,9,0|-owg800,15,4,1|-ont6s1,15,4,1|-ont6s0,14,9,0|-odq5c1,14,9,0|-odq5c0,15,4,1|-o4q5g1,15,4,1|-o4q5g0,14,9,0|-408lc1,14,9,0|-408lc0,15,4,1|-3s9ms1,15,4,1|-3s9ms0,14,9,0|-3hcyo1,14,9,0|-3hcyo0,15,4,1|-39jk41,15,4,1|-39jk40,14,9,0|-2yj6o1,14,9,0|-2yj6o0,15,4,1|-2qnxg1,15,4,1|-2qnxg0,14,9,0|-2fr9c1,14,9,0|-2fr9c0,15,4,1|-27xus1,15,4,1|-27xus0,14,9,0|-1xcao1,14,9,0|-1xcao0,15,4,1|-1p42s1,15,4,1|-1p42s0,14,9,0|-1e7eo1,14,9,0|-1e7eo0,15,4,1|-16c5g1,15,4,1|-16c5g0,14,9,0|-vdmo1,14,9,0|-vdmo0,15,4,1|-nidg1,15,4,1|-nidg0,14,9,0|-clpc1,14,9,0|-clpc0,15,4,1|-4qg41,15,4,1|-4qg40,14,9,0|667zz,14,9,0|66800,15,4,1|e1h7z,15,4,1|e1h80,14,9,0|oy5bz,14,9,0|oy5c0,15,4,1|wtejz,15,4,1|wtek0,14,9,0|17rxbz,14,9,0|17rxc0,15,4,1|1fn6jz,15,4,1|1fn6k0,14,9,0|1qjunz,14,9,0|1qjuo0,15,4,1|1yf3vz,15,4,1|1yf3w0,14,9,0|29brzz,14,9,0|29bs00,15,4,1|2h717z,15,4,1|2h7180,14,9,0|2s3pbz,14,9,0|2s3pc0,15,4,1|2zyyjz,15,4,1|2zyyk0,14,9,0|3axhbz,14,9,0|3axhc0,15,4,1|3isqjz,15,4,1|3isqk0,14,9,0|3tpenz,14,9,0|3tpeo0,15,4,1|4013vz,15,4,1|4013w0,14,9,0|4chbzz,14,9,0|4chc00,15,4,1|4it17z,15,4,1|4it180,14,9,0|6xa2nz,14,9,0|6xa2o0,15,4,1|76a2jz,15,4,1|76a2k0,14,9,0|7g3unz,14,9,0|7g3uo0,15,4,1|7p3ujz,15,4,1|7p3uk0,14,9,0|8ezenz,14,9,0|8ezeo0,15,4,1|8r2ijz,15,4,1|8r2ik0,14,9,0|8yfenz,14,9,0|8yfeo0,15,4,1|9az6jz,15,4,1|9az6k0,14,9,0|9hz3zz,14,9,0|9hz400,15,4,1|9tsyjz,15,4,1|9tsyk0,14,9,0|a1knzz,14,9,0|a1ko00,15,4,1|ab1bvz,15,4,1|ab1bw0,14,9,0|akefzz,14,9,0|akeg00,15,4,1|atrejz,15,4,1|atrek0,14,9,0|b367rz,14,9,0|b367s0,15,4,1|bcl0zz,15,4,1|bcl100,14,9,0|bmcyfz,14,9,0|bmcyg0,15,4,1|bveszz,15,4,1|bvet00,14,9,0|c4gt3z,14,9,0|c4gt40,15,4,1|cdvmbz,15,4,1|cdvmc0,14,9,0|cnjufz,14,9,0|cnjug0,15,4,1|cwynnz,15,4,1|cwyno0,14,9,0|d6brrz,14,9,0|d6brs0,15,4,1|dfqkzz,15,4,1|dfql00,14,9,0|dp5jrz,14,9,0|dp5js0,15,4,1|dykczz,15,4,1|dykd00,14,9,0|e7vmfz,14,9,0|e7vmg0,15,4,1|ehcabz,15,4,1|ehcac0,14,9,0|eqlp3z,14,9,0|eqlp40,15,4,1|f047nz,15,4,1|f047o0,14,9,0|f9hbrz,14,9,0|f9hbs0,15,4,1|fiw4zz,15,4,1|fiw500,14,9,0|fsb3rz,14,9,0|fsb3s0,15,4,1|g1pwzz,15,4,1|g1px00,14,9,0|gb313z,14,9,0|gb3140,15,4,1|gkhubz,15,4,1|gkhuc0,14,9,0|gtuyfz,14,9,0|gtuyg0,15,4,1|h39rnz,15,4,1|h39ro0,14,9,0|hcmvrz,14,9,0|hcmvs0,15,4,1|hm1ozz,15,4,1|hm1p00,14,9,0|hvgnrz,14,9,0|hvgns0,15,4,1|i4vgzz,15,4,1|i4vh00,14,9,0|ie8l3z,14,9,0|ie8l40,15,4,1|innebz,15,4,1|innec0,14,9,0|ix0ifz,14,9,0|ix0ig0,15,4,1|j5ynnz,15,4,1|j5yno0,14,9,0|jfoqfz,14,9,0|jfoqg0,15,4,1|jquibz,15,4,1|jquic0,14,9,0|jyrrrz,14,9,0|jyrrs0,15,4,1|k9mfnz,15,4,1|k9mfo0,14,9,0|kh4vrz,14,9,0|kh4vs0,15,4,1|ksannz,15,4,1|ksano0,14,9,0|l07x3z,14,9,0|l07x40,15,4,1|lb0qbz,15,4,1|lb0qc0,14,9,0|lixzrz,14,9,0|lixzs0,15,4,1|ltqszz,15,4,1|ltqt00,14,9,0|m1o2fz,14,9,0|m1o2g0,15,4,1|mcgvnz,15,4,1|mcgvo0,14,9,0|mke53z,14,9,0|mke540,15,4,1|mv6ybz,15,4,1|mv6yc0,14,9,0|n347rz,14,9,0|n347s0,15,4,1|ne9znz,15,4,1|ne9zo0,14,9,0|nluafz,14,9,0|nluag0,15,4,1|nx02bz,15,4,1|nx02c0,14,9,0|o4kd3z,14,9,0|o4kd40,15,4,1|ofq4zz,15,4,1|ofq500,14,9,0|onnefz,14,9,0|onneg0,15,4,1|oyg7nz,15,4,1|oyg7o0,14,9,0|p6dh3z,14,9,0|p6dh40,15,4,1|ph6abz,15,4,1|ph6ac0,14,9,0|pp3jrz,14,9,0|pp3js0,15,4,1|pzwczz,15,4,1|pzwd00,14,9,0|q7tmfz,14,9,0|q7tmg0,15,4,1|qizebz,15,4,1|qizec0,14,9,0|qqjp3z,14,9,0|qqjp40,15,4,1|r1pgzz,15,4,1|r1ph00,14,9,0|r99rrz,14,9,0|r99rs0,15,4,1|rkfjnz,15,4,1|rkfjo0,96,4,0|NaN,96,4,0",
        "Asia/Dhaka|,0,224,0|-15r1q2t,0,224,0|-15r1q2s,76,225,0|-eqtpox,76,225,0|-eqtpow,107,222,0|-ef78q1,107,222,0|-ef78q0,106,221,0|-e9lba1,106,221,0|-e9lba0,107,222,0|-9j0ne1,107,222,0|-9j0ne0,92,188,0|klhwjz,92,188,0|klhwk0,86,183,1|kvj0jz,86,183,1|kvj0k0,92,188,0|NaN,92,188,0",
        "Asia/Dili|,0,226,0|-u9s3k1,0,226,0|-u9s3k0,84,181,0|-ejfac1,84,181,0|-ejfac0,105,216,0|3b0hnz,105,216,0|3b0ho0,84,181,0|g0zlrz,84,181,0|g0zls0,105,216,0|NaN,105,216,0",
        "Asia/Dubai|,0,227,0|-q3gnkp,0,227,0|-q3gnko,102,201,0|NaN,102,201,0",
        "Asia/Dushanbe|,0,228,0|-nu18qp,0,228,0|-nu18qo,87,184,0|-kmr9w1,87,184,0|-kmr9w0,92,188,0|5vaxzz,92,188,0|5vay00,86,183,1|64pr7z,86,183,1|64pr80,92,188,0|6e2vbz,92,188,0|6e2vc0,86,183,1|6nhojz,86,183,1|6nhok0,92,188,0|6wusnz,92,188,0|6wuso0,86,183,1|769lvz,86,183,1|769lw0,92,188,0|7foknz,92,188,0|7foko0,86,183,1|7p1rjz,86,183,1|7p1rk0,92,188,0|7yesvz,92,188,0|7yesw0,86,183,1|87ru7z,86,183,1|87ru80,92,188,0|8h4vjz,92,188,0|8h4vk0,86,183,1|8qhwvz,86,183,1|8qhww0,92,188,0|8zuy7z,92,188,0|8zuy80,86,183,1|997zjz,86,183,1|997zk0,92,188,0|9il0vz,92,188,0|9il0w0,86,183,1|9ry27z,86,183,1|9ry280,92,188,0|a1b3jz,92,188,0|a1b3k0,86,183,1|aao4vz,86,183,1|aao4w0,92,188,0|ak167z,92,188,0|ak1680,86,183,1|atr67z,86,183,1|atr680,92,188,0|b347jz,92,188,0|b347k0,92,188,1|bbgabz,92,188,1|bbgac0,87,184,0|NaN,87,184,0",
        "Asia/Famagusta|,0,229,0|-p4bqad,0,229,0|-p4bqac,14,9,0|2r67rz,14,9,0|2r67s0,15,4,1|30j6bz,15,4,1|30j6c0,14,9,0|3bn93z,14,9,0|3bn940,15,4,1|3jb3nz,15,4,1|3jb3o0,14,9,0|3s9efz,14,9,0|3s9eg0,15,4,1|419ebz,15,4,1|419ec0,14,9,0|4azh3z,14,9,0|4azh40,15,4,1|4keabz,15,4,1|4keac0,14,9,0|4tpjrz,14,9,0|4tpjs0,15,4,1|532ibz,15,4,1|532ic0,14,9,0|5csl3z,14,9,0|5csl40,15,4,1|5lskzz,15,4,1|5lsl00,14,9,0|5v5p3z,14,9,0|5v5p40,15,4,1|64innz,15,4,1|64ino0,14,9,0|6dvrrz,14,9,0|6dvrs0,15,4,1|6n8qbz,15,4,1|6n8qc0,14,9,0|6wlufz,14,9,0|6wlug0,15,4,1|75yszz,15,4,1|75yt00,14,9,0|7fbx3z,14,9,0|7fbx40,15,4,1|7p1ubz,15,4,1|7p1uc0,14,9,0|7yeyfz,14,9,0|7yeyg0,15,4,1|87rwzz,15,4,1|87rx00,14,9,0|8h513z,14,9,0|8h5140,15,4,1|8qhznz,15,4,1|8qhzo0,14,9,0|8zv3rz,14,9,0|8zv3s0,15,4,1|9982bz,15,4,1|9982c0,14,9,0|9il6fz,14,9,0|9il6g0,15,4,1|9ry4zz,15,4,1|9ry500,14,9,0|a1b93z,14,9,0|a1b940,15,4,1|aao7nz,15,4,1|aao7o0,14,9,0|ak1brz,14,9,0|ak1bs0,15,4,1|atr8zz,15,4,1|atr900,14,9,0|b34d3z,14,9,0|b34d40,15,4,1|bchbnz,15,4,1|bchbo0,14,9,0|blufrz,14,9,0|blufs0,15,4,1|bv7ebz,15,4,1|bv7ec0,14,9,0|c4kifz,14,9,0|c4kig0,15,4,1|cdxgzz,15,4,1|cdxh00,14,9,0|cnal3z,14,9,0|cnal40,15,4,1|cwnjnz,15,4,1|cwnjo0,14,9,0|d60nrz,14,9,0|d60ns0,15,4,1|dfdmbz,15,4,1|dfdmc0,14,9,0|dp3p3z,14,9,0|dp3p40,15,4,1|dygnnz,15,4,1|dygno0,14,9,0|e7trrz,14,9,0|e7trs0,15,4,1|eh6qbz,15,4,1|eh6qc0,14,9,0|eqjufz,14,9,0|eqjug0,15,4,1|f1cyrz,15,4,1|f1cys0,14,9,0|f9a5fz,14,9,0|f9a5g0,15,4,1|fkg03z,15,4,1|fkg040,14,9,0|fs083z,14,9,0|fs0840,15,4,1|g362rz,15,4,1|g362s0,14,9,0|gaqarz,14,9,0|gaqas0,15,4,1|glw5fz,15,4,1|glw5g0,14,9,0|gttc3z,14,9,0|gttc40,15,4,1|h4m83z,15,4,1|h4m840,14,9,0|hcjerz,14,9,0|hcjes0,15,4,1|hncarz,15,4,1|hncas0,14,9,0|hv9hfz,14,9,0|hv9hg0,15,4,1|i6fc3z,15,4,1|i6fc40,14,9,0|idzk3z,14,9,0|idzk40,15,4,1|ip5erz,15,4,1|ip5es0,14,9,0|iwpmrz,14,9,0|iwpms0,15,4,1|j7vhfz,15,4,1|j7vhg0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|lioyrz,14,9,0|lioys0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n385fz,14,9,0|n385g0,15,4,1|ne11fz,15,4,1|ne11g0,14,9,0|nly83z,14,9,0|nly840,15,4,1|nwr43z,15,4,1|nwr440,14,9,0|o4oarz,14,9,0|o4oas0,15,4,1|od5jnz,15,4,1|od5jo0,96,4,0|oyk83z,96,4,0|oyk840,14,9,0|p64g3z,14,9,0|p64g40,15,4,1|phaarz,15,4,1|phaas0,14,9,0|pp7hfz,14,9,0|pp7hg0,15,4,1|q00dfz,15,4,1|q00dg0,14,9,0|q7xk3z,14,9,0|q7xk40,15,4,1|qiqg3z,15,4,1|qiqg40,14,9,0|qqnmrz,14,9,0|qqnms0,15,4,1|r1thfz,15,4,1|r1thg0,14,9,0|r9dpfz,14,9,0|r9dpg0,15,4,1|rkjk3z,15,4,1|rkjk40,14,9,0|rs3s3z,14,9,0|rs3s40,15,4,1|s39mrz,15,4,1|s39ms0,14,9,0|sb6tfz,14,9,0|sb6tg0,15,4,1|slzpfz,15,4,1|slzpg0,14,9,0|stww3z,14,9,0|stww40,15,4,1|t4ps3z,15,4,1|t4ps40,14,9,0|tcmyrz,14,9,0|tcmys0,15,4,1|tnfurz,15,4,1|tnfus0,14,9,0|tvd1fz,14,9,0|tvd1g0,15,4,1|u6iw3z,15,4,1|u6iw40,14,9,0|ue343z,14,9,0|ue3440,15,4,1|up8yrz,15,4,1|up8ys0,14,9,0|uwt6rz,14,9,0|uwt6s0,15,4,1|v7z1fz,15,4,1|v7z1g0,14,9,0|vfw83z,14,9,0|vfw840,15,4,1|vqp43z,15,4,1|vqp440,14,9,0|vymarz,14,9,0|vymas0,15,4,1|w9f6rz,15,4,1|w9f6s0,14,9,0|whcdfz,14,9,0|whcdg0,15,4,1|wsi83z,15,4,1|wsi840,14,9,0|x02g3z,14,9,0|x02g40,15,4,1|xb8arz,15,4,1|xb8as0,14,9,0|xisirz,14,9,0|xisis0,15,4,1|xtydfz,15,4,1|xtydg0,14,9,0|y1ilfz,14,9,0|y1ilg0,15,4,1|ycog3z,15,4,1|ycog40,14,9,0|yklmrz,14,9,0|yklms0,15,4,1|yveirz,15,4,1|yveis0,14,9,0|z3bpfz,14,9,0|z3bpg0,15,4,1|ze4lfz,15,4,1|ze4lg0,14,9,0|zm1s3z,14,9,0|zm1s40,15,4,1|zx7mrz,15,4,1|zx7ms0,14,9,0|104rurz,14,9,0|104rus0,15,4,1|10fxpfz,15,4,1|10fxpg0,14,9,0|10nhxfz,14,9,0|10nhxg0,15,4,1|10yns3z,15,4,1|10yns40,14,9,0|116kyrz,14,9,0|116kys0,15,4,1|11hdurz,15,4,1|11hdus0,14,9,0|11pb1fz,14,9,0|11pb1g0,15,4,1|1203xfz,15,4,1|1203xg0,14,9,0|128143z,14,9,0|1281440,15,4,1|12iu03z,15,4,1|12iu040,14,9,0|12qr6rz,14,9,0|12qr6s0,15,4,1|131x1fz,15,4,1|131x1g0,14,9,0|139h9fz,14,9,0|139h9g0,15,4,1|13kn43z,15,4,1|13kn440,14,9,0|13s7c3z,14,9,0|13s7c40,15,4,1|143d6rz,15,4,1|143d6s0,14,9,0|14badfz,14,9,0|14badg0,15,4,1|14m39fz,15,4,1|14m39g0,14,9,0|14u0g3z,14,9,0|14u0g40,15,4,1|154tc3z,15,4,1|154tc40,14,9,0|15cqirz,14,9,0|15cqis0,15,4,1|15nwdfz,15,4,1|15nwdg0,14,9,0|15vglfz,14,9,0|15vglg0,15,4,1|166mg3z,15,4,1|166mg40,14,9,0|16e6o3z,14,9,0|16e6o40,15,4,1|16pcirz,15,4,1|16pcis0,14,9,0|16x9pfz,14,9,0|16x9pg0,15,4,1|1782lfz,15,4,1|1782lg0,14,9,0|17fzs3z,14,9,0|17fzs40,15,4,1|17qso3z,15,4,1|17qso40,14,9,0|17ypurz,14,9,0|17ypus0,15,4,1|189iqrz,15,4,1|189iqs0,14,9,0|18hfxfz,14,9,0|18hfxg0,15,4,1|18sls3z,15,4,1|18sls40,14,9,0|190603z,14,9,0|1906040,15,4,1|19bburz,15,4,1|19bbus0,14,9,0|19iw2rz,14,9,0|19iw2s0,15,4,1|19u1xfz,15,4,1|19u1xg0,14,9,0|1a1z43z,14,9,0|1a1z440,15,4,1|1acs03z,15,4,1|1acs040,14,9,0|1akp6rz,14,9,0|1akp6s0,15,4,1|1avi2rz,15,4,1|1avi2s0,14,9,0|1b3f9fz,14,9,0|1b3f9g0,15,4,1|1bel43z,15,4,1|1bel440,14,9,0|1bm5c3z,14,9,0|1bm5c40,15,4,1|1bxb6rz,15,4,1|1bxb6s0,14,9,0|1c4verz,14,9,0|1c4ves0,15,4,1|1cg19fz,15,4,1|1cg19g0,14,9,0|1cnlhfz,14,9,0|1cnlhg0,15,4,1|1cyrc3z,15,4,1|1cyrc40,14,9,0|1d6oirz,14,9,0|1d6ois0,15,4,1|1dhherz,15,4,1|1dhhes0,14,9,0|1dpelfz,14,9,0|1dpelg0,15,4,1|1e07hfz,15,4,1|1e07hg0,14,9,0|1e84o3z,14,9,0|1e84o40,15,4,1|1ejairz,15,4,1|1ejais0,14,9,0|1equqrz,14,9,0|1equqs0,15,4,1|1f20lfz,15,4,1|1f20lg0,14,9,0|1f9ktfz,14,9,0|1f9ktg0,15,4,1|1fkqo3z,15,4,1|1fkqo40,14,9,0|1fsnurz,14,9,0|1fsnus0,15,4,1|1g3gqrz,15,4,1|1g3gqs0,14,9,0|1gbdxfz,14,9,0|1gbdxg0,15,4,1|1gm6tfz,15,4,1|1gm6tg0,14,9,0|1gu403z,14,9,0|1gu4040,15,4,1|1h4ww3z,15,4,1|1h4ww40,14,9,0|1hcu2rz,14,9,0|1hcu2s0,15,4,1|1hnzxfz,15,4,1|1hnzxg0,14,9,0|1hvk5fz,14,9,0|1hvk5g0,15,4,1|1i6q03z,15,4,1|1i6q040,14,9,0|1iea83z,14,9,0|1iea840,15,4,1|1ipg2rz,15,4,1|1ipg2s0,14,9,0|1ixd9fz,14,9,0|1ixd9g0,15,4,1|1j865fz,15,4,1|1j865g0,14,9,0|1jg3c3z,14,9,0|1jg3c40,15,4,1|1jqw83z,15,4,1|1jqw840,14,9,0|1jyterz,14,9,0|1jytes0,15,4,1|1k9z9fz,15,4,1|1k9z9g0,14,9,0|1khjhfz,14,9,0|1khjhg0,15,4,1|1kspc3z,15,4,1|1kspc40,14,9,0|1l09k3z,14,9,0|1l09k40,15,4,1|1lbferz,15,4,1|1lbfes0,14,9,0|1ljclfz,14,9,0|1ljclg0,15,4,1|1lu5hfz,15,4,1|1lu5hg0,14,9,0|1m22o3z,14,9,0|1m22o40,15,4,1|1mcvk3z,15,4,1|1mcvk40,14,9,0|1mksqrz,14,9,0|1mksqs0,15,4,1|1mvlmrz,15,4,1|1mvlms0,14,9,0|1n3itfz,14,9,0|1n3itg0,15,4,1|1neoo3z,15,4,1|1neoo40,14,9,0|1nm8w3z,14,9,0|1nm8w40,15,4,1|1nxeqrz,15,4,1|1nxeqs0,14,9,0|1o4yyrz,14,9,0|1o4yys0,15,4,1|1og4tfz,15,4,1|1og4tg0,14,9,0|1oo203z,14,9,0|1oo2040,15,4,1|1oyuw3z,15,4,1|1oyuw40,14,9,0|1p6s2rz,14,9,0|1p6s2s0,15,4,1|1phkyrz,15,4,1|1phkys0,14,9,0|1ppi5fz,14,9,0|1ppi5g0,15,4,1|1q0o03z,15,4,1|1q0o040,14,9,0|1q8883z,14,9,0|1q88840,15,4,1|1qje2rz,15,4,1|1qje2s0,14,9,0|1qqyarz,14,9,0|1qqyas0,15,4,1|1r245fz,15,4,1|1r245g0,14,9,0|1r9odfz,14,9,0|1r9odg0,15,4,1|1rku83z,15,4,1|1rku840,14,9,0|1rsrerz,14,9,0|1rsres0,15,4,1|1s3karz,15,4,1|1s3kas0,14,9,0|1sbhhfz,14,9,0|1sbhhg0,15,4,1|1smadfz,15,4,1|1smadg0,14,9,0|1su7k3z,14,9,0|1su7k40,15,4,1|1t5derz,15,4,1|1t5des0,14,9,0|1tcxmrz,14,9,0|1tcxms0,15,4,1|1to3hfz,15,4,1|1to3hg0,14,9,0|1tvnpfz,14,9,0|1tvnpg0,15,4,1|1u6tk3z,15,4,1|1u6tk40,14,9,0|1ueqqrz,14,9,0|1ueqqs0,15,4,1|1upjmrz,15,4,1|1upjms0,14,9,0|1uxgtfz,14,9,0|1uxgtg0,15,4,1|1v89pfz,15,4,1|1v89pg0,14,9,0|1vg6w3z,14,9,0|1vg6w40,15,4,1|1vqzs3z,15,4,1|1vqzs40,14,9,0|NaN,14,9,0",
        "Asia/Gaza|,0,230,0|-1054x1t,0,230,0|-1054x1s,14,9,0|-ffv401,14,9,0|-ffv400,15,4,1|-f9l6o1,15,4,1|-f9l6o0,14,9,0|-f765c1,14,9,0|-f765c0,15,4,1|-e6fxc1,15,4,1|-e6fxc0,14,9,0|-dyoao1,14,9,0|-dyoao0,15,4,1|-dno001,15,4,1|-dno000,14,9,0|-dfuio1,14,9,0|-dfuio0,15,4,1|-d4u801,15,4,1|-d4u800,14,9,0|-cwatc1,14,9,0|-cwatc0,15,4,1|-cm2ao1,15,4,1|-cm2ao0,14,9,0|-cdiw01,14,9,0|-cdiw00,15,4,1|-c3adc1,15,4,1|-c3adc0,14,9,0|-6lluw1,14,9,0|-6lluw0,15,4,1|-6e79o1,15,4,1|-6e79o0,14,9,0|-63alk1,14,9,0|-63alk0,15,4,1|-5vfcc1,15,4,1|-5vfcc0,14,9,0|-5kilg1,14,9,0|-5kilg0,15,4,1|-5cp1c1,15,4,1|-5cp1c0,14,9,0|-51otg1,14,9,0|-51otg0,15,4,1|-4tv9c1,15,4,1|-4tv9c0,14,9,0|-4iww41,14,9,0|-4iww40,15,4,1|-4b3c01,15,4,1|-4b3c00,14,9,0|-404ys1,14,9,0|-404ys0,15,4,1|-3sbeo1,15,4,1|-3sbeo0,14,9,0|-3hd1g1,14,9,0|-3hd1g0,15,4,1|-39jhc1,15,4,1|-39jhc0,14,9,0|-2yj9g1,14,9,0|-2yj9g0,15,4,1|-2qppc1,15,4,1|-2qppc0,14,9,0|-2frc41,14,9,0|-2frc40,15,4,1|-27xs01,15,4,1|-27xs00,14,9,0|-1wzes1,14,9,0|-1wzes0,15,4,1|-1p4001,15,4,1|-1p4000,14,9,0|-1e7hg1,14,9,0|-1e7hg0,15,4,1|-1ceto1,15,4,1|-1ceto0,108,9,0|2crp3z,108,9,0|2crp40,109,4,1|2ht3nz,109,4,1|2ht3o0,108,9,0|2rj6fz,108,9,0|2rj6g0,109,4,1|2ydebz,109,4,1|2ydec0,108,9,0|5iwyfz,108,9,0|5iwyg0,109,4,1|5l2qfz,109,4,1|5l2qg0,108,9,0|7hhp3z,108,9,0|7hhp40,109,4,1|7n93rz,109,4,1|7n93s0,108,9,0|7z4vrz,108,9,0|7z4vs0,109,4,1|86c2bz,109,4,1|86c2c0,108,9,0|8jnrrz,108,9,0|8jnrs0,109,4,1|8pf3nz,109,4,1|8pf3o0,108,9,0|90ql3z,108,9,0|90ql40,109,4,1|98i4zz,109,4,1|98i500,108,9,0|9jb3rz,108,9,0|9jb3s0,109,4,1|9qv8zz,109,4,1|9qv900,108,9,0|a342fz,108,9,0|a342g0,109,4,1|a9lbnz,109,4,1|a9lbo0,108,9,0|ak1brz,108,9,0|ak1bs0,109,4,1|aryfnz,109,4,1|aryfo0,108,9,0|b2refz,108,9,0|b2reg0,109,4,1|bb1gzz,109,4,1|bb1h00,108,9,0|blufrz,108,9,0|blufs0,109,4,1|bu4ibz,109,4,1|bu4ic0,108,9,0|c4trrz,108,9,0|c4trs0,109,4,1|ccukzz,109,4,1|ccul00,108,9,0|cnjufz,108,9,0|cnjug0,109,4,1|cv7ozz,109,4,1|cv7p00,108,9,0|d69x3z,108,9,0|d69x40,109,4,1|deaqbz,109,4,1|deaqc0,108,9,0|dkh13z,108,9,0|dkh140,14,9,0|dpcyfz,14,9,0|dpcyg0,15,4,1|dy02fz,15,4,1|dy02g0,14,9,0|e8313z,14,9,0|e83140,15,4,1|egq53z,15,4,1|egq540,14,9,0|eqt3rz,14,9,0|eqt3s0,15,4,1|ezg7rz,15,4,1|ezg7s0,14,9,0|fa93rz,14,9,0|fa93s0,15,4,1|fjm2bz,15,4,1|fjm2c0,14,9,0|ftc53z,14,9,0|ftc540,15,4,1|g2p3nz,15,4,1|g2p3o0,14,9,0|gc27rz,14,9,0|gc27s0,15,4,1|glf6bz,15,4,1|glf6c0,14,9,0|gusafz,14,9,0|gusag0,15,4,1|h458zz,15,4,1|h45900,14,9,0|hdid3z,14,9,0|hdid40,15,4,1|hmvbnz,15,4,1|hmvbo0,14,9,0|hw8frz,14,9,0|hw8fs0,15,4,1|i4vjrz,15,4,1|i4vjs0,14,9,0|ieyifz,14,9,0|ieyig0,15,4,1|int3vz,15,4,1|int3w0,14,9,0|ix0ifz,14,9,0|ix0ig0,15,4,1|j5ynnz,15,4,1|j5yno0,14,9,0|jfsfrz,14,9,0|jfsfs0,15,4,1|joa2jz,15,4,1|joa2k0,14,9,0|jyet3z,14,9,0|jyet40,15,4,1|k6bwzz,15,4,1|k6bx00,14,9,0|kh4vrz,14,9,0|kh4vs0,15,4,1|kpf13z,15,4,1|kpf140,14,9,0|kzwt5n,14,9,0|kzwt5o,15,4,1|l6yfnz,15,4,1|l6yfo0,14,9,0|lixztn,14,9,0|lixzto,15,4,1|lp7ubz,15,4,1|lp7uc0,14,9,0|m1o2fz,14,9,0|m1o2g0,15,4,1|mao53z,15,4,1|mao540,14,9,0|mke53z,14,9,0|mke540,15,4,1|mtr3nz,15,4,1|mtr3o0,14,9,0|n347rz,14,9,0|n347s0,15,4,1|ndx0zz,15,4,1|ndx100,14,9,0|nlw53z,14,9,0|nlw540,15,4,1|nwn6fz,15,4,1|nwn6g0,14,9,0|o4majz,14,9,0|o4mak0,15,4,1|ofs2fz,15,4,1|ofs2g0,14,9,0|oncd7z,14,9,0|oncd80,15,4,1|oyi53z,15,4,1|oyi540,14,9,0|p62fvz,14,9,0|p62fw0,15,4,1|ph87rz,15,4,1|ph87s0,14,9,0|pp3jrz,14,9,0|pp3js0,15,4,1|pzy7nz,15,4,1|pzy7o0,14,9,0|q7vh3z,14,9,0|q7vh40,15,4,1|qiod3z,15,4,1|qiod40,14,9,0|qqljrz,14,9,0|qqljs0,15,4,1|r1pjrz,15,4,1|r1pjs0,14,9,0|r9dh3z,14,9,0|r9dh40,15,4,1|rkhjvz,15,4,1|rkhjw0,14,9,0|rtunzz,14,9,0|rtuo00,15,4,1|s37mjz,15,4,1|s37mk0,14,9,0|sc7rzz,14,9,0|sc7s00,15,4,1|slxp7z,15,4,1|slxp80,14,9,0|sukvzz,14,9,0|sukw00,15,4,1|t4nrvz,15,4,1|t4nrw0,14,9,0|tcl1bz,14,9,0|tcl1c0,15,4,1|tndujz,15,4,1|tnduk0,14,9,0|tvb3zz,14,9,0|tvb400,15,4,1|u6gvvz,15,4,1|u6gvw0,14,9,0|ue16nz,14,9,0|ue16o0,15,4,1|up6yjz,15,4,1|up6yk0,14,9,0|uwr9bz,14,9,0|uwr9c0,15,4,1|v7x17z,15,4,1|v7x180,14,9,0|vfuanz,14,9,0|vfuao0,15,4,1|vqn3vz,15,4,1|vqn3w0,14,9,0|vykdbz,14,9,0|vykdc0,15,4,1|w9d6jz,15,4,1|w9d6k0,14,9,0|whafzz,14,9,0|whag00,15,4,1|wsg7vz,15,4,1|wsg7w0,14,9,0|x00inz,14,9,0|x00io0,15,4,1|xb6ajz,15,4,1|xb6ak0,14,9,0|xiqlbz,14,9,0|xiqlc0,15,4,1|xtwd7z,15,4,1|xtwd80,14,9,0|y1gnzz,14,9,0|y1go00,15,4,1|ycmfvz,15,4,1|ycmfw0,14,9,0|ykjpbz,14,9,0|ykjpc0,15,4,1|yuzjvz,15,4,1|yuzjw0,14,9,0|z39rzz,14,9,0|z39s00,15,4,1|zdcnvz,15,4,1|zdcnw0,14,9,0|zlzunz,14,9,0|zlzuo0,15,4,1|zvct7z,15,4,1|zvct80,14,9,0|104pxbz,14,9,0|104pxc0,15,4,1|10dpx7z,15,4,1|10dpx80,14,9,0|10nfzzz,14,9,0|10ng000,15,4,1|10vq2jz,15,4,1|10vq2k0,14,9,0|10y8vzz,14,9,0|10y8w00,15,4,1|10ylrvz,15,4,1|10ylrw0,14,9,0|116j1bz,14,9,0|116j1c0,15,4,1|11e36jz,15,4,1|11e36k0,14,9,0|11g91bz,14,9,0|11g91c0,15,4,1|11hbujz,15,4,1|11hbuk0,14,9,0|11p93zz,14,9,0|11p9400,15,4,1|11wgajz,15,4,1|11wgak0,14,9,0|11ym5bz,14,9,0|11ym5c0,15,4,1|1201x7z,15,4,1|1201x80,14,9,0|127z6nz,14,9,0|127z6o0,15,4,1|12egfvz,15,4,1|12egfw0,14,9,0|12gz9bz,14,9,0|12gz9c0,15,4,1|12irzvz,15,4,1|12irzw0,14,9,0|12qp9bz,14,9,0|12qp9c0,15,4,1|12wtjvz,15,4,1|12wtjw0,14,9,0|12yzenz,14,9,0|12yzeo0,15,4,1|131v17z,15,4,1|131v180,14,9,0|139fbzz,14,9,0|139fc00,15,4,1|13f6nvz,15,4,1|13f6nw0,14,9,0|13hcinz,14,9,0|13hcio0,15,4,1|13kl3vz,15,4,1|13kl3w0,14,9,0|13s5enz,14,9,0|13s5eo0,15,4,1|13x6t7z,15,4,1|13x6t80,14,9,0|13zpmnz,14,9,0|13zpmo0,15,4,1|143b6jz,15,4,1|143b6k0,14,9,0|14b8fzz,14,9,0|14b8g00,15,4,1|14fjx7z,15,4,1|14fjx80,14,9,0|14hprzz,14,9,0|14hps00,15,4,1|14m197z,15,4,1|14m1980,14,9,0|14tyinz,14,9,0|14tyio0,15,4,1|14xk2jz,15,4,1|14xk2k0,14,9,0|1502vzz,14,9,0|1502w00,15,4,1|154rbvz,15,4,1|154rbw0,14,9,0|15colbz,14,9,0|15colc0,15,4,1|15fx6jz,15,4,1|15fx6k0,14,9,0|15i31bz,14,9,0|15i31c0,15,4,1|15nud7z,15,4,1|15nud80,14,9,0|15venzz,14,9,0|15veo00,15,4,1|15yaajz,15,4,1|15yaak0,14,9,0|160g5bz,14,9,0|160g5c0,15,4,1|166kfvz,15,4,1|166kfw0,14,9,0|16e4qnz,14,9,0|16e4qo0,15,4,1|16gafvz,15,4,1|16gafw0,14,9,0|16it9bz,14,9,0|16it9c0,15,4,1|16paijz,15,4,1|16paik0,14,9,0|16x7rzz,14,9,0|16x7s00,15,4,1|16ynjvz,15,4,1|16ynjw0,14,9,0|170tenz,14,9,0|170teo0,15,4,1|1780l7z,15,4,1|1780l80,14,9,0|17fxunz,14,9,0|17fxuo0,15,4,1|17gnp7z,15,4,1|17gnp80,14,9,0|17j6inz,14,9,0|17j6io0,15,4,1|17qqnvz,15,4,1|17qqnw0,14,9,0|17ynxbz,14,9,0|17ynxc0,15,4,1|17z0t7z,15,4,1|17z0t80,14,9,0|181jmnz,14,9,0|181jmo0,15,4,1|189gqjz,15,4,1|189gqk0,14,9,0|18jjrzz,14,9,0|18jjs00,15,4,1|18sjrvz,15,4,1|18sjrw0,14,9,0|191wvzz,14,9,0|191ww00,15,4,1|19b9ujz,15,4,1|19b9uk0,14,9,0|19jx1bz,14,9,0|19jx1c0,15,4,1|19tzx7z,15,4,1|19tzx80,14,9,0|1a2a5bz,14,9,0|1a2a5c0,15,4,1|1acpzvz,15,4,1|1acpzw0,14,9,0|1akn9bz,14,9,0|1akn9c0,15,4,1|1avg2jz,15,4,1|1avg2k0,14,9,0|1b3dbzz,14,9,0|1b3dc00,15,4,1|1bej3vz,15,4,1|1bej3w0,14,9,0|1bm3enz,14,9,0|1bm3eo0,15,4,1|1bx96jz,15,4,1|1bx96k0,14,9,0|1c4thbz,14,9,0|1c4thc0,15,4,1|1cfz97z,15,4,1|1cfz980,14,9,0|1cnjjzz,14,9,0|1cnjk00,15,4,1|1cypbvz,15,4,1|1cypbw0,14,9,0|1d6mlbz,14,9,0|1d6mlc0,15,4,1|1dhfejz,15,4,1|1dhfek0,14,9,0|1dpcnzz,14,9,0|1dpco00,15,4,1|1e05h7z,15,4,1|1e05h80,14,9,0|1e82qnz,14,9,0|1e82qo0,15,4,1|1ej8ijz,15,4,1|1ej8ik0,14,9,0|1eqstbz,14,9,0|1eqstc0,15,4,1|1f1yl7z,15,4,1|1f1yl80,14,9,0|1f9ivzz,14,9,0|1f9iw00,15,4,1|1fkbp7z,15,4,1|1fkbp80,14,9,0|1fslxbz,14,9,0|1fslxc0,15,4,1|1g2ot7z,15,4,1|1g2ot80,14,9,0|1gbbzzz,14,9,0|1gbc000,15,4,1|1gl1x7z,15,4,1|1gl1x80,14,9,0|1gu22nz,14,9,0|1gu22o0,15,4,1|1h322jz,15,4,1|1h322k0,14,9,0|1hcs5bz,14,9,0|1hcs5c0,15,4,1|1hlf6jz,15,4,1|1hlf6k0,14,9,0|1hnl1bz,14,9,0|1hnl1c0,15,4,1|1hnxx7z,15,4,1|1hnxx80,14,9,0|1hvi7zz,14,9,0|1hvi800,15,4,1|1i3sajz,15,4,1|1i3sak0,14,9,0|1i5y5bz,14,9,0|1i5y5c0,15,4,1|1i6nzvz,15,4,1|1i6nzw0,14,9,0|1ie8anz,14,9,0|1ie8ao0,15,4,1|1ilsfvz,15,4,1|1ilsfw0,14,9,0|1iob9bz,14,9,0|1iob9c0,15,4,1|1ipe2jz,15,4,1|1ipe2k0,14,9,0|1ixbbzz,14,9,0|1ixbc00,15,4,1|1j45jvz,15,4,1|1j45jw0,14,9,0|1j6benz,14,9,0|1j6beo0,15,4,1|1j8457z,15,4,1|1j84580,14,9,0|1jg1enz,14,9,0|1jg1eo0,15,4,1|1jm5p7z,15,4,1|1jm5p80,14,9,0|1jooinz,14,9,0|1jooio0,15,4,1|1jqu7vz,15,4,1|1jqu7w0,14,9,0|1jyrhbz,14,9,0|1jyrhc0,15,4,1|1k4it7z,15,4,1|1k4it80,14,9,0|1k71mnz,14,9,0|1k71mo0,15,4,1|1k9x97z,15,4,1|1k9x980,14,9,0|1khhjzz,14,9,0|1khhk00,15,4,1|1kmvx7z,15,4,1|1kmvx80,14,9,0|1kp1rzz,14,9,0|1kp1s00,15,4,1|1ksnbvz,15,4,1|1ksnbw0,14,9,0|1l07mnz,14,9,0|1l07mo0,15,4,1|1l4w2jz,15,4,1|1l4w2k0,14,9,0|1l7evzz,14,9,0|1l7ew00,15,4,1|1lbdejz,15,4,1|1lbdek0,14,9,0|1ljanzz,14,9,0|1ljao00,15,4,1|1ln96jz,15,4,1|1ln96k0,14,9,0|1lpf1bz,14,9,0|1lpf1c0,15,4,1|1lu3h7z,15,4,1|1lu3h80,14,9,0|1m20qnz,14,9,0|1m20qo0,15,4,1|1m5majz,15,4,1|1m5mak0,14,9,0|1m7s5bz,14,9,0|1m7s5c0,15,4,1|1mctjvz,15,4,1|1mctjw0,14,9,0|1mkqtbz,14,9,0|1mkqtc0,15,4,1|1mnmfvz,15,4,1|1mnmfw0,14,9,0|1mq59bz,14,9,0|1mq59c0,15,4,1|1mvjmjz,15,4,1|1mvjmk0,14,9,0|1n3gvzz,14,9,0|1n3gw00,15,4,1|1n5zjvz,15,4,1|1n5zjw0,14,9,0|1n85enz,14,9,0|1n85eo0,15,4,1|1nemnvz,15,4,1|1nemnw0,14,9,0|1nm6ynz,14,9,0|1nm6yo0,15,4,1|1nnzp7z,15,4,1|1nnzp80,14,9,0|1nqiinz,14,9,0|1nqiio0,15,4,1|1nxcqjz,15,4,1|1nxcqk0,14,9,0|1o4x1bz,14,9,0|1o4x1c0,15,4,1|1o6ct7z,15,4,1|1o6ct80,14,9,0|1o8vmnz,14,9,0|1o8vmo0,15,4,1|1og2t7z,15,4,1|1og2t80,14,9,0|1oo02nz,14,9,0|1oo02o0,15,4,1|1oopx7z,15,4,1|1oopx80,14,9,0|1oqvrzz,14,9,0|1oqvs00,15,4,1|1oysvvz,15,4,1|1oysvw0,14,9,0|1p6q5bz,14,9,0|1p6q5c0,15,4,1|1phiyjz,15,4,1|1phiyk0,14,9,0|1ppg7zz,14,9,0|1ppg800,15,4,1|1q0lzvz,15,4,1|1q0lzw0,14,9,0|1q86anz,14,9,0|1q86ao0,15,4,1|1qjc2jz,15,4,1|1qjc2k0,14,9,0|1qqwdbz,14,9,0|1qqwdc0,15,4,1|1r2257z,15,4,1|1r22580,14,9,0|1r9mfzz,14,9,0|1r9mg00,15,4,1|1rks7vz,15,4,1|1rks7w0,14,9,0|1rsphbz,14,9,0|1rsphc0,15,4,1|1s3iajz,15,4,1|1s3iak0,14,9,0|1sbfjzz,14,9,0|1sbfk00,15,4,1|1sm8d7z,15,4,1|1sm8d80,14,9,0|1su5mnz,14,9,0|1su5mo0,15,4,1|1t5bejz,15,4,1|1t5bek0,14,9,0|1tcvpbz,14,9,0|1tcvpc0,15,4,1|1to1h7z,15,4,1|1to1h80,14,9,0|1tvlrzz,14,9,0|1tvls00,15,4,1|1u6rjvz,15,4,1|1u6rjw0,14,9,0|1ueotbz,14,9,0|1ueotc0,15,4,1|1uphmjz,15,4,1|1uphmk0,14,9,0|1uxevzz,14,9,0|1uxew00,15,4,1|1v87p7z,15,4,1|1v87p80,14,9,0|1vg4ynz,14,9,0|1vg4yo0,15,4,1|1vqxrvz,15,4,1|1vqxrw0,14,9,0|NaN,14,9,0",
        "Asia/Hebron|,0,231,0|-1054x60,0,231,0|-1054x5z,14,9,0|-ffv401,14,9,0|-ffv400,15,4,1|-f9l6o1,15,4,1|-f9l6o0,14,9,0|-f765c1,14,9,0|-f765c0,15,4,1|-e6fxc1,15,4,1|-e6fxc0,14,9,0|-dyoao1,14,9,0|-dyoao0,15,4,1|-dno001,15,4,1|-dno000,14,9,0|-dfuio1,14,9,0|-dfuio0,15,4,1|-d4u801,15,4,1|-d4u800,14,9,0|-cwatc1,14,9,0|-cwatc0,15,4,1|-cm2ao1,15,4,1|-cm2ao0,14,9,0|-cdiw01,14,9,0|-cdiw00,15,4,1|-c3adc1,15,4,1|-c3adc0,14,9,0|-6lluw1,14,9,0|-6lluw0,15,4,1|-6e79o1,15,4,1|-6e79o0,14,9,0|-63alk1,14,9,0|-63alk0,15,4,1|-5vfcc1,15,4,1|-5vfcc0,14,9,0|-5kilg1,14,9,0|-5kilg0,15,4,1|-5cp1c1,15,4,1|-5cp1c0,14,9,0|-51otg1,14,9,0|-51otg0,15,4,1|-4tv9c1,15,4,1|-4tv9c0,14,9,0|-4iww41,14,9,0|-4iww40,15,4,1|-4b3c01,15,4,1|-4b3c00,14,9,0|-404ys1,14,9,0|-404ys0,15,4,1|-3sbeo1,15,4,1|-3sbeo0,14,9,0|-3hd1g1,14,9,0|-3hd1g0,15,4,1|-39jhc1,15,4,1|-39jhc0,14,9,0|-2yj9g1,14,9,0|-2yj9g0,15,4,1|-2qppc1,15,4,1|-2qppc0,14,9,0|-2frc41,14,9,0|-2frc40,15,4,1|-27xs01,15,4,1|-27xs00,14,9,0|-1wzes1,14,9,0|-1wzes0,15,4,1|-1p4001,15,4,1|-1p4000,14,9,0|-1e7hg1,14,9,0|-1e7hg0,15,4,1|-1ceto1,15,4,1|-1ceto0,108,9,0|2crp3z,108,9,0|2crp40,109,4,1|2ht3nz,109,4,1|2ht3o0,108,9,0|2rj6fz,108,9,0|2rj6g0,109,4,1|2ydebz,109,4,1|2ydec0,108,9,0|5iwyfz,108,9,0|5iwyg0,109,4,1|5l2qfz,109,4,1|5l2qg0,108,9,0|7hhp3z,108,9,0|7hhp40,109,4,1|7n93rz,109,4,1|7n93s0,108,9,0|7z4vrz,108,9,0|7z4vs0,109,4,1|86c2bz,109,4,1|86c2c0,108,9,0|8jnrrz,108,9,0|8jnrs0,109,4,1|8pf3nz,109,4,1|8pf3o0,108,9,0|90ql3z,108,9,0|90ql40,109,4,1|98i4zz,109,4,1|98i500,108,9,0|9jb3rz,108,9,0|9jb3s0,109,4,1|9qv8zz,109,4,1|9qv900,108,9,0|a342fz,108,9,0|a342g0,109,4,1|a9lbnz,109,4,1|a9lbo0,108,9,0|ak1brz,108,9,0|ak1bs0,109,4,1|aryfnz,109,4,1|aryfo0,108,9,0|b2refz,108,9,0|b2reg0,109,4,1|bb1gzz,109,4,1|bb1h00,108,9,0|blufrz,108,9,0|blufs0,109,4,1|bu4ibz,109,4,1|bu4ic0,108,9,0|c4trrz,108,9,0|c4trs0,109,4,1|ccukzz,109,4,1|ccul00,108,9,0|cnjufz,108,9,0|cnjug0,109,4,1|cv7ozz,109,4,1|cv7p00,108,9,0|d69x3z,108,9,0|d69x40,109,4,1|deaqbz,109,4,1|deaqc0,108,9,0|dkh13z,108,9,0|dkh140,14,9,0|dpcyfz,14,9,0|dpcyg0,15,4,1|dy02fz,15,4,1|dy02g0,14,9,0|e8313z,14,9,0|e83140,15,4,1|egq53z,15,4,1|egq540,14,9,0|eqt3rz,14,9,0|eqt3s0,15,4,1|ezg7rz,15,4,1|ezg7s0,14,9,0|fa93rz,14,9,0|fa93s0,15,4,1|fjm2bz,15,4,1|fjm2c0,14,9,0|ftc53z,14,9,0|ftc540,15,4,1|g2p3nz,15,4,1|g2p3o0,14,9,0|gc27rz,14,9,0|gc27s0,15,4,1|glf6bz,15,4,1|glf6c0,14,9,0|gusafz,14,9,0|gusag0,15,4,1|h458zz,15,4,1|h45900,14,9,0|hdid3z,14,9,0|hdid40,15,4,1|hmvbnz,15,4,1|hmvbo0,14,9,0|hw8frz,14,9,0|hw8fs0,15,4,1|i4vjrz,15,4,1|i4vjs0,14,9,0|ieyifz,14,9,0|ieyig0,15,4,1|int3vz,15,4,1|int3w0,14,9,0|ix0ifz,14,9,0|ix0ig0,15,4,1|j5ynnz,15,4,1|j5yno0,14,9,0|jfsfrz,14,9,0|jfsfs0,15,4,1|joa2jz,15,4,1|joa2k0,14,9,0|jyet3z,14,9,0|jyet40,15,4,1|k6hgzz,15,4,1|k6hh00,14,9,0|kh4vrz,14,9,0|kh4vs0,15,4,1|kpf13z,15,4,1|kpf140,14,9,0|kzuyfz,14,9,0|kzuyg0,15,4,1|l6yfnz,15,4,1|l6yfo0,14,9,0|lixztn,14,9,0|lixzto,15,4,1|lp7ubz,15,4,1|lp7uc0,14,9,0|lqpmfz,14,9,0|lqpmg0,15,4,1|lsaybz,15,4,1|lsayc0,14,9,0|m1o2fz,14,9,0|m1o2g0,15,4,1|mao53z,15,4,1|mao540,14,9,0|mke53z,14,9,0|mke540,15,4,1|mtr3nz,15,4,1|mtr3o0,14,9,0|n347rz,14,9,0|n347s0,15,4,1|ndx0zz,15,4,1|ndx100,14,9,0|nlw53z,14,9,0|nlw540,15,4,1|nwn6fz,15,4,1|nwn6g0,14,9,0|o4majz,14,9,0|o4mak0,15,4,1|ofs2fz,15,4,1|ofs2g0,14,9,0|oncd7z,14,9,0|oncd80,15,4,1|oyi53z,15,4,1|oyi540,14,9,0|p62fvz,14,9,0|p62fw0,15,4,1|ph87rz,15,4,1|ph87s0,14,9,0|pp3jrz,14,9,0|pp3js0,15,4,1|pzy7nz,15,4,1|pzy7o0,14,9,0|q7vh3z,14,9,0|q7vh40,15,4,1|qiod3z,15,4,1|qiod40,14,9,0|qqljrz,14,9,0|qqljs0,15,4,1|r1pjrz,15,4,1|r1pjs0,14,9,0|r9dh3z,14,9,0|r9dh40,15,4,1|rkhjvz,15,4,1|rkhjw0,14,9,0|rtunzz,14,9,0|rtuo00,15,4,1|s37mjz,15,4,1|s37mk0,14,9,0|sc7rzz,14,9,0|sc7s00,15,4,1|slxp7z,15,4,1|slxp80,14,9,0|sukvzz,14,9,0|sukw00,15,4,1|t4nrvz,15,4,1|t4nrw0,14,9,0|tcl1bz,14,9,0|tcl1c0,15,4,1|tndujz,15,4,1|tnduk0,14,9,0|tvb3zz,14,9,0|tvb400,15,4,1|u6gvvz,15,4,1|u6gvw0,14,9,0|ue16nz,14,9,0|ue16o0,15,4,1|up6yjz,15,4,1|up6yk0,14,9,0|uwr9bz,14,9,0|uwr9c0,15,4,1|v7x17z,15,4,1|v7x180,14,9,0|vfuanz,14,9,0|vfuao0,15,4,1|vqn3vz,15,4,1|vqn3w0,14,9,0|vykdbz,14,9,0|vykdc0,15,4,1|w9d6jz,15,4,1|w9d6k0,14,9,0|whafzz,14,9,0|whag00,15,4,1|wsg7vz,15,4,1|wsg7w0,14,9,0|x00inz,14,9,0|x00io0,15,4,1|xb6ajz,15,4,1|xb6ak0,14,9,0|xiqlbz,14,9,0|xiqlc0,15,4,1|xtwd7z,15,4,1|xtwd80,14,9,0|y1gnzz,14,9,0|y1go00,15,4,1|ycmfvz,15,4,1|ycmfw0,14,9,0|ykjpbz,14,9,0|ykjpc0,15,4,1|yuzjvz,15,4,1|yuzjw0,14,9,0|z39rzz,14,9,0|z39s00,15,4,1|zdcnvz,15,4,1|zdcnw0,14,9,0|zlzunz,14,9,0|zlzuo0,15,4,1|zvct7z,15,4,1|zvct80,14,9,0|104pxbz,14,9,0|104pxc0,15,4,1|10dpx7z,15,4,1|10dpx80,14,9,0|10nfzzz,14,9,0|10ng000,15,4,1|10vq2jz,15,4,1|10vq2k0,14,9,0|10y8vzz,14,9,0|10y8w00,15,4,1|10ylrvz,15,4,1|10ylrw0,14,9,0|116j1bz,14,9,0|116j1c0,15,4,1|11e36jz,15,4,1|11e36k0,14,9,0|11g91bz,14,9,0|11g91c0,15,4,1|11hbujz,15,4,1|11hbuk0,14,9,0|11p93zz,14,9,0|11p9400,15,4,1|11wgajz,15,4,1|11wgak0,14,9,0|11ym5bz,14,9,0|11ym5c0,15,4,1|1201x7z,15,4,1|1201x80,14,9,0|127z6nz,14,9,0|127z6o0,15,4,1|12egfvz,15,4,1|12egfw0,14,9,0|12gz9bz,14,9,0|12gz9c0,15,4,1|12irzvz,15,4,1|12irzw0,14,9,0|12qp9bz,14,9,0|12qp9c0,15,4,1|12wtjvz,15,4,1|12wtjw0,14,9,0|12yzenz,14,9,0|12yzeo0,15,4,1|131v17z,15,4,1|131v180,14,9,0|139fbzz,14,9,0|139fc00,15,4,1|13f6nvz,15,4,1|13f6nw0,14,9,0|13hcinz,14,9,0|13hcio0,15,4,1|13kl3vz,15,4,1|13kl3w0,14,9,0|13s5enz,14,9,0|13s5eo0,15,4,1|13x6t7z,15,4,1|13x6t80,14,9,0|13zpmnz,14,9,0|13zpmo0,15,4,1|143b6jz,15,4,1|143b6k0,14,9,0|14b8fzz,14,9,0|14b8g00,15,4,1|14fjx7z,15,4,1|14fjx80,14,9,0|14hprzz,14,9,0|14hps00,15,4,1|14m197z,15,4,1|14m1980,14,9,0|14tyinz,14,9,0|14tyio0,15,4,1|14xk2jz,15,4,1|14xk2k0,14,9,0|1502vzz,14,9,0|1502w00,15,4,1|154rbvz,15,4,1|154rbw0,14,9,0|15colbz,14,9,0|15colc0,15,4,1|15fx6jz,15,4,1|15fx6k0,14,9,0|15i31bz,14,9,0|15i31c0,15,4,1|15nud7z,15,4,1|15nud80,14,9,0|15venzz,14,9,0|15veo00,15,4,1|15yaajz,15,4,1|15yaak0,14,9,0|160g5bz,14,9,0|160g5c0,15,4,1|166kfvz,15,4,1|166kfw0,14,9,0|16e4qnz,14,9,0|16e4qo0,15,4,1|16gafvz,15,4,1|16gafw0,14,9,0|16it9bz,14,9,0|16it9c0,15,4,1|16paijz,15,4,1|16paik0,14,9,0|16x7rzz,14,9,0|16x7s00,15,4,1|16ynjvz,15,4,1|16ynjw0,14,9,0|170tenz,14,9,0|170teo0,15,4,1|1780l7z,15,4,1|1780l80,14,9,0|17fxunz,14,9,0|17fxuo0,15,4,1|17gnp7z,15,4,1|17gnp80,14,9,0|17j6inz,14,9,0|17j6io0,15,4,1|17qqnvz,15,4,1|17qqnw0,14,9,0|17ynxbz,14,9,0|17ynxc0,15,4,1|17z0t7z,15,4,1|17z0t80,14,9,0|181jmnz,14,9,0|181jmo0,15,4,1|189gqjz,15,4,1|189gqk0,14,9,0|18jjrzz,14,9,0|18jjs00,15,4,1|18sjrvz,15,4,1|18sjrw0,14,9,0|191wvzz,14,9,0|191ww00,15,4,1|19b9ujz,15,4,1|19b9uk0,14,9,0|19jx1bz,14,9,0|19jx1c0,15,4,1|19tzx7z,15,4,1|19tzx80,14,9,0|1a2a5bz,14,9,0|1a2a5c0,15,4,1|1acpzvz,15,4,1|1acpzw0,14,9,0|1akn9bz,14,9,0|1akn9c0,15,4,1|1avg2jz,15,4,1|1avg2k0,14,9,0|1b3dbzz,14,9,0|1b3dc00,15,4,1|1bej3vz,15,4,1|1bej3w0,14,9,0|1bm3enz,14,9,0|1bm3eo0,15,4,1|1bx96jz,15,4,1|1bx96k0,14,9,0|1c4thbz,14,9,0|1c4thc0,15,4,1|1cfz97z,15,4,1|1cfz980,14,9,0|1cnjjzz,14,9,0|1cnjk00,15,4,1|1cypbvz,15,4,1|1cypbw0,14,9,0|1d6mlbz,14,9,0|1d6mlc0,15,4,1|1dhfejz,15,4,1|1dhfek0,14,9,0|1dpcnzz,14,9,0|1dpco00,15,4,1|1e05h7z,15,4,1|1e05h80,14,9,0|1e82qnz,14,9,0|1e82qo0,15,4,1|1ej8ijz,15,4,1|1ej8ik0,14,9,0|1eqstbz,14,9,0|1eqstc0,15,4,1|1f1yl7z,15,4,1|1f1yl80,14,9,0|1f9ivzz,14,9,0|1f9iw00,15,4,1|1fkbp7z,15,4,1|1fkbp80,14,9,0|1fslxbz,14,9,0|1fslxc0,15,4,1|1g2ot7z,15,4,1|1g2ot80,14,9,0|1gbbzzz,14,9,0|1gbc000,15,4,1|1gl1x7z,15,4,1|1gl1x80,14,9,0|1gu22nz,14,9,0|1gu22o0,15,4,1|1h322jz,15,4,1|1h322k0,14,9,0|1hcs5bz,14,9,0|1hcs5c0,15,4,1|1hlf6jz,15,4,1|1hlf6k0,14,9,0|1hnl1bz,14,9,0|1hnl1c0,15,4,1|1hnxx7z,15,4,1|1hnxx80,14,9,0|1hvi7zz,14,9,0|1hvi800,15,4,1|1i3sajz,15,4,1|1i3sak0,14,9,0|1i5y5bz,14,9,0|1i5y5c0,15,4,1|1i6nzvz,15,4,1|1i6nzw0,14,9,0|1ie8anz,14,9,0|1ie8ao0,15,4,1|1ilsfvz,15,4,1|1ilsfw0,14,9,0|1iob9bz,14,9,0|1iob9c0,15,4,1|1ipe2jz,15,4,1|1ipe2k0,14,9,0|1ixbbzz,14,9,0|1ixbc00,15,4,1|1j45jvz,15,4,1|1j45jw0,14,9,0|1j6benz,14,9,0|1j6beo0,15,4,1|1j8457z,15,4,1|1j84580,14,9,0|1jg1enz,14,9,0|1jg1eo0,15,4,1|1jm5p7z,15,4,1|1jm5p80,14,9,0|1jooinz,14,9,0|1jooio0,15,4,1|1jqu7vz,15,4,1|1jqu7w0,14,9,0|1jyrhbz,14,9,0|1jyrhc0,15,4,1|1k4it7z,15,4,1|1k4it80,14,9,0|1k71mnz,14,9,0|1k71mo0,15,4,1|1k9x97z,15,4,1|1k9x980,14,9,0|1khhjzz,14,9,0|1khhk00,15,4,1|1kmvx7z,15,4,1|1kmvx80,14,9,0|1kp1rzz,14,9,0|1kp1s00,15,4,1|1ksnbvz,15,4,1|1ksnbw0,14,9,0|1l07mnz,14,9,0|1l07mo0,15,4,1|1l4w2jz,15,4,1|1l4w2k0,14,9,0|1l7evzz,14,9,0|1l7ew00,15,4,1|1lbdejz,15,4,1|1lbdek0,14,9,0|1ljanzz,14,9,0|1ljao00,15,4,1|1ln96jz,15,4,1|1ln96k0,14,9,0|1lpf1bz,14,9,0|1lpf1c0,15,4,1|1lu3h7z,15,4,1|1lu3h80,14,9,0|1m20qnz,14,9,0|1m20qo0,15,4,1|1m5majz,15,4,1|1m5mak0,14,9,0|1m7s5bz,14,9,0|1m7s5c0,15,4,1|1mctjvz,15,4,1|1mctjw0,14,9,0|1mkqtbz,14,9,0|1mkqtc0,15,4,1|1mnmfvz,15,4,1|1mnmfw0,14,9,0|1mq59bz,14,9,0|1mq59c0,15,4,1|1mvjmjz,15,4,1|1mvjmk0,14,9,0|1n3gvzz,14,9,0|1n3gw00,15,4,1|1n5zjvz,15,4,1|1n5zjw0,14,9,0|1n85enz,14,9,0|1n85eo0,15,4,1|1nemnvz,15,4,1|1nemnw0,14,9,0|1nm6ynz,14,9,0|1nm6yo0,15,4,1|1nnzp7z,15,4,1|1nnzp80,14,9,0|1nqiinz,14,9,0|1nqiio0,15,4,1|1nxcqjz,15,4,1|1nxcqk0,14,9,0|1o4x1bz,14,9,0|1o4x1c0,15,4,1|1o6ct7z,15,4,1|1o6ct80,14,9,0|1o8vmnz,14,9,0|1o8vmo0,15,4,1|1og2t7z,15,4,1|1og2t80,14,9,0|1oo02nz,14,9,0|1oo02o0,15,4,1|1oopx7z,15,4,1|1oopx80,14,9,0|1oqvrzz,14,9,0|1oqvs00,15,4,1|1oysvvz,15,4,1|1oysvw0,14,9,0|1p6q5bz,14,9,0|1p6q5c0,15,4,1|1phiyjz,15,4,1|1phiyk0,14,9,0|1ppg7zz,14,9,0|1ppg800,15,4,1|1q0lzvz,15,4,1|1q0lzw0,14,9,0|1q86anz,14,9,0|1q86ao0,15,4,1|1qjc2jz,15,4,1|1qjc2k0,14,9,0|1qqwdbz,14,9,0|1qqwdc0,15,4,1|1r2257z,15,4,1|1r22580,14,9,0|1r9mfzz,14,9,0|1r9mg00,15,4,1|1rks7vz,15,4,1|1rks7w0,14,9,0|1rsphbz,14,9,0|1rsphc0,15,4,1|1s3iajz,15,4,1|1s3iak0,14,9,0|1sbfjzz,14,9,0|1sbfk00,15,4,1|1sm8d7z,15,4,1|1sm8d80,14,9,0|1su5mnz,14,9,0|1su5mo0,15,4,1|1t5bejz,15,4,1|1t5bek0,14,9,0|1tcvpbz,14,9,0|1tcvpc0,15,4,1|1to1h7z,15,4,1|1to1h80,14,9,0|1tvlrzz,14,9,0|1tvls00,15,4,1|1u6rjvz,15,4,1|1u6rjw0,14,9,0|1ueotbz,14,9,0|1ueotc0,15,4,1|1uphmjz,15,4,1|1uphmk0,14,9,0|1uxevzz,14,9,0|1uxew00,15,4,1|1v87p7z,15,4,1|1v87p80,14,9,0|1vg4ynz,14,9,0|1vg4yo0,15,4,1|1vqxrvz,15,4,1|1vqxrw0,14,9,0|NaN,14,9,0",
        "Asia/Ho_Chi_Minh|,0,232,0|-x5692v,0,232,0|-x5692u,110,232,0|-umdqev,110,232,0|-umdqeu,86,183,0|-e3bkw1,86,183,0|-e3bkw0,84,181,0|-cxyro1,84,181,0|-cxyro0,105,216,0|-cp63o1,105,216,0|-cp63o0,86,183,0|-bvja41,86,183,0|-bvja40,84,181,0|-7kjng1,84,181,0|-7kjng0,86,183,0|-57xfk1,86,183,0|-57xfk0,84,181,0|2uaprz,84,181,0|2uaps0,86,183,0|NaN,86,183,0",
        "Asia/Hong_Kong|,0,233,0|-y0i0s1,0,233,0|-y0i0s0,111,181,0|-ewdn81,111,181,0|-ewdn80,112,216,1|-eqtn81,112,216,1|-eqtn80,113,234,1|-emgia1,113,234,1|-emgia0,114,216,0|-cl7cs1,114,216,0|-cl7cs0,111,181,0|-cda8w1,111,181,0|-cda8w0,112,216,1|-c1r5u1,112,216,1|-c1r5u0,111,181,0|-buwv61,111,181,0|-buwv60,112,216,1|-bj1361,112,216,1|-bj1360,111,181,0|-bb3wi1,111,181,0|-bb3wi0,112,216,1|-b1qv61,112,216,1|-b1qv60,111,181,0|-attoi1,111,181,0|-attoi0,112,216,1|-aj0si1,112,216,1|-aj0si0,111,181,0|-ab3lu1,111,181,0|-ab3lu0,112,216,1|-a0apu1,112,216,1|-a0apu0,111,181,0|-9sdj61,111,181,0|-9sdj60,112,216,1|-9hkn61,112,216,1|-9hkn60,111,181,0|-99ahu1,111,181,0|-99ahu0,112,216,1|-8yhlu1,112,216,1|-8yhlu0,111,181,0|-8qkf61,111,181,0|-8qkf60,112,216,1|-8frly1,112,216,1|-8frly0,111,181,0|-88k9u1,111,181,0|-88k9u0,112,216,1|-7x1ja1,112,216,1|-7x1ja0,111,181,0|-7pu761,111,181,0|-7pu760,112,216,1|-7dyhy1,112,216,1|-7dyhy0,111,181,0|-7744i1,111,181,0|-7744i0,112,216,1|-6v8fa1,112,216,1|-6v8fa0,111,181,0|-6o1361,111,181,0|-6o1360,112,216,1|-6cicm1,112,216,1|-6cicm0,111,181,0|-65b0i1,111,181,0|-65b0i0,112,216,1|-5ts9y1,112,216,1|-5ts9y0,111,181,0|-5mkxu1,111,181,0|-5mkxu0,112,216,1|-5b27a1,112,216,1|-5b27a0,111,181,0|-53uv61,111,181,0|-53uv60,112,216,1|-4rz5y1,112,216,1|-4rz5y0,111,181,0|-4l4si1,111,181,0|-4l4si0,112,216,1|-4993a1,112,216,1|-4993a0,111,181,0|-42epu1,111,181,0|-42epu0,112,216,1|-3qj0m1,112,216,1|-3qj0m0,111,181,0|-3jboi1,111,181,0|-3jboi0,112,216,1|-37sxy1,112,216,1|-37sxy0,111,181,0|-30llu1,111,181,0|-30llu0,112,216,1|-2p2va1,112,216,1|-2p2va0,111,181,0|-2gfoi1,111,181,0|-2gfoi0,112,216,1|-272py1,112,216,1|-272py0,111,181,0|-1xplu1,111,181,0|-1xplu0,112,216,1|-1ocna1,112,216,1|-1ocna0,111,181,0|-1ezj61,111,181,0|-1ezj60,112,216,1|-159ly1,112,216,1|-159ly0,111,181,0|-vwhu1,111,181,0|-vwhu0,112,216,1|-mjja1,112,216,1|-mjja0,111,181,0|-d6f61,111,181,0|-d6f60,112,216,1|-3tgm1,112,216,1|-3tgm0,111,181,0|5jnhz,111,181,0|5jni0,112,216,1|ewm1z,112,216,1|ewm20,111,181,0|o9q5z,111,181,0|o9q60,112,216,1|xmopz,112,216,1|xmoq0,111,181,0|16zstz,111,181,0|16zsu0,112,216,1|1gpq1z,112,216,1|1gpq20,111,181,0|1q2u5z,111,181,0|1q2u60,112,216,1|1zfspz,112,216,1|1zfsq0,111,181,0|231i5z,111,181,0|231i60,112,216,1|2i5vdz,112,216,1|2i5ve0,111,181,0|2rizhz,111,181,0|2rizi0,112,216,1|30vy1z,112,216,1|30vy20,111,181,0|3a925z,111,181,0|3a9260,112,216,1|3jm0pz,112,216,1|3jm0q0,111,181,0|4vv4tz,111,181,0|4vv4u0,112,216,1|5457dz,112,216,1|5457e0,111,181,0|NaN,111,181,0",
        "Asia/Hovd|,0,235,0|-xmcoz1,0,235,0|-xmcoz0,92,188,0|46anbz,92,188,0|46anc0,86,183,0|6wupvz,86,183,0|6wupw0,84,181,1|769j3z,84,181,1|769j40,86,183,0|7fohvz,86,183,0|7fohw0,84,181,1|7p1gfz,84,181,1|7p1gg0,86,183,0|7yekjz,86,183,0|7yekk0,84,181,1|87rj3z,84,181,1|87rj40,86,183,0|8h4n7z,86,183,0|8h4n80,84,181,1|8qhlrz,84,181,1|8qhls0,86,183,0|8zupvz,86,183,0|8zupw0,84,181,1|997ofz,84,181,1|997og0,86,183,0|9iksjz,86,183,0|9iksk0,84,181,1|9rxr3z,84,181,1|9rxr40,86,183,0|a1av7z,86,183,0|a1av80,84,181,1|aantrz,84,181,1|aants0,86,183,0|ak0xvz,86,183,0|ak0xw0,84,181,1|atqv3z,84,181,1|atqv40,86,183,0|b33z7z,86,183,0|b33z80,84,181,1|bcgxrz,84,181,1|bcgxs0,86,183,0|blu1vz,86,183,0|blu1w0,84,181,1|bv70fz,84,181,1|bv70g0,86,183,0|c4k4jz,86,183,0|c4k4k0,84,181,1|cdx33z,84,181,1|cdx340,86,183,0|cna77z,86,183,0|cna780,84,181,1|cwn5rz,84,181,1|cwn5s0,86,183,0|d609vz,86,183,0|d609w0,84,181,1|dfd8fz,84,181,1|dfd8g0,86,183,0|dp3b7z,86,183,0|dp3b80,84,181,1|dyg9rz,84,181,1|dyg9s0,86,183,0|e7tdvz,86,183,0|e7tdw0,84,181,1|eh6cfz,84,181,1|eh6cg0,86,183,0|eqjgjz,86,183,0|eqjgk0,84,181,1|ezwf3z,84,181,1|ezwf40,86,183,0|gcgsrz,86,183,0|gcgss0,84,181,1|gkdwnz,84,181,1|gkdwo0,86,183,0|gtr0rz,86,183,0|gtr0s0,84,181,1|h33zbz,84,181,1|h33zc0,86,183,0|hch3fz,86,183,0|hch3g0,84,181,1|hlu1zz,84,181,1|hlu200,86,183,0|hv763z,86,183,0|hv7640,84,181,1|i4k4nz,84,181,1|i4k4o0,86,183,0|idx8rz,86,183,0|idx8s0,84,181,1|ina7bz,84,181,1|ina7c0,86,183,0|iwnbfz,86,183,0|iwnbg0,84,181,1|j6d8nz,84,181,1|j6d8o0,86,183,0|nlvwrz,86,183,0|nlvws0,84,181,1|nv8prz,84,181,1|nv8ps0,86,183,0|o4lzfz,86,183,0|o4lzg0,84,181,1|odysfz,84,181,1|odysg0,86,183,0|NaN,86,183,0",
        "Asia/Irkutsk|,0,236,0|-1ayylz6,0,236,0|-1ayylz5,115,236,0|-q28gn6,115,236,0|-q28gn5,86,183,0|-kmrfg1,86,183,0|-kmrfg0,84,181,0|5vasfz,84,181,0|5vasg0,105,216,1|64plnz,105,216,1|64plo0,84,181,0|6e2prz,84,181,0|6e2ps0,105,216,1|6nhizz,105,216,1|6nhj00,84,181,0|6wun3z,84,181,0|6wun40,105,216,1|769gbz,105,216,1|769gc0,84,181,0|7fof3z,84,181,0|7fof40,105,216,1|7p1lzz,105,216,1|7p1m00,84,181,0|7yenbz,84,181,0|7yenc0,105,216,1|87ronz,105,216,1|87roo0,84,181,0|8h4pzz,84,181,0|8h4q00,105,216,1|8qhrbz,105,216,1|8qhrc0,84,181,0|8zusnz,84,181,0|8zuso0,105,216,1|997tzz,105,216,1|997u00,84,181,0|9ikvbz,84,181,0|9ikvc0,105,216,1|9rxwnz,105,216,1|9rxwo0,84,181,0|a1axzz,84,181,0|a1ay00,105,216,1|aanzbz,105,216,1|aanzc0,84,181,0|ak10nz,84,181,0|ak10o0,105,216,1|atr0nz,105,216,1|atr0o0,84,181,0|b341zz,84,181,0|b34200,84,181,1|bch63z,84,181,1|bch640,86,183,0|bi8krz,86,183,0|bi8ks0,84,181,0|blu4nz,84,181,0|blu4o0,105,216,1|bv75zz,105,216,1|bv7600,84,181,0|c4k7bz,84,181,0|c4k7c0,105,216,1|cdx8nz,105,216,1|cdx8o0,84,181,0|cna9zz,84,181,0|cnaa00,105,216,1|cwnbbz,105,216,1|cwnbc0,84,181,0|d60cnz,84,181,0|d60co0,105,216,1|dfddzz,105,216,1|dfde00,84,181,0|dp3dzz,84,181,0|dp3e00,105,216,1|dzw9zz,105,216,1|dzwa00,84,181,0|e7tgnz,84,181,0|e7tgo0,105,216,1|eimcnz,105,216,1|eimco0,84,181,0|eqjjbz,84,181,0|eqjjc0,105,216,1|f1cfbz,105,216,1|f1cfc0,84,181,0|f99lzz,84,181,0|f99m00,105,216,1|fkfgnz,105,216,1|fkfgo0,84,181,0|frzonz,84,181,0|frzoo0,105,216,1|g35jbz,105,216,1|g35jc0,84,181,0|gaprbz,84,181,0|gaprc0,105,216,1|glvlzz,105,216,1|glvm00,84,181,0|gtssnz,84,181,0|gtsso0,105,216,1|h4lonz,105,216,1|h4loo0,84,181,0|hcivbz,84,181,0|hcivc0,105,216,1|hnbrbz,105,216,1|hnbrc0,84,181,0|hv8xzz,84,181,0|hv8y00,105,216,1|i6esnz,105,216,1|i6eso0,84,181,0|idz0nz,84,181,0|idz0o0,105,216,1|ip4vbz,105,216,1|ip4vc0,84,181,0|iwp3bz,84,181,0|iwp3c0,105,216,1|j7uxzz,105,216,1|j7uy00,84,181,0|jff5zz,84,181,0|jff600,105,216,1|jql0nz,105,216,1|jql0o0,84,181,0|jyi7bz,84,181,0|jyi7c0,105,216,1|k9b3bz,105,216,1|k9b3c0,84,181,0|kh89zz,84,181,0|kh8a00,105,216,1|ks15zz,105,216,1|ks1600,84,181,0|kzycnz,84,181,0|kzyco0,105,216,1|lb47bz,105,216,1|lb47c0,84,181,0|liofbz,84,181,0|liofc0,105,216,0|ne0f7z,105,216,0|ne0f80,84,181,0|NaN,84,181,0",
        "Asia/Jakarta|,0,237,0|-1hftyg1,0,237,0|-1hftyg0,53,237,0|-o0bdpd,53,237,0|-o0bdpc,116,238,0|-jebgdd,116,238,0|-jebgdc,103,214,0|-ehxgu1,103,214,0|-ehxgu0,105,216,0|-co37o1,105,216,0|-co37o0,103,214,0|-bb5zi1,103,214,0|-bb5zi0,84,181,0|-a9m681,84,181,0|-a9m680,103,214,0|-34ru61,103,214,0|-34ru60,117,183,0|NaN,117,183,0",
        "Asia/Jayapura|,0,239,0|-jebm21,0,239,0|-jebm20,105,216,0|-d7zvo1,105,216,0|-d7zvo0,118,240,0|-34rzq1,118,240,0|-34rzq0,119,216,0|NaN,119,216,0",
        "Asia/Jerusalem|,0,241,0|-1ayy96v,0,241,0|-1ayy96u,120,242,0|-r50eih,120,242,0|-r50eig,108,9,0|-ffv401,108,9,0|-ffv400,109,4,1|-f9l6o1,109,4,1|-f9l6o0,108,9,0|-f765c1,108,9,0|-f765c0,109,4,1|-e6fxc1,109,4,1|-e6fxc0,108,9,0|-dyoao1,108,9,0|-dyoao0,109,4,1|-dno001,109,4,1|-dno000,108,9,0|-dfuio1,108,9,0|-dfuio0,109,4,1|-d4u801,109,4,1|-d4u800,108,9,0|-cwatc1,108,9,0|-cwatc0,109,4,1|-cm2ao1,109,4,1|-cm2ao0,108,9,0|-cdiw01,108,9,0|-cdiw00,109,4,1|-c3adc1,109,4,1|-c3adc0,108,9,0|-ba0o01,108,9,0|-ba0o00,121,201,1|-b4tmo1,121,201,1|-b4tmo0,109,4,1|-b1oo01,109,4,1|-b1oo00,108,9,0|-asdhc1,108,9,0|-asdhc0,109,4,1|-aiwqo1,109,4,1|-aiwqo0,108,9,0|-aadc01,108,9,0|-aadc00,109,4,1|-a2juo1,109,4,1|-a2juo0,108,9,0|-9sd6o1,108,9,0|-9sd6o0,109,4,1|-9gudc1,109,4,1|-9gudc0,108,9,0|-98k801,108,9,0|-98k800,109,4,1|-8z76o1,109,4,1|-8z76o0,108,9,0|-8q7401,108,9,0|-8q7400,109,4,1|-8i9xc1,109,4,1|-8i9xc0,108,9,0|-848dc1,108,9,0|-848dc0,109,4,1|-7zjuo1,109,4,1|-7zjuo0,108,9,0|-7liao1,108,9,0|-7liao0,109,4,1|-7gts01,109,4,1|-7gts00,108,9,0|-7356o1,108,9,0|-7356o0,109,4,1|-6x0tc1,109,4,1|-6x0tc0,108,9,0|-6m7xc1,108,9,0|-6m7xc0,109,4,1|-6enpc1,109,4,1|-6enpc0,108,9,0|2crp3z,108,9,0|2crp40,109,4,1|2ht3nz,109,4,1|2ht3o0,108,9,0|2rj6fz,108,9,0|2rj6g0,109,4,1|2ydebz,109,4,1|2ydec0,108,9,0|5iwyfz,108,9,0|5iwyg0,109,4,1|5l2qfz,109,4,1|5l2qg0,108,9,0|7hhp3z,108,9,0|7hhp40,109,4,1|7n93rz,109,4,1|7n93s0,108,9,0|7z4vrz,108,9,0|7z4vs0,109,4,1|86c2bz,109,4,1|86c2c0,108,9,0|8jnrrz,108,9,0|8jnrs0,109,4,1|8pf3nz,109,4,1|8pf3o0,108,9,0|90ql3z,108,9,0|90ql40,109,4,1|98i4zz,109,4,1|98i500,108,9,0|9jb3rz,108,9,0|9jb3s0,109,4,1|9qv8zz,109,4,1|9qv900,108,9,0|a342fz,108,9,0|a342g0,109,4,1|a9lbnz,109,4,1|a9lbo0,108,9,0|ak1brz,108,9,0|ak1bs0,109,4,1|aryfnz,109,4,1|aryfo0,108,9,0|b2refz,108,9,0|b2reg0,109,4,1|bb1gzz,109,4,1|bb1h00,108,9,0|blufrz,108,9,0|blufs0,109,4,1|bu4ibz,109,4,1|bu4ic0,108,9,0|c4trrz,108,9,0|c4trs0,109,4,1|ccukzz,109,4,1|ccul00,108,9,0|cnjufz,108,9,0|cnjug0,109,4,1|cv7ozz,109,4,1|cv7p00,108,9,0|d69x3z,108,9,0|d69x40,109,4,1|deaqbz,109,4,1|deaqc0,108,9,0|doa2fz,108,9,0|doa2g0,109,4,1|dxskzz,109,4,1|dxsl00,108,9,0|e7d3rz,108,9,0|e7d3s0,109,4,1|eggszz,109,4,1|eggt00,108,9,0|eq36fz,108,9,0|eq36g0,109,4,1|eytwzz,109,4,1|eytx00,108,9,0|f9jbzz,108,9,0|f9jc00,109,4,1|fhgfvz,109,4,1|fhgfw0,108,9,0|fszbzz,108,9,0|fszc00,109,4,1|g1z93z,109,4,1|g1z940,108,9,0|gbhx7z,108,9,0|gbhx80,109,4,1|gk4yfz,109,4,1|gk4yg0,108,9,0|gtph7z,108,9,0|gtph80,109,4,1|h3kyfz,109,4,1|h3kyg0,108,9,0|hcfjvz,108,9,0|hcfjw0,109,4,1|hm5h3z,109,4,1|hm5h40,108,9,0|hvrujz,108,9,0|hvruk0,109,4,1|i4evrz,109,4,1|i4evs0,108,9,0|ie8qnz,108,9,0|ie8qo0,109,4,1|io2d7z,109,4,1|io2d80,108,9,0|iwytbz,108,9,0|iwytc0,109,4,1|j6fh7z,109,4,1|j6fh80,108,9,0|jfovzz,108,9,0|jfow00,109,4,1|jofmjz,109,4,1|jofmk0,108,9,0|jyeynz,108,9,0|jyeyo0,109,4,1|k88l7z,109,4,1|k88l80,108,9,0|kh51bz,108,9,0|kh51c0,109,4,1|kqlp7z,109,4,1|kqlp80,108,9,0|kzv3zz,108,9,0|kzv400,109,4,1|l8lujz,109,4,1|l8luk0,108,9,0|liy5bz,108,9,0|liy5c0,109,4,1|lset7z,109,4,1|lset80,108,9,0|m1o7zz,108,9,0|m1o800,109,4,1|marx7z,109,4,1|marx80,108,9,0|mkeanz,108,9,0|mkeao0,109,4,1|mvat7z,109,4,1|mvat80,108,9,0|n34dbz,108,9,0|n34dc0,109,4,1|ne0vvz,109,4,1|ne0vw0,108,9,0|nlufzz,108,9,0|nlug00,109,4,1|nwqyjz,109,4,1|nwqyk0,108,9,0|o4kinz,108,9,0|o4kio0,109,4,1|oftzvz,109,4,1|oftzw0,108,9,0|onalbz,108,9,0|onalc0,109,4,1|oyk2jz,109,4,1|oyk2k0,108,9,0|p60nzz,108,9,0|p60o00,109,4,1|pha57z,109,4,1|pha580,108,9,0|pp3pbz,108,9,0|pp3pc0,109,4,1|q007vz,109,4,1|q007w0,108,9,0|q7trzz,108,9,0|q7ts00,109,4,1|qiqajz,109,4,1|qiqak0,108,9,0|qqjunz,108,9,0|qqjuo0,109,4,1|r1tbvz,109,4,1|r1tbw0,108,9,0|r99xbz,108,9,0|r99xc0,109,4,1|rkjejz,109,4,1|rkjek0,108,9,0|rrzzzz,108,9,0|rs0000,109,4,1|s39h7z,109,4,1|s39h80,108,9,0|sb31bz,108,9,0|sb31c0,109,4,1|slzjvz,109,4,1|slzjw0,108,9,0|stt3zz,108,9,0|stt400,109,4,1|t4pmjz,109,4,1|t4pmk0,108,9,0|tcj6nz,108,9,0|tcj6o0,109,4,1|tnfp7z,109,4,1|tnfp80,108,9,0|tv99bz,108,9,0|tv99c0,109,4,1|u6iqjz,109,4,1|u6iqk0,108,9,0|udzbzz,108,9,0|udzc00,109,4,1|up8t7z,109,4,1|up8t80,108,9,0|uwpenz,108,9,0|uwpeo0,109,4,1|v7yvvz,109,4,1|v7yvw0,108,9,0|vfsfzz,108,9,0|vfsg00,109,4,1|vqoyjz,109,4,1|vqoyk0,108,9,0|vyiinz,108,9,0|vyiio0,109,4,1|w9f17z,109,4,1|w9f180,108,9,0|wh8lbz,108,9,0|wh8lc0,109,4,1|wsi2jz,109,4,1|wsi2k0,108,9,0|wzynzz,108,9,0|wzyo00,109,4,1|xb857z,109,4,1|xb8580,108,9,0|xioqnz,108,9,0|xioqo0,109,4,1|xty7vz,109,4,1|xty7w0,108,9,0|y1etbz,108,9,0|y1etc0,109,4,1|ycoajz,109,4,1|ycoak0,108,9,0|ykhunz,108,9,0|ykhuo0,109,4,1|yved7z,109,4,1|yved80,108,9,0|z37xbz,108,9,0|z37xc0,109,4,1|ze4fvz,109,4,1|ze4fw0,108,9,0|zlxzzz,108,9,0|zly000,109,4,1|zx7h7z,109,4,1|zx7h80,108,9,0|104o2nz,108,9,0|104o2o0,109,4,1|10fxjvz,109,4,1|10fxjw0,108,9,0|10ne5bz,108,9,0|10ne5c0,109,4,1|10ynmjz,109,4,1|10ynmk0,108,9,0|116h6nz,108,9,0|116h6o0,109,4,1|11hdp7z,109,4,1|11hdp80,108,9,0|11p79bz,108,9,0|11p79c0,109,4,1|1203rvz,109,4,1|1203rw0,108,9,0|127xbzz,108,9,0|127xc00,109,4,1|12itujz,109,4,1|12ituk0,108,9,0|12qnenz,108,9,0|12qneo0,109,4,1|131wvvz,109,4,1|131wvw0,108,9,0|139dhbz,108,9,0|139dhc0,109,4,1|13kmyjz,109,4,1|13kmyk0,108,9,0|13s3jzz,108,9,0|13s3k00,109,4,1|143d17z,109,4,1|143d180,108,9,0|14b6lbz,108,9,0|14b6lc0,109,4,1|14m33vz,109,4,1|14m33w0,108,9,0|14twnzz,108,9,0|14two00,109,4,1|154t6jz,109,4,1|154t6k0,108,9,0|15cmqnz,108,9,0|15cmqo0,109,4,1|15nw7vz,109,4,1|15nw7w0,108,9,0|15vctbz,108,9,0|15vctc0,109,4,1|166majz,109,4,1|166mak0,108,9,0|16e2vzz,108,9,0|16e2w00,109,4,1|16pcd7z,109,4,1|16pcd80,108,9,0|16x5xbz,108,9,0|16x5xc0,109,4,1|1782fvz,109,4,1|1782fw0,108,9,0|17fvzzz,108,9,0|17fw000,109,4,1|17qsijz,109,4,1|17qsik0,108,9,0|17ym2nz,108,9,0|17ym2o0,109,4,1|189il7z,109,4,1|189il80,108,9,0|18hc5bz,108,9,0|18hc5c0,109,4,1|18slmjz,109,4,1|18slmk0,108,9,0|19027zz,108,9,0|1902800,109,4,1|19bbp7z,109,4,1|19bbp80,108,9,0|19isanz,108,9,0|19isao0,109,4,1|19u1rvz,109,4,1|19u1rw0,108,9,0|1a1vbzz,108,9,0|1a1vc00,109,4,1|1acrujz,109,4,1|1acruk0,108,9,0|1aklenz,108,9,0|1akleo0,109,4,1|1avhx7z,109,4,1|1avhx80,108,9,0|1b3bhbz,108,9,0|1b3bhc0,109,4,1|1bekyjz,109,4,1|1bekyk0,108,9,0|1bm1jzz,108,9,0|1bm1k00,109,4,1|1bxb17z,109,4,1|1bxb180,108,9,0|1c4rmnz,108,9,0|1c4rmo0,109,4,1|1cg13vz,109,4,1|1cg13w0,108,9,0|1cnhpbz,108,9,0|1cnhpc0,109,4,1|1cyr6jz,109,4,1|1cyr6k0,108,9,0|1d6kqnz,108,9,0|1d6kqo0,109,4,1|1dhh97z,109,4,1|1dhh980,108,9,0|1dpatbz,108,9,0|1dpatc0,109,4,1|1e07bvz,109,4,1|1e07bw0,108,9,0|1e80vzz,108,9,0|1e80w00,109,4,1|1ejad7z,109,4,1|1ejad80,108,9,0|1eqqynz,108,9,0|1eqqyo0,109,4,1|1f20fvz,109,4,1|1f20fw0,108,9,0|1f9h1bz,108,9,0|1f9h1c0,109,4,1|1fkqijz,109,4,1|1fkqik0,108,9,0|1fsk2nz,108,9,0|1fsk2o0,109,4,1|1g3gl7z,109,4,1|1g3gl80,108,9,0|1gba5bz,108,9,0|1gba5c0,109,4,1|1gm6nvz,109,4,1|1gm6nw0,108,9,0|1gu07zz,108,9,0|1gu0800,109,4,1|1h4wqjz,109,4,1|1h4wqk0,108,9,0|1hcqanz,108,9,0|1hcqao0,109,4,1|1hnzrvz,109,4,1|1hnzrw0,108,9,0|1hvgdbz,108,9,0|1hvgdc0,109,4,1|1i6pujz,109,4,1|1i6puk0,108,9,0|1ie6fzz,108,9,0|1ie6g00,109,4,1|1ipfx7z,109,4,1|1ipfx80,108,9,0|1ix9hbz,108,9,0|1ix9hc0,109,4,1|1j85zvz,109,4,1|1j85zw0,108,9,0|1jfzjzz,108,9,0|1jfzk00,109,4,1|1jqw2jz,109,4,1|1jqw2k0,108,9,0|1jypmnz,108,9,0|1jypmo0,109,4,1|1k9z3vz,109,4,1|1k9z3w0,108,9,0|1khfpbz,108,9,0|1khfpc0,109,4,1|1ksp6jz,109,4,1|1ksp6k0,108,9,0|1l05rzz,108,9,0|1l05s00,109,4,1|1lbf97z,109,4,1|1lbf980,108,9,0|1lj8tbz,108,9,0|1lj8tc0,109,4,1|1lu5bvz,109,4,1|1lu5bw0,108,9,0|1m1yvzz,108,9,0|1m1yw00,109,4,1|1mcvejz,109,4,1|1mcvek0,108,9,0|1mkoynz,108,9,0|1mkoyo0,109,4,1|1mvlh7z,109,4,1|1mvlh80,108,9,0|1n3f1bz,108,9,0|1n3f1c0,109,4,1|1neoijz,109,4,1|1neoik0,108,9,0|1nm53zz,108,9,0|1nm5400,109,4,1|1nxel7z,109,4,1|1nxel80,108,9,0|1o4v6nz,108,9,0|1o4v6o0,109,4,1|1og4nvz,109,4,1|1og4nw0,108,9,0|1ony7zz,108,9,0|1ony800,109,4,1|1oyuqjz,109,4,1|1oyuqk0,108,9,0|1p6oanz,108,9,0|1p6oao0,109,4,1|1phkt7z,109,4,1|1phkt80,108,9,0|1ppedbz,108,9,0|1ppedc0,109,4,1|1q0nujz,109,4,1|1q0nuk0,108,9,0|1q84fzz,108,9,0|1q84g00,109,4,1|1qjdx7z,109,4,1|1qjdx80,108,9,0|1qquinz,108,9,0|1qquio0,109,4,1|1r23zvz,109,4,1|1r23zw0,108,9,0|1r9klbz,108,9,0|1r9klc0,109,4,1|1rku2jz,109,4,1|1rku2k0,108,9,0|1rsnmnz,108,9,0|1rsnmo0,109,4,1|1s3k57z,109,4,1|1s3k580,108,9,0|1sbdpbz,108,9,0|1sbdpc0,109,4,1|1sma7vz,109,4,1|1sma7w0,108,9,0|1su3rzz,108,9,0|1su3s00,109,4,1|1t5d97z,109,4,1|1t5d980,108,9,0|1tctunz,108,9,0|1tctuo0,109,4,1|1to3bvz,109,4,1|1to3bw0,108,9,0|1tvjxbz,108,9,0|1tvjxc0,109,4,1|1u6tejz,109,4,1|1u6tek0,108,9,0|1uemynz,108,9,0|1uemyo0,109,4,1|1upjh7z,109,4,1|1upjh80,108,9,0|1uxd1bz,108,9,0|1uxd1c0,109,4,1|1v89jvz,109,4,1|1v89jw0,108,9,0|1vg33zz,108,9,0|1vg3400,109,4,1|1vqzmjz,109,4,1|1vqzmk0,108,9,0|NaN,108,9,0",
        "Asia/Kabul|,0,243,0|-15r1m5d,0,243,0|-15r1m5c,102,201,0|-d1pkg1,102,201,0|-d1pkg0,122,244,0|NaN,122,244,0",
        "Asia/Kamchatka|,0,245,0|-olrupp,0,245,0|-olrupo,85,182,0|-kmrqk1,85,182,0|-kmrqk0,99,192,0|5vahbz,99,192,0|5vahc0,100,193,1|64pajz,100,193,1|64pak0,99,192,0|6e2enz,99,192,0|6e2eo0,100,193,1|6nh7vz,100,193,1|6nh7w0,99,192,0|6wubzz,99,192,0|6wuc00,100,193,1|76957z,100,193,1|769580,99,192,0|7fo3zz,99,192,0|7fo400,100,193,1|7p1avz,100,193,1|7p1aw0,99,192,0|7yec7z,99,192,0|7yec80,100,193,1|87rdjz,100,193,1|87rdk0,99,192,0|8h4evz,99,192,0|8h4ew0,100,193,1|8qhg7z,100,193,1|8qhg80,99,192,0|8zuhjz,99,192,0|8zuhk0,100,193,1|997ivz,100,193,1|997iw0,99,192,0|9ikk7z,99,192,0|9ikk80,100,193,1|9rxljz,100,193,1|9rxlk0,99,192,0|a1amvz,99,192,0|a1amw0,100,193,1|aano7z,100,193,1|aano80,99,192,0|ak0pjz,99,192,0|ak0pk0,100,193,1|atqpjz,100,193,1|atqpk0,99,192,0|b33qvz,99,192,0|b33qw0,99,192,1|bcguzz,99,192,1|bcgv00,85,182,0|bi89nz,85,182,0|bi89o0,99,192,0|blttjz,99,192,0|blttk0,100,193,1|bv6uvz,100,193,1|bv6uw0,99,192,0|c4jw7z,99,192,0|c4jw80,100,193,1|cdwxjz,100,193,1|cdwxk0,99,192,0|cn9yvz,99,192,0|cn9yw0,100,193,1|cwn07z,100,193,1|cwn080,99,192,0|d601jz,99,192,0|d601k0,100,193,1|dfd2vz,100,193,1|dfd2w0,99,192,0|dp32vz,99,192,0|dp32w0,100,193,1|dzvyvz,100,193,1|dzvyw0,99,192,0|e7t5jz,99,192,0|e7t5k0,100,193,1|eim1jz,100,193,1|eim1k0,99,192,0|eqj87z,99,192,0|eqj880,100,193,1|f1c47z,100,193,1|f1c480,99,192,0|f99avz,99,192,0|f99aw0,100,193,1|fkf5jz,100,193,1|fkf5k0,99,192,0|frzdjz,99,192,0|frzdk0,100,193,1|g3587z,100,193,1|g35880,99,192,0|gapg7z,99,192,0|gapg80,100,193,1|glvavz,100,193,1|glvaw0,99,192,0|gtshjz,99,192,0|gtshk0,100,193,1|h4ldjz,100,193,1|h4ldk0,99,192,0|hcik7z,99,192,0|hcik80,100,193,1|hnbg7z,100,193,1|hnbg80,99,192,0|hv8mvz,99,192,0|hv8mw0,100,193,1|i6ehjz,100,193,1|i6ehk0,99,192,0|idypjz,99,192,0|idypk0,100,193,1|ip4k7z,100,193,1|ip4k80,99,192,0|iwos7z,99,192,0|iwos80,100,193,1|j7umvz,100,193,1|j7umw0,99,192,0|jfeuvz,99,192,0|jfeuw0,100,193,1|jqkpjz,100,193,1|jqkpk0,99,192,0|jyhw7z,99,192,0|jyhw80,100,193,1|k9as7z,100,193,1|k9as80,99,192,0|kh7yvz,99,192,0|kh7yw0,100,193,1|ks0uvz,100,193,1|ks0uw0,99,192,0|kzy1jz,99,192,0|kzy1k0,99,192,1|lb3yzz,99,192,1|lb3z00,85,182,0|lio6zz,85,182,0|lio700,99,192,0|NaN,99,192,0",
        "Asia/Karachi|,0,246,0|-wvpb31,0,246,0|-wvpb30,106,221,0|-e9lba1,106,221,0|-e9lba0,107,222,1|-cmya21,107,222,1|-cmya20,106,221,0|-9j0km1,106,221,0|-9j0km0,87,184,0|n33fz,87,184,0|n33g0,123,184,0|gu5u3z,123,184,0|gu5u40,124,188,1|h3isnz,124,188,1|h3iso0,123,184,0|k1qy3z,123,184,0|k1qy40,124,188,1|k9m7bz,124,188,1|k9m7c0,123,184,0|ki3u3z,123,184,0|ki3u40,124,188,1|kse4nz,124,188,1|kse4o0,123,184,0|NaN,123,184,0",
        "Asia/Kathmandu|,0,247,0|-q3gt4t,0,247,0|-q3gt4s,106,221,0|8clspz,106,221,0|8clsq0,125,248,0|NaN,125,248,0",
        "Asia/Khandyga|,0,249,0|-q4cjrq,0,249,0|-q4cjrp,84,181,0|-kmri81,84,181,0|-kmri80,105,216,0|5vapnz,105,216,0|5vapo0,89,187,1|64pivz,89,187,1|64piw0,105,216,0|6e2mzz,105,216,0|6e2n00,89,187,1|6nhg7z,89,187,1|6nhg80,105,216,0|6wukbz,105,216,0|6wukc0,89,187,1|769djz,89,187,1|769dk0,105,216,0|7focbz,105,216,0|7focc0,89,187,1|7p1j7z,89,187,1|7p1j80,105,216,0|7yekjz,105,216,0|7yekk0,89,187,1|87rlvz,89,187,1|87rlw0,105,216,0|8h4n7z,105,216,0|8h4n80,89,187,1|8qhojz,89,187,1|8qhok0,105,216,0|8zupvz,105,216,0|8zupw0,89,187,1|997r7z,89,187,1|997r80,105,216,0|9iksjz,105,216,0|9iksk0,89,187,1|9rxtvz,89,187,1|9rxtw0,105,216,0|a1av7z,105,216,0|a1av80,89,187,1|aanwjz,89,187,1|aanwk0,105,216,0|ak0xvz,105,216,0|ak0xw0,89,187,1|atqxvz,89,187,1|atqxw0,105,216,0|b33z7z,105,216,0|b33z80,105,216,1|bch3bz,105,216,1|bch3c0,84,181,0|bi8hzz,84,181,0|bi8i00,105,216,0|blu1vz,105,216,0|blu1w0,89,187,1|bv737z,89,187,1|bv7380,105,216,0|c4k4jz,105,216,0|c4k4k0,89,187,1|cdx5vz,89,187,1|cdx5w0,105,216,0|cna77z,105,216,0|cna780,89,187,1|cwn8jz,89,187,1|cwn8k0,105,216,0|d609vz,105,216,0|d609w0,89,187,1|dfdb7z,89,187,1|dfdb80,105,216,0|dp3b7z,105,216,0|dp3b80,89,187,1|dzw77z,89,187,1|dzw780,105,216,0|e7tdvz,105,216,0|e7tdw0,89,187,1|eim9vz,89,187,1|eim9w0,105,216,0|eqjgjz,105,216,0|eqjgk0,89,187,1|f1ccjz,89,187,1|f1cck0,105,216,0|f99j7z,105,216,0|f99j80,89,187,1|fkfdvz,89,187,1|fkfdw0,105,216,0|frzlvz,105,216,0|frzlw0,89,187,1|g35gjz,89,187,1|g35gk0,105,216,0|gapojz,105,216,0|gapok0,89,187,1|glvj7z,89,187,1|glvj80,105,216,0|gtspvz,105,216,0|gtspw0,89,187,1|h4llvz,89,187,1|h4llw0,105,216,0|hcisjz,105,216,0|hcisk0,89,187,1|hnbojz,89,187,1|hnbok0,105,216,0|hqrlnz,105,216,0|hqrlo0,89,187,0|hv8sfz,89,187,0|hv8sg0,85,182,1|i6en3z,85,182,1|i6en40,89,187,0|idyv3z,89,187,0|idyv40,85,182,1|ip4prz,85,182,1|ip4ps0,89,187,0|iwoxrz,89,187,0|iwoxs0,85,182,1|j7usfz,85,182,1|j7usg0,89,187,0|jff0fz,89,187,0|jff0g0,85,182,1|jqkv3z,85,182,1|jqkv40,89,187,0|jyi1rz,89,187,0|jyi1s0,85,182,1|k9axrz,85,182,1|k9axs0,89,187,0|kh84fz,89,187,0|kh84g0,85,182,1|ks10fz,85,182,1|ks10g0,89,187,0|kzy73z,89,187,0|kzy740,85,182,1|lb41rz,85,182,1|lb41s0,89,187,0|lio9rz,89,187,0|lio9s0,85,182,0|lreurz,85,182,0|lreus0,89,187,0|ne0cfz,89,187,0|ne0cg0,105,216,0|NaN,105,216,0",
        "Asia/Kolkata|,0,250,0|-1oaa315,0,250,0|-1oaa314,76,225,0|-1g6thox,76,225,0|-1g6thow,20,251,0|-xehavb,20,251,0|-xehava,108,221,0|-eqtom1,108,221,0|-eqtom0,107,222,1|-ef78q1,107,222,1|-ef78q0,108,221,0|-e9lba1,108,221,0|-e9lba0,107,222,1|-cmya21,107,222,1|-cmya20,108,221,0|NaN,108,221,0",
        "Asia/Krasnoyarsk|,0,252,0|-q37l73,0,252,0|-q37l72,92,188,0|-kmrco1,92,188,0|-kmrco0,86,183,0|5vav7z,86,183,0|5vav80,84,181,1|64pofz,84,181,1|64pog0,86,183,0|6e2sjz,86,183,0|6e2sk0,84,181,1|6nhlrz,84,181,1|6nhls0,86,183,0|6wupvz,86,183,0|6wupw0,84,181,1|769j3z,84,181,1|769j40,86,183,0|7fohvz,86,183,0|7fohw0,84,181,1|7p1orz,84,181,1|7p1os0,86,183,0|7yeq3z,86,183,0|7yeq40,84,181,1|87rrfz,84,181,1|87rrg0,86,183,0|8h4srz,86,183,0|8h4ss0,84,181,1|8qhu3z,84,181,1|8qhu40,86,183,0|8zuvfz,86,183,0|8zuvg0,84,181,1|997wrz,84,181,1|997ws0,86,183,0|9iky3z,86,183,0|9iky40,84,181,1|9rxzfz,84,181,1|9rxzg0,86,183,0|a1b0rz,86,183,0|a1b0s0,84,181,1|aao23z,84,181,1|aao240,86,183,0|ak13fz,86,183,0|ak13g0,84,181,1|atr3fz,84,181,1|atr3g0,86,183,0|b344rz,86,183,0|b344s0,86,183,1|bch8vz,86,183,1|bch8w0,92,188,0|bi8njz,92,188,0|bi8nk0,86,183,0|blu7fz,86,183,0|blu7g0,84,181,1|bv78rz,84,181,1|bv78s0,86,183,0|c4ka3z,86,183,0|c4ka40,84,181,1|cdxbfz,84,181,1|cdxbg0,86,183,0|cnacrz,86,183,0|cnacs0,84,181,1|cwne3z,84,181,1|cwne40,86,183,0|d60ffz,86,183,0|d60fg0,84,181,1|dfdgrz,84,181,1|dfdgs0,86,183,0|dp3grz,86,183,0|dp3gs0,84,181,1|dzwcrz,84,181,1|dzwcs0,86,183,0|e7tjfz,86,183,0|e7tjg0,84,181,1|eimffz,84,181,1|eimfg0,86,183,0|eqjm3z,86,183,0|eqjm40,84,181,1|f1ci3z,84,181,1|f1ci40,86,183,0|f99orz,86,183,0|f99os0,84,181,1|fkfjfz,84,181,1|fkfjg0,86,183,0|frzrfz,86,183,0|frzrg0,84,181,1|g35m3z,84,181,1|g35m40,86,183,0|gapu3z,86,183,0|gapu40,84,181,1|glvorz,84,181,1|glvos0,86,183,0|gtsvfz,86,183,0|gtsvg0,84,181,1|h4lrfz,84,181,1|h4lrg0,86,183,0|hciy3z,86,183,0|hciy40,84,181,1|hnbu3z,84,181,1|hnbu40,86,183,0|hv90rz,86,183,0|hv90s0,84,181,1|i6evfz,84,181,1|i6evg0,86,183,0|idz3fz,86,183,0|idz3g0,84,181,1|ip4y3z,84,181,1|ip4y40,86,183,0|iwp63z,86,183,0|iwp640,84,181,1|j7v0rz,84,181,1|j7v0s0,86,183,0|jff8rz,86,183,0|jff8s0,84,181,1|jql3fz,84,181,1|jql3g0,86,183,0|jyia3z,86,183,0|jyia40,84,181,1|k9b63z,84,181,1|k9b640,86,183,0|kh8crz,86,183,0|kh8cs0,84,181,1|ks18rz,84,181,1|ks18s0,86,183,0|kzyffz,86,183,0|kzyfg0,84,181,1|lb4a3z,84,181,1|lb4a40,86,183,0|lioi3z,86,183,0|lioi40,84,181,0|ne0hzz,84,181,0|ne0i00,86,183,0|NaN,86,183,0",
        "Asia/Kuala_Lumpur|,0,253,0|-100ewke,0,253,0|-100ewkd,81,253,0|-xphpwe,81,253,0|-xphpwd,86,183,0|-jb6gs1,86,183,0|-jb6gs0,116,238,1|-hquppd,116,238,1|-hquppc,116,238,0|-esddpd,116,238,0|-esddpc,103,214,0|-ejqa61,103,214,0|-ejqa60,105,216,0|-conl01,105,216,0|-conl00,103,214,0|69g1rz,103,214,0|69g1s0,84,181,0|NaN,84,181,0",
        "Asia/Kuching|,0,213,0|-mvof3l,0,213,0|-mvof3k,103,214,0|-jb6i61,103,214,0|-jb6i60,84,181,0|-hwgm81,84,181,0|-hwgm80,104,215,1|-hrs4hd,104,215,1|-hrs4hc,84,181,0|-hdmu81,84,181,0|-hdmu80,104,215,1|-h8ychd,104,215,1|-h8ychc,84,181,0|-guuww1,84,181,0|-guuww0,104,215,1|-gq6f5d,104,215,1|-gq6f5c,84,181,0|-gc2zk1,84,181,0|-gc2zk0,104,215,1|-g7ehtd,104,215,1|-g7ehtc,84,181,0|-ftb281,84,181,0|-ftb280,104,215,1|-fomkhd,104,215,1|-fomkhc,84,181,0|-faha81,84,181,0|-faha80,104,215,1|-f5sshd,104,215,1|-f5sshc,84,181,0|-erpcw1,84,181,0|-erpcw0,104,215,1|-en0v5d,104,215,1|-en0v5c,84,181,0|-ejqbk1,84,181,0|-ejqbk0,105,216,0|-conl01,105,216,0|-conl00,84,181,0|NaN,84,181,0",
        "Asia/Kuwait|,0,194,0|-bwgbbh,0,194,0|-bwgbbg,96,4,0|NaN,96,4,0",
        "Asia/Macau|,0,254,0|-y0i2cz,0,254,0|-y0i2cy,45,181,0|-emm3o1,45,181,0|-emm3o0,105,216,0|-efxfs1,105,216,0|-efxfs0,89,187,1|-e5lak1,89,187,1|-e5lak0,105,216,0|-dx5ig1,105,216,0|-dx5ig0,89,187,1|-dpa981,89,187,1|-dpa980,105,216,0|-cnoec1,105,216,0|-cnoec0,45,181,0|-ccrt01,45,181,0|-ccrt00,47,216,1|-c4wh01,47,216,1|-c4wh00,45,181,0|-buk901,45,181,0|-buk900,47,216,1|-bizl01,47,216,1|-bizl00,45,181,0|-bb2ec1,45,181,0|-bb2ec0,47,216,1|-b1pd01,47,216,1|-b1pd00,45,181,0|-atu101,45,181,0|-atu100,47,216,1|-aj1501,47,216,1|-aj1500,45,181,0|-ab3yc1,45,181,0|-ab3yc0,47,216,1|-a0b2c1,47,216,1|-a0b2c0,45,181,0|-9sdvo1,45,181,0|-9sdvo0,47,216,1|-9hj501,47,216,1|-9hj500,45,181,0|-99auc1,45,181,0|-99auc0,47,216,1|-8yhyc1,47,216,1|-8yhyc0,45,181,0|-8qkro1,45,181,0|-8qkro0,47,216,1|-8frvo1,47,216,1|-8frvo0,45,181,0|-88kmc1,45,181,0|-88kmc0,47,216,1|-7x1t01,47,216,1|-7x1t00,45,181,0|-7pujo1,45,181,0|-7pujo0,47,216,1|-7dyro1,47,216,1|-7dyro0,45,181,0|-774h01,45,181,0|-774h00,47,216,1|-6v8fa1,47,216,1|-6v8fa0,45,181,0|-6o1361,45,181,0|-6o1360,47,216,1|-6cicm1,47,216,1|-6cicm0,45,181,0|-65b0i1,45,181,0|-65b0i0,47,216,1|-5ts9y1,47,216,1|-5ts9y0,45,181,0|-5mkxu1,45,181,0|-5mkxu0,47,216,1|-5b27a1,47,216,1|-5b27a0,45,181,0|-53uv61,45,181,0|-53uv60,47,216,1|-4rz5y1,47,216,1|-4rz5y0,45,181,0|-4l4si1,45,181,0|-4l4si0,47,216,1|-4993a1,47,216,1|-4993a0,45,181,0|-42epu1,45,181,0|-42epu0,47,216,1|-3qj0m1,47,216,1|-3qj0m0,45,181,0|-3jboi1,45,181,0|-3jboi0,47,216,1|-37sxy1,47,216,1|-37sxy0,45,181,0|-30llu1,45,181,0|-30llu0,47,216,1|-2p2va1,47,216,1|-2p2va0,45,181,0|-2gfoi1,45,181,0|-2gfoi0,47,216,1|-272sq1,47,216,1|-272sq0,45,181,0|-1xplu1,45,181,0|-1xplu0,47,216,1|-1ocq21,47,216,1|-1ocq20,45,181,0|-1ezj61,45,181,0|-1ezj60,47,216,1|-159ly1,47,216,1|-159ly0,45,181,0|-vwhu1,45,181,0|-vwhu0,47,216,1|-mjja1,47,216,1|-mjja0,45,181,0|-d6f61,45,181,0|-d6f60,47,216,1|-3tgm1,47,216,1|-3tgm0,45,181,0|5jnhz,45,181,0|5jni0,47,216,1|ewm1z,47,216,1|ewm20,45,181,0|o9q5z,45,181,0|o9q60,47,216,1|xmopz,47,216,1|xmoq0,45,181,0|16zstz,45,181,0|16zsu0,47,216,1|1gpq1z,47,216,1|1gpq20,45,181,0|1q2u5z,45,181,0|1q2u60,47,216,1|1zfspz,47,216,1|1zfsq0,45,181,0|231i5z,45,181,0|231i60,47,216,1|2i5vdz,47,216,1|2i5ve0,45,181,0|2rizhz,45,181,0|2rizi0,47,216,1|30vy1z,47,216,1|30vy20,45,181,0|3a925z,45,181,0|3a9260,47,216,1|3jm0pz,47,216,1|3jm0q0,45,181,0|4vv4tz,45,181,0|4vv4u0,47,216,1|5457dz,47,216,1|5457e0,45,181,0|NaN,45,181,0",
        "Asia/Magadan|,0,255,0|-nu1nxd,0,255,0|-nu1nxc,89,187,0|-kmrns1,89,187,0|-kmrns0,85,182,0|5vak3z,85,182,0|5vak40,99,192,1|64pdbz,99,192,1|64pdc0,85,182,0|6e2hfz,85,182,0|6e2hg0,99,192,1|6nhanz,99,192,1|6nhao0,85,182,0|6wuerz,85,182,0|6wues0,99,192,1|7697zz,99,192,1|769800,85,182,0|7fo6rz,85,182,0|7fo6s0,99,192,1|7p1dnz,99,192,1|7p1do0,85,182,0|7yeezz,85,182,0|7yef00,99,192,1|87rgbz,99,192,1|87rgc0,85,182,0|8h4hnz,85,182,0|8h4ho0,99,192,1|8qhizz,99,192,1|8qhj00,85,182,0|8zukbz,85,182,0|8zukc0,99,192,1|997lnz,99,192,1|997lo0,85,182,0|9ikmzz,85,182,0|9ikn00,99,192,1|9rxobz,99,192,1|9rxoc0,85,182,0|a1apnz,85,182,0|a1apo0,99,192,1|aanqzz,99,192,1|aanr00,85,182,0|ak0sbz,85,182,0|ak0sc0,99,192,1|atqsbz,99,192,1|atqsc0,85,182,0|b33tnz,85,182,0|b33to0,85,182,1|bcgxrz,85,182,1|bcgxs0,89,187,0|bi8cfz,89,187,0|bi8cg0,85,182,0|bltwbz,85,182,0|bltwc0,99,192,1|bv6xnz,99,192,1|bv6xo0,85,182,0|c4jyzz,85,182,0|c4jz00,99,192,1|cdx0bz,99,192,1|cdx0c0,85,182,0|cna1nz,85,182,0|cna1o0,99,192,1|cwn2zz,99,192,1|cwn300,85,182,0|d604bz,85,182,0|d604c0,99,192,1|dfd5nz,99,192,1|dfd5o0,85,182,0|dp35nz,85,182,0|dp35o0,99,192,1|dzw1nz,99,192,1|dzw1o0,85,182,0|e7t8bz,85,182,0|e7t8c0,99,192,1|eim4bz,99,192,1|eim4c0,85,182,0|eqjazz,85,182,0|eqjb00,99,192,1|f1c6zz,99,192,1|f1c700,85,182,0|f99dnz,85,182,0|f99do0,99,192,1|fkf8bz,99,192,1|fkf8c0,85,182,0|frzgbz,85,182,0|frzgc0,99,192,1|g35azz,99,192,1|g35b00,85,182,0|gapizz,85,182,0|gapj00,99,192,1|glvdnz,99,192,1|glvdo0,85,182,0|gtskbz,85,182,0|gtskc0,99,192,1|h4lgbz,99,192,1|h4lgc0,85,182,0|hcimzz,85,182,0|hcin00,99,192,1|hnbizz,99,192,1|hnbj00,85,182,0|hv8pnz,85,182,0|hv8po0,99,192,1|i6ekbz,99,192,1|i6ekc0,85,182,0|idysbz,85,182,0|idysc0,99,192,1|ip4mzz,99,192,1|ip4n00,85,182,0|iwouzz,85,182,0|iwov00,99,192,1|j7upnz,99,192,1|j7upo0,85,182,0|jfexnz,85,182,0|jfexo0,99,192,1|jqksbz,99,192,1|jqksc0,85,182,0|jyhyzz,85,182,0|jyhz00,99,192,1|k9auzz,99,192,1|k9av00,85,182,0|kh81nz,85,182,0|kh81o0,99,192,1|ks0xnz,99,192,1|ks0xo0,85,182,0|kzy4bz,85,182,0|kzy4c0,99,192,1|lb3yzz,99,192,1|lb3z00,85,182,0|lio6zz,85,182,0|lio700,99,192,0|ne06vz,99,192,0|ne06w0,89,187,0|o63gfz,89,187,0|o63gg0,85,182,0|NaN,85,182,0",
        "Asia/Makassar|,0,256,0|-q3gzg1,0,256,0|-q3gzg0,20,256,0|-jebi41,20,256,0|-jebi40,84,181,0|-ek3a81,84,181,0|-ek3a80,105,216,0|-co37o1,105,216,0|-co37o0,126,181,0|NaN,126,181,0",
        "Asia/Manila|,0,257,0|-1t8ix2p,0,257,0|-1t8ix2o,0,258,0|-10va3qp,0,258,0|-10va3qo,55,181,0|-hb5y81,55,181,0|-hb5y80,56,216,1|-h6fno1,56,216,1|-h6fno0,55,181,0|-efxa81,55,181,0|-efxa80,114,216,0|-d4ux01,114,216,0|-d4ux00,55,181,0|-87fsw1,55,181,0|-87fsw0,56,216,1|-83bqc1,56,216,1|-83bqc0,55,181,0|4aen3z,55,181,0|4aen40,56,216,1|4jtgbz,56,216,1|4jtgc0,55,181,0|NaN,55,181,0",
        "Asia/Muscat|,0,227,0|-q3gnkp,0,227,0|-q3gnko,102,201,0|NaN,102,201,0",
        "Asia/Nicosia|,0,259,0|-p4bq6h,0,259,0|-p4bq6g,14,9,0|2r67rz,14,9,0|2r67s0,15,4,1|30j6bz,15,4,1|30j6c0,14,9,0|3bn93z,14,9,0|3bn940,15,4,1|3jb3nz,15,4,1|3jb3o0,14,9,0|3s9efz,14,9,0|3s9eg0,15,4,1|419ebz,15,4,1|419ec0,14,9,0|4azh3z,14,9,0|4azh40,15,4,1|4keabz,15,4,1|4keac0,14,9,0|4tpjrz,14,9,0|4tpjs0,15,4,1|532ibz,15,4,1|532ic0,14,9,0|5csl3z,14,9,0|5csl40,15,4,1|5lskzz,15,4,1|5lsl00,14,9,0|5v5p3z,14,9,0|5v5p40,15,4,1|64innz,15,4,1|64ino0,14,9,0|6dvrrz,14,9,0|6dvrs0,15,4,1|6n8qbz,15,4,1|6n8qc0,14,9,0|6wlufz,14,9,0|6wlug0,15,4,1|75yszz,15,4,1|75yt00,14,9,0|7fbx3z,14,9,0|7fbx40,15,4,1|7p1ubz,15,4,1|7p1uc0,14,9,0|7yeyfz,14,9,0|7yeyg0,15,4,1|87rwzz,15,4,1|87rx00,14,9,0|8h513z,14,9,0|8h5140,15,4,1|8qhznz,15,4,1|8qhzo0,14,9,0|8zv3rz,14,9,0|8zv3s0,15,4,1|9982bz,15,4,1|9982c0,14,9,0|9il6fz,14,9,0|9il6g0,15,4,1|9ry4zz,15,4,1|9ry500,14,9,0|a1b93z,14,9,0|a1b940,15,4,1|aao7nz,15,4,1|aao7o0,14,9,0|ak1brz,14,9,0|ak1bs0,15,4,1|atr8zz,15,4,1|atr900,14,9,0|b34d3z,14,9,0|b34d40,15,4,1|bchbnz,15,4,1|bchbo0,14,9,0|blufrz,14,9,0|blufs0,15,4,1|bv7ebz,15,4,1|bv7ec0,14,9,0|c4kifz,14,9,0|c4kig0,15,4,1|cdxgzz,15,4,1|cdxh00,14,9,0|cnal3z,14,9,0|cnal40,15,4,1|cwnjnz,15,4,1|cwnjo0,14,9,0|d60nrz,14,9,0|d60ns0,15,4,1|dfdmbz,15,4,1|dfdmc0,14,9,0|dp3p3z,14,9,0|dp3p40,15,4,1|dygnnz,15,4,1|dygno0,14,9,0|e7trrz,14,9,0|e7trs0,15,4,1|eh6qbz,15,4,1|eh6qc0,14,9,0|eqjufz,14,9,0|eqjug0,15,4,1|f1cyrz,15,4,1|f1cys0,14,9,0|f9a5fz,14,9,0|f9a5g0,15,4,1|fkg03z,15,4,1|fkg040,14,9,0|fs083z,14,9,0|fs0840,15,4,1|g362rz,15,4,1|g362s0,14,9,0|gaqarz,14,9,0|gaqas0,15,4,1|glw5fz,15,4,1|glw5g0,14,9,0|gttc3z,14,9,0|gttc40,15,4,1|h4m83z,15,4,1|h4m840,14,9,0|hcjerz,14,9,0|hcjes0,15,4,1|hncarz,15,4,1|hncas0,14,9,0|hv9hfz,14,9,0|hv9hg0,15,4,1|i6fc3z,15,4,1|i6fc40,14,9,0|idzk3z,14,9,0|idzk40,15,4,1|ip5erz,15,4,1|ip5es0,14,9,0|iwpmrz,14,9,0|iwpms0,15,4,1|j7vhfz,15,4,1|j7vhg0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|lioyrz,14,9,0|lioys0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n385fz,14,9,0|n385g0,15,4,1|ne11fz,15,4,1|ne11g0,14,9,0|nly83z,14,9,0|nly840,15,4,1|nwr43z,15,4,1|nwr440,14,9,0|o4oarz,14,9,0|o4oas0,15,4,1|ofu5fz,15,4,1|ofu5g0,14,9,0|onedfz,14,9,0|onedg0,15,4,1|oyk83z,15,4,1|oyk840,14,9,0|p64g3z,14,9,0|p64g40,15,4,1|phaarz,15,4,1|phaas0,14,9,0|pp7hfz,14,9,0|pp7hg0,15,4,1|q00dfz,15,4,1|q00dg0,14,9,0|q7xk3z,14,9,0|q7xk40,15,4,1|qiqg3z,15,4,1|qiqg40,14,9,0|qqnmrz,14,9,0|qqnms0,15,4,1|r1thfz,15,4,1|r1thg0,14,9,0|r9dpfz,14,9,0|r9dpg0,15,4,1|rkjk3z,15,4,1|rkjk40,14,9,0|rs3s3z,14,9,0|rs3s40,15,4,1|s39mrz,15,4,1|s39ms0,14,9,0|sb6tfz,14,9,0|sb6tg0,15,4,1|slzpfz,15,4,1|slzpg0,14,9,0|stww3z,14,9,0|stww40,15,4,1|t4ps3z,15,4,1|t4ps40,14,9,0|tcmyrz,14,9,0|tcmys0,15,4,1|tnfurz,15,4,1|tnfus0,14,9,0|tvd1fz,14,9,0|tvd1g0,15,4,1|u6iw3z,15,4,1|u6iw40,14,9,0|ue343z,14,9,0|ue3440,15,4,1|up8yrz,15,4,1|up8ys0,14,9,0|uwt6rz,14,9,0|uwt6s0,15,4,1|v7z1fz,15,4,1|v7z1g0,14,9,0|vfw83z,14,9,0|vfw840,15,4,1|vqp43z,15,4,1|vqp440,14,9,0|vymarz,14,9,0|vymas0,15,4,1|w9f6rz,15,4,1|w9f6s0,14,9,0|whcdfz,14,9,0|whcdg0,15,4,1|wsi83z,15,4,1|wsi840,14,9,0|x02g3z,14,9,0|x02g40,15,4,1|xb8arz,15,4,1|xb8as0,14,9,0|xisirz,14,9,0|xisis0,15,4,1|xtydfz,15,4,1|xtydg0,14,9,0|y1ilfz,14,9,0|y1ilg0,15,4,1|ycog3z,15,4,1|ycog40,14,9,0|yklmrz,14,9,0|yklms0,15,4,1|yveirz,15,4,1|yveis0,14,9,0|z3bpfz,14,9,0|z3bpg0,15,4,1|ze4lfz,15,4,1|ze4lg0,14,9,0|zm1s3z,14,9,0|zm1s40,15,4,1|zx7mrz,15,4,1|zx7ms0,14,9,0|104rurz,14,9,0|104rus0,15,4,1|10fxpfz,15,4,1|10fxpg0,14,9,0|10nhxfz,14,9,0|10nhxg0,15,4,1|10yns3z,15,4,1|10yns40,14,9,0|116kyrz,14,9,0|116kys0,15,4,1|11hdurz,15,4,1|11hdus0,14,9,0|11pb1fz,14,9,0|11pb1g0,15,4,1|1203xfz,15,4,1|1203xg0,14,9,0|128143z,14,9,0|1281440,15,4,1|12iu03z,15,4,1|12iu040,14,9,0|12qr6rz,14,9,0|12qr6s0,15,4,1|131x1fz,15,4,1|131x1g0,14,9,0|139h9fz,14,9,0|139h9g0,15,4,1|13kn43z,15,4,1|13kn440,14,9,0|13s7c3z,14,9,0|13s7c40,15,4,1|143d6rz,15,4,1|143d6s0,14,9,0|14badfz,14,9,0|14badg0,15,4,1|14m39fz,15,4,1|14m39g0,14,9,0|14u0g3z,14,9,0|14u0g40,15,4,1|154tc3z,15,4,1|154tc40,14,9,0|15cqirz,14,9,0|15cqis0,15,4,1|15nwdfz,15,4,1|15nwdg0,14,9,0|15vglfz,14,9,0|15vglg0,15,4,1|166mg3z,15,4,1|166mg40,14,9,0|16e6o3z,14,9,0|16e6o40,15,4,1|16pcirz,15,4,1|16pcis0,14,9,0|16x9pfz,14,9,0|16x9pg0,15,4,1|1782lfz,15,4,1|1782lg0,14,9,0|17fzs3z,14,9,0|17fzs40,15,4,1|17qso3z,15,4,1|17qso40,14,9,0|17ypurz,14,9,0|17ypus0,15,4,1|189iqrz,15,4,1|189iqs0,14,9,0|18hfxfz,14,9,0|18hfxg0,15,4,1|18sls3z,15,4,1|18sls40,14,9,0|190603z,14,9,0|1906040,15,4,1|19bburz,15,4,1|19bbus0,14,9,0|19iw2rz,14,9,0|19iw2s0,15,4,1|19u1xfz,15,4,1|19u1xg0,14,9,0|1a1z43z,14,9,0|1a1z440,15,4,1|1acs03z,15,4,1|1acs040,14,9,0|1akp6rz,14,9,0|1akp6s0,15,4,1|1avi2rz,15,4,1|1avi2s0,14,9,0|1b3f9fz,14,9,0|1b3f9g0,15,4,1|1bel43z,15,4,1|1bel440,14,9,0|1bm5c3z,14,9,0|1bm5c40,15,4,1|1bxb6rz,15,4,1|1bxb6s0,14,9,0|1c4verz,14,9,0|1c4ves0,15,4,1|1cg19fz,15,4,1|1cg19g0,14,9,0|1cnlhfz,14,9,0|1cnlhg0,15,4,1|1cyrc3z,15,4,1|1cyrc40,14,9,0|1d6oirz,14,9,0|1d6ois0,15,4,1|1dhherz,15,4,1|1dhhes0,14,9,0|1dpelfz,14,9,0|1dpelg0,15,4,1|1e07hfz,15,4,1|1e07hg0,14,9,0|1e84o3z,14,9,0|1e84o40,15,4,1|1ejairz,15,4,1|1ejais0,14,9,0|1equqrz,14,9,0|1equqs0,15,4,1|1f20lfz,15,4,1|1f20lg0,14,9,0|1f9ktfz,14,9,0|1f9ktg0,15,4,1|1fkqo3z,15,4,1|1fkqo40,14,9,0|1fsnurz,14,9,0|1fsnus0,15,4,1|1g3gqrz,15,4,1|1g3gqs0,14,9,0|1gbdxfz,14,9,0|1gbdxg0,15,4,1|1gm6tfz,15,4,1|1gm6tg0,14,9,0|1gu403z,14,9,0|1gu4040,15,4,1|1h4ww3z,15,4,1|1h4ww40,14,9,0|1hcu2rz,14,9,0|1hcu2s0,15,4,1|1hnzxfz,15,4,1|1hnzxg0,14,9,0|1hvk5fz,14,9,0|1hvk5g0,15,4,1|1i6q03z,15,4,1|1i6q040,14,9,0|1iea83z,14,9,0|1iea840,15,4,1|1ipg2rz,15,4,1|1ipg2s0,14,9,0|1ixd9fz,14,9,0|1ixd9g0,15,4,1|1j865fz,15,4,1|1j865g0,14,9,0|1jg3c3z,14,9,0|1jg3c40,15,4,1|1jqw83z,15,4,1|1jqw840,14,9,0|1jyterz,14,9,0|1jytes0,15,4,1|1k9z9fz,15,4,1|1k9z9g0,14,9,0|1khjhfz,14,9,0|1khjhg0,15,4,1|1kspc3z,15,4,1|1kspc40,14,9,0|1l09k3z,14,9,0|1l09k40,15,4,1|1lbferz,15,4,1|1lbfes0,14,9,0|1ljclfz,14,9,0|1ljclg0,15,4,1|1lu5hfz,15,4,1|1lu5hg0,14,9,0|1m22o3z,14,9,0|1m22o40,15,4,1|1mcvk3z,15,4,1|1mcvk40,14,9,0|1mksqrz,14,9,0|1mksqs0,15,4,1|1mvlmrz,15,4,1|1mvlms0,14,9,0|1n3itfz,14,9,0|1n3itg0,15,4,1|1neoo3z,15,4,1|1neoo40,14,9,0|1nm8w3z,14,9,0|1nm8w40,15,4,1|1nxeqrz,15,4,1|1nxeqs0,14,9,0|1o4yyrz,14,9,0|1o4yys0,15,4,1|1og4tfz,15,4,1|1og4tg0,14,9,0|1oo203z,14,9,0|1oo2040,15,4,1|1oyuw3z,15,4,1|1oyuw40,14,9,0|1p6s2rz,14,9,0|1p6s2s0,15,4,1|1phkyrz,15,4,1|1phkys0,14,9,0|1ppi5fz,14,9,0|1ppi5g0,15,4,1|1q0o03z,15,4,1|1q0o040,14,9,0|1q8883z,14,9,0|1q88840,15,4,1|1qje2rz,15,4,1|1qje2s0,14,9,0|1qqyarz,14,9,0|1qqyas0,15,4,1|1r245fz,15,4,1|1r245g0,14,9,0|1r9odfz,14,9,0|1r9odg0,15,4,1|1rku83z,15,4,1|1rku840,14,9,0|1rsrerz,14,9,0|1rsres0,15,4,1|1s3karz,15,4,1|1s3kas0,14,9,0|1sbhhfz,14,9,0|1sbhhg0,15,4,1|1smadfz,15,4,1|1smadg0,14,9,0|1su7k3z,14,9,0|1su7k40,15,4,1|1t5derz,15,4,1|1t5des0,14,9,0|1tcxmrz,14,9,0|1tcxms0,15,4,1|1to3hfz,15,4,1|1to3hg0,14,9,0|1tvnpfz,14,9,0|1tvnpg0,15,4,1|1u6tk3z,15,4,1|1u6tk40,14,9,0|1ueqqrz,14,9,0|1ueqqs0,15,4,1|1upjmrz,15,4,1|1upjms0,14,9,0|1uxgtfz,14,9,0|1uxgtg0,15,4,1|1v89pfz,15,4,1|1v89pg0,14,9,0|1vg6w3z,14,9,0|1vg6w40,15,4,1|1vqzs3z,15,4,1|1vqzs40,14,9,0|NaN,14,9,0",
        "Asia/Novokuznetsk|,0,260,0|-nu36td,0,260,0|-nu36tc,92,188,0|-kmrco1,92,188,0|-kmrco0,86,183,0|5vav7z,86,183,0|5vav80,84,181,1|64pofz,84,181,1|64pog0,86,183,0|6e2sjz,86,183,0|6e2sk0,84,181,1|6nhlrz,84,181,1|6nhls0,86,183,0|6wupvz,86,183,0|6wupw0,84,181,1|769j3z,84,181,1|769j40,86,183,0|7fohvz,86,183,0|7fohw0,84,181,1|7p1orz,84,181,1|7p1os0,86,183,0|7yeq3z,86,183,0|7yeq40,84,181,1|87rrfz,84,181,1|87rrg0,86,183,0|8h4srz,86,183,0|8h4ss0,84,181,1|8qhu3z,84,181,1|8qhu40,86,183,0|8zuvfz,86,183,0|8zuvg0,84,181,1|997wrz,84,181,1|997ws0,86,183,0|9iky3z,86,183,0|9iky40,84,181,1|9rxzfz,84,181,1|9rxzg0,86,183,0|a1b0rz,86,183,0|a1b0s0,84,181,1|aao23z,84,181,1|aao240,86,183,0|ak13fz,86,183,0|ak13g0,84,181,1|atr3fz,84,181,1|atr3g0,86,183,0|b344rz,86,183,0|b344s0,86,183,1|bch8vz,86,183,1|bch8w0,92,188,0|bi8njz,92,188,0|bi8nk0,86,183,0|blu7fz,86,183,0|blu7g0,84,181,1|bv78rz,84,181,1|bv78s0,86,183,0|c4ka3z,86,183,0|c4ka40,84,181,1|cdxbfz,84,181,1|cdxbg0,86,183,0|cnacrz,86,183,0|cnacs0,84,181,1|cwne3z,84,181,1|cwne40,86,183,0|d60ffz,86,183,0|d60fg0,84,181,1|dfdgrz,84,181,1|dfdgs0,86,183,0|dp3grz,86,183,0|dp3gs0,84,181,1|dzwcrz,84,181,1|dzwcs0,86,183,0|e7tjfz,86,183,0|e7tjg0,84,181,1|eimffz,84,181,1|eimfg0,86,183,0|eqjm3z,86,183,0|eqjm40,84,181,1|f1ci3z,84,181,1|f1ci40,86,183,0|f99orz,86,183,0|f99os0,84,181,1|fkfjfz,84,181,1|fkfjg0,86,183,0|frzrfz,86,183,0|frzrg0,84,181,1|g35m3z,84,181,1|g35m40,86,183,0|gapu3z,86,183,0|gapu40,84,181,1|glvorz,84,181,1|glvos0,86,183,0|gtsvfz,86,183,0|gtsvg0,84,181,1|h4lrfz,84,181,1|h4lrg0,86,183,0|hciy3z,86,183,0|hciy40,84,181,1|hnbu3z,84,181,1|hnbu40,86,183,0|hv90rz,86,183,0|hv90s0,84,181,1|i6evfz,84,181,1|i6evg0,86,183,0|idz3fz,86,183,0|idz3g0,84,181,1|ip4y3z,84,181,1|ip4y40,86,183,0|iwp63z,86,183,0|iwp640,84,181,1|j7v0rz,84,181,1|j7v0s0,86,183,0|jff8rz,86,183,0|jff8s0,84,181,1|jql3fz,84,181,1|jql3g0,86,183,0|jyia3z,86,183,0|jyia40,84,181,1|k9b63z,84,181,1|k9b640,86,183,0|kh8crz,86,183,0|kh8cs0,84,181,1|ks18rz,84,181,1|ks18s0,86,183,0|kzyffz,86,183,0|kzyfg0,86,183,1|lb4cvz,86,183,1|lb4cw0,92,188,0|liokvz,92,188,0|liokw0,86,183,0|NaN,86,183,0",
        "Asia/Novosibirsk|,0,261,0|-q4do0t,0,261,0|-q4do0s,92,188,0|-kmrco1,92,188,0|-kmrco0,86,183,0|5vav7z,86,183,0|5vav80,84,181,1|64pofz,84,181,1|64pog0,86,183,0|6e2sjz,86,183,0|6e2sk0,84,181,1|6nhlrz,84,181,1|6nhls0,86,183,0|6wupvz,86,183,0|6wupw0,84,181,1|769j3z,84,181,1|769j40,86,183,0|7fohvz,86,183,0|7fohw0,84,181,1|7p1orz,84,181,1|7p1os0,86,183,0|7yeq3z,86,183,0|7yeq40,84,181,1|87rrfz,84,181,1|87rrg0,86,183,0|8h4srz,86,183,0|8h4ss0,84,181,1|8qhu3z,84,181,1|8qhu40,86,183,0|8zuvfz,86,183,0|8zuvg0,84,181,1|997wrz,84,181,1|997ws0,86,183,0|9iky3z,86,183,0|9iky40,84,181,1|9rxzfz,84,181,1|9rxzg0,86,183,0|a1b0rz,86,183,0|a1b0s0,84,181,1|aao23z,84,181,1|aao240,86,183,0|ak13fz,86,183,0|ak13g0,84,181,1|atr3fz,84,181,1|atr3g0,86,183,0|b344rz,86,183,0|b344s0,86,183,1|bch8vz,86,183,1|bch8w0,92,188,0|bi8njz,92,188,0|bi8nk0,86,183,0|blu7fz,86,183,0|blu7g0,84,181,1|bv78rz,84,181,1|bv78s0,86,183,0|c4ka3z,86,183,0|c4ka40,84,181,1|c7fr3z,84,181,1|c7fr40,86,183,1|cdxe7z,86,183,1|cdxe80,92,188,0|cnafjz,92,188,0|cnafk0,86,183,1|cwngvz,86,183,1|cwngw0,92,188,0|d60i7z,92,188,0|d60i80,86,183,1|dfdjjz,86,183,1|dfdjk0,92,188,0|dp3jjz,92,188,0|dp3jk0,86,183,1|dzwfjz,86,183,1|dzwfk0,92,188,0|e7tm7z,92,188,0|e7tm80,86,183,1|eimi7z,86,183,1|eimi80,92,188,0|eqjovz,92,188,0|eqjow0,86,183,1|f1ckvz,86,183,1|f1ckw0,92,188,0|f99rjz,92,188,0|f99rk0,86,183,1|fkfm7z,86,183,1|fkfm80,92,188,0|frzu7z,92,188,0|frzu80,86,183,1|g35ovz,86,183,1|g35ow0,92,188,0|gapwvz,92,188,0|gapww0,86,183,1|glvrjz,86,183,1|glvrk0,92,188,0|gtsy7z,92,188,0|gtsy80,86,183,1|h4lu7z,86,183,1|h4lu80,92,188,0|hcj0vz,92,188,0|hcj0w0,86,183,1|hnbwvz,86,183,1|hnbww0,92,188,0|hv93jz,92,188,0|hv93k0,86,183,1|i6ey7z,86,183,1|i6ey80,92,188,0|idz67z,92,188,0|idz680,86,183,1|ip50vz,86,183,1|ip50w0,92,188,0|iwp8vz,92,188,0|iwp8w0,86,183,1|j7v3jz,86,183,1|j7v3k0,92,188,0|jffbjz,92,188,0|jffbk0,86,183,1|jql67z,86,183,1|jql680,92,188,0|jyicvz,92,188,0|jyicw0,86,183,1|k9b8vz,86,183,1|k9b8w0,92,188,0|kh8fjz,92,188,0|kh8fk0,86,183,1|ks1bjz,86,183,1|ks1bk0,92,188,0|kzyi7z,92,188,0|kzyi80,86,183,1|lb4cvz,86,183,1|lb4cw0,92,188,0|liokvz,92,188,0|liokw0,86,183,0|ne0krz,86,183,0|ne0ks0,92,188,0|oasa7z,92,188,0|oasa80,86,183,0|NaN,86,183,0",
        "Asia/Omsk|,0,262,0|-q5xmx7,0,262,0|-q5xmx6,87,184,0|-kmr9w1,87,184,0|-kmr9w0,92,188,0|5vaxzz,92,188,0|5vay00,86,183,1|64pr7z,86,183,1|64pr80,92,188,0|6e2vbz,92,188,0|6e2vc0,86,183,1|6nhojz,86,183,1|6nhok0,92,188,0|6wusnz,92,188,0|6wuso0,86,183,1|769lvz,86,183,1|769lw0,92,188,0|7foknz,92,188,0|7foko0,86,183,1|7p1rjz,86,183,1|7p1rk0,92,188,0|7yesvz,92,188,0|7yesw0,86,183,1|87ru7z,86,183,1|87ru80,92,188,0|8h4vjz,92,188,0|8h4vk0,86,183,1|8qhwvz,86,183,1|8qhww0,92,188,0|8zuy7z,92,188,0|8zuy80,86,183,1|997zjz,86,183,1|997zk0,92,188,0|9il0vz,92,188,0|9il0w0,86,183,1|9ry27z,86,183,1|9ry280,92,188,0|a1b3jz,92,188,0|a1b3k0,86,183,1|aao4vz,86,183,1|aao4w0,92,188,0|ak167z,92,188,0|ak1680,86,183,1|atr67z,86,183,1|atr680,92,188,0|b347jz,92,188,0|b347k0,92,188,1|bchbnz,92,188,1|bchbo0,87,184,0|bi8qbz,87,184,0|bi8qc0,92,188,0|blua7z,92,188,0|blua80,86,183,1|bv7bjz,86,183,1|bv7bk0,92,188,0|c4kcvz,92,188,0|c4kcw0,86,183,1|cdxe7z,86,183,1|cdxe80,92,188,0|cnafjz,92,188,0|cnafk0,86,183,1|cwngvz,86,183,1|cwngw0,92,188,0|d60i7z,92,188,0|d60i80,86,183,1|dfdjjz,86,183,1|dfdjk0,92,188,0|dp3jjz,92,188,0|dp3jk0,86,183,1|dzwfjz,86,183,1|dzwfk0,92,188,0|e7tm7z,92,188,0|e7tm80,86,183,1|eimi7z,86,183,1|eimi80,92,188,0|eqjovz,92,188,0|eqjow0,86,183,1|f1ckvz,86,183,1|f1ckw0,92,188,0|f99rjz,92,188,0|f99rk0,86,183,1|fkfm7z,86,183,1|fkfm80,92,188,0|frzu7z,92,188,0|frzu80,86,183,1|g35ovz,86,183,1|g35ow0,92,188,0|gapwvz,92,188,0|gapww0,86,183,1|glvrjz,86,183,1|glvrk0,92,188,0|gtsy7z,92,188,0|gtsy80,86,183,1|h4lu7z,86,183,1|h4lu80,92,188,0|hcj0vz,92,188,0|hcj0w0,86,183,1|hnbwvz,86,183,1|hnbww0,92,188,0|hv93jz,92,188,0|hv93k0,86,183,1|i6ey7z,86,183,1|i6ey80,92,188,0|idz67z,92,188,0|idz680,86,183,1|ip50vz,86,183,1|ip50w0,92,188,0|iwp8vz,92,188,0|iwp8w0,86,183,1|j7v3jz,86,183,1|j7v3k0,92,188,0|jffbjz,92,188,0|jffbk0,86,183,1|jql67z,86,183,1|jql680,92,188,0|jyicvz,92,188,0|jyicw0,86,183,1|k9b8vz,86,183,1|k9b8w0,92,188,0|kh8fjz,92,188,0|kh8fk0,86,183,1|ks1bjz,86,183,1|ks1bk0,92,188,0|kzyi7z,92,188,0|kzyi80,86,183,1|lb4cvz,86,183,1|lb4cw0,92,188,0|liokvz,92,188,0|liokw0,86,183,0|ne0krz,86,183,0|ne0ks0,92,188,0|NaN,92,188,0",
        "Asia/Oral|,0,263,0|-nu15id,0,263,0|-nu15ic,96,4,0|-kmr4c1,96,4,0|-kmr4c0,87,184,0|5vb0rz,87,184,0|5vb0s0,92,188,1|64ptzz,92,188,1|64pu00,92,188,0|6e2vbz,92,188,0|6e2vc0,92,188,1|6nhrbz,92,188,1|6nhrc0,87,184,0|6wuvfz,87,184,0|6wuvg0,92,188,1|769onz,92,188,1|769oo0,87,184,0|7fonfz,87,184,0|7fong0,92,188,1|7p1ubz,92,188,1|7p1uc0,87,184,0|7yevnz,87,184,0|7yevo0,92,188,1|87rwzz,92,188,1|87rx00,87,184,0|8h4ybz,87,184,0|8h4yc0,92,188,1|8qhznz,92,188,1|8qhzo0,87,184,0|8zv0zz,87,184,0|8zv100,92,188,1|9982bz,92,188,1|9982c0,87,184,0|9il3nz,87,184,0|9il3o0,92,188,1|9ry4zz,92,188,1|9ry500,87,184,0|a1b6bz,87,184,0|a1b6c0,87,184,1|aaoafz,87,184,1|aaoag0,102,201,0|ak1brz,102,201,0|ak1bs0,87,184,1|atrbrz,87,184,1|atrbs0,102,201,0|b34d3z,102,201,0|b34d40,87,184,1|bchefz,87,184,1|bcheg0,102,201,0|bi8t3z,102,201,0|bi8t40,87,184,0|bluczz,87,184,0|blud00,87,184,1|bv7h3z,87,184,1|bv7h40,102,201,0|c4kifz,102,201,0|c4kig0,87,184,1|cdxjrz,87,184,1|cdxjs0,102,201,0|cnal3z,102,201,0|cnal40,87,184,1|cwnmfz,87,184,1|cwnmg0,102,201,0|d60nrz,102,201,0|d60ns0,87,184,1|dfdp3z,87,184,1|dfdp40,102,201,0|dp3p3z,102,201,0|dp3p40,87,184,1|dzwl3z,87,184,1|dzwl40,102,201,0|e7trrz,102,201,0|e7trs0,87,184,1|eimnrz,87,184,1|eimns0,102,201,0|eqjufz,102,201,0|eqjug0,87,184,1|f1cqfz,87,184,1|f1cqg0,102,201,0|f99x3z,102,201,0|f99x40,87,184,1|fkfrrz,87,184,1|fkfrs0,102,201,0|frzzrz,102,201,0|frzzs0,87,184,1|g35ufz,87,184,1|g35ug0,102,201,0|gaq2fz,102,201,0|gaq2g0,87,184,1|glvx3z,87,184,1|glvx40,102,201,0|gtt3rz,102,201,0|gtt3s0,87,184,1|h4lzrz,87,184,1|h4lzs0,102,201,0|hcj6fz,102,201,0|hcj6g0,87,184,1|hnc2fz,87,184,1|hnc2g0,102,201,0|hv993z,102,201,0|hv9940,87,184,1|i6f3rz,87,184,1|i6f3s0,87,184,0|NaN,87,184,0",
        "Asia/Phnom_Penh|,0,209,0|-1ayyla5,0,209,0|-1ayyla4,53,209,0|-pysda5,53,209,0|-pysda4,86,183,0|NaN,86,183,0",
        "Asia/Pontianak|,0,264,0|-w6piwx,0,264,0|-w6piww,5,264,0|-jebg8x,5,264,0|-jebg8w,103,214,0|-eknm61,103,214,0|-eknm60,105,216,0|-co37o1,105,216,0|-co37o0,103,214,0|-bb5zi1,103,214,0|-bb5zi0,84,181,0|-a9m681,84,181,0|-a9m680,103,214,0|-34ru61,103,214,0|-34ru60,126,181,0|9e5gfz,126,181,0|9e5gg0,117,183,0|NaN,117,183,0",
        "Asia/Pyongyang|,0,265,0|-w895yd,0,265,0|-w895yc,127,234,0|-u9s4y1,127,234,0|-u9s4y0,114,216,0|-cpmro1,114,216,0|-cpmro0,127,216,0|nt2uzz,127,216,0|nt2v00,127,234,0|p87lnz,127,234,0|p87lo0,127,216,0|NaN,127,216,0",
        "Asia/Qatar|,0,207,0|-q3gmvl,0,207,0|-q3gmvk,102,201,0|19d0vz,102,201,0|19d0w0,96,4,0|NaN,96,4,0",
        "Asia/Qostanay|,0,266,0|-nu17s5,0,266,0|-nu17s4,102,201,0|-kmr741,102,201,0|-kmr740,87,184,0|5vb0rz,87,184,0|5vb0s0,92,188,1|64ptzz,92,188,1|64pu00,92,188,0|6e2vbz,92,188,0|6e2vc0,92,188,1|6nhrbz,92,188,1|6nhrc0,87,184,0|6wuvfz,87,184,0|6wuvg0,92,188,1|769onz,92,188,1|769oo0,87,184,0|7fonfz,87,184,0|7fong0,92,188,1|7p1ubz,92,188,1|7p1uc0,87,184,0|7yevnz,87,184,0|7yevo0,92,188,1|87rwzz,92,188,1|87rx00,87,184,0|8h4ybz,87,184,0|8h4yc0,92,188,1|8qhznz,92,188,1|8qhzo0,87,184,0|8zv0zz,87,184,0|8zv100,92,188,1|9982bz,92,188,1|9982c0,87,184,0|9il3nz,87,184,0|9il3o0,92,188,1|9ry4zz,92,188,1|9ry500,87,184,0|a1b6bz,87,184,0|a1b6c0,92,188,1|aao7nz,92,188,1|aao7o0,87,184,0|ak18zz,87,184,0|ak1900,92,188,1|atr8zz,92,188,1|atr900,87,184,0|b34abz,87,184,0|b34ac0,87,184,1|bchefz,87,184,1|bcheg0,102,201,0|bi8t3z,102,201,0|bi8t40,87,184,0|bluczz,87,184,0|blud00,92,188,1|bv7ebz,92,188,1|bv7ec0,87,184,0|c4kfnz,87,184,0|c4kfo0,92,188,1|cdxgzz,92,188,1|cdxh00,87,184,0|cnaibz,87,184,0|cnaic0,92,188,1|cwnjnz,92,188,1|cwnjo0,87,184,0|d60kzz,87,184,0|d60l00,92,188,1|dfdmbz,92,188,1|dfdmc0,87,184,0|dp3mbz,87,184,0|dp3mc0,92,188,1|dzwibz,92,188,1|dzwic0,87,184,0|e7tozz,87,184,0|e7tp00,92,188,1|eimkzz,92,188,1|eiml00,87,184,0|eqjrnz,87,184,0|eqjro0,92,188,1|f1cnnz,92,188,1|f1cno0,87,184,0|f99ubz,87,184,0|f99uc0,92,188,1|fkfozz,92,188,1|fkfp00,87,184,0|frzwzz,87,184,0|frzx00,92,188,1|g35rnz,92,188,1|g35ro0,87,184,0|gapznz,87,184,0|gapzo0,92,188,1|glvubz,92,188,1|glvuc0,87,184,0|gtt0zz,87,184,0|gtt100,92,188,1|h4lwzz,92,188,1|h4lx00,87,184,0|hcj3nz,87,184,0|hcj3o0,92,188,1|hnbznz,92,188,1|hnbzo0,87,184,0|hv96bz,87,184,0|hv96c0,92,188,1|i6f0zz,92,188,1|i6f100,92,188,0|s9mpzz,92,188,0|s9mq00,87,184,0|NaN,87,184,0",
        "Asia/Qyzylorda|,0,267,0|-nu184h,0,267,0|-nu184g,102,201,0|-kmr741,102,201,0|-kmr740,87,184,0|5vb0rz,87,184,0|5vb0s0,92,188,1|64ptzz,92,188,1|64pu00,92,188,0|6e2vbz,92,188,0|6e2vc0,92,188,1|6nhrbz,92,188,1|6nhrc0,87,184,0|6wuvfz,87,184,0|6wuvg0,92,188,1|769onz,92,188,1|769oo0,87,184,0|7fonfz,87,184,0|7fong0,92,188,1|7p1ubz,92,188,1|7p1uc0,87,184,0|7yevnz,87,184,0|7yevo0,92,188,1|87rwzz,92,188,1|87rx00,87,184,0|8h4ybz,87,184,0|8h4yc0,92,188,1|8qhznz,92,188,1|8qhzo0,87,184,0|8zv0zz,87,184,0|8zv100,92,188,1|9982bz,92,188,1|9982c0,87,184,0|9il3nz,87,184,0|9il3o0,92,188,1|9ry4zz,92,188,1|9ry500,87,184,0|a1b6bz,87,184,0|a1b6c0,92,188,1|aao7nz,92,188,1|aao7o0,87,184,0|ak18zz,87,184,0|ak1900,92,188,1|atr8zz,92,188,1|atr900,87,184,0|b34abz,87,184,0|b34ac0,87,184,1|bchefz,87,184,1|bcheg0,87,184,0|bi8qbz,87,184,0|bi8qc0,92,188,0|blua7z,92,188,0|blua80,92,188,1|bv7ebz,92,188,1|bv7ec0,87,184,0|c4kfnz,87,184,0|c4kfo0,92,188,1|cdxgzz,92,188,1|cdxh00,87,184,0|cnaibz,87,184,0|cnaic0,92,188,1|cwnjnz,92,188,1|cwnjo0,87,184,0|d60kzz,87,184,0|d60l00,92,188,1|dfdmbz,92,188,1|dfdmc0,87,184,0|dp3mbz,87,184,0|dp3mc0,92,188,1|dzwibz,92,188,1|dzwic0,87,184,0|e7tozz,87,184,0|e7tp00,92,188,1|eimkzz,92,188,1|eiml00,87,184,0|eqjrnz,87,184,0|eqjro0,92,188,1|f1cnnz,92,188,1|f1cno0,87,184,0|f99ubz,87,184,0|f99uc0,92,188,1|fkfozz,92,188,1|fkfp00,87,184,0|frzwzz,87,184,0|frzx00,92,188,1|g35rnz,92,188,1|g35ro0,87,184,0|gapznz,87,184,0|gapzo0,92,188,1|glvubz,92,188,1|glvuc0,87,184,0|gtt0zz,87,184,0|gtt100,92,188,1|h4lwzz,92,188,1|h4lx00,87,184,0|hcj3nz,87,184,0|hcj3o0,92,188,1|hnbznz,92,188,1|hnbzo0,87,184,0|hv96bz,87,184,0|hv96c0,92,188,1|i6f0zz,92,188,1|i6f100,92,188,0|pk1rbz,92,188,0|pk1rc0,87,184,0|NaN,87,184,0",
        "Asia/Riyadh|,0,194,0|-bwgbbh,0,194,0|-bwgbbg,96,4,0|NaN,96,4,0",
        "Asia/Sakhalin|,0,268,0|-xl87rd,0,268,0|-xl87rc,105,216,0|-cpkx01,105,216,0|-cpkx00,85,182,0|5vak3z,85,182,0|5vak40,99,192,1|64pdbz,99,192,1|64pdc0,85,182,0|6e2hfz,85,182,0|6e2hg0,99,192,1|6nhanz,99,192,1|6nhao0,85,182,0|6wuerz,85,182,0|6wues0,99,192,1|7697zz,99,192,1|769800,85,182,0|7fo6rz,85,182,0|7fo6s0,99,192,1|7p1dnz,99,192,1|7p1do0,85,182,0|7yeezz,85,182,0|7yef00,99,192,1|87rgbz,99,192,1|87rgc0,85,182,0|8h4hnz,85,182,0|8h4ho0,99,192,1|8qhizz,99,192,1|8qhj00,85,182,0|8zukbz,85,182,0|8zukc0,99,192,1|997lnz,99,192,1|997lo0,85,182,0|9ikmzz,85,182,0|9ikn00,99,192,1|9rxobz,99,192,1|9rxoc0,85,182,0|a1apnz,85,182,0|a1apo0,99,192,1|aanqzz,99,192,1|aanr00,85,182,0|ak0sbz,85,182,0|ak0sc0,99,192,1|atqsbz,99,192,1|atqsc0,85,182,0|b33tnz,85,182,0|b33to0,85,182,1|bcgxrz,85,182,1|bcgxs0,89,187,0|bi8cfz,89,187,0|bi8cg0,85,182,0|bltwbz,85,182,0|bltwc0,99,192,1|bv6xnz,99,192,1|bv6xo0,85,182,0|c4jyzz,85,182,0|c4jz00,99,192,1|cdx0bz,99,192,1|cdx0c0,85,182,0|cna1nz,85,182,0|cna1o0,99,192,1|cwn2zz,99,192,1|cwn300,85,182,0|d604bz,85,182,0|d604c0,99,192,1|dfd5nz,99,192,1|dfd5o0,85,182,0|dp35nz,85,182,0|dp35o0,99,192,1|dzw1nz,99,192,1|dzw1o0,85,182,0|e7t8bz,85,182,0|e7t8c0,85,182,1|eim73z,85,182,1|eim740,89,187,0|eqjdrz,89,187,0|eqjds0,85,182,1|f1c9rz,85,182,1|f1c9s0,89,187,0|f99gfz,89,187,0|f99gg0,85,182,1|fkfb3z,85,182,1|fkfb40,89,187,0|frzj3z,89,187,0|frzj40,85,182,1|g35drz,85,182,1|g35ds0,89,187,0|gaplrz,89,187,0|gapls0,85,182,1|glvgfz,85,182,1|glvgg0,89,187,0|gtsn3z,89,187,0|gtsn40,85,182,1|h4lj3z,85,182,1|h4lj40,89,187,0|hciprz,89,187,0|hcips0,85,182,1|hnblrz,85,182,1|hnbls0,89,187,0|hv8sfz,89,187,0|hv8sg0,85,182,1|i6en3z,85,182,1|i6en40,89,187,0|idyv3z,89,187,0|idyv40,85,182,1|ip4prz,85,182,1|ip4ps0,89,187,0|iwoxrz,89,187,0|iwoxs0,85,182,1|j7usfz,85,182,1|j7usg0,89,187,0|jff0fz,89,187,0|jff0g0,85,182,1|jqkv3z,85,182,1|jqkv40,89,187,0|jyi1rz,89,187,0|jyi1s0,85,182,1|k9axrz,85,182,1|k9axs0,89,187,0|kh84fz,89,187,0|kh84g0,85,182,1|ks10fz,85,182,1|ks10g0,89,187,0|kzy73z,89,187,0|kzy740,85,182,1|lb41rz,85,182,1|lb41s0,89,187,0|lio9rz,89,187,0|lio9s0,85,182,0|ne09nz,85,182,0|ne09o0,89,187,0|o4nlrz,89,187,0|o4nls0,85,182,0|NaN,85,182,0",
        "Asia/Samarkand|,0,269,0|-nu18ei,0,269,0|-nu18eh,102,201,0|-kmr741,102,201,0|-kmr740,87,184,0|5vb0rz,87,184,0|5vb0s0,92,188,1|64ptzz,92,188,1|64pu00,92,188,0|6e2vbz,92,188,0|6e2vc0,92,188,1|6nhrbz,92,188,1|6nhrc0,87,184,0|6wuvfz,87,184,0|6wuvg0,92,188,1|769onz,92,188,1|769oo0,87,184,0|7fonfz,87,184,0|7fong0,92,188,1|7p1ubz,92,188,1|7p1uc0,87,184,0|7yevnz,87,184,0|7yevo0,92,188,1|87rwzz,92,188,1|87rx00,87,184,0|8h4ybz,87,184,0|8h4yc0,92,188,1|8qhznz,92,188,1|8qhzo0,87,184,0|8zv0zz,87,184,0|8zv100,92,188,1|9982bz,92,188,1|9982c0,87,184,0|9il3nz,87,184,0|9il3o0,92,188,1|9ry4zz,92,188,1|9ry500,87,184,0|a1b6bz,87,184,0|a1b6c0,92,188,1|aao7nz,92,188,1|aao7o0,87,184,0|ak18zz,87,184,0|ak1900,92,188,1|atr8zz,92,188,1|atr900,87,184,0|b34abz,87,184,0|b34ac0,92,188,1|bchbnz,92,188,1|bchbo0,87,184,0|NaN,87,184,0",
        "Asia/Seoul|,0,270,0|-w8966h,0,270,0|-w8966g,127,234,0|-u9s4y1,127,234,0|-u9s4y0,114,216,0|-couzo1,114,216,0|-couzo0,127,216,0|-b9kp01,127,216,0|-b9kp00,128,187,1|-b486g1,128,187,1|-b486g0,127,216,0|-atu101,127,216,0|-atu100,128,187,1|-aljyg1,128,187,1|-aljyg0,127,216,0|-ab5t01,127,216,0|-ab5t00,128,187,1|-a2tvs1,128,187,1|-a2tvs0,127,216,0|-9ql2c1,127,216,0|-9ql2c0,128,187,1|-9k3t41,128,187,1|-9k3t40,127,216,0|-88kmc1,127,216,0|-88kmc0,127,234,0|-7nhbm1,127,234,0|-7nhbm0,128,240,1|-7gy7q1,128,240,1|-7gy7q0,127,234,0|-73vrm1,127,234,0|-73vrm0,128,240,1|-6x1jq1,128,240,1|-6x1jq0,127,234,0|-6lvma1,127,234,0|-6lvma0,128,240,1|-6eofq1,128,240,1|-6eofq0,127,234,0|-635jm1,127,234,0|-635jm0,128,240,1|-5vyd21,128,240,1|-5vyd20,127,234,0|-5kfgy1,127,234,0|-5kfgy0,128,240,1|-5d8ae1,128,240,1|-5d8ae0,127,234,0|-51pea1,127,234,0|-51pea0,128,240,1|-4ui7q1,128,240,1|-4ui7q0,127,234,0|-4dqfm1,127,234,0|-4dqfm0,127,216,0|920hvz,127,216,0|920hw0,128,187,1|99xojz,128,187,1|99xok0,127,216,0|9kqkjz,127,216,0|9kqkk0,128,187,1|9snr7z,128,187,1|9snr80,127,216,0|NaN,127,216,0",
        "Asia/Shanghai|,0,271,0|-100eztk,0,271,0|-100eztj,45,181,0|-qh00w1,45,181,0|-qh00w0,47,216,1|-q87fo1,47,216,1|-q87fo0,45,181,0|-ffvq81,45,181,0|-ffvq80,47,216,1|-f8zno1,47,216,1|-f8zno0,45,181,0|-f148w1,45,181,0|-f148w0,47,216,1|-ep6p01,47,216,1|-ep6p00,45,181,0|-ekjy81,45,181,0|-ekjy80,47,216,1|-cp63o1,47,216,1|-cp63o0,45,181,0|-cc1sw1,45,181,0|-cc1sw0,47,216,1|-c4wh01,47,216,1|-c4wh00,45,181,0|-butfk1,45,181,0|-butfk0,47,216,1|-bkj501,47,216,1|-bkj500,45,181,0|-bb60w1,45,181,0|-bb60w0,47,216,1|-b3aro1,47,216,1|-b3aro0,45,181,0|-ase3k1,45,181,0|-ase3k0,47,216,1|-ar06c1,47,216,1|-ar06c0,45,181,0|8ixjbz,45,181,0|8ixjc0,47,216,1|8prr7z,47,216,1|8prr80,45,181,0|90kpzz,45,181,0|90kq00,47,216,1|98htvz,47,216,1|98htw0,45,181,0|9jnrbz,45,181,0|9jnrc0,47,216,1|9r7wjz,47,216,1|9r7wk0,45,181,0|a2dtzz,45,181,0|a2du00,47,216,1|aaaxvz,47,216,1|aaaxw0,45,181,0|al3wnz,45,181,0|al3wo0,47,216,1|at10jz,47,216,1|at10k0,45,181,0|b3tzbz,45,181,0|b3tzc0,47,216,1|bbr37z,47,216,1|bbr380,45,181,0|NaN,45,181,0",
        "Asia/Singapore|,0,253,0|-100ewke,0,253,0|-100ewkd,81,253,0|-xphpwe,81,253,0|-xphpwd,86,183,0|-jb6gs1,86,183,0|-jb6gs0,116,238,1|-hquppd,116,238,1|-hquppc,116,238,0|-esddpd,116,238,0|-esddpc,103,214,0|-ejqa61,103,214,0|-ejqa60,105,216,0|-conl01,105,216,0|-conl00,103,214,0|69g1rz,103,214,0|69g1s0,84,181,0|NaN,84,181,0",
        "Asia/Srednekolymsk|,0,272,0|-nu1ogt,0,272,0|-nu1ogs,89,187,0|-kmrns1,89,187,0|-kmrns0,85,182,0|5vak3z,85,182,0|5vak40,99,192,1|64pdbz,99,192,1|64pdc0,85,182,0|6e2hfz,85,182,0|6e2hg0,99,192,1|6nhanz,99,192,1|6nhao0,85,182,0|6wuerz,85,182,0|6wues0,99,192,1|7697zz,99,192,1|769800,85,182,0|7fo6rz,85,182,0|7fo6s0,99,192,1|7p1dnz,99,192,1|7p1do0,85,182,0|7yeezz,85,182,0|7yef00,99,192,1|87rgbz,99,192,1|87rgc0,85,182,0|8h4hnz,85,182,0|8h4ho0,99,192,1|8qhizz,99,192,1|8qhj00,85,182,0|8zukbz,85,182,0|8zukc0,99,192,1|997lnz,99,192,1|997lo0,85,182,0|9ikmzz,85,182,0|9ikn00,99,192,1|9rxobz,99,192,1|9rxoc0,85,182,0|a1apnz,85,182,0|a1apo0,99,192,1|aanqzz,99,192,1|aanr00,85,182,0|ak0sbz,85,182,0|ak0sc0,99,192,1|atqsbz,99,192,1|atqsc0,85,182,0|b33tnz,85,182,0|b33to0,85,182,1|bcgxrz,85,182,1|bcgxs0,89,187,0|bi8cfz,89,187,0|bi8cg0,85,182,0|bltwbz,85,182,0|bltwc0,99,192,1|bv6xnz,99,192,1|bv6xo0,85,182,0|c4jyzz,85,182,0|c4jz00,99,192,1|cdx0bz,99,192,1|cdx0c0,85,182,0|cna1nz,85,182,0|cna1o0,99,192,1|cwn2zz,99,192,1|cwn300,85,182,0|d604bz,85,182,0|d604c0,99,192,1|dfd5nz,99,192,1|dfd5o0,85,182,0|dp35nz,85,182,0|dp35o0,99,192,1|dzw1nz,99,192,1|dzw1o0,85,182,0|e7t8bz,85,182,0|e7t8c0,99,192,1|eim4bz,99,192,1|eim4c0,85,182,0|eqjazz,85,182,0|eqjb00,99,192,1|f1c6zz,99,192,1|f1c700,85,182,0|f99dnz,85,182,0|f99do0,99,192,1|fkf8bz,99,192,1|fkf8c0,85,182,0|frzgbz,85,182,0|frzgc0,99,192,1|g35azz,99,192,1|g35b00,85,182,0|gapizz,85,182,0|gapj00,99,192,1|glvdnz,99,192,1|glvdo0,85,182,0|gtskbz,85,182,0|gtskc0,99,192,1|h4lgbz,99,192,1|h4lgc0,85,182,0|hcimzz,85,182,0|hcin00,99,192,1|hnbizz,99,192,1|hnbj00,85,182,0|hv8pnz,85,182,0|hv8po0,99,192,1|i6ekbz,99,192,1|i6ekc0,85,182,0|idysbz,85,182,0|idysc0,99,192,1|ip4mzz,99,192,1|ip4n00,85,182,0|iwouzz,85,182,0|iwov00,99,192,1|j7upnz,99,192,1|j7upo0,85,182,0|jfexnz,85,182,0|jfexo0,99,192,1|jqksbz,99,192,1|jqksc0,85,182,0|jyhyzz,85,182,0|jyhz00,99,192,1|k9auzz,99,192,1|k9av00,85,182,0|kh81nz,85,182,0|kh81o0,99,192,1|ks0xnz,99,192,1|ks0xo0,85,182,0|kzy4bz,85,182,0|kzy4c0,99,192,1|lb3yzz,99,192,1|lb3z00,85,182,0|lio6zz,85,182,0|lio700,99,192,0|ne06vz,99,192,0|ne06w0,85,182,0|NaN,85,182,0",
        "Asia/Taipei|,0,273,0|-12mch61,0,273,0|-12mch60,45,181,0|-gtzfk1,45,181,0|-gtzfk0,114,216,0|-co6u81,114,216,0|-co6u80,45,181,0|-cc1sw1,45,181,0|-cc1sw0,47,216,1|-c4wh01,47,216,1|-c4wh00,45,181,0|-butfk1,45,181,0|-butfk0,47,216,1|-bkj501,47,216,1|-bkj500,45,181,0|-bb60w1,45,181,0|-bb60w0,47,216,1|-b3aro1,47,216,1|-b3aro0,45,181,0|-ase3k1,45,181,0|-ase3k0,47,216,1|-akiuc1,47,216,1|-akiuc0,45,181,0|-a9m681,45,181,0|-a9m680,47,216,1|-a1qx01,47,216,1|-a1qx00,45,181,0|-9qu8w1,45,181,0|-9qu8w0,47,216,1|-9iyzo1,47,216,1|-9iyzo0,45,181,0|-9b5fk1,45,181,0|-9b5fk0,47,216,1|-8yjt01,47,216,1|-8yjt00,45,181,0|-8qs3k1,45,181,0|-8qs3k0,47,216,1|-8frvo1,47,216,1|-8frvo0,45,181,0|-880681,45,181,0|-880680,47,216,1|-7wzyc1,47,216,1|-7wzyc0,45,181,0|-7p88w1,45,181,0|-7p88w0,47,216,1|-7ftfo1,47,216,1|-7ftfo0,45,181,0|-76egw1,45,181,0|-76egw0,47,216,1|-6wzno1,47,216,1|-6wzno0,45,181,0|-6nmjk1,45,181,0|-6nmjk0,47,216,1|-6e7qc1,47,216,1|-6e7qc0,45,181,0|-64um81,45,181,0|-64um80,47,216,1|-5vft01,47,216,1|-5vft00,45,181,0|-5m2ow1,45,181,0|-5m2ow0,47,216,1|-5cnvo1,47,216,1|-5cnvo0,45,181,0|-503y81,45,181,0|-503y80,47,216,1|-4tu3o1,47,216,1|-4tu3o0,45,181,0|-4hc0w1,45,181,0|-4hc0w0,47,216,1|-4b26c1,47,216,1|-4b26c0,45,181,0|27rlrz,45,181,0|27rls0,47,216,1|2h6ezz,47,216,1|2h6f00,45,181,0|2qjj3z,45,181,0|2qjj40,47,216,1|2zycbz,47,216,1|2zycc0,45,181,0|4ydlrz,45,181,0|4ydls0,47,216,1|533wbz,47,216,1|533wc0,45,181,0|NaN,45,181,0",
        "Asia/Tashkent|,0,274,0|-nu18u0,0,274,0|-nu18tz,87,184,0|-kmr9w1,87,184,0|-kmr9w0,92,188,0|5vaxzz,92,188,0|5vay00,86,183,1|64pr7z,86,183,1|64pr80,92,188,0|6e2vbz,92,188,0|6e2vc0,86,183,1|6nhojz,86,183,1|6nhok0,92,188,0|6wusnz,92,188,0|6wuso0,86,183,1|769lvz,86,183,1|769lw0,92,188,0|7foknz,92,188,0|7foko0,86,183,1|7p1rjz,86,183,1|7p1rk0,92,188,0|7yesvz,92,188,0|7yesw0,86,183,1|87ru7z,86,183,1|87ru80,92,188,0|8h4vjz,92,188,0|8h4vk0,86,183,1|8qhwvz,86,183,1|8qhww0,92,188,0|8zuy7z,92,188,0|8zuy80,86,183,1|997zjz,86,183,1|997zk0,92,188,0|9il0vz,92,188,0|9il0w0,86,183,1|9ry27z,86,183,1|9ry280,92,188,0|a1b3jz,92,188,0|a1b3k0,86,183,1|aao4vz,86,183,1|aao4w0,92,188,0|ak167z,92,188,0|ak1680,86,183,1|atr67z,86,183,1|atr680,92,188,0|b347jz,92,188,0|b347k0,92,188,1|bchbnz,92,188,1|bchbo0,87,184,0|NaN,87,184,0",
        "Asia/Tbilisi|,0,275,0|-1ayyayo,0,275,0|-1ayyayn,129,275,0|-nu14ao,129,275,0|-nu14an,96,4,0|-6p7kc1,96,4,0|-6p7kc0,102,201,0|5vb3jz,102,201,0|5vb3k0,87,184,1|64pwrz,87,184,1|64pws0,102,201,0|6e30vz,102,201,0|6e30w0,87,184,1|6nhu3z,87,184,1|6nhu40,102,201,0|6wuy7z,102,201,0|6wuy80,87,184,1|769rfz,87,184,1|769rg0,102,201,0|7foq7z,102,201,0|7foq80,87,184,1|7p1x3z,87,184,1|7p1x40,102,201,0|7yeyfz,102,201,0|7yeyg0,87,184,1|87rzrz,87,184,1|87rzs0,102,201,0|8h513z,102,201,0|8h5140,87,184,1|8qi2fz,87,184,1|8qi2g0,102,201,0|8zv3rz,102,201,0|8zv3s0,87,184,1|99853z,87,184,1|998540,102,201,0|9il6fz,102,201,0|9il6g0,87,184,1|9ry7rz,87,184,1|9ry7s0,102,201,0|a1b93z,102,201,0|a1b940,87,184,1|aaoafz,87,184,1|aaoag0,102,201,0|ak1brz,102,201,0|ak1bs0,87,184,1|atrbrz,87,184,1|atrbs0,102,201,0|b34d3z,102,201,0|b34d40,102,201,1|bchh7z,102,201,1|bchh80,96,4,0|bluczz,96,4,0|blud00,102,201,1|bv7bjz,102,201,1|bv7bk0,96,4,0|c4kfnz,96,4,0|c4kfo0,102,201,1|cdxe7z,102,201,1|cdxe80,96,4,0|cnaibz,96,4,0|cnaic0,102,201,1|cwngvz,102,201,1|cwngw0,102,201,0|d60i7z,102,201,0|d60i80,87,184,1|dfdgrz,87,184,1|dfdgs0,102,201,0|dp3jjz,102,201,0|dp3jk0,87,184,1|eimffz,87,184,1|eimfg0,102,201,0|eqjovz,102,201,0|eqjow0,87,184,1|f1ci3z,87,184,1|f1ci40,102,201,0|f99rjz,102,201,0|f99rk0,87,184,1|fkfjfz,87,184,1|fkfjg0,102,201,0|frzu7z,102,201,0|frzu80,87,184,1|g35m3z,87,184,1|g35m40,102,201,0|gapwvz,102,201,0|gapww0,87,184,1|glvorz,87,184,1|glvos0,102,201,0|gtsy7z,102,201,0|gtsy80,87,184,1|h4lrfz,87,184,1|h4lrg0,102,201,0|hcj0vz,102,201,0|hcj0w0,87,184,1|hnbu3z,87,184,1|hnbu40,102,201,0|hv93jz,102,201,0|hv93k0,87,184,1|hzxjfz,87,184,1|hzxjg0,102,201,1|i6f6jz,102,201,1|i6f6k0,96,4,0|idzejz,96,4,0|idzek0,102,201,0|NaN,102,201,0",
        "Asia/Tehran|,0,276,0|-s6m6ux,0,276,0|-s6m6uw,130,276,0|-i18hix,130,276,0|-i18hiw,131,277,0|3rmzhz,131,277,0|3rmzi0,122,244,1|42lfhz,122,244,1|42lfi0,102,201,0|4aki7z,102,201,0|4aki80,87,184,1|4hesvz,87,184,1|4hesw0,102,201,0|4p2q7z,102,201,0|4p2q80,131,277,0|4wl4xz,131,277,0|4wl4y0,122,244,1|52i0tz,122,244,1|52i0u0,131,277,0|5byu9z,131,277,0|5byua0,122,244,1|5lj7hz,122,244,1|5lj7i0,131,277,0|b4tcxz,131,277,0|b4tcy0,122,244,1|bc48tz,122,244,1|bc48u0,131,277,0|blhcxz,131,277,0|blhcy0,122,244,1|buy0tz,122,244,1|buy0u0,131,277,0|c49a9z,131,277,0|c49aa0,122,244,1|cdpy5z,122,244,1|cdpy60,131,277,0|cn17lz,131,277,0|cn17m0,122,244,1|cwhvhz,122,244,1|cwhvi0,131,277,0|d5t4xz,131,277,0|d5t4y0,122,244,1|df9stz,122,244,1|df9su0,131,277,0|dol29z,131,277,0|dol2a0,122,244,1|dy1q5z,122,244,1|dy1q60,131,277,0|e7eu9z,131,277,0|e7eua0,122,244,1|egvi5z,122,244,1|egvi60,131,277,0|eq6rlz,131,277,0|eq6rm0,122,244,1|eznfhz,122,244,1|eznfi0,131,277,0|f8yoxz,131,277,0|f8yoy0,122,244,1|fifctz,122,244,1|fifcu0,131,277,0|frqm9z,131,277,0|frqma0,122,244,1|g17a5z,122,244,1|g17a60,131,277,0|gake9z,131,277,0|gakea0,122,244,1|gk125z,122,244,1|gk1260,131,277,0|gtcblz,131,277,0|gtcbm0,122,244,1|h2szhz,122,244,1|h2szi0,131,277,0|hc48xz,131,277,0|hc48y0,122,244,1|hlkwtz,122,244,1|hlkwu0,131,277,0|huw69z,131,277,0|huw6a0,122,244,1|i4cu5z,122,244,1|i4cu60,131,277,0|idpy9z,131,277,0|idpya0,122,244,1|in6m5z,122,244,1|in6m60,131,277,0|jy1q9z,131,277,0|jy1qa0,122,244,1|k7ie5z,122,244,1|k7ie60,131,277,0|kgvi9z,131,277,0|kgvia0,122,244,1|kqc65z,122,244,1|kqc660,131,277,0|kznflz,131,277,0|kznfm0,122,244,1|l943hz,122,244,1|l943i0,131,277,0|lifcxz,131,277,0|lifcy0,122,244,1|lrw0tz,122,244,1|lrw0u0,131,277,0|m17a9z,131,277,0|m17aa0,122,244,1|many5z,122,244,1|many60,131,277,0|mk129z,131,277,0|mk12a0,122,244,1|mthq5z,122,244,1|mthq60,131,277,0|n2szlz,131,277,0|n2szm0,122,244,1|nc9nhz,122,244,1|nc9ni0,131,277,0|nlkwxz,131,277,0|nlkwy0,122,244,1|nv1ktz,122,244,1|nv1ku0,131,277,0|o4cu9z,131,277,0|o4cua0,122,244,1|odti5z,122,244,1|odti60,131,277,0|on6m9z,131,277,0|on6ma0,122,244,1|owna5z,122,244,1|owna60,131,277,0|p5yjlz,131,277,0|p5yjm0,122,244,1|pff7hz,122,244,1|pff7i0,131,277,0|poqgxz,131,277,0|poqgy0,122,244,1|py74tz,122,244,1|py74u0,131,277,0|q7ie9z,131,277,0|q7iea0,122,244,1|qgz25z,122,244,1|qgz260,131,277,0|qqc69z,131,277,0|qqc6a0,122,244,1|qzsu5z,122,244,1|qzsu60,131,277,0|r943lz,131,277,0|r943m0,122,244,1|rikrhz,122,244,1|rikri0,131,277,0|NaN,131,277,0",
        "Asia/Thimphu|,0,278,0|-bojclp,0,278,0|-bojclo,106,221,0|99fa1z,106,221,0|99fa20,92,188,0|NaN,92,188,0",
        "Asia/Tokyo|,0,279,0|-16snno1,0,279,0|-16snno0,114,216,0|-bb4901,114,216,0|-bb4900,132,187,1|-b49yc1,132,187,1|-b49yc0,114,216,0|-atu101,114,216,0|-atu100,132,187,1|-aljvo1,132,187,1|-aljvo0,114,216,0|-a9b501,114,216,0|-a9b500,132,187,1|-a2tt01,132,187,1|-a2tt00,114,216,0|-9ql2c1,114,216,0|-9ql2c0,132,187,1|-9k3qc1,132,187,1|-9k3qc0,114,216,0|NaN,114,216,0",
        "Asia/Tomsk|,0,280,0|-q3zbqg,0,280,0|-q3zbqf,92,188,0|-kmrco1,92,188,0|-kmrco0,86,183,0|5vav7z,86,183,0|5vav80,84,181,1|64pofz,84,181,1|64pog0,86,183,0|6e2sjz,86,183,0|6e2sk0,84,181,1|6nhlrz,84,181,1|6nhls0,86,183,0|6wupvz,86,183,0|6wupw0,84,181,1|769j3z,84,181,1|769j40,86,183,0|7fohvz,86,183,0|7fohw0,84,181,1|7p1orz,84,181,1|7p1os0,86,183,0|7yeq3z,86,183,0|7yeq40,84,181,1|87rrfz,84,181,1|87rrg0,86,183,0|8h4srz,86,183,0|8h4ss0,84,181,1|8qhu3z,84,181,1|8qhu40,86,183,0|8zuvfz,86,183,0|8zuvg0,84,181,1|997wrz,84,181,1|997ws0,86,183,0|9iky3z,86,183,0|9iky40,84,181,1|9rxzfz,84,181,1|9rxzg0,86,183,0|a1b0rz,86,183,0|a1b0s0,84,181,1|aao23z,84,181,1|aao240,86,183,0|ak13fz,86,183,0|ak13g0,84,181,1|atr3fz,84,181,1|atr3g0,86,183,0|b344rz,86,183,0|b344s0,86,183,1|bch8vz,86,183,1|bch8w0,92,188,0|bi8njz,92,188,0|bi8nk0,86,183,0|blu7fz,86,183,0|blu7g0,84,181,1|bv78rz,84,181,1|bv78s0,86,183,0|c4ka3z,86,183,0|c4ka40,84,181,1|cdxbfz,84,181,1|cdxbg0,86,183,0|cnacrz,86,183,0|cnacs0,84,181,1|cwne3z,84,181,1|cwne40,86,183,0|d60ffz,86,183,0|d60fg0,84,181,1|dfdgrz,84,181,1|dfdgs0,86,183,0|dp3grz,86,183,0|dp3gs0,84,181,1|dzwcrz,84,181,1|dzwcs0,86,183,0|e7tjfz,86,183,0|e7tjg0,84,181,1|eimffz,84,181,1|eimfg0,86,183,0|eqjm3z,86,183,0|eqjm40,84,181,1|f1ci3z,84,181,1|f1ci40,86,183,0|f99orz,86,183,0|f99os0,84,181,1|fkfjfz,84,181,1|fkfjg0,86,183,0|frzrfz,86,183,0|frzrg0,84,181,1|g35m3z,84,181,1|g35m40,86,183,0|gapu3z,86,183,0|gapu40,84,181,1|glvorz,84,181,1|glvos0,86,183,0|gtsvfz,86,183,0|gtsvg0,84,181,1|gvea3z,84,181,1|gvea40,86,183,1|h4lu7z,86,183,1|h4lu80,92,188,0|hcj0vz,92,188,0|hcj0w0,86,183,1|hnbwvz,86,183,1|hnbww0,92,188,0|hv93jz,92,188,0|hv93k0,86,183,1|i6ey7z,86,183,1|i6ey80,92,188,0|idz67z,92,188,0|idz680,86,183,1|ip50vz,86,183,1|ip50w0,92,188,0|iwp8vz,92,188,0|iwp8w0,86,183,1|j7v3jz,86,183,1|j7v3k0,92,188,0|jffbjz,92,188,0|jffbk0,86,183,1|jql67z,86,183,1|jql680,92,188,0|jyicvz,92,188,0|jyicw0,86,183,1|k9b8vz,86,183,1|k9b8w0,92,188,0|kh8fjz,92,188,0|kh8fk0,86,183,1|ks1bjz,86,183,1|ks1bk0,92,188,0|kzyi7z,92,188,0|kzyi80,86,183,1|lb4cvz,86,183,1|lb4cw0,92,188,0|liokvz,92,188,0|liokw0,86,183,0|ne0krz,86,183,0|ne0ks0,92,188,0|o7wkvz,92,188,0|o7wkw0,86,183,0|NaN,86,183,0",
        "Asia/Ulaanbaatar|,0,218,0|-xmcrsl,0,218,0|-xmcrsk,86,183,0|46akjz,86,183,0|46akk0,84,181,0|6wun3z,84,181,0|6wun40,105,216,1|769gbz,105,216,1|769gc0,84,181,0|7fof3z,84,181,0|7fof40,105,216,1|7p1dnz,105,216,1|7p1do0,84,181,0|7yehrz,84,181,0|7yehs0,105,216,1|87rgbz,105,216,1|87rgc0,84,181,0|8h4kfz,84,181,0|8h4kg0,105,216,1|8qhizz,105,216,1|8qhj00,84,181,0|8zun3z,84,181,0|8zun40,105,216,1|997lnz,105,216,1|997lo0,84,181,0|9ikprz,84,181,0|9ikps0,105,216,1|9rxobz,105,216,1|9rxoc0,84,181,0|a1asfz,84,181,0|a1asg0,105,216,1|aanqzz,105,216,1|aanr00,84,181,0|ak0v3z,84,181,0|ak0v40,105,216,1|atqsbz,105,216,1|atqsc0,84,181,0|b33wfz,84,181,0|b33wg0,105,216,1|bcguzz,105,216,1|bcgv00,84,181,0|bltz3z,84,181,0|bltz40,105,216,1|bv6xnz,105,216,1|bv6xo0,84,181,0|c4k1rz,84,181,0|c4k1s0,105,216,1|cdx0bz,105,216,1|cdx0c0,84,181,0|cna4fz,84,181,0|cna4g0,105,216,1|cwn2zz,105,216,1|cwn300,84,181,0|d6073z,84,181,0|d60740,105,216,1|dfd5nz,105,216,1|dfd5o0,84,181,0|dp38fz,84,181,0|dp38g0,105,216,1|dyg6zz,105,216,1|dyg700,84,181,0|e7tb3z,84,181,0|e7tb40,105,216,1|eh69nz,105,216,1|eh69o0,84,181,0|eqjdrz,84,181,0|eqjds0,105,216,1|ezwcbz,105,216,1|ezwcc0,84,181,0|gcgpzz,84,181,0|gcgq00,105,216,1|gkdtvz,105,216,1|gkdtw0,84,181,0|gtqxzz,84,181,0|gtqy00,105,216,1|h33wjz,105,216,1|h33wk0,84,181,0|hch0nz,84,181,0|hch0o0,105,216,1|hltz7z,105,216,1|hltz80,84,181,0|hv73bz,84,181,0|hv73c0,105,216,1|i4k1vz,105,216,1|i4k1w0,84,181,0|idx5zz,84,181,0|idx600,105,216,1|ina4jz,105,216,1|ina4k0,84,181,0|iwn8nz,84,181,0|iwn8o0,105,216,1|j6d5vz,105,216,1|j6d5w0,84,181,0|nlvtzz,84,181,0|nlvu00,105,216,1|nv8mzz,105,216,1|nv8n00,84,181,0|o4lwnz,84,181,0|o4lwo0,105,216,1|odypnz,105,216,1|odypo0,84,181,0|NaN,84,181,0",
        "Asia/Urumqi|,0,281,0|-lx5pjx,0,281,0|-lx5pjw,92,188,0|NaN,92,188,0",
        "Asia/Ust-Nera|,0,282,0|-q4cl6v,0,282,0|-q4cl6u,84,181,0|-kmri81,84,181,0|-kmri80,105,216,0|5vapnz,105,216,0|5vapo0,99,192,1|64pdbz,99,192,1|64pdc0,85,182,0|6e2hfz,85,182,0|6e2hg0,99,192,1|6nhanz,99,192,1|6nhao0,85,182,0|6wuerz,85,182,0|6wues0,99,192,1|7697zz,99,192,1|769800,85,182,0|7fo6rz,85,182,0|7fo6s0,99,192,1|7p1dnz,99,192,1|7p1do0,85,182,0|7yeezz,85,182,0|7yef00,99,192,1|87rgbz,99,192,1|87rgc0,85,182,0|8h4hnz,85,182,0|8h4ho0,99,192,1|8qhizz,99,192,1|8qhj00,85,182,0|8zukbz,85,182,0|8zukc0,99,192,1|997lnz,99,192,1|997lo0,85,182,0|9ikmzz,85,182,0|9ikn00,99,192,1|9rxobz,99,192,1|9rxoc0,85,182,0|a1apnz,85,182,0|a1apo0,99,192,1|aanqzz,99,192,1|aanr00,85,182,0|ak0sbz,85,182,0|ak0sc0,99,192,1|atqsbz,99,192,1|atqsc0,85,182,0|b33tnz,85,182,0|b33to0,85,182,1|bcgxrz,85,182,1|bcgxs0,89,187,0|bi8cfz,89,187,0|bi8cg0,85,182,0|bltwbz,85,182,0|bltwc0,99,192,1|bv6xnz,99,192,1|bv6xo0,85,182,0|c4jyzz,85,182,0|c4jz00,99,192,1|cdx0bz,99,192,1|cdx0c0,85,182,0|cna1nz,85,182,0|cna1o0,99,192,1|cwn2zz,99,192,1|cwn300,85,182,0|d604bz,85,182,0|d604c0,99,192,1|dfd5nz,99,192,1|dfd5o0,85,182,0|dp35nz,85,182,0|dp35o0,99,192,1|dzw1nz,99,192,1|dzw1o0,85,182,0|e7t8bz,85,182,0|e7t8c0,99,192,1|eim4bz,99,192,1|eim4c0,85,182,0|eqjazz,85,182,0|eqjb00,99,192,1|f1c6zz,99,192,1|f1c700,85,182,0|f99dnz,85,182,0|f99do0,99,192,1|fkf8bz,99,192,1|fkf8c0,85,182,0|frzgbz,85,182,0|frzgc0,99,192,1|g35azz,99,192,1|g35b00,85,182,0|gapizz,85,182,0|gapj00,99,192,1|glvdnz,99,192,1|glvdo0,85,182,0|gtskbz,85,182,0|gtskc0,99,192,1|h4lgbz,99,192,1|h4lgc0,85,182,0|hcimzz,85,182,0|hcin00,99,192,1|hnbizz,99,192,1|hnbj00,85,182,0|hv8pnz,85,182,0|hv8po0,99,192,1|i6ekbz,99,192,1|i6ekc0,85,182,0|idysbz,85,182,0|idysc0,99,192,1|ip4mzz,99,192,1|ip4n00,85,182,0|iwouzz,85,182,0|iwov00,99,192,1|j7upnz,99,192,1|j7upo0,85,182,0|jfexnz,85,182,0|jfexo0,99,192,1|jqksbz,99,192,1|jqksc0,85,182,0|jyhyzz,85,182,0|jyhz00,99,192,1|k9auzz,99,192,1|k9av00,85,182,0|kh81nz,85,182,0|kh81o0,99,192,1|ks0xnz,99,192,1|ks0xo0,85,182,0|kzy4bz,85,182,0|kzy4c0,99,192,1|lb3yzz,99,192,1|lb3z00,85,182,0|lio6zz,85,182,0|lio700,99,192,0|lrerzz,99,192,0|lres00,85,182,0|ne09nz,85,182,0|ne09o0,89,187,0|NaN,89,187,0",
        "Asia/Vientiane|,0,209,0|-1ayyla5,0,209,0|-1ayyla4,53,209,0|-pysda5,53,209,0|-pysda4,86,183,0|NaN,86,183,0",
        "Asia/Vladivostok|,0,283,0|-oligf8,0,283,0|-oligf7,105,216,0|-kmrl01,105,216,0|-kmrl00,89,187,0|5vamvz,89,187,0|5vamw0,85,182,1|64pg3z,85,182,1|64pg40,89,187,0|6e2k7z,89,187,0|6e2k80,85,182,1|6nhdfz,85,182,1|6nhdg0,89,187,0|6wuhjz,89,187,0|6wuhk0,85,182,1|769arz,85,182,1|769as0,89,187,0|7fo9jz,89,187,0|7fo9k0,85,182,1|7p1gfz,85,182,1|7p1gg0,89,187,0|7yehrz,89,187,0|7yehs0,85,182,1|87rj3z,85,182,1|87rj40,89,187,0|8h4kfz,89,187,0|8h4kg0,85,182,1|8qhlrz,85,182,1|8qhls0,89,187,0|8zun3z,89,187,0|8zun40,85,182,1|997ofz,85,182,1|997og0,89,187,0|9ikprz,89,187,0|9ikps0,85,182,1|9rxr3z,85,182,1|9rxr40,89,187,0|a1asfz,89,187,0|a1asg0,85,182,1|aantrz,85,182,1|aants0,89,187,0|ak0v3z,89,187,0|ak0v40,85,182,1|atqv3z,85,182,1|atqv40,89,187,0|b33wfz,89,187,0|b33wg0,89,187,1|bch0jz,89,187,1|bch0k0,105,216,0|bi8f7z,105,216,0|bi8f80,89,187,0|bltz3z,89,187,0|bltz40,85,182,1|bv70fz,85,182,1|bv70g0,89,187,0|c4k1rz,89,187,0|c4k1s0,85,182,1|cdx33z,85,182,1|cdx340,89,187,0|cna4fz,89,187,0|cna4g0,85,182,1|cwn5rz,85,182,1|cwn5s0,89,187,0|d6073z,89,187,0|d60740,85,182,1|dfd8fz,85,182,1|dfd8g0,89,187,0|dp38fz,89,187,0|dp38g0,85,182,1|dzw4fz,85,182,1|dzw4g0,89,187,0|e7tb3z,89,187,0|e7tb40,85,182,1|eim73z,85,182,1|eim740,89,187,0|eqjdrz,89,187,0|eqjds0,85,182,1|f1c9rz,85,182,1|f1c9s0,89,187,0|f99gfz,89,187,0|f99gg0,85,182,1|fkfb3z,85,182,1|fkfb40,89,187,0|frzj3z,89,187,0|frzj40,85,182,1|g35drz,85,182,1|g35ds0,89,187,0|gaplrz,89,187,0|gapls0,85,182,1|glvgfz,85,182,1|glvgg0,89,187,0|gtsn3z,89,187,0|gtsn40,85,182,1|h4lj3z,85,182,1|h4lj40,89,187,0|hciprz,89,187,0|hcips0,85,182,1|hnblrz,85,182,1|hnbls0,89,187,0|hv8sfz,89,187,0|hv8sg0,85,182,1|i6en3z,85,182,1|i6en40,89,187,0|idyv3z,89,187,0|idyv40,85,182,1|ip4prz,85,182,1|ip4ps0,89,187,0|iwoxrz,89,187,0|iwoxs0,85,182,1|j7usfz,85,182,1|j7usg0,89,187,0|jff0fz,89,187,0|jff0g0,85,182,1|jqkv3z,85,182,1|jqkv40,89,187,0|jyi1rz,89,187,0|jyi1s0,85,182,1|k9axrz,85,182,1|k9axs0,89,187,0|kh84fz,89,187,0|kh84g0,85,182,1|ks10fz,85,182,1|ks10g0,89,187,0|kzy73z,89,187,0|kzy740,85,182,1|lb41rz,85,182,1|lb41s0,89,187,0|lio9rz,89,187,0|lio9s0,85,182,0|ne09nz,85,182,0|ne09o0,89,187,0|NaN,89,187,0",
        "Asia/Yakutsk|,0,284,0|-q4cioz,0,284,0|-q4cioy,84,181,0|-kmri81,84,181,0|-kmri80,105,216,0|5vapnz,105,216,0|5vapo0,89,187,1|64pivz,89,187,1|64piw0,105,216,0|6e2mzz,105,216,0|6e2n00,89,187,1|6nhg7z,89,187,1|6nhg80,105,216,0|6wukbz,105,216,0|6wukc0,89,187,1|769djz,89,187,1|769dk0,105,216,0|7focbz,105,216,0|7focc0,89,187,1|7p1j7z,89,187,1|7p1j80,105,216,0|7yekjz,105,216,0|7yekk0,89,187,1|87rlvz,89,187,1|87rlw0,105,216,0|8h4n7z,105,216,0|8h4n80,89,187,1|8qhojz,89,187,1|8qhok0,105,216,0|8zupvz,105,216,0|8zupw0,89,187,1|997r7z,89,187,1|997r80,105,216,0|9iksjz,105,216,0|9iksk0,89,187,1|9rxtvz,89,187,1|9rxtw0,105,216,0|a1av7z,105,216,0|a1av80,89,187,1|aanwjz,89,187,1|aanwk0,105,216,0|ak0xvz,105,216,0|ak0xw0,89,187,1|atqxvz,89,187,1|atqxw0,105,216,0|b33z7z,105,216,0|b33z80,105,216,1|bch3bz,105,216,1|bch3c0,84,181,0|bi8hzz,84,181,0|bi8i00,105,216,0|blu1vz,105,216,0|blu1w0,89,187,1|bv737z,89,187,1|bv7380,105,216,0|c4k4jz,105,216,0|c4k4k0,89,187,1|cdx5vz,89,187,1|cdx5w0,105,216,0|cna77z,105,216,0|cna780,89,187,1|cwn8jz,89,187,1|cwn8k0,105,216,0|d609vz,105,216,0|d609w0,89,187,1|dfdb7z,89,187,1|dfdb80,105,216,0|dp3b7z,105,216,0|dp3b80,89,187,1|dzw77z,89,187,1|dzw780,105,216,0|e7tdvz,105,216,0|e7tdw0,89,187,1|eim9vz,89,187,1|eim9w0,105,216,0|eqjgjz,105,216,0|eqjgk0,89,187,1|f1ccjz,89,187,1|f1cck0,105,216,0|f99j7z,105,216,0|f99j80,89,187,1|fkfdvz,89,187,1|fkfdw0,105,216,0|frzlvz,105,216,0|frzlw0,89,187,1|g35gjz,89,187,1|g35gk0,105,216,0|gapojz,105,216,0|gapok0,89,187,1|glvj7z,89,187,1|glvj80,105,216,0|gtspvz,105,216,0|gtspw0,89,187,1|h4llvz,89,187,1|h4llw0,105,216,0|hcisjz,105,216,0|hcisk0,89,187,1|hnbojz,89,187,1|hnbok0,105,216,0|hv8v7z,105,216,0|hv8v80,89,187,1|i6epvz,89,187,1|i6epw0,105,216,0|idyxvz,105,216,0|idyxw0,89,187,1|ip4sjz,89,187,1|ip4sk0,105,216,0|iwp0jz,105,216,0|iwp0k0,89,187,1|j7uv7z,89,187,1|j7uv80,105,216,0|jff37z,105,216,0|jff380,89,187,1|jqkxvz,89,187,1|jqkxw0,105,216,0|jyi4jz,105,216,0|jyi4k0,89,187,1|k9b0jz,89,187,1|k9b0k0,105,216,0|kh877z,105,216,0|kh8780,89,187,1|ks137z,89,187,1|ks1380,105,216,0|kzy9vz,105,216,0|kzy9w0,89,187,1|lb44jz,89,187,1|lb44k0,105,216,0|liocjz,105,216,0|liock0,89,187,0|ne0cfz,89,187,0|ne0cg0,105,216,0|NaN,105,216,0",
        "Asia/Yangon|,0,285,0|-1ayykhc,0,285,0|-1ayykhb,133,285,0|-q3gv5c,133,285,0|-q3gv5b,107,222,0|-efx621,107,222,0|-efx620,105,216,0|-cvg101,105,216,0|-cvg100,107,222,0|NaN,107,222,0",
        "Asia/Yekaterinburg|,0,286,0|-rx5hwa,0,286,0|-rx5hw9,5,287,0|-qc75z6,5,287,0|-qc75z5,102,201,0|-kmr741,102,201,0|-kmr740,87,184,0|5vb0rz,87,184,0|5vb0s0,92,188,1|64ptzz,92,188,1|64pu00,87,184,0|6e2y3z,87,184,0|6e2y40,92,188,1|6nhrbz,92,188,1|6nhrc0,87,184,0|6wuvfz,87,184,0|6wuvg0,92,188,1|769onz,92,188,1|769oo0,87,184,0|7fonfz,87,184,0|7fong0,92,188,1|7p1ubz,92,188,1|7p1uc0,87,184,0|7yevnz,87,184,0|7yevo0,92,188,1|87rwzz,92,188,1|87rx00,87,184,0|8h4ybz,87,184,0|8h4yc0,92,188,1|8qhznz,92,188,1|8qhzo0,87,184,0|8zv0zz,87,184,0|8zv100,92,188,1|9982bz,92,188,1|9982c0,87,184,0|9il3nz,87,184,0|9il3o0,92,188,1|9ry4zz,92,188,1|9ry500,87,184,0|a1b6bz,87,184,0|a1b6c0,92,188,1|aao7nz,92,188,1|aao7o0,87,184,0|ak18zz,87,184,0|ak1900,92,188,1|atr8zz,92,188,1|atr900,87,184,0|b34abz,87,184,0|b34ac0,87,184,1|bchefz,87,184,1|bcheg0,102,201,0|bi8t3z,102,201,0|bi8t40,87,184,0|bluczz,87,184,0|blud00,92,188,1|bv7ebz,92,188,1|bv7ec0,87,184,0|c4kfnz,87,184,0|c4kfo0,92,188,1|cdxgzz,92,188,1|cdxh00,87,184,0|cnaibz,87,184,0|cnaic0,92,188,1|cwnjnz,92,188,1|cwnjo0,87,184,0|d60kzz,87,184,0|d60l00,92,188,1|dfdmbz,92,188,1|dfdmc0,87,184,0|dp3mbz,87,184,0|dp3mc0,92,188,1|dzwibz,92,188,1|dzwic0,87,184,0|e7tozz,87,184,0|e7tp00,92,188,1|eimkzz,92,188,1|eiml00,87,184,0|eqjrnz,87,184,0|eqjro0,92,188,1|f1cnnz,92,188,1|f1cno0,87,184,0|f99ubz,87,184,0|f99uc0,92,188,1|fkfozz,92,188,1|fkfp00,87,184,0|frzwzz,87,184,0|frzx00,92,188,1|g35rnz,92,188,1|g35ro0,87,184,0|gapznz,87,184,0|gapzo0,92,188,1|glvubz,92,188,1|glvuc0,87,184,0|gtt0zz,87,184,0|gtt100,92,188,1|h4lwzz,92,188,1|h4lx00,87,184,0|hcj3nz,87,184,0|hcj3o0,92,188,1|hnbznz,92,188,1|hnbzo0,87,184,0|hv96bz,87,184,0|hv96c0,92,188,1|i6f0zz,92,188,1|i6f100,87,184,0|idz8zz,87,184,0|idz900,92,188,1|ip53nz,92,188,1|ip53o0,87,184,0|iwpbnz,87,184,0|iwpbo0,92,188,1|j7v6bz,92,188,1|j7v6c0,87,184,0|jffebz,87,184,0|jffec0,92,188,1|jql8zz,92,188,1|jql900,87,184,0|jyifnz,87,184,0|jyifo0,92,188,1|k9bbnz,92,188,1|k9bbo0,87,184,0|kh8ibz,87,184,0|kh8ic0,92,188,1|ks1ebz,92,188,1|ks1ec0,87,184,0|kzykzz,87,184,0|kzyl00,92,188,1|lb4fnz,92,188,1|lb4fo0,87,184,0|lionnz,87,184,0|liono0,92,188,0|ne0njz,92,188,0|ne0nk0,87,184,0|NaN,87,184,0",
        "Asia/Yerevan|,0,288,0|-nu148p,0,288,0|-nu148o,96,4,0|-6p7kc1,96,4,0|-6p7kc0,102,201,0|5vb3jz,102,201,0|5vb3k0,87,184,1|64pwrz,87,184,1|64pws0,102,201,0|6e30vz,102,201,0|6e30w0,87,184,1|6nhu3z,87,184,1|6nhu40,102,201,0|6wuy7z,102,201,0|6wuy80,87,184,1|769rfz,87,184,1|769rg0,102,201,0|7foq7z,102,201,0|7foq80,87,184,1|7p1x3z,87,184,1|7p1x40,102,201,0|7yeyfz,102,201,0|7yeyg0,87,184,1|87rzrz,87,184,1|87rzs0,102,201,0|8h513z,102,201,0|8h5140,87,184,1|8qi2fz,87,184,1|8qi2g0,102,201,0|8zv3rz,102,201,0|8zv3s0,87,184,1|99853z,87,184,1|998540,102,201,0|9il6fz,102,201,0|9il6g0,87,184,1|9ry7rz,87,184,1|9ry7s0,102,201,0|a1b93z,102,201,0|a1b940,87,184,1|aaoafz,87,184,1|aaoag0,102,201,0|ak1brz,102,201,0|ak1bs0,87,184,1|atrbrz,87,184,1|atrbs0,102,201,0|b34d3z,102,201,0|b34d40,102,201,1|bchh7z,102,201,1|bchh80,96,4,0|bluijz,96,4,0|bluik0,102,201,1|bv7jvz,102,201,1|bv7jw0,96,4,0|c4kl7z,96,4,0|c4kl80,102,201,1|cdxmjz,102,201,1|cdxmk0,96,4,0|cnanvz,96,4,0|cnanw0,102,201,1|cwnp7z,102,201,1|cwnp80,96,4,0|d60qjz,96,4,0|d60qk0,102,201,1|dfdrvz,102,201,1|dfdrw0,102,201,0|e7trrz,102,201,0|e7trs0,87,184,1|eimnrz,87,184,1|eimns0,102,201,0|eqjufz,102,201,0|eqjug0,87,184,1|f1cqfz,87,184,1|f1cqg0,102,201,0|f99x3z,102,201,0|f99x40,87,184,1|fkfrrz,87,184,1|fkfrs0,102,201,0|frzzrz,102,201,0|frzzs0,87,184,1|g35ufz,87,184,1|g35ug0,102,201,0|gaq2fz,102,201,0|gaq2g0,87,184,1|glvx3z,87,184,1|glvx40,102,201,0|gtt3rz,102,201,0|gtt3s0,87,184,1|h4lzrz,87,184,1|h4lzs0,102,201,0|hcj6fz,102,201,0|hcj6g0,87,184,1|hnc2fz,87,184,1|hnc2g0,102,201,0|hv993z,102,201,0|hv9940,87,184,1|i6f3rz,87,184,1|i6f3s0,102,201,0|idzbrz,102,201,0|idzbs0,87,184,1|ip56fz,87,184,1|ip56g0,102,201,0|iwpefz,102,201,0|iwpeg0,87,184,1|j7v93z,87,184,1|j7v940,102,201,0|jffh3z,102,201,0|jffh40,87,184,1|jqlbrz,87,184,1|jqlbs0,102,201,0|jyiifz,102,201,0|jyiig0,87,184,1|k9befz,87,184,1|k9beg0,102,201,0|kh8l3z,102,201,0|kh8l40,87,184,1|ks1h3z,87,184,1|ks1h40,102,201,0|kzynrz,102,201,0|kzyns0,87,184,1|lb4ifz,87,184,1|lb4ig0,102,201,0|lioqfz,102,201,0|lioqg0,87,184,1|ltul3z,87,184,1|ltul40,102,201,0|NaN,102,201,0",
        "Atlantic/Azores|,0,289,0|-18vsdwx,0,289,0|-18vsdww,76,290,0|-u9rbs1,76,290,0|-u9rbs0,39,43,0|-rxwvw1,39,43,0|-rxwvw0,12,13,1|-rqwyg1,12,13,1|-rqwyg0,39,43,0|-rkqqg1,39,43,0|-rkqqg0,12,13,1|-r90l81,12,13,1|-r90l80,39,43,0|-r1yt41,39,43,0|-r1yt40,12,13,1|-qq8nw1,12,13,1|-qq8nw0,39,43,0|-qj6vs1,39,43,0|-qj6vs0,12,13,1|-q7gqk1,12,13,1|-q7gqk0,39,43,0|-q0d3s1,39,43,0|-q0d3s0,12,13,1|-pomyk1,12,13,1|-pomyk0,39,43,0|-phl6g1,39,43,0|-phl6g0,12,13,1|-p5v181,12,13,1|-p5v180,39,43,0|-nusl81,39,43,0|-nusl80,12,13,1|-nlzx81,12,13,1|-nlzx80,39,43,0|-mt6vw1,39,43,0|-mt6vw0,12,13,1|-mkjrw1,12,13,1|-mkjrw0,39,43,0|-matrw1,39,43,0|-matrw0,12,13,1|-m1tp81,12,13,1|-m1tp80,39,43,0|-lrqqk1,39,43,0|-lrqqk0,12,13,1|-liqnw1,12,13,1|-liqnw0,39,43,0|-l8np81,39,43,0|-l8np80,12,13,1|-l00l81,12,13,1|-l00l80,39,43,0|-k77jw1,39,43,0|-k77jw0,12,13,1|-jykfw1,12,13,1|-jykfw0,39,43,0|-jp7ek1,39,43,0|-jp7ek0,12,13,1|-jfud81,12,13,1|-jfud80,39,43,0|-ineak1,39,43,0|-ineak0,12,13,1|-ie1981,12,13,1|-ie1980,39,43,0|-i516k1,39,43,0|-i516k0,12,13,1|-hvb6k1,12,13,1|-hvb6k0,39,43,0|-hl87w1,39,43,0|-hl87w0,12,13,1|-hcl3w1,12,13,1|-hcl3w0,39,43,0|-h382k1,39,43,0|-h382k0,12,13,1|-gtv181,12,13,1|-gtv180,39,43,0|-gkuyk1,39,43,0|-gkuyk0,12,13,1|-gb4yk1,12,13,1|-gb4yk0,39,43,0|-g11zw1,39,43,0|-g11zw0,12,13,1|-fpw581,12,13,1|-fpw580,39,43,0|-fkunw1,39,43,0|-fkunw0,12,13,1|-f98581,12,13,1|-f98580,39,43,0|-ezyt81,39,43,0|-ezyt80,12,13,1|-eqjx81,12,13,1|-eqjx80,39,43,0|-eibmk1,39,43,0|-eibmk0,12,13,1|-eg5xc1,12,13,1|-eg5xc0,16,1,1|-eaeio1,16,1,1|-eaeio0,12,13,1|-e6st81,12,13,1|-e6st80,39,43,0|-dzljw1,39,43,0|-dzljw0,12,13,1|-dxstc1,12,13,1|-dxstc0,16,1,1|-dqyio1,16,1,1|-dqyio0,12,13,1|-dnprw1,12,13,1|-dnprw0,39,43,0|-dgvh81,39,43,0|-dgvh80,12,13,1|-deps01,12,13,1|-deps00,16,1,1|-d88g01,16,1,1|-d88g00,12,13,1|-d4zp81,12,13,1|-d4zp80,39,43,0|-cy5ek1,39,43,0|-cy5ek0,12,13,1|-cvzpc1,12,13,1|-cvzpc0,16,1,1|-cpidc1,16,1,1|-cpidc0,12,13,1|-cm9mk1,12,13,1|-cm9mk0,39,43,0|-cdzh81,39,43,0|-cdzh80,12,13,1|-c4mfw1,12,13,1|-c4mfw0,39,43,0|-bv9681,39,43,0|-bv9680,12,13,1|-blw4w1,12,13,1|-blw4w0,39,43,0|-bcj3k1,39,43,0|-bcj3k0,12,13,1|-b36281,12,13,1|-b36280,39,43,0|-att0w1,39,43,0|-att0w0,12,13,1|-akfzk1,12,13,1|-akfzk0,39,43,0|-ab2y81,39,43,0|-ab2y80,12,13,1|-a1pww1,12,13,1|-a1pww0,39,43,0|-9scvk1,39,43,0|-9scvk0,12,13,1|-9imvk1,12,13,1|-9imvk0,39,43,0|-999u81,39,43,0|-999u80,12,13,1|-8zwsw1,12,13,1|-8zwsw0,39,43,0|-8qjrk1,39,43,0|-8qjrk0,12,13,1|-8h6q81,12,13,1|-8h6q80,39,43,0|-87tow1,39,43,0|-87tow0,12,13,1|-7ygnk1,12,13,1|-7ygnk0,39,43,0|-7p3m81,39,43,0|-7p3m80,12,13,1|-7fqkw1,12,13,1|-7fqkw0,39,43,0|-76djk1,39,43,0|-76djk0,12,13,1|-6wnjk1,12,13,1|-6wnjk0,39,43,0|-6nai81,39,43,0|-6nai80,12,13,1|-6dxgw1,12,13,1|-6dxgw0,39,43,0|-64kfk1,39,43,0|-64kfk0,12,13,1|-5v7e81,12,13,1|-5v7e80,39,43,0|-5lucw1,39,43,0|-5lucw0,12,13,1|-5chbk1,12,13,1|-5chbk0,39,43,0|-534a81,39,43,0|-534a80,12,13,1|-4tr8w1,12,13,1|-4tr8w0,39,43,0|-4ke7k1,39,43,0|-4ke7k0,12,13,1|-4b1681,12,13,1|-4b1680,39,43,0|-41o4w1,39,43,0|-41o4w0,12,13,1|-3ry4w1,12,13,1|-3ry4w0,39,43,0|-3il3k1,39,43,0|-3il3k0,12,13,1|-398281,12,13,1|-398280,39,43,0|-2zv0w1,39,43,0|-2zv0w0,12,13,1|-2qhzk1,12,13,1|-2qhzk0,39,43,0|-2h4y81,39,43,0|-2h4y80,12,13,1|-27rww1,12,13,1|-27rww0,39,43,0|-1yevk1,39,43,0|-1yevk0,12,13,1|-1p1u81,12,13,1|-1p1u80,12,13,0|6dw03z,12,13,0|6dw040,16,1,1|6n91fz,16,1,1|6n91g0,12,13,0|6wm2rz,12,13,0|6wm2s0,16,1,1|75z43z,16,1,1|75z440,12,13,0|7fc5fz,12,13,0|7fc5g0,16,1,1|7p25fz,16,1,1|7p25g0,12,13,0|7yf6rz,12,13,0|7yf6s0,16,1,1|87s83z,16,1,1|87s840,12,13,0|8h59fz,12,13,0|8h59g0,16,1,1|8qiarz,16,1,1|8qias0,12,13,0|8zvc3z,12,13,0|8zvc40,16,1,1|998dfz,16,1,1|998dg0,12,13,0|9ilerz,12,13,0|9iles0,16,1,1|9ryg3z,16,1,1|9ryg40,12,13,0|a1bhfz,12,13,0|a1bhg0,16,1,1|aaoirz,16,1,1|aaois0,12,13,0|ak1k3z,12,13,0|ak1k40,16,1,1|atrk3z,16,1,1|atrk40,12,13,0|b34lfz,12,13,0|b34lg0,16,1,1|bchmrz,16,1,1|bchms0,12,13,0|bluo3z,12,13,0|bluo40,16,1,1|bv7pfz,16,1,1|bv7pg0,12,13,0|bzwavz,12,13,0|bzwaw0,6,1,0|c4kqrz,6,1,0|c4kqs0,7,8,1|c8qqrz,7,8,1|c8qqs0,16,1,1|cdxs3z,16,1,1|cdxs40,12,13,0|cnatfz,12,13,0|cnatg0,16,1,1|cwnurz,16,1,1|cwnus0,12,13,0|d60w3z,12,13,0|d60w40,16,1,1|dfdxfz,16,1,1|dfdxg0,12,13,0|dp3xfz,12,13,0|dp3xg0,16,1,1|dzwtfz,16,1,1|dzwtg0,12,13,0|e7u03z,12,13,0|e7u040,16,1,1|eimw3z,16,1,1|eimw40,12,13,0|eqk2rz,12,13,0|eqk2s0,16,1,1|f1cyrz,16,1,1|f1cys0,12,13,0|f9a5fz,12,13,0|f9a5g0,16,1,1|fkg03z,16,1,1|fkg040,12,13,0|fs083z,12,13,0|fs0840,16,1,1|g362rz,16,1,1|g362s0,12,13,0|gaqarz,12,13,0|gaqas0,16,1,1|glw5fz,16,1,1|glw5g0,12,13,0|gttc3z,12,13,0|gttc40,16,1,1|h4m83z,16,1,1|h4m840,12,13,0|hcjerz,12,13,0|hcjes0,16,1,1|hncarz,16,1,1|hncas0,12,13,0|hv9hfz,12,13,0|hv9hg0,16,1,1|i6fc3z,16,1,1|i6fc40,12,13,0|idzk3z,12,13,0|idzk40,16,1,1|ip5erz,16,1,1|ip5es0,12,13,0|iwpmrz,12,13,0|iwpms0,16,1,1|j7vhfz,16,1,1|j7vhg0,12,13,0|jffpfz,12,13,0|jffpg0,16,1,1|jqlk3z,16,1,1|jqlk40,12,13,0|jyiqrz,12,13,0|jyiqs0,16,1,1|k9bmrz,16,1,1|k9bms0,12,13,0|kh8tfz,12,13,0|kh8tg0,16,1,1|ks1pfz,16,1,1|ks1pg0,12,13,0|kzyw3z,12,13,0|kzyw40,16,1,1|lb4qrz,16,1,1|lb4qs0,12,13,0|lioyrz,12,13,0|lioys0,16,1,1|ltutfz,16,1,1|ltutg0,12,13,0|m1f1fz,12,13,0|m1f1g0,16,1,1|mckw3z,16,1,1|mckw40,12,13,0|mki2rz,12,13,0|mki2s0,16,1,1|mvayrz,16,1,1|mvays0,12,13,0|n385fz,12,13,0|n385g0,16,1,1|ne11fz,16,1,1|ne11g0,12,13,0|nly83z,12,13,0|nly840,16,1,1|nwr43z,16,1,1|nwr440,12,13,0|o4oarz,12,13,0|o4oas0,16,1,1|ofu5fz,16,1,1|ofu5g0,12,13,0|onedfz,12,13,0|onedg0,16,1,1|oyk83z,16,1,1|oyk840,12,13,0|p64g3z,12,13,0|p64g40,16,1,1|phaarz,16,1,1|phaas0,12,13,0|pp7hfz,12,13,0|pp7hg0,16,1,1|q00dfz,16,1,1|q00dg0,12,13,0|q7xk3z,12,13,0|q7xk40,16,1,1|qiqg3z,16,1,1|qiqg40,12,13,0|qqnmrz,12,13,0|qqnms0,16,1,1|r1thfz,16,1,1|r1thg0,12,13,0|r9dpfz,12,13,0|r9dpg0,16,1,1|rkjk3z,16,1,1|rkjk40,12,13,0|rs3s3z,12,13,0|rs3s40,16,1,1|s39mrz,16,1,1|s39ms0,12,13,0|sb6tfz,12,13,0|sb6tg0,16,1,1|slzpfz,16,1,1|slzpg0,12,13,0|stww3z,12,13,0|stww40,16,1,1|t4ps3z,16,1,1|t4ps40,12,13,0|tcmyrz,12,13,0|tcmys0,16,1,1|tnfurz,16,1,1|tnfus0,12,13,0|tvd1fz,12,13,0|tvd1g0,16,1,1|u6iw3z,16,1,1|u6iw40,12,13,0|ue343z,12,13,0|ue3440,16,1,1|up8yrz,16,1,1|up8ys0,12,13,0|uwt6rz,12,13,0|uwt6s0,16,1,1|v7z1fz,16,1,1|v7z1g0,12,13,0|vfw83z,12,13,0|vfw840,16,1,1|vqp43z,16,1,1|vqp440,12,13,0|vymarz,12,13,0|vymas0,16,1,1|w9f6rz,16,1,1|w9f6s0,12,13,0|whcdfz,12,13,0|whcdg0,16,1,1|wsi83z,16,1,1|wsi840,12,13,0|x02g3z,12,13,0|x02g40,16,1,1|xb8arz,16,1,1|xb8as0,12,13,0|xisirz,12,13,0|xisis0,16,1,1|xtydfz,16,1,1|xtydg0,12,13,0|y1ilfz,12,13,0|y1ilg0,16,1,1|ycog3z,16,1,1|ycog40,12,13,0|yklmrz,12,13,0|yklms0,16,1,1|yveirz,16,1,1|yveis0,12,13,0|z3bpfz,12,13,0|z3bpg0,16,1,1|ze4lfz,16,1,1|ze4lg0,12,13,0|zm1s3z,12,13,0|zm1s40,16,1,1|zx7mrz,16,1,1|zx7ms0,12,13,0|104rurz,12,13,0|104rus0,16,1,1|10fxpfz,16,1,1|10fxpg0,12,13,0|10nhxfz,12,13,0|10nhxg0,16,1,1|10yns3z,16,1,1|10yns40,12,13,0|116kyrz,12,13,0|116kys0,16,1,1|11hdurz,16,1,1|11hdus0,12,13,0|11pb1fz,12,13,0|11pb1g0,16,1,1|1203xfz,16,1,1|1203xg0,12,13,0|128143z,12,13,0|1281440,16,1,1|12iu03z,16,1,1|12iu040,12,13,0|12qr6rz,12,13,0|12qr6s0,16,1,1|131x1fz,16,1,1|131x1g0,12,13,0|139h9fz,12,13,0|139h9g0,16,1,1|13kn43z,16,1,1|13kn440,12,13,0|13s7c3z,12,13,0|13s7c40,16,1,1|143d6rz,16,1,1|143d6s0,12,13,0|14badfz,12,13,0|14badg0,16,1,1|14m39fz,16,1,1|14m39g0,12,13,0|14u0g3z,12,13,0|14u0g40,16,1,1|154tc3z,16,1,1|154tc40,12,13,0|15cqirz,12,13,0|15cqis0,16,1,1|15nwdfz,16,1,1|15nwdg0,12,13,0|15vglfz,12,13,0|15vglg0,16,1,1|166mg3z,16,1,1|166mg40,12,13,0|16e6o3z,12,13,0|16e6o40,16,1,1|16pcirz,16,1,1|16pcis0,12,13,0|16x9pfz,12,13,0|16x9pg0,16,1,1|1782lfz,16,1,1|1782lg0,12,13,0|17fzs3z,12,13,0|17fzs40,16,1,1|17qso3z,16,1,1|17qso40,12,13,0|17ypurz,12,13,0|17ypus0,16,1,1|189iqrz,16,1,1|189iqs0,12,13,0|18hfxfz,12,13,0|18hfxg0,16,1,1|18sls3z,16,1,1|18sls40,12,13,0|190603z,12,13,0|1906040,16,1,1|19bburz,16,1,1|19bbus0,12,13,0|19iw2rz,12,13,0|19iw2s0,16,1,1|19u1xfz,16,1,1|19u1xg0,12,13,0|1a1z43z,12,13,0|1a1z440,16,1,1|1acs03z,16,1,1|1acs040,12,13,0|1akp6rz,12,13,0|1akp6s0,16,1,1|1avi2rz,16,1,1|1avi2s0,12,13,0|1b3f9fz,12,13,0|1b3f9g0,16,1,1|1bel43z,16,1,1|1bel440,12,13,0|1bm5c3z,12,13,0|1bm5c40,16,1,1|1bxb6rz,16,1,1|1bxb6s0,12,13,0|1c4verz,12,13,0|1c4ves0,16,1,1|1cg19fz,16,1,1|1cg19g0,12,13,0|1cnlhfz,12,13,0|1cnlhg0,16,1,1|1cyrc3z,16,1,1|1cyrc40,12,13,0|1d6oirz,12,13,0|1d6ois0,16,1,1|1dhherz,16,1,1|1dhhes0,12,13,0|1dpelfz,12,13,0|1dpelg0,16,1,1|1e07hfz,16,1,1|1e07hg0,12,13,0|1e84o3z,12,13,0|1e84o40,16,1,1|1ejairz,16,1,1|1ejais0,12,13,0|1equqrz,12,13,0|1equqs0,16,1,1|1f20lfz,16,1,1|1f20lg0,12,13,0|1f9ktfz,12,13,0|1f9ktg0,16,1,1|1fkqo3z,16,1,1|1fkqo40,12,13,0|1fsnurz,12,13,0|1fsnus0,16,1,1|1g3gqrz,16,1,1|1g3gqs0,12,13,0|1gbdxfz,12,13,0|1gbdxg0,16,1,1|1gm6tfz,16,1,1|1gm6tg0,12,13,0|1gu403z,12,13,0|1gu4040,16,1,1|1h4ww3z,16,1,1|1h4ww40,12,13,0|1hcu2rz,12,13,0|1hcu2s0,16,1,1|1hnzxfz,16,1,1|1hnzxg0,12,13,0|1hvk5fz,12,13,0|1hvk5g0,16,1,1|1i6q03z,16,1,1|1i6q040,12,13,0|1iea83z,12,13,0|1iea840,16,1,1|1ipg2rz,16,1,1|1ipg2s0,12,13,0|1ixd9fz,12,13,0|1ixd9g0,16,1,1|1j865fz,16,1,1|1j865g0,12,13,0|1jg3c3z,12,13,0|1jg3c40,16,1,1|1jqw83z,16,1,1|1jqw840,12,13,0|1jyterz,12,13,0|1jytes0,16,1,1|1k9z9fz,16,1,1|1k9z9g0,12,13,0|1khjhfz,12,13,0|1khjhg0,16,1,1|1kspc3z,16,1,1|1kspc40,12,13,0|1l09k3z,12,13,0|1l09k40,16,1,1|1lbferz,16,1,1|1lbfes0,12,13,0|1ljclfz,12,13,0|1ljclg0,16,1,1|1lu5hfz,16,1,1|1lu5hg0,12,13,0|1m22o3z,12,13,0|1m22o40,16,1,1|1mcvk3z,16,1,1|1mcvk40,12,13,0|1mksqrz,12,13,0|1mksqs0,16,1,1|1mvlmrz,16,1,1|1mvlms0,12,13,0|1n3itfz,12,13,0|1n3itg0,16,1,1|1neoo3z,16,1,1|1neoo40,12,13,0|1nm8w3z,12,13,0|1nm8w40,16,1,1|1nxeqrz,16,1,1|1nxeqs0,12,13,0|1o4yyrz,12,13,0|1o4yys0,16,1,1|1og4tfz,16,1,1|1og4tg0,12,13,0|1oo203z,12,13,0|1oo2040,16,1,1|1oyuw3z,16,1,1|1oyuw40,12,13,0|1p6s2rz,12,13,0|1p6s2s0,16,1,1|1phkyrz,16,1,1|1phkys0,12,13,0|1ppi5fz,12,13,0|1ppi5g0,16,1,1|1q0o03z,16,1,1|1q0o040,12,13,0|1q8883z,12,13,0|1q88840,16,1,1|1qje2rz,16,1,1|1qje2s0,12,13,0|1qqyarz,12,13,0|1qqyas0,16,1,1|1r245fz,16,1,1|1r245g0,12,13,0|1r9odfz,12,13,0|1r9odg0,16,1,1|1rku83z,16,1,1|1rku840,12,13,0|1rsrerz,12,13,0|1rsres0,16,1,1|1s3karz,16,1,1|1s3kas0,12,13,0|1sbhhfz,12,13,0|1sbhhg0,16,1,1|1smadfz,16,1,1|1smadg0,12,13,0|1su7k3z,12,13,0|1su7k40,16,1,1|1t5derz,16,1,1|1t5des0,12,13,0|1tcxmrz,12,13,0|1tcxms0,16,1,1|1to3hfz,16,1,1|1to3hg0,12,13,0|1tvnpfz,12,13,0|1tvnpg0,16,1,1|1u6tk3z,16,1,1|1u6tk40,12,13,0|1ueqqrz,12,13,0|1ueqqs0,16,1,1|1upjmrz,16,1,1|1upjms0,12,13,0|1uxgtfz,12,13,0|1uxgtg0,16,1,1|1v89pfz,16,1,1|1v89pg0,12,13,0|1vg6w3z,12,13,0|1vg6w40,16,1,1|1vqzs3z,16,1,1|1vqzs40,12,13,0|NaN,12,13,0",
        "Atlantic/Bermuda|,0,291,0|-15r0xbv,0,291,0|-15r0xbu,53,291,0|-rivvzv,53,291,0|-rivvzu,26,292,1|-r9qc3v,26,292,1|-r9qc3u,53,291,0|-qzp5bv,53,291,0|-qzp5bu,26,292,1|-qrq6rv,26,292,1|-qrq6ru,53,291,0|-kvj2fv,53,291,0|-kvj2fu,31,40,0|-eljwo1,31,40,0|-eljwo0,48,41,1|-e75gs1,48,41,1|-e75gs0,31,40,0|-dz87c1,31,40,0|-dz87c0,48,41,1|-dnpgs1,48,41,1|-dnpgs0,31,40,0|-dgv3c1,31,40,0|-dgv3c0,48,41,1|-d4mfg1,48,41,1|-d4mfg0,31,40,0|-cy50o1,31,40,0|-cy50o0,48,41,1|-clwcs1,48,41,1|-clwcs0,31,40,0|-bt38o1,31,40,0|-bt38o0,48,41,1|-bmyy41,48,41,1|-bmyy40,31,40,0|-ba07c1,31,40,0|-ba07c0,48,41,1|-b4lu41,48,41,1|-b4lu40,31,40,0|-ara4o1,31,40,0|-ara4o0,48,41,1|-alvrg1,48,41,1|-alvrg0,31,40,0|-a873c1,31,40,0|-a873c0,48,41,1|-a35os1,48,41,1|-a35os0,31,40,0|-9ph0o1,31,40,0|-9ph0o0,48,41,1|-9kfm41,48,41,1|-9kfm40,31,40,0|-96qy01,31,40,0|-96qy00,48,41,1|-91cks1,48,41,1|-91cks0,31,40,0|-73hoo1,31,40,0|-73hoo0,48,41,1|-6vkks1,48,41,1|-6vkks0,31,40,0|296onz,31,40,0|296oo0,48,41,1|2ijn7z,48,41,1|2ijn80,31,40,0|2rwrbz,31,40,0|2rwrc0,48,41,1|319pvz,48,41,1|319pw0,31,40,0|3amtzz,31,40,0|3amu00,48,41,1|3kcr7z,48,41,1|3kcr80,31,40,0|3tcwnz,31,40,0|3tcwo0,48,41,1|432tvz,48,41,1|432tw0,31,40,0|4cfxzz,31,40,0|4cfy00,48,41,1|4lswjz,48,41,1|4lswk0,31,40,0|4v60nz,31,40,0|4v60o0,48,41,1|54iz7z,48,41,1|54iz80,31,40,0|5dw3bz,31,40,0|5dw3c0,48,41,1|5n91vz,48,41,1|5n91w0,31,40,0|5wm5zz,31,40,0|5wm600,48,41,1|65z4jz,48,41,1|65z4k0,31,40,0|6fc8nz,31,40,0|6fc8o0,48,41,1|6p25vz,48,41,1|6p25w0,31,40,0|6y2bbz,31,40,0|6y2bc0,48,41,1|77s8jz,48,41,1|77s8k0,31,40,0|7h5cnz,31,40,0|7h5co0,48,41,1|7qib7z,48,41,1|7qib80,31,40,0|7zvfbz,31,40,0|7zvfc0,48,41,1|898dvz,48,41,1|898dw0,31,40,0|8ilhzz,31,40,0|8ili00,48,41,1|8rygjz,48,41,1|8rygk0,31,40,0|908onz,31,40,0|908oo0,48,41,1|9aoj7z,48,41,1|9aoj80,31,40,0|9iyrbz,31,40,0|9iyrc0,48,41,1|9trkjz,48,41,1|9trkk0,31,40,0|a1otzz,31,40,0|a1ou00,48,41,1|achn7z,48,41,1|achn80,31,40,0|akewnz,31,40,0|akewo0,48,41,1|av7pvz,48,41,1|av7pw0,31,40,0|b3hxzz,31,40,0|b3hy00,48,41,1|bdxsjz,48,41,1|bdxsk0,31,40,0|bm80nz,31,40,0|bm80o0,48,41,1|bwnv7z,48,41,1|bwnv80,31,40,0|c4y3bz,31,40,0|c4y3c0,48,41,1|cfqwjz,48,41,1|cfqwk0,31,40,0|cno5zz,31,40,0|cno600,48,41,1|cygz7z,48,41,1|cygz80,31,40,0|d6e8nz,31,40,0|d6e8o0,48,41,1|dh71vz,48,41,1|dh71w0,31,40,0|dph9zz,31,40,0|dpha00,48,41,1|dzx4jz,48,41,1|dzx4k0,31,40,0|e87cnz,31,40,0|e87co0,48,41,1|ein77z,48,41,1|ein780,31,40,0|eqxfbz,31,40,0|eqxfc0,48,41,1|f1d9vz,48,41,1|f1d9w0,31,40,0|f9nhzz,31,40,0|f9ni00,48,41,1|fkgb7z,48,41,1|fkgb80,31,40,0|fsdknz,31,40,0|fsdko0,48,41,1|g36dvz,48,41,1|g36dw0,31,40,0|gb3nbz,31,40,0|gb3nc0,48,41,1|glwgjz,48,41,1|glwgk0,31,40,0|gu6onz,31,40,0|gu6oo0,48,41,1|h4mj7z,48,41,1|h4mj80,31,40,0|hcwrbz,31,40,0|hcwrc0,48,41,1|hnclvz,48,41,1|hnclw0,31,40,0|hvmtzz,31,40,0|hvmu00,48,41,1|i6fn7z,48,41,1|i6fn80,31,40,0|iecwnz,31,40,0|iecwo0,48,41,1|ip5pvz,48,41,1|ip5pw0,31,40,0|ix2zbz,31,40,0|ix2zc0,48,41,1|j7vsjz,48,41,1|j7vsk0,31,40,0|jeq5zz,31,40,0|jeq600,48,41,1|jqytvz,48,41,1|jqytw0,31,40,0|jxg8nz,31,40,0|jxg8o0,48,41,1|k9owjz,48,41,1|k9owk0,31,40,0|kg6bbz,31,40,0|kg6bc0,48,41,1|ksez7z,48,41,1|ksez80,31,40,0|kz9cnz,31,40,0|kz9co0,48,41,1|lbi0jz,48,41,1|lbi0k0,31,40,0|lhzfbz,31,40,0|lhzfc0,48,41,1|lu837z,48,41,1|lu8380,31,40,0|m0phzz,31,40,0|m0pi00,48,41,1|mcy5vz,48,41,1|mcy5w0,31,40,0|mjfknz,31,40,0|mjfko0,48,41,1|mvo8jz,48,41,1|mvo8k0,31,40,0|n25nbz,31,40,0|n25nc0,48,41,1|neeb7z,48,41,1|neeb80,31,40,0|nkvpzz,31,40,0|nkvq00,48,41,1|nx4dvz,48,41,1|nx4dw0,31,40,0|o3yrbz,31,40,0|o3yrc0,48,41,1|og7f7z,48,41,1|og7f80,31,40,0|omotzz,31,40,0|omou00,48,41,1|oyxhvz,48,41,1|oyxhw0,31,40,0|p5ewnz,31,40,0|p5ewo0,48,41,1|phnkjz,48,41,1|phnkk0,31,40,0|po4zbz,31,40,0|po4zc0,48,41,1|q0dn7z,48,41,1|q0dn80,31,40,0|q6v1zz,31,40,0|q6v200,48,41,1|qj3pvz,48,41,1|qj3pw0,31,40,0|qpy3bz,31,40,0|qpy3c0,48,41,1|r26r7z,48,41,1|r26r80,31,40,0|r8o5zz,31,40,0|r8o600,48,41,1|rkwtvz,48,41,1|rkwtw0,31,40,0|rre8nz,31,40,0|rre8o0,48,41,1|s3mwjz,48,41,1|s3mwk0,31,40,0|sa4bbz,31,40,0|sa4bc0,48,41,1|smcz7z,48,41,1|smcz80,31,40,0|ssudzz,31,40,0|ssue00,48,41,1|t531vz,48,41,1|t531w0,31,40,0|tbkgnz,31,40,0|tbkgo0,48,41,1|tnt4jz,48,41,1|tnt4k0,31,40,0|tunhzz,31,40,0|tuni00,48,41,1|u6w5vz,48,41,1|u6w5w0,31,40,0|uddknz,31,40,0|uddko0,48,41,1|upm8jz,48,41,1|upm8k0,31,40,0|uw3nbz,31,40,0|uw3nc0,48,41,1|v8cb7z,48,41,1|v8cb80,31,40,0|vetpzz,31,40,0|vetq00,48,41,1|vr2dvz,48,41,1|vr2dw0,31,40,0|vxjsnz,31,40,0|vxjso0,48,41,1|w9sgjz,48,41,1|w9sgk0,31,40,0|wgmtzz,31,40,0|wgmu00,48,41,1|wsvhvz,48,41,1|wsvhw0,31,40,0|wzcwnz,31,40,0|wzcwo0,48,41,1|xblkjz,48,41,1|xblkk0,31,40,0|xi2zbz,31,40,0|xi2zc0,48,41,1|xubn7z,48,41,1|xubn80,31,40,0|y0t1zz,31,40,0|y0t200,48,41,1|yd1pvz,48,41,1|yd1pw0,31,40,0|yjj4nz,31,40,0|yjj4o0,48,41,1|yvrsjz,48,41,1|yvrsk0,31,40,0|z297bz,31,40,0|z297c0,48,41,1|zehv7z,48,41,1|zehv80,31,40,0|zlc8nz,31,40,0|zlc8o0,48,41,1|zxkwjz,48,41,1|zxkwk0,31,40,0|1042bbz,31,40,0|1042bc0,48,41,1|10gaz7z,48,41,1|10gaz80,31,40,0|10msdzz,31,40,0|10mse00,48,41,1|10z11vz,48,41,1|10z11w0,31,40,0|115ignz,31,40,0|115igo0,48,41,1|11hr4jz,48,41,1|11hr4k0,31,40,0|11o8jbz,31,40,0|11o8jc0,48,41,1|120h77z,48,41,1|120h780,31,40,0|126ylzz,31,40,0|126ym00,48,41,1|12j79vz,48,41,1|12j79w0,31,40,0|12q1nbz,31,40,0|12q1nc0,48,41,1|132ab7z,48,41,1|132ab80,31,40,0|138rpzz,31,40,0|138rq00,48,41,1|13l0dvz,48,41,1|13l0dw0,31,40,0|13rhsnz,31,40,0|13rhso0,48,41,1|143qgjz,48,41,1|143qgk0,31,40,0|14a7vbz,31,40,0|14a7vc0,48,41,1|14mgj7z,48,41,1|14mgj80,31,40,0|14sxxzz,31,40,0|14sxy00,48,41,1|1556lvz,48,41,1|1556lw0,31,40,0|15c0zbz,31,40,0|15c0zc0,48,41,1|15o9n7z,48,41,1|15o9n80,31,40,0|15ur1zz,31,40,0|15ur200,48,41,1|166zpvz,48,41,1|166zpw0,31,40,0|16dh4nz,31,40,0|16dh4o0,48,41,1|16ppsjz,48,41,1|16ppsk0,31,40,0|16w77bz,31,40,0|16w77c0,48,41,1|178fv7z,48,41,1|178fv80,31,40,0|17ex9zz,31,40,0|17exa00,48,41,1|17r5xvz,48,41,1|17r5xw0,31,40,0|17xncnz,31,40,0|17xnco0,48,41,1|189w0jz,48,41,1|189w0k0,31,40,0|18gqdzz,31,40,0|18gqe00,48,41,1|18sz1vz,48,41,1|18sz1w0,31,40,0|18zggnz,31,40,0|18zggo0,48,41,1|19bp4jz,48,41,1|19bp4k0,31,40,0|19i6jbz,31,40,0|19i6jc0,48,41,1|19uf77z,48,41,1|19uf780,31,40,0|1a0wlzz,31,40,0|1a0wm00,48,41,1|1ad59vz,48,41,1|1ad59w0,31,40,0|1ajmonz,31,40,0|1ajmoo0,48,41,1|1avvcjz,48,41,1|1avvck0,31,40,0|1b2ppzz,31,40,0|1b2pq00,48,41,1|1beydvz,48,41,1|1beydw0,31,40,0|1blfsnz,31,40,0|1blfso0,48,41,1|1bxogjz,48,41,1|1bxogk0,31,40,0|1c45vbz,31,40,0|1c45vc0,48,41,1|1cgej7z,48,41,1|1cgej80,31,40,0|1cmvxzz,31,40,0|1cmvy00,48,41,1|1cz4lvz,48,41,1|1cz4lw0,31,40,0|1d5m0nz,31,40,0|1d5m0o0,48,41,1|1dhuojz,48,41,1|1dhuok0,31,40,0|1doc3bz,31,40,0|1doc3c0,48,41,1|1e0kr7z,48,41,1|1e0kr80,31,40,0|1e7f4nz,31,40,0|1e7f4o0,48,41,1|1ejnsjz,48,41,1|1ejnsk0,31,40,0|1eq57bz,31,40,0|1eq57c0,48,41,1|1f2dv7z,48,41,1|1f2dv80,31,40,0|1f8v9zz,31,40,0|1f8va00,48,41,1|1fl3xvz,48,41,1|1fl3xw0,31,40,0|1frlcnz,31,40,0|1frlco0,48,41,1|1g3u0jz,48,41,1|1g3u0k0,31,40,0|1gabfbz,31,40,0|1gabfc0,48,41,1|1gmk37z,48,41,1|1gmk380,31,40,0|1gt1hzz,31,40,0|1gt1i00,48,41,1|1h5a5vz,48,41,1|1h5a5w0,31,40,0|1hc4jbz,31,40,0|1hc4jc0,48,41,1|1hod77z,48,41,1|1hod780,31,40,0|1huulzz,31,40,0|1huum00,48,41,1|1i739vz,48,41,1|1i739w0,31,40,0|1idkonz,31,40,0|1idkoo0,48,41,1|1iptcjz,48,41,1|1iptck0,31,40,0|1iwarbz,31,40,0|1iwarc0,48,41,1|1j8jf7z,48,41,1|1j8jf80,31,40,0|1jf0tzz,31,40,0|1jf0u00,48,41,1|1jr9hvz,48,41,1|1jr9hw0,31,40,0|1jy3vbz,31,40,0|1jy3vc0,48,41,1|1kacj7z,48,41,1|1kacj80,31,40,0|1kgtxzz,31,40,0|1kgty00,48,41,1|1kt2lvz,48,41,1|1kt2lw0,31,40,0|1kzk0nz,31,40,0|1kzk0o0,48,41,1|1lbsojz,48,41,1|1lbsok0,31,40,0|1lia3bz,31,40,0|1lia3c0,48,41,1|1luir7z,48,41,1|1luir80,31,40,0|1m105zz,31,40,0|1m10600,48,41,1|1md8tvz,48,41,1|1md8tw0,31,40,0|1mjq8nz,31,40,0|1mjq8o0,48,41,1|1mvywjz,48,41,1|1mvywk0,31,40,0|1n2t9zz,31,40,0|1n2ta00,48,41,1|1nf1xvz,48,41,1|1nf1xw0,31,40,0|1nljcnz,31,40,0|1nljco0,48,41,1|1nxs0jz,48,41,1|1nxs0k0,31,40,0|1o49fbz,31,40,0|1o49fc0,48,41,1|1ogi37z,48,41,1|1ogi380,31,40,0|1omzhzz,31,40,0|1omzi00,48,41,1|1oz85vz,48,41,1|1oz85w0,31,40,0|1p5pknz,31,40,0|1p5pko0,48,41,1|1phy8jz,48,41,1|1phy8k0,31,40,0|1poslzz,31,40,0|1posm00,48,41,1|1q119vz,48,41,1|1q119w0,31,40,0|1q7ionz,31,40,0|1q7ioo0,48,41,1|1qjrcjz,48,41,1|1qjrck0,31,40,0|1qq8rbz,31,40,0|1qq8rc0,48,41,1|1r2hf7z,48,41,1|1r2hf80,31,40,0|1r8ytzz,31,40,0|1r8yu00,48,41,1|1rl7hvz,48,41,1|1rl7hw0,31,40,0|1rrownz,31,40,0|1rrowo0,48,41,1|1s3xkjz,48,41,1|1s3xkk0,31,40,0|1saezbz,31,40,0|1saezc0,48,41,1|1smnn7z,48,41,1|1smnn80,31,40,0|1sti0nz,31,40,0|1sti0o0,48,41,1|1t5qojz,48,41,1|1t5qok0,31,40,0|1tc83bz,31,40,0|1tc83c0,48,41,1|1togr7z,48,41,1|1togr80,31,40,0|1tuy5zz,31,40,0|1tuy600,48,41,1|1u76tvz,48,41,1|1u76tw0,31,40,0|1udo8nz,31,40,0|1udo8o0,48,41,1|1upwwjz,48,41,1|1upwwk0,31,40,0|1uwebbz,31,40,0|1uwebc0,48,41,1|1v8mz7z,48,41,1|1v8mz80,31,40,0|1vf4dzz,31,40,0|1vf4e00,48,41,1|1vrd1vz,48,41,1|1vrd1w0,31,40,0|NaN,31,40,0",
        "Atlantic/Canary|,0,293,0|-oytbtd,0,293,0|-oytbtc,12,13,0|-c4xh41,12,13,0|-c4xh40,6,1,0|5csqnz,6,1,0|5csqo0,7,8,1|5lsw3z,7,8,1|5lsw40,6,1,0|5v5xfz,6,1,0|5v5xg0,7,8,1|64iyrz,7,8,1|64iys0,6,1,0|6dw03z,6,1,0|6dw040,7,8,1|6n91fz,7,8,1|6n91g0,6,1,0|6wm2rz,6,1,0|6wm2s0,7,8,1|75z43z,7,8,1|75z440,6,1,0|7fc5fz,6,1,0|7fc5g0,7,8,1|7p25fz,7,8,1|7p25g0,6,1,0|7yf6rz,6,1,0|7yf6s0,7,8,1|87s83z,7,8,1|87s840,6,1,0|8h59fz,6,1,0|8h59g0,7,8,1|8qiarz,7,8,1|8qias0,6,1,0|8zvc3z,6,1,0|8zvc40,7,8,1|998dfz,7,8,1|998dg0,6,1,0|9ilerz,6,1,0|9iles0,7,8,1|9ryg3z,7,8,1|9ryg40,6,1,0|a1bhfz,6,1,0|a1bhg0,7,8,1|aaoirz,7,8,1|aaois0,6,1,0|ak1k3z,6,1,0|ak1k40,7,8,1|atrk3z,7,8,1|atrk40,6,1,0|b34lfz,6,1,0|b34lg0,7,8,1|bchmrz,7,8,1|bchms0,6,1,0|bluo3z,6,1,0|bluo40,7,8,1|bv7pfz,7,8,1|bv7pg0,6,1,0|c4kqrz,6,1,0|c4kqs0,7,8,1|cdxs3z,7,8,1|cdxs40,6,1,0|cnatfz,6,1,0|cnatg0,7,8,1|cwnurz,7,8,1|cwnus0,6,1,0|d60w3z,6,1,0|d60w40,7,8,1|dfdxfz,7,8,1|dfdxg0,6,1,0|dp3xfz,6,1,0|dp3xg0,7,8,1|dzwtfz,7,8,1|dzwtg0,6,1,0|e7u03z,6,1,0|e7u040,7,8,1|eimw3z,7,8,1|eimw40,6,1,0|eqk2rz,6,1,0|eqk2s0,7,8,1|f1cyrz,7,8,1|f1cys0,6,1,0|f9a5fz,6,1,0|f9a5g0,7,8,1|fkg03z,7,8,1|fkg040,6,1,0|fs083z,6,1,0|fs0840,7,8,1|g362rz,7,8,1|g362s0,6,1,0|gaqarz,6,1,0|gaqas0,7,8,1|glw5fz,7,8,1|glw5g0,6,1,0|gttc3z,6,1,0|gttc40,7,8,1|h4m83z,7,8,1|h4m840,6,1,0|hcjerz,6,1,0|hcjes0,7,8,1|hncarz,7,8,1|hncas0,6,1,0|hv9hfz,6,1,0|hv9hg0,7,8,1|i6fc3z,7,8,1|i6fc40,6,1,0|idzk3z,6,1,0|idzk40,7,8,1|ip5erz,7,8,1|ip5es0,6,1,0|iwpmrz,6,1,0|iwpms0,7,8,1|j7vhfz,7,8,1|j7vhg0,6,1,0|jffpfz,6,1,0|jffpg0,7,8,1|jqlk3z,7,8,1|jqlk40,6,1,0|jyiqrz,6,1,0|jyiqs0,7,8,1|k9bmrz,7,8,1|k9bms0,6,1,0|kh8tfz,6,1,0|kh8tg0,7,8,1|ks1pfz,7,8,1|ks1pg0,6,1,0|kzyw3z,6,1,0|kzyw40,7,8,1|lb4qrz,7,8,1|lb4qs0,6,1,0|lioyrz,6,1,0|lioys0,7,8,1|ltutfz,7,8,1|ltutg0,6,1,0|m1f1fz,6,1,0|m1f1g0,7,8,1|mckw3z,7,8,1|mckw40,6,1,0|mki2rz,6,1,0|mki2s0,7,8,1|mvayrz,7,8,1|mvays0,6,1,0|n385fz,6,1,0|n385g0,7,8,1|ne11fz,7,8,1|ne11g0,6,1,0|nly83z,6,1,0|nly840,7,8,1|nwr43z,7,8,1|nwr440,6,1,0|o4oarz,6,1,0|o4oas0,7,8,1|ofu5fz,7,8,1|ofu5g0,6,1,0|onedfz,6,1,0|onedg0,7,8,1|oyk83z,7,8,1|oyk840,6,1,0|p64g3z,6,1,0|p64g40,7,8,1|phaarz,7,8,1|phaas0,6,1,0|pp7hfz,6,1,0|pp7hg0,7,8,1|q00dfz,7,8,1|q00dg0,6,1,0|q7xk3z,6,1,0|q7xk40,7,8,1|qiqg3z,7,8,1|qiqg40,6,1,0|qqnmrz,6,1,0|qqnms0,7,8,1|r1thfz,7,8,1|r1thg0,6,1,0|r9dpfz,6,1,0|r9dpg0,7,8,1|rkjk3z,7,8,1|rkjk40,6,1,0|rs3s3z,6,1,0|rs3s40,7,8,1|s39mrz,7,8,1|s39ms0,6,1,0|sb6tfz,6,1,0|sb6tg0,7,8,1|slzpfz,7,8,1|slzpg0,6,1,0|stww3z,6,1,0|stww40,7,8,1|t4ps3z,7,8,1|t4ps40,6,1,0|tcmyrz,6,1,0|tcmys0,7,8,1|tnfurz,7,8,1|tnfus0,6,1,0|tvd1fz,6,1,0|tvd1g0,7,8,1|u6iw3z,7,8,1|u6iw40,6,1,0|ue343z,6,1,0|ue3440,7,8,1|up8yrz,7,8,1|up8ys0,6,1,0|uwt6rz,6,1,0|uwt6s0,7,8,1|v7z1fz,7,8,1|v7z1g0,6,1,0|vfw83z,6,1,0|vfw840,7,8,1|vqp43z,7,8,1|vqp440,6,1,0|vymarz,6,1,0|vymas0,7,8,1|w9f6rz,7,8,1|w9f6s0,6,1,0|whcdfz,6,1,0|whcdg0,7,8,1|wsi83z,7,8,1|wsi840,6,1,0|x02g3z,6,1,0|x02g40,7,8,1|xb8arz,7,8,1|xb8as0,6,1,0|xisirz,6,1,0|xisis0,7,8,1|xtydfz,7,8,1|xtydg0,6,1,0|y1ilfz,6,1,0|y1ilg0,7,8,1|ycog3z,7,8,1|ycog40,6,1,0|yklmrz,6,1,0|yklms0,7,8,1|yveirz,7,8,1|yveis0,6,1,0|z3bpfz,6,1,0|z3bpg0,7,8,1|ze4lfz,7,8,1|ze4lg0,6,1,0|zm1s3z,6,1,0|zm1s40,7,8,1|zx7mrz,7,8,1|zx7ms0,6,1,0|104rurz,6,1,0|104rus0,7,8,1|10fxpfz,7,8,1|10fxpg0,6,1,0|10nhxfz,6,1,0|10nhxg0,7,8,1|10yns3z,7,8,1|10yns40,6,1,0|116kyrz,6,1,0|116kys0,7,8,1|11hdurz,7,8,1|11hdus0,6,1,0|11pb1fz,6,1,0|11pb1g0,7,8,1|1203xfz,7,8,1|1203xg0,6,1,0|128143z,6,1,0|1281440,7,8,1|12iu03z,7,8,1|12iu040,6,1,0|12qr6rz,6,1,0|12qr6s0,7,8,1|131x1fz,7,8,1|131x1g0,6,1,0|139h9fz,6,1,0|139h9g0,7,8,1|13kn43z,7,8,1|13kn440,6,1,0|13s7c3z,6,1,0|13s7c40,7,8,1|143d6rz,7,8,1|143d6s0,6,1,0|14badfz,6,1,0|14badg0,7,8,1|14m39fz,7,8,1|14m39g0,6,1,0|14u0g3z,6,1,0|14u0g40,7,8,1|154tc3z,7,8,1|154tc40,6,1,0|15cqirz,6,1,0|15cqis0,7,8,1|15nwdfz,7,8,1|15nwdg0,6,1,0|15vglfz,6,1,0|15vglg0,7,8,1|166mg3z,7,8,1|166mg40,6,1,0|16e6o3z,6,1,0|16e6o40,7,8,1|16pcirz,7,8,1|16pcis0,6,1,0|16x9pfz,6,1,0|16x9pg0,7,8,1|1782lfz,7,8,1|1782lg0,6,1,0|17fzs3z,6,1,0|17fzs40,7,8,1|17qso3z,7,8,1|17qso40,6,1,0|17ypurz,6,1,0|17ypus0,7,8,1|189iqrz,7,8,1|189iqs0,6,1,0|18hfxfz,6,1,0|18hfxg0,7,8,1|18sls3z,7,8,1|18sls40,6,1,0|190603z,6,1,0|1906040,7,8,1|19bburz,7,8,1|19bbus0,6,1,0|19iw2rz,6,1,0|19iw2s0,7,8,1|19u1xfz,7,8,1|19u1xg0,6,1,0|1a1z43z,6,1,0|1a1z440,7,8,1|1acs03z,7,8,1|1acs040,6,1,0|1akp6rz,6,1,0|1akp6s0,7,8,1|1avi2rz,7,8,1|1avi2s0,6,1,0|1b3f9fz,6,1,0|1b3f9g0,7,8,1|1bel43z,7,8,1|1bel440,6,1,0|1bm5c3z,6,1,0|1bm5c40,7,8,1|1bxb6rz,7,8,1|1bxb6s0,6,1,0|1c4verz,6,1,0|1c4ves0,7,8,1|1cg19fz,7,8,1|1cg19g0,6,1,0|1cnlhfz,6,1,0|1cnlhg0,7,8,1|1cyrc3z,7,8,1|1cyrc40,6,1,0|1d6oirz,6,1,0|1d6ois0,7,8,1|1dhherz,7,8,1|1dhhes0,6,1,0|1dpelfz,6,1,0|1dpelg0,7,8,1|1e07hfz,7,8,1|1e07hg0,6,1,0|1e84o3z,6,1,0|1e84o40,7,8,1|1ejairz,7,8,1|1ejais0,6,1,0|1equqrz,6,1,0|1equqs0,7,8,1|1f20lfz,7,8,1|1f20lg0,6,1,0|1f9ktfz,6,1,0|1f9ktg0,7,8,1|1fkqo3z,7,8,1|1fkqo40,6,1,0|1fsnurz,6,1,0|1fsnus0,7,8,1|1g3gqrz,7,8,1|1g3gqs0,6,1,0|1gbdxfz,6,1,0|1gbdxg0,7,8,1|1gm6tfz,7,8,1|1gm6tg0,6,1,0|1gu403z,6,1,0|1gu4040,7,8,1|1h4ww3z,7,8,1|1h4ww40,6,1,0|1hcu2rz,6,1,0|1hcu2s0,7,8,1|1hnzxfz,7,8,1|1hnzxg0,6,1,0|1hvk5fz,6,1,0|1hvk5g0,7,8,1|1i6q03z,7,8,1|1i6q040,6,1,0|1iea83z,6,1,0|1iea840,7,8,1|1ipg2rz,7,8,1|1ipg2s0,6,1,0|1ixd9fz,6,1,0|1ixd9g0,7,8,1|1j865fz,7,8,1|1j865g0,6,1,0|1jg3c3z,6,1,0|1jg3c40,7,8,1|1jqw83z,7,8,1|1jqw840,6,1,0|1jyterz,6,1,0|1jytes0,7,8,1|1k9z9fz,7,8,1|1k9z9g0,6,1,0|1khjhfz,6,1,0|1khjhg0,7,8,1|1kspc3z,7,8,1|1kspc40,6,1,0|1l09k3z,6,1,0|1l09k40,7,8,1|1lbferz,7,8,1|1lbfes0,6,1,0|1ljclfz,6,1,0|1ljclg0,7,8,1|1lu5hfz,7,8,1|1lu5hg0,6,1,0|1m22o3z,6,1,0|1m22o40,7,8,1|1mcvk3z,7,8,1|1mcvk40,6,1,0|1mksqrz,6,1,0|1mksqs0,7,8,1|1mvlmrz,7,8,1|1mvlms0,6,1,0|1n3itfz,6,1,0|1n3itg0,7,8,1|1neoo3z,7,8,1|1neoo40,6,1,0|1nm8w3z,6,1,0|1nm8w40,7,8,1|1nxeqrz,7,8,1|1nxeqs0,6,1,0|1o4yyrz,6,1,0|1o4yys0,7,8,1|1og4tfz,7,8,1|1og4tg0,6,1,0|1oo203z,6,1,0|1oo2040,7,8,1|1oyuw3z,7,8,1|1oyuw40,6,1,0|1p6s2rz,6,1,0|1p6s2s0,7,8,1|1phkyrz,7,8,1|1phkys0,6,1,0|1ppi5fz,6,1,0|1ppi5g0,7,8,1|1q0o03z,7,8,1|1q0o040,6,1,0|1q8883z,6,1,0|1q88840,7,8,1|1qje2rz,7,8,1|1qje2s0,6,1,0|1qqyarz,6,1,0|1qqyas0,7,8,1|1r245fz,7,8,1|1r245g0,6,1,0|1r9odfz,6,1,0|1r9odg0,7,8,1|1rku83z,7,8,1|1rku840,6,1,0|1rsrerz,6,1,0|1rsres0,7,8,1|1s3karz,7,8,1|1s3kas0,6,1,0|1sbhhfz,6,1,0|1sbhhg0,7,8,1|1smadfz,7,8,1|1smadg0,6,1,0|1su7k3z,6,1,0|1su7k40,7,8,1|1t5derz,7,8,1|1t5des0,6,1,0|1tcxmrz,6,1,0|1tcxms0,7,8,1|1to3hfz,7,8,1|1to3hg0,6,1,0|1tvnpfz,6,1,0|1tvnpg0,7,8,1|1u6tk3z,7,8,1|1u6tk40,6,1,0|1ueqqrz,6,1,0|1ueqqs0,7,8,1|1upjmrz,7,8,1|1upjms0,6,1,0|1uxgtfz,6,1,0|1uxgtg0,7,8,1|1v89pfz,7,8,1|1v89pg0,6,1,0|1vg6w3z,6,1,0|1vg6w40,7,8,1|1vqzs3z,7,8,1|1vqzs40,6,1,0|NaN,6,1,0",
        "Atlantic/Cape_Verde|,0,294,0|-u9rbs1,0,294,0|-u9rbs0,39,43,0|-e9kqg1,39,43,0|-e9kqg0,12,13,1|-cmxp81,12,13,1|-cmxp80,39,43,0|32t73z,39,43,0|32t740,12,13,0|NaN,12,13,0",
        "Atlantic/Faroe|,0,295,0|-wcehex,0,295,0|-wcehew,6,1,0|5v5xfz,6,1,0|5v5xg0,7,8,1|64iyrz,7,8,1|64iys0,6,1,0|6dw03z,6,1,0|6dw040,7,8,1|6n91fz,7,8,1|6n91g0,6,1,0|6wm2rz,6,1,0|6wm2s0,7,8,1|75z43z,7,8,1|75z440,6,1,0|7fc5fz,6,1,0|7fc5g0,7,8,1|7p25fz,7,8,1|7p25g0,6,1,0|7yf6rz,6,1,0|7yf6s0,7,8,1|87s83z,7,8,1|87s840,6,1,0|8h59fz,6,1,0|8h59g0,7,8,1|8qiarz,7,8,1|8qias0,6,1,0|8zvc3z,6,1,0|8zvc40,7,8,1|998dfz,7,8,1|998dg0,6,1,0|9ilerz,6,1,0|9iles0,7,8,1|9ryg3z,7,8,1|9ryg40,6,1,0|a1bhfz,6,1,0|a1bhg0,7,8,1|aaoirz,7,8,1|aaois0,6,1,0|ak1k3z,6,1,0|ak1k40,7,8,1|atrk3z,7,8,1|atrk40,6,1,0|b34lfz,6,1,0|b34lg0,7,8,1|bchmrz,7,8,1|bchms0,6,1,0|bluo3z,6,1,0|bluo40,7,8,1|bv7pfz,7,8,1|bv7pg0,6,1,0|c4kqrz,6,1,0|c4kqs0,7,8,1|cdxs3z,7,8,1|cdxs40,6,1,0|cnatfz,6,1,0|cnatg0,7,8,1|cwnurz,7,8,1|cwnus0,6,1,0|d60w3z,6,1,0|d60w40,7,8,1|dfdxfz,7,8,1|dfdxg0,6,1,0|dp3xfz,6,1,0|dp3xg0,7,8,1|dzwtfz,7,8,1|dzwtg0,6,1,0|e7u03z,6,1,0|e7u040,7,8,1|eimw3z,7,8,1|eimw40,6,1,0|eqk2rz,6,1,0|eqk2s0,7,8,1|f1cyrz,7,8,1|f1cys0,6,1,0|f9a5fz,6,1,0|f9a5g0,7,8,1|fkg03z,7,8,1|fkg040,6,1,0|fs083z,6,1,0|fs0840,7,8,1|g362rz,7,8,1|g362s0,6,1,0|gaqarz,6,1,0|gaqas0,7,8,1|glw5fz,7,8,1|glw5g0,6,1,0|gttc3z,6,1,0|gttc40,7,8,1|h4m83z,7,8,1|h4m840,6,1,0|hcjerz,6,1,0|hcjes0,7,8,1|hncarz,7,8,1|hncas0,6,1,0|hv9hfz,6,1,0|hv9hg0,7,8,1|i6fc3z,7,8,1|i6fc40,6,1,0|idzk3z,6,1,0|idzk40,7,8,1|ip5erz,7,8,1|ip5es0,6,1,0|iwpmrz,6,1,0|iwpms0,7,8,1|j7vhfz,7,8,1|j7vhg0,6,1,0|jffpfz,6,1,0|jffpg0,7,8,1|jqlk3z,7,8,1|jqlk40,6,1,0|jyiqrz,6,1,0|jyiqs0,7,8,1|k9bmrz,7,8,1|k9bms0,6,1,0|kh8tfz,6,1,0|kh8tg0,7,8,1|ks1pfz,7,8,1|ks1pg0,6,1,0|kzyw3z,6,1,0|kzyw40,7,8,1|lb4qrz,7,8,1|lb4qs0,6,1,0|lioyrz,6,1,0|lioys0,7,8,1|ltutfz,7,8,1|ltutg0,6,1,0|m1f1fz,6,1,0|m1f1g0,7,8,1|mckw3z,7,8,1|mckw40,6,1,0|mki2rz,6,1,0|mki2s0,7,8,1|mvayrz,7,8,1|mvays0,6,1,0|n385fz,6,1,0|n385g0,7,8,1|ne11fz,7,8,1|ne11g0,6,1,0|nly83z,6,1,0|nly840,7,8,1|nwr43z,7,8,1|nwr440,6,1,0|o4oarz,6,1,0|o4oas0,7,8,1|ofu5fz,7,8,1|ofu5g0,6,1,0|onedfz,6,1,0|onedg0,7,8,1|oyk83z,7,8,1|oyk840,6,1,0|p64g3z,6,1,0|p64g40,7,8,1|phaarz,7,8,1|phaas0,6,1,0|pp7hfz,6,1,0|pp7hg0,7,8,1|q00dfz,7,8,1|q00dg0,6,1,0|q7xk3z,6,1,0|q7xk40,7,8,1|qiqg3z,7,8,1|qiqg40,6,1,0|qqnmrz,6,1,0|qqnms0,7,8,1|r1thfz,7,8,1|r1thg0,6,1,0|r9dpfz,6,1,0|r9dpg0,7,8,1|rkjk3z,7,8,1|rkjk40,6,1,0|rs3s3z,6,1,0|rs3s40,7,8,1|s39mrz,7,8,1|s39ms0,6,1,0|sb6tfz,6,1,0|sb6tg0,7,8,1|slzpfz,7,8,1|slzpg0,6,1,0|stww3z,6,1,0|stww40,7,8,1|t4ps3z,7,8,1|t4ps40,6,1,0|tcmyrz,6,1,0|tcmys0,7,8,1|tnfurz,7,8,1|tnfus0,6,1,0|tvd1fz,6,1,0|tvd1g0,7,8,1|u6iw3z,7,8,1|u6iw40,6,1,0|ue343z,6,1,0|ue3440,7,8,1|up8yrz,7,8,1|up8ys0,6,1,0|uwt6rz,6,1,0|uwt6s0,7,8,1|v7z1fz,7,8,1|v7z1g0,6,1,0|vfw83z,6,1,0|vfw840,7,8,1|vqp43z,7,8,1|vqp440,6,1,0|vymarz,6,1,0|vymas0,7,8,1|w9f6rz,7,8,1|w9f6s0,6,1,0|whcdfz,6,1,0|whcdg0,7,8,1|wsi83z,7,8,1|wsi840,6,1,0|x02g3z,6,1,0|x02g40,7,8,1|xb8arz,7,8,1|xb8as0,6,1,0|xisirz,6,1,0|xisis0,7,8,1|xtydfz,7,8,1|xtydg0,6,1,0|y1ilfz,6,1,0|y1ilg0,7,8,1|ycog3z,7,8,1|ycog40,6,1,0|yklmrz,6,1,0|yklms0,7,8,1|yveirz,7,8,1|yveis0,6,1,0|z3bpfz,6,1,0|z3bpg0,7,8,1|ze4lfz,7,8,1|ze4lg0,6,1,0|zm1s3z,6,1,0|zm1s40,7,8,1|zx7mrz,7,8,1|zx7ms0,6,1,0|104rurz,6,1,0|104rus0,7,8,1|10fxpfz,7,8,1|10fxpg0,6,1,0|10nhxfz,6,1,0|10nhxg0,7,8,1|10yns3z,7,8,1|10yns40,6,1,0|116kyrz,6,1,0|116kys0,7,8,1|11hdurz,7,8,1|11hdus0,6,1,0|11pb1fz,6,1,0|11pb1g0,7,8,1|1203xfz,7,8,1|1203xg0,6,1,0|128143z,6,1,0|1281440,7,8,1|12iu03z,7,8,1|12iu040,6,1,0|12qr6rz,6,1,0|12qr6s0,7,8,1|131x1fz,7,8,1|131x1g0,6,1,0|139h9fz,6,1,0|139h9g0,7,8,1|13kn43z,7,8,1|13kn440,6,1,0|13s7c3z,6,1,0|13s7c40,7,8,1|143d6rz,7,8,1|143d6s0,6,1,0|14badfz,6,1,0|14badg0,7,8,1|14m39fz,7,8,1|14m39g0,6,1,0|14u0g3z,6,1,0|14u0g40,7,8,1|154tc3z,7,8,1|154tc40,6,1,0|15cqirz,6,1,0|15cqis0,7,8,1|15nwdfz,7,8,1|15nwdg0,6,1,0|15vglfz,6,1,0|15vglg0,7,8,1|166mg3z,7,8,1|166mg40,6,1,0|16e6o3z,6,1,0|16e6o40,7,8,1|16pcirz,7,8,1|16pcis0,6,1,0|16x9pfz,6,1,0|16x9pg0,7,8,1|1782lfz,7,8,1|1782lg0,6,1,0|17fzs3z,6,1,0|17fzs40,7,8,1|17qso3z,7,8,1|17qso40,6,1,0|17ypurz,6,1,0|17ypus0,7,8,1|189iqrz,7,8,1|189iqs0,6,1,0|18hfxfz,6,1,0|18hfxg0,7,8,1|18sls3z,7,8,1|18sls40,6,1,0|190603z,6,1,0|1906040,7,8,1|19bburz,7,8,1|19bbus0,6,1,0|19iw2rz,6,1,0|19iw2s0,7,8,1|19u1xfz,7,8,1|19u1xg0,6,1,0|1a1z43z,6,1,0|1a1z440,7,8,1|1acs03z,7,8,1|1acs040,6,1,0|1akp6rz,6,1,0|1akp6s0,7,8,1|1avi2rz,7,8,1|1avi2s0,6,1,0|1b3f9fz,6,1,0|1b3f9g0,7,8,1|1bel43z,7,8,1|1bel440,6,1,0|1bm5c3z,6,1,0|1bm5c40,7,8,1|1bxb6rz,7,8,1|1bxb6s0,6,1,0|1c4verz,6,1,0|1c4ves0,7,8,1|1cg19fz,7,8,1|1cg19g0,6,1,0|1cnlhfz,6,1,0|1cnlhg0,7,8,1|1cyrc3z,7,8,1|1cyrc40,6,1,0|1d6oirz,6,1,0|1d6ois0,7,8,1|1dhherz,7,8,1|1dhhes0,6,1,0|1dpelfz,6,1,0|1dpelg0,7,8,1|1e07hfz,7,8,1|1e07hg0,6,1,0|1e84o3z,6,1,0|1e84o40,7,8,1|1ejairz,7,8,1|1ejais0,6,1,0|1equqrz,6,1,0|1equqs0,7,8,1|1f20lfz,7,8,1|1f20lg0,6,1,0|1f9ktfz,6,1,0|1f9ktg0,7,8,1|1fkqo3z,7,8,1|1fkqo40,6,1,0|1fsnurz,6,1,0|1fsnus0,7,8,1|1g3gqrz,7,8,1|1g3gqs0,6,1,0|1gbdxfz,6,1,0|1gbdxg0,7,8,1|1gm6tfz,7,8,1|1gm6tg0,6,1,0|1gu403z,6,1,0|1gu4040,7,8,1|1h4ww3z,7,8,1|1h4ww40,6,1,0|1hcu2rz,6,1,0|1hcu2s0,7,8,1|1hnzxfz,7,8,1|1hnzxg0,6,1,0|1hvk5fz,6,1,0|1hvk5g0,7,8,1|1i6q03z,7,8,1|1i6q040,6,1,0|1iea83z,6,1,0|1iea840,7,8,1|1ipg2rz,7,8,1|1ipg2s0,6,1,0|1ixd9fz,6,1,0|1ixd9g0,7,8,1|1j865fz,7,8,1|1j865g0,6,1,0|1jg3c3z,6,1,0|1jg3c40,7,8,1|1jqw83z,7,8,1|1jqw840,6,1,0|1jyterz,6,1,0|1jytes0,7,8,1|1k9z9fz,7,8,1|1k9z9g0,6,1,0|1khjhfz,6,1,0|1khjhg0,7,8,1|1kspc3z,7,8,1|1kspc40,6,1,0|1l09k3z,6,1,0|1l09k40,7,8,1|1lbferz,7,8,1|1lbfes0,6,1,0|1ljclfz,6,1,0|1ljclg0,7,8,1|1lu5hfz,7,8,1|1lu5hg0,6,1,0|1m22o3z,6,1,0|1m22o40,7,8,1|1mcvk3z,7,8,1|1mcvk40,6,1,0|1mksqrz,6,1,0|1mksqs0,7,8,1|1mvlmrz,7,8,1|1mvlms0,6,1,0|1n3itfz,6,1,0|1n3itg0,7,8,1|1neoo3z,7,8,1|1neoo40,6,1,0|1nm8w3z,6,1,0|1nm8w40,7,8,1|1nxeqrz,7,8,1|1nxeqs0,6,1,0|1o4yyrz,6,1,0|1o4yys0,7,8,1|1og4tfz,7,8,1|1og4tg0,6,1,0|1oo203z,6,1,0|1oo2040,7,8,1|1oyuw3z,7,8,1|1oyuw40,6,1,0|1p6s2rz,6,1,0|1p6s2s0,7,8,1|1phkyrz,7,8,1|1phkys0,6,1,0|1ppi5fz,6,1,0|1ppi5g0,7,8,1|1q0o03z,7,8,1|1q0o040,6,1,0|1q8883z,6,1,0|1q88840,7,8,1|1qje2rz,7,8,1|1qje2s0,6,1,0|1qqyarz,6,1,0|1qqyas0,7,8,1|1r245fz,7,8,1|1r245g0,6,1,0|1r9odfz,6,1,0|1r9odg0,7,8,1|1rku83z,7,8,1|1rku840,6,1,0|1rsrerz,6,1,0|1rsres0,7,8,1|1s3karz,7,8,1|1s3kas0,6,1,0|1sbhhfz,6,1,0|1sbhhg0,7,8,1|1smadfz,7,8,1|1smadg0,6,1,0|1su7k3z,6,1,0|1su7k40,7,8,1|1t5derz,7,8,1|1t5des0,6,1,0|1tcxmrz,6,1,0|1tcxms0,7,8,1|1to3hfz,7,8,1|1to3hg0,6,1,0|1tvnpfz,6,1,0|1tvnpg0,7,8,1|1u6tk3z,7,8,1|1u6tk40,6,1,0|1ueqqrz,6,1,0|1ueqqs0,7,8,1|1upjmrz,7,8,1|1upjms0,6,1,0|1uxgtfz,6,1,0|1uxgtg0,7,8,1|1v89pfz,7,8,1|1v89pg0,6,1,0|1vg6w3z,6,1,0|1vg6w40,7,8,1|1vqzs3z,7,8,1|1vqzs40,6,1,0|NaN,6,1,0",
        "Atlantic/Madeira|,0,296,0|-18vsfjd,0,296,0|-18vsfjc,134,296,0|-u9rek1,134,296,0|-u9rek0,12,13,0|-rxwyo1,12,13,0|-rxwyo0,16,1,1|-rqx181,16,1,1|-rqx180,12,13,0|-rkqt81,12,13,0|-rkqt80,16,1,1|-r90o01,16,1,1|-r90o00,12,13,0|-r1yvw1,12,13,0|-r1yvw0,16,1,1|-qq8qo1,16,1,1|-qq8qo0,12,13,0|-qj6yk1,12,13,0|-qj6yk0,16,1,1|-q7gtc1,16,1,1|-q7gtc0,12,13,0|-q0d6k1,12,13,0|-q0d6k0,16,1,1|-pon1c1,16,1,1|-pon1c0,12,13,0|-phl981,12,13,0|-phl980,16,1,1|-p5v401,16,1,1|-p5v400,12,13,0|-nuso01,12,13,0|-nuso00,16,1,1|-nm0001,16,1,1|-nm0000,12,13,0|-mt6yo1,12,13,0|-mt6yo0,16,1,1|-mkjuo1,16,1,1|-mkjuo0,12,13,0|-matuo1,12,13,0|-matuo0,16,1,1|-m1ts01,16,1,1|-m1ts00,12,13,0|-lrqtc1,12,13,0|-lrqtc0,16,1,1|-liqqo1,16,1,1|-liqqo0,12,13,0|-l8ns01,12,13,0|-l8ns00,16,1,1|-l00o01,16,1,1|-l00o00,12,13,0|-k77mo1,12,13,0|-k77mo0,16,1,1|-jykio1,16,1,1|-jykio0,12,13,0|-jp7hc1,12,13,0|-jp7hc0,16,1,1|-jfug01,16,1,1|-jfug00,12,13,0|-inedc1,12,13,0|-inedc0,16,1,1|-ie1c01,16,1,1|-ie1c00,12,13,0|-i519c1,12,13,0|-i519c0,16,1,1|-hvb9c1,16,1,1|-hvb9c0,12,13,0|-hl8ao1,12,13,0|-hl8ao0,16,1,1|-hcl6o1,16,1,1|-hcl6o0,12,13,0|-h385c1,12,13,0|-h385c0,16,1,1|-gtv401,16,1,1|-gtv400,12,13,0|-gkv1c1,12,13,0|-gkv1c0,16,1,1|-gb51c1,16,1,1|-gb51c0,12,13,0|-g122o1,12,13,0|-g122o0,16,1,1|-fpw801,16,1,1|-fpw800,12,13,0|-fkuqo1,12,13,0|-fkuqo0,16,1,1|-f98801,16,1,1|-f98800,12,13,0|-ezyw01,12,13,0|-ezyw00,16,1,1|-eqk001,16,1,1|-eqk000,12,13,0|-eibpc1,12,13,0|-eibpc0,16,1,1|-eg6041,16,1,1|-eg6040,17,8,1|-eaelg1,17,8,1|-eaelg0,16,1,1|-e6sw01,16,1,1|-e6sw00,12,13,0|-dzlmo1,12,13,0|-dzlmo0,16,1,1|-dxsw41,16,1,1|-dxsw40,17,8,1|-dqylg1,17,8,1|-dqylg0,16,1,1|-dnpuo1,16,1,1|-dnpuo0,12,13,0|-dgvk01,12,13,0|-dgvk00,16,1,1|-depus1,16,1,1|-depus0,17,8,1|-d88is1,17,8,1|-d88is0,16,1,1|-d4zs01,16,1,1|-d4zs00,12,13,0|-cy5hc1,12,13,0|-cy5hc0,16,1,1|-cvzs41,16,1,1|-cvzs40,17,8,1|-cpig41,17,8,1|-cpig40,16,1,1|-cm9pc1,16,1,1|-cm9pc0,12,13,0|-cdzk01,12,13,0|-cdzk00,16,1,1|-c4mio1,16,1,1|-c4mio0,12,13,0|-bv9901,12,13,0|-bv9900,16,1,1|-blw7o1,16,1,1|-blw7o0,12,13,0|-bcj6c1,12,13,0|-bcj6c0,16,1,1|-b36501,16,1,1|-b36500,12,13,0|-att3o1,12,13,0|-att3o0,16,1,1|-akg2c1,16,1,1|-akg2c0,12,13,0|-ab3101,12,13,0|-ab3100,16,1,1|-a1pzo1,16,1,1|-a1pzo0,12,13,0|-9scyc1,12,13,0|-9scyc0,16,1,1|-9imyc1,16,1,1|-9imyc0,12,13,0|-999x01,12,13,0|-999x00,16,1,1|-8zwvo1,16,1,1|-8zwvo0,12,13,0|-8qjuc1,12,13,0|-8qjuc0,16,1,1|-8h6t01,16,1,1|-8h6t00,12,13,0|-87tro1,12,13,0|-87tro0,16,1,1|-7ygqc1,16,1,1|-7ygqc0,12,13,0|-7p3p01,12,13,0|-7p3p00,16,1,1|-7fqno1,16,1,1|-7fqno0,12,13,0|-76dmc1,12,13,0|-76dmc0,16,1,1|-6wnmc1,16,1,1|-6wnmc0,12,13,0|-6nal01,12,13,0|-6nal00,16,1,1|-6dxjo1,16,1,1|-6dxjo0,12,13,0|-64kic1,12,13,0|-64kic0,16,1,1|-5v7h01,16,1,1|-5v7h00,12,13,0|-5lufo1,12,13,0|-5lufo0,16,1,1|-5chec1,16,1,1|-5chec0,12,13,0|-534d01,12,13,0|-534d00,16,1,1|-4trbo1,16,1,1|-4trbo0,12,13,0|-4keac1,12,13,0|-4keac0,16,1,1|-4b1901,16,1,1|-4b1900,12,13,0|-41o7o1,12,13,0|-41o7o0,16,1,1|-3ry7o1,16,1,1|-3ry7o0,12,13,0|-3il6c1,12,13,0|-3il6c0,16,1,1|-398501,16,1,1|-398500,12,13,0|-2zv3o1,12,13,0|-2zv3o0,16,1,1|-2qi2c1,16,1,1|-2qi2c0,12,13,0|-2h5101,12,13,0|-2h5100,16,1,1|-27rzo1,16,1,1|-27rzo0,12,13,0|-1yeyc1,12,13,0|-1yeyc0,16,1,1|-1p1x01,16,1,1|-1p1x00,6,1,0|6e8vzz,6,1,0|6e8w00,7,8,1|6n8ynz,7,8,1|6n8yo0,6,1,0|6wlzzz,6,1,0|6wm000,7,8,1|75z1bz,7,8,1|75z1c0,6,1,0|7fc2nz,6,1,0|7fc2o0,7,8,1|7p22nz,7,8,1|7p22o0,6,1,0|7yf3zz,6,1,0|7yf400,7,8,1|87s5bz,7,8,1|87s5c0,6,1,0|8h56nz,6,1,0|8h56o0,7,8,1|8qiarz,7,8,1|8qias0,6,1,0|8zvc3z,6,1,0|8zvc40,7,8,1|998dfz,7,8,1|998dg0,6,1,0|9ilerz,6,1,0|9iles0,7,8,1|9ryg3z,7,8,1|9ryg40,6,1,0|a1bhfz,6,1,0|a1bhg0,7,8,1|aaoirz,7,8,1|aaois0,6,1,0|ak1k3z,6,1,0|ak1k40,7,8,1|atrk3z,7,8,1|atrk40,6,1,0|b34lfz,6,1,0|b34lg0,7,8,1|bchmrz,7,8,1|bchms0,6,1,0|bluo3z,6,1,0|bluo40,7,8,1|bv7pfz,7,8,1|bv7pg0,6,1,0|c4kqrz,6,1,0|c4kqs0,7,8,1|cdxs3z,7,8,1|cdxs40,6,1,0|cnatfz,6,1,0|cnatg0,7,8,1|cwnurz,7,8,1|cwnus0,6,1,0|d60w3z,6,1,0|d60w40,7,8,1|dfdxfz,7,8,1|dfdxg0,6,1,0|dp3xfz,6,1,0|dp3xg0,7,8,1|dzwtfz,7,8,1|dzwtg0,6,1,0|e7u03z,6,1,0|e7u040,7,8,1|eimw3z,7,8,1|eimw40,6,1,0|eqk2rz,6,1,0|eqk2s0,7,8,1|f1cyrz,7,8,1|f1cys0,6,1,0|f9a5fz,6,1,0|f9a5g0,7,8,1|fkg03z,7,8,1|fkg040,6,1,0|fs083z,6,1,0|fs0840,7,8,1|g362rz,7,8,1|g362s0,6,1,0|gaqarz,6,1,0|gaqas0,7,8,1|glw5fz,7,8,1|glw5g0,6,1,0|gttc3z,6,1,0|gttc40,7,8,1|h4m83z,7,8,1|h4m840,6,1,0|hcjerz,6,1,0|hcjes0,7,8,1|hncarz,7,8,1|hncas0,6,1,0|hv9hfz,6,1,0|hv9hg0,7,8,1|i6fc3z,7,8,1|i6fc40,6,1,0|idzk3z,6,1,0|idzk40,7,8,1|ip5erz,7,8,1|ip5es0,6,1,0|iwpmrz,6,1,0|iwpms0,7,8,1|j7vhfz,7,8,1|j7vhg0,6,1,0|jffpfz,6,1,0|jffpg0,7,8,1|jqlk3z,7,8,1|jqlk40,6,1,0|jyiqrz,6,1,0|jyiqs0,7,8,1|k9bmrz,7,8,1|k9bms0,6,1,0|kh8tfz,6,1,0|kh8tg0,7,8,1|ks1pfz,7,8,1|ks1pg0,6,1,0|kzyw3z,6,1,0|kzyw40,7,8,1|lb4qrz,7,8,1|lb4qs0,6,1,0|lioyrz,6,1,0|lioys0,7,8,1|ltutfz,7,8,1|ltutg0,6,1,0|m1f1fz,6,1,0|m1f1g0,7,8,1|mckw3z,7,8,1|mckw40,6,1,0|mki2rz,6,1,0|mki2s0,7,8,1|mvayrz,7,8,1|mvays0,6,1,0|n385fz,6,1,0|n385g0,7,8,1|ne11fz,7,8,1|ne11g0,6,1,0|nly83z,6,1,0|nly840,7,8,1|nwr43z,7,8,1|nwr440,6,1,0|o4oarz,6,1,0|o4oas0,7,8,1|ofu5fz,7,8,1|ofu5g0,6,1,0|onedfz,6,1,0|onedg0,7,8,1|oyk83z,7,8,1|oyk840,6,1,0|p64g3z,6,1,0|p64g40,7,8,1|phaarz,7,8,1|phaas0,6,1,0|pp7hfz,6,1,0|pp7hg0,7,8,1|q00dfz,7,8,1|q00dg0,6,1,0|q7xk3z,6,1,0|q7xk40,7,8,1|qiqg3z,7,8,1|qiqg40,6,1,0|qqnmrz,6,1,0|qqnms0,7,8,1|r1thfz,7,8,1|r1thg0,6,1,0|r9dpfz,6,1,0|r9dpg0,7,8,1|rkjk3z,7,8,1|rkjk40,6,1,0|rs3s3z,6,1,0|rs3s40,7,8,1|s39mrz,7,8,1|s39ms0,6,1,0|sb6tfz,6,1,0|sb6tg0,7,8,1|slzpfz,7,8,1|slzpg0,6,1,0|stww3z,6,1,0|stww40,7,8,1|t4ps3z,7,8,1|t4ps40,6,1,0|tcmyrz,6,1,0|tcmys0,7,8,1|tnfurz,7,8,1|tnfus0,6,1,0|tvd1fz,6,1,0|tvd1g0,7,8,1|u6iw3z,7,8,1|u6iw40,6,1,0|ue343z,6,1,0|ue3440,7,8,1|up8yrz,7,8,1|up8ys0,6,1,0|uwt6rz,6,1,0|uwt6s0,7,8,1|v7z1fz,7,8,1|v7z1g0,6,1,0|vfw83z,6,1,0|vfw840,7,8,1|vqp43z,7,8,1|vqp440,6,1,0|vymarz,6,1,0|vymas0,7,8,1|w9f6rz,7,8,1|w9f6s0,6,1,0|whcdfz,6,1,0|whcdg0,7,8,1|wsi83z,7,8,1|wsi840,6,1,0|x02g3z,6,1,0|x02g40,7,8,1|xb8arz,7,8,1|xb8as0,6,1,0|xisirz,6,1,0|xisis0,7,8,1|xtydfz,7,8,1|xtydg0,6,1,0|y1ilfz,6,1,0|y1ilg0,7,8,1|ycog3z,7,8,1|ycog40,6,1,0|yklmrz,6,1,0|yklms0,7,8,1|yveirz,7,8,1|yveis0,6,1,0|z3bpfz,6,1,0|z3bpg0,7,8,1|ze4lfz,7,8,1|ze4lg0,6,1,0|zm1s3z,6,1,0|zm1s40,7,8,1|zx7mrz,7,8,1|zx7ms0,6,1,0|104rurz,6,1,0|104rus0,7,8,1|10fxpfz,7,8,1|10fxpg0,6,1,0|10nhxfz,6,1,0|10nhxg0,7,8,1|10yns3z,7,8,1|10yns40,6,1,0|116kyrz,6,1,0|116kys0,7,8,1|11hdurz,7,8,1|11hdus0,6,1,0|11pb1fz,6,1,0|11pb1g0,7,8,1|1203xfz,7,8,1|1203xg0,6,1,0|128143z,6,1,0|1281440,7,8,1|12iu03z,7,8,1|12iu040,6,1,0|12qr6rz,6,1,0|12qr6s0,7,8,1|131x1fz,7,8,1|131x1g0,6,1,0|139h9fz,6,1,0|139h9g0,7,8,1|13kn43z,7,8,1|13kn440,6,1,0|13s7c3z,6,1,0|13s7c40,7,8,1|143d6rz,7,8,1|143d6s0,6,1,0|14badfz,6,1,0|14badg0,7,8,1|14m39fz,7,8,1|14m39g0,6,1,0|14u0g3z,6,1,0|14u0g40,7,8,1|154tc3z,7,8,1|154tc40,6,1,0|15cqirz,6,1,0|15cqis0,7,8,1|15nwdfz,7,8,1|15nwdg0,6,1,0|15vglfz,6,1,0|15vglg0,7,8,1|166mg3z,7,8,1|166mg40,6,1,0|16e6o3z,6,1,0|16e6o40,7,8,1|16pcirz,7,8,1|16pcis0,6,1,0|16x9pfz,6,1,0|16x9pg0,7,8,1|1782lfz,7,8,1|1782lg0,6,1,0|17fzs3z,6,1,0|17fzs40,7,8,1|17qso3z,7,8,1|17qso40,6,1,0|17ypurz,6,1,0|17ypus0,7,8,1|189iqrz,7,8,1|189iqs0,6,1,0|18hfxfz,6,1,0|18hfxg0,7,8,1|18sls3z,7,8,1|18sls40,6,1,0|190603z,6,1,0|1906040,7,8,1|19bburz,7,8,1|19bbus0,6,1,0|19iw2rz,6,1,0|19iw2s0,7,8,1|19u1xfz,7,8,1|19u1xg0,6,1,0|1a1z43z,6,1,0|1a1z440,7,8,1|1acs03z,7,8,1|1acs040,6,1,0|1akp6rz,6,1,0|1akp6s0,7,8,1|1avi2rz,7,8,1|1avi2s0,6,1,0|1b3f9fz,6,1,0|1b3f9g0,7,8,1|1bel43z,7,8,1|1bel440,6,1,0|1bm5c3z,6,1,0|1bm5c40,7,8,1|1bxb6rz,7,8,1|1bxb6s0,6,1,0|1c4verz,6,1,0|1c4ves0,7,8,1|1cg19fz,7,8,1|1cg19g0,6,1,0|1cnlhfz,6,1,0|1cnlhg0,7,8,1|1cyrc3z,7,8,1|1cyrc40,6,1,0|1d6oirz,6,1,0|1d6ois0,7,8,1|1dhherz,7,8,1|1dhhes0,6,1,0|1dpelfz,6,1,0|1dpelg0,7,8,1|1e07hfz,7,8,1|1e07hg0,6,1,0|1e84o3z,6,1,0|1e84o40,7,8,1|1ejairz,7,8,1|1ejais0,6,1,0|1equqrz,6,1,0|1equqs0,7,8,1|1f20lfz,7,8,1|1f20lg0,6,1,0|1f9ktfz,6,1,0|1f9ktg0,7,8,1|1fkqo3z,7,8,1|1fkqo40,6,1,0|1fsnurz,6,1,0|1fsnus0,7,8,1|1g3gqrz,7,8,1|1g3gqs0,6,1,0|1gbdxfz,6,1,0|1gbdxg0,7,8,1|1gm6tfz,7,8,1|1gm6tg0,6,1,0|1gu403z,6,1,0|1gu4040,7,8,1|1h4ww3z,7,8,1|1h4ww40,6,1,0|1hcu2rz,6,1,0|1hcu2s0,7,8,1|1hnzxfz,7,8,1|1hnzxg0,6,1,0|1hvk5fz,6,1,0|1hvk5g0,7,8,1|1i6q03z,7,8,1|1i6q040,6,1,0|1iea83z,6,1,0|1iea840,7,8,1|1ipg2rz,7,8,1|1ipg2s0,6,1,0|1ixd9fz,6,1,0|1ixd9g0,7,8,1|1j865fz,7,8,1|1j865g0,6,1,0|1jg3c3z,6,1,0|1jg3c40,7,8,1|1jqw83z,7,8,1|1jqw840,6,1,0|1jyterz,6,1,0|1jytes0,7,8,1|1k9z9fz,7,8,1|1k9z9g0,6,1,0|1khjhfz,6,1,0|1khjhg0,7,8,1|1kspc3z,7,8,1|1kspc40,6,1,0|1l09k3z,6,1,0|1l09k40,7,8,1|1lbferz,7,8,1|1lbfes0,6,1,0|1ljclfz,6,1,0|1ljclg0,7,8,1|1lu5hfz,7,8,1|1lu5hg0,6,1,0|1m22o3z,6,1,0|1m22o40,7,8,1|1mcvk3z,7,8,1|1mcvk40,6,1,0|1mksqrz,6,1,0|1mksqs0,7,8,1|1mvlmrz,7,8,1|1mvlms0,6,1,0|1n3itfz,6,1,0|1n3itg0,7,8,1|1neoo3z,7,8,1|1neoo40,6,1,0|1nm8w3z,6,1,0|1nm8w40,7,8,1|1nxeqrz,7,8,1|1nxeqs0,6,1,0|1o4yyrz,6,1,0|1o4yys0,7,8,1|1og4tfz,7,8,1|1og4tg0,6,1,0|1oo203z,6,1,0|1oo2040,7,8,1|1oyuw3z,7,8,1|1oyuw40,6,1,0|1p6s2rz,6,1,0|1p6s2s0,7,8,1|1phkyrz,7,8,1|1phkys0,6,1,0|1ppi5fz,6,1,0|1ppi5g0,7,8,1|1q0o03z,7,8,1|1q0o040,6,1,0|1q8883z,6,1,0|1q88840,7,8,1|1qje2rz,7,8,1|1qje2s0,6,1,0|1qqyarz,6,1,0|1qqyas0,7,8,1|1r245fz,7,8,1|1r245g0,6,1,0|1r9odfz,6,1,0|1r9odg0,7,8,1|1rku83z,7,8,1|1rku840,6,1,0|1rsrerz,6,1,0|1rsres0,7,8,1|1s3karz,7,8,1|1s3kas0,6,1,0|1sbhhfz,6,1,0|1sbhhg0,7,8,1|1smadfz,7,8,1|1smadg0,6,1,0|1su7k3z,6,1,0|1su7k40,7,8,1|1t5derz,7,8,1|1t5des0,6,1,0|1tcxmrz,6,1,0|1tcxms0,7,8,1|1to3hfz,7,8,1|1to3hg0,6,1,0|1tvnpfz,6,1,0|1tvnpg0,7,8,1|1u6tk3z,7,8,1|1u6tk40,6,1,0|1ueqqrz,6,1,0|1ueqqs0,7,8,1|1upjmrz,7,8,1|1upjms0,6,1,0|1uxgtfz,6,1,0|1uxgtg0,7,8,1|1v89pfz,7,8,1|1v89pg0,6,1,0|1vg6w3z,6,1,0|1vg6w40,7,8,1|1vqzs3z,7,8,1|1vqzs40,6,1,0|NaN,6,1,0",
        "Atlantic/Reykjavik|,0,0,0|-u9rgl5,0,0,0|-u9rgl4,1,1,0|NaN,1,1,0",
        "Atlantic/South_Georgia|,0,297,0|-15r12kh,0,297,0|-15r12kg,39,43,0|NaN,39,43,0",
        "Atlantic/St_Helena|,0,0,0|-u9rgl5,0,0,0|-u9rgl4,1,1,0|NaN,1,1,0",
        "Atlantic/Stanley|,0,298,0|-15r0ymd,0,298,0|-15r0ymc,81,298,0|-u63pad,81,298,0|-u63pac,41,40,0|-gu7rk1,41,40,0|-gu7rk0,38,41,1|-gl7ro1,38,41,1|-gl7ro0,41,40,0|-gbhow1,41,40,0|-gbhow0,38,41,1|-g2hp01,38,41,1|-g2hp00,41,40,0|-fsenk1,41,40,0|-fsenk0,38,41,1|-fjeno1,38,41,1|-fjeno0,41,40,0|-f9okw1,41,40,0|-f9okw0,38,41,1|-f0ol01,38,41,1|-f0ol00,41,40,0|-eqyi81,41,40,0|-eqyi80,38,41,1|-ehyic1,38,41,1|-ehyic0,41,40,0|-e88fk1,41,40,0|-e88fk0,38,41,1|-e3aqc1,38,41,1|-e3aqc0,41,40,0|6yf4fz,41,40,0|6yf4g0,38,41,0|75z9nz,38,41,0|75z9o0,39,43,1|7h51jz,39,43,1|7h51k0,38,41,0|7ocdnz,38,41,0|7ocdo0,39,43,1|7zv47z,39,43,1|7zv480,38,41,0|872gbz,38,41,0|872gc0,38,41,1|8i8azz,38,41,1|8i8b00,41,40,0|8pslrz,41,40,0|8psls0,38,41,1|90ydnz,38,41,1|90ydo0,41,40,0|98iofz,41,40,0|98iog0,38,41,1|9jogbz,38,41,1|9jogc0,41,40,0|9r8r3z,41,40,0|9r8r40,38,41,1|a2eizz,38,41,1|a2ej00,41,40,0|a9ytrz,41,40,0|a9yts0,38,41,1|alhkbz,38,41,1|alhkc0,41,40,0|asowfz,41,40,0|asowg0,38,41,1|b47mzz,38,41,1|b47n00,41,40,0|bbrxrz,41,40,0|bbrxs0,38,41,1|bmxpnz,38,41,1|bmxpo0,41,40,0|bui0fz,41,40,0|bui0g0,38,41,1|c5nsbz,38,41,1|c5nsc0,41,40,0|cd833z,41,40,0|cd8340,38,41,1|coduzz,38,41,1|codv00,41,40,0|cvy5rz,41,40,0|cvy5s0,38,41,1|d73xnz,38,41,1|d73xo0,41,40,0|deo8fz,41,40,0|deo8g0,38,41,1|dq6yzz,38,41,1|dq6z00,41,40,0|dxr9rz,41,40,0|dxr9s0,38,41,1|e8x1nz,38,41,1|e8x1o0,41,40,0|eghcfz,41,40,0|eghcg0,38,41,1|ern4bz,38,41,1|ern4c0,41,40,0|ez7f3z,41,40,0|ez7f40,38,41,1|fad6zz,38,41,1|fad700,41,40,0|fhxhrz,41,40,0|fhxhs0,38,41,1|ft39nz,38,41,1|ft39o0,41,40,0|g0nkfz,41,40,0|g0nkg0,38,41,1|gbthvz,38,41,1|gbthw0,41,40,0|gj0tzz,41,40,0|gj0u00,38,41,1|guwj7z,38,41,1|guwj80,41,40,0|h1qwnz,41,40,0|h1qwo0,38,41,1|hdmlvz,38,41,1|hdmlw0,41,40,0|hktxzz,41,40,0|hkty00,38,41,1|hwcojz,38,41,1|hwcok0,41,40,0|i3k0nz,41,40,0|i3k0o0,38,41,1|if2r7z,38,41,1|if2r80,41,40,0|ima3bz,41,40,0|ima3c0,38,41,1|ixstvz,38,41,1|ixstw0,41,40,0|j505zz,41,40,0|j50600,38,41,1|jgiwjz,38,41,1|jgiwk0,41,40,0|jnq8nz,41,40,0|jnq8o0,38,41,1|jzlxvz,38,41,1|jzlxw0,41,40,0|k6t9zz,41,40,0|k6ta00,38,41,1|kic0jz,38,41,1|kic0k0,41,40,0|kpjcnz,41,40,0|kpjco0,38,41,1|l1237z,38,41,1|l12380,41,40,0|l89fbz,41,40,0|l89fc0,38,41,0|NaN,38,41,0",
        "Australia/Adelaide|,0,299,0|-133j2zx,0,299,0|-133j2zw,135,216,0|-10vsp01,135,216,0|-10vsp00,135,240,0|-rnsq61,135,240,0|-rnsq60,136,300,1|-rjj0u1,136,300,1|-rjj0u0,135,240,0|-em3gu1,135,240,0|-em3gu0,136,300,1|-ehmcu1,136,300,1|-ehmcu0,135,240,0|-e89bi1,135,240,0|-e89bi0,136,300,1|-dywa61,136,300,1|-dywa60,135,240,0|-dp6a61,135,240,0|-dp6a60,136,300,1|-dg67i1,136,300,1|-dg67i0,135,240,0|ycghz,135,240,0|ycgi0,136,300,1|14gttz,136,300,1|14gtu0,135,240,0|1h2j5z,135,240,0|1h2j60,136,300,1|1njv5z,136,300,1|1njv60,135,240,0|1zsltz,135,240,0|1zslu0,136,300,1|269xtz,136,300,1|269xu0,135,240,0|2iiohz,135,240,0|2iioi0,136,300,1|2p00hz,136,300,1|2p00i0,135,240,0|318r5z,135,240,0|318r60,136,300,1|3831tz,136,300,1|3831u0,135,240,0|3kbshz,135,240,0|3kbsi0,136,300,1|3qt4hz,136,300,1|3qt4i0,135,240,0|431v5z,135,240,0|431v60,136,300,1|49j75z,136,300,1|49j760,135,240,0|4lrxtz,135,240,0|4lrxu0,136,300,1|4s99tz,136,300,1|4s99u0,135,240,0|54i0hz,135,240,0|54i0i0,136,300,1|5azchz,136,300,1|5azci0,135,240,0|5n835z,135,240,0|5n8360,136,300,1|5tpf5z,136,300,1|5tpf60,135,240,0|65y5tz,135,240,0|65y5u0,136,300,1|6csghz,136,300,1|6csgi0,135,240,0|6p175z,135,240,0|6p1760,136,300,1|6vij5z,136,300,1|6vij60,135,240,0|77r9tz,135,240,0|77r9u0,136,300,1|7e8ltz,136,300,1|7e8lu0,135,240,0|7qhchz,135,240,0|7qhci0,136,300,1|7wyohz,136,300,1|7wyoi0,135,240,0|897f5z,135,240,0|897f60,136,300,1|8geohz,136,300,1|8geoi0,135,240,0|8rkj5z,135,240,0|8rkj60,136,300,1|8z4r5z,136,300,1|8z4r60,135,240,0|9ankhz,135,240,0|9anki0,136,300,1|9i7shz,136,300,1|9i7si0,135,240,0|9tqltz,135,240,0|9tqlu0,136,300,1|a0xv5z,136,300,1|a0xv60,135,240,0|acgohz,135,240,0|acgoi0,136,300,1|ajnxtz,136,300,1|ajnxu0,135,240,0|av6r5z,135,240,0|av6r60,136,300,1|b1o35z,136,300,1|b1o360,135,240,0|bdwttz,135,240,0|bdwtu0,136,300,1|blh1tz,136,300,1|blh1u0,135,240,0|bwmwhz,135,240,0|bwmwi0,136,300,1|c3h75z,136,300,1|c3h760,135,240,0|cfpxtz,135,240,0|cfpxu0,136,300,1|cmx75z,136,300,1|cmx760,135,240,0|cyg0hz,135,240,0|cyg0i0,136,300,1|d608hz,136,300,1|d608i0,135,240,0|dh635z,135,240,0|dh6360,136,300,1|dp39tz,136,300,1|dp39u0,135,240,0|dzw5tz,135,240,0|dzw5u0,136,300,1|e7tchz,136,300,1|e7tci0,135,240,0|eim8hz,135,240,0|eim8i0,136,300,1|eqjf5z,136,300,1|eqjf60,135,240,0|f1cb5z,135,240,0|f1cb60,136,300,1|f99htz,136,300,1|f99hu0,135,240,0|fkfchz,135,240,0|fkfci0,136,300,1|frzkhz,136,300,1|frzki0,135,240,0|g35f5z,135,240,0|g35f60,136,300,1|gapn5z,136,300,1|gapn60,135,240,0|glvhtz,135,240,0|glvhu0,136,300,1|gtsohz,136,300,1|gtsoi0,135,240,0|h4lkhz,135,240,0|h4lki0,136,300,1|hcir5z,136,300,1|hcir60,135,240,0|hnbn5z,135,240,0|hnbn60,136,300,1|hv8ttz,136,300,1|hv8tu0,135,240,0|i6eohz,135,240,0|i6eoi0,136,300,1|idywhz,136,300,1|idywi0,135,240,0|ip4r5z,135,240,0|ip4r60,136,300,1|ix1xtz,136,300,1|ix1xu0,135,240,0|j7uttz,135,240,0|j7utu0,136,300,1|jff1tz,136,300,1|jff1u0,135,240,0|jqkwhz,135,240,0|jqkwi0,136,300,1|jyv1tz,136,300,1|jyv1u0,135,240,0|k8835z,135,240,0|k88360,136,300,1|khl4hz,136,300,1|khl4i0,135,240,0|kqy5tz,135,240,0|kqy5u0,136,300,1|l0b75z,136,300,1|l0b760,135,240,0|l9o8hz,135,240,0|l9o8i0,136,300,1|lj19tz,136,300,1|lj19u0,135,240,0|lseb5z,135,240,0|lseb60,136,300,1|m1rchz,136,300,1|m1rci0,135,240,0|mbhchz,135,240,0|mbhci0,136,300,1|mkudtz,136,300,1|mkudu0,135,240,0|mu7f5z,135,240,0|mu7f60,136,300,1|n3kghz,136,300,1|n3kgi0,135,240,0|ncxhtz,135,240,0|ncxhu0,136,300,1|nmaj5z,136,300,1|nmaj60,135,240,0|nvnkhz,135,240,0|nvnki0,136,300,1|o50ltz,136,300,1|o50lu0,135,240,0|oedn5z,135,240,0|oedn60,136,300,1|onqohz,136,300,1|onqoi0,135,240,0|ox3ptz,135,240,0|ox3pu0,136,300,1|p6gr5z,136,300,1|p6gr60,135,240,0|pg6r5z,135,240,0|pg6r60,136,300,1|ppjshz,136,300,1|ppjsi0,135,240,0|pywttz,135,240,0|pywtu0,136,300,1|q89v5z,136,300,1|q89v60,135,240,0|qhmwhz,135,240,0|qhmwi0,136,300,1|qqzxtz,136,300,1|qqzxu0,135,240,0|r0cz5z,135,240,0|r0cz60,136,300,1|r9q0hz,136,300,1|r9q0i0,135,240,0|rj31tz,135,240,0|rj31u0,136,300,1|rsg35z,136,300,1|rsg360,135,240,0|s1t4hz,135,240,0|s1t4i0,136,300,1|sbj4hz,136,300,1|sbj4i0,135,240,0|skw5tz,135,240,0|skw5u0,136,300,1|su975z,136,300,1|su9760,135,240,0|t3m8hz,135,240,0|t3m8i0,136,300,1|tcz9tz,136,300,1|tcz9u0,135,240,0|tmcb5z,135,240,0|tmcb60,136,300,1|tvpchz,136,300,1|tvpci0,135,240,0|u52dtz,135,240,0|u52du0,136,300,1|ueff5z,136,300,1|ueff60,135,240,0|unsghz,135,240,0|unsgi0,136,300,1|ux5htz,136,300,1|ux5hu0,135,240,0|v6vhtz,135,240,0|v6vhu0,136,300,1|vg8j5z,136,300,1|vg8j60,135,240,0|vplkhz,135,240,0|vplki0,136,300,1|vyyltz,136,300,1|vyylu0,135,240,0|w8bn5z,135,240,0|w8bn60,136,300,1|whoohz,136,300,1|whooi0,135,240,0|wr1ptz,135,240,0|wr1pu0,136,300,1|x0er5z,136,300,1|x0er60,135,240,0|x9rshz,135,240,0|x9rsi0,136,300,1|xj4ttz,136,300,1|xj4tu0,135,240,0|xshv5z,135,240,0|xshv60,136,300,1|y1uwhz,136,300,1|y1uwi0,135,240,0|ybkwhz,135,240,0|ybkwi0,136,300,1|ykxxtz,136,300,1|ykxxu0,135,240,0|yuaz5z,135,240,0|yuaz60,136,300,1|z3o0hz,136,300,1|z3o0i0,135,240,0|zd11tz,135,240,0|zd11u0,136,300,1|zme35z,136,300,1|zme360,135,240,0|zvr4hz,135,240,0|zvr4i0,136,300,1|10545tz,136,300,1|10545u0,135,240,0|10eh75z,135,240,0|10eh760,136,300,1|10nu8hz,136,300,1|10nu8i0,135,240,0|10xk8hz,135,240,0|10xk8i0,136,300,1|116x9tz,136,300,1|116x9u0,135,240,0|11gab5z,135,240,0|11gab60,136,300,1|11pnchz,136,300,1|11pnci0,135,240,0|11z0dtz,135,240,0|11z0du0,136,300,1|128df5z,136,300,1|128df60,135,240,0|12hqghz,135,240,0|12hqgi0,136,300,1|12r3htz,136,300,1|12r3hu0,135,240,0|130gj5z,135,240,0|130gj60,136,300,1|139tkhz,136,300,1|139tki0,135,240,0|13j6ltz,135,240,0|13j6lu0,136,300,1|13sjn5z,136,300,1|13sjn60,135,240,0|1429n5z,135,240,0|1429n60,136,300,1|14bmohz,136,300,1|14bmoi0,135,240,0|14kzptz,135,240,0|14kzpu0,136,300,1|14ucr5z,136,300,1|14ucr60,135,240,0|153pshz,135,240,0|153psi0,136,300,1|15d2ttz,136,300,1|15d2tu0,135,240,0|15mfv5z,135,240,0|15mfv60,136,300,1|15vswhz,136,300,1|15vswi0,135,240,0|1655xtz,135,240,0|1655xu0,136,300,1|16eiz5z,136,300,1|16eiz60,135,240,0|16nw0hz,135,240,0|16nw0i0,136,300,1|16xm0hz,136,300,1|16xm0i0,135,240,0|176z1tz,135,240,0|176z1u0,136,300,1|17gc35z,136,300,1|17gc360,135,240,0|17pp4hz,135,240,0|17pp4i0,136,300,1|17z25tz,136,300,1|17z25u0,135,240,0|188f75z,135,240,0|188f760,136,300,1|18hs8hz,136,300,1|18hs8i0,135,240,0|18r59tz,135,240,0|18r59u0,136,300,1|190ib5z,136,300,1|190ib60,135,240,0|199vchz,135,240,0|199vci0,136,300,1|19j8dtz,136,300,1|19j8du0,135,240,0|19sydtz,135,240,0|19sydu0,136,300,1|1a2bf5z,136,300,1|1a2bf60,135,240,0|1aboghz,135,240,0|1abogi0,136,300,1|1al1htz,136,300,1|1al1hu0,135,240,0|1auej5z,135,240,0|1auej60,136,300,1|1b3rkhz,136,300,1|1b3rki0,135,240,0|1bd4ltz,135,240,0|1bd4lu0,136,300,1|1bmhn5z,136,300,1|1bmhn60,135,240,0|1bvuohz,135,240,0|1bvuoi0,136,300,1|1c57ptz,136,300,1|1c57pu0,135,240,0|1cekr5z,135,240,0|1cekr60,136,300,1|1cnxshz,136,300,1|1cnxsi0,135,240,0|1cxnshz,135,240,0|1cxnsi0,136,300,1|1d70ttz,136,300,1|1d70tu0,135,240,0|1dgdv5z,135,240,0|1dgdv60,136,300,1|1dpqwhz,136,300,1|1dpqwi0,135,240,0|1dz3xtz,135,240,0|1dz3xu0,136,300,1|1e8gz5z,136,300,1|1e8gz60,135,240,0|1ehu0hz,135,240,0|1ehu0i0,136,300,1|1er71tz,136,300,1|1er71u0,135,240,0|1f0k35z,135,240,0|1f0k360,136,300,1|1f9x4hz,136,300,1|1f9x4i0,135,240,0|1fjn4hz,135,240,0|1fjn4i0,136,300,1|1ft05tz,136,300,1|1ft05u0,135,240,0|1g2d75z,135,240,0|1g2d760,136,300,1|1gbq8hz,136,300,1|1gbq8i0,135,240,0|1gl39tz,135,240,0|1gl39u0,136,300,1|1gugb5z,136,300,1|1gugb60,135,240,0|1h3tchz,135,240,0|1h3tci0,136,300,1|1hd6dtz,136,300,1|1hd6du0,135,240,0|1hmjf5z,135,240,0|1hmjf60,136,300,1|1hvwghz,136,300,1|1hvwgi0,135,240,0|1i59htz,135,240,0|1i59hu0,136,300,1|1iemj5z,136,300,1|1iemj60,135,240,0|1iocj5z,135,240,0|1iocj60,136,300,1|1ixpkhz,136,300,1|1ixpki0,135,240,0|1j72ltz,135,240,0|1j72lu0,136,300,1|1jgfn5z,136,300,1|1jgfn60,135,240,0|1jpsohz,135,240,0|1jpsoi0,136,300,1|1jz5ptz,136,300,1|1jz5pu0,135,240,0|1k8ir5z,135,240,0|1k8ir60,136,300,1|1khvshz,136,300,1|1khvsi0,135,240,0|1kr8ttz,135,240,0|1kr8tu0,136,300,1|1l0lv5z,136,300,1|1l0lv60,135,240,0|1l9ywhz,135,240,0|1l9ywi0,136,300,1|1ljowhz,136,300,1|1ljowi0,135,240,0|1lt1xtz,135,240,0|1lt1xu0,136,300,1|1m2ez5z,136,300,1|1m2ez60,135,240,0|1mbs0hz,135,240,0|1mbs0i0,136,300,1|1ml51tz,136,300,1|1ml51u0,135,240,0|1mui35z,135,240,0|1mui360,136,300,1|1n3v4hz,136,300,1|1n3v4i0,135,240,0|1nd85tz,135,240,0|1nd85u0,136,300,1|1nml75z,136,300,1|1nml760,135,240,0|1nvy8hz,135,240,0|1nvy8i0,136,300,1|1o5b9tz,136,300,1|1o5b9u0,135,240,0|1of19tz,135,240,0|1of19u0,136,300,1|1ooeb5z,136,300,1|1ooeb60,135,240,0|1oxrchz,135,240,0|1oxrci0,136,300,1|1p74dtz,136,300,1|1p74du0,135,240,0|1pghf5z,135,240,0|1pghf60,136,300,1|1ppughz,136,300,1|1ppugi0,135,240,0|1pz7htz,135,240,0|1pz7hu0,136,300,1|1q8kj5z,136,300,1|1q8kj60,135,240,0|1qhxkhz,135,240,0|1qhxki0,136,300,1|1qraltz,136,300,1|1qralu0,135,240,0|1r0nn5z,135,240,0|1r0nn60,136,300,1|1ra0ohz,136,300,1|1ra0oi0,135,240,0|1rjqohz,135,240,0|1rjqoi0,136,300,1|1rt3ptz,136,300,1|1rt3pu0,135,240,0|1s2gr5z,135,240,0|1s2gr60,136,300,1|1sbtshz,136,300,1|1sbtsi0,135,240,0|1sl6ttz,135,240,0|1sl6tu0,136,300,1|1sujv5z,136,300,1|1sujv60,135,240,0|1t3wwhz,135,240,0|1t3wwi0,136,300,1|1td9xtz,136,300,1|1td9xu0,135,240,0|1tmmz5z,135,240,0|1tmmz60,136,300,1|1tw00hz,136,300,1|1tw00i0,135,240,0|1u5q0hz,135,240,0|1u5q0i0,136,300,1|1uf31tz,136,300,1|1uf31u0,135,240,0|1uog35z,135,240,0|1uog360,136,300,1|1uxt4hz,136,300,1|1uxt4i0,135,240,0|1v765tz,135,240,0|1v765u0,136,300,1|1vgj75z,136,300,1|1vgj760,135,240,0|1vpw8hz,135,240,0|1vpw8i0,136,300,1|NaN,136,300,1",
        "Australia/Brisbane|,0,301,0|-1354kc9,0,301,0|-1354kc8,90,187,0|-rnsrk1,90,187,0|-rnsrk0,91,182,1|-rjj281,91,182,1|-rjj280,90,187,0|-em3i81,90,187,0|-em3i80,91,182,1|-ehme81,91,182,1|-ehme80,90,187,0|-e89cw1,90,187,0|-e89cw0,91,182,1|-dywbk1,91,182,1|-dywbk0,90,187,0|-dp6bk1,90,187,0|-dp6bk0,91,182,1|-dg68w1,91,182,1|-dg68w0,90,187,0|ycf3z,90,187,0|ycf40,91,182,1|14gsfz,91,182,1|14gsg0,90,187,0|acgn3z,90,187,0|acgn40,91,182,1|aixz3z,91,182,1|aixz40,90,187,0|av6prz,90,187,0|av6ps0,91,182,1|b1o1rz,91,182,1|b1o1s0,90,187,0|bdwsfz,90,187,0|bdwsg0,91,182,1|bke4fz,91,182,1|bke4g0,90,187,0|NaN,90,187,0",
        "Australia/Broken_Hill|,0,302,0|-133j3j1,0,302,0|-133j3j0,90,187,0|-12a9fs1,90,187,0|-12a9fs0,135,216,0|-10vsp01,135,216,0|-10vsp00,135,240,0|-rnsq61,135,240,0|-rnsq60,136,300,1|-rjj0u1,136,300,1|-rjj0u0,135,240,0|-em3gu1,135,240,0|-em3gu0,136,300,1|-ehmcu1,136,300,1|-ehmcu0,135,240,0|-e89bi1,135,240,0|-e89bi0,136,300,1|-dywa61,136,300,1|-dywa60,135,240,0|-dp6a61,135,240,0|-dp6a60,136,300,1|-dg67i1,136,300,1|-dg67i0,135,240,0|ycghz,135,240,0|ycgi0,136,300,1|14gttz,136,300,1|14gtu0,135,240,0|1h2j5z,135,240,0|1h2j60,136,300,1|1njv5z,136,300,1|1njv60,135,240,0|1zsltz,135,240,0|1zslu0,136,300,1|269xtz,136,300,1|269xu0,135,240,0|2iiohz,135,240,0|2iioi0,136,300,1|2p00hz,136,300,1|2p00i0,135,240,0|318r5z,135,240,0|318r60,136,300,1|3831tz,136,300,1|3831u0,135,240,0|3kbshz,135,240,0|3kbsi0,136,300,1|3qt4hz,136,300,1|3qt4i0,135,240,0|431v5z,135,240,0|431v60,136,300,1|49j75z,136,300,1|49j760,135,240,0|4lrxtz,135,240,0|4lrxu0,136,300,1|4s99tz,136,300,1|4s99u0,135,240,0|54i0hz,135,240,0|54i0i0,136,300,1|5azchz,136,300,1|5azci0,135,240,0|5n835z,135,240,0|5n8360,136,300,1|5tpf5z,136,300,1|5tpf60,135,240,0|65y5tz,135,240,0|65y5u0,136,300,1|6e8b5z,136,300,1|6e8b60,135,240,0|6p175z,135,240,0|6p1760,136,300,1|6vij5z,136,300,1|6vij60,135,240,0|77r9tz,135,240,0|77r9u0,136,300,1|7e8ltz,136,300,1|7e8lu0,135,240,0|7qhchz,135,240,0|7qhci0,136,300,1|7wyohz,136,300,1|7wyoi0,135,240,0|897f5z,135,240,0|897f60,136,300,1|8geohz,136,300,1|8geoi0,135,240,0|8rkj5z,135,240,0|8rkj60,136,300,1|8z4r5z,136,300,1|8z4r60,135,240,0|9ankhz,135,240,0|9anki0,136,300,1|9i7shz,136,300,1|9i7si0,135,240,0|9tqltz,135,240,0|9tqlu0,136,300,1|a0xv5z,136,300,1|a0xv60,135,240,0|acgohz,135,240,0|acgoi0,136,300,1|aiy0hz,136,300,1|aiy0i0,135,240,0|av6r5z,135,240,0|av6r60,136,300,1|b1o35z,136,300,1|b1o360,135,240,0|bdwttz,135,240,0|bdwtu0,136,300,1|bke5tz,136,300,1|bke5u0,135,240,0|bwmwhz,135,240,0|bwmwi0,136,300,1|c3h75z,136,300,1|c3h760,135,240,0|cfpxtz,135,240,0|cfpxu0,136,300,1|cm79tz,136,300,1|cm79u0,135,240,0|cyg0hz,135,240,0|cyg0i0,136,300,1|d4xchz,136,300,1|d4xci0,135,240,0|dh635z,135,240,0|dh6360,136,300,1|dp39tz,136,300,1|dp39u0,135,240,0|dzw5tz,135,240,0|dzw5u0,136,300,1|e7tchz,136,300,1|e7tci0,135,240,0|eim8hz,135,240,0|eim8i0,136,300,1|eqjf5z,136,300,1|eqjf60,135,240,0|f1cb5z,135,240,0|f1cb60,136,300,1|f99htz,136,300,1|f99hu0,135,240,0|fkfchz,135,240,0|fkfci0,136,300,1|frzkhz,136,300,1|frzki0,135,240,0|g35f5z,135,240,0|g35f60,136,300,1|gapn5z,136,300,1|gapn60,135,240,0|glvhtz,135,240,0|glvhu0,136,300,1|gtsohz,136,300,1|gtsoi0,135,240,0|h4lkhz,135,240,0|h4lki0,136,300,1|hcir5z,136,300,1|hcir60,135,240,0|hnbn5z,135,240,0|hnbn60,136,300,1|hv8ttz,136,300,1|hv8tu0,135,240,0|i6eohz,135,240,0|i6eoi0,136,300,1|idywhz,136,300,1|idywi0,135,240,0|ip4r5z,135,240,0|ip4r60,136,300,1|ix1xtz,136,300,1|ix1xu0,135,240,0|j7uttz,135,240,0|j7utu0,136,300,1|jff1tz,136,300,1|jff1u0,135,240,0|jqkwhz,135,240,0|jqkwi0,136,300,1|jyv1tz,136,300,1|jyv1u0,135,240,0|k8835z,135,240,0|k88360,136,300,1|khl4hz,136,300,1|khl4i0,135,240,0|kqy5tz,135,240,0|kqy5u0,136,300,1|l0b75z,136,300,1|l0b760,135,240,0|l9o8hz,135,240,0|l9o8i0,136,300,1|lj19tz,136,300,1|lj19u0,135,240,0|lseb5z,135,240,0|lseb60,136,300,1|m1rchz,136,300,1|m1rci0,135,240,0|mbhchz,135,240,0|mbhci0,136,300,1|mkudtz,136,300,1|mkudu0,135,240,0|mu7f5z,135,240,0|mu7f60,136,300,1|n3kghz,136,300,1|n3kgi0,135,240,0|ncxhtz,135,240,0|ncxhu0,136,300,1|nmaj5z,136,300,1|nmaj60,135,240,0|nvnkhz,135,240,0|nvnki0,136,300,1|o50ltz,136,300,1|o50lu0,135,240,0|oedn5z,135,240,0|oedn60,136,300,1|onqohz,136,300,1|onqoi0,135,240,0|ox3ptz,135,240,0|ox3pu0,136,300,1|p6gr5z,136,300,1|p6gr60,135,240,0|pg6r5z,135,240,0|pg6r60,136,300,1|ppjshz,136,300,1|ppjsi0,135,240,0|pywttz,135,240,0|pywtu0,136,300,1|q89v5z,136,300,1|q89v60,135,240,0|qhmwhz,135,240,0|qhmwi0,136,300,1|qqzxtz,136,300,1|qqzxu0,135,240,0|r0cz5z,135,240,0|r0cz60,136,300,1|r9q0hz,136,300,1|r9q0i0,135,240,0|rj31tz,135,240,0|rj31u0,136,300,1|rsg35z,136,300,1|rsg360,135,240,0|s1t4hz,135,240,0|s1t4i0,136,300,1|sbj4hz,136,300,1|sbj4i0,135,240,0|skw5tz,135,240,0|skw5u0,136,300,1|su975z,136,300,1|su9760,135,240,0|t3m8hz,135,240,0|t3m8i0,136,300,1|tcz9tz,136,300,1|tcz9u0,135,240,0|tmcb5z,135,240,0|tmcb60,136,300,1|tvpchz,136,300,1|tvpci0,135,240,0|u52dtz,135,240,0|u52du0,136,300,1|ueff5z,136,300,1|ueff60,135,240,0|unsghz,135,240,0|unsgi0,136,300,1|ux5htz,136,300,1|ux5hu0,135,240,0|v6vhtz,135,240,0|v6vhu0,136,300,1|vg8j5z,136,300,1|vg8j60,135,240,0|vplkhz,135,240,0|vplki0,136,300,1|vyyltz,136,300,1|vyylu0,135,240,0|w8bn5z,135,240,0|w8bn60,136,300,1|whoohz,136,300,1|whooi0,135,240,0|wr1ptz,135,240,0|wr1pu0,136,300,1|x0er5z,136,300,1|x0er60,135,240,0|x9rshz,135,240,0|x9rsi0,136,300,1|xj4ttz,136,300,1|xj4tu0,135,240,0|xshv5z,135,240,0|xshv60,136,300,1|y1uwhz,136,300,1|y1uwi0,135,240,0|ybkwhz,135,240,0|ybkwi0,136,300,1|ykxxtz,136,300,1|ykxxu0,135,240,0|yuaz5z,135,240,0|yuaz60,136,300,1|z3o0hz,136,300,1|z3o0i0,135,240,0|zd11tz,135,240,0|zd11u0,136,300,1|zme35z,136,300,1|zme360,135,240,0|zvr4hz,135,240,0|zvr4i0,136,300,1|10545tz,136,300,1|10545u0,135,240,0|10eh75z,135,240,0|10eh760,136,300,1|10nu8hz,136,300,1|10nu8i0,135,240,0|10xk8hz,135,240,0|10xk8i0,136,300,1|116x9tz,136,300,1|116x9u0,135,240,0|11gab5z,135,240,0|11gab60,136,300,1|11pnchz,136,300,1|11pnci0,135,240,0|11z0dtz,135,240,0|11z0du0,136,300,1|128df5z,136,300,1|128df60,135,240,0|12hqghz,135,240,0|12hqgi0,136,300,1|12r3htz,136,300,1|12r3hu0,135,240,0|130gj5z,135,240,0|130gj60,136,300,1|139tkhz,136,300,1|139tki0,135,240,0|13j6ltz,135,240,0|13j6lu0,136,300,1|13sjn5z,136,300,1|13sjn60,135,240,0|1429n5z,135,240,0|1429n60,136,300,1|14bmohz,136,300,1|14bmoi0,135,240,0|14kzptz,135,240,0|14kzpu0,136,300,1|14ucr5z,136,300,1|14ucr60,135,240,0|153pshz,135,240,0|153psi0,136,300,1|15d2ttz,136,300,1|15d2tu0,135,240,0|15mfv5z,135,240,0|15mfv60,136,300,1|15vswhz,136,300,1|15vswi0,135,240,0|1655xtz,135,240,0|1655xu0,136,300,1|16eiz5z,136,300,1|16eiz60,135,240,0|16nw0hz,135,240,0|16nw0i0,136,300,1|16xm0hz,136,300,1|16xm0i0,135,240,0|176z1tz,135,240,0|176z1u0,136,300,1|17gc35z,136,300,1|17gc360,135,240,0|17pp4hz,135,240,0|17pp4i0,136,300,1|17z25tz,136,300,1|17z25u0,135,240,0|188f75z,135,240,0|188f760,136,300,1|18hs8hz,136,300,1|18hs8i0,135,240,0|18r59tz,135,240,0|18r59u0,136,300,1|190ib5z,136,300,1|190ib60,135,240,0|199vchz,135,240,0|199vci0,136,300,1|19j8dtz,136,300,1|19j8du0,135,240,0|19sydtz,135,240,0|19sydu0,136,300,1|1a2bf5z,136,300,1|1a2bf60,135,240,0|1aboghz,135,240,0|1abogi0,136,300,1|1al1htz,136,300,1|1al1hu0,135,240,0|1auej5z,135,240,0|1auej60,136,300,1|1b3rkhz,136,300,1|1b3rki0,135,240,0|1bd4ltz,135,240,0|1bd4lu0,136,300,1|1bmhn5z,136,300,1|1bmhn60,135,240,0|1bvuohz,135,240,0|1bvuoi0,136,300,1|1c57ptz,136,300,1|1c57pu0,135,240,0|1cekr5z,135,240,0|1cekr60,136,300,1|1cnxshz,136,300,1|1cnxsi0,135,240,0|1cxnshz,135,240,0|1cxnsi0,136,300,1|1d70ttz,136,300,1|1d70tu0,135,240,0|1dgdv5z,135,240,0|1dgdv60,136,300,1|1dpqwhz,136,300,1|1dpqwi0,135,240,0|1dz3xtz,135,240,0|1dz3xu0,136,300,1|1e8gz5z,136,300,1|1e8gz60,135,240,0|1ehu0hz,135,240,0|1ehu0i0,136,300,1|1er71tz,136,300,1|1er71u0,135,240,0|1f0k35z,135,240,0|1f0k360,136,300,1|1f9x4hz,136,300,1|1f9x4i0,135,240,0|1fjn4hz,135,240,0|1fjn4i0,136,300,1|1ft05tz,136,300,1|1ft05u0,135,240,0|1g2d75z,135,240,0|1g2d760,136,300,1|1gbq8hz,136,300,1|1gbq8i0,135,240,0|1gl39tz,135,240,0|1gl39u0,136,300,1|1gugb5z,136,300,1|1gugb60,135,240,0|1h3tchz,135,240,0|1h3tci0,136,300,1|1hd6dtz,136,300,1|1hd6du0,135,240,0|1hmjf5z,135,240,0|1hmjf60,136,300,1|1hvwghz,136,300,1|1hvwgi0,135,240,0|1i59htz,135,240,0|1i59hu0,136,300,1|1iemj5z,136,300,1|1iemj60,135,240,0|1iocj5z,135,240,0|1iocj60,136,300,1|1ixpkhz,136,300,1|1ixpki0,135,240,0|1j72ltz,135,240,0|1j72lu0,136,300,1|1jgfn5z,136,300,1|1jgfn60,135,240,0|1jpsohz,135,240,0|1jpsoi0,136,300,1|1jz5ptz,136,300,1|1jz5pu0,135,240,0|1k8ir5z,135,240,0|1k8ir60,136,300,1|1khvshz,136,300,1|1khvsi0,135,240,0|1kr8ttz,135,240,0|1kr8tu0,136,300,1|1l0lv5z,136,300,1|1l0lv60,135,240,0|1l9ywhz,135,240,0|1l9ywi0,136,300,1|1ljowhz,136,300,1|1ljowi0,135,240,0|1lt1xtz,135,240,0|1lt1xu0,136,300,1|1m2ez5z,136,300,1|1m2ez60,135,240,0|1mbs0hz,135,240,0|1mbs0i0,136,300,1|1ml51tz,136,300,1|1ml51u0,135,240,0|1mui35z,135,240,0|1mui360,136,300,1|1n3v4hz,136,300,1|1n3v4i0,135,240,0|1nd85tz,135,240,0|1nd85u0,136,300,1|1nml75z,136,300,1|1nml760,135,240,0|1nvy8hz,135,240,0|1nvy8i0,136,300,1|1o5b9tz,136,300,1|1o5b9u0,135,240,0|1of19tz,135,240,0|1of19u0,136,300,1|1ooeb5z,136,300,1|1ooeb60,135,240,0|1oxrchz,135,240,0|1oxrci0,136,300,1|1p74dtz,136,300,1|1p74du0,135,240,0|1pghf5z,135,240,0|1pghf60,136,300,1|1ppughz,136,300,1|1ppugi0,135,240,0|1pz7htz,135,240,0|1pz7hu0,136,300,1|1q8kj5z,136,300,1|1q8kj60,135,240,0|1qhxkhz,135,240,0|1qhxki0,136,300,1|1qraltz,136,300,1|1qralu0,135,240,0|1r0nn5z,135,240,0|1r0nn60,136,300,1|1ra0ohz,136,300,1|1ra0oi0,135,240,0|1rjqohz,135,240,0|1rjqoi0,136,300,1|1rt3ptz,136,300,1|1rt3pu0,135,240,0|1s2gr5z,135,240,0|1s2gr60,136,300,1|1sbtshz,136,300,1|1sbtsi0,135,240,0|1sl6ttz,135,240,0|1sl6tu0,136,300,1|1sujv5z,136,300,1|1sujv60,135,240,0|1t3wwhz,135,240,0|1t3wwi0,136,300,1|1td9xtz,136,300,1|1td9xu0,135,240,0|1tmmz5z,135,240,0|1tmmz60,136,300,1|1tw00hz,136,300,1|1tw00i0,135,240,0|1u5q0hz,135,240,0|1u5q0i0,136,300,1|1uf31tz,136,300,1|1uf31u0,135,240,0|1uog35z,135,240,0|1uog360,136,300,1|1uxt4hz,136,300,1|1uxt4i0,135,240,0|1v765tz,135,240,0|1v765u0,136,300,1|1vgj75z,136,300,1|1vgj760,135,240,0|1vpw8hz,135,240,0|1vpw8i0,136,300,1|NaN,136,300,1",
        "Australia/Currie|,0,303,0|-12smja5,0,303,0|-12smja4,90,187,0|-rsj4w1,90,187,0|-rsj4w0,91,182,1|-rjj281,91,182,1|-rjj280,90,187,0|-r8d7k1,90,187,0|-r8d7k0,91,182,1|-r1vvk1,91,182,1|-r1vvk0,90,187,0|-qpn4w1,90,187,0|-qpn4w0,91,182,1|-qj5sw1,91,182,1|-qj5sw0,90,187,0|-em3i81,90,187,0|-em3i80,91,182,1|-ehme81,91,182,1|-ehme80,90,187,0|-e89cw1,90,187,0|-e89cw0,91,182,1|-dywbk1,91,182,1|-dywbk0,90,187,0|-dp6bk1,90,187,0|-dp6bk0,91,182,1|-dg68w1,91,182,1|-dg68w0,90,187,0|-16cow1,90,187,0|-16cow0,91,182,1|-wznk1,91,182,1|-wznk0,90,187,0|-m6rk1,90,187,0|-m6rk0,91,182,1|-fcgw1,91,182,1|-fcgw0,90,187,0|-3gow1,90,187,0|-3gow0,91,182,1|3dlrz,91,182,1|3dls0,90,187,0|f9drz,90,187,0|f9ds0,91,182,1|mgn3z,91,182,1|mgn40,90,187,0|ycf3z,90,187,0|ycf40,91,182,1|14gsfz,91,182,1|14gsg0,90,187,0|1h2hrz,90,187,0|1h2hs0,91,182,1|1njtrz,91,182,1|1njts0,90,187,0|1zskfz,90,187,0|1zskg0,91,182,1|269wfz,91,182,1|269wg0,90,187,0|2iin3z,90,187,0|2iin40,91,182,1|2ozz3z,91,182,1|2ozz40,90,187,0|318prz,90,187,0|318ps0,91,182,1|3830fz,91,182,1|3830g0,90,187,0|3kbr3z,90,187,0|3kbr40,91,182,1|3qt33z,91,182,1|3qt340,90,187,0|431trz,90,187,0|431ts0,91,182,1|49j5rz,91,182,1|49j5s0,90,187,0|4lrwfz,90,187,0|4lrwg0,91,182,1|4s98fz,91,182,1|4s98g0,90,187,0|54hz3z,90,187,0|54hz40,91,182,1|5azb3z,91,182,1|5azb40,90,187,0|5n81rz,90,187,0|5n81s0,91,182,1|5tpdrz,91,182,1|5tpds0,90,187,0|65y4fz,90,187,0|65y4g0,91,182,1|6dvb3z,91,182,1|6dvb40,90,187,0|6p15rz,90,187,0|6p15s0,91,182,1|6wldrz,91,182,1|6wlds0,90,187,0|77r8fz,90,187,0|77r8g0,91,182,1|7e8kfz,91,182,1|7e8kg0,90,187,0|7qhb3z,90,187,0|7qhb40,91,182,1|7wyn3z,91,182,1|7wyn40,90,187,0|897drz,90,187,0|897ds0,91,182,1|8foprz,91,182,1|8fops0,90,187,0|8rkhrz,90,187,0|8rkhs0,91,182,1|8z4prz,91,182,1|8z4ps0,90,187,0|9anj3z,90,187,0|9anj40,91,182,1|9i7r3z,91,182,1|9i7r40,90,187,0|9tqkfz,90,187,0|9tqkg0,91,182,1|a0xtrz,91,182,1|a0xts0,90,187,0|acgn3z,90,187,0|acgn40,91,182,1|ajnwfz,91,182,1|ajnwg0,90,187,0|av6prz,90,187,0|av6ps0,91,182,1|b33wfz,91,182,1|b33wg0,90,187,0|bctwfz,90,187,0|bctwg0,91,182,1|bltz3z,91,182,1|bltz40,90,187,0|bvjz3z,90,187,0|bvjz40,91,182,1|c4k1rz,91,182,1|c4k1s0,90,187,0|cea1rz,90,187,0|cea1s0,91,182,1|cna4fz,91,182,1|cna4g0,90,187,0|cx04fz,90,187,0|cx04g0,91,182,1|d6073z,91,182,1|d60740,90,187,0|dfq73z,90,187,0|dfq740,91,182,1|dp38fz,91,182,1|dp38g0,90,187,0|dyt8fz,90,187,0|dyt8g0,91,182,1|e7tb3z,91,182,1|e7tb40,90,187,0|ehjb3z,90,187,0|ehjb40,91,182,1|eqjdrz,91,182,1|eqjds0,90,187,0|f09drz,90,187,0|f09ds0,91,182,1|f99gfz,91,182,1|f99gg0,90,187,0|fizgfz,90,187,0|fizgg0,91,182,1|frzj3z,91,182,1|frzj40,90,187,0|fzwprz,90,187,0|fzwps0,91,182,1|gaplrz,91,182,1|gapls0,90,187,0|gkskfz,90,187,0|gkskg0,91,182,1|gtsn3z,91,182,1|gtsn40,90,187,0|h3in3z,90,187,0|h3in40,91,182,1|hciprz,91,182,1|hcips0,90,187,0|hm8prz,90,187,0|hm8ps0,91,182,1|hv8sfz,91,182,1|hv8sg0,90,187,0|i4ysfz,90,187,0|i4ysg0,91,182,1|idyv3z,91,182,1|idyv40,90,187,0|inov3z,90,187,0|inov40,91,182,1|ix1wfz,91,182,1|ix1wg0,90,187,0|j6exrz,90,187,0|j6exs0,91,182,1|jff0fz,91,182,1|jff0g0,90,187,0|jphz3z,90,187,0|jphz40,91,182,1|jyv0fz,91,182,1|jyv0g0,90,187,0|k881rz,90,187,0|k881s0,91,182,1|khl33z,91,182,1|khl340,90,187,0|kqy4fz,90,187,0|kqy4g0,91,182,1|l0b5rz,91,182,1|l0b5s0,90,187,0|l9o73z,90,187,0|l9o740,91,182,1|lj18fz,91,182,1|lj18g0,90,187,0|lse9rz,90,187,0|lse9s0,91,182,1|m1rb3z,91,182,1|m1rb40,90,187,0|mbhb3z,90,187,0|mbhb40,91,182,1|mkucfz,91,182,1|mkucg0,90,187,0|mu7drz,90,187,0|mu7ds0,91,182,1|n3kf3z,91,182,1|n3kf40,90,187,0|ncxgfz,90,187,0|ncxgg0,91,182,1|nmahrz,91,182,1|nmahs0,90,187,0|nvnj3z,90,187,0|nvnj40,91,182,1|o50kfz,91,182,1|o50kg0,90,187,0|oedlrz,90,187,0|oedls0,91,182,1|onqn3z,91,182,1|onqn40,90,187,0|ox3ofz,90,187,0|ox3og0,91,182,1|p6gprz,91,182,1|p6gps0,90,187,0|pg6prz,90,187,0|pg6ps0,91,182,1|ppjr3z,91,182,1|ppjr40,90,187,0|pywsfz,90,187,0|pywsg0,91,182,1|q89trz,91,182,1|q89ts0,90,187,0|qhmv3z,90,187,0|qhmv40,91,182,1|qqzwfz,91,182,1|qqzwg0,90,187,0|r0cxrz,90,187,0|r0cxs0,91,182,1|r9pz3z,91,182,1|r9pz40,90,187,0|rj30fz,90,187,0|rj30g0,91,182,1|rsg1rz,91,182,1|rsg1s0,90,187,0|s1t33z,90,187,0|s1t340,91,182,1|sbj33z,91,182,1|sbj340,90,187,0|skw4fz,90,187,0|skw4g0,91,182,1|su95rz,91,182,1|su95s0,90,187,0|t3m73z,90,187,0|t3m740,91,182,1|tcz8fz,91,182,1|tcz8g0,90,187,0|tmc9rz,90,187,0|tmc9s0,91,182,1|tvpb3z,91,182,1|tvpb40,90,187,0|u52cfz,90,187,0|u52cg0,91,182,1|uefdrz,91,182,1|uefds0,90,187,0|unsf3z,90,187,0|unsf40,91,182,1|ux5gfz,91,182,1|ux5gg0,90,187,0|v6vgfz,90,187,0|v6vgg0,91,182,1|vg8hrz,91,182,1|vg8hs0,90,187,0|vplj3z,90,187,0|vplj40,91,182,1|vyykfz,91,182,1|vyykg0,90,187,0|w8blrz,90,187,0|w8bls0,91,182,1|whon3z,91,182,1|whon40,90,187,0|wr1ofz,90,187,0|wr1og0,91,182,1|x0eprz,91,182,1|x0eps0,90,187,0|x9rr3z,90,187,0|x9rr40,91,182,1|xj4sfz,91,182,1|xj4sg0,90,187,0|xshtrz,90,187,0|xshts0,91,182,1|y1uv3z,91,182,1|y1uv40,90,187,0|ybkv3z,90,187,0|ybkv40,91,182,1|ykxwfz,91,182,1|ykxwg0,90,187,0|yuaxrz,90,187,0|yuaxs0,91,182,1|z3nz3z,91,182,1|z3nz40,90,187,0|zd10fz,90,187,0|zd10g0,91,182,1|zme1rz,91,182,1|zme1s0,90,187,0|zvr33z,90,187,0|zvr340,91,182,1|10544fz,91,182,1|10544g0,90,187,0|10eh5rz,90,187,0|10eh5s0,91,182,1|10nu73z,91,182,1|10nu740,90,187,0|10xk73z,90,187,0|10xk740,91,182,1|116x8fz,91,182,1|116x8g0,90,187,0|11ga9rz,90,187,0|11ga9s0,91,182,1|11pnb3z,91,182,1|11pnb40,90,187,0|11z0cfz,90,187,0|11z0cg0,91,182,1|128ddrz,91,182,1|128dds0,90,187,0|12hqf3z,90,187,0|12hqf40,91,182,1|12r3gfz,91,182,1|12r3gg0,90,187,0|130ghrz,90,187,0|130ghs0,91,182,1|139tj3z,91,182,1|139tj40,90,187,0|13j6kfz,90,187,0|13j6kg0,91,182,1|13sjlrz,91,182,1|13sjls0,90,187,0|1429lrz,90,187,0|1429ls0,91,182,1|14bmn3z,91,182,1|14bmn40,90,187,0|14kzofz,90,187,0|14kzog0,91,182,1|14ucprz,91,182,1|14ucps0,90,187,0|153pr3z,90,187,0|153pr40,91,182,1|15d2sfz,91,182,1|15d2sg0,90,187,0|15mftrz,90,187,0|15mfts0,91,182,1|15vsv3z,91,182,1|15vsv40,90,187,0|1655wfz,90,187,0|1655wg0,91,182,1|16eixrz,91,182,1|16eixs0,90,187,0|16nvz3z,90,187,0|16nvz40,91,182,1|16xlz3z,91,182,1|16xlz40,90,187,0|176z0fz,90,187,0|176z0g0,91,182,1|17gc1rz,91,182,1|17gc1s0,90,187,0|17pp33z,90,187,0|17pp340,91,182,1|17z24fz,91,182,1|17z24g0,90,187,0|188f5rz,90,187,0|188f5s0,91,182,1|18hs73z,91,182,1|18hs740,90,187,0|18r58fz,90,187,0|18r58g0,91,182,1|190i9rz,91,182,1|190i9s0,90,187,0|199vb3z,90,187,0|199vb40,91,182,1|19j8cfz,91,182,1|19j8cg0,90,187,0|19sycfz,90,187,0|19sycg0,91,182,1|1a2bdrz,91,182,1|1a2bds0,90,187,0|1abof3z,90,187,0|1abof40,91,182,1|1al1gfz,91,182,1|1al1gg0,90,187,0|1auehrz,90,187,0|1auehs0,91,182,1|1b3rj3z,91,182,1|1b3rj40,90,187,0|1bd4kfz,90,187,0|1bd4kg0,91,182,1|1bmhlrz,91,182,1|1bmhls0,90,187,0|1bvun3z,90,187,0|1bvun40,91,182,1|1c57ofz,91,182,1|1c57og0,90,187,0|1cekprz,90,187,0|1cekps0,91,182,1|1cnxr3z,91,182,1|1cnxr40,90,187,0|1cxnr3z,90,187,0|1cxnr40,91,182,1|1d70sfz,91,182,1|1d70sg0,90,187,0|1dgdtrz,90,187,0|1dgdts0,91,182,1|1dpqv3z,91,182,1|1dpqv40,90,187,0|1dz3wfz,90,187,0|1dz3wg0,91,182,1|1e8gxrz,91,182,1|1e8gxs0,90,187,0|1ehtz3z,90,187,0|1ehtz40,91,182,1|1er70fz,91,182,1|1er70g0,90,187,0|1f0k1rz,90,187,0|1f0k1s0,91,182,1|1f9x33z,91,182,1|1f9x340,90,187,0|1fjn33z,90,187,0|1fjn340,91,182,1|1ft04fz,91,182,1|1ft04g0,90,187,0|1g2d5rz,90,187,0|1g2d5s0,91,182,1|1gbq73z,91,182,1|1gbq740,90,187,0|1gl38fz,90,187,0|1gl38g0,91,182,1|1gug9rz,91,182,1|1gug9s0,90,187,0|1h3tb3z,90,187,0|1h3tb40,91,182,1|1hd6cfz,91,182,1|1hd6cg0,90,187,0|1hmjdrz,90,187,0|1hmjds0,91,182,1|1hvwf3z,91,182,1|1hvwf40,90,187,0|1i59gfz,90,187,0|1i59gg0,91,182,1|1iemhrz,91,182,1|1iemhs0,90,187,0|1iochrz,90,187,0|1iochs0,91,182,1|1ixpj3z,91,182,1|1ixpj40,90,187,0|1j72kfz,90,187,0|1j72kg0,91,182,1|1jgflrz,91,182,1|1jgfls0,90,187,0|1jpsn3z,90,187,0|1jpsn40,91,182,1|1jz5ofz,91,182,1|1jz5og0,90,187,0|1k8iprz,90,187,0|1k8ips0,91,182,1|1khvr3z,91,182,1|1khvr40,90,187,0|1kr8sfz,90,187,0|1kr8sg0,91,182,1|1l0ltrz,91,182,1|1l0lts0,90,187,0|1l9yv3z,90,187,0|1l9yv40,91,182,1|1ljov3z,91,182,1|1ljov40,90,187,0|1lt1wfz,90,187,0|1lt1wg0,91,182,1|1m2exrz,91,182,1|1m2exs0,90,187,0|1mbrz3z,90,187,0|1mbrz40,91,182,1|1ml50fz,91,182,1|1ml50g0,90,187,0|1mui1rz,90,187,0|1mui1s0,91,182,1|1n3v33z,91,182,1|1n3v340,90,187,0|1nd84fz,90,187,0|1nd84g0,91,182,1|1nml5rz,91,182,1|1nml5s0,90,187,0|1nvy73z,90,187,0|1nvy740,91,182,1|1o5b8fz,91,182,1|1o5b8g0,90,187,0|1of18fz,90,187,0|1of18g0,91,182,1|1ooe9rz,91,182,1|1ooe9s0,90,187,0|1oxrb3z,90,187,0|1oxrb40,91,182,1|1p74cfz,91,182,1|1p74cg0,90,187,0|1pghdrz,90,187,0|1pghds0,91,182,1|1ppuf3z,91,182,1|1ppuf40,90,187,0|1pz7gfz,90,187,0|1pz7gg0,91,182,1|1q8khrz,91,182,1|1q8khs0,90,187,0|1qhxj3z,90,187,0|1qhxj40,91,182,1|1qrakfz,91,182,1|1qrakg0,90,187,0|1r0nlrz,90,187,0|1r0nls0,91,182,1|1ra0n3z,91,182,1|1ra0n40,90,187,0|1rjqn3z,90,187,0|1rjqn40,91,182,1|1rt3ofz,91,182,1|1rt3og0,90,187,0|1s2gprz,90,187,0|1s2gps0,91,182,1|1sbtr3z,91,182,1|1sbtr40,90,187,0|1sl6sfz,90,187,0|1sl6sg0,91,182,1|1sujtrz,91,182,1|1sujts0,90,187,0|1t3wv3z,90,187,0|1t3wv40,91,182,1|1td9wfz,91,182,1|1td9wg0,90,187,0|1tmmxrz,90,187,0|1tmmxs0,91,182,1|1tvzz3z,91,182,1|1tvzz40,90,187,0|1u5pz3z,90,187,0|1u5pz40,91,182,1|1uf30fz,91,182,1|1uf30g0,90,187,0|1uog1rz,90,187,0|1uog1s0,91,182,1|1uxt33z,91,182,1|1uxt340,90,187,0|1v764fz,90,187,0|1v764g0,91,182,1|1vgj5rz,91,182,1|1vgj5s0,90,187,0|1vpw73z,90,187,0|1vpw740,91,182,1|NaN,91,182,1",
        "Australia/Darwin|,0,304,0|-133j1k9,0,304,0|-133j1k8,135,216,0|-10vsp01,135,216,0|-10vsp00,135,240,0|-rnsq61,135,240,0|-rnsq60,136,300,1|-rjj0u1,136,300,1|-rjj0u0,135,240,0|-em3gu1,135,240,0|-em3gu0,136,300,1|-ehmcu1,136,300,1|-ehmcu0,135,240,0|-e89bi1,135,240,0|-e89bi0,136,300,1|-dywa61,136,300,1|-dywa60,135,240,0|-dp6a61,135,240,0|-dp6a60,136,300,1|-dg67i1,136,300,1|-dg67i0,135,240,0|NaN,135,240,0",
        "Australia/Eucla|,0,305,0|-12nxx75,0,305,0|-12nxx74,137,306,0|-rnso31,137,306,0|-rnso30,138,307,1|-rjiyr1,138,307,1|-rjiyr0,137,306,0|-em3er1,137,306,0|-em3er0,138,307,1|-ehmar1,138,307,1|-ehmar0,137,306,0|-e899f1,137,306,0|-e899f0,138,307,1|-dyw831,138,307,1|-dyw830,137,306,0|2iiqkz,137,306,0|2iiql0,138,307,1|2p02kz,138,307,1|2p02l0,137,306,0|77rbwz,137,306,0|77rbx0,138,307,1|7e8nwz,138,307,1|7e8nx0,137,306,0|bezrwz,137,306,0|bezrx0,138,307,1|bke7wz,138,307,1|bke7x0,137,306,0|j9np8z,137,306,0|j9np90,138,307,1|jff3wz,138,307,1|jff3x0,137,306,0|jqkykz,137,306,0|jqkyl0,138,307,1|jyi58z,138,307,1|jyi590,137,306,0|k9b18z,137,306,0|k9b190,138,307,1|kh87wz,138,307,1|kh87x0,137,306,0|NaN,137,306,0",
        "Australia/Hobart|,0,303,0|-12smja5,0,303,0|-12smja4,90,187,0|-rsj4w1,90,187,0|-rsj4w0,91,182,1|-rjj281,91,182,1|-rjj280,90,187,0|-r8d7k1,90,187,0|-r8d7k0,91,182,1|-r1vvk1,91,182,1|-r1vvk0,90,187,0|-qpn4w1,90,187,0|-qpn4w0,91,182,1|-qj5sw1,91,182,1|-qj5sw0,90,187,0|-em3i81,90,187,0|-em3i80,91,182,1|-ehme81,91,182,1|-ehme80,90,187,0|-e89cw1,90,187,0|-e89cw0,91,182,1|-dywbk1,91,182,1|-dywbk0,90,187,0|-dp6bk1,90,187,0|-dp6bk0,91,182,1|-dg68w1,91,182,1|-dg68w0,90,187,0|-16cow1,90,187,0|-16cow0,91,182,1|-wznk1,91,182,1|-wznk0,90,187,0|-m6rk1,90,187,0|-m6rk0,91,182,1|-fcgw1,91,182,1|-fcgw0,90,187,0|-3gow1,90,187,0|-3gow0,91,182,1|3dlrz,91,182,1|3dls0,90,187,0|f9drz,90,187,0|f9ds0,91,182,1|mgn3z,91,182,1|mgn40,90,187,0|ycf3z,90,187,0|ycf40,91,182,1|14gsfz,91,182,1|14gsg0,90,187,0|1h2hrz,90,187,0|1h2hs0,91,182,1|1njtrz,91,182,1|1njts0,90,187,0|1zskfz,90,187,0|1zskg0,91,182,1|269wfz,91,182,1|269wg0,90,187,0|2iin3z,90,187,0|2iin40,91,182,1|2ozz3z,91,182,1|2ozz40,90,187,0|318prz,90,187,0|318ps0,91,182,1|3830fz,91,182,1|3830g0,90,187,0|3kbr3z,90,187,0|3kbr40,91,182,1|3qt33z,91,182,1|3qt340,90,187,0|431trz,90,187,0|431ts0,91,182,1|49j5rz,91,182,1|49j5s0,90,187,0|4lrwfz,90,187,0|4lrwg0,91,182,1|4s98fz,91,182,1|4s98g0,90,187,0|54hz3z,90,187,0|54hz40,91,182,1|5azb3z,91,182,1|5azb40,90,187,0|5n81rz,90,187,0|5n81s0,91,182,1|5tpdrz,91,182,1|5tpds0,90,187,0|65y4fz,90,187,0|65y4g0,91,182,1|6dvb3z,91,182,1|6dvb40,90,187,0|6p15rz,90,187,0|6p15s0,91,182,1|6wldrz,91,182,1|6wlds0,90,187,0|77r8fz,90,187,0|77r8g0,91,182,1|7e8kfz,91,182,1|7e8kg0,90,187,0|7qhb3z,90,187,0|7qhb40,91,182,1|7wyn3z,91,182,1|7wyn40,90,187,0|897drz,90,187,0|897ds0,91,182,1|8foprz,91,182,1|8fops0,90,187,0|8rkhrz,90,187,0|8rkhs0,91,182,1|8z4prz,91,182,1|8z4ps0,90,187,0|9anj3z,90,187,0|9anj40,91,182,1|9i7r3z,91,182,1|9i7r40,90,187,0|9tqkfz,90,187,0|9tqkg0,91,182,1|a0xtrz,91,182,1|a0xts0,90,187,0|acgn3z,90,187,0|acgn40,91,182,1|ajnwfz,91,182,1|ajnwg0,90,187,0|av6prz,90,187,0|av6ps0,91,182,1|b33wfz,91,182,1|b33wg0,90,187,0|bctwfz,90,187,0|bctwg0,91,182,1|bltz3z,91,182,1|bltz40,90,187,0|bvjz3z,90,187,0|bvjz40,91,182,1|c4k1rz,91,182,1|c4k1s0,90,187,0|cea1rz,90,187,0|cea1s0,91,182,1|cna4fz,91,182,1|cna4g0,90,187,0|cx04fz,90,187,0|cx04g0,91,182,1|d6073z,91,182,1|d60740,90,187,0|dfq73z,90,187,0|dfq740,91,182,1|dp38fz,91,182,1|dp38g0,90,187,0|dyt8fz,90,187,0|dyt8g0,91,182,1|e7tb3z,91,182,1|e7tb40,90,187,0|ehjb3z,90,187,0|ehjb40,91,182,1|eqjdrz,91,182,1|eqjds0,90,187,0|f09drz,90,187,0|f09ds0,91,182,1|f99gfz,91,182,1|f99gg0,90,187,0|fizgfz,90,187,0|fizgg0,91,182,1|frzj3z,91,182,1|frzj40,90,187,0|fzwprz,90,187,0|fzwps0,91,182,1|gaplrz,91,182,1|gapls0,90,187,0|gkskfz,90,187,0|gkskg0,91,182,1|gtsn3z,91,182,1|gtsn40,90,187,0|h3in3z,90,187,0|h3in40,91,182,1|hciprz,91,182,1|hcips0,90,187,0|hm8prz,90,187,0|hm8ps0,91,182,1|hv8sfz,91,182,1|hv8sg0,90,187,0|i4ysfz,90,187,0|i4ysg0,91,182,1|idyv3z,91,182,1|idyv40,90,187,0|inov3z,90,187,0|inov40,91,182,1|ix1wfz,91,182,1|ix1wg0,90,187,0|j6exrz,90,187,0|j6exs0,91,182,1|jff0fz,91,182,1|jff0g0,90,187,0|jphz3z,90,187,0|jphz40,91,182,1|jyv0fz,91,182,1|jyv0g0,90,187,0|k881rz,90,187,0|k881s0,91,182,1|khl33z,91,182,1|khl340,90,187,0|kqy4fz,90,187,0|kqy4g0,91,182,1|l0b5rz,91,182,1|l0b5s0,90,187,0|l9o73z,90,187,0|l9o740,91,182,1|lj18fz,91,182,1|lj18g0,90,187,0|lse9rz,90,187,0|lse9s0,91,182,1|m1rb3z,91,182,1|m1rb40,90,187,0|mbhb3z,90,187,0|mbhb40,91,182,1|mkucfz,91,182,1|mkucg0,90,187,0|mu7drz,90,187,0|mu7ds0,91,182,1|n3kf3z,91,182,1|n3kf40,90,187,0|ncxgfz,90,187,0|ncxgg0,91,182,1|nmahrz,91,182,1|nmahs0,90,187,0|nvnj3z,90,187,0|nvnj40,91,182,1|o50kfz,91,182,1|o50kg0,90,187,0|oedlrz,90,187,0|oedls0,91,182,1|onqn3z,91,182,1|onqn40,90,187,0|ox3ofz,90,187,0|ox3og0,91,182,1|p6gprz,91,182,1|p6gps0,90,187,0|pg6prz,90,187,0|pg6ps0,91,182,1|ppjr3z,91,182,1|ppjr40,90,187,0|pywsfz,90,187,0|pywsg0,91,182,1|q89trz,91,182,1|q89ts0,90,187,0|qhmv3z,90,187,0|qhmv40,91,182,1|qqzwfz,91,182,1|qqzwg0,90,187,0|r0cxrz,90,187,0|r0cxs0,91,182,1|r9pz3z,91,182,1|r9pz40,90,187,0|rj30fz,90,187,0|rj30g0,91,182,1|rsg1rz,91,182,1|rsg1s0,90,187,0|s1t33z,90,187,0|s1t340,91,182,1|sbj33z,91,182,1|sbj340,90,187,0|skw4fz,90,187,0|skw4g0,91,182,1|su95rz,91,182,1|su95s0,90,187,0|t3m73z,90,187,0|t3m740,91,182,1|tcz8fz,91,182,1|tcz8g0,90,187,0|tmc9rz,90,187,0|tmc9s0,91,182,1|tvpb3z,91,182,1|tvpb40,90,187,0|u52cfz,90,187,0|u52cg0,91,182,1|uefdrz,91,182,1|uefds0,90,187,0|unsf3z,90,187,0|unsf40,91,182,1|ux5gfz,91,182,1|ux5gg0,90,187,0|v6vgfz,90,187,0|v6vgg0,91,182,1|vg8hrz,91,182,1|vg8hs0,90,187,0|vplj3z,90,187,0|vplj40,91,182,1|vyykfz,91,182,1|vyykg0,90,187,0|w8blrz,90,187,0|w8bls0,91,182,1|whon3z,91,182,1|whon40,90,187,0|wr1ofz,90,187,0|wr1og0,91,182,1|x0eprz,91,182,1|x0eps0,90,187,0|x9rr3z,90,187,0|x9rr40,91,182,1|xj4sfz,91,182,1|xj4sg0,90,187,0|xshtrz,90,187,0|xshts0,91,182,1|y1uv3z,91,182,1|y1uv40,90,187,0|ybkv3z,90,187,0|ybkv40,91,182,1|ykxwfz,91,182,1|ykxwg0,90,187,0|yuaxrz,90,187,0|yuaxs0,91,182,1|z3nz3z,91,182,1|z3nz40,90,187,0|zd10fz,90,187,0|zd10g0,91,182,1|zme1rz,91,182,1|zme1s0,90,187,0|zvr33z,90,187,0|zvr340,91,182,1|10544fz,91,182,1|10544g0,90,187,0|10eh5rz,90,187,0|10eh5s0,91,182,1|10nu73z,91,182,1|10nu740,90,187,0|10xk73z,90,187,0|10xk740,91,182,1|116x8fz,91,182,1|116x8g0,90,187,0|11ga9rz,90,187,0|11ga9s0,91,182,1|11pnb3z,91,182,1|11pnb40,90,187,0|11z0cfz,90,187,0|11z0cg0,91,182,1|128ddrz,91,182,1|128dds0,90,187,0|12hqf3z,90,187,0|12hqf40,91,182,1|12r3gfz,91,182,1|12r3gg0,90,187,0|130ghrz,90,187,0|130ghs0,91,182,1|139tj3z,91,182,1|139tj40,90,187,0|13j6kfz,90,187,0|13j6kg0,91,182,1|13sjlrz,91,182,1|13sjls0,90,187,0|1429lrz,90,187,0|1429ls0,91,182,1|14bmn3z,91,182,1|14bmn40,90,187,0|14kzofz,90,187,0|14kzog0,91,182,1|14ucprz,91,182,1|14ucps0,90,187,0|153pr3z,90,187,0|153pr40,91,182,1|15d2sfz,91,182,1|15d2sg0,90,187,0|15mftrz,90,187,0|15mfts0,91,182,1|15vsv3z,91,182,1|15vsv40,90,187,0|1655wfz,90,187,0|1655wg0,91,182,1|16eixrz,91,182,1|16eixs0,90,187,0|16nvz3z,90,187,0|16nvz40,91,182,1|16xlz3z,91,182,1|16xlz40,90,187,0|176z0fz,90,187,0|176z0g0,91,182,1|17gc1rz,91,182,1|17gc1s0,90,187,0|17pp33z,90,187,0|17pp340,91,182,1|17z24fz,91,182,1|17z24g0,90,187,0|188f5rz,90,187,0|188f5s0,91,182,1|18hs73z,91,182,1|18hs740,90,187,0|18r58fz,90,187,0|18r58g0,91,182,1|190i9rz,91,182,1|190i9s0,90,187,0|199vb3z,90,187,0|199vb40,91,182,1|19j8cfz,91,182,1|19j8cg0,90,187,0|19sycfz,90,187,0|19sycg0,91,182,1|1a2bdrz,91,182,1|1a2bds0,90,187,0|1abof3z,90,187,0|1abof40,91,182,1|1al1gfz,91,182,1|1al1gg0,90,187,0|1auehrz,90,187,0|1auehs0,91,182,1|1b3rj3z,91,182,1|1b3rj40,90,187,0|1bd4kfz,90,187,0|1bd4kg0,91,182,1|1bmhlrz,91,182,1|1bmhls0,90,187,0|1bvun3z,90,187,0|1bvun40,91,182,1|1c57ofz,91,182,1|1c57og0,90,187,0|1cekprz,90,187,0|1cekps0,91,182,1|1cnxr3z,91,182,1|1cnxr40,90,187,0|1cxnr3z,90,187,0|1cxnr40,91,182,1|1d70sfz,91,182,1|1d70sg0,90,187,0|1dgdtrz,90,187,0|1dgdts0,91,182,1|1dpqv3z,91,182,1|1dpqv40,90,187,0|1dz3wfz,90,187,0|1dz3wg0,91,182,1|1e8gxrz,91,182,1|1e8gxs0,90,187,0|1ehtz3z,90,187,0|1ehtz40,91,182,1|1er70fz,91,182,1|1er70g0,90,187,0|1f0k1rz,90,187,0|1f0k1s0,91,182,1|1f9x33z,91,182,1|1f9x340,90,187,0|1fjn33z,90,187,0|1fjn340,91,182,1|1ft04fz,91,182,1|1ft04g0,90,187,0|1g2d5rz,90,187,0|1g2d5s0,91,182,1|1gbq73z,91,182,1|1gbq740,90,187,0|1gl38fz,90,187,0|1gl38g0,91,182,1|1gug9rz,91,182,1|1gug9s0,90,187,0|1h3tb3z,90,187,0|1h3tb40,91,182,1|1hd6cfz,91,182,1|1hd6cg0,90,187,0|1hmjdrz,90,187,0|1hmjds0,91,182,1|1hvwf3z,91,182,1|1hvwf40,90,187,0|1i59gfz,90,187,0|1i59gg0,91,182,1|1iemhrz,91,182,1|1iemhs0,90,187,0|1iochrz,90,187,0|1iochs0,91,182,1|1ixpj3z,91,182,1|1ixpj40,90,187,0|1j72kfz,90,187,0|1j72kg0,91,182,1|1jgflrz,91,182,1|1jgfls0,90,187,0|1jpsn3z,90,187,0|1jpsn40,91,182,1|1jz5ofz,91,182,1|1jz5og0,90,187,0|1k8iprz,90,187,0|1k8ips0,91,182,1|1khvr3z,91,182,1|1khvr40,90,187,0|1kr8sfz,90,187,0|1kr8sg0,91,182,1|1l0ltrz,91,182,1|1l0lts0,90,187,0|1l9yv3z,90,187,0|1l9yv40,91,182,1|1ljov3z,91,182,1|1ljov40,90,187,0|1lt1wfz,90,187,0|1lt1wg0,91,182,1|1m2exrz,91,182,1|1m2exs0,90,187,0|1mbrz3z,90,187,0|1mbrz40,91,182,1|1ml50fz,91,182,1|1ml50g0,90,187,0|1mui1rz,90,187,0|1mui1s0,91,182,1|1n3v33z,91,182,1|1n3v340,90,187,0|1nd84fz,90,187,0|1nd84g0,91,182,1|1nml5rz,91,182,1|1nml5s0,90,187,0|1nvy73z,90,187,0|1nvy740,91,182,1|1o5b8fz,91,182,1|1o5b8g0,90,187,0|1of18fz,90,187,0|1of18g0,91,182,1|1ooe9rz,91,182,1|1ooe9s0,90,187,0|1oxrb3z,90,187,0|1oxrb40,91,182,1|1p74cfz,91,182,1|1p74cg0,90,187,0|1pghdrz,90,187,0|1pghds0,91,182,1|1ppuf3z,91,182,1|1ppuf40,90,187,0|1pz7gfz,90,187,0|1pz7gg0,91,182,1|1q8khrz,91,182,1|1q8khs0,90,187,0|1qhxj3z,90,187,0|1qhxj40,91,182,1|1qrakfz,91,182,1|1qrakg0,90,187,0|1r0nlrz,90,187,0|1r0nls0,91,182,1|1ra0n3z,91,182,1|1ra0n40,90,187,0|1rjqn3z,90,187,0|1rjqn40,91,182,1|1rt3ofz,91,182,1|1rt3og0,90,187,0|1s2gprz,90,187,0|1s2gps0,91,182,1|1sbtr3z,91,182,1|1sbtr40,90,187,0|1sl6sfz,90,187,0|1sl6sg0,91,182,1|1sujtrz,91,182,1|1sujts0,90,187,0|1t3wv3z,90,187,0|1t3wv40,91,182,1|1td9wfz,91,182,1|1td9wg0,90,187,0|1tmmxrz,90,187,0|1tmmxs0,91,182,1|1tvzz3z,91,182,1|1tvzz40,90,187,0|1u5pz3z,90,187,0|1u5pz40,91,182,1|1uf30fz,91,182,1|1uf30g0,90,187,0|1uog1rz,90,187,0|1uog1s0,91,182,1|1uxt33z,91,182,1|1uxt340,90,187,0|1v764fz,90,187,0|1v764g0,91,182,1|1vgj5rz,91,182,1|1vgj5s0,90,187,0|1vpw73z,90,187,0|1vpw740,91,182,1|NaN,91,182,1",
        "Australia/Lindeman|,0,308,0|-1354jl9,0,308,0|-1354jl8,90,187,0|-rnsrk1,90,187,0|-rnsrk0,91,182,1|-rjj281,91,182,1|-rjj280,90,187,0|-em3i81,90,187,0|-em3i80,91,182,1|-ehme81,91,182,1|-ehme80,90,187,0|-e89cw1,90,187,0|-e89cw0,91,182,1|-dywbk1,91,182,1|-dywbk0,90,187,0|-dp6bk1,90,187,0|-dp6bk0,91,182,1|-dg68w1,91,182,1|-dg68w0,90,187,0|ycf3z,90,187,0|ycf40,91,182,1|14gsfz,91,182,1|14gsg0,90,187,0|acgn3z,90,187,0|acgn40,91,182,1|aixz3z,91,182,1|aixz40,90,187,0|av6prz,90,187,0|av6ps0,91,182,1|b1o1rz,91,182,1|b1o1s0,90,187,0|bdwsfz,90,187,0|bdwsg0,91,182,1|bke4fz,91,182,1|bke4g0,90,187,0|bwmv3z,90,187,0|bwmv40,91,182,1|c3h5rz,91,182,1|c3h5s0,90,187,0|cfpwfz,90,187,0|cfpwg0,91,182,1|cm78fz,91,182,1|cm78g0,90,187,0|NaN,90,187,0",
        "Australia/Lord_Howe|,0,309,0|-133j6sl,0,309,0|-133j6sk,90,187,0|5tp87z,90,187,0|5tp880,139,300,0|65y31z,139,300,0|65y320,140,190,1|6csaxz,140,190,1|6csay0,139,300,0|6p14dz,139,300,0|6p14e0,140,190,1|6vidlz,140,190,1|6vidm0,139,300,0|77r71z,139,300,0|77r720,140,190,1|7e8g9z,140,190,1|7e8ga0,139,300,0|7qh9pz,139,300,0|7qh9q0,140,190,1|7wyixz,140,190,1|7wyiy0,139,300,0|897cdz,139,300,0|897ce0,85,182,1|8gekbz,85,182,1|8gekc0,139,300,0|8rkgdz,139,300,0|8rkge0,85,182,1|8z4mzz,85,182,1|8z4n00,139,300,0|9anhpz,139,300,0|9anhq0,85,182,1|9i7obz,85,182,1|9i7oc0,139,300,0|9tqj1z,139,300,0|9tqj20,85,182,1|a0xqzz,85,182,1|a0xr00,139,300,0|acglpz,139,300,0|acglq0,85,182,1|aixwbz,85,182,1|aixwc0,139,300,0|av6odz,139,300,0|av6oe0,85,182,1|b1nyzz,85,182,1|b1nz00,139,300,0|bdwr1z,139,300,0|bdwr20,85,182,1|bke1nz,85,182,1|bke1o0,139,300,0|bwmtpz,139,300,0|bwmtq0,85,182,1|c3h2zz,85,182,1|c3h300,139,300,0|cfpv1z,139,300,0|cfpv20,85,182,1|cm75nz,85,182,1|cm75o0,139,300,0|cyfxpz,139,300,0|cyfxq0,85,182,1|d4x8bz,85,182,1|d4x8c0,139,300,0|dh60dz,139,300,0|dh60e0,85,182,1|dp35nz,85,182,1|dp35o0,139,300,0|dzw31z,139,300,0|dzw320,85,182,1|e7t8bz,85,182,1|e7t8c0,139,300,0|eim5pz,139,300,0|eim5q0,85,182,1|eqjazz,85,182,1|eqjb00,139,300,0|f1c8dz,139,300,0|f1c8e0,85,182,1|f99dnz,85,182,1|f99do0,139,300,0|fkf9pz,139,300,0|fkf9q0,85,182,1|frzgbz,85,182,1|frzgc0,139,300,0|fzwodz,139,300,0|fzwoe0,85,182,1|gapizz,85,182,1|gapj00,139,300,0|glvf1z,139,300,0|glvf20,85,182,1|gtskbz,85,182,1|gtskc0,139,300,0|h4lhpz,139,300,0|h4lhq0,85,182,1|hcimzz,85,182,1|hcin00,139,300,0|hnbkdz,139,300,0|hnbke0,85,182,1|hv8pnz,85,182,1|hv8po0,139,300,0|i6elpz,139,300,0|i6elq0,85,182,1|idysbz,85,182,1|idysc0,139,300,0|ip4odz,139,300,0|ip4oe0,85,182,1|ix1tnz,85,182,1|ix1to0,139,300,0|j7ur1z,139,300,0|j7ur20,85,182,1|jfexnz,85,182,1|jfexo0,139,300,0|jqktpz,139,300,0|jqktq0,85,182,1|jyuxnz,85,182,1|jyuxo0,139,300,0|k880dz,139,300,0|k880e0,85,182,1|khl0bz,85,182,1|khl0c0,139,300,0|kqy31z,139,300,0|kqy320,85,182,1|l0b2zz,85,182,1|l0b300,139,300,0|l9o5pz,139,300,0|l9o5q0,85,182,1|lj15nz,85,182,1|lj15o0,139,300,0|lse8dz,139,300,0|lse8e0,85,182,1|m1r8bz,85,182,1|m1r8c0,139,300,0|mbh9pz,139,300,0|mbh9q0,85,182,1|mku9nz,85,182,1|mku9o0,139,300,0|mu7cdz,139,300,0|mu7ce0,85,182,1|n3kcbz,85,182,1|n3kcc0,139,300,0|ncxf1z,139,300,0|ncxf20,85,182,1|nmaezz,85,182,1|nmaf00,139,300,0|nvnhpz,139,300,0|nvnhq0,85,182,1|o50hnz,85,182,1|o50ho0,139,300,0|oedkdz,139,300,0|oedke0,85,182,1|onqkbz,85,182,1|onqkc0,139,300,0|ox3n1z,139,300,0|ox3n20,85,182,1|p6gmzz,85,182,1|p6gn00,139,300,0|pg6odz,139,300,0|pg6oe0,85,182,1|ppjobz,85,182,1|ppjoc0,139,300,0|pywr1z,139,300,0|pywr20,85,182,1|q89qzz,85,182,1|q89r00,139,300,0|qhmtpz,139,300,0|qhmtq0,85,182,1|qqztnz,85,182,1|qqzto0,139,300,0|r0cwdz,139,300,0|r0cwe0,85,182,1|r9pwbz,85,182,1|r9pwc0,139,300,0|rj2z1z,139,300,0|rj2z20,85,182,1|rsfyzz,85,182,1|rsfz00,139,300,0|s1t1pz,139,300,0|s1t1q0,85,182,1|sbj0bz,85,182,1|sbj0c0,139,300,0|skw31z,139,300,0|skw320,85,182,1|su92zz,85,182,1|su9300,139,300,0|t3m5pz,139,300,0|t3m5q0,85,182,1|tcz5nz,85,182,1|tcz5o0,139,300,0|tmc8dz,139,300,0|tmc8e0,85,182,1|tvp8bz,85,182,1|tvp8c0,139,300,0|u52b1z,139,300,0|u52b20,85,182,1|uefazz,85,182,1|uefb00,139,300,0|unsdpz,139,300,0|unsdq0,85,182,1|ux5dnz,85,182,1|ux5do0,139,300,0|v6vf1z,139,300,0|v6vf20,85,182,1|vg8ezz,85,182,1|vg8f00,139,300,0|vplhpz,139,300,0|vplhq0,85,182,1|vyyhnz,85,182,1|vyyho0,139,300,0|w8bkdz,139,300,0|w8bke0,85,182,1|whokbz,85,182,1|whokc0,139,300,0|wr1n1z,139,300,0|wr1n20,85,182,1|x0emzz,85,182,1|x0en00,139,300,0|x9rppz,139,300,0|x9rpq0,85,182,1|xj4pnz,85,182,1|xj4po0,139,300,0|xshsdz,139,300,0|xshse0,85,182,1|y1usbz,85,182,1|y1usc0,139,300,0|ybktpz,139,300,0|ybktq0,85,182,1|ykxtnz,85,182,1|ykxto0,139,300,0|yuawdz,139,300,0|yuawe0,85,182,1|z3nwbz,85,182,1|z3nwc0,139,300,0|zd0z1z,139,300,0|zd0z20,85,182,1|zmdyzz,85,182,1|zmdz00,139,300,0|zvr1pz,139,300,0|zvr1q0,85,182,1|10541nz,85,182,1|10541o0,139,300,0|10eh4dz,139,300,0|10eh4e0,85,182,1|10nu4bz,85,182,1|10nu4c0,139,300,0|10xk5pz,139,300,0|10xk5q0,85,182,1|116x5nz,85,182,1|116x5o0,139,300,0|11ga8dz,139,300,0|11ga8e0,85,182,1|11pn8bz,85,182,1|11pn8c0,139,300,0|11z0b1z,139,300,0|11z0b20,85,182,1|128dazz,85,182,1|128db00,139,300,0|12hqdpz,139,300,0|12hqdq0,85,182,1|12r3dnz,85,182,1|12r3do0,139,300,0|130ggdz,139,300,0|130gge0,85,182,1|139tgbz,85,182,1|139tgc0,139,300,0|13j6j1z,139,300,0|13j6j20,85,182,1|13sjizz,85,182,1|13sjj00,139,300,0|1429kdz,139,300,0|1429ke0,85,182,1|14bmkbz,85,182,1|14bmkc0,139,300,0|14kzn1z,139,300,0|14kzn20,85,182,1|14ucmzz,85,182,1|14ucn00,139,300,0|153pppz,139,300,0|153ppq0,85,182,1|15d2pnz,85,182,1|15d2po0,139,300,0|15mfsdz,139,300,0|15mfse0,85,182,1|15vssbz,85,182,1|15vssc0,139,300,0|1655v1z,139,300,0|1655v20,85,182,1|16eiuzz,85,182,1|16eiv00,139,300,0|16nvxpz,139,300,0|16nvxq0,85,182,1|16xlwbz,85,182,1|16xlwc0,139,300,0|176yz1z,139,300,0|176yz20,85,182,1|17gbyzz,85,182,1|17gbz00,139,300,0|17pp1pz,139,300,0|17pp1q0,85,182,1|17z21nz,85,182,1|17z21o0,139,300,0|188f4dz,139,300,0|188f4e0,85,182,1|18hs4bz,85,182,1|18hs4c0,139,300,0|18r571z,139,300,0|18r5720,85,182,1|190i6zz,85,182,1|190i700,139,300,0|199v9pz,139,300,0|199v9q0,85,182,1|19j89nz,85,182,1|19j89o0,139,300,0|19syb1z,139,300,0|19syb20,85,182,1|1a2bazz,85,182,1|1a2bb00,139,300,0|1abodpz,139,300,0|1abodq0,85,182,1|1al1dnz,85,182,1|1al1do0,139,300,0|1auegdz,139,300,0|1auege0,85,182,1|1b3rgbz,85,182,1|1b3rgc0,139,300,0|1bd4j1z,139,300,0|1bd4j20,85,182,1|1bmhizz,85,182,1|1bmhj00,139,300,0|1bvulpz,139,300,0|1bvulq0,85,182,1|1c57lnz,85,182,1|1c57lo0,139,300,0|1cekodz,139,300,0|1cekoe0,85,182,1|1cnxobz,85,182,1|1cnxoc0,139,300,0|1cxnppz,139,300,0|1cxnpq0,85,182,1|1d70pnz,85,182,1|1d70po0,139,300,0|1dgdsdz,139,300,0|1dgdse0,85,182,1|1dpqsbz,85,182,1|1dpqsc0,139,300,0|1dz3v1z,139,300,0|1dz3v20,85,182,1|1e8guzz,85,182,1|1e8gv00,139,300,0|1ehtxpz,139,300,0|1ehtxq0,85,182,1|1er6xnz,85,182,1|1er6xo0,139,300,0|1f0k0dz,139,300,0|1f0k0e0,85,182,1|1f9x0bz,85,182,1|1f9x0c0,139,300,0|1fjn1pz,139,300,0|1fjn1q0,85,182,1|1ft01nz,85,182,1|1ft01o0,139,300,0|1g2d4dz,139,300,0|1g2d4e0,85,182,1|1gbq4bz,85,182,1|1gbq4c0,139,300,0|1gl371z,139,300,0|1gl3720,85,182,1|1gug6zz,85,182,1|1gug700,139,300,0|1h3t9pz,139,300,0|1h3t9q0,85,182,1|1hd69nz,85,182,1|1hd69o0,139,300,0|1hmjcdz,139,300,0|1hmjce0,85,182,1|1hvwcbz,85,182,1|1hvwcc0,139,300,0|1i59f1z,139,300,0|1i59f20,85,182,1|1iemezz,85,182,1|1iemf00,139,300,0|1iocgdz,139,300,0|1iocge0,85,182,1|1ixpgbz,85,182,1|1ixpgc0,139,300,0|1j72j1z,139,300,0|1j72j20,85,182,1|1jgfizz,85,182,1|1jgfj00,139,300,0|1jpslpz,139,300,0|1jpslq0,85,182,1|1jz5lnz,85,182,1|1jz5lo0,139,300,0|1k8iodz,139,300,0|1k8ioe0,85,182,1|1khvobz,85,182,1|1khvoc0,139,300,0|1kr8r1z,139,300,0|1kr8r20,85,182,1|1l0lqzz,85,182,1|1l0lr00,139,300,0|1l9ytpz,139,300,0|1l9ytq0,85,182,1|1ljosbz,85,182,1|1ljosc0,139,300,0|1lt1v1z,139,300,0|1lt1v20,85,182,1|1m2euzz,85,182,1|1m2ev00,139,300,0|1mbrxpz,139,300,0|1mbrxq0,85,182,1|1ml4xnz,85,182,1|1ml4xo0,139,300,0|1mui0dz,139,300,0|1mui0e0,85,182,1|1n3v0bz,85,182,1|1n3v0c0,139,300,0|1nd831z,139,300,0|1nd8320,85,182,1|1nml2zz,85,182,1|1nml300,139,300,0|1nvy5pz,139,300,0|1nvy5q0,85,182,1|1o5b5nz,85,182,1|1o5b5o0,139,300,0|1of171z,139,300,0|1of1720,85,182,1|1ooe6zz,85,182,1|1ooe700,139,300,0|1oxr9pz,139,300,0|1oxr9q0,85,182,1|1p749nz,85,182,1|1p749o0,139,300,0|1pghcdz,139,300,0|1pghce0,85,182,1|1ppucbz,85,182,1|1ppucc0,139,300,0|1pz7f1z,139,300,0|1pz7f20,85,182,1|1q8kezz,85,182,1|1q8kf00,139,300,0|1qhxhpz,139,300,0|1qhxhq0,85,182,1|1qrahnz,85,182,1|1qraho0,139,300,0|1r0nkdz,139,300,0|1r0nke0,85,182,1|1ra0kbz,85,182,1|1ra0kc0,139,300,0|1rjqlpz,139,300,0|1rjqlq0,85,182,1|1rt3lnz,85,182,1|1rt3lo0,139,300,0|1s2godz,139,300,0|1s2goe0,85,182,1|1sbtobz,85,182,1|1sbtoc0,139,300,0|1sl6r1z,139,300,0|1sl6r20,85,182,1|1sujqzz,85,182,1|1sujr00,139,300,0|1t3wtpz,139,300,0|1t3wtq0,85,182,1|1td9tnz,85,182,1|1td9to0,139,300,0|1tmmwdz,139,300,0|1tmmwe0,85,182,1|1tvzwbz,85,182,1|1tvzwc0,139,300,0|1u5pxpz,139,300,0|1u5pxq0,85,182,1|1uf2xnz,85,182,1|1uf2xo0,139,300,0|1uog0dz,139,300,0|1uog0e0,85,182,1|1uxt0bz,85,182,1|1uxt0c0,139,300,0|1v7631z,139,300,0|1v76320,85,182,1|1vgj2zz,85,182,1|1vgj300,139,300,0|1vpw5pz,139,300,0|1vpw5q0,85,182,1|NaN,85,182,1",
        "Australia/Melbourne|,0,310,0|-133j46h,0,310,0|-133j46g,90,187,0|-rnsrk1,90,187,0|-rnsrk0,91,182,1|-rjj281,91,182,1|-rjj280,90,187,0|-em3i81,90,187,0|-em3i80,91,182,1|-ehme81,91,182,1|-ehme80,90,187,0|-e89cw1,90,187,0|-e89cw0,91,182,1|-dywbk1,91,182,1|-dywbk0,90,187,0|-dp6bk1,90,187,0|-dp6bk0,91,182,1|-dg68w1,91,182,1|-dg68w0,90,187,0|ycf3z,90,187,0|ycf40,91,182,1|14gsfz,91,182,1|14gsg0,90,187,0|1h2hrz,90,187,0|1h2hs0,91,182,1|1njtrz,91,182,1|1njts0,90,187,0|1zskfz,90,187,0|1zskg0,91,182,1|269wfz,91,182,1|269wg0,90,187,0|2iin3z,90,187,0|2iin40,91,182,1|2ozz3z,91,182,1|2ozz40,90,187,0|318prz,90,187,0|318ps0,91,182,1|3830fz,91,182,1|3830g0,90,187,0|3kbr3z,90,187,0|3kbr40,91,182,1|3qt33z,91,182,1|3qt340,90,187,0|431trz,90,187,0|431ts0,91,182,1|49j5rz,91,182,1|49j5s0,90,187,0|4lrwfz,90,187,0|4lrwg0,91,182,1|4s98fz,91,182,1|4s98g0,90,187,0|54hz3z,90,187,0|54hz40,91,182,1|5azb3z,91,182,1|5azb40,90,187,0|5n81rz,90,187,0|5n81s0,91,182,1|5tpdrz,91,182,1|5tpds0,90,187,0|65y4fz,90,187,0|65y4g0,91,182,1|6csf3z,91,182,1|6csf40,90,187,0|6p15rz,90,187,0|6p15s0,91,182,1|6vihrz,91,182,1|6vihs0,90,187,0|77r8fz,90,187,0|77r8g0,91,182,1|7e8kfz,91,182,1|7e8kg0,90,187,0|7qhb3z,90,187,0|7qhb40,91,182,1|7wyn3z,91,182,1|7wyn40,90,187,0|897drz,90,187,0|897ds0,91,182,1|8gen3z,91,182,1|8gen40,90,187,0|8rkhrz,90,187,0|8rkhs0,91,182,1|8z4prz,91,182,1|8z4ps0,90,187,0|9aakfz,90,187,0|9aakg0,91,182,1|9i7r3z,91,182,1|9i7r40,90,187,0|9tqkfz,90,187,0|9tqkg0,91,182,1|a0xtrz,91,182,1|a0xts0,90,187,0|acgn3z,90,187,0|acgn40,91,182,1|ajnwfz,91,182,1|ajnwg0,90,187,0|av6prz,90,187,0|av6ps0,91,182,1|b1o1rz,91,182,1|b1o1s0,90,187,0|bdwsfz,90,187,0|bdwsg0,91,182,1|bke4fz,91,182,1|bke4g0,90,187,0|bwmv3z,90,187,0|bwmv40,91,182,1|c3h5rz,91,182,1|c3h5s0,90,187,0|cfpwfz,90,187,0|cfpwg0,91,182,1|cm78fz,91,182,1|cm78g0,90,187,0|cyfz3z,90,187,0|cyfz40,91,182,1|d6073z,91,182,1|d60740,90,187,0|dh61rz,90,187,0|dh61s0,91,182,1|dp38fz,91,182,1|dp38g0,90,187,0|dzw4fz,90,187,0|dzw4g0,91,182,1|e7tb3z,91,182,1|e7tb40,90,187,0|eim73z,90,187,0|eim740,91,182,1|eqjdrz,91,182,1|eqjds0,90,187,0|f1c9rz,90,187,0|f1c9s0,91,182,1|f99gfz,91,182,1|f99gg0,90,187,0|fkfb3z,90,187,0|fkfb40,91,182,1|frzj3z,91,182,1|frzj40,90,187,0|fzwprz,90,187,0|fzwps0,91,182,1|gaplrz,91,182,1|gapls0,90,187,0|glvgfz,90,187,0|glvgg0,91,182,1|gtsn3z,91,182,1|gtsn40,90,187,0|h4lj3z,90,187,0|h4lj40,91,182,1|hciprz,91,182,1|hcips0,90,187,0|hnblrz,90,187,0|hnbls0,91,182,1|hv8sfz,91,182,1|hv8sg0,90,187,0|i6en3z,90,187,0|i6en40,91,182,1|idyv3z,91,182,1|idyv40,90,187,0|ip4prz,90,187,0|ip4ps0,91,182,1|ix1wfz,91,182,1|ix1wg0,90,187,0|j7usfz,90,187,0|j7usg0,91,182,1|jff0fz,91,182,1|jff0g0,90,187,0|jqkv3z,90,187,0|jqkv40,91,182,1|jyv0fz,91,182,1|jyv0g0,90,187,0|k881rz,90,187,0|k881s0,91,182,1|khl33z,91,182,1|khl340,90,187,0|kqy4fz,90,187,0|kqy4g0,91,182,1|l0b5rz,91,182,1|l0b5s0,90,187,0|l9o73z,90,187,0|l9o740,91,182,1|lj18fz,91,182,1|lj18g0,90,187,0|lse9rz,90,187,0|lse9s0,91,182,1|m1rb3z,91,182,1|m1rb40,90,187,0|mbhb3z,90,187,0|mbhb40,91,182,1|mkucfz,91,182,1|mkucg0,90,187,0|mu7drz,90,187,0|mu7ds0,91,182,1|n3kf3z,91,182,1|n3kf40,90,187,0|ncxgfz,90,187,0|ncxgg0,91,182,1|nmahrz,91,182,1|nmahs0,90,187,0|nvnj3z,90,187,0|nvnj40,91,182,1|o50kfz,91,182,1|o50kg0,90,187,0|oedlrz,90,187,0|oedls0,91,182,1|onqn3z,91,182,1|onqn40,90,187,0|ox3ofz,90,187,0|ox3og0,91,182,1|p6gprz,91,182,1|p6gps0,90,187,0|pg6prz,90,187,0|pg6ps0,91,182,1|ppjr3z,91,182,1|ppjr40,90,187,0|pywsfz,90,187,0|pywsg0,91,182,1|q89trz,91,182,1|q89ts0,90,187,0|qhmv3z,90,187,0|qhmv40,91,182,1|qqzwfz,91,182,1|qqzwg0,90,187,0|r0cxrz,90,187,0|r0cxs0,91,182,1|r9pz3z,91,182,1|r9pz40,90,187,0|rj30fz,90,187,0|rj30g0,91,182,1|rsg1rz,91,182,1|rsg1s0,90,187,0|s1t33z,90,187,0|s1t340,91,182,1|sbj33z,91,182,1|sbj340,90,187,0|skw4fz,90,187,0|skw4g0,91,182,1|su95rz,91,182,1|su95s0,90,187,0|t3m73z,90,187,0|t3m740,91,182,1|tcz8fz,91,182,1|tcz8g0,90,187,0|tmc9rz,90,187,0|tmc9s0,91,182,1|tvpb3z,91,182,1|tvpb40,90,187,0|u52cfz,90,187,0|u52cg0,91,182,1|uefdrz,91,182,1|uefds0,90,187,0|unsf3z,90,187,0|unsf40,91,182,1|ux5gfz,91,182,1|ux5gg0,90,187,0|v6vgfz,90,187,0|v6vgg0,91,182,1|vg8hrz,91,182,1|vg8hs0,90,187,0|vplj3z,90,187,0|vplj40,91,182,1|vyykfz,91,182,1|vyykg0,90,187,0|w8blrz,90,187,0|w8bls0,91,182,1|whon3z,91,182,1|whon40,90,187,0|wr1ofz,90,187,0|wr1og0,91,182,1|x0eprz,91,182,1|x0eps0,90,187,0|x9rr3z,90,187,0|x9rr40,91,182,1|xj4sfz,91,182,1|xj4sg0,90,187,0|xshtrz,90,187,0|xshts0,91,182,1|y1uv3z,91,182,1|y1uv40,90,187,0|ybkv3z,90,187,0|ybkv40,91,182,1|ykxwfz,91,182,1|ykxwg0,90,187,0|yuaxrz,90,187,0|yuaxs0,91,182,1|z3nz3z,91,182,1|z3nz40,90,187,0|zd10fz,90,187,0|zd10g0,91,182,1|zme1rz,91,182,1|zme1s0,90,187,0|zvr33z,90,187,0|zvr340,91,182,1|10544fz,91,182,1|10544g0,90,187,0|10eh5rz,90,187,0|10eh5s0,91,182,1|10nu73z,91,182,1|10nu740,90,187,0|10xk73z,90,187,0|10xk740,91,182,1|116x8fz,91,182,1|116x8g0,90,187,0|11ga9rz,90,187,0|11ga9s0,91,182,1|11pnb3z,91,182,1|11pnb40,90,187,0|11z0cfz,90,187,0|11z0cg0,91,182,1|128ddrz,91,182,1|128dds0,90,187,0|12hqf3z,90,187,0|12hqf40,91,182,1|12r3gfz,91,182,1|12r3gg0,90,187,0|130ghrz,90,187,0|130ghs0,91,182,1|139tj3z,91,182,1|139tj40,90,187,0|13j6kfz,90,187,0|13j6kg0,91,182,1|13sjlrz,91,182,1|13sjls0,90,187,0|1429lrz,90,187,0|1429ls0,91,182,1|14bmn3z,91,182,1|14bmn40,90,187,0|14kzofz,90,187,0|14kzog0,91,182,1|14ucprz,91,182,1|14ucps0,90,187,0|153pr3z,90,187,0|153pr40,91,182,1|15d2sfz,91,182,1|15d2sg0,90,187,0|15mftrz,90,187,0|15mfts0,91,182,1|15vsv3z,91,182,1|15vsv40,90,187,0|1655wfz,90,187,0|1655wg0,91,182,1|16eixrz,91,182,1|16eixs0,90,187,0|16nvz3z,90,187,0|16nvz40,91,182,1|16xlz3z,91,182,1|16xlz40,90,187,0|176z0fz,90,187,0|176z0g0,91,182,1|17gc1rz,91,182,1|17gc1s0,90,187,0|17pp33z,90,187,0|17pp340,91,182,1|17z24fz,91,182,1|17z24g0,90,187,0|188f5rz,90,187,0|188f5s0,91,182,1|18hs73z,91,182,1|18hs740,90,187,0|18r58fz,90,187,0|18r58g0,91,182,1|190i9rz,91,182,1|190i9s0,90,187,0|199vb3z,90,187,0|199vb40,91,182,1|19j8cfz,91,182,1|19j8cg0,90,187,0|19sycfz,90,187,0|19sycg0,91,182,1|1a2bdrz,91,182,1|1a2bds0,90,187,0|1abof3z,90,187,0|1abof40,91,182,1|1al1gfz,91,182,1|1al1gg0,90,187,0|1auehrz,90,187,0|1auehs0,91,182,1|1b3rj3z,91,182,1|1b3rj40,90,187,0|1bd4kfz,90,187,0|1bd4kg0,91,182,1|1bmhlrz,91,182,1|1bmhls0,90,187,0|1bvun3z,90,187,0|1bvun40,91,182,1|1c57ofz,91,182,1|1c57og0,90,187,0|1cekprz,90,187,0|1cekps0,91,182,1|1cnxr3z,91,182,1|1cnxr40,90,187,0|1cxnr3z,90,187,0|1cxnr40,91,182,1|1d70sfz,91,182,1|1d70sg0,90,187,0|1dgdtrz,90,187,0|1dgdts0,91,182,1|1dpqv3z,91,182,1|1dpqv40,90,187,0|1dz3wfz,90,187,0|1dz3wg0,91,182,1|1e8gxrz,91,182,1|1e8gxs0,90,187,0|1ehtz3z,90,187,0|1ehtz40,91,182,1|1er70fz,91,182,1|1er70g0,90,187,0|1f0k1rz,90,187,0|1f0k1s0,91,182,1|1f9x33z,91,182,1|1f9x340,90,187,0|1fjn33z,90,187,0|1fjn340,91,182,1|1ft04fz,91,182,1|1ft04g0,90,187,0|1g2d5rz,90,187,0|1g2d5s0,91,182,1|1gbq73z,91,182,1|1gbq740,90,187,0|1gl38fz,90,187,0|1gl38g0,91,182,1|1gug9rz,91,182,1|1gug9s0,90,187,0|1h3tb3z,90,187,0|1h3tb40,91,182,1|1hd6cfz,91,182,1|1hd6cg0,90,187,0|1hmjdrz,90,187,0|1hmjds0,91,182,1|1hvwf3z,91,182,1|1hvwf40,90,187,0|1i59gfz,90,187,0|1i59gg0,91,182,1|1iemhrz,91,182,1|1iemhs0,90,187,0|1iochrz,90,187,0|1iochs0,91,182,1|1ixpj3z,91,182,1|1ixpj40,90,187,0|1j72kfz,90,187,0|1j72kg0,91,182,1|1jgflrz,91,182,1|1jgfls0,90,187,0|1jpsn3z,90,187,0|1jpsn40,91,182,1|1jz5ofz,91,182,1|1jz5og0,90,187,0|1k8iprz,90,187,0|1k8ips0,91,182,1|1khvr3z,91,182,1|1khvr40,90,187,0|1kr8sfz,90,187,0|1kr8sg0,91,182,1|1l0ltrz,91,182,1|1l0lts0,90,187,0|1l9yv3z,90,187,0|1l9yv40,91,182,1|1ljov3z,91,182,1|1ljov40,90,187,0|1lt1wfz,90,187,0|1lt1wg0,91,182,1|1m2exrz,91,182,1|1m2exs0,90,187,0|1mbrz3z,90,187,0|1mbrz40,91,182,1|1ml50fz,91,182,1|1ml50g0,90,187,0|1mui1rz,90,187,0|1mui1s0,91,182,1|1n3v33z,91,182,1|1n3v340,90,187,0|1nd84fz,90,187,0|1nd84g0,91,182,1|1nml5rz,91,182,1|1nml5s0,90,187,0|1nvy73z,90,187,0|1nvy740,91,182,1|1o5b8fz,91,182,1|1o5b8g0,90,187,0|1of18fz,90,187,0|1of18g0,91,182,1|1ooe9rz,91,182,1|1ooe9s0,90,187,0|1oxrb3z,90,187,0|1oxrb40,91,182,1|1p74cfz,91,182,1|1p74cg0,90,187,0|1pghdrz,90,187,0|1pghds0,91,182,1|1ppuf3z,91,182,1|1ppuf40,90,187,0|1pz7gfz,90,187,0|1pz7gg0,91,182,1|1q8khrz,91,182,1|1q8khs0,90,187,0|1qhxj3z,90,187,0|1qhxj40,91,182,1|1qrakfz,91,182,1|1qrakg0,90,187,0|1r0nlrz,90,187,0|1r0nls0,91,182,1|1ra0n3z,91,182,1|1ra0n40,90,187,0|1rjqn3z,90,187,0|1rjqn40,91,182,1|1rt3ofz,91,182,1|1rt3og0,90,187,0|1s2gprz,90,187,0|1s2gps0,91,182,1|1sbtr3z,91,182,1|1sbtr40,90,187,0|1sl6sfz,90,187,0|1sl6sg0,91,182,1|1sujtrz,91,182,1|1sujts0,90,187,0|1t3wv3z,90,187,0|1t3wv40,91,182,1|1td9wfz,91,182,1|1td9wg0,90,187,0|1tmmxrz,90,187,0|1tmmxs0,91,182,1|1tvzz3z,91,182,1|1tvzz40,90,187,0|1u5pz3z,90,187,0|1u5pz40,91,182,1|1uf30fz,91,182,1|1uf30g0,90,187,0|1uog1rz,90,187,0|1uog1s0,91,182,1|1uxt33z,91,182,1|1uxt340,90,187,0|1v764fz,90,187,0|1v764g0,91,182,1|1vgj5rz,91,182,1|1vgj5s0,90,187,0|1vpw73z,90,187,0|1vpw740,91,182,1|NaN,91,182,1",
        "Australia/Perth|,0,311,0|-12nxusd,0,311,0|-12nxusc,141,181,0|-rnsm01,141,181,0|-rnsm00,142,216,1|-rjiwo1,142,216,1|-rjiwo0,141,181,0|-em3co1,141,181,0|-em3co0,142,216,1|-ehm8o1,142,216,1|-ehm8o0,141,181,0|-e897c1,141,181,0|-e897c0,142,216,1|-dyw601,142,216,1|-dyw600,141,181,0|2iisnz,141,181,0|2iiso0,142,216,1|2p04nz,142,216,1|2p04o0,141,181,0|77rdzz,141,181,0|77re00,142,216,1|7e8pzz,142,216,1|7e8q00,141,181,0|beztzz,141,181,0|bezu00,142,216,1|bke9zz,142,216,1|bkea00,141,181,0|j9nrbz,141,181,0|j9nrc0,142,216,1|jff5zz,142,216,1|jff600,141,181,0|jql0nz,141,181,0|jql0o0,142,216,1|jyi7bz,142,216,1|jyi7c0,141,181,0|k9b3bz,141,181,0|k9b3c0,142,216,1|kh89zz,142,216,1|kh8a00,141,181,0|NaN,141,181,0",
        "Australia/Sydney|,0,312,0|-133j5c5,0,312,0|-133j5c4,90,187,0|-rnsrk1,90,187,0|-rnsrk0,91,182,1|-rjj281,91,182,1|-rjj280,90,187,0|-em3i81,90,187,0|-em3i80,91,182,1|-ehme81,91,182,1|-ehme80,90,187,0|-e89cw1,90,187,0|-e89cw0,91,182,1|-dywbk1,91,182,1|-dywbk0,90,187,0|-dp6bk1,90,187,0|-dp6bk0,91,182,1|-dg68w1,91,182,1|-dg68w0,90,187,0|ycf3z,90,187,0|ycf40,91,182,1|14gsfz,91,182,1|14gsg0,90,187,0|1h2hrz,90,187,0|1h2hs0,91,182,1|1njtrz,91,182,1|1njts0,90,187,0|1zskfz,90,187,0|1zskg0,91,182,1|269wfz,91,182,1|269wg0,90,187,0|2iin3z,90,187,0|2iin40,91,182,1|2ozz3z,91,182,1|2ozz40,90,187,0|318prz,90,187,0|318ps0,91,182,1|3830fz,91,182,1|3830g0,90,187,0|3kbr3z,90,187,0|3kbr40,91,182,1|3qt33z,91,182,1|3qt340,90,187,0|431trz,90,187,0|431ts0,91,182,1|49j5rz,91,182,1|49j5s0,90,187,0|4lrwfz,90,187,0|4lrwg0,91,182,1|4s98fz,91,182,1|4s98g0,90,187,0|54hz3z,90,187,0|54hz40,91,182,1|5azb3z,91,182,1|5azb40,90,187,0|5n81rz,90,187,0|5n81s0,91,182,1|5tpdrz,91,182,1|5tpds0,90,187,0|65y4fz,90,187,0|65y4g0,91,182,1|6e89rz,91,182,1|6e89s0,90,187,0|6p15rz,90,187,0|6p15s0,91,182,1|6vihrz,91,182,1|6vihs0,90,187,0|77r8fz,90,187,0|77r8g0,91,182,1|7e8kfz,91,182,1|7e8kg0,90,187,0|7qhb3z,90,187,0|7qhb40,91,182,1|7wyn3z,91,182,1|7wyn40,90,187,0|897drz,90,187,0|897ds0,91,182,1|8gen3z,91,182,1|8gen40,90,187,0|8rkhrz,90,187,0|8rkhs0,91,182,1|8z4prz,91,182,1|8z4ps0,90,187,0|9anj3z,90,187,0|9anj40,91,182,1|9i7r3z,91,182,1|9i7r40,90,187,0|9tqkfz,90,187,0|9tqkg0,91,182,1|a0xtrz,91,182,1|a0xts0,90,187,0|acgn3z,90,187,0|acgn40,91,182,1|aixz3z,91,182,1|aixz40,90,187,0|av6prz,90,187,0|av6ps0,91,182,1|b1o1rz,91,182,1|b1o1s0,90,187,0|bdwsfz,90,187,0|bdwsg0,91,182,1|bke4fz,91,182,1|bke4g0,90,187,0|bwmv3z,90,187,0|bwmv40,91,182,1|c3h5rz,91,182,1|c3h5s0,90,187,0|cfpwfz,90,187,0|cfpwg0,91,182,1|cm78fz,91,182,1|cm78g0,90,187,0|cyfz3z,90,187,0|cyfz40,91,182,1|d4xb3z,91,182,1|d4xb40,90,187,0|dh61rz,90,187,0|dh61s0,91,182,1|dp38fz,91,182,1|dp38g0,90,187,0|dzw4fz,90,187,0|dzw4g0,91,182,1|e7tb3z,91,182,1|e7tb40,90,187,0|eim73z,90,187,0|eim740,91,182,1|eqjdrz,91,182,1|eqjds0,90,187,0|f1c9rz,90,187,0|f1c9s0,91,182,1|f99gfz,91,182,1|f99gg0,90,187,0|fkfb3z,90,187,0|fkfb40,91,182,1|frzj3z,91,182,1|frzj40,90,187,0|fzwprz,90,187,0|fzwps0,91,182,1|gaplrz,91,182,1|gapls0,90,187,0|glvgfz,90,187,0|glvgg0,91,182,1|gtsn3z,91,182,1|gtsn40,90,187,0|h4lj3z,90,187,0|h4lj40,91,182,1|hciprz,91,182,1|hcips0,90,187,0|hnblrz,90,187,0|hnbls0,91,182,1|hv8sfz,91,182,1|hv8sg0,90,187,0|i6en3z,90,187,0|i6en40,91,182,1|idyv3z,91,182,1|idyv40,90,187,0|ip4prz,90,187,0|ip4ps0,91,182,1|ix1wfz,91,182,1|ix1wg0,90,187,0|j7usfz,90,187,0|j7usg0,91,182,1|jff0fz,91,182,1|jff0g0,90,187,0|jqkv3z,90,187,0|jqkv40,91,182,1|jyv0fz,91,182,1|jyv0g0,90,187,0|k881rz,90,187,0|k881s0,91,182,1|khl33z,91,182,1|khl340,90,187,0|kqy4fz,90,187,0|kqy4g0,91,182,1|l0b5rz,91,182,1|l0b5s0,90,187,0|l9o73z,90,187,0|l9o740,91,182,1|lj18fz,91,182,1|lj18g0,90,187,0|lse9rz,90,187,0|lse9s0,91,182,1|m1rb3z,91,182,1|m1rb40,90,187,0|mbhb3z,90,187,0|mbhb40,91,182,1|mkucfz,91,182,1|mkucg0,90,187,0|mu7drz,90,187,0|mu7ds0,91,182,1|n3kf3z,91,182,1|n3kf40,90,187,0|ncxgfz,90,187,0|ncxgg0,91,182,1|nmahrz,91,182,1|nmahs0,90,187,0|nvnj3z,90,187,0|nvnj40,91,182,1|o50kfz,91,182,1|o50kg0,90,187,0|oedlrz,90,187,0|oedls0,91,182,1|onqn3z,91,182,1|onqn40,90,187,0|ox3ofz,90,187,0|ox3og0,91,182,1|p6gprz,91,182,1|p6gps0,90,187,0|pg6prz,90,187,0|pg6ps0,91,182,1|ppjr3z,91,182,1|ppjr40,90,187,0|pywsfz,90,187,0|pywsg0,91,182,1|q89trz,91,182,1|q89ts0,90,187,0|qhmv3z,90,187,0|qhmv40,91,182,1|qqzwfz,91,182,1|qqzwg0,90,187,0|r0cxrz,90,187,0|r0cxs0,91,182,1|r9pz3z,91,182,1|r9pz40,90,187,0|rj30fz,90,187,0|rj30g0,91,182,1|rsg1rz,91,182,1|rsg1s0,90,187,0|s1t33z,90,187,0|s1t340,91,182,1|sbj33z,91,182,1|sbj340,90,187,0|skw4fz,90,187,0|skw4g0,91,182,1|su95rz,91,182,1|su95s0,90,187,0|t3m73z,90,187,0|t3m740,91,182,1|tcz8fz,91,182,1|tcz8g0,90,187,0|tmc9rz,90,187,0|tmc9s0,91,182,1|tvpb3z,91,182,1|tvpb40,90,187,0|u52cfz,90,187,0|u52cg0,91,182,1|uefdrz,91,182,1|uefds0,90,187,0|unsf3z,90,187,0|unsf40,91,182,1|ux5gfz,91,182,1|ux5gg0,90,187,0|v6vgfz,90,187,0|v6vgg0,91,182,1|vg8hrz,91,182,1|vg8hs0,90,187,0|vplj3z,90,187,0|vplj40,91,182,1|vyykfz,91,182,1|vyykg0,90,187,0|w8blrz,90,187,0|w8bls0,91,182,1|whon3z,91,182,1|whon40,90,187,0|wr1ofz,90,187,0|wr1og0,91,182,1|x0eprz,91,182,1|x0eps0,90,187,0|x9rr3z,90,187,0|x9rr40,91,182,1|xj4sfz,91,182,1|xj4sg0,90,187,0|xshtrz,90,187,0|xshts0,91,182,1|y1uv3z,91,182,1|y1uv40,90,187,0|ybkv3z,90,187,0|ybkv40,91,182,1|ykxwfz,91,182,1|ykxwg0,90,187,0|yuaxrz,90,187,0|yuaxs0,91,182,1|z3nz3z,91,182,1|z3nz40,90,187,0|zd10fz,90,187,0|zd10g0,91,182,1|zme1rz,91,182,1|zme1s0,90,187,0|zvr33z,90,187,0|zvr340,91,182,1|10544fz,91,182,1|10544g0,90,187,0|10eh5rz,90,187,0|10eh5s0,91,182,1|10nu73z,91,182,1|10nu740,90,187,0|10xk73z,90,187,0|10xk740,91,182,1|116x8fz,91,182,1|116x8g0,90,187,0|11ga9rz,90,187,0|11ga9s0,91,182,1|11pnb3z,91,182,1|11pnb40,90,187,0|11z0cfz,90,187,0|11z0cg0,91,182,1|128ddrz,91,182,1|128dds0,90,187,0|12hqf3z,90,187,0|12hqf40,91,182,1|12r3gfz,91,182,1|12r3gg0,90,187,0|130ghrz,90,187,0|130ghs0,91,182,1|139tj3z,91,182,1|139tj40,90,187,0|13j6kfz,90,187,0|13j6kg0,91,182,1|13sjlrz,91,182,1|13sjls0,90,187,0|1429lrz,90,187,0|1429ls0,91,182,1|14bmn3z,91,182,1|14bmn40,90,187,0|14kzofz,90,187,0|14kzog0,91,182,1|14ucprz,91,182,1|14ucps0,90,187,0|153pr3z,90,187,0|153pr40,91,182,1|15d2sfz,91,182,1|15d2sg0,90,187,0|15mftrz,90,187,0|15mfts0,91,182,1|15vsv3z,91,182,1|15vsv40,90,187,0|1655wfz,90,187,0|1655wg0,91,182,1|16eixrz,91,182,1|16eixs0,90,187,0|16nvz3z,90,187,0|16nvz40,91,182,1|16xlz3z,91,182,1|16xlz40,90,187,0|176z0fz,90,187,0|176z0g0,91,182,1|17gc1rz,91,182,1|17gc1s0,90,187,0|17pp33z,90,187,0|17pp340,91,182,1|17z24fz,91,182,1|17z24g0,90,187,0|188f5rz,90,187,0|188f5s0,91,182,1|18hs73z,91,182,1|18hs740,90,187,0|18r58fz,90,187,0|18r58g0,91,182,1|190i9rz,91,182,1|190i9s0,90,187,0|199vb3z,90,187,0|199vb40,91,182,1|19j8cfz,91,182,1|19j8cg0,90,187,0|19sycfz,90,187,0|19sycg0,91,182,1|1a2bdrz,91,182,1|1a2bds0,90,187,0|1abof3z,90,187,0|1abof40,91,182,1|1al1gfz,91,182,1|1al1gg0,90,187,0|1auehrz,90,187,0|1auehs0,91,182,1|1b3rj3z,91,182,1|1b3rj40,90,187,0|1bd4kfz,90,187,0|1bd4kg0,91,182,1|1bmhlrz,91,182,1|1bmhls0,90,187,0|1bvun3z,90,187,0|1bvun40,91,182,1|1c57ofz,91,182,1|1c57og0,90,187,0|1cekprz,90,187,0|1cekps0,91,182,1|1cnxr3z,91,182,1|1cnxr40,90,187,0|1cxnr3z,90,187,0|1cxnr40,91,182,1|1d70sfz,91,182,1|1d70sg0,90,187,0|1dgdtrz,90,187,0|1dgdts0,91,182,1|1dpqv3z,91,182,1|1dpqv40,90,187,0|1dz3wfz,90,187,0|1dz3wg0,91,182,1|1e8gxrz,91,182,1|1e8gxs0,90,187,0|1ehtz3z,90,187,0|1ehtz40,91,182,1|1er70fz,91,182,1|1er70g0,90,187,0|1f0k1rz,90,187,0|1f0k1s0,91,182,1|1f9x33z,91,182,1|1f9x340,90,187,0|1fjn33z,90,187,0|1fjn340,91,182,1|1ft04fz,91,182,1|1ft04g0,90,187,0|1g2d5rz,90,187,0|1g2d5s0,91,182,1|1gbq73z,91,182,1|1gbq740,90,187,0|1gl38fz,90,187,0|1gl38g0,91,182,1|1gug9rz,91,182,1|1gug9s0,90,187,0|1h3tb3z,90,187,0|1h3tb40,91,182,1|1hd6cfz,91,182,1|1hd6cg0,90,187,0|1hmjdrz,90,187,0|1hmjds0,91,182,1|1hvwf3z,91,182,1|1hvwf40,90,187,0|1i59gfz,90,187,0|1i59gg0,91,182,1|1iemhrz,91,182,1|1iemhs0,90,187,0|1iochrz,90,187,0|1iochs0,91,182,1|1ixpj3z,91,182,1|1ixpj40,90,187,0|1j72kfz,90,187,0|1j72kg0,91,182,1|1jgflrz,91,182,1|1jgfls0,90,187,0|1jpsn3z,90,187,0|1jpsn40,91,182,1|1jz5ofz,91,182,1|1jz5og0,90,187,0|1k8iprz,90,187,0|1k8ips0,91,182,1|1khvr3z,91,182,1|1khvr40,90,187,0|1kr8sfz,90,187,0|1kr8sg0,91,182,1|1l0ltrz,91,182,1|1l0lts0,90,187,0|1l9yv3z,90,187,0|1l9yv40,91,182,1|1ljov3z,91,182,1|1ljov40,90,187,0|1lt1wfz,90,187,0|1lt1wg0,91,182,1|1m2exrz,91,182,1|1m2exs0,90,187,0|1mbrz3z,90,187,0|1mbrz40,91,182,1|1ml50fz,91,182,1|1ml50g0,90,187,0|1mui1rz,90,187,0|1mui1s0,91,182,1|1n3v33z,91,182,1|1n3v340,90,187,0|1nd84fz,90,187,0|1nd84g0,91,182,1|1nml5rz,91,182,1|1nml5s0,90,187,0|1nvy73z,90,187,0|1nvy740,91,182,1|1o5b8fz,91,182,1|1o5b8g0,90,187,0|1of18fz,90,187,0|1of18g0,91,182,1|1ooe9rz,91,182,1|1ooe9s0,90,187,0|1oxrb3z,90,187,0|1oxrb40,91,182,1|1p74cfz,91,182,1|1p74cg0,90,187,0|1pghdrz,90,187,0|1pghds0,91,182,1|1ppuf3z,91,182,1|1ppuf40,90,187,0|1pz7gfz,90,187,0|1pz7gg0,91,182,1|1q8khrz,91,182,1|1q8khs0,90,187,0|1qhxj3z,90,187,0|1qhxj40,91,182,1|1qrakfz,91,182,1|1qrakg0,90,187,0|1r0nlrz,90,187,0|1r0nls0,91,182,1|1ra0n3z,91,182,1|1ra0n40,90,187,0|1rjqn3z,90,187,0|1rjqn40,91,182,1|1rt3ofz,91,182,1|1rt3og0,90,187,0|1s2gprz,90,187,0|1s2gps0,91,182,1|1sbtr3z,91,182,1|1sbtr40,90,187,0|1sl6sfz,90,187,0|1sl6sg0,91,182,1|1sujtrz,91,182,1|1sujts0,90,187,0|1t3wv3z,90,187,0|1t3wv40,91,182,1|1td9wfz,91,182,1|1td9wg0,90,187,0|1tmmxrz,90,187,0|1tmmxs0,91,182,1|1tvzz3z,91,182,1|1tvzz40,90,187,0|1u5pz3z,90,187,0|1u5pz40,91,182,1|1uf30fz,91,182,1|1uf30g0,90,187,0|1uog1rz,90,187,0|1uog1s0,91,182,1|1uxt33z,91,182,1|1uxt340,90,187,0|1v764fz,90,187,0|1v764g0,91,182,1|1vgj5rz,91,182,1|1vgj5s0,90,187,0|1vpw73z,90,187,0|1vpw740,91,182,1|NaN,91,182,1",
        "Etc/GMT+1|,191,13,0",
        "Etc/GMT+10|,200,34,0",
        "Etc/GMT+11|,201,33,0",
        "Etc/GMT+12|,202,381,0",
        "Etc/GMT+2|,192,43,0",
        "Etc/GMT+3|,193,41,0",
        "Etc/GMT+4|,194,40,0",
        "Etc/GMT+5|,195,59,0",
        "Etc/GMT+6|,196,63,0",
        "Etc/GMT+7|,197,62,0",
        "Etc/GMT+8|,198,38,0",
        "Etc/GMT+9|,199,35,0",
        "Etc/GMT-1|,190,8,0",
        "Etc/GMT-10|,181,187,0",
        "Etc/GMT-11|,180,182,0",
        "Etc/GMT-12|,179,192,0",
        "Etc/GMT-13|,178,193,0",
        "Etc/GMT-14|,177,199,0",
        "Etc/GMT-2|,189,9,0",
        "Etc/GMT-3|,188,4,0",
        "Etc/GMT-4|,187,201,0",
        "Etc/GMT-5|,186,184,0",
        "Etc/GMT-6|,185,188,0",
        "Etc/GMT-7|,184,183,0",
        "Etc/GMT-8|,183,181,0",
        "Etc/GMT-9|,182,216,0",
        "Europe/Amsterdam|,0,313,0|-1ayy3h7,0,313,0|-1ayy3h6,53,313,0|-14j9c01,53,313,0|-14j9c00,6,1,0|-ss5uo1,6,1,0|-ss5uo0,8,8,0|-s0dxg1,8,8,0|-s0dxg0,9,9,1|-rsilg1,9,9,1|-rsilg0,8,8,0|-ridmk1,8,8,0|-ridmk0,9,9,1|-ragfw1,9,9,1|-ragfw0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,8,8,0|-qotw41,8,8,0|-qotw40,6,1,0|-qj59g1,6,1,0|-qj59g0,7,8,1|-q7zes1,7,8,1|-q7zes0,6,1,0|-q15441,6,1,0|-q15440,7,8,1|-po6g41,7,8,1|-po6g40,6,1,0|-pgvhg1,6,1,0|-pgvhg0,7,8,1|-p5atg1,7,8,1|-p5atg0,6,1,0|-oxj6s1,6,1,0|-oxj6s0,7,8,1|-ong841,7,8,1|-ong840,6,1,0|-odd9g1,6,1,0|-odd9g0,7,8,1|-o4q5g1,7,8,1|-o4q5g0,6,1,0|-nvq2s1,6,1,0|-nvq2s0,7,8,1|-nm02s1,7,8,1|-nm02s0,6,1,0|-ncn1g1,6,1,0|-ncn1g0,7,8,1|-n3a041,7,8,1|-n3a040,6,1,0|-mt71g1,6,1,0|-mt71g0,7,8,1|-mkjxg1,7,8,1|-mkjxg0,6,1,0|-matxg1,6,1,0|-matxg0,7,8,1|-m1tus1,7,8,1|-m1tus0,6,1,0|-lrqw41,6,1,0|-lrqw40,7,8,1|-liql41,7,8,1|-liql40,6,1,0|-l8nmg1,6,1,0|-l8nmg0,7,8,1|-l00ig1,7,8,1|-l00ig0,6,1,0|-kqaig1,6,1,0|-kqaig0,7,8,1|-khafs1,7,8,1|-khafs0,6,1,0|-k77h41,6,1,0|-k77h40,7,8,1|-jykd41,7,8,1|-jykd40,6,1,0|-jp7bs1,6,1,0|-jp7bs0,7,8,1|-jfuag1,7,8,1|-jfuag0,6,1,0|-j6u7s1,6,1,0|-j6u7s0,7,8,1|-iwr941,7,8,1|-iwr940,6,1,0|-ine7s1,6,1,0|-ine7s0,7,8,1|-ie16g1,7,8,1|-ie16g0,6,1,0|-i513s1,6,1,0|-i513s0,7,8,1|-hvb3s1,7,8,1|-hvb3s0,6,1,0|-hl8541,6,1,0|-hl8540,7,8,1|-hcl141,7,8,1|-hcl140,6,1,0|-h37zs1,6,1,0|-h37zs0,7,8,1|-gtuyg1,7,8,1|-gtuyg0,6,1,0|-gkuvs1,6,1,0|-gkuvs0,7,8,1|-gb4vs1,7,8,1|-gb4vs0,6,1,0|-g11x41,6,1,0|-g11x40,7,8,1|-fpw2g1,7,8,1|-fpw2g0,6,1,0|-fkul41,6,1,0|-fkul40,7,8,1|-fgh6g1,7,8,1|-fgh6g0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d75h81,9,9,1|-d75h80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cofek1,9,9,1|-cofek0,8,8,0|-cbtp81,8,8,0|-cbtp80,9,9,1|-c4kl81,9,9,1|-c4kl80,8,8,0|3s9mrz,8,8,0|3s9ms0,9,9,1|419pfz,9,9,1|419pg0,8,8,0|4azpfz,8,8,0|4azpg0,9,9,1|4kcqrz,9,9,1|4kcqs0,8,8,0|4tps3z,8,8,0|4tps40,9,9,1|532tfz,9,9,1|532tg0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Andorra|,0,314,0|-100edm5,0,314,0|-100edm4,6,1,0|-c4xmo1,6,1,0|-c4xmo0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Astrakhan|,0,315,0|-nu2zkd,0,315,0|-nu2zkc,96,4,0|-kmr4c1,96,4,0|-kmr4c0,102,201,0|5vb3jz,102,201,0|5vb3k0,87,184,1|64pwrz,87,184,1|64pws0,102,201,0|6e30vz,102,201,0|6e30w0,87,184,1|6nhu3z,87,184,1|6nhu40,102,201,0|6wuy7z,102,201,0|6wuy80,87,184,1|769rfz,87,184,1|769rg0,102,201,0|7foq7z,102,201,0|7foq80,87,184,1|7p1x3z,87,184,1|7p1x40,102,201,0|7yeyfz,102,201,0|7yeyg0,87,184,1|87rzrz,87,184,1|87rzs0,102,201,0|8h513z,102,201,0|8h5140,87,184,1|8qi2fz,87,184,1|8qi2g0,102,201,0|8zv3rz,102,201,0|8zv3s0,87,184,1|99853z,87,184,1|998540,102,201,0|9il6fz,102,201,0|9il6g0,87,184,1|9ry7rz,87,184,1|9ry7s0,102,201,0|a1b93z,102,201,0|a1b940,102,201,1|aaod7z,102,201,1|aaod80,96,4,0|ak1ejz,96,4,0|ak1ek0,102,201,1|atrejz,102,201,1|atrek0,96,4,0|b34fvz,96,4,0|b34fw0,102,201,0|blufrz,102,201,0|blufs0,102,201,1|bv7jvz,102,201,1|bv7jw0,96,4,0|c4kl7z,96,4,0|c4kl80,102,201,1|cdxmjz,102,201,1|cdxmk0,96,4,0|cnanvz,96,4,0|cnanw0,102,201,1|cwnp7z,102,201,1|cwnp80,96,4,0|d60qjz,96,4,0|d60qk0,102,201,1|dfdrvz,102,201,1|dfdrw0,96,4,0|dp3rvz,96,4,0|dp3rw0,102,201,1|dzwnvz,102,201,1|dzwnw0,96,4,0|e7tujz,96,4,0|e7tuk0,102,201,1|eimqjz,102,201,1|eimqk0,96,4,0|eqjx7z,96,4,0|eqjx80,102,201,1|f1ct7z,102,201,1|f1ct80,96,4,0|f99zvz,96,4,0|f99zw0,102,201,1|fkfujz,102,201,1|fkfuk0,96,4,0|fs02jz,96,4,0|fs02k0,102,201,1|g35x7z,102,201,1|g35x80,96,4,0|gaq57z,96,4,0|gaq580,102,201,1|glvzvz,102,201,1|glvzw0,96,4,0|gtt6jz,96,4,0|gtt6k0,102,201,1|h4m2jz,102,201,1|h4m2k0,96,4,0|hcj97z,96,4,0|hcj980,102,201,1|hnc57z,102,201,1|hnc580,96,4,0|hv9bvz,96,4,0|hv9bw0,102,201,1|i6f6jz,102,201,1|i6f6k0,96,4,0|idzejz,96,4,0|idzek0,102,201,1|ip597z,102,201,1|ip5980,96,4,0|iwph7z,96,4,0|iwph80,102,201,1|j7vbvz,102,201,1|j7vbw0,96,4,0|jffjvz,96,4,0|jffjw0,102,201,1|jqlejz,102,201,1|jqlek0,96,4,0|jyil7z,96,4,0|jyil80,102,201,1|k9bh7z,102,201,1|k9bh80,96,4,0|kh8nvz,96,4,0|kh8nw0,102,201,1|ks1jvz,102,201,1|ks1jw0,96,4,0|kzyqjz,96,4,0|kzyqk0,102,201,1|lb4l7z,102,201,1|lb4l80,96,4,0|liot7z,96,4,0|liot80,102,201,0|ne0t3z,102,201,0|ne0t40,96,4,0|o4o57z,96,4,0|o4o580,102,201,0|NaN,102,201,0",
        "Europe/Athens|,0,316,0|-12rxtq5,0,316,0|-12rxtq4,42,316,0|-rvv0ch,42,316,0|-rvv0cg,14,9,0|-jkbpk1,14,9,0|-jkbpk0,15,4,1|-jhg301,15,4,1|-jhg300,14,9,0|-ezx6w1,14,9,0|-ezx6w0,15,4,1|-eyqoc1,15,4,1|-eyqoc0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dys2s1,8,8,0|-dys2s0,9,9,1|-dp4081,9,9,1|-dp4080,8,8,0|-dfp1g1,8,8,0|-dfp1g0,14,9,0|-94v1k1,14,9,0|-94v1k0,15,4,1|-8yhho1,15,4,1|-8yhho0,14,9,0|2r4d3z,14,9,0|2r4d40,15,4,1|32ul3z,15,4,1|32ul40,14,9,0|39wfzz,14,9,0|39wg00,15,4,1|3j9hbz,15,4,1|3j9hc0,14,9,0|3s9jzz,14,9,0|3s9k00,15,4,1|41bhbz,15,4,1|41bhc0,14,9,0|4azmnz,14,9,0|4azmo0,15,4,1|4jzs3z,15,4,1|4jzs40,14,9,0|4tq8rz,14,9,0|4tq8s0,15,4,1|530t7z,15,4,1|530t80,14,9,0|5cjbrz,14,9,0|5cjbs0,15,4,1|5lskzz,15,4,1|5lsl00,14,9,0|5v5xfz,14,9,0|5v5xg0,15,4,1|64iyrz,15,4,1|64iys0,14,9,0|6dw03z,14,9,0|6dw040,15,4,1|6n91fz,15,4,1|6n91g0,14,9,0|6wm2rz,14,9,0|6wm2s0,15,4,1|75z43z,15,4,1|75z440,14,9,0|7fc5fz,14,9,0|7fc5g0,15,4,1|7p25fz,15,4,1|7p25g0,14,9,0|7yf6rz,14,9,0|7yf6s0,15,4,1|87s83z,15,4,1|87s840,14,9,0|8h59fz,14,9,0|8h59g0,15,4,1|8qiarz,15,4,1|8qias0,14,9,0|8zvc3z,14,9,0|8zvc40,15,4,1|998dfz,15,4,1|998dg0,14,9,0|9ilerz,14,9,0|9iles0,15,4,1|9ryg3z,15,4,1|9ryg40,14,9,0|a1bhfz,14,9,0|a1bhg0,15,4,1|aaoirz,15,4,1|aaois0,14,9,0|ak1k3z,14,9,0|ak1k40,15,4,1|atrk3z,15,4,1|atrk40,14,9,0|b34lfz,14,9,0|b34lg0,15,4,1|bchmrz,15,4,1|bchms0,14,9,0|bluo3z,14,9,0|bluo40,15,4,1|bv7pfz,15,4,1|bv7pg0,14,9,0|c4kqrz,14,9,0|c4kqs0,15,4,1|cdxs3z,15,4,1|cdxs40,14,9,0|cnatfz,14,9,0|cnatg0,15,4,1|cwnurz,15,4,1|cwnus0,14,9,0|d60w3z,14,9,0|d60w40,15,4,1|dfdxfz,15,4,1|dfdxg0,14,9,0|dp3xfz,14,9,0|dp3xg0,15,4,1|dzwtfz,15,4,1|dzwtg0,14,9,0|e7u03z,14,9,0|e7u040,15,4,1|eimw3z,15,4,1|eimw40,14,9,0|eqk2rz,14,9,0|eqk2s0,15,4,1|f1cyrz,15,4,1|f1cys0,14,9,0|f9a5fz,14,9,0|f9a5g0,15,4,1|fkg03z,15,4,1|fkg040,14,9,0|fs083z,14,9,0|fs0840,15,4,1|g362rz,15,4,1|g362s0,14,9,0|gaqarz,14,9,0|gaqas0,15,4,1|glw5fz,15,4,1|glw5g0,14,9,0|gttc3z,14,9,0|gttc40,15,4,1|h4m83z,15,4,1|h4m840,14,9,0|hcjerz,14,9,0|hcjes0,15,4,1|hncarz,15,4,1|hncas0,14,9,0|hv9hfz,14,9,0|hv9hg0,15,4,1|i6fc3z,15,4,1|i6fc40,14,9,0|idzk3z,14,9,0|idzk40,15,4,1|ip5erz,15,4,1|ip5es0,14,9,0|iwpmrz,14,9,0|iwpms0,15,4,1|j7vhfz,15,4,1|j7vhg0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|lioyrz,14,9,0|lioys0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n385fz,14,9,0|n385g0,15,4,1|ne11fz,15,4,1|ne11g0,14,9,0|nly83z,14,9,0|nly840,15,4,1|nwr43z,15,4,1|nwr440,14,9,0|o4oarz,14,9,0|o4oas0,15,4,1|ofu5fz,15,4,1|ofu5g0,14,9,0|onedfz,14,9,0|onedg0,15,4,1|oyk83z,15,4,1|oyk840,14,9,0|p64g3z,14,9,0|p64g40,15,4,1|phaarz,15,4,1|phaas0,14,9,0|pp7hfz,14,9,0|pp7hg0,15,4,1|q00dfz,15,4,1|q00dg0,14,9,0|q7xk3z,14,9,0|q7xk40,15,4,1|qiqg3z,15,4,1|qiqg40,14,9,0|qqnmrz,14,9,0|qqnms0,15,4,1|r1thfz,15,4,1|r1thg0,14,9,0|r9dpfz,14,9,0|r9dpg0,15,4,1|rkjk3z,15,4,1|rkjk40,14,9,0|rs3s3z,14,9,0|rs3s40,15,4,1|s39mrz,15,4,1|s39ms0,14,9,0|sb6tfz,14,9,0|sb6tg0,15,4,1|slzpfz,15,4,1|slzpg0,14,9,0|stww3z,14,9,0|stww40,15,4,1|t4ps3z,15,4,1|t4ps40,14,9,0|tcmyrz,14,9,0|tcmys0,15,4,1|tnfurz,15,4,1|tnfus0,14,9,0|tvd1fz,14,9,0|tvd1g0,15,4,1|u6iw3z,15,4,1|u6iw40,14,9,0|ue343z,14,9,0|ue3440,15,4,1|up8yrz,15,4,1|up8ys0,14,9,0|uwt6rz,14,9,0|uwt6s0,15,4,1|v7z1fz,15,4,1|v7z1g0,14,9,0|vfw83z,14,9,0|vfw840,15,4,1|vqp43z,15,4,1|vqp440,14,9,0|vymarz,14,9,0|vymas0,15,4,1|w9f6rz,15,4,1|w9f6s0,14,9,0|whcdfz,14,9,0|whcdg0,15,4,1|wsi83z,15,4,1|wsi840,14,9,0|x02g3z,14,9,0|x02g40,15,4,1|xb8arz,15,4,1|xb8as0,14,9,0|xisirz,14,9,0|xisis0,15,4,1|xtydfz,15,4,1|xtydg0,14,9,0|y1ilfz,14,9,0|y1ilg0,15,4,1|ycog3z,15,4,1|ycog40,14,9,0|yklmrz,14,9,0|yklms0,15,4,1|yveirz,15,4,1|yveis0,14,9,0|z3bpfz,14,9,0|z3bpg0,15,4,1|ze4lfz,15,4,1|ze4lg0,14,9,0|zm1s3z,14,9,0|zm1s40,15,4,1|zx7mrz,15,4,1|zx7ms0,14,9,0|104rurz,14,9,0|104rus0,15,4,1|10fxpfz,15,4,1|10fxpg0,14,9,0|10nhxfz,14,9,0|10nhxg0,15,4,1|10yns3z,15,4,1|10yns40,14,9,0|116kyrz,14,9,0|116kys0,15,4,1|11hdurz,15,4,1|11hdus0,14,9,0|11pb1fz,14,9,0|11pb1g0,15,4,1|1203xfz,15,4,1|1203xg0,14,9,0|128143z,14,9,0|1281440,15,4,1|12iu03z,15,4,1|12iu040,14,9,0|12qr6rz,14,9,0|12qr6s0,15,4,1|131x1fz,15,4,1|131x1g0,14,9,0|139h9fz,14,9,0|139h9g0,15,4,1|13kn43z,15,4,1|13kn440,14,9,0|13s7c3z,14,9,0|13s7c40,15,4,1|143d6rz,15,4,1|143d6s0,14,9,0|14badfz,14,9,0|14badg0,15,4,1|14m39fz,15,4,1|14m39g0,14,9,0|14u0g3z,14,9,0|14u0g40,15,4,1|154tc3z,15,4,1|154tc40,14,9,0|15cqirz,14,9,0|15cqis0,15,4,1|15nwdfz,15,4,1|15nwdg0,14,9,0|15vglfz,14,9,0|15vglg0,15,4,1|166mg3z,15,4,1|166mg40,14,9,0|16e6o3z,14,9,0|16e6o40,15,4,1|16pcirz,15,4,1|16pcis0,14,9,0|16x9pfz,14,9,0|16x9pg0,15,4,1|1782lfz,15,4,1|1782lg0,14,9,0|17fzs3z,14,9,0|17fzs40,15,4,1|17qso3z,15,4,1|17qso40,14,9,0|17ypurz,14,9,0|17ypus0,15,4,1|189iqrz,15,4,1|189iqs0,14,9,0|18hfxfz,14,9,0|18hfxg0,15,4,1|18sls3z,15,4,1|18sls40,14,9,0|190603z,14,9,0|1906040,15,4,1|19bburz,15,4,1|19bbus0,14,9,0|19iw2rz,14,9,0|19iw2s0,15,4,1|19u1xfz,15,4,1|19u1xg0,14,9,0|1a1z43z,14,9,0|1a1z440,15,4,1|1acs03z,15,4,1|1acs040,14,9,0|1akp6rz,14,9,0|1akp6s0,15,4,1|1avi2rz,15,4,1|1avi2s0,14,9,0|1b3f9fz,14,9,0|1b3f9g0,15,4,1|1bel43z,15,4,1|1bel440,14,9,0|1bm5c3z,14,9,0|1bm5c40,15,4,1|1bxb6rz,15,4,1|1bxb6s0,14,9,0|1c4verz,14,9,0|1c4ves0,15,4,1|1cg19fz,15,4,1|1cg19g0,14,9,0|1cnlhfz,14,9,0|1cnlhg0,15,4,1|1cyrc3z,15,4,1|1cyrc40,14,9,0|1d6oirz,14,9,0|1d6ois0,15,4,1|1dhherz,15,4,1|1dhhes0,14,9,0|1dpelfz,14,9,0|1dpelg0,15,4,1|1e07hfz,15,4,1|1e07hg0,14,9,0|1e84o3z,14,9,0|1e84o40,15,4,1|1ejairz,15,4,1|1ejais0,14,9,0|1equqrz,14,9,0|1equqs0,15,4,1|1f20lfz,15,4,1|1f20lg0,14,9,0|1f9ktfz,14,9,0|1f9ktg0,15,4,1|1fkqo3z,15,4,1|1fkqo40,14,9,0|1fsnurz,14,9,0|1fsnus0,15,4,1|1g3gqrz,15,4,1|1g3gqs0,14,9,0|1gbdxfz,14,9,0|1gbdxg0,15,4,1|1gm6tfz,15,4,1|1gm6tg0,14,9,0|1gu403z,14,9,0|1gu4040,15,4,1|1h4ww3z,15,4,1|1h4ww40,14,9,0|1hcu2rz,14,9,0|1hcu2s0,15,4,1|1hnzxfz,15,4,1|1hnzxg0,14,9,0|1hvk5fz,14,9,0|1hvk5g0,15,4,1|1i6q03z,15,4,1|1i6q040,14,9,0|1iea83z,14,9,0|1iea840,15,4,1|1ipg2rz,15,4,1|1ipg2s0,14,9,0|1ixd9fz,14,9,0|1ixd9g0,15,4,1|1j865fz,15,4,1|1j865g0,14,9,0|1jg3c3z,14,9,0|1jg3c40,15,4,1|1jqw83z,15,4,1|1jqw840,14,9,0|1jyterz,14,9,0|1jytes0,15,4,1|1k9z9fz,15,4,1|1k9z9g0,14,9,0|1khjhfz,14,9,0|1khjhg0,15,4,1|1kspc3z,15,4,1|1kspc40,14,9,0|1l09k3z,14,9,0|1l09k40,15,4,1|1lbferz,15,4,1|1lbfes0,14,9,0|1ljclfz,14,9,0|1ljclg0,15,4,1|1lu5hfz,15,4,1|1lu5hg0,14,9,0|1m22o3z,14,9,0|1m22o40,15,4,1|1mcvk3z,15,4,1|1mcvk40,14,9,0|1mksqrz,14,9,0|1mksqs0,15,4,1|1mvlmrz,15,4,1|1mvlms0,14,9,0|1n3itfz,14,9,0|1n3itg0,15,4,1|1neoo3z,15,4,1|1neoo40,14,9,0|1nm8w3z,14,9,0|1nm8w40,15,4,1|1nxeqrz,15,4,1|1nxeqs0,14,9,0|1o4yyrz,14,9,0|1o4yys0,15,4,1|1og4tfz,15,4,1|1og4tg0,14,9,0|1oo203z,14,9,0|1oo2040,15,4,1|1oyuw3z,15,4,1|1oyuw40,14,9,0|1p6s2rz,14,9,0|1p6s2s0,15,4,1|1phkyrz,15,4,1|1phkys0,14,9,0|1ppi5fz,14,9,0|1ppi5g0,15,4,1|1q0o03z,15,4,1|1q0o040,14,9,0|1q8883z,14,9,0|1q88840,15,4,1|1qje2rz,15,4,1|1qje2s0,14,9,0|1qqyarz,14,9,0|1qqyas0,15,4,1|1r245fz,15,4,1|1r245g0,14,9,0|1r9odfz,14,9,0|1r9odg0,15,4,1|1rku83z,15,4,1|1rku840,14,9,0|1rsrerz,14,9,0|1rsres0,15,4,1|1s3karz,15,4,1|1s3kas0,14,9,0|1sbhhfz,14,9,0|1sbhhg0,15,4,1|1smadfz,15,4,1|1smadg0,14,9,0|1su7k3z,14,9,0|1su7k40,15,4,1|1t5derz,15,4,1|1t5des0,14,9,0|1tcxmrz,14,9,0|1tcxms0,15,4,1|1to3hfz,15,4,1|1to3hg0,14,9,0|1tvnpfz,14,9,0|1tvnpg0,15,4,1|1u6tk3z,15,4,1|1u6tk40,14,9,0|1ueqqrz,14,9,0|1ueqqs0,15,4,1|1upjmrz,15,4,1|1upjms0,14,9,0|1uxgtfz,14,9,0|1uxgtg0,15,4,1|1v89pfz,15,4,1|1v89pg0,14,9,0|1vg6w3z,14,9,0|1vg6w40,15,4,1|1vqzs3z,15,4,1|1vqzs40,14,9,0|NaN,14,9,0",
        "Europe/Belgrade|,0,317,0|-18vsmgp,0,317,0|-18vsmgo,8,8,0|-ezayw1,8,8,0|-ezayw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cv5zw1,8,8,0|-cv5zw0,9,9,1|-cofek1,9,9,1|-cofek0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Berlin|,0,195,0|-1421155,0,195,0|-1421154,8,8,0|-s0e081,8,8,0|-s0e080,9,9,1|-rsilg1,9,9,1|-rsilg0,8,8,0|-ridmk1,8,8,0|-ridmk0,9,9,1|-ragfw1,9,9,1|-ragfw0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,8,8,0|-fizzw1,8,8,0|-fizzw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cucg01,9,9,1|-cucg00,98,4,1|-co0o01,98,4,1|-co0o00,9,9,1|-cl6qk1,9,9,1|-cl6qk0,8,8,0|-cdmik1,8,8,0|-cdmik0,9,9,1|-c4kl81,9,9,1|-c4kl80,8,8,0|-bv9bs1,8,8,0|-bv9bs0,9,9,1|-btgl81,9,9,1|-btgl80,98,4,1|-bqxxc1,98,4,1|-bqxxc0,9,9,1|-blwd81,9,9,1|-blwd80,8,8,0|-bbtek1,8,8,0|-bbtek0,9,9,1|-b36ak1,9,9,1|-b36ak0,8,8,0|-atgak1,8,8,0|-atgak0,9,9,1|-akg7w1,9,9,1|-akg7w0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Bratislava|,0,318,0|-1qmkw09,0,318,0|-1qmkw08,5,318,0|-14u7uo9,5,318,0|-14u7uo8,8,8,0|-s0e081,8,8,0|-s0e080,9,9,1|-rsilg1,9,9,1|-rsilg0,8,8,0|-ridmk1,8,8,0|-ridmk0,9,9,1|-ragfw1,9,9,1|-ragfw0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,8,8,0|-fizzw1,8,8,0|-fizzw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cnnmk1,9,9,1|-cnnmk0,8,8,0|-cchrw1,8,8,0|-cchrw0,9,9,1|-c4mfw1,9,9,1|-c4mfw0,8,8,0|-c1qns1,8,8,0|-c1qns0,1,1,1|-bxf3s1,1,1,1|-bxf3s0,8,8,0|-bujh81,8,8,0|-bujh80,9,9,1|-blwd81,9,9,1|-blwd80,8,8,0|-bbtek1,8,8,0|-bbtek0,9,9,1|-b36ak1,9,9,1|-b36ak0,8,8,0|-ati581,8,8,0|-ati580,9,9,1|-akg7w1,9,9,1|-akg7w0,8,8,0|4tps3z,8,8,0|4tps40,9,9,1|532tfz,9,9,1|532tg0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Brussels|,0,313,0|-1ayy3h7,0,313,0|-1ayy3h6,53,313,0|-14j9c01,53,313,0|-14j9c00,6,1,0|-ss5uo1,6,1,0|-ss5uo0,8,8,0|-s0dxg1,8,8,0|-s0dxg0,9,9,1|-rsilg1,9,9,1|-rsilg0,8,8,0|-ridmk1,8,8,0|-ridmk0,9,9,1|-ragfw1,9,9,1|-ragfw0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,8,8,0|-qotw41,8,8,0|-qotw40,6,1,0|-qj59g1,6,1,0|-qj59g0,7,8,1|-q7zes1,7,8,1|-q7zes0,6,1,0|-q15441,6,1,0|-q15440,7,8,1|-po6g41,7,8,1|-po6g40,6,1,0|-pgvhg1,6,1,0|-pgvhg0,7,8,1|-p5atg1,7,8,1|-p5atg0,6,1,0|-oxj6s1,6,1,0|-oxj6s0,7,8,1|-ong841,7,8,1|-ong840,6,1,0|-odd9g1,6,1,0|-odd9g0,7,8,1|-o4q5g1,7,8,1|-o4q5g0,6,1,0|-nvq2s1,6,1,0|-nvq2s0,7,8,1|-nm02s1,7,8,1|-nm02s0,6,1,0|-ncn1g1,6,1,0|-ncn1g0,7,8,1|-n3a041,7,8,1|-n3a040,6,1,0|-mt71g1,6,1,0|-mt71g0,7,8,1|-mkjxg1,7,8,1|-mkjxg0,6,1,0|-matxg1,6,1,0|-matxg0,7,8,1|-m1tus1,7,8,1|-m1tus0,6,1,0|-lrqw41,6,1,0|-lrqw40,7,8,1|-liql41,7,8,1|-liql40,6,1,0|-l8nmg1,6,1,0|-l8nmg0,7,8,1|-l00ig1,7,8,1|-l00ig0,6,1,0|-kqaig1,6,1,0|-kqaig0,7,8,1|-khafs1,7,8,1|-khafs0,6,1,0|-k77h41,6,1,0|-k77h40,7,8,1|-jykd41,7,8,1|-jykd40,6,1,0|-jp7bs1,6,1,0|-jp7bs0,7,8,1|-jfuag1,7,8,1|-jfuag0,6,1,0|-j6u7s1,6,1,0|-j6u7s0,7,8,1|-iwr941,7,8,1|-iwr940,6,1,0|-ine7s1,6,1,0|-ine7s0,7,8,1|-ie16g1,7,8,1|-ie16g0,6,1,0|-i513s1,6,1,0|-i513s0,7,8,1|-hvb3s1,7,8,1|-hvb3s0,6,1,0|-hl8541,6,1,0|-hl8540,7,8,1|-hcl141,7,8,1|-hcl140,6,1,0|-h37zs1,6,1,0|-h37zs0,7,8,1|-gtuyg1,7,8,1|-gtuyg0,6,1,0|-gkuvs1,6,1,0|-gkuvs0,7,8,1|-gb4vs1,7,8,1|-gb4vs0,6,1,0|-g11x41,6,1,0|-g11x40,7,8,1|-fpw2g1,7,8,1|-fpw2g0,6,1,0|-fkul41,6,1,0|-fkul40,7,8,1|-fgh6g1,7,8,1|-fgh6g0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d75h81,9,9,1|-d75h80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cofek1,9,9,1|-cofek0,8,8,0|-cbtp81,8,8,0|-cbtp80,9,9,1|-c4kl81,9,9,1|-c4kl80,8,8,0|3s9mrz,8,8,0|3s9ms0,9,9,1|419pfz,9,9,1|419pg0,8,8,0|4azpfz,8,8,0|4azpg0,9,9,1|4kcqrz,9,9,1|4kcqs0,8,8,0|4tps3z,8,8,0|4tps40,9,9,1|532tfz,9,9,1|532tg0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Bucharest|,0,319,0|-14u7wu1,0,319,0|-14u7wu0,53,319,0|-k29zi1,53,319,0|-k29zi0,14,9,0|-jmqqw1,14,9,0|-jmqqw0,15,4,1|-jfulk1,15,4,1|-jfulk0,14,9,0|-j6hk81,14,9,0|-j6hk80,15,4,1|-ix4iw1,15,4,1|-ix4iw0,14,9,0|-ineiw1,14,9,0|-ineiw0,15,4,1|-ie1hk1,15,4,1|-ie1hk0,14,9,0|-i4og81,14,9,0|-i4og80,15,4,1|-hvbew1,15,4,1|-hvbew0,14,9,0|-hlydk1,14,9,0|-hlydk0,15,4,1|-hclc81,15,4,1|-hclc80,14,9,0|-h38aw1,14,9,0|-h38aw0,15,4,1|-gtv9k1,15,4,1|-gtv9k0,14,9,0|-gki881,14,9,0|-gki880,15,4,1|-gb56w1,15,4,1|-gb56w0,14,9,0|-g1s5k1,14,9,0|-g1s5k0,15,4,1|-fsf481,15,4,1|-fsf480,14,9,0|4wl93z,14,9,0|4wl940,15,4,1|532ibz,15,4,1|532ic0,14,9,0|5csibz,14,9,0|5csic0,15,4,1|5lsnrz,15,4,1|5lsns0,14,9,0|5v5unz,14,9,0|5v5uo0,15,4,1|64ivzz,15,4,1|64iw00,14,9,0|6dvxbz,14,9,0|6dvxc0,15,4,1|6n8ynz,15,4,1|6n8yo0,14,9,0|6wlzzz,14,9,0|6wm000,15,4,1|75z1bz,15,4,1|75z1c0,14,9,0|7fc2nz,14,9,0|7fc2o0,15,4,1|7p22nz,15,4,1|7p22o0,14,9,0|7yf3zz,14,9,0|7yf400,15,4,1|87s5bz,15,4,1|87s5c0,14,9,0|8h56nz,14,9,0|8h56o0,15,4,1|8qi7zz,15,4,1|8qi800,14,9,0|8zv9bz,14,9,0|8zv9c0,15,4,1|998anz,15,4,1|998ao0,14,9,0|9ilbzz,14,9,0|9ilc00,15,4,1|9rydbz,15,4,1|9rydc0,14,9,0|a1benz,14,9,0|a1beo0,15,4,1|aaofzz,15,4,1|aaog00,14,9,0|ak1hbz,14,9,0|ak1hc0,15,4,1|atrhbz,15,4,1|atrhc0,14,9,0|b34d3z,14,9,0|b34d40,15,4,1|bchefz,15,4,1|bcheg0,14,9,0|blufrz,14,9,0|blufs0,15,4,1|bv7h3z,15,4,1|bv7h40,14,9,0|c4kifz,14,9,0|c4kig0,15,4,1|cdxjrz,15,4,1|cdxjs0,14,9,0|cnal3z,14,9,0|cnal40,15,4,1|cwnjnz,15,4,1|cwnjo0,14,9,0|d60nrz,14,9,0|d60ns0,15,4,1|dfdmbz,15,4,1|dfdmc0,14,9,0|dp3p3z,14,9,0|dp3p40,15,4,1|dzwibz,15,4,1|dzwic0,14,9,0|e7u03z,14,9,0|e7u040,15,4,1|eimw3z,15,4,1|eimw40,14,9,0|eqk2rz,14,9,0|eqk2s0,15,4,1|f1cyrz,15,4,1|f1cys0,14,9,0|f9a5fz,14,9,0|f9a5g0,15,4,1|fkg03z,15,4,1|fkg040,14,9,0|fs083z,14,9,0|fs0840,15,4,1|g362rz,15,4,1|g362s0,14,9,0|gaqarz,14,9,0|gaqas0,15,4,1|glw5fz,15,4,1|glw5g0,14,9,0|gttc3z,14,9,0|gttc40,15,4,1|h4m83z,15,4,1|h4m840,14,9,0|hcjerz,14,9,0|hcjes0,15,4,1|hncarz,15,4,1|hncas0,14,9,0|hv9hfz,14,9,0|hv9hg0,15,4,1|i6fc3z,15,4,1|i6fc40,14,9,0|idzk3z,14,9,0|idzk40,15,4,1|ip5erz,15,4,1|ip5es0,14,9,0|iwpmrz,14,9,0|iwpms0,15,4,1|j7vhfz,15,4,1|j7vhg0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|lioyrz,14,9,0|lioys0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n385fz,14,9,0|n385g0,15,4,1|ne11fz,15,4,1|ne11g0,14,9,0|nly83z,14,9,0|nly840,15,4,1|nwr43z,15,4,1|nwr440,14,9,0|o4oarz,14,9,0|o4oas0,15,4,1|ofu5fz,15,4,1|ofu5g0,14,9,0|onedfz,14,9,0|onedg0,15,4,1|oyk83z,15,4,1|oyk840,14,9,0|p64g3z,14,9,0|p64g40,15,4,1|phaarz,15,4,1|phaas0,14,9,0|pp7hfz,14,9,0|pp7hg0,15,4,1|q00dfz,15,4,1|q00dg0,14,9,0|q7xk3z,14,9,0|q7xk40,15,4,1|qiqg3z,15,4,1|qiqg40,14,9,0|qqnmrz,14,9,0|qqnms0,15,4,1|r1thfz,15,4,1|r1thg0,14,9,0|r9dpfz,14,9,0|r9dpg0,15,4,1|rkjk3z,15,4,1|rkjk40,14,9,0|rs3s3z,14,9,0|rs3s40,15,4,1|s39mrz,15,4,1|s39ms0,14,9,0|sb6tfz,14,9,0|sb6tg0,15,4,1|slzpfz,15,4,1|slzpg0,14,9,0|stww3z,14,9,0|stww40,15,4,1|t4ps3z,15,4,1|t4ps40,14,9,0|tcmyrz,14,9,0|tcmys0,15,4,1|tnfurz,15,4,1|tnfus0,14,9,0|tvd1fz,14,9,0|tvd1g0,15,4,1|u6iw3z,15,4,1|u6iw40,14,9,0|ue343z,14,9,0|ue3440,15,4,1|up8yrz,15,4,1|up8ys0,14,9,0|uwt6rz,14,9,0|uwt6s0,15,4,1|v7z1fz,15,4,1|v7z1g0,14,9,0|vfw83z,14,9,0|vfw840,15,4,1|vqp43z,15,4,1|vqp440,14,9,0|vymarz,14,9,0|vymas0,15,4,1|w9f6rz,15,4,1|w9f6s0,14,9,0|whcdfz,14,9,0|whcdg0,15,4,1|wsi83z,15,4,1|wsi840,14,9,0|x02g3z,14,9,0|x02g40,15,4,1|xb8arz,15,4,1|xb8as0,14,9,0|xisirz,14,9,0|xisis0,15,4,1|xtydfz,15,4,1|xtydg0,14,9,0|y1ilfz,14,9,0|y1ilg0,15,4,1|ycog3z,15,4,1|ycog40,14,9,0|yklmrz,14,9,0|yklms0,15,4,1|yveirz,15,4,1|yveis0,14,9,0|z3bpfz,14,9,0|z3bpg0,15,4,1|ze4lfz,15,4,1|ze4lg0,14,9,0|zm1s3z,14,9,0|zm1s40,15,4,1|zx7mrz,15,4,1|zx7ms0,14,9,0|104rurz,14,9,0|104rus0,15,4,1|10fxpfz,15,4,1|10fxpg0,14,9,0|10nhxfz,14,9,0|10nhxg0,15,4,1|10yns3z,15,4,1|10yns40,14,9,0|116kyrz,14,9,0|116kys0,15,4,1|11hdurz,15,4,1|11hdus0,14,9,0|11pb1fz,14,9,0|11pb1g0,15,4,1|1203xfz,15,4,1|1203xg0,14,9,0|128143z,14,9,0|1281440,15,4,1|12iu03z,15,4,1|12iu040,14,9,0|12qr6rz,14,9,0|12qr6s0,15,4,1|131x1fz,15,4,1|131x1g0,14,9,0|139h9fz,14,9,0|139h9g0,15,4,1|13kn43z,15,4,1|13kn440,14,9,0|13s7c3z,14,9,0|13s7c40,15,4,1|143d6rz,15,4,1|143d6s0,14,9,0|14badfz,14,9,0|14badg0,15,4,1|14m39fz,15,4,1|14m39g0,14,9,0|14u0g3z,14,9,0|14u0g40,15,4,1|154tc3z,15,4,1|154tc40,14,9,0|15cqirz,14,9,0|15cqis0,15,4,1|15nwdfz,15,4,1|15nwdg0,14,9,0|15vglfz,14,9,0|15vglg0,15,4,1|166mg3z,15,4,1|166mg40,14,9,0|16e6o3z,14,9,0|16e6o40,15,4,1|16pcirz,15,4,1|16pcis0,14,9,0|16x9pfz,14,9,0|16x9pg0,15,4,1|1782lfz,15,4,1|1782lg0,14,9,0|17fzs3z,14,9,0|17fzs40,15,4,1|17qso3z,15,4,1|17qso40,14,9,0|17ypurz,14,9,0|17ypus0,15,4,1|189iqrz,15,4,1|189iqs0,14,9,0|18hfxfz,14,9,0|18hfxg0,15,4,1|18sls3z,15,4,1|18sls40,14,9,0|190603z,14,9,0|1906040,15,4,1|19bburz,15,4,1|19bbus0,14,9,0|19iw2rz,14,9,0|19iw2s0,15,4,1|19u1xfz,15,4,1|19u1xg0,14,9,0|1a1z43z,14,9,0|1a1z440,15,4,1|1acs03z,15,4,1|1acs040,14,9,0|1akp6rz,14,9,0|1akp6s0,15,4,1|1avi2rz,15,4,1|1avi2s0,14,9,0|1b3f9fz,14,9,0|1b3f9g0,15,4,1|1bel43z,15,4,1|1bel440,14,9,0|1bm5c3z,14,9,0|1bm5c40,15,4,1|1bxb6rz,15,4,1|1bxb6s0,14,9,0|1c4verz,14,9,0|1c4ves0,15,4,1|1cg19fz,15,4,1|1cg19g0,14,9,0|1cnlhfz,14,9,0|1cnlhg0,15,4,1|1cyrc3z,15,4,1|1cyrc40,14,9,0|1d6oirz,14,9,0|1d6ois0,15,4,1|1dhherz,15,4,1|1dhhes0,14,9,0|1dpelfz,14,9,0|1dpelg0,15,4,1|1e07hfz,15,4,1|1e07hg0,14,9,0|1e84o3z,14,9,0|1e84o40,15,4,1|1ejairz,15,4,1|1ejais0,14,9,0|1equqrz,14,9,0|1equqs0,15,4,1|1f20lfz,15,4,1|1f20lg0,14,9,0|1f9ktfz,14,9,0|1f9ktg0,15,4,1|1fkqo3z,15,4,1|1fkqo40,14,9,0|1fsnurz,14,9,0|1fsnus0,15,4,1|1g3gqrz,15,4,1|1g3gqs0,14,9,0|1gbdxfz,14,9,0|1gbdxg0,15,4,1|1gm6tfz,15,4,1|1gm6tg0,14,9,0|1gu403z,14,9,0|1gu4040,15,4,1|1h4ww3z,15,4,1|1h4ww40,14,9,0|1hcu2rz,14,9,0|1hcu2s0,15,4,1|1hnzxfz,15,4,1|1hnzxg0,14,9,0|1hvk5fz,14,9,0|1hvk5g0,15,4,1|1i6q03z,15,4,1|1i6q040,14,9,0|1iea83z,14,9,0|1iea840,15,4,1|1ipg2rz,15,4,1|1ipg2s0,14,9,0|1ixd9fz,14,9,0|1ixd9g0,15,4,1|1j865fz,15,4,1|1j865g0,14,9,0|1jg3c3z,14,9,0|1jg3c40,15,4,1|1jqw83z,15,4,1|1jqw840,14,9,0|1jyterz,14,9,0|1jytes0,15,4,1|1k9z9fz,15,4,1|1k9z9g0,14,9,0|1khjhfz,14,9,0|1khjhg0,15,4,1|1kspc3z,15,4,1|1kspc40,14,9,0|1l09k3z,14,9,0|1l09k40,15,4,1|1lbferz,15,4,1|1lbfes0,14,9,0|1ljclfz,14,9,0|1ljclg0,15,4,1|1lu5hfz,15,4,1|1lu5hg0,14,9,0|1m22o3z,14,9,0|1m22o40,15,4,1|1mcvk3z,15,4,1|1mcvk40,14,9,0|1mksqrz,14,9,0|1mksqs0,15,4,1|1mvlmrz,15,4,1|1mvlms0,14,9,0|1n3itfz,14,9,0|1n3itg0,15,4,1|1neoo3z,15,4,1|1neoo40,14,9,0|1nm8w3z,14,9,0|1nm8w40,15,4,1|1nxeqrz,15,4,1|1nxeqs0,14,9,0|1o4yyrz,14,9,0|1o4yys0,15,4,1|1og4tfz,15,4,1|1og4tg0,14,9,0|1oo203z,14,9,0|1oo2040,15,4,1|1oyuw3z,15,4,1|1oyuw40,14,9,0|1p6s2rz,14,9,0|1p6s2s0,15,4,1|1phkyrz,15,4,1|1phkys0,14,9,0|1ppi5fz,14,9,0|1ppi5g0,15,4,1|1q0o03z,15,4,1|1q0o040,14,9,0|1q8883z,14,9,0|1q88840,15,4,1|1qje2rz,15,4,1|1qje2s0,14,9,0|1qqyarz,14,9,0|1qqyas0,15,4,1|1r245fz,15,4,1|1r245g0,14,9,0|1r9odfz,14,9,0|1r9odg0,15,4,1|1rku83z,15,4,1|1rku840,14,9,0|1rsrerz,14,9,0|1rsres0,15,4,1|1s3karz,15,4,1|1s3kas0,14,9,0|1sbhhfz,14,9,0|1sbhhg0,15,4,1|1smadfz,15,4,1|1smadg0,14,9,0|1su7k3z,14,9,0|1su7k40,15,4,1|1t5derz,15,4,1|1t5des0,14,9,0|1tcxmrz,14,9,0|1tcxms0,15,4,1|1to3hfz,15,4,1|1to3hg0,14,9,0|1tvnpfz,14,9,0|1tvnpg0,15,4,1|1u6tk3z,15,4,1|1u6tk40,14,9,0|1ueqqrz,14,9,0|1ueqqs0,15,4,1|1upjmrz,15,4,1|1upjms0,14,9,0|1uxgtfz,14,9,0|1uxgtg0,15,4,1|1v89pfz,15,4,1|1v89pg0,14,9,0|1vg6w3z,14,9,0|1vg6w40,15,4,1|1vqzs3z,15,4,1|1vqzs40,14,9,0|NaN,14,9,0",
        "Europe/Budapest|,0,320,0|-15bee79,0,320,0|-15bee78,8,8,0|-s0e081,8,8,0|-s0e080,9,9,1|-rsilg1,9,9,1|-rsilg0,8,8,0|-ridmk1,8,8,0|-ridmk0,9,9,1|-ragfw1,9,9,1|-ragfw0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,8,8,0|-qgvmk1,8,8,0|-qgvmk0,9,9,1|-q90ak1,9,9,1|-q90ak0,8,8,0|-pykd81,8,8,0|-pykd80,9,9,1|-ppx981,9,9,1|-ppx980,8,8,0|-ezvc81,8,8,0|-ezvc80,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cvhc81,8,8,0|-cvhc80,9,9,1|-cm2dg1,9,9,1|-cm2dg0,8,8,0|-cecfw1,8,8,0|-cecfw0,9,9,1|-c4ko01,9,9,1|-c4ko00,8,8,0|-bv9ek1,8,8,0|-bv9ek0,9,9,1|-blwd81,9,9,1|-blwd80,8,8,0|-bcjbw1,8,8,0|-bcjbw0,9,9,1|-b36ak1,9,9,1|-b36ak0,8,8,0|-atgak1,8,8,0|-atgak0,9,9,1|-akg7w1,9,9,1|-akg7w0,8,8,0|-85bc41,8,8,0|-85bc40,9,9,1|-7yh481,9,9,1|-7yh480,8,8,0|-7ml3w1,8,8,0|-7ml3w0,9,9,1|-7fqt81,9,9,1|-7fqt80,8,8,0|-7353w1,8,8,0|-7353w0,9,9,1|-6x0qk1,9,9,1|-6x0qk0,8,8,0|-6kf181,8,8,0|-6kf180,9,9,1|-6eanw1,9,9,1|-6eanw0,8,8,0|5csnvz,8,8,0|5csnw0,9,9,1|5lsqjz,9,9,1|5lsqk0,8,8,0|5v5rvz,8,8,0|5v5rw0,9,9,1|64it7z,9,9,1|64it80,8,8,0|6dvujz,8,8,0|6dvuk0,9,9,1|6n8vvz,9,9,1|6n8vw0,8,8,0|6wlx7z,8,8,0|6wlx80,9,9,1|75yyjz,9,9,1|75yyk0,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Busingen|,0,321,0|-1os49kx,0,321,0|-1os49kw,53,322,0|-13g441n,53,322,0|-13g441m,8,8,0|-eyh6o1,8,8,0|-eyh6o0,9,9,1|-eqk001,9,9,1|-eqk000,8,8,0|-efr401,8,8,0|-efr400,9,9,1|-e7txc1,9,9,1|-e7txc0,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Chisinau|,0,323,0|-1ayy809,0,323,0|-1ayy808,40,324,0|-r2p1bp,40,324,0|-r2p1bo,53,319,0|-k29zi1,53,319,0|-k29zi0,14,9,0|-jmqqw1,14,9,0|-jmqqw0,15,4,1|-jfulk1,15,4,1|-jfulk0,14,9,0|-j6hk81,14,9,0|-j6hk80,15,4,1|-ix4iw1,15,4,1|-ix4iw0,14,9,0|-ineiw1,14,9,0|-ineiw0,15,4,1|-ie1hk1,15,4,1|-ie1hk0,14,9,0|-i4og81,14,9,0|-i4og80,15,4,1|-hvbew1,15,4,1|-hvbew0,14,9,0|-hlydk1,14,9,0|-hlydk0,15,4,1|-hclc81,15,4,1|-hclc80,14,9,0|-h38aw1,14,9,0|-h38aw0,15,4,1|-gtv9k1,15,4,1|-gtv9k0,14,9,0|-gki881,14,9,0|-gki880,15,4,1|-gb56w1,15,4,1|-gb56w0,14,9,0|-g1s5k1,14,9,0|-g1s5k0,15,4,1|-fsf481,15,4,1|-fsf480,14,9,0|-fc0dk1,14,9,0|-fc0dk0,15,4,1|-euq8c1,15,4,1|-euq8c0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d8e5k1,9,9,1|-d8e5k0,143,4,0|5vb6bz,143,4,0|5vb6c0,144,201,1|64pzjz,144,201,1|64pzk0,143,4,0|6e33nz,143,4,0|6e33o0,144,201,1|6nhwvz,144,201,1|6nhww0,143,4,0|6wv0zz,143,4,0|6wv100,144,201,1|769u7z,144,201,1|769u80,143,4,0|7foszz,143,4,0|7fot00,144,201,1|7p1zvz,144,201,1|7p1zw0,143,4,0|7yf17z,143,4,0|7yf180,144,201,1|87s2jz,144,201,1|87s2k0,143,4,0|8h53vz,143,4,0|8h53w0,144,201,1|8qi57z,144,201,1|8qi580,143,4,0|8zv6jz,143,4,0|8zv6k0,144,201,1|9987vz,144,201,1|9987w0,143,4,0|9il97z,143,4,0|9il980,144,201,1|9ryajz,144,201,1|9ryak0,143,4,0|a1bbvz,143,4,0|a1bbw0,144,201,1|aaod7z,144,201,1|aaod80,143,4,0|ak1ejz,143,4,0|ak1ek0,144,201,1|am73rz,144,201,1|am73s0,15,4,1|atrhbz,15,4,1|atrhc0,14,9,0|b34inz,14,9,0|b34io0,15,4,1|bchjzz,15,4,1|bchk00,14,9,0|blufrz,14,9,0|blufs0,15,4,1|bv7ebz,15,4,1|bv7ec0,14,9,0|c4kifz,14,9,0|c4kig0,15,4,1|cdxgzz,15,4,1|cdxh00,14,9,0|cnal3z,14,9,0|cnal40,15,4,1|cwnjnz,15,4,1|cwnjo0,14,9,0|d60nrz,14,9,0|d60ns0,15,4,1|dfdmbz,15,4,1|dfdmc0,14,9,0|dp3p3z,14,9,0|dp3p40,15,4,1|dzwibz,15,4,1|dzwic0,14,9,0|e7txbz,14,9,0|e7txc0,15,4,1|eimtbz,15,4,1|eimtc0,14,9,0|eqjzzz,14,9,0|eqk000,15,4,1|f1cvzz,15,4,1|f1cw00,14,9,0|f9a2nz,14,9,0|f9a2o0,15,4,1|fkfxbz,15,4,1|fkfxc0,14,9,0|fs05bz,14,9,0|fs05c0,15,4,1|g35zzz,15,4,1|g36000,14,9,0|gaq7zz,14,9,0|gaq800,15,4,1|glw2nz,15,4,1|glw2o0,14,9,0|gtt9bz,14,9,0|gtt9c0,15,4,1|h4m5bz,15,4,1|h4m5c0,14,9,0|hcjbzz,14,9,0|hcjc00,15,4,1|hnc7zz,15,4,1|hnc800,14,9,0|hv9enz,14,9,0|hv9eo0,15,4,1|i6f9bz,15,4,1|i6f9c0,14,9,0|idzhbz,14,9,0|idzhc0,15,4,1|ip5bzz,15,4,1|ip5c00,14,9,0|iwpjzz,14,9,0|iwpk00,15,4,1|j7venz,15,4,1|j7veo0,14,9,0|jffmnz,14,9,0|jffmo0,15,4,1|jqlhbz,15,4,1|jqlhc0,14,9,0|jyinzz,14,9,0|jyio00,15,4,1|k9bjzz,15,4,1|k9bk00,14,9,0|kh8qnz,14,9,0|kh8qo0,15,4,1|ks1mnz,15,4,1|ks1mo0,14,9,0|kzytbz,14,9,0|kzytc0,15,4,1|lb4nzz,15,4,1|lb4o00,14,9,0|liovzz,14,9,0|liow00,15,4,1|ltuqnz,15,4,1|ltuqo0,14,9,0|m1eynz,14,9,0|m1eyo0,15,4,1|mcktbz,15,4,1|mcktc0,14,9,0|mkhzzz,14,9,0|mki000,15,4,1|mvavzz,15,4,1|mvaw00,14,9,0|n382nz,14,9,0|n382o0,15,4,1|ne0ynz,15,4,1|ne0yo0,14,9,0|nly5bz,14,9,0|nly5c0,15,4,1|nwr1bz,15,4,1|nwr1c0,14,9,0|o4o7zz,14,9,0|o4o800,15,4,1|ofu2nz,15,4,1|ofu2o0,14,9,0|oneanz,14,9,0|oneao0,15,4,1|oyk5bz,15,4,1|oyk5c0,14,9,0|p64dbz,14,9,0|p64dc0,15,4,1|pha7zz,15,4,1|pha800,14,9,0|pp7enz,14,9,0|pp7eo0,15,4,1|q00anz,15,4,1|q00ao0,14,9,0|q7xhbz,14,9,0|q7xhc0,15,4,1|qiqdbz,15,4,1|qiqdc0,14,9,0|qqnjzz,14,9,0|qqnk00,15,4,1|r1tenz,15,4,1|r1teo0,14,9,0|r9dmnz,14,9,0|r9dmo0,15,4,1|rkjhbz,15,4,1|rkjhc0,14,9,0|rs3pbz,14,9,0|rs3pc0,15,4,1|s39jzz,15,4,1|s39k00,14,9,0|sb6qnz,14,9,0|sb6qo0,15,4,1|slzmnz,15,4,1|slzmo0,14,9,0|stwtbz,14,9,0|stwtc0,15,4,1|t4ppbz,15,4,1|t4ppc0,14,9,0|tcmvzz,14,9,0|tcmw00,15,4,1|tnfrzz,15,4,1|tnfs00,14,9,0|tvcynz,14,9,0|tvcyo0,15,4,1|u6itbz,15,4,1|u6itc0,14,9,0|ue31bz,14,9,0|ue31c0,15,4,1|up8vzz,15,4,1|up8w00,14,9,0|uwt3zz,14,9,0|uwt400,15,4,1|v7yynz,15,4,1|v7yyo0,14,9,0|vfw5bz,14,9,0|vfw5c0,15,4,1|vqp1bz,15,4,1|vqp1c0,14,9,0|vym7zz,14,9,0|vym800,15,4,1|w9f3zz,15,4,1|w9f400,14,9,0|whcanz,14,9,0|whcao0,15,4,1|wsi5bz,15,4,1|wsi5c0,14,9,0|x02dbz,14,9,0|x02dc0,15,4,1|xb87zz,15,4,1|xb8800,14,9,0|xisfzz,14,9,0|xisg00,15,4,1|xtyanz,15,4,1|xtyao0,14,9,0|y1iinz,14,9,0|y1iio0,15,4,1|ycodbz,15,4,1|ycodc0,14,9,0|ykljzz,14,9,0|yklk00,15,4,1|yvefzz,15,4,1|yveg00,14,9,0|z3bmnz,14,9,0|z3bmo0,15,4,1|ze4inz,15,4,1|ze4io0,14,9,0|zm1pbz,14,9,0|zm1pc0,15,4,1|zx7jzz,15,4,1|zx7k00,14,9,0|104rrzz,14,9,0|104rs00,15,4,1|10fxmnz,15,4,1|10fxmo0,14,9,0|10nhunz,14,9,0|10nhuo0,15,4,1|10ynpbz,15,4,1|10ynpc0,14,9,0|116kvzz,14,9,0|116kw00,15,4,1|11hdrzz,15,4,1|11hds00,14,9,0|11paynz,14,9,0|11payo0,15,4,1|1203unz,15,4,1|1203uo0,14,9,0|12811bz,14,9,0|12811c0,15,4,1|12itxbz,15,4,1|12itxc0,14,9,0|12qr3zz,14,9,0|12qr400,15,4,1|131wynz,15,4,1|131wyo0,14,9,0|139h6nz,14,9,0|139h6o0,15,4,1|13kn1bz,15,4,1|13kn1c0,14,9,0|13s79bz,14,9,0|13s79c0,15,4,1|143d3zz,15,4,1|143d400,14,9,0|14baanz,14,9,0|14baao0,15,4,1|14m36nz,15,4,1|14m36o0,14,9,0|14u0dbz,14,9,0|14u0dc0,15,4,1|154t9bz,15,4,1|154t9c0,14,9,0|15cqfzz,14,9,0|15cqg00,15,4,1|15nwanz,15,4,1|15nwao0,14,9,0|15vginz,14,9,0|15vgio0,15,4,1|166mdbz,15,4,1|166mdc0,14,9,0|16e6lbz,14,9,0|16e6lc0,15,4,1|16pcfzz,15,4,1|16pcg00,14,9,0|16x9mnz,14,9,0|16x9mo0,15,4,1|1782inz,15,4,1|1782io0,14,9,0|17fzpbz,14,9,0|17fzpc0,15,4,1|17qslbz,15,4,1|17qslc0,14,9,0|17yprzz,14,9,0|17yps00,15,4,1|189inzz,15,4,1|189io00,14,9,0|18hfunz,14,9,0|18hfuo0,15,4,1|18slpbz,15,4,1|18slpc0,14,9,0|1905xbz,14,9,0|1905xc0,15,4,1|19bbrzz,15,4,1|19bbs00,14,9,0|19ivzzz,14,9,0|19iw000,15,4,1|19u1unz,15,4,1|19u1uo0,14,9,0|1a1z1bz,14,9,0|1a1z1c0,15,4,1|1acrxbz,15,4,1|1acrxc0,14,9,0|1akp3zz,14,9,0|1akp400,15,4,1|1avhzzz,15,4,1|1avi000,14,9,0|1b3f6nz,14,9,0|1b3f6o0,15,4,1|1bel1bz,15,4,1|1bel1c0,14,9,0|1bm59bz,14,9,0|1bm59c0,15,4,1|1bxb3zz,15,4,1|1bxb400,14,9,0|1c4vbzz,14,9,0|1c4vc00,15,4,1|1cg16nz,15,4,1|1cg16o0,14,9,0|1cnlenz,14,9,0|1cnleo0,15,4,1|1cyr9bz,15,4,1|1cyr9c0,14,9,0|1d6ofzz,14,9,0|1d6og00,15,4,1|1dhhbzz,15,4,1|1dhhc00,14,9,0|1dpeinz,14,9,0|1dpeio0,15,4,1|1e07enz,15,4,1|1e07eo0,14,9,0|1e84lbz,14,9,0|1e84lc0,15,4,1|1ejafzz,15,4,1|1ejag00,14,9,0|1equnzz,14,9,0|1equo00,15,4,1|1f20inz,15,4,1|1f20io0,14,9,0|1f9kqnz,14,9,0|1f9kqo0,15,4,1|1fkqlbz,15,4,1|1fkqlc0,14,9,0|1fsnrzz,14,9,0|1fsns00,15,4,1|1g3gnzz,15,4,1|1g3go00,14,9,0|1gbdunz,14,9,0|1gbduo0,15,4,1|1gm6qnz,15,4,1|1gm6qo0,14,9,0|1gu3xbz,14,9,0|1gu3xc0,15,4,1|1h4wtbz,15,4,1|1h4wtc0,14,9,0|1hctzzz,14,9,0|1hcu000,15,4,1|1hnzunz,15,4,1|1hnzuo0,14,9,0|1hvk2nz,14,9,0|1hvk2o0,15,4,1|1i6pxbz,15,4,1|1i6pxc0,14,9,0|1iea5bz,14,9,0|1iea5c0,15,4,1|1ipfzzz,15,4,1|1ipg000,14,9,0|1ixd6nz,14,9,0|1ixd6o0,15,4,1|1j862nz,15,4,1|1j862o0,14,9,0|1jg39bz,14,9,0|1jg39c0,15,4,1|1jqw5bz,15,4,1|1jqw5c0,14,9,0|1jytbzz,14,9,0|1jytc00,15,4,1|1k9z6nz,15,4,1|1k9z6o0,14,9,0|1khjenz,14,9,0|1khjeo0,15,4,1|1ksp9bz,15,4,1|1ksp9c0,14,9,0|1l09hbz,14,9,0|1l09hc0,15,4,1|1lbfbzz,15,4,1|1lbfc00,14,9,0|1ljcinz,14,9,0|1ljcio0,15,4,1|1lu5enz,15,4,1|1lu5eo0,14,9,0|1m22lbz,14,9,0|1m22lc0,15,4,1|1mcvhbz,15,4,1|1mcvhc0,14,9,0|1mksnzz,14,9,0|1mkso00,15,4,1|1mvljzz,15,4,1|1mvlk00,14,9,0|1n3iqnz,14,9,0|1n3iqo0,15,4,1|1neolbz,15,4,1|1neolc0,14,9,0|1nm8tbz,14,9,0|1nm8tc0,15,4,1|1nxenzz,15,4,1|1nxeo00,14,9,0|1o4yvzz,14,9,0|1o4yw00,15,4,1|1og4qnz,15,4,1|1og4qo0,14,9,0|1oo1xbz,14,9,0|1oo1xc0,15,4,1|1oyutbz,15,4,1|1oyutc0,14,9,0|1p6rzzz,14,9,0|1p6s000,15,4,1|1phkvzz,15,4,1|1phkw00,14,9,0|1ppi2nz,14,9,0|1ppi2o0,15,4,1|1q0nxbz,15,4,1|1q0nxc0,14,9,0|1q885bz,14,9,0|1q885c0,15,4,1|1qjdzzz,15,4,1|1qje000,14,9,0|1qqy7zz,14,9,0|1qqy800,15,4,1|1r242nz,15,4,1|1r242o0,14,9,0|1r9oanz,14,9,0|1r9oao0,15,4,1|1rku5bz,15,4,1|1rku5c0,14,9,0|1rsrbzz,14,9,0|1rsrc00,15,4,1|1s3k7zz,15,4,1|1s3k800,14,9,0|1sbhenz,14,9,0|1sbheo0,15,4,1|1smaanz,15,4,1|1smaao0,14,9,0|1su7hbz,14,9,0|1su7hc0,15,4,1|1t5dbzz,15,4,1|1t5dc00,14,9,0|1tcxjzz,14,9,0|1tcxk00,15,4,1|1to3enz,15,4,1|1to3eo0,14,9,0|1tvnmnz,14,9,0|1tvnmo0,15,4,1|1u6thbz,15,4,1|1u6thc0,14,9,0|1ueqnzz,14,9,0|1ueqo00,15,4,1|1upjjzz,15,4,1|1upjk00,14,9,0|1uxgqnz,14,9,0|1uxgqo0,15,4,1|1v89mnz,15,4,1|1v89mo0,14,9,0|1vg6tbz,14,9,0|1vg6tc0,15,4,1|1vqzpbz,15,4,1|1vqzpc0,14,9,0|NaN,14,9,0",
        "Europe/Copenhagen|,0,195,0|-1421155,0,195,0|-1421154,8,8,0|-s0e081,8,8,0|-s0e080,9,9,1|-rsilg1,9,9,1|-rsilg0,8,8,0|-ridmk1,8,8,0|-ridmk0,9,9,1|-ragfw1,9,9,1|-ragfw0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,8,8,0|-fizzw1,8,8,0|-fizzw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cucg01,9,9,1|-cucg00,98,4,1|-co0o01,98,4,1|-co0o00,9,9,1|-cl6qk1,9,9,1|-cl6qk0,8,8,0|-cdmik1,8,8,0|-cdmik0,9,9,1|-c4kl81,9,9,1|-c4kl80,8,8,0|-bv9bs1,8,8,0|-bv9bs0,9,9,1|-btgl81,9,9,1|-btgl80,98,4,1|-bqxxc1,98,4,1|-bqxxc0,9,9,1|-blwd81,9,9,1|-blwd80,8,8,0|-bbtek1,8,8,0|-bbtek0,9,9,1|-b36ak1,9,9,1|-b36ak0,8,8,0|-atgak1,8,8,0|-atgak0,9,9,1|-akg7w1,9,9,1|-akg7w0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Dublin|,0,325,0|-1anxqts,0,325,0|-1anxqtr,145,325,0|-rzcmls,145,325,0|-rzcmlr,108,326,1|-rsibxs,108,326,1|-rsibxr,1,1,0|-risd41,1,1,0|-risd40,26,8,1|-ragd41,26,8,1|-ragd40,1,1,0|-r0s7s1,1,1,0|-r0s7s0,26,8,1|-qr0d41,26,8,1|-qr0d40,1,1,0|-qhp6g1,1,1,0|-qhp6g0,26,8,1|-q8aag1,26,8,1|-q8aag0,1,1,0|-pyz3s1,1,1,0|-pyz3s0,26,8,1|-po4d41,26,8,1|-po4d40,1,1,0|-pfw2g1,1,1,0|-pfw2g0,26,8,1|-p6h6g1,26,8,1|-p6h6g0,1,1,0|-oxiyg1,1,1,0|-oxiyg0,108,8,1|-onfzs1,108,8,1|-onfzs0,1,1,0|-odd141,1,1,0|-odd140,108,8,1|-o5st41,108,8,1|-o5st40,1,1,0|-nuzx41,1,1,0|-nuzx40,108,8,1|-nmprs1,108,8,1|-nmprs0,1,1,0|-nbwvs1,1,1,0|-nbwvs0,108,8,1|-n39rs1,108,8,1|-n39rs0,1,1,0|-mt6t41,1,1,0|-mt6t40,108,8,1|-mkjp41,108,8,1|-mkjp40,1,1,0|-matp41,1,1,0|-matp40,108,8,1|-m1tmg1,108,8,1|-m1tmg0,1,1,0|-lrdp41,1,1,0|-lrdp40,108,8,1|-liql41,108,8,1|-liql40,1,1,0|-l8nmg1,1,1,0|-l8nmg0,108,8,1|-l00ig1,108,8,1|-l00ig0,1,1,0|-kqaig1,1,1,0|-kqaig0,108,8,1|-khafs1,108,8,1|-khafs0,1,1,0|-k77h41,1,1,0|-k77h40,108,8,1|-jykd41,108,8,1|-jykd40,1,1,0|-joheg1,1,1,0|-joheg0,108,8,1|-jfuag1,108,8,1|-jfuag0,1,1,0|-j64ag1,1,1,0|-j64ag0,108,8,1|-iwr941,108,8,1|-iwr940,1,1,0|-imoag1,1,1,0|-imoag0,108,8,1|-ie16g1,108,8,1|-ie16g0,1,1,0|-i4b6g1,1,1,0|-i4b6g0,108,8,1|-hvb3s1,108,8,1|-hvb3s0,1,1,0|-hl8541,1,1,0|-hl8540,108,8,1|-hcl141,108,8,1|-hcl140,1,1,0|-h2i2g1,1,1,0|-h2i2g0,108,8,1|-gtuyg1,108,8,1|-gtuyg0,1,1,0|-gk4yg1,1,1,0|-gk4yg0,108,8,1|-gb4vs1,108,8,1|-gb4vs0,1,1,0|-g11x41,1,1,0|-g11x40,108,8,1|-fpw2g1,108,8,1|-fpw2g0,1,1,0|-fkul41,1,1,0|-fkul40,108,8,1|-c4md41,108,8,1|-c4md40,1,1,0|-bwc7s1,1,1,0|-bwc7s0,108,8,1|-bkgfs1,108,8,1|-bkgfs0,1,1,0|-bbtbs1,1,1,0|-bbtbs0,108,8,1|-b1qd41,108,8,1|-b1qd40,1,1,0|-att6g1,1,1,0|-att6g0,108,8,1|-aj0ag1,108,8,1|-aj0ag0,1,1,0|-aad6g1,1,1,0|-aad6g0,108,8,1|-a0n6g1,108,8,1|-a0n6g0,1,1,0|-9rn3s1,1,1,0|-9rn3s0,108,8,1|-9hx3s1,108,8,1|-9hx3s0,1,1,0|-98k2g1,1,1,0|-98k2g0,108,8,1|-8yu2g1,108,8,1|-8yu2g0,1,1,0|-8ptzs1,1,1,0|-8ptzs0,108,8,1|-8h6vs1,108,8,1|-8h6vs0,1,1,0|-87gvs1,1,1,0|-87gvs0,108,8,1|-7ygt41,108,8,1|-7ygt40,1,1,0|-7odug1,1,1,0|-7odug0,108,8,1|-7fqqg1,108,8,1|-7fqqg0,1,1,0|-75at41,1,1,0|-75at40,108,8,1|-6wnp41,108,8,1|-6wnp40,1,1,0|-6mxp41,1,1,0|-6mxp40,108,8,1|-6dxmg1,108,8,1|-6dxmg0,1,1,0|-63uns1,1,1,0|-63uns0,108,8,1|-5v7js1,108,8,1|-5v7js0,1,1,0|-5l4l41,1,1,0|-5l4l40,108,8,1|-5chh41,108,8,1|-5chh40,1,1,0|-52rh41,1,1,0|-52rh40,108,8,1|-4treg1,108,8,1|-4treg0,1,1,0|-4krbs1,1,1,0|-4krbs0,108,8,1|-49lh41,108,8,1|-49lh40,1,1,0|-421941,1,1,0|-421940,108,8,1|-3qveg1,108,8,1|-3qveg0,1,1,0|-3iy7s1,1,1,0|-3iy7s0,108,8,1|-385bs1,108,8,1|-385bs0,1,1,0|-30l3s1,1,1,0|-30l3s0,108,8,1|-2pf941,108,8,1|-2pf940,1,1,0|-2hv141,1,1,0|-2hv140,108,8,1|-26p6g1,108,8,1|-26p6g0,1,1,0|-1z4yg1,1,1,0|-1z4yg0,108,8,1|-1nz3s1,108,8,1|-1nz3s0,1,1,0|-1gevs1,1,1,0|-1gevs0,108,8,1|-14w2g1,108,8,1|-14w2g0,1,1,0|-z4ns1,1,1,0|-z4ns0,108,8,1|-m6841,108,8,1|-m6840,108,8,0|yd6vz,108,8,0|yd6w0,1,1,1|15kg7z,1,1,1|15kg80,108,8,0|1h39jz,108,8,0|1h39k0,1,1,1|1oaivz,1,1,1|1oaiw0,108,8,0|1ztc7z,108,8,0|1ztc80,1,1,1|270ljz,1,1,1|270lk0,108,8,0|2ijevz,108,8,0|2ijew0,1,1,1|2pqo7z,1,1,1|2pqo80,108,8,0|319hjz,108,8,0|319hk0,1,1,1|38tpjz,1,1,1|38tpk0,108,8,0|3jzk7z,108,8,0|3jzk80,1,1,1|3rjs7z,1,1,1|3rjs80,108,8,0|42pmvz,108,8,0|42pmw0,1,1,1|4a9uvz,1,1,1|4a9uw0,108,8,0|4lso7z,108,8,0|4lso80,1,1,1|4szxjz,1,1,1|4szxk0,108,8,0|54iqvz,108,8,0|54iqw0,1,1,1|5bq07z,1,1,1|5bq080,108,8,0|5n8tjz,108,8,0|5n8tk0,1,1,1|5v5xfz,1,1,1|5v5xg0,108,8,0|65ytfz,108,8,0|65ytg0,1,1,1|6dw03z,1,1,1|6dw040,108,8,0|6oow3z,108,8,0|6oow40,1,1,1|6wm2rz,1,1,1|6wm2s0,108,8,0|77eyrz,108,8,0|77eys0,1,1,1|7fc5fz,1,1,1|7fc5g0,108,8,0|7qi03z,108,8,0|7qi040,1,1,1|7yf6rz,1,1,1|7yf6s0,108,8,0|8982rz,108,8,0|8982s0,1,1,1|8h59fz,1,1,1|8h59g0,108,8,0|8ry5fz,108,8,0|8ry5g0,1,1,1|8zvc3z,1,1,1|8zvc40,108,8,0|9ao83z,108,8,0|9ao840,1,1,1|9ilerz,1,1,1|9iles0,108,8,0|9tearz,108,8,0|9teas0,1,1,1|a1bhfz,1,1,1|a1bhg0,108,8,0|achc3z,108,8,0|achc40,1,1,1|ak1k3z,1,1,1|ak1k40,108,8,0|av7erz,108,8,0|av7es0,1,1,1|b34lfz,1,1,1|b34lg0,108,8,0|bdxhfz,108,8,0|bdxhg0,1,1,1|bluo3z,1,1,1|bluo40,108,8,0|bwnk3z,108,8,0|bwnk40,1,1,1|c4kqrz,1,1,1|c4kqs0,108,8,0|cfdmrz,108,8,0|cfdms0,1,1,1|cnatfz,1,1,1|cnatg0,108,8,0|cy3pfz,108,8,0|cy3pg0,1,1,1|d60w3z,1,1,1|d60w40,108,8,0|dgts3z,108,8,0|dgts40,1,1,1|dp3xfz,1,1,1|dp3xg0,108,8,0|dzwtfz,108,8,0|dzwtg0,1,1,1|e7u03z,1,1,1|e7u040,108,8,0|eimw3z,108,8,0|eimw40,1,1,1|eqk2rz,1,1,1|eqk2s0,108,8,0|f1cyrz,108,8,0|f1cys0,1,1,1|f9a5fz,1,1,1|f9a5g0,108,8,0|fkg03z,108,8,0|fkg040,1,1,1|fs083z,1,1,1|fs0840,108,8,0|g362rz,108,8,0|g362s0,1,1,1|gaqarz,1,1,1|gaqas0,108,8,0|glw5fz,108,8,0|glw5g0,1,1,1|gttc3z,1,1,1|gttc40,108,8,0|h4m83z,108,8,0|h4m840,1,1,1|hcjerz,1,1,1|hcjes0,108,8,0|hncarz,108,8,0|hncas0,1,1,1|hv9hfz,1,1,1|hv9hg0,108,8,0|i6fc3z,108,8,0|i6fc40,1,1,1|idzk3z,1,1,1|idzk40,108,8,0|ip5erz,108,8,0|ip5es0,1,1,1|iwpmrz,1,1,1|iwpms0,108,8,0|j7vhfz,108,8,0|j7vhg0,1,1,1|jffpfz,1,1,1|jffpg0,108,8,0|jqlk3z,108,8,0|jqlk40,1,1,1|jyiqrz,1,1,1|jyiqs0,108,8,0|k9bmrz,108,8,0|k9bms0,1,1,1|kh8tfz,1,1,1|kh8tg0,108,8,0|ks1pfz,108,8,0|ks1pg0,1,1,1|kzyw3z,1,1,1|kzyw40,108,8,0|lb4qrz,108,8,0|lb4qs0,1,1,1|lioyrz,1,1,1|lioys0,108,8,0|ltutfz,108,8,0|ltutg0,1,1,1|m1f1fz,1,1,1|m1f1g0,108,8,0|mckw3z,108,8,0|mckw40,1,1,1|mki2rz,1,1,1|mki2s0,108,8,0|mvayrz,108,8,0|mvays0,1,1,1|n385fz,1,1,1|n385g0,108,8,0|ne11fz,108,8,0|ne11g0,1,1,1|nly83z,1,1,1|nly840,108,8,0|nwr43z,108,8,0|nwr440,1,1,1|o4oarz,1,1,1|o4oas0,108,8,0|ofu5fz,108,8,0|ofu5g0,1,1,1|onedfz,1,1,1|onedg0,108,8,0|oyk83z,108,8,0|oyk840,1,1,1|p64g3z,1,1,1|p64g40,108,8,0|phaarz,108,8,0|phaas0,1,1,1|pp7hfz,1,1,1|pp7hg0,108,8,0|q00dfz,108,8,0|q00dg0,1,1,1|q7xk3z,1,1,1|q7xk40,108,8,0|qiqg3z,108,8,0|qiqg40,1,1,1|qqnmrz,1,1,1|qqnms0,108,8,0|r1thfz,108,8,0|r1thg0,1,1,1|r9dpfz,1,1,1|r9dpg0,108,8,0|rkjk3z,108,8,0|rkjk40,1,1,1|rs3s3z,1,1,1|rs3s40,108,8,0|s39mrz,108,8,0|s39ms0,1,1,1|sb6tfz,1,1,1|sb6tg0,108,8,0|slzpfz,108,8,0|slzpg0,1,1,1|stww3z,1,1,1|stww40,108,8,0|t4ps3z,108,8,0|t4ps40,1,1,1|tcmyrz,1,1,1|tcmys0,108,8,0|tnfurz,108,8,0|tnfus0,1,1,1|tvd1fz,1,1,1|tvd1g0,108,8,0|u6iw3z,108,8,0|u6iw40,1,1,1|ue343z,1,1,1|ue3440,108,8,0|up8yrz,108,8,0|up8ys0,1,1,1|uwt6rz,1,1,1|uwt6s0,108,8,0|v7z1fz,108,8,0|v7z1g0,1,1,1|vfw83z,1,1,1|vfw840,108,8,0|vqp43z,108,8,0|vqp440,1,1,1|vymarz,1,1,1|vymas0,108,8,0|w9f6rz,108,8,0|w9f6s0,1,1,1|whcdfz,1,1,1|whcdg0,108,8,0|wsi83z,108,8,0|wsi840,1,1,1|x02g3z,1,1,1|x02g40,108,8,0|xb8arz,108,8,0|xb8as0,1,1,1|xisirz,1,1,1|xisis0,108,8,0|xtydfz,108,8,0|xtydg0,1,1,1|y1ilfz,1,1,1|y1ilg0,108,8,0|ycog3z,108,8,0|ycog40,1,1,1|yklmrz,1,1,1|yklms0,108,8,0|yveirz,108,8,0|yveis0,1,1,1|z3bpfz,1,1,1|z3bpg0,108,8,0|ze4lfz,108,8,0|ze4lg0,1,1,1|zm1s3z,1,1,1|zm1s40,108,8,0|zx7mrz,108,8,0|zx7ms0,1,1,1|104rurz,1,1,1|104rus0,108,8,0|10fxpfz,108,8,0|10fxpg0,1,1,1|10nhxfz,1,1,1|10nhxg0,108,8,0|10yns3z,108,8,0|10yns40,1,1,1|116kyrz,1,1,1|116kys0,108,8,0|11hdurz,108,8,0|11hdus0,1,1,1|11pb1fz,1,1,1|11pb1g0,108,8,0|1203xfz,108,8,0|1203xg0,1,1,1|128143z,1,1,1|1281440,108,8,0|12iu03z,108,8,0|12iu040,1,1,1|12qr6rz,1,1,1|12qr6s0,108,8,0|131x1fz,108,8,0|131x1g0,1,1,1|139h9fz,1,1,1|139h9g0,108,8,0|13kn43z,108,8,0|13kn440,1,1,1|13s7c3z,1,1,1|13s7c40,108,8,0|143d6rz,108,8,0|143d6s0,1,1,1|14badfz,1,1,1|14badg0,108,8,0|14m39fz,108,8,0|14m39g0,1,1,1|14u0g3z,1,1,1|14u0g40,108,8,0|154tc3z,108,8,0|154tc40,1,1,1|15cqirz,1,1,1|15cqis0,108,8,0|15nwdfz,108,8,0|15nwdg0,1,1,1|15vglfz,1,1,1|15vglg0,108,8,0|166mg3z,108,8,0|166mg40,1,1,1|16e6o3z,1,1,1|16e6o40,108,8,0|16pcirz,108,8,0|16pcis0,1,1,1|16x9pfz,1,1,1|16x9pg0,108,8,0|1782lfz,108,8,0|1782lg0,1,1,1|17fzs3z,1,1,1|17fzs40,108,8,0|17qso3z,108,8,0|17qso40,1,1,1|17ypurz,1,1,1|17ypus0,108,8,0|189iqrz,108,8,0|189iqs0,1,1,1|18hfxfz,1,1,1|18hfxg0,108,8,0|18sls3z,108,8,0|18sls40,1,1,1|190603z,1,1,1|1906040,108,8,0|19bburz,108,8,0|19bbus0,1,1,1|19iw2rz,1,1,1|19iw2s0,108,8,0|19u1xfz,108,8,0|19u1xg0,1,1,1|1a1z43z,1,1,1|1a1z440,108,8,0|1acs03z,108,8,0|1acs040,1,1,1|1akp6rz,1,1,1|1akp6s0,108,8,0|1avi2rz,108,8,0|1avi2s0,1,1,1|1b3f9fz,1,1,1|1b3f9g0,108,8,0|1bel43z,108,8,0|1bel440,1,1,1|1bm5c3z,1,1,1|1bm5c40,108,8,0|1bxb6rz,108,8,0|1bxb6s0,1,1,1|1c4verz,1,1,1|1c4ves0,108,8,0|1cg19fz,108,8,0|1cg19g0,1,1,1|1cnlhfz,1,1,1|1cnlhg0,108,8,0|1cyrc3z,108,8,0|1cyrc40,1,1,1|1d6oirz,1,1,1|1d6ois0,108,8,0|1dhherz,108,8,0|1dhhes0,1,1,1|1dpelfz,1,1,1|1dpelg0,108,8,0|1e07hfz,108,8,0|1e07hg0,1,1,1|1e84o3z,1,1,1|1e84o40,108,8,0|1ejairz,108,8,0|1ejais0,1,1,1|1equqrz,1,1,1|1equqs0,108,8,0|1f20lfz,108,8,0|1f20lg0,1,1,1|1f9ktfz,1,1,1|1f9ktg0,108,8,0|1fkqo3z,108,8,0|1fkqo40,1,1,1|1fsnurz,1,1,1|1fsnus0,108,8,0|1g3gqrz,108,8,0|1g3gqs0,1,1,1|1gbdxfz,1,1,1|1gbdxg0,108,8,0|1gm6tfz,108,8,0|1gm6tg0,1,1,1|1gu403z,1,1,1|1gu4040,108,8,0|1h4ww3z,108,8,0|1h4ww40,1,1,1|1hcu2rz,1,1,1|1hcu2s0,108,8,0|1hnzxfz,108,8,0|1hnzxg0,1,1,1|1hvk5fz,1,1,1|1hvk5g0,108,8,0|1i6q03z,108,8,0|1i6q040,1,1,1|1iea83z,1,1,1|1iea840,108,8,0|1ipg2rz,108,8,0|1ipg2s0,1,1,1|1ixd9fz,1,1,1|1ixd9g0,108,8,0|1j865fz,108,8,0|1j865g0,1,1,1|1jg3c3z,1,1,1|1jg3c40,108,8,0|1jqw83z,108,8,0|1jqw840,1,1,1|1jyterz,1,1,1|1jytes0,108,8,0|1k9z9fz,108,8,0|1k9z9g0,1,1,1|1khjhfz,1,1,1|1khjhg0,108,8,0|1kspc3z,108,8,0|1kspc40,1,1,1|1l09k3z,1,1,1|1l09k40,108,8,0|1lbferz,108,8,0|1lbfes0,1,1,1|1ljclfz,1,1,1|1ljclg0,108,8,0|1lu5hfz,108,8,0|1lu5hg0,1,1,1|1m22o3z,1,1,1|1m22o40,108,8,0|1mcvk3z,108,8,0|1mcvk40,1,1,1|1mksqrz,1,1,1|1mksqs0,108,8,0|1mvlmrz,108,8,0|1mvlms0,1,1,1|1n3itfz,1,1,1|1n3itg0,108,8,0|1neoo3z,108,8,0|1neoo40,1,1,1|1nm8w3z,1,1,1|1nm8w40,108,8,0|1nxeqrz,108,8,0|1nxeqs0,1,1,1|1o4yyrz,1,1,1|1o4yys0,108,8,0|1og4tfz,108,8,0|1og4tg0,1,1,1|1oo203z,1,1,1|1oo2040,108,8,0|1oyuw3z,108,8,0|1oyuw40,1,1,1|1p6s2rz,1,1,1|1p6s2s0,108,8,0|1phkyrz,108,8,0|1phkys0,1,1,1|1ppi5fz,1,1,1|1ppi5g0,108,8,0|1q0o03z,108,8,0|1q0o040,1,1,1|1q8883z,1,1,1|1q88840,108,8,0|1qje2rz,108,8,0|1qje2s0,1,1,1|1qqyarz,1,1,1|1qqyas0,108,8,0|1r245fz,108,8,0|1r245g0,1,1,1|1r9odfz,1,1,1|1r9odg0,108,8,0|1rku83z,108,8,0|1rku840,1,1,1|1rsrerz,1,1,1|1rsres0,108,8,0|1s3karz,108,8,0|1s3kas0,1,1,1|1sbhhfz,1,1,1|1sbhhg0,108,8,0|1smadfz,108,8,0|1smadg0,1,1,1|1su7k3z,1,1,1|1su7k40,108,8,0|1t5derz,108,8,0|1t5des0,1,1,1|1tcxmrz,1,1,1|1tcxms0,108,8,0|1to3hfz,108,8,0|1to3hg0,1,1,1|1tvnpfz,1,1,1|1tvnpg0,108,8,0|1u6tk3z,108,8,0|1u6tk40,1,1,1|1ueqqrz,1,1,1|1ueqqs0,108,8,0|1upjmrz,108,8,0|1upjms0,1,1,1|1uxgtfz,1,1,1|1uxgtg0,108,8,0|1v89pfz,108,8,0|1v89pg0,1,1,1|1vg6w3z,1,1,1|1vg6w40,108,8,0|1vqzs3z,108,8,0|1vqzs40,1,1,1|NaN,1,1,1",
        "Europe/Gibraltar|,0,327,0|-1anxr0d,0,327,0|-1anxr0c,1,1,0|-rzcns1,1,1,0|-rzcns0,26,8,1|-rsid41,26,8,1|-rsid40,1,1,0|-risd41,1,1,0|-risd40,26,8,1|-ragd41,26,8,1|-ragd40,1,1,0|-r0s7s1,1,1,0|-r0s7s0,26,8,1|-qr0d41,26,8,1|-qr0d40,1,1,0|-qhp6g1,1,1,0|-qhp6g0,26,8,1|-q8aag1,26,8,1|-q8aag0,1,1,0|-pyz3s1,1,1,0|-pyz3s0,26,8,1|-po4d41,26,8,1|-po4d40,1,1,0|-pfw2g1,1,1,0|-pfw2g0,26,8,1|-p6h6g1,26,8,1|-p6h6g0,1,1,0|-oxiyg1,1,1,0|-oxiyg0,26,8,1|-onfzs1,26,8,1|-onfzs0,1,1,0|-odd141,1,1,0|-odd140,26,8,1|-o5st41,26,8,1|-o5st40,1,1,0|-nuzx41,1,1,0|-nuzx40,26,8,1|-nmprs1,26,8,1|-nmprs0,1,1,0|-nbwvs1,1,1,0|-nbwvs0,26,8,1|-n39rs1,26,8,1|-n39rs0,1,1,0|-mt6t41,1,1,0|-mt6t40,26,8,1|-mkjp41,26,8,1|-mkjp40,1,1,0|-matp41,1,1,0|-matp40,26,8,1|-m1tmg1,26,8,1|-m1tmg0,1,1,0|-lrdp41,1,1,0|-lrdp40,26,8,1|-liql41,26,8,1|-liql40,1,1,0|-l8nmg1,1,1,0|-l8nmg0,26,8,1|-l00ig1,26,8,1|-l00ig0,1,1,0|-kqaig1,1,1,0|-kqaig0,26,8,1|-khafs1,26,8,1|-khafs0,1,1,0|-k77h41,1,1,0|-k77h40,26,8,1|-jykd41,26,8,1|-jykd40,1,1,0|-joheg1,1,1,0|-joheg0,26,8,1|-jfuag1,26,8,1|-jfuag0,1,1,0|-j64ag1,1,1,0|-j64ag0,26,8,1|-iwr941,26,8,1|-iwr940,1,1,0|-imoag1,1,1,0|-imoag0,26,8,1|-ie16g1,26,8,1|-ie16g0,1,1,0|-i4b6g1,1,1,0|-i4b6g0,26,8,1|-hvb3s1,26,8,1|-hvb3s0,1,1,0|-hl8541,1,1,0|-hl8540,26,8,1|-hcl141,26,8,1|-hcl140,1,1,0|-h2i2g1,1,1,0|-h2i2g0,26,8,1|-gtuyg1,26,8,1|-gtuyg0,1,1,0|-gk4yg1,1,1,0|-gk4yg0,26,8,1|-gb4vs1,26,8,1|-gb4vs0,1,1,0|-g11x41,1,1,0|-g11x40,26,8,1|-fpw2g1,26,8,1|-fpw2g0,1,1,0|-fkul41,1,1,0|-fkul40,26,8,1|-eyiyk1,26,8,1|-eyiyk0,146,9,1|-ethh81,146,9,1|-ethh80,26,8,1|-eh8qk1,26,8,1|-eh8qk0,146,9,1|-earek1,146,9,1|-earek0,26,8,1|-dyinw1,26,8,1|-dyinw0,146,9,1|-drod81,146,9,1|-drod80,26,8,1|-dfsl81,26,8,1|-dfsl80,146,9,1|-d75h81,146,9,1|-d75h80,26,8,1|-cx0nw1,26,8,1|-cx0nw0,146,9,1|-cro2k1,146,9,1|-cro2k0,26,8,1|-cncfs1,26,8,1|-cncfs0,1,1,0|-cdmfs1,1,1,0|-cdmfs0,26,8,1|-c4md41,26,8,1|-c4md40,1,1,0|-bwc7s1,1,1,0|-bwc7s0,26,8,1|-buwfw1,26,8,1|-buwfw0,146,9,1|-bos2k1,146,9,1|-bos2k0,26,8,1|-bkgfs1,26,8,1|-bkgfs0,1,1,0|-bdm541,1,1,0|-bdm540,26,8,1|-b1qd41,26,8,1|-b1qd40,1,1,0|-att6g1,1,1,0|-att6g0,26,8,1|-aj0ag1,26,8,1|-aj0ag0,1,1,0|-aad6g1,1,1,0|-aad6g0,26,8,1|-a0n6g1,26,8,1|-a0n6g0,1,1,0|-9rn3s1,1,1,0|-9rn3s0,26,8,1|-9hx3s1,26,8,1|-9hx3s0,1,1,0|-98k2g1,1,1,0|-98k2g0,26,8,1|-8yu2g1,26,8,1|-8yu2g0,1,1,0|-8ptzs1,1,1,0|-8ptzs0,26,8,1|-8h6vs1,26,8,1|-8h6vs0,1,1,0|-87gvs1,1,1,0|-87gvs0,26,8,1|-7ygt41,26,8,1|-7ygt40,1,1,0|-7odug1,1,1,0|-7odug0,26,8,1|-7fqqg1,26,8,1|-7fqqg0,1,1,0|-75at41,1,1,0|-75at40,26,8,1|-6wnp41,26,8,1|-6wnp40,1,1,0|-6mxp41,1,1,0|-6mxp40,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Guernsey|,0,328,0|-1rprx9y,0,328,0|-1rprx9x,1,1,0|-rzcns1,1,1,0|-rzcns0,26,8,1|-rsid41,26,8,1|-rsid40,1,1,0|-risd41,1,1,0|-risd40,26,8,1|-ragd41,26,8,1|-ragd40,1,1,0|-r0s7s1,1,1,0|-r0s7s0,26,8,1|-qr0d41,26,8,1|-qr0d40,1,1,0|-qhp6g1,1,1,0|-qhp6g0,26,8,1|-q8aag1,26,8,1|-q8aag0,1,1,0|-pyz3s1,1,1,0|-pyz3s0,26,8,1|-po4d41,26,8,1|-po4d40,1,1,0|-pfw2g1,1,1,0|-pfw2g0,26,8,1|-p6h6g1,26,8,1|-p6h6g0,1,1,0|-oxiyg1,1,1,0|-oxiyg0,26,8,1|-onfzs1,26,8,1|-onfzs0,1,1,0|-odd141,1,1,0|-odd140,26,8,1|-o5st41,26,8,1|-o5st40,1,1,0|-nuzx41,1,1,0|-nuzx40,26,8,1|-nmprs1,26,8,1|-nmprs0,1,1,0|-nbwvs1,1,1,0|-nbwvs0,26,8,1|-n39rs1,26,8,1|-n39rs0,1,1,0|-mt6t41,1,1,0|-mt6t40,26,8,1|-mkjp41,26,8,1|-mkjp40,1,1,0|-matp41,1,1,0|-matp40,26,8,1|-m1tmg1,26,8,1|-m1tmg0,1,1,0|-lrdp41,1,1,0|-lrdp40,26,8,1|-liql41,26,8,1|-liql40,1,1,0|-l8nmg1,1,1,0|-l8nmg0,26,8,1|-l00ig1,26,8,1|-l00ig0,1,1,0|-kqaig1,1,1,0|-kqaig0,26,8,1|-khafs1,26,8,1|-khafs0,1,1,0|-k77h41,1,1,0|-k77h40,26,8,1|-jykd41,26,8,1|-jykd40,1,1,0|-joheg1,1,1,0|-joheg0,26,8,1|-jfuag1,26,8,1|-jfuag0,1,1,0|-j64ag1,1,1,0|-j64ag0,26,8,1|-iwr941,26,8,1|-iwr940,1,1,0|-imoag1,1,1,0|-imoag0,26,8,1|-ie16g1,26,8,1|-ie16g0,1,1,0|-i4b6g1,1,1,0|-i4b6g0,26,8,1|-hvb3s1,26,8,1|-hvb3s0,1,1,0|-hl8541,1,1,0|-hl8540,26,8,1|-hcl141,26,8,1|-hcl140,1,1,0|-h2i2g1,1,1,0|-h2i2g0,26,8,1|-gtuyg1,26,8,1|-gtuyg0,1,1,0|-gk4yg1,1,1,0|-gk4yg0,26,8,1|-gb4vs1,26,8,1|-gb4vs0,1,1,0|-g11x41,1,1,0|-g11x40,26,8,1|-fpw2g1,26,8,1|-fpw2g0,1,1,0|-fkul41,1,1,0|-fkul40,26,8,1|-eyiyk1,26,8,1|-eyiyk0,146,9,1|-ethh81,146,9,1|-ethh80,26,8,1|-eh8qk1,26,8,1|-eh8qk0,146,9,1|-earek1,146,9,1|-earek0,26,8,1|-dyinw1,26,8,1|-dyinw0,146,9,1|-drod81,146,9,1|-drod80,26,8,1|-dfsl81,26,8,1|-dfsl80,146,9,1|-d75h81,146,9,1|-d75h80,26,8,1|-cx0nw1,26,8,1|-cx0nw0,146,9,1|-cro2k1,146,9,1|-cro2k0,26,8,1|-cncfs1,26,8,1|-cncfs0,1,1,0|-cdmfs1,1,1,0|-cdmfs0,26,8,1|-c4md41,26,8,1|-c4md40,1,1,0|-bwc7s1,1,1,0|-bwc7s0,26,8,1|-buwfw1,26,8,1|-buwfw0,146,9,1|-bos2k1,146,9,1|-bos2k0,26,8,1|-bkgfs1,26,8,1|-bkgfs0,1,1,0|-bdm541,1,1,0|-bdm540,26,8,1|-b1qd41,26,8,1|-b1qd40,1,1,0|-att6g1,1,1,0|-att6g0,26,8,1|-aj0ag1,26,8,1|-aj0ag0,1,1,0|-aad6g1,1,1,0|-aad6g0,26,8,1|-a0n6g1,26,8,1|-a0n6g0,1,1,0|-9rn3s1,1,1,0|-9rn3s0,26,8,1|-9hx3s1,26,8,1|-9hx3s0,1,1,0|-98k2g1,1,1,0|-98k2g0,26,8,1|-8yu2g1,26,8,1|-8yu2g0,1,1,0|-8ptzs1,1,1,0|-8ptzs0,26,8,1|-8h6vs1,26,8,1|-8h6vs0,1,1,0|-87gvs1,1,1,0|-87gvs0,26,8,1|-7ygt41,26,8,1|-7ygt40,1,1,0|-7odug1,1,1,0|-7odug0,26,8,1|-7fqqg1,26,8,1|-7fqqg0,1,1,0|-75at41,1,1,0|-75at40,26,8,1|-6wnp41,26,8,1|-6wnp40,1,1,0|-6mxp41,1,1,0|-6mxp40,26,8,1|-6dxmg1,26,8,1|-6dxmg0,1,1,0|-63uns1,1,1,0|-63uns0,26,8,1|-5v7js1,26,8,1|-5v7js0,1,1,0|-5l4l41,1,1,0|-5l4l40,26,8,1|-5chh41,26,8,1|-5chh40,1,1,0|-52rh41,1,1,0|-52rh40,26,8,1|-4treg1,26,8,1|-4treg0,1,1,0|-4krbs1,1,1,0|-4krbs0,26,8,1|-49lh41,26,8,1|-49lh40,1,1,0|-421941,1,1,0|-421940,26,8,1|-3qveg1,26,8,1|-3qveg0,1,1,0|-3iy7s1,1,1,0|-3iy7s0,26,8,1|-385bs1,26,8,1|-385bs0,1,1,0|-30l3s1,1,1,0|-30l3s0,26,8,1|-2pf941,26,8,1|-2pf940,1,1,0|-2hv141,1,1,0|-2hv140,26,8,1|-26p6g1,26,8,1|-26p6g0,1,1,0|-1z4yg1,1,1,0|-1z4yg0,26,8,1|-1nz3s1,26,8,1|-1nz3s0,1,1,0|-1gevs1,1,1,0|-1gevs0,26,8,1|-14w2g1,26,8,1|-14w2g0,1,1,0|-z4ns1,1,1,0|-z4ns0,26,8,1|-m6841,26,8,1|-m6840,26,8,0|yd6vz,26,8,0|yd6w0,1,1,0|15kg7z,1,1,0|15kg80,26,8,1|1h39jz,26,8,1|1h39k0,1,1,0|1oaivz,1,1,0|1oaiw0,26,8,1|1ztc7z,26,8,1|1ztc80,1,1,0|270ljz,1,1,0|270lk0,26,8,1|2ijevz,26,8,1|2ijew0,1,1,0|2pqo7z,1,1,0|2pqo80,26,8,1|319hjz,26,8,1|319hk0,1,1,0|38tpjz,1,1,0|38tpk0,26,8,1|3jzk7z,26,8,1|3jzk80,1,1,0|3rjs7z,1,1,0|3rjs80,26,8,1|42pmvz,26,8,1|42pmw0,1,1,0|4a9uvz,1,1,0|4a9uw0,26,8,1|4lso7z,26,8,1|4lso80,1,1,0|4szxjz,1,1,0|4szxk0,26,8,1|54iqvz,26,8,1|54iqw0,1,1,0|5bq07z,1,1,0|5bq080,26,8,1|5n8tjz,26,8,1|5n8tk0,1,1,0|5v5xfz,1,1,0|5v5xg0,26,8,1|65ytfz,26,8,1|65ytg0,1,1,0|6dw03z,1,1,0|6dw040,26,8,1|6oow3z,26,8,1|6oow40,1,1,0|6wm2rz,1,1,0|6wm2s0,26,8,1|77eyrz,26,8,1|77eys0,1,1,0|7fc5fz,1,1,0|7fc5g0,26,8,1|7qi03z,26,8,1|7qi040,1,1,0|7yf6rz,1,1,0|7yf6s0,26,8,1|8982rz,26,8,1|8982s0,1,1,0|8h59fz,1,1,0|8h59g0,26,8,1|8ry5fz,26,8,1|8ry5g0,1,1,0|8zvc3z,1,1,0|8zvc40,26,8,1|9ao83z,26,8,1|9ao840,1,1,0|9ilerz,1,1,0|9iles0,26,8,1|9tearz,26,8,1|9teas0,1,1,0|a1bhfz,1,1,0|a1bhg0,26,8,1|achc3z,26,8,1|achc40,1,1,0|ak1k3z,1,1,0|ak1k40,26,8,1|av7erz,26,8,1|av7es0,1,1,0|b34lfz,1,1,0|b34lg0,26,8,1|bdxhfz,26,8,1|bdxhg0,1,1,0|bluo3z,1,1,0|bluo40,26,8,1|bwnk3z,26,8,1|bwnk40,1,1,0|c4kqrz,1,1,0|c4kqs0,26,8,1|cfdmrz,26,8,1|cfdms0,1,1,0|cnatfz,1,1,0|cnatg0,26,8,1|cy3pfz,26,8,1|cy3pg0,1,1,0|d60w3z,1,1,0|d60w40,26,8,1|dgts3z,26,8,1|dgts40,1,1,0|dp3xfz,1,1,0|dp3xg0,26,8,1|dzwtfz,26,8,1|dzwtg0,1,1,0|e7u03z,1,1,0|e7u040,26,8,1|eimw3z,26,8,1|eimw40,1,1,0|eqk2rz,1,1,0|eqk2s0,26,8,1|f1cyrz,26,8,1|f1cys0,1,1,0|f9a5fz,1,1,0|f9a5g0,26,8,1|fkg03z,26,8,1|fkg040,1,1,0|fs083z,1,1,0|fs0840,26,8,1|g362rz,26,8,1|g362s0,1,1,0|gaqarz,1,1,0|gaqas0,26,8,1|glw5fz,26,8,1|glw5g0,1,1,0|gttc3z,1,1,0|gttc40,26,8,1|h4m83z,26,8,1|h4m840,1,1,0|hcjerz,1,1,0|hcjes0,26,8,1|hncarz,26,8,1|hncas0,1,1,0|hv9hfz,1,1,0|hv9hg0,26,8,1|i6fc3z,26,8,1|i6fc40,1,1,0|idzk3z,1,1,0|idzk40,26,8,1|ip5erz,26,8,1|ip5es0,1,1,0|iwpmrz,1,1,0|iwpms0,26,8,1|j7vhfz,26,8,1|j7vhg0,1,1,0|jffpfz,1,1,0|jffpg0,26,8,1|jqlk3z,26,8,1|jqlk40,1,1,0|jyiqrz,1,1,0|jyiqs0,26,8,1|k9bmrz,26,8,1|k9bms0,1,1,0|kh8tfz,1,1,0|kh8tg0,26,8,1|ks1pfz,26,8,1|ks1pg0,1,1,0|kzyw3z,1,1,0|kzyw40,26,8,1|lb4qrz,26,8,1|lb4qs0,1,1,0|lioyrz,1,1,0|lioys0,26,8,1|ltutfz,26,8,1|ltutg0,1,1,0|m1f1fz,1,1,0|m1f1g0,26,8,1|mckw3z,26,8,1|mckw40,1,1,0|mki2rz,1,1,0|mki2s0,26,8,1|mvayrz,26,8,1|mvays0,1,1,0|n385fz,1,1,0|n385g0,26,8,1|ne11fz,26,8,1|ne11g0,1,1,0|nly83z,1,1,0|nly840,26,8,1|nwr43z,26,8,1|nwr440,1,1,0|o4oarz,1,1,0|o4oas0,26,8,1|ofu5fz,26,8,1|ofu5g0,1,1,0|onedfz,1,1,0|onedg0,26,8,1|oyk83z,26,8,1|oyk840,1,1,0|p64g3z,1,1,0|p64g40,26,8,1|phaarz,26,8,1|phaas0,1,1,0|pp7hfz,1,1,0|pp7hg0,26,8,1|q00dfz,26,8,1|q00dg0,1,1,0|q7xk3z,1,1,0|q7xk40,26,8,1|qiqg3z,26,8,1|qiqg40,1,1,0|qqnmrz,1,1,0|qqnms0,26,8,1|r1thfz,26,8,1|r1thg0,1,1,0|r9dpfz,1,1,0|r9dpg0,26,8,1|rkjk3z,26,8,1|rkjk40,1,1,0|rs3s3z,1,1,0|rs3s40,26,8,1|s39mrz,26,8,1|s39ms0,1,1,0|sb6tfz,1,1,0|sb6tg0,26,8,1|slzpfz,26,8,1|slzpg0,1,1,0|stww3z,1,1,0|stww40,26,8,1|t4ps3z,26,8,1|t4ps40,1,1,0|tcmyrz,1,1,0|tcmys0,26,8,1|tnfurz,26,8,1|tnfus0,1,1,0|tvd1fz,1,1,0|tvd1g0,26,8,1|u6iw3z,26,8,1|u6iw40,1,1,0|ue343z,1,1,0|ue3440,26,8,1|up8yrz,26,8,1|up8ys0,1,1,0|uwt6rz,1,1,0|uwt6s0,26,8,1|v7z1fz,26,8,1|v7z1g0,1,1,0|vfw83z,1,1,0|vfw840,26,8,1|vqp43z,26,8,1|vqp440,1,1,0|vymarz,1,1,0|vymas0,26,8,1|w9f6rz,26,8,1|w9f6s0,1,1,0|whcdfz,1,1,0|whcdg0,26,8,1|wsi83z,26,8,1|wsi840,1,1,0|x02g3z,1,1,0|x02g40,26,8,1|xb8arz,26,8,1|xb8as0,1,1,0|xisirz,1,1,0|xisis0,26,8,1|xtydfz,26,8,1|xtydg0,1,1,0|y1ilfz,1,1,0|y1ilg0,26,8,1|ycog3z,26,8,1|ycog40,1,1,0|yklmrz,1,1,0|yklms0,26,8,1|yveirz,26,8,1|yveis0,1,1,0|z3bpfz,1,1,0|z3bpg0,26,8,1|ze4lfz,26,8,1|ze4lg0,1,1,0|zm1s3z,1,1,0|zm1s40,26,8,1|zx7mrz,26,8,1|zx7ms0,1,1,0|104rurz,1,1,0|104rus0,26,8,1|10fxpfz,26,8,1|10fxpg0,1,1,0|10nhxfz,1,1,0|10nhxg0,26,8,1|10yns3z,26,8,1|10yns40,1,1,0|116kyrz,1,1,0|116kys0,26,8,1|11hdurz,26,8,1|11hdus0,1,1,0|11pb1fz,1,1,0|11pb1g0,26,8,1|1203xfz,26,8,1|1203xg0,1,1,0|128143z,1,1,0|1281440,26,8,1|12iu03z,26,8,1|12iu040,1,1,0|12qr6rz,1,1,0|12qr6s0,26,8,1|131x1fz,26,8,1|131x1g0,1,1,0|139h9fz,1,1,0|139h9g0,26,8,1|13kn43z,26,8,1|13kn440,1,1,0|13s7c3z,1,1,0|13s7c40,26,8,1|143d6rz,26,8,1|143d6s0,1,1,0|14badfz,1,1,0|14badg0,26,8,1|14m39fz,26,8,1|14m39g0,1,1,0|14u0g3z,1,1,0|14u0g40,26,8,1|154tc3z,26,8,1|154tc40,1,1,0|15cqirz,1,1,0|15cqis0,26,8,1|15nwdfz,26,8,1|15nwdg0,1,1,0|15vglfz,1,1,0|15vglg0,26,8,1|166mg3z,26,8,1|166mg40,1,1,0|16e6o3z,1,1,0|16e6o40,26,8,1|16pcirz,26,8,1|16pcis0,1,1,0|16x9pfz,1,1,0|16x9pg0,26,8,1|1782lfz,26,8,1|1782lg0,1,1,0|17fzs3z,1,1,0|17fzs40,26,8,1|17qso3z,26,8,1|17qso40,1,1,0|17ypurz,1,1,0|17ypus0,26,8,1|189iqrz,26,8,1|189iqs0,1,1,0|18hfxfz,1,1,0|18hfxg0,26,8,1|18sls3z,26,8,1|18sls40,1,1,0|190603z,1,1,0|1906040,26,8,1|19bburz,26,8,1|19bbus0,1,1,0|19iw2rz,1,1,0|19iw2s0,26,8,1|19u1xfz,26,8,1|19u1xg0,1,1,0|1a1z43z,1,1,0|1a1z440,26,8,1|1acs03z,26,8,1|1acs040,1,1,0|1akp6rz,1,1,0|1akp6s0,26,8,1|1avi2rz,26,8,1|1avi2s0,1,1,0|1b3f9fz,1,1,0|1b3f9g0,26,8,1|1bel43z,26,8,1|1bel440,1,1,0|1bm5c3z,1,1,0|1bm5c40,26,8,1|1bxb6rz,26,8,1|1bxb6s0,1,1,0|1c4verz,1,1,0|1c4ves0,26,8,1|1cg19fz,26,8,1|1cg19g0,1,1,0|1cnlhfz,1,1,0|1cnlhg0,26,8,1|1cyrc3z,26,8,1|1cyrc40,1,1,0|1d6oirz,1,1,0|1d6ois0,26,8,1|1dhherz,26,8,1|1dhhes0,1,1,0|1dpelfz,1,1,0|1dpelg0,26,8,1|1e07hfz,26,8,1|1e07hg0,1,1,0|1e84o3z,1,1,0|1e84o40,26,8,1|1ejairz,26,8,1|1ejais0,1,1,0|1equqrz,1,1,0|1equqs0,26,8,1|1f20lfz,26,8,1|1f20lg0,1,1,0|1f9ktfz,1,1,0|1f9ktg0,26,8,1|1fkqo3z,26,8,1|1fkqo40,1,1,0|1fsnurz,1,1,0|1fsnus0,26,8,1|1g3gqrz,26,8,1|1g3gqs0,1,1,0|1gbdxfz,1,1,0|1gbdxg0,26,8,1|1gm6tfz,26,8,1|1gm6tg0,1,1,0|1gu403z,1,1,0|1gu4040,26,8,1|1h4ww3z,26,8,1|1h4ww40,1,1,0|1hcu2rz,1,1,0|1hcu2s0,26,8,1|1hnzxfz,26,8,1|1hnzxg0,1,1,0|1hvk5fz,1,1,0|1hvk5g0,26,8,1|1i6q03z,26,8,1|1i6q040,1,1,0|1iea83z,1,1,0|1iea840,26,8,1|1ipg2rz,26,8,1|1ipg2s0,1,1,0|1ixd9fz,1,1,0|1ixd9g0,26,8,1|1j865fz,26,8,1|1j865g0,1,1,0|1jg3c3z,1,1,0|1jg3c40,26,8,1|1jqw83z,26,8,1|1jqw840,1,1,0|1jyterz,1,1,0|1jytes0,26,8,1|1k9z9fz,26,8,1|1k9z9g0,1,1,0|1khjhfz,1,1,0|1khjhg0,26,8,1|1kspc3z,26,8,1|1kspc40,1,1,0|1l09k3z,1,1,0|1l09k40,26,8,1|1lbferz,26,8,1|1lbfes0,1,1,0|1ljclfz,1,1,0|1ljclg0,26,8,1|1lu5hfz,26,8,1|1lu5hg0,1,1,0|1m22o3z,1,1,0|1m22o40,26,8,1|1mcvk3z,26,8,1|1mcvk40,1,1,0|1mksqrz,1,1,0|1mksqs0,26,8,1|1mvlmrz,26,8,1|1mvlms0,1,1,0|1n3itfz,1,1,0|1n3itg0,26,8,1|1neoo3z,26,8,1|1neoo40,1,1,0|1nm8w3z,1,1,0|1nm8w40,26,8,1|1nxeqrz,26,8,1|1nxeqs0,1,1,0|1o4yyrz,1,1,0|1o4yys0,26,8,1|1og4tfz,26,8,1|1og4tg0,1,1,0|1oo203z,1,1,0|1oo2040,26,8,1|1oyuw3z,26,8,1|1oyuw40,1,1,0|1p6s2rz,1,1,0|1p6s2s0,26,8,1|1phkyrz,26,8,1|1phkys0,1,1,0|1ppi5fz,1,1,0|1ppi5g0,26,8,1|1q0o03z,26,8,1|1q0o040,1,1,0|1q8883z,1,1,0|1q88840,26,8,1|1qje2rz,26,8,1|1qje2s0,1,1,0|1qqyarz,1,1,0|1qqyas0,26,8,1|1r245fz,26,8,1|1r245g0,1,1,0|1r9odfz,1,1,0|1r9odg0,26,8,1|1rku83z,26,8,1|1rku840,1,1,0|1rsrerz,1,1,0|1rsres0,26,8,1|1s3karz,26,8,1|1s3kas0,1,1,0|1sbhhfz,1,1,0|1sbhhg0,26,8,1|1smadfz,26,8,1|1smadg0,1,1,0|1su7k3z,1,1,0|1su7k40,26,8,1|1t5derz,26,8,1|1t5des0,1,1,0|1tcxmrz,1,1,0|1tcxms0,26,8,1|1to3hfz,26,8,1|1to3hg0,1,1,0|1tvnpfz,1,1,0|1tvnpg0,26,8,1|1u6tk3z,26,8,1|1u6tk40,1,1,0|1ueqqrz,1,1,0|1ueqqs0,26,8,1|1upjmrz,26,8,1|1upjms0,1,1,0|1uxgtfz,1,1,0|1uxgtg0,26,8,1|1v89pfz,26,8,1|1v89pg0,1,1,0|1vg6w3z,1,1,0|1vg6w40,26,8,1|1vqzs3z,26,8,1|1vqzs40,1,1,0|NaN,1,1,0",
        "Europe/Helsinki|,0,329,0|-1bss9ye,0,329,0|-1bss9yd,76,329,0|-peghye,76,329,0|-peghyd,14,9,0|-ehco81,14,9,0|-ehco80,15,4,1|-e7vxk1,15,4,1|-e7vxk0,14,9,0|5v5unz,14,9,0|5v5uo0,15,4,1|64ivzz,15,4,1|64iw00,14,9,0|6dvxbz,14,9,0|6dvxc0,15,4,1|6n8ynz,15,4,1|6n8yo0,14,9,0|6wm2rz,14,9,0|6wm2s0,15,4,1|75z43z,15,4,1|75z440,14,9,0|7fc5fz,14,9,0|7fc5g0,15,4,1|7p25fz,15,4,1|7p25g0,14,9,0|7yf6rz,14,9,0|7yf6s0,15,4,1|87s83z,15,4,1|87s840,14,9,0|8h59fz,14,9,0|8h59g0,15,4,1|8qiarz,15,4,1|8qias0,14,9,0|8zvc3z,14,9,0|8zvc40,15,4,1|998dfz,15,4,1|998dg0,14,9,0|9ilerz,14,9,0|9iles0,15,4,1|9ryg3z,15,4,1|9ryg40,14,9,0|a1bhfz,14,9,0|a1bhg0,15,4,1|aaoirz,15,4,1|aaois0,14,9,0|ak1k3z,14,9,0|ak1k40,15,4,1|atrk3z,15,4,1|atrk40,14,9,0|b34lfz,14,9,0|b34lg0,15,4,1|bchmrz,15,4,1|bchms0,14,9,0|bluo3z,14,9,0|bluo40,15,4,1|bv7pfz,15,4,1|bv7pg0,14,9,0|c4kqrz,14,9,0|c4kqs0,15,4,1|cdxs3z,15,4,1|cdxs40,14,9,0|cnatfz,14,9,0|cnatg0,15,4,1|cwnurz,15,4,1|cwnus0,14,9,0|d60w3z,14,9,0|d60w40,15,4,1|dfdxfz,15,4,1|dfdxg0,14,9,0|dp3xfz,14,9,0|dp3xg0,15,4,1|dzwtfz,15,4,1|dzwtg0,14,9,0|e7u03z,14,9,0|e7u040,15,4,1|eimw3z,15,4,1|eimw40,14,9,0|eqk2rz,14,9,0|eqk2s0,15,4,1|f1cyrz,15,4,1|f1cys0,14,9,0|f9a5fz,14,9,0|f9a5g0,15,4,1|fkg03z,15,4,1|fkg040,14,9,0|fs083z,14,9,0|fs0840,15,4,1|g362rz,15,4,1|g362s0,14,9,0|gaqarz,14,9,0|gaqas0,15,4,1|glw5fz,15,4,1|glw5g0,14,9,0|gttc3z,14,9,0|gttc40,15,4,1|h4m83z,15,4,1|h4m840,14,9,0|hcjerz,14,9,0|hcjes0,15,4,1|hncarz,15,4,1|hncas0,14,9,0|hv9hfz,14,9,0|hv9hg0,15,4,1|i6fc3z,15,4,1|i6fc40,14,9,0|idzk3z,14,9,0|idzk40,15,4,1|ip5erz,15,4,1|ip5es0,14,9,0|iwpmrz,14,9,0|iwpms0,15,4,1|j7vhfz,15,4,1|j7vhg0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|lioyrz,14,9,0|lioys0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n385fz,14,9,0|n385g0,15,4,1|ne11fz,15,4,1|ne11g0,14,9,0|nly83z,14,9,0|nly840,15,4,1|nwr43z,15,4,1|nwr440,14,9,0|o4oarz,14,9,0|o4oas0,15,4,1|ofu5fz,15,4,1|ofu5g0,14,9,0|onedfz,14,9,0|onedg0,15,4,1|oyk83z,15,4,1|oyk840,14,9,0|p64g3z,14,9,0|p64g40,15,4,1|phaarz,15,4,1|phaas0,14,9,0|pp7hfz,14,9,0|pp7hg0,15,4,1|q00dfz,15,4,1|q00dg0,14,9,0|q7xk3z,14,9,0|q7xk40,15,4,1|qiqg3z,15,4,1|qiqg40,14,9,0|qqnmrz,14,9,0|qqnms0,15,4,1|r1thfz,15,4,1|r1thg0,14,9,0|r9dpfz,14,9,0|r9dpg0,15,4,1|rkjk3z,15,4,1|rkjk40,14,9,0|rs3s3z,14,9,0|rs3s40,15,4,1|s39mrz,15,4,1|s39ms0,14,9,0|sb6tfz,14,9,0|sb6tg0,15,4,1|slzpfz,15,4,1|slzpg0,14,9,0|stww3z,14,9,0|stww40,15,4,1|t4ps3z,15,4,1|t4ps40,14,9,0|tcmyrz,14,9,0|tcmys0,15,4,1|tnfurz,15,4,1|tnfus0,14,9,0|tvd1fz,14,9,0|tvd1g0,15,4,1|u6iw3z,15,4,1|u6iw40,14,9,0|ue343z,14,9,0|ue3440,15,4,1|up8yrz,15,4,1|up8ys0,14,9,0|uwt6rz,14,9,0|uwt6s0,15,4,1|v7z1fz,15,4,1|v7z1g0,14,9,0|vfw83z,14,9,0|vfw840,15,4,1|vqp43z,15,4,1|vqp440,14,9,0|vymarz,14,9,0|vymas0,15,4,1|w9f6rz,15,4,1|w9f6s0,14,9,0|whcdfz,14,9,0|whcdg0,15,4,1|wsi83z,15,4,1|wsi840,14,9,0|x02g3z,14,9,0|x02g40,15,4,1|xb8arz,15,4,1|xb8as0,14,9,0|xisirz,14,9,0|xisis0,15,4,1|xtydfz,15,4,1|xtydg0,14,9,0|y1ilfz,14,9,0|y1ilg0,15,4,1|ycog3z,15,4,1|ycog40,14,9,0|yklmrz,14,9,0|yklms0,15,4,1|yveirz,15,4,1|yveis0,14,9,0|z3bpfz,14,9,0|z3bpg0,15,4,1|ze4lfz,15,4,1|ze4lg0,14,9,0|zm1s3z,14,9,0|zm1s40,15,4,1|zx7mrz,15,4,1|zx7ms0,14,9,0|104rurz,14,9,0|104rus0,15,4,1|10fxpfz,15,4,1|10fxpg0,14,9,0|10nhxfz,14,9,0|10nhxg0,15,4,1|10yns3z,15,4,1|10yns40,14,9,0|116kyrz,14,9,0|116kys0,15,4,1|11hdurz,15,4,1|11hdus0,14,9,0|11pb1fz,14,9,0|11pb1g0,15,4,1|1203xfz,15,4,1|1203xg0,14,9,0|128143z,14,9,0|1281440,15,4,1|12iu03z,15,4,1|12iu040,14,9,0|12qr6rz,14,9,0|12qr6s0,15,4,1|131x1fz,15,4,1|131x1g0,14,9,0|139h9fz,14,9,0|139h9g0,15,4,1|13kn43z,15,4,1|13kn440,14,9,0|13s7c3z,14,9,0|13s7c40,15,4,1|143d6rz,15,4,1|143d6s0,14,9,0|14badfz,14,9,0|14badg0,15,4,1|14m39fz,15,4,1|14m39g0,14,9,0|14u0g3z,14,9,0|14u0g40,15,4,1|154tc3z,15,4,1|154tc40,14,9,0|15cqirz,14,9,0|15cqis0,15,4,1|15nwdfz,15,4,1|15nwdg0,14,9,0|15vglfz,14,9,0|15vglg0,15,4,1|166mg3z,15,4,1|166mg40,14,9,0|16e6o3z,14,9,0|16e6o40,15,4,1|16pcirz,15,4,1|16pcis0,14,9,0|16x9pfz,14,9,0|16x9pg0,15,4,1|1782lfz,15,4,1|1782lg0,14,9,0|17fzs3z,14,9,0|17fzs40,15,4,1|17qso3z,15,4,1|17qso40,14,9,0|17ypurz,14,9,0|17ypus0,15,4,1|189iqrz,15,4,1|189iqs0,14,9,0|18hfxfz,14,9,0|18hfxg0,15,4,1|18sls3z,15,4,1|18sls40,14,9,0|190603z,14,9,0|1906040,15,4,1|19bburz,15,4,1|19bbus0,14,9,0|19iw2rz,14,9,0|19iw2s0,15,4,1|19u1xfz,15,4,1|19u1xg0,14,9,0|1a1z43z,14,9,0|1a1z440,15,4,1|1acs03z,15,4,1|1acs040,14,9,0|1akp6rz,14,9,0|1akp6s0,15,4,1|1avi2rz,15,4,1|1avi2s0,14,9,0|1b3f9fz,14,9,0|1b3f9g0,15,4,1|1bel43z,15,4,1|1bel440,14,9,0|1bm5c3z,14,9,0|1bm5c40,15,4,1|1bxb6rz,15,4,1|1bxb6s0,14,9,0|1c4verz,14,9,0|1c4ves0,15,4,1|1cg19fz,15,4,1|1cg19g0,14,9,0|1cnlhfz,14,9,0|1cnlhg0,15,4,1|1cyrc3z,15,4,1|1cyrc40,14,9,0|1d6oirz,14,9,0|1d6ois0,15,4,1|1dhherz,15,4,1|1dhhes0,14,9,0|1dpelfz,14,9,0|1dpelg0,15,4,1|1e07hfz,15,4,1|1e07hg0,14,9,0|1e84o3z,14,9,0|1e84o40,15,4,1|1ejairz,15,4,1|1ejais0,14,9,0|1equqrz,14,9,0|1equqs0,15,4,1|1f20lfz,15,4,1|1f20lg0,14,9,0|1f9ktfz,14,9,0|1f9ktg0,15,4,1|1fkqo3z,15,4,1|1fkqo40,14,9,0|1fsnurz,14,9,0|1fsnus0,15,4,1|1g3gqrz,15,4,1|1g3gqs0,14,9,0|1gbdxfz,14,9,0|1gbdxg0,15,4,1|1gm6tfz,15,4,1|1gm6tg0,14,9,0|1gu403z,14,9,0|1gu4040,15,4,1|1h4ww3z,15,4,1|1h4ww40,14,9,0|1hcu2rz,14,9,0|1hcu2s0,15,4,1|1hnzxfz,15,4,1|1hnzxg0,14,9,0|1hvk5fz,14,9,0|1hvk5g0,15,4,1|1i6q03z,15,4,1|1i6q040,14,9,0|1iea83z,14,9,0|1iea840,15,4,1|1ipg2rz,15,4,1|1ipg2s0,14,9,0|1ixd9fz,14,9,0|1ixd9g0,15,4,1|1j865fz,15,4,1|1j865g0,14,9,0|1jg3c3z,14,9,0|1jg3c40,15,4,1|1jqw83z,15,4,1|1jqw840,14,9,0|1jyterz,14,9,0|1jytes0,15,4,1|1k9z9fz,15,4,1|1k9z9g0,14,9,0|1khjhfz,14,9,0|1khjhg0,15,4,1|1kspc3z,15,4,1|1kspc40,14,9,0|1l09k3z,14,9,0|1l09k40,15,4,1|1lbferz,15,4,1|1lbfes0,14,9,0|1ljclfz,14,9,0|1ljclg0,15,4,1|1lu5hfz,15,4,1|1lu5hg0,14,9,0|1m22o3z,14,9,0|1m22o40,15,4,1|1mcvk3z,15,4,1|1mcvk40,14,9,0|1mksqrz,14,9,0|1mksqs0,15,4,1|1mvlmrz,15,4,1|1mvlms0,14,9,0|1n3itfz,14,9,0|1n3itg0,15,4,1|1neoo3z,15,4,1|1neoo40,14,9,0|1nm8w3z,14,9,0|1nm8w40,15,4,1|1nxeqrz,15,4,1|1nxeqs0,14,9,0|1o4yyrz,14,9,0|1o4yys0,15,4,1|1og4tfz,15,4,1|1og4tg0,14,9,0|1oo203z,14,9,0|1oo2040,15,4,1|1oyuw3z,15,4,1|1oyuw40,14,9,0|1p6s2rz,14,9,0|1p6s2s0,15,4,1|1phkyrz,15,4,1|1phkys0,14,9,0|1ppi5fz,14,9,0|1ppi5g0,15,4,1|1q0o03z,15,4,1|1q0o040,14,9,0|1q8883z,14,9,0|1q88840,15,4,1|1qje2rz,15,4,1|1qje2s0,14,9,0|1qqyarz,14,9,0|1qqyas0,15,4,1|1r245fz,15,4,1|1r245g0,14,9,0|1r9odfz,14,9,0|1r9odg0,15,4,1|1rku83z,15,4,1|1rku840,14,9,0|1rsrerz,14,9,0|1rsres0,15,4,1|1s3karz,15,4,1|1s3kas0,14,9,0|1sbhhfz,14,9,0|1sbhhg0,15,4,1|1smadfz,15,4,1|1smadg0,14,9,0|1su7k3z,14,9,0|1su7k40,15,4,1|1t5derz,15,4,1|1t5des0,14,9,0|1tcxmrz,14,9,0|1tcxms0,15,4,1|1to3hfz,15,4,1|1to3hg0,14,9,0|1tvnpfz,14,9,0|1tvnpg0,15,4,1|1u6tk3z,15,4,1|1u6tk40,14,9,0|1ueqqrz,14,9,0|1ueqqs0,15,4,1|1upjmrz,15,4,1|1upjms0,14,9,0|1uxgtfz,14,9,0|1uxgtg0,15,4,1|1v89pfz,15,4,1|1v89pg0,14,9,0|1vg6w3z,14,9,0|1vg6w40,15,4,1|1vqzs3z,15,4,1|1vqzs40,14,9,0|NaN,14,9,0",
        "Europe/Isle_of_Man|,0,328,0|-1rprx9y,0,328,0|-1rprx9x,1,1,0|-rzcns1,1,1,0|-rzcns0,26,8,1|-rsid41,26,8,1|-rsid40,1,1,0|-risd41,1,1,0|-risd40,26,8,1|-ragd41,26,8,1|-ragd40,1,1,0|-r0s7s1,1,1,0|-r0s7s0,26,8,1|-qr0d41,26,8,1|-qr0d40,1,1,0|-qhp6g1,1,1,0|-qhp6g0,26,8,1|-q8aag1,26,8,1|-q8aag0,1,1,0|-pyz3s1,1,1,0|-pyz3s0,26,8,1|-po4d41,26,8,1|-po4d40,1,1,0|-pfw2g1,1,1,0|-pfw2g0,26,8,1|-p6h6g1,26,8,1|-p6h6g0,1,1,0|-oxiyg1,1,1,0|-oxiyg0,26,8,1|-onfzs1,26,8,1|-onfzs0,1,1,0|-odd141,1,1,0|-odd140,26,8,1|-o5st41,26,8,1|-o5st40,1,1,0|-nuzx41,1,1,0|-nuzx40,26,8,1|-nmprs1,26,8,1|-nmprs0,1,1,0|-nbwvs1,1,1,0|-nbwvs0,26,8,1|-n39rs1,26,8,1|-n39rs0,1,1,0|-mt6t41,1,1,0|-mt6t40,26,8,1|-mkjp41,26,8,1|-mkjp40,1,1,0|-matp41,1,1,0|-matp40,26,8,1|-m1tmg1,26,8,1|-m1tmg0,1,1,0|-lrdp41,1,1,0|-lrdp40,26,8,1|-liql41,26,8,1|-liql40,1,1,0|-l8nmg1,1,1,0|-l8nmg0,26,8,1|-l00ig1,26,8,1|-l00ig0,1,1,0|-kqaig1,1,1,0|-kqaig0,26,8,1|-khafs1,26,8,1|-khafs0,1,1,0|-k77h41,1,1,0|-k77h40,26,8,1|-jykd41,26,8,1|-jykd40,1,1,0|-joheg1,1,1,0|-joheg0,26,8,1|-jfuag1,26,8,1|-jfuag0,1,1,0|-j64ag1,1,1,0|-j64ag0,26,8,1|-iwr941,26,8,1|-iwr940,1,1,0|-imoag1,1,1,0|-imoag0,26,8,1|-ie16g1,26,8,1|-ie16g0,1,1,0|-i4b6g1,1,1,0|-i4b6g0,26,8,1|-hvb3s1,26,8,1|-hvb3s0,1,1,0|-hl8541,1,1,0|-hl8540,26,8,1|-hcl141,26,8,1|-hcl140,1,1,0|-h2i2g1,1,1,0|-h2i2g0,26,8,1|-gtuyg1,26,8,1|-gtuyg0,1,1,0|-gk4yg1,1,1,0|-gk4yg0,26,8,1|-gb4vs1,26,8,1|-gb4vs0,1,1,0|-g11x41,1,1,0|-g11x40,26,8,1|-fpw2g1,26,8,1|-fpw2g0,1,1,0|-fkul41,1,1,0|-fkul40,26,8,1|-eyiyk1,26,8,1|-eyiyk0,146,9,1|-ethh81,146,9,1|-ethh80,26,8,1|-eh8qk1,26,8,1|-eh8qk0,146,9,1|-earek1,146,9,1|-earek0,26,8,1|-dyinw1,26,8,1|-dyinw0,146,9,1|-drod81,146,9,1|-drod80,26,8,1|-dfsl81,26,8,1|-dfsl80,146,9,1|-d75h81,146,9,1|-d75h80,26,8,1|-cx0nw1,26,8,1|-cx0nw0,146,9,1|-cro2k1,146,9,1|-cro2k0,26,8,1|-cncfs1,26,8,1|-cncfs0,1,1,0|-cdmfs1,1,1,0|-cdmfs0,26,8,1|-c4md41,26,8,1|-c4md40,1,1,0|-bwc7s1,1,1,0|-bwc7s0,26,8,1|-buwfw1,26,8,1|-buwfw0,146,9,1|-bos2k1,146,9,1|-bos2k0,26,8,1|-bkgfs1,26,8,1|-bkgfs0,1,1,0|-bdm541,1,1,0|-bdm540,26,8,1|-b1qd41,26,8,1|-b1qd40,1,1,0|-att6g1,1,1,0|-att6g0,26,8,1|-aj0ag1,26,8,1|-aj0ag0,1,1,0|-aad6g1,1,1,0|-aad6g0,26,8,1|-a0n6g1,26,8,1|-a0n6g0,1,1,0|-9rn3s1,1,1,0|-9rn3s0,26,8,1|-9hx3s1,26,8,1|-9hx3s0,1,1,0|-98k2g1,1,1,0|-98k2g0,26,8,1|-8yu2g1,26,8,1|-8yu2g0,1,1,0|-8ptzs1,1,1,0|-8ptzs0,26,8,1|-8h6vs1,26,8,1|-8h6vs0,1,1,0|-87gvs1,1,1,0|-87gvs0,26,8,1|-7ygt41,26,8,1|-7ygt40,1,1,0|-7odug1,1,1,0|-7odug0,26,8,1|-7fqqg1,26,8,1|-7fqqg0,1,1,0|-75at41,1,1,0|-75at40,26,8,1|-6wnp41,26,8,1|-6wnp40,1,1,0|-6mxp41,1,1,0|-6mxp40,26,8,1|-6dxmg1,26,8,1|-6dxmg0,1,1,0|-63uns1,1,1,0|-63uns0,26,8,1|-5v7js1,26,8,1|-5v7js0,1,1,0|-5l4l41,1,1,0|-5l4l40,26,8,1|-5chh41,26,8,1|-5chh40,1,1,0|-52rh41,1,1,0|-52rh40,26,8,1|-4treg1,26,8,1|-4treg0,1,1,0|-4krbs1,1,1,0|-4krbs0,26,8,1|-49lh41,26,8,1|-49lh40,1,1,0|-421941,1,1,0|-421940,26,8,1|-3qveg1,26,8,1|-3qveg0,1,1,0|-3iy7s1,1,1,0|-3iy7s0,26,8,1|-385bs1,26,8,1|-385bs0,1,1,0|-30l3s1,1,1,0|-30l3s0,26,8,1|-2pf941,26,8,1|-2pf940,1,1,0|-2hv141,1,1,0|-2hv140,26,8,1|-26p6g1,26,8,1|-26p6g0,1,1,0|-1z4yg1,1,1,0|-1z4yg0,26,8,1|-1nz3s1,26,8,1|-1nz3s0,1,1,0|-1gevs1,1,1,0|-1gevs0,26,8,1|-14w2g1,26,8,1|-14w2g0,1,1,0|-z4ns1,1,1,0|-z4ns0,26,8,1|-m6841,26,8,1|-m6840,26,8,0|yd6vz,26,8,0|yd6w0,1,1,0|15kg7z,1,1,0|15kg80,26,8,1|1h39jz,26,8,1|1h39k0,1,1,0|1oaivz,1,1,0|1oaiw0,26,8,1|1ztc7z,26,8,1|1ztc80,1,1,0|270ljz,1,1,0|270lk0,26,8,1|2ijevz,26,8,1|2ijew0,1,1,0|2pqo7z,1,1,0|2pqo80,26,8,1|319hjz,26,8,1|319hk0,1,1,0|38tpjz,1,1,0|38tpk0,26,8,1|3jzk7z,26,8,1|3jzk80,1,1,0|3rjs7z,1,1,0|3rjs80,26,8,1|42pmvz,26,8,1|42pmw0,1,1,0|4a9uvz,1,1,0|4a9uw0,26,8,1|4lso7z,26,8,1|4lso80,1,1,0|4szxjz,1,1,0|4szxk0,26,8,1|54iqvz,26,8,1|54iqw0,1,1,0|5bq07z,1,1,0|5bq080,26,8,1|5n8tjz,26,8,1|5n8tk0,1,1,0|5v5xfz,1,1,0|5v5xg0,26,8,1|65ytfz,26,8,1|65ytg0,1,1,0|6dw03z,1,1,0|6dw040,26,8,1|6oow3z,26,8,1|6oow40,1,1,0|6wm2rz,1,1,0|6wm2s0,26,8,1|77eyrz,26,8,1|77eys0,1,1,0|7fc5fz,1,1,0|7fc5g0,26,8,1|7qi03z,26,8,1|7qi040,1,1,0|7yf6rz,1,1,0|7yf6s0,26,8,1|8982rz,26,8,1|8982s0,1,1,0|8h59fz,1,1,0|8h59g0,26,8,1|8ry5fz,26,8,1|8ry5g0,1,1,0|8zvc3z,1,1,0|8zvc40,26,8,1|9ao83z,26,8,1|9ao840,1,1,0|9ilerz,1,1,0|9iles0,26,8,1|9tearz,26,8,1|9teas0,1,1,0|a1bhfz,1,1,0|a1bhg0,26,8,1|achc3z,26,8,1|achc40,1,1,0|ak1k3z,1,1,0|ak1k40,26,8,1|av7erz,26,8,1|av7es0,1,1,0|b34lfz,1,1,0|b34lg0,26,8,1|bdxhfz,26,8,1|bdxhg0,1,1,0|bluo3z,1,1,0|bluo40,26,8,1|bwnk3z,26,8,1|bwnk40,1,1,0|c4kqrz,1,1,0|c4kqs0,26,8,1|cfdmrz,26,8,1|cfdms0,1,1,0|cnatfz,1,1,0|cnatg0,26,8,1|cy3pfz,26,8,1|cy3pg0,1,1,0|d60w3z,1,1,0|d60w40,26,8,1|dgts3z,26,8,1|dgts40,1,1,0|dp3xfz,1,1,0|dp3xg0,26,8,1|dzwtfz,26,8,1|dzwtg0,1,1,0|e7u03z,1,1,0|e7u040,26,8,1|eimw3z,26,8,1|eimw40,1,1,0|eqk2rz,1,1,0|eqk2s0,26,8,1|f1cyrz,26,8,1|f1cys0,1,1,0|f9a5fz,1,1,0|f9a5g0,26,8,1|fkg03z,26,8,1|fkg040,1,1,0|fs083z,1,1,0|fs0840,26,8,1|g362rz,26,8,1|g362s0,1,1,0|gaqarz,1,1,0|gaqas0,26,8,1|glw5fz,26,8,1|glw5g0,1,1,0|gttc3z,1,1,0|gttc40,26,8,1|h4m83z,26,8,1|h4m840,1,1,0|hcjerz,1,1,0|hcjes0,26,8,1|hncarz,26,8,1|hncas0,1,1,0|hv9hfz,1,1,0|hv9hg0,26,8,1|i6fc3z,26,8,1|i6fc40,1,1,0|idzk3z,1,1,0|idzk40,26,8,1|ip5erz,26,8,1|ip5es0,1,1,0|iwpmrz,1,1,0|iwpms0,26,8,1|j7vhfz,26,8,1|j7vhg0,1,1,0|jffpfz,1,1,0|jffpg0,26,8,1|jqlk3z,26,8,1|jqlk40,1,1,0|jyiqrz,1,1,0|jyiqs0,26,8,1|k9bmrz,26,8,1|k9bms0,1,1,0|kh8tfz,1,1,0|kh8tg0,26,8,1|ks1pfz,26,8,1|ks1pg0,1,1,0|kzyw3z,1,1,0|kzyw40,26,8,1|lb4qrz,26,8,1|lb4qs0,1,1,0|lioyrz,1,1,0|lioys0,26,8,1|ltutfz,26,8,1|ltutg0,1,1,0|m1f1fz,1,1,0|m1f1g0,26,8,1|mckw3z,26,8,1|mckw40,1,1,0|mki2rz,1,1,0|mki2s0,26,8,1|mvayrz,26,8,1|mvays0,1,1,0|n385fz,1,1,0|n385g0,26,8,1|ne11fz,26,8,1|ne11g0,1,1,0|nly83z,1,1,0|nly840,26,8,1|nwr43z,26,8,1|nwr440,1,1,0|o4oarz,1,1,0|o4oas0,26,8,1|ofu5fz,26,8,1|ofu5g0,1,1,0|onedfz,1,1,0|onedg0,26,8,1|oyk83z,26,8,1|oyk840,1,1,0|p64g3z,1,1,0|p64g40,26,8,1|phaarz,26,8,1|phaas0,1,1,0|pp7hfz,1,1,0|pp7hg0,26,8,1|q00dfz,26,8,1|q00dg0,1,1,0|q7xk3z,1,1,0|q7xk40,26,8,1|qiqg3z,26,8,1|qiqg40,1,1,0|qqnmrz,1,1,0|qqnms0,26,8,1|r1thfz,26,8,1|r1thg0,1,1,0|r9dpfz,1,1,0|r9dpg0,26,8,1|rkjk3z,26,8,1|rkjk40,1,1,0|rs3s3z,1,1,0|rs3s40,26,8,1|s39mrz,26,8,1|s39ms0,1,1,0|sb6tfz,1,1,0|sb6tg0,26,8,1|slzpfz,26,8,1|slzpg0,1,1,0|stww3z,1,1,0|stww40,26,8,1|t4ps3z,26,8,1|t4ps40,1,1,0|tcmyrz,1,1,0|tcmys0,26,8,1|tnfurz,26,8,1|tnfus0,1,1,0|tvd1fz,1,1,0|tvd1g0,26,8,1|u6iw3z,26,8,1|u6iw40,1,1,0|ue343z,1,1,0|ue3440,26,8,1|up8yrz,26,8,1|up8ys0,1,1,0|uwt6rz,1,1,0|uwt6s0,26,8,1|v7z1fz,26,8,1|v7z1g0,1,1,0|vfw83z,1,1,0|vfw840,26,8,1|vqp43z,26,8,1|vqp440,1,1,0|vymarz,1,1,0|vymas0,26,8,1|w9f6rz,26,8,1|w9f6s0,1,1,0|whcdfz,1,1,0|whcdg0,26,8,1|wsi83z,26,8,1|wsi840,1,1,0|x02g3z,1,1,0|x02g40,26,8,1|xb8arz,26,8,1|xb8as0,1,1,0|xisirz,1,1,0|xisis0,26,8,1|xtydfz,26,8,1|xtydg0,1,1,0|y1ilfz,1,1,0|y1ilg0,26,8,1|ycog3z,26,8,1|ycog40,1,1,0|yklmrz,1,1,0|yklms0,26,8,1|yveirz,26,8,1|yveis0,1,1,0|z3bpfz,1,1,0|z3bpg0,26,8,1|ze4lfz,26,8,1|ze4lg0,1,1,0|zm1s3z,1,1,0|zm1s40,26,8,1|zx7mrz,26,8,1|zx7ms0,1,1,0|104rurz,1,1,0|104rus0,26,8,1|10fxpfz,26,8,1|10fxpg0,1,1,0|10nhxfz,1,1,0|10nhxg0,26,8,1|10yns3z,26,8,1|10yns40,1,1,0|116kyrz,1,1,0|116kys0,26,8,1|11hdurz,26,8,1|11hdus0,1,1,0|11pb1fz,1,1,0|11pb1g0,26,8,1|1203xfz,26,8,1|1203xg0,1,1,0|128143z,1,1,0|1281440,26,8,1|12iu03z,26,8,1|12iu040,1,1,0|12qr6rz,1,1,0|12qr6s0,26,8,1|131x1fz,26,8,1|131x1g0,1,1,0|139h9fz,1,1,0|139h9g0,26,8,1|13kn43z,26,8,1|13kn440,1,1,0|13s7c3z,1,1,0|13s7c40,26,8,1|143d6rz,26,8,1|143d6s0,1,1,0|14badfz,1,1,0|14badg0,26,8,1|14m39fz,26,8,1|14m39g0,1,1,0|14u0g3z,1,1,0|14u0g40,26,8,1|154tc3z,26,8,1|154tc40,1,1,0|15cqirz,1,1,0|15cqis0,26,8,1|15nwdfz,26,8,1|15nwdg0,1,1,0|15vglfz,1,1,0|15vglg0,26,8,1|166mg3z,26,8,1|166mg40,1,1,0|16e6o3z,1,1,0|16e6o40,26,8,1|16pcirz,26,8,1|16pcis0,1,1,0|16x9pfz,1,1,0|16x9pg0,26,8,1|1782lfz,26,8,1|1782lg0,1,1,0|17fzs3z,1,1,0|17fzs40,26,8,1|17qso3z,26,8,1|17qso40,1,1,0|17ypurz,1,1,0|17ypus0,26,8,1|189iqrz,26,8,1|189iqs0,1,1,0|18hfxfz,1,1,0|18hfxg0,26,8,1|18sls3z,26,8,1|18sls40,1,1,0|190603z,1,1,0|1906040,26,8,1|19bburz,26,8,1|19bbus0,1,1,0|19iw2rz,1,1,0|19iw2s0,26,8,1|19u1xfz,26,8,1|19u1xg0,1,1,0|1a1z43z,1,1,0|1a1z440,26,8,1|1acs03z,26,8,1|1acs040,1,1,0|1akp6rz,1,1,0|1akp6s0,26,8,1|1avi2rz,26,8,1|1avi2s0,1,1,0|1b3f9fz,1,1,0|1b3f9g0,26,8,1|1bel43z,26,8,1|1bel440,1,1,0|1bm5c3z,1,1,0|1bm5c40,26,8,1|1bxb6rz,26,8,1|1bxb6s0,1,1,0|1c4verz,1,1,0|1c4ves0,26,8,1|1cg19fz,26,8,1|1cg19g0,1,1,0|1cnlhfz,1,1,0|1cnlhg0,26,8,1|1cyrc3z,26,8,1|1cyrc40,1,1,0|1d6oirz,1,1,0|1d6ois0,26,8,1|1dhherz,26,8,1|1dhhes0,1,1,0|1dpelfz,1,1,0|1dpelg0,26,8,1|1e07hfz,26,8,1|1e07hg0,1,1,0|1e84o3z,1,1,0|1e84o40,26,8,1|1ejairz,26,8,1|1ejais0,1,1,0|1equqrz,1,1,0|1equqs0,26,8,1|1f20lfz,26,8,1|1f20lg0,1,1,0|1f9ktfz,1,1,0|1f9ktg0,26,8,1|1fkqo3z,26,8,1|1fkqo40,1,1,0|1fsnurz,1,1,0|1fsnus0,26,8,1|1g3gqrz,26,8,1|1g3gqs0,1,1,0|1gbdxfz,1,1,0|1gbdxg0,26,8,1|1gm6tfz,26,8,1|1gm6tg0,1,1,0|1gu403z,1,1,0|1gu4040,26,8,1|1h4ww3z,26,8,1|1h4ww40,1,1,0|1hcu2rz,1,1,0|1hcu2s0,26,8,1|1hnzxfz,26,8,1|1hnzxg0,1,1,0|1hvk5fz,1,1,0|1hvk5g0,26,8,1|1i6q03z,26,8,1|1i6q040,1,1,0|1iea83z,1,1,0|1iea840,26,8,1|1ipg2rz,26,8,1|1ipg2s0,1,1,0|1ixd9fz,1,1,0|1ixd9g0,26,8,1|1j865fz,26,8,1|1j865g0,1,1,0|1jg3c3z,1,1,0|1jg3c40,26,8,1|1jqw83z,26,8,1|1jqw840,1,1,0|1jyterz,1,1,0|1jytes0,26,8,1|1k9z9fz,26,8,1|1k9z9g0,1,1,0|1khjhfz,1,1,0|1khjhg0,26,8,1|1kspc3z,26,8,1|1kspc40,1,1,0|1l09k3z,1,1,0|1l09k40,26,8,1|1lbferz,26,8,1|1lbfes0,1,1,0|1ljclfz,1,1,0|1ljclg0,26,8,1|1lu5hfz,26,8,1|1lu5hg0,1,1,0|1m22o3z,1,1,0|1m22o40,26,8,1|1mcvk3z,26,8,1|1mcvk40,1,1,0|1mksqrz,1,1,0|1mksqs0,26,8,1|1mvlmrz,26,8,1|1mvlms0,1,1,0|1n3itfz,1,1,0|1n3itg0,26,8,1|1neoo3z,26,8,1|1neoo40,1,1,0|1nm8w3z,1,1,0|1nm8w40,26,8,1|1nxeqrz,26,8,1|1nxeqs0,1,1,0|1o4yyrz,1,1,0|1o4yys0,26,8,1|1og4tfz,26,8,1|1og4tg0,1,1,0|1oo203z,1,1,0|1oo2040,26,8,1|1oyuw3z,26,8,1|1oyuw40,1,1,0|1p6s2rz,1,1,0|1p6s2s0,26,8,1|1phkyrz,26,8,1|1phkys0,1,1,0|1ppi5fz,1,1,0|1ppi5g0,26,8,1|1q0o03z,26,8,1|1q0o040,1,1,0|1q8883z,1,1,0|1q88840,26,8,1|1qje2rz,26,8,1|1qje2s0,1,1,0|1qqyarz,1,1,0|1qqyas0,26,8,1|1r245fz,26,8,1|1r245g0,1,1,0|1r9odfz,1,1,0|1r9odg0,26,8,1|1rku83z,26,8,1|1rku840,1,1,0|1rsrerz,1,1,0|1rsres0,26,8,1|1s3karz,26,8,1|1s3kas0,1,1,0|1sbhhfz,1,1,0|1sbhhg0,26,8,1|1smadfz,26,8,1|1smadg0,1,1,0|1su7k3z,1,1,0|1su7k40,26,8,1|1t5derz,26,8,1|1t5des0,1,1,0|1tcxmrz,1,1,0|1tcxms0,26,8,1|1to3hfz,26,8,1|1to3hg0,1,1,0|1tvnpfz,1,1,0|1tvnpg0,26,8,1|1u6tk3z,26,8,1|1u6tk40,1,1,0|1ueqqrz,1,1,0|1ueqqs0,26,8,1|1upjmrz,26,8,1|1upjms0,1,1,0|1uxgtfz,1,1,0|1uxgtg0,26,8,1|1v89pfz,26,8,1|1v89pg0,1,1,0|1vg6w3z,1,1,0|1vg6w40,26,8,1|1vqzs3z,26,8,1|1vqzs40,1,1,0|NaN,1,1,0",
        "Europe/Istanbul|,0,330,0|-1ayy815,0,330,0|-1ayy814,115,331,0|-ux9xex,115,331,0|-ux9xew,14,9,0|-s0e081,14,9,0|-s0e080,15,4,1|-rsir01,15,4,1|-rsir00,14,9,0|-pyzew1,14,9,0|-pyzew0,15,4,1|-po4r01,15,4,1|-po4r00,14,9,0|-pfwdk1,14,9,0|-pfwdk0,15,4,1|-p6hkc1,15,4,1|-p6hkc0,14,9,0|-oxj9k1,14,9,0|-oxj9k0,15,4,1|-ongdo1,15,4,1|-ongdo0,14,9,0|-ntgo81,14,9,0|-ntgo80,15,4,1|-nm7n01,15,4,1|-nm7n00,14,9,0|-nbayw1,14,9,0|-nbayw0,15,4,1|-n3fpo1,15,4,1|-n3fpo0,14,9,0|-febpk1,14,9,0|-febpk0,15,4,1|-f9c5o1,15,4,1|-f9c5o0,14,9,0|-f6gdk1,14,9,0|-f6gdk0,15,4,1|-erc0c1,15,4,1|-erc0c0,14,9,0|-ehgdk1,14,9,0|-ehgdk0,15,4,1|-cnaz01,15,4,1|-cnaz00,14,9,0|-cb5uw1,14,9,0|-cb5uw0,15,4,1|-c4w0c1,15,4,1|-c4w0c0,14,9,0|-bujpk1,14,9,0|-bujpk0,15,4,1|-blwoc1,15,4,1|-blwoc0,14,9,0|-bbtmw1,14,9,0|-bbtmw0,15,4,1|-b36lo1,15,4,1|-b36lo0,14,9,0|-atgiw1,14,9,0|-atgiw0,15,4,1|-akgj01,15,4,1|-akgj00,14,9,0|-aadhk1,14,9,0|-aadhk0,15,4,1|-a1dho1,15,4,1|-a1dho0,14,9,0|-9rag81,14,9,0|-9rag80,15,4,1|-9inf01,15,4,1|-9inf00,14,9,0|-3wa5k1,14,9,0|-3wa5k0,15,4,1|-3805o1,15,4,1|-3805o0,14,9,0|-2xtew1,14,9,0|-2xtew0,15,4,1|-2qo301,15,4,1|-2qo300,14,9,0|1s8vvz,14,9,0|1s8vw0,15,4,1|2062jz,15,4,1|2062k0,14,9,0|27qdbz,14,9,0|27qdc0,15,4,1|2iw57z,15,4,1|2iw580,14,9,0|2q1mnz,14,9,0|2q1mo0,15,4,1|31m7vz,15,4,1|31m7w0,14,9,0|38tjzz,14,9,0|38tk00,15,4,1|3kcajz,15,4,1|3kcak0,14,9,0|3s9jzz,14,9,0|3s9k00,15,4,1|42cfvz,15,4,1|42cfw0,14,9,0|4azmnz,14,9,0|4azmo0,15,4,1|4ficzz,15,4,1|4fid00,96,4,0|73397z,96,4,0|733980,102,201,1|76bufz,102,201,1|76bug0,96,4,0|7qp97z,96,4,0|7qp980,14,9,0|7zg2jz,14,9,0|7zg2k0,15,4,1|87q7vz,15,4,1|87q7w0,14,9,0|8h53vz,14,9,0|8h53w0,15,4,1|8qi57z,15,4,1|8qi580,14,9,0|8zv6jz,14,9,0|8zv6k0,15,4,1|9987vz,15,4,1|9987w0,14,9,0|9il97z,14,9,0|9il980,15,4,1|9ryajz,15,4,1|9ryak0,14,9,0|a1bbvz,14,9,0|a1bbw0,15,4,1|aaod7z,15,4,1|aaod80,14,9,0|ak1ejz,14,9,0|ak1ek0,15,4,1|atrejz,15,4,1|atrek0,14,9,0|b34fvz,14,9,0|b34fw0,15,4,1|bchh7z,15,4,1|bchh80,14,9,0|bluijz,14,9,0|bluik0,15,4,1|bv7jvz,15,4,1|bv7jw0,14,9,0|c4kl7z,14,9,0|c4kl80,15,4,1|cdxmjz,15,4,1|cdxmk0,14,9,0|cmxp7z,14,9,0|cmxp80,15,4,1|cwnp7z,15,4,1|cwnp80,14,9,0|d60qjz,14,9,0|d60qk0,15,4,1|dfdrvz,15,4,1|dfdrw0,14,9,0|dp3rvz,14,9,0|dp3rw0,15,4,1|dzwnvz,15,4,1|dzwnw0,14,9,0|e7tujz,14,9,0|e7tuk0,15,4,1|eimqjz,15,4,1|eimqk0,14,9,0|eqjx7z,14,9,0|eqjx80,15,4,1|f1ct7z,15,4,1|f1ct80,14,9,0|f99zvz,14,9,0|f99zw0,15,4,1|fkfujz,15,4,1|fkfuk0,14,9,0|fs02jz,14,9,0|fs02k0,15,4,1|g35x7z,15,4,1|g35x80,14,9,0|gaq57z,14,9,0|gaq580,15,4,1|glvzvz,15,4,1|glvzw0,14,9,0|gtt6jz,14,9,0|gtt6k0,15,4,1|h4m2jz,15,4,1|h4m2k0,14,9,0|hcj97z,14,9,0|hcj980,15,4,1|hnc57z,15,4,1|hnc580,14,9,0|hv9bvz,14,9,0|hv9bw0,15,4,1|i6f6jz,15,4,1|i6f6k0,14,9,0|idzejz,14,9,0|idzek0,15,4,1|ip597z,15,4,1|ip5980,14,9,0|iwph7z,14,9,0|iwph80,15,4,1|j7vbvz,15,4,1|j7vbw0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|liqtfz,14,9,0|liqtg0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n3a03z,14,9,0|n3a040,15,4,1|ne11fz,15,4,1|ne11g0,14,9,0|nly83z,14,9,0|nly840,15,4,1|nxh1fz,15,4,1|nxh1g0,14,9,0|o4oarz,14,9,0|o4oas0,15,4,1|od3ozz,15,4,1|od3p00,96,4,0|NaN,96,4,0",
        "Europe/Jersey|,0,328,0|-1rprx9y,0,328,0|-1rprx9x,1,1,0|-rzcns1,1,1,0|-rzcns0,26,8,1|-rsid41,26,8,1|-rsid40,1,1,0|-risd41,1,1,0|-risd40,26,8,1|-ragd41,26,8,1|-ragd40,1,1,0|-r0s7s1,1,1,0|-r0s7s0,26,8,1|-qr0d41,26,8,1|-qr0d40,1,1,0|-qhp6g1,1,1,0|-qhp6g0,26,8,1|-q8aag1,26,8,1|-q8aag0,1,1,0|-pyz3s1,1,1,0|-pyz3s0,26,8,1|-po4d41,26,8,1|-po4d40,1,1,0|-pfw2g1,1,1,0|-pfw2g0,26,8,1|-p6h6g1,26,8,1|-p6h6g0,1,1,0|-oxiyg1,1,1,0|-oxiyg0,26,8,1|-onfzs1,26,8,1|-onfzs0,1,1,0|-odd141,1,1,0|-odd140,26,8,1|-o5st41,26,8,1|-o5st40,1,1,0|-nuzx41,1,1,0|-nuzx40,26,8,1|-nmprs1,26,8,1|-nmprs0,1,1,0|-nbwvs1,1,1,0|-nbwvs0,26,8,1|-n39rs1,26,8,1|-n39rs0,1,1,0|-mt6t41,1,1,0|-mt6t40,26,8,1|-mkjp41,26,8,1|-mkjp40,1,1,0|-matp41,1,1,0|-matp40,26,8,1|-m1tmg1,26,8,1|-m1tmg0,1,1,0|-lrdp41,1,1,0|-lrdp40,26,8,1|-liql41,26,8,1|-liql40,1,1,0|-l8nmg1,1,1,0|-l8nmg0,26,8,1|-l00ig1,26,8,1|-l00ig0,1,1,0|-kqaig1,1,1,0|-kqaig0,26,8,1|-khafs1,26,8,1|-khafs0,1,1,0|-k77h41,1,1,0|-k77h40,26,8,1|-jykd41,26,8,1|-jykd40,1,1,0|-joheg1,1,1,0|-joheg0,26,8,1|-jfuag1,26,8,1|-jfuag0,1,1,0|-j64ag1,1,1,0|-j64ag0,26,8,1|-iwr941,26,8,1|-iwr940,1,1,0|-imoag1,1,1,0|-imoag0,26,8,1|-ie16g1,26,8,1|-ie16g0,1,1,0|-i4b6g1,1,1,0|-i4b6g0,26,8,1|-hvb3s1,26,8,1|-hvb3s0,1,1,0|-hl8541,1,1,0|-hl8540,26,8,1|-hcl141,26,8,1|-hcl140,1,1,0|-h2i2g1,1,1,0|-h2i2g0,26,8,1|-gtuyg1,26,8,1|-gtuyg0,1,1,0|-gk4yg1,1,1,0|-gk4yg0,26,8,1|-gb4vs1,26,8,1|-gb4vs0,1,1,0|-g11x41,1,1,0|-g11x40,26,8,1|-fpw2g1,26,8,1|-fpw2g0,1,1,0|-fkul41,1,1,0|-fkul40,26,8,1|-eyiyk1,26,8,1|-eyiyk0,146,9,1|-ethh81,146,9,1|-ethh80,26,8,1|-eh8qk1,26,8,1|-eh8qk0,146,9,1|-earek1,146,9,1|-earek0,26,8,1|-dyinw1,26,8,1|-dyinw0,146,9,1|-drod81,146,9,1|-drod80,26,8,1|-dfsl81,26,8,1|-dfsl80,146,9,1|-d75h81,146,9,1|-d75h80,26,8,1|-cx0nw1,26,8,1|-cx0nw0,146,9,1|-cro2k1,146,9,1|-cro2k0,26,8,1|-cncfs1,26,8,1|-cncfs0,1,1,0|-cdmfs1,1,1,0|-cdmfs0,26,8,1|-c4md41,26,8,1|-c4md40,1,1,0|-bwc7s1,1,1,0|-bwc7s0,26,8,1|-buwfw1,26,8,1|-buwfw0,146,9,1|-bos2k1,146,9,1|-bos2k0,26,8,1|-bkgfs1,26,8,1|-bkgfs0,1,1,0|-bdm541,1,1,0|-bdm540,26,8,1|-b1qd41,26,8,1|-b1qd40,1,1,0|-att6g1,1,1,0|-att6g0,26,8,1|-aj0ag1,26,8,1|-aj0ag0,1,1,0|-aad6g1,1,1,0|-aad6g0,26,8,1|-a0n6g1,26,8,1|-a0n6g0,1,1,0|-9rn3s1,1,1,0|-9rn3s0,26,8,1|-9hx3s1,26,8,1|-9hx3s0,1,1,0|-98k2g1,1,1,0|-98k2g0,26,8,1|-8yu2g1,26,8,1|-8yu2g0,1,1,0|-8ptzs1,1,1,0|-8ptzs0,26,8,1|-8h6vs1,26,8,1|-8h6vs0,1,1,0|-87gvs1,1,1,0|-87gvs0,26,8,1|-7ygt41,26,8,1|-7ygt40,1,1,0|-7odug1,1,1,0|-7odug0,26,8,1|-7fqqg1,26,8,1|-7fqqg0,1,1,0|-75at41,1,1,0|-75at40,26,8,1|-6wnp41,26,8,1|-6wnp40,1,1,0|-6mxp41,1,1,0|-6mxp40,26,8,1|-6dxmg1,26,8,1|-6dxmg0,1,1,0|-63uns1,1,1,0|-63uns0,26,8,1|-5v7js1,26,8,1|-5v7js0,1,1,0|-5l4l41,1,1,0|-5l4l40,26,8,1|-5chh41,26,8,1|-5chh40,1,1,0|-52rh41,1,1,0|-52rh40,26,8,1|-4treg1,26,8,1|-4treg0,1,1,0|-4krbs1,1,1,0|-4krbs0,26,8,1|-49lh41,26,8,1|-49lh40,1,1,0|-421941,1,1,0|-421940,26,8,1|-3qveg1,26,8,1|-3qveg0,1,1,0|-3iy7s1,1,1,0|-3iy7s0,26,8,1|-385bs1,26,8,1|-385bs0,1,1,0|-30l3s1,1,1,0|-30l3s0,26,8,1|-2pf941,26,8,1|-2pf940,1,1,0|-2hv141,1,1,0|-2hv140,26,8,1|-26p6g1,26,8,1|-26p6g0,1,1,0|-1z4yg1,1,1,0|-1z4yg0,26,8,1|-1nz3s1,26,8,1|-1nz3s0,1,1,0|-1gevs1,1,1,0|-1gevs0,26,8,1|-14w2g1,26,8,1|-14w2g0,1,1,0|-z4ns1,1,1,0|-z4ns0,26,8,1|-m6841,26,8,1|-m6840,26,8,0|yd6vz,26,8,0|yd6w0,1,1,0|15kg7z,1,1,0|15kg80,26,8,1|1h39jz,26,8,1|1h39k0,1,1,0|1oaivz,1,1,0|1oaiw0,26,8,1|1ztc7z,26,8,1|1ztc80,1,1,0|270ljz,1,1,0|270lk0,26,8,1|2ijevz,26,8,1|2ijew0,1,1,0|2pqo7z,1,1,0|2pqo80,26,8,1|319hjz,26,8,1|319hk0,1,1,0|38tpjz,1,1,0|38tpk0,26,8,1|3jzk7z,26,8,1|3jzk80,1,1,0|3rjs7z,1,1,0|3rjs80,26,8,1|42pmvz,26,8,1|42pmw0,1,1,0|4a9uvz,1,1,0|4a9uw0,26,8,1|4lso7z,26,8,1|4lso80,1,1,0|4szxjz,1,1,0|4szxk0,26,8,1|54iqvz,26,8,1|54iqw0,1,1,0|5bq07z,1,1,0|5bq080,26,8,1|5n8tjz,26,8,1|5n8tk0,1,1,0|5v5xfz,1,1,0|5v5xg0,26,8,1|65ytfz,26,8,1|65ytg0,1,1,0|6dw03z,1,1,0|6dw040,26,8,1|6oow3z,26,8,1|6oow40,1,1,0|6wm2rz,1,1,0|6wm2s0,26,8,1|77eyrz,26,8,1|77eys0,1,1,0|7fc5fz,1,1,0|7fc5g0,26,8,1|7qi03z,26,8,1|7qi040,1,1,0|7yf6rz,1,1,0|7yf6s0,26,8,1|8982rz,26,8,1|8982s0,1,1,0|8h59fz,1,1,0|8h59g0,26,8,1|8ry5fz,26,8,1|8ry5g0,1,1,0|8zvc3z,1,1,0|8zvc40,26,8,1|9ao83z,26,8,1|9ao840,1,1,0|9ilerz,1,1,0|9iles0,26,8,1|9tearz,26,8,1|9teas0,1,1,0|a1bhfz,1,1,0|a1bhg0,26,8,1|achc3z,26,8,1|achc40,1,1,0|ak1k3z,1,1,0|ak1k40,26,8,1|av7erz,26,8,1|av7es0,1,1,0|b34lfz,1,1,0|b34lg0,26,8,1|bdxhfz,26,8,1|bdxhg0,1,1,0|bluo3z,1,1,0|bluo40,26,8,1|bwnk3z,26,8,1|bwnk40,1,1,0|c4kqrz,1,1,0|c4kqs0,26,8,1|cfdmrz,26,8,1|cfdms0,1,1,0|cnatfz,1,1,0|cnatg0,26,8,1|cy3pfz,26,8,1|cy3pg0,1,1,0|d60w3z,1,1,0|d60w40,26,8,1|dgts3z,26,8,1|dgts40,1,1,0|dp3xfz,1,1,0|dp3xg0,26,8,1|dzwtfz,26,8,1|dzwtg0,1,1,0|e7u03z,1,1,0|e7u040,26,8,1|eimw3z,26,8,1|eimw40,1,1,0|eqk2rz,1,1,0|eqk2s0,26,8,1|f1cyrz,26,8,1|f1cys0,1,1,0|f9a5fz,1,1,0|f9a5g0,26,8,1|fkg03z,26,8,1|fkg040,1,1,0|fs083z,1,1,0|fs0840,26,8,1|g362rz,26,8,1|g362s0,1,1,0|gaqarz,1,1,0|gaqas0,26,8,1|glw5fz,26,8,1|glw5g0,1,1,0|gttc3z,1,1,0|gttc40,26,8,1|h4m83z,26,8,1|h4m840,1,1,0|hcjerz,1,1,0|hcjes0,26,8,1|hncarz,26,8,1|hncas0,1,1,0|hv9hfz,1,1,0|hv9hg0,26,8,1|i6fc3z,26,8,1|i6fc40,1,1,0|idzk3z,1,1,0|idzk40,26,8,1|ip5erz,26,8,1|ip5es0,1,1,0|iwpmrz,1,1,0|iwpms0,26,8,1|j7vhfz,26,8,1|j7vhg0,1,1,0|jffpfz,1,1,0|jffpg0,26,8,1|jqlk3z,26,8,1|jqlk40,1,1,0|jyiqrz,1,1,0|jyiqs0,26,8,1|k9bmrz,26,8,1|k9bms0,1,1,0|kh8tfz,1,1,0|kh8tg0,26,8,1|ks1pfz,26,8,1|ks1pg0,1,1,0|kzyw3z,1,1,0|kzyw40,26,8,1|lb4qrz,26,8,1|lb4qs0,1,1,0|lioyrz,1,1,0|lioys0,26,8,1|ltutfz,26,8,1|ltutg0,1,1,0|m1f1fz,1,1,0|m1f1g0,26,8,1|mckw3z,26,8,1|mckw40,1,1,0|mki2rz,1,1,0|mki2s0,26,8,1|mvayrz,26,8,1|mvays0,1,1,0|n385fz,1,1,0|n385g0,26,8,1|ne11fz,26,8,1|ne11g0,1,1,0|nly83z,1,1,0|nly840,26,8,1|nwr43z,26,8,1|nwr440,1,1,0|o4oarz,1,1,0|o4oas0,26,8,1|ofu5fz,26,8,1|ofu5g0,1,1,0|onedfz,1,1,0|onedg0,26,8,1|oyk83z,26,8,1|oyk840,1,1,0|p64g3z,1,1,0|p64g40,26,8,1|phaarz,26,8,1|phaas0,1,1,0|pp7hfz,1,1,0|pp7hg0,26,8,1|q00dfz,26,8,1|q00dg0,1,1,0|q7xk3z,1,1,0|q7xk40,26,8,1|qiqg3z,26,8,1|qiqg40,1,1,0|qqnmrz,1,1,0|qqnms0,26,8,1|r1thfz,26,8,1|r1thg0,1,1,0|r9dpfz,1,1,0|r9dpg0,26,8,1|rkjk3z,26,8,1|rkjk40,1,1,0|rs3s3z,1,1,0|rs3s40,26,8,1|s39mrz,26,8,1|s39ms0,1,1,0|sb6tfz,1,1,0|sb6tg0,26,8,1|slzpfz,26,8,1|slzpg0,1,1,0|stww3z,1,1,0|stww40,26,8,1|t4ps3z,26,8,1|t4ps40,1,1,0|tcmyrz,1,1,0|tcmys0,26,8,1|tnfurz,26,8,1|tnfus0,1,1,0|tvd1fz,1,1,0|tvd1g0,26,8,1|u6iw3z,26,8,1|u6iw40,1,1,0|ue343z,1,1,0|ue3440,26,8,1|up8yrz,26,8,1|up8ys0,1,1,0|uwt6rz,1,1,0|uwt6s0,26,8,1|v7z1fz,26,8,1|v7z1g0,1,1,0|vfw83z,1,1,0|vfw840,26,8,1|vqp43z,26,8,1|vqp440,1,1,0|vymarz,1,1,0|vymas0,26,8,1|w9f6rz,26,8,1|w9f6s0,1,1,0|whcdfz,1,1,0|whcdg0,26,8,1|wsi83z,26,8,1|wsi840,1,1,0|x02g3z,1,1,0|x02g40,26,8,1|xb8arz,26,8,1|xb8as0,1,1,0|xisirz,1,1,0|xisis0,26,8,1|xtydfz,26,8,1|xtydg0,1,1,0|y1ilfz,1,1,0|y1ilg0,26,8,1|ycog3z,26,8,1|ycog40,1,1,0|yklmrz,1,1,0|yklms0,26,8,1|yveirz,26,8,1|yveis0,1,1,0|z3bpfz,1,1,0|z3bpg0,26,8,1|ze4lfz,26,8,1|ze4lg0,1,1,0|zm1s3z,1,1,0|zm1s40,26,8,1|zx7mrz,26,8,1|zx7ms0,1,1,0|104rurz,1,1,0|104rus0,26,8,1|10fxpfz,26,8,1|10fxpg0,1,1,0|10nhxfz,1,1,0|10nhxg0,26,8,1|10yns3z,26,8,1|10yns40,1,1,0|116kyrz,1,1,0|116kys0,26,8,1|11hdurz,26,8,1|11hdus0,1,1,0|11pb1fz,1,1,0|11pb1g0,26,8,1|1203xfz,26,8,1|1203xg0,1,1,0|128143z,1,1,0|1281440,26,8,1|12iu03z,26,8,1|12iu040,1,1,0|12qr6rz,1,1,0|12qr6s0,26,8,1|131x1fz,26,8,1|131x1g0,1,1,0|139h9fz,1,1,0|139h9g0,26,8,1|13kn43z,26,8,1|13kn440,1,1,0|13s7c3z,1,1,0|13s7c40,26,8,1|143d6rz,26,8,1|143d6s0,1,1,0|14badfz,1,1,0|14badg0,26,8,1|14m39fz,26,8,1|14m39g0,1,1,0|14u0g3z,1,1,0|14u0g40,26,8,1|154tc3z,26,8,1|154tc40,1,1,0|15cqirz,1,1,0|15cqis0,26,8,1|15nwdfz,26,8,1|15nwdg0,1,1,0|15vglfz,1,1,0|15vglg0,26,8,1|166mg3z,26,8,1|166mg40,1,1,0|16e6o3z,1,1,0|16e6o40,26,8,1|16pcirz,26,8,1|16pcis0,1,1,0|16x9pfz,1,1,0|16x9pg0,26,8,1|1782lfz,26,8,1|1782lg0,1,1,0|17fzs3z,1,1,0|17fzs40,26,8,1|17qso3z,26,8,1|17qso40,1,1,0|17ypurz,1,1,0|17ypus0,26,8,1|189iqrz,26,8,1|189iqs0,1,1,0|18hfxfz,1,1,0|18hfxg0,26,8,1|18sls3z,26,8,1|18sls40,1,1,0|190603z,1,1,0|1906040,26,8,1|19bburz,26,8,1|19bbus0,1,1,0|19iw2rz,1,1,0|19iw2s0,26,8,1|19u1xfz,26,8,1|19u1xg0,1,1,0|1a1z43z,1,1,0|1a1z440,26,8,1|1acs03z,26,8,1|1acs040,1,1,0|1akp6rz,1,1,0|1akp6s0,26,8,1|1avi2rz,26,8,1|1avi2s0,1,1,0|1b3f9fz,1,1,0|1b3f9g0,26,8,1|1bel43z,26,8,1|1bel440,1,1,0|1bm5c3z,1,1,0|1bm5c40,26,8,1|1bxb6rz,26,8,1|1bxb6s0,1,1,0|1c4verz,1,1,0|1c4ves0,26,8,1|1cg19fz,26,8,1|1cg19g0,1,1,0|1cnlhfz,1,1,0|1cnlhg0,26,8,1|1cyrc3z,26,8,1|1cyrc40,1,1,0|1d6oirz,1,1,0|1d6ois0,26,8,1|1dhherz,26,8,1|1dhhes0,1,1,0|1dpelfz,1,1,0|1dpelg0,26,8,1|1e07hfz,26,8,1|1e07hg0,1,1,0|1e84o3z,1,1,0|1e84o40,26,8,1|1ejairz,26,8,1|1ejais0,1,1,0|1equqrz,1,1,0|1equqs0,26,8,1|1f20lfz,26,8,1|1f20lg0,1,1,0|1f9ktfz,1,1,0|1f9ktg0,26,8,1|1fkqo3z,26,8,1|1fkqo40,1,1,0|1fsnurz,1,1,0|1fsnus0,26,8,1|1g3gqrz,26,8,1|1g3gqs0,1,1,0|1gbdxfz,1,1,0|1gbdxg0,26,8,1|1gm6tfz,26,8,1|1gm6tg0,1,1,0|1gu403z,1,1,0|1gu4040,26,8,1|1h4ww3z,26,8,1|1h4ww40,1,1,0|1hcu2rz,1,1,0|1hcu2s0,26,8,1|1hnzxfz,26,8,1|1hnzxg0,1,1,0|1hvk5fz,1,1,0|1hvk5g0,26,8,1|1i6q03z,26,8,1|1i6q040,1,1,0|1iea83z,1,1,0|1iea840,26,8,1|1ipg2rz,26,8,1|1ipg2s0,1,1,0|1ixd9fz,1,1,0|1ixd9g0,26,8,1|1j865fz,26,8,1|1j865g0,1,1,0|1jg3c3z,1,1,0|1jg3c40,26,8,1|1jqw83z,26,8,1|1jqw840,1,1,0|1jyterz,1,1,0|1jytes0,26,8,1|1k9z9fz,26,8,1|1k9z9g0,1,1,0|1khjhfz,1,1,0|1khjhg0,26,8,1|1kspc3z,26,8,1|1kspc40,1,1,0|1l09k3z,1,1,0|1l09k40,26,8,1|1lbferz,26,8,1|1lbfes0,1,1,0|1ljclfz,1,1,0|1ljclg0,26,8,1|1lu5hfz,26,8,1|1lu5hg0,1,1,0|1m22o3z,1,1,0|1m22o40,26,8,1|1mcvk3z,26,8,1|1mcvk40,1,1,0|1mksqrz,1,1,0|1mksqs0,26,8,1|1mvlmrz,26,8,1|1mvlms0,1,1,0|1n3itfz,1,1,0|1n3itg0,26,8,1|1neoo3z,26,8,1|1neoo40,1,1,0|1nm8w3z,1,1,0|1nm8w40,26,8,1|1nxeqrz,26,8,1|1nxeqs0,1,1,0|1o4yyrz,1,1,0|1o4yys0,26,8,1|1og4tfz,26,8,1|1og4tg0,1,1,0|1oo203z,1,1,0|1oo2040,26,8,1|1oyuw3z,26,8,1|1oyuw40,1,1,0|1p6s2rz,1,1,0|1p6s2s0,26,8,1|1phkyrz,26,8,1|1phkys0,1,1,0|1ppi5fz,1,1,0|1ppi5g0,26,8,1|1q0o03z,26,8,1|1q0o040,1,1,0|1q8883z,1,1,0|1q88840,26,8,1|1qje2rz,26,8,1|1qje2s0,1,1,0|1qqyarz,1,1,0|1qqyas0,26,8,1|1r245fz,26,8,1|1r245g0,1,1,0|1r9odfz,1,1,0|1r9odg0,26,8,1|1rku83z,26,8,1|1rku840,1,1,0|1rsrerz,1,1,0|1rsres0,26,8,1|1s3karz,26,8,1|1s3kas0,1,1,0|1sbhhfz,1,1,0|1sbhhg0,26,8,1|1smadfz,26,8,1|1smadg0,1,1,0|1su7k3z,1,1,0|1su7k40,26,8,1|1t5derz,26,8,1|1t5des0,1,1,0|1tcxmrz,1,1,0|1tcxms0,26,8,1|1to3hfz,26,8,1|1to3hg0,1,1,0|1tvnpfz,1,1,0|1tvnpg0,26,8,1|1u6tk3z,26,8,1|1u6tk40,1,1,0|1ueqqrz,1,1,0|1ueqqs0,26,8,1|1upjmrz,26,8,1|1upjms0,1,1,0|1uxgtfz,1,1,0|1uxgtg0,26,8,1|1v89pfz,26,8,1|1v89pg0,1,1,0|1vg6w3z,1,1,0|1vg6w40,26,8,1|1vqzs3z,26,8,1|1vqzs40,1,1,0|NaN,1,1,0",
        "Europe/Kaliningrad|,0,317,0|-14212gp,0,317,0|-14212go,8,8,0|-s0e081,8,8,0|-s0e080,9,9,1|-rsilg1,9,9,1|-rsilg0,8,8,0|-ridmk1,8,8,0|-ridmk0,9,9,1|-ragfw1,9,9,1|-ragfw0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,8,8,0|-fizzw1,8,8,0|-fizzw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cwm2w1,9,9,1|-cwm2w0,14,9,0|-cvmw81,14,9,0|-cvmw80,15,4,1|-cm2j01,15,4,1|-cm2j00,14,9,0|-cdzpk1,14,9,0|-cdzpk0,143,4,0|5vb6bz,143,4,0|5vb6c0,144,201,1|64pzjz,144,201,1|64pzk0,143,4,0|6e33nz,143,4,0|6e33o0,144,201,1|6nhwvz,144,201,1|6nhww0,143,4,0|6wv0zz,143,4,0|6wv100,144,201,1|769u7z,144,201,1|769u80,143,4,0|7foszz,143,4,0|7fot00,144,201,1|7p1zvz,144,201,1|7p1zw0,143,4,0|7yf17z,143,4,0|7yf180,144,201,1|87s2jz,144,201,1|87s2k0,143,4,0|8h53vz,143,4,0|8h53w0,144,201,1|8qi57z,144,201,1|8qi580,143,4,0|8zv6jz,143,4,0|8zv6k0,144,201,1|9987vz,144,201,1|9987w0,143,4,0|9il97z,143,4,0|9il980,144,201,1|9ryajz,144,201,1|9ryak0,143,4,0|a1bbvz,143,4,0|a1bbw0,15,4,1|aaofzz,15,4,1|aaog00,14,9,0|ak1hbz,14,9,0|ak1hc0,15,4,1|atrhbz,15,4,1|atrhc0,14,9,0|b34inz,14,9,0|b34io0,15,4,1|bchjzz,15,4,1|bchk00,14,9,0|blulbz,14,9,0|blulc0,15,4,1|bv7mnz,15,4,1|bv7mo0,14,9,0|c4knzz,14,9,0|c4ko00,15,4,1|cdxpbz,15,4,1|cdxpc0,14,9,0|cnaqnz,14,9,0|cnaqo0,15,4,1|cwnrzz,15,4,1|cwns00,14,9,0|d60tbz,14,9,0|d60tc0,15,4,1|dfdunz,15,4,1|dfduo0,14,9,0|dp3unz,14,9,0|dp3uo0,15,4,1|dzwqnz,15,4,1|dzwqo0,14,9,0|e7txbz,14,9,0|e7txc0,15,4,1|eimtbz,15,4,1|eimtc0,14,9,0|eqjzzz,14,9,0|eqk000,15,4,1|f1cvzz,15,4,1|f1cw00,14,9,0|f9a2nz,14,9,0|f9a2o0,15,4,1|fkfxbz,15,4,1|fkfxc0,14,9,0|fs05bz,14,9,0|fs05c0,15,4,1|g35zzz,15,4,1|g36000,14,9,0|gaq7zz,14,9,0|gaq800,15,4,1|glw2nz,15,4,1|glw2o0,14,9,0|gtt9bz,14,9,0|gtt9c0,15,4,1|h4m5bz,15,4,1|h4m5c0,14,9,0|hcjbzz,14,9,0|hcjc00,15,4,1|hnc7zz,15,4,1|hnc800,14,9,0|hv9enz,14,9,0|hv9eo0,15,4,1|i6f9bz,15,4,1|i6f9c0,14,9,0|idzhbz,14,9,0|idzhc0,15,4,1|ip5bzz,15,4,1|ip5c00,14,9,0|iwpjzz,14,9,0|iwpk00,15,4,1|j7venz,15,4,1|j7veo0,14,9,0|jffmnz,14,9,0|jffmo0,15,4,1|jqlhbz,15,4,1|jqlhc0,14,9,0|jyinzz,14,9,0|jyio00,15,4,1|k9bjzz,15,4,1|k9bk00,14,9,0|kh8qnz,14,9,0|kh8qo0,15,4,1|ks1mnz,15,4,1|ks1mo0,14,9,0|kzytbz,14,9,0|kzytc0,15,4,1|lb4nzz,15,4,1|lb4o00,14,9,0|liovzz,14,9,0|liow00,96,4,0|ne0vvz,96,4,0|ne0vw0,14,9,0|NaN,14,9,0",
        "Europe/Kirov|,0,332,0|-qcx401,0,332,0|-qcx400,96,4,0|-kmr4c1,96,4,0|-kmr4c0,102,201,0|5vb3jz,102,201,0|5vb3k0,87,184,1|64pwrz,87,184,1|64pws0,102,201,0|6e30vz,102,201,0|6e30w0,87,184,1|6nhu3z,87,184,1|6nhu40,102,201,0|6wuy7z,102,201,0|6wuy80,87,184,1|769rfz,87,184,1|769rg0,102,201,0|7foq7z,102,201,0|7foq80,87,184,1|7p1x3z,87,184,1|7p1x40,102,201,0|7yeyfz,102,201,0|7yeyg0,87,184,1|87rzrz,87,184,1|87rzs0,102,201,0|8h513z,102,201,0|8h5140,87,184,1|8qi2fz,87,184,1|8qi2g0,102,201,0|8zv3rz,102,201,0|8zv3s0,87,184,1|99853z,87,184,1|998540,102,201,0|9il6fz,102,201,0|9il6g0,87,184,1|9ry7rz,87,184,1|9ry7s0,102,201,0|a1b93z,102,201,0|a1b940,144,201,1|aaod7z,144,201,1|aaod80,143,4,0|ak1ejz,143,4,0|ak1ek0,144,201,1|atrejz,144,201,1|atrek0,143,4,0|b34fvz,143,4,0|b34fw0,102,201,0|blufrz,102,201,0|blufs0,144,201,1|bv7jvz,144,201,1|bv7jw0,143,4,0|c4kl7z,143,4,0|c4kl80,144,201,1|cdxmjz,144,201,1|cdxmk0,143,4,0|cnanvz,143,4,0|cnanw0,144,201,1|cwnp7z,144,201,1|cwnp80,143,4,0|d60qjz,143,4,0|d60qk0,144,201,1|dfdrvz,144,201,1|dfdrw0,143,4,0|dp3rvz,143,4,0|dp3rw0,144,201,1|dzwnvz,144,201,1|dzwnw0,143,4,0|e7tujz,143,4,0|e7tuk0,144,201,1|eimqjz,144,201,1|eimqk0,143,4,0|eqjx7z,143,4,0|eqjx80,144,201,1|f1ct7z,144,201,1|f1ct80,143,4,0|f99zvz,143,4,0|f99zw0,144,201,1|fkfujz,144,201,1|fkfuk0,143,4,0|fs02jz,143,4,0|fs02k0,144,201,1|g35x7z,144,201,1|g35x80,143,4,0|gaq57z,143,4,0|gaq580,144,201,1|glvzvz,144,201,1|glvzw0,143,4,0|gtt6jz,143,4,0|gtt6k0,144,201,1|h4m2jz,144,201,1|h4m2k0,143,4,0|hcj97z,143,4,0|hcj980,144,201,1|hnc57z,144,201,1|hnc580,143,4,0|hv9bvz,143,4,0|hv9bw0,144,201,1|i6f6jz,144,201,1|i6f6k0,143,4,0|idzejz,143,4,0|idzek0,144,201,1|ip597z,144,201,1|ip5980,143,4,0|iwph7z,143,4,0|iwph80,144,201,1|j7vbvz,144,201,1|j7vbw0,143,4,0|jffjvz,143,4,0|jffjw0,144,201,1|jqlejz,144,201,1|jqlek0,143,4,0|jyil7z,143,4,0|jyil80,144,201,1|k9bh7z,144,201,1|k9bh80,143,4,0|kh8nvz,143,4,0|kh8nw0,144,201,1|ks1jvz,144,201,1|ks1jw0,143,4,0|kzyqjz,143,4,0|kzyqk0,144,201,1|lb4l7z,144,201,1|lb4l80,143,4,0|liot7z,143,4,0|liot80,143,201,0|ne0t3z,143,201,0|ne0t40,143,4,0|NaN,143,4,0",
        "Europe/Kyiv|,0,333,0|-1ayy8bh,0,333,0|-1ayy8bg,73,333,0|-nu11nh,73,333,0|-nu11ng,14,9,0|-kmr1k1,14,9,0|-kmr1k0,143,4,0|-erdv01,143,4,0|-erdv00,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dnetg1,8,8,0|-dnetg0,143,4,0|5vb6bz,143,4,0|5vb6c0,144,201,1|64pzjz,144,201,1|64pzk0,143,4,0|6e33nz,143,4,0|6e33o0,144,201,1|6nhwvz,144,201,1|6nhww0,143,4,0|6wv0zz,143,4,0|6wv100,144,201,1|769u7z,144,201,1|769u80,143,4,0|7foszz,143,4,0|7fot00,144,201,1|7p1zvz,144,201,1|7p1zw0,143,4,0|7yf17z,143,4,0|7yf180,144,201,1|87s2jz,144,201,1|87s2k0,143,4,0|8h53vz,143,4,0|8h53w0,144,201,1|8qi57z,144,201,1|8qi580,143,4,0|8zv6jz,143,4,0|8zv6k0,144,201,1|9987vz,144,201,1|9987w0,143,4,0|9il97z,143,4,0|9il980,144,201,1|9ryajz,144,201,1|9ryak0,143,4,0|a1bbvz,143,4,0|a1bbw0,144,201,1|aaod7z,144,201,1|aaod80,143,4,0|ak1ejz,143,4,0|ak1ek0,144,201,1|ap2t3z,144,201,1|ap2t40,15,4,1|bchjzz,15,4,1|bchk00,14,9,0|blulbz,14,9,0|blulc0,15,4,1|bv7mnz,15,4,1|bv7mo0,14,9,0|c4knzz,14,9,0|c4ko00,15,4,1|cdxpbz,15,4,1|cdxpc0,14,9,0|cnaqnz,14,9,0|cnaqo0,15,4,1|cwnrzz,15,4,1|cwns00,14,9,0|d60tbz,14,9,0|d60tc0,15,4,1|dfdunz,15,4,1|dfduo0,14,9,0|dp3unz,14,9,0|dp3uo0,15,4,1|dzwtfz,15,4,1|dzwtg0,14,9,0|e7u03z,14,9,0|e7u040,15,4,1|eimw3z,15,4,1|eimw40,14,9,0|eqk2rz,14,9,0|eqk2s0,15,4,1|f1cyrz,15,4,1|f1cys0,14,9,0|f9a5fz,14,9,0|f9a5g0,15,4,1|fkg03z,15,4,1|fkg040,14,9,0|fs083z,14,9,0|fs0840,15,4,1|g362rz,15,4,1|g362s0,14,9,0|gaqarz,14,9,0|gaqas0,15,4,1|glw5fz,15,4,1|glw5g0,14,9,0|gttc3z,14,9,0|gttc40,15,4,1|h4m83z,15,4,1|h4m840,14,9,0|hcjerz,14,9,0|hcjes0,15,4,1|hncarz,15,4,1|hncas0,14,9,0|hv9hfz,14,9,0|hv9hg0,15,4,1|i6fc3z,15,4,1|i6fc40,14,9,0|idzk3z,14,9,0|idzk40,15,4,1|ip5erz,15,4,1|ip5es0,14,9,0|iwpmrz,14,9,0|iwpms0,15,4,1|j7vhfz,15,4,1|j7vhg0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|lioyrz,14,9,0|lioys0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n385fz,14,9,0|n385g0,15,4,1|ne11fz,15,4,1|ne11g0,14,9,0|nly83z,14,9,0|nly840,15,4,1|nwr43z,15,4,1|nwr440,14,9,0|o4oarz,14,9,0|o4oas0,15,4,1|ofu5fz,15,4,1|ofu5g0,14,9,0|onedfz,14,9,0|onedg0,15,4,1|oyk83z,15,4,1|oyk840,14,9,0|p64g3z,14,9,0|p64g40,15,4,1|phaarz,15,4,1|phaas0,14,9,0|pp7hfz,14,9,0|pp7hg0,15,4,1|q00dfz,15,4,1|q00dg0,14,9,0|q7xk3z,14,9,0|q7xk40,15,4,1|qiqg3z,15,4,1|qiqg40,14,9,0|qqnmrz,14,9,0|qqnms0,15,4,1|r1thfz,15,4,1|r1thg0,14,9,0|r9dpfz,14,9,0|r9dpg0,15,4,1|rkjk3z,15,4,1|rkjk40,14,9,0|rs3s3z,14,9,0|rs3s40,15,4,1|s39mrz,15,4,1|s39ms0,14,9,0|sb6tfz,14,9,0|sb6tg0,15,4,1|slzpfz,15,4,1|slzpg0,14,9,0|stww3z,14,9,0|stww40,15,4,1|t4ps3z,15,4,1|t4ps40,14,9,0|tcmyrz,14,9,0|tcmys0,15,4,1|tnfurz,15,4,1|tnfus0,14,9,0|tvd1fz,14,9,0|tvd1g0,15,4,1|u6iw3z,15,4,1|u6iw40,14,9,0|ue343z,14,9,0|ue3440,15,4,1|up8yrz,15,4,1|up8ys0,14,9,0|uwt6rz,14,9,0|uwt6s0,15,4,1|v7z1fz,15,4,1|v7z1g0,14,9,0|vfw83z,14,9,0|vfw840,15,4,1|vqp43z,15,4,1|vqp440,14,9,0|vymarz,14,9,0|vymas0,15,4,1|w9f6rz,15,4,1|w9f6s0,14,9,0|whcdfz,14,9,0|whcdg0,15,4,1|wsi83z,15,4,1|wsi840,14,9,0|x02g3z,14,9,0|x02g40,15,4,1|xb8arz,15,4,1|xb8as0,14,9,0|xisirz,14,9,0|xisis0,15,4,1|xtydfz,15,4,1|xtydg0,14,9,0|y1ilfz,14,9,0|y1ilg0,15,4,1|ycog3z,15,4,1|ycog40,14,9,0|yklmrz,14,9,0|yklms0,15,4,1|yveirz,15,4,1|yveis0,14,9,0|z3bpfz,14,9,0|z3bpg0,15,4,1|ze4lfz,15,4,1|ze4lg0,14,9,0|zm1s3z,14,9,0|zm1s40,15,4,1|zx7mrz,15,4,1|zx7ms0,14,9,0|104rurz,14,9,0|104rus0,15,4,1|10fxpfz,15,4,1|10fxpg0,14,9,0|10nhxfz,14,9,0|10nhxg0,15,4,1|10yns3z,15,4,1|10yns40,14,9,0|116kyrz,14,9,0|116kys0,15,4,1|11hdurz,15,4,1|11hdus0,14,9,0|11pb1fz,14,9,0|11pb1g0,15,4,1|1203xfz,15,4,1|1203xg0,14,9,0|128143z,14,9,0|1281440,15,4,1|12iu03z,15,4,1|12iu040,14,9,0|12qr6rz,14,9,0|12qr6s0,15,4,1|131x1fz,15,4,1|131x1g0,14,9,0|139h9fz,14,9,0|139h9g0,15,4,1|13kn43z,15,4,1|13kn440,14,9,0|13s7c3z,14,9,0|13s7c40,15,4,1|143d6rz,15,4,1|143d6s0,14,9,0|14badfz,14,9,0|14badg0,15,4,1|14m39fz,15,4,1|14m39g0,14,9,0|14u0g3z,14,9,0|14u0g40,15,4,1|154tc3z,15,4,1|154tc40,14,9,0|15cqirz,14,9,0|15cqis0,15,4,1|15nwdfz,15,4,1|15nwdg0,14,9,0|15vglfz,14,9,0|15vglg0,15,4,1|166mg3z,15,4,1|166mg40,14,9,0|16e6o3z,14,9,0|16e6o40,15,4,1|16pcirz,15,4,1|16pcis0,14,9,0|16x9pfz,14,9,0|16x9pg0,15,4,1|1782lfz,15,4,1|1782lg0,14,9,0|17fzs3z,14,9,0|17fzs40,15,4,1|17qso3z,15,4,1|17qso40,14,9,0|17ypurz,14,9,0|17ypus0,15,4,1|189iqrz,15,4,1|189iqs0,14,9,0|18hfxfz,14,9,0|18hfxg0,15,4,1|18sls3z,15,4,1|18sls40,14,9,0|190603z,14,9,0|1906040,15,4,1|19bburz,15,4,1|19bbus0,14,9,0|19iw2rz,14,9,0|19iw2s0,15,4,1|19u1xfz,15,4,1|19u1xg0,14,9,0|1a1z43z,14,9,0|1a1z440,15,4,1|1acs03z,15,4,1|1acs040,14,9,0|1akp6rz,14,9,0|1akp6s0,15,4,1|1avi2rz,15,4,1|1avi2s0,14,9,0|1b3f9fz,14,9,0|1b3f9g0,15,4,1|1bel43z,15,4,1|1bel440,14,9,0|1bm5c3z,14,9,0|1bm5c40,15,4,1|1bxb6rz,15,4,1|1bxb6s0,14,9,0|1c4verz,14,9,0|1c4ves0,15,4,1|1cg19fz,15,4,1|1cg19g0,14,9,0|1cnlhfz,14,9,0|1cnlhg0,15,4,1|1cyrc3z,15,4,1|1cyrc40,14,9,0|1d6oirz,14,9,0|1d6ois0,15,4,1|1dhherz,15,4,1|1dhhes0,14,9,0|1dpelfz,14,9,0|1dpelg0,15,4,1|1e07hfz,15,4,1|1e07hg0,14,9,0|1e84o3z,14,9,0|1e84o40,15,4,1|1ejairz,15,4,1|1ejais0,14,9,0|1equqrz,14,9,0|1equqs0,15,4,1|1f20lfz,15,4,1|1f20lg0,14,9,0|1f9ktfz,14,9,0|1f9ktg0,15,4,1|1fkqo3z,15,4,1|1fkqo40,14,9,0|1fsnurz,14,9,0|1fsnus0,15,4,1|1g3gqrz,15,4,1|1g3gqs0,14,9,0|1gbdxfz,14,9,0|1gbdxg0,15,4,1|1gm6tfz,15,4,1|1gm6tg0,14,9,0|1gu403z,14,9,0|1gu4040,15,4,1|1h4ww3z,15,4,1|1h4ww40,14,9,0|1hcu2rz,14,9,0|1hcu2s0,15,4,1|1hnzxfz,15,4,1|1hnzxg0,14,9,0|1hvk5fz,14,9,0|1hvk5g0,15,4,1|1i6q03z,15,4,1|1i6q040,14,9,0|1iea83z,14,9,0|1iea840,15,4,1|1ipg2rz,15,4,1|1ipg2s0,14,9,0|1ixd9fz,14,9,0|1ixd9g0,15,4,1|1j865fz,15,4,1|1j865g0,14,9,0|1jg3c3z,14,9,0|1jg3c40,15,4,1|1jqw83z,15,4,1|1jqw840,14,9,0|1jyterz,14,9,0|1jytes0,15,4,1|1k9z9fz,15,4,1|1k9z9g0,14,9,0|1khjhfz,14,9,0|1khjhg0,15,4,1|1kspc3z,15,4,1|1kspc40,14,9,0|1l09k3z,14,9,0|1l09k40,15,4,1|1lbferz,15,4,1|1lbfes0,14,9,0|1ljclfz,14,9,0|1ljclg0,15,4,1|1lu5hfz,15,4,1|1lu5hg0,14,9,0|1m22o3z,14,9,0|1m22o40,15,4,1|1mcvk3z,15,4,1|1mcvk40,14,9,0|1mksqrz,14,9,0|1mksqs0,15,4,1|1mvlmrz,15,4,1|1mvlms0,14,9,0|1n3itfz,14,9,0|1n3itg0,15,4,1|1neoo3z,15,4,1|1neoo40,14,9,0|1nm8w3z,14,9,0|1nm8w40,15,4,1|1nxeqrz,15,4,1|1nxeqs0,14,9,0|1o4yyrz,14,9,0|1o4yys0,15,4,1|1og4tfz,15,4,1|1og4tg0,14,9,0|1oo203z,14,9,0|1oo2040,15,4,1|1oyuw3z,15,4,1|1oyuw40,14,9,0|1p6s2rz,14,9,0|1p6s2s0,15,4,1|1phkyrz,15,4,1|1phkys0,14,9,0|1ppi5fz,14,9,0|1ppi5g0,15,4,1|1q0o03z,15,4,1|1q0o040,14,9,0|1q8883z,14,9,0|1q88840,15,4,1|1qje2rz,15,4,1|1qje2s0,14,9,0|1qqyarz,14,9,0|1qqyas0,15,4,1|1r245fz,15,4,1|1r245g0,14,9,0|1r9odfz,14,9,0|1r9odg0,15,4,1|1rku83z,15,4,1|1rku840,14,9,0|1rsrerz,14,9,0|1rsres0,15,4,1|1s3karz,15,4,1|1s3kas0,14,9,0|1sbhhfz,14,9,0|1sbhhg0,15,4,1|1smadfz,15,4,1|1smadg0,14,9,0|1su7k3z,14,9,0|1su7k40,15,4,1|1t5derz,15,4,1|1t5des0,14,9,0|1tcxmrz,14,9,0|1tcxms0,15,4,1|1to3hfz,15,4,1|1to3hg0,14,9,0|1tvnpfz,14,9,0|1tvnpg0,15,4,1|1u6tk3z,15,4,1|1u6tk40,14,9,0|1ueqqrz,14,9,0|1ueqqs0,15,4,1|1upjmrz,15,4,1|1upjms0,14,9,0|1uxgtfz,14,9,0|1uxgtg0,15,4,1|1v89pfz,15,4,1|1v89pg0,14,9,0|1vg6w3z,14,9,0|1vg6w40,15,4,1|1vqzs3z,15,4,1|1vqzs40,14,9,0|NaN,14,9,0",
        "Europe/Lisbon|,0,27,0|-u9rhc1,0,27,0|-u9rhc0,6,1,0|-rxx1g1,6,1,0|-rxx1g0,7,8,1|-rqx401,7,8,1|-rqx400,6,1,0|-rkqw01,6,1,0|-rkqw00,7,8,1|-r90qs1,7,8,1|-r90qs0,6,1,0|-r1yyo1,6,1,0|-r1yyo0,7,8,1|-qq8tg1,7,8,1|-qq8tg0,6,1,0|-qj71c1,6,1,0|-qj71c0,7,8,1|-q7gw41,7,8,1|-q7gw40,6,1,0|-q0d9c1,6,1,0|-q0d9c0,7,8,1|-pon441,7,8,1|-pon440,6,1,0|-phlc01,6,1,0|-phlc00,7,8,1|-p5v6s1,7,8,1|-p5v6s0,6,1,0|-nusqs1,6,1,0|-nusqs0,7,8,1|-nm02s1,7,8,1|-nm02s0,6,1,0|-mt71g1,6,1,0|-mt71g0,7,8,1|-mkjxg1,7,8,1|-mkjxg0,6,1,0|-matxg1,6,1,0|-matxg0,7,8,1|-m1tus1,7,8,1|-m1tus0,6,1,0|-lrqw41,6,1,0|-lrqw40,7,8,1|-liqtg1,7,8,1|-liqtg0,6,1,0|-l8nus1,6,1,0|-l8nus0,7,8,1|-l00qs1,7,8,1|-l00qs0,6,1,0|-k77pg1,6,1,0|-k77pg0,7,8,1|-jyklg1,7,8,1|-jyklg0,6,1,0|-jp7k41,6,1,0|-jp7k40,7,8,1|-jfuis1,7,8,1|-jfuis0,6,1,0|-ineg41,6,1,0|-ineg40,7,8,1|-ie1es1,7,8,1|-ie1es0,6,1,0|-i51c41,6,1,0|-i51c40,7,8,1|-hvbc41,7,8,1|-hvbc40,6,1,0|-hl8dg1,6,1,0|-hl8dg0,7,8,1|-hcl9g1,7,8,1|-hcl9g0,6,1,0|-h38841,6,1,0|-h38840,7,8,1|-gtv6s1,7,8,1|-gtv6s0,6,1,0|-gkv441,6,1,0|-gkv440,7,8,1|-gb5441,7,8,1|-gb5440,6,1,0|-g125g1,6,1,0|-g125g0,7,8,1|-fpwas1,7,8,1|-fpwas0,6,1,0|-fkutg1,6,1,0|-fkutg0,7,8,1|-f98as1,7,8,1|-f98as0,6,1,0|-ezyys1,6,1,0|-ezyys0,7,8,1|-eqk2s1,7,8,1|-eqk2s0,6,1,0|-eibs41,6,1,0|-eibs40,7,8,1|-eg62w1,7,8,1|-eg62w0,147,9,1|-eaeo81,147,9,1|-eaeo80,7,8,1|-e6sys1,7,8,1|-e6sys0,6,1,0|-dzlpg1,6,1,0|-dzlpg0,7,8,1|-dxsyw1,7,8,1|-dxsyw0,147,9,1|-dqyo81,147,9,1|-dqyo80,7,8,1|-dnpxg1,7,8,1|-dnpxg0,6,1,0|-dgvms1,6,1,0|-dgvms0,7,8,1|-depxk1,7,8,1|-depxk0,147,9,1|-d88lk1,147,9,1|-d88lk0,7,8,1|-d4zus1,7,8,1|-d4zus0,6,1,0|-cy5k41,6,1,0|-cy5k40,7,8,1|-cvzuw1,7,8,1|-cvzuw0,147,9,1|-cpiiw1,147,9,1|-cpiiw0,7,8,1|-cm9s41,7,8,1|-cm9s40,6,1,0|-cdzms1,6,1,0|-cdzms0,7,8,1|-c4mlg1,7,8,1|-c4mlg0,6,1,0|-bv9bs1,6,1,0|-bv9bs0,7,8,1|-blwag1,7,8,1|-blwag0,6,1,0|-bcj941,6,1,0|-bcj940,7,8,1|-b367s1,7,8,1|-b367s0,6,1,0|-att6g1,6,1,0|-att6g0,7,8,1|-akg541,7,8,1|-akg540,6,1,0|-ab33s1,6,1,0|-ab33s0,7,8,1|-a1q2g1,7,8,1|-a1q2g0,6,1,0|-9sd141,6,1,0|-9sd140,7,8,1|-9in141,7,8,1|-9in140,6,1,0|-999zs1,6,1,0|-999zs0,7,8,1|-8zwyg1,7,8,1|-8zwyg0,6,1,0|-8qjx41,6,1,0|-8qjx40,7,8,1|-8h6vs1,7,8,1|-8h6vs0,6,1,0|-87tug1,6,1,0|-87tug0,7,8,1|-7ygt41,7,8,1|-7ygt40,6,1,0|-7p3rs1,6,1,0|-7p3rs0,7,8,1|-7fqqg1,7,8,1|-7fqqg0,6,1,0|-76dp41,6,1,0|-76dp40,7,8,1|-6wnp41,7,8,1|-6wnp40,6,1,0|-6nans1,6,1,0|-6nans0,7,8,1|-6dxmg1,7,8,1|-6dxmg0,6,1,0|-64kl41,6,1,0|-64kl40,7,8,1|-5v7js1,7,8,1|-5v7js0,6,1,0|-5luig1,6,1,0|-5luig0,7,8,1|-5chh41,7,8,1|-5chh40,6,1,0|-534fs1,6,1,0|-534fs0,7,8,1|-4treg1,7,8,1|-4treg0,6,1,0|-4ked41,6,1,0|-4ked40,7,8,1|-4b1bs1,7,8,1|-4b1bs0,6,1,0|-41oag1,6,1,0|-41oag0,7,8,1|-3ryag1,7,8,1|-3ryag0,6,1,0|-3il941,6,1,0|-3il940,7,8,1|-3987s1,7,8,1|-3987s0,6,1,0|-2zv6g1,6,1,0|-2zv6g0,7,8,1|-2qi541,7,8,1|-2qi540,6,1,0|-2h53s1,6,1,0|-2h53s0,7,8,1|-27s2g1,7,8,1|-27s2g0,6,1,0|-1yf141,6,1,0|-1yf140,7,8,1|-1p1zs1,7,8,1|-1p1zs0,8,8,0|3ijjzz,8,8,0|3ijk00,6,1,0|3rwlbz,6,1,0|3rwlc0,7,8,1|419mnz,7,8,1|419mo0,6,1,0|4azpfz,6,1,0|4azpg0,7,8,1|4kcqrz,7,8,1|4kcqs0,6,1,0|4tps3z,6,1,0|4tps40,7,8,1|532tfz,7,8,1|532tg0,6,1,0|5cstfz,6,1,0|5cstg0,7,8,1|5lsw3z,7,8,1|5lsw40,6,1,0|5v5unz,6,1,0|5v5uo0,7,8,1|64ivzz,7,8,1|64iw00,6,1,0|6dvxbz,6,1,0|6dvxc0,7,8,1|6n8ynz,7,8,1|6n8yo0,6,1,0|6wlzzz,6,1,0|6wm000,7,8,1|75z1bz,7,8,1|75z1c0,6,1,0|7fc2nz,6,1,0|7fc2o0,7,8,1|7p22nz,7,8,1|7p22o0,6,1,0|7yf3zz,6,1,0|7yf400,7,8,1|87s5bz,7,8,1|87s5c0,6,1,0|8h59fz,6,1,0|8h59g0,7,8,1|8qiarz,7,8,1|8qias0,6,1,0|8zvc3z,6,1,0|8zvc40,7,8,1|998dfz,7,8,1|998dg0,6,1,0|9ilerz,6,1,0|9iles0,7,8,1|9ryg3z,7,8,1|9ryg40,6,1,0|a1bhfz,6,1,0|a1bhg0,7,8,1|aaoirz,7,8,1|aaois0,6,1,0|ak1k3z,6,1,0|ak1k40,7,8,1|atrk3z,7,8,1|atrk40,6,1,0|b34lfz,6,1,0|b34lg0,7,8,1|bchmrz,7,8,1|bchms0,6,1,0|bluo3z,6,1,0|bluo40,7,8,1|bv7pfz,7,8,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,7,8,1|dzwtfz,7,8,1|dzwtg0,6,1,0|e7u03z,6,1,0|e7u040,7,8,1|eimw3z,7,8,1|eimw40,6,1,0|eqk2rz,6,1,0|eqk2s0,7,8,1|f1cyrz,7,8,1|f1cys0,6,1,0|f9a5fz,6,1,0|f9a5g0,7,8,1|fkg03z,7,8,1|fkg040,6,1,0|fs083z,6,1,0|fs0840,7,8,1|g362rz,7,8,1|g362s0,6,1,0|gaqarz,6,1,0|gaqas0,7,8,1|glw5fz,7,8,1|glw5g0,6,1,0|gttc3z,6,1,0|gttc40,7,8,1|h4m83z,7,8,1|h4m840,6,1,0|hcjerz,6,1,0|hcjes0,7,8,1|hncarz,7,8,1|hncas0,6,1,0|hv9hfz,6,1,0|hv9hg0,7,8,1|i6fc3z,7,8,1|i6fc40,6,1,0|idzk3z,6,1,0|idzk40,7,8,1|ip5erz,7,8,1|ip5es0,6,1,0|iwpmrz,6,1,0|iwpms0,7,8,1|j7vhfz,7,8,1|j7vhg0,6,1,0|jffpfz,6,1,0|jffpg0,7,8,1|jqlk3z,7,8,1|jqlk40,6,1,0|jyiqrz,6,1,0|jyiqs0,7,8,1|k9bmrz,7,8,1|k9bms0,6,1,0|kh8tfz,6,1,0|kh8tg0,7,8,1|ks1pfz,7,8,1|ks1pg0,6,1,0|kzyw3z,6,1,0|kzyw40,7,8,1|lb4qrz,7,8,1|lb4qs0,6,1,0|lioyrz,6,1,0|lioys0,7,8,1|ltutfz,7,8,1|ltutg0,6,1,0|m1f1fz,6,1,0|m1f1g0,7,8,1|mckw3z,7,8,1|mckw40,6,1,0|mki2rz,6,1,0|mki2s0,7,8,1|mvayrz,7,8,1|mvays0,6,1,0|n385fz,6,1,0|n385g0,7,8,1|ne11fz,7,8,1|ne11g0,6,1,0|nly83z,6,1,0|nly840,7,8,1|nwr43z,7,8,1|nwr440,6,1,0|o4oarz,6,1,0|o4oas0,7,8,1|ofu5fz,7,8,1|ofu5g0,6,1,0|onedfz,6,1,0|onedg0,7,8,1|oyk83z,7,8,1|oyk840,6,1,0|p64g3z,6,1,0|p64g40,7,8,1|phaarz,7,8,1|phaas0,6,1,0|pp7hfz,6,1,0|pp7hg0,7,8,1|q00dfz,7,8,1|q00dg0,6,1,0|q7xk3z,6,1,0|q7xk40,7,8,1|qiqg3z,7,8,1|qiqg40,6,1,0|qqnmrz,6,1,0|qqnms0,7,8,1|r1thfz,7,8,1|r1thg0,6,1,0|r9dpfz,6,1,0|r9dpg0,7,8,1|rkjk3z,7,8,1|rkjk40,6,1,0|rs3s3z,6,1,0|rs3s40,7,8,1|s39mrz,7,8,1|s39ms0,6,1,0|sb6tfz,6,1,0|sb6tg0,7,8,1|slzpfz,7,8,1|slzpg0,6,1,0|stww3z,6,1,0|stww40,7,8,1|t4ps3z,7,8,1|t4ps40,6,1,0|tcmyrz,6,1,0|tcmys0,7,8,1|tnfurz,7,8,1|tnfus0,6,1,0|tvd1fz,6,1,0|tvd1g0,7,8,1|u6iw3z,7,8,1|u6iw40,6,1,0|ue343z,6,1,0|ue3440,7,8,1|up8yrz,7,8,1|up8ys0,6,1,0|uwt6rz,6,1,0|uwt6s0,7,8,1|v7z1fz,7,8,1|v7z1g0,6,1,0|vfw83z,6,1,0|vfw840,7,8,1|vqp43z,7,8,1|vqp440,6,1,0|vymarz,6,1,0|vymas0,7,8,1|w9f6rz,7,8,1|w9f6s0,6,1,0|whcdfz,6,1,0|whcdg0,7,8,1|wsi83z,7,8,1|wsi840,6,1,0|x02g3z,6,1,0|x02g40,7,8,1|xb8arz,7,8,1|xb8as0,6,1,0|xisirz,6,1,0|xisis0,7,8,1|xtydfz,7,8,1|xtydg0,6,1,0|y1ilfz,6,1,0|y1ilg0,7,8,1|ycog3z,7,8,1|ycog40,6,1,0|yklmrz,6,1,0|yklms0,7,8,1|yveirz,7,8,1|yveis0,6,1,0|z3bpfz,6,1,0|z3bpg0,7,8,1|ze4lfz,7,8,1|ze4lg0,6,1,0|zm1s3z,6,1,0|zm1s40,7,8,1|zx7mrz,7,8,1|zx7ms0,6,1,0|104rurz,6,1,0|104rus0,7,8,1|10fxpfz,7,8,1|10fxpg0,6,1,0|10nhxfz,6,1,0|10nhxg0,7,8,1|10yns3z,7,8,1|10yns40,6,1,0|116kyrz,6,1,0|116kys0,7,8,1|11hdurz,7,8,1|11hdus0,6,1,0|11pb1fz,6,1,0|11pb1g0,7,8,1|1203xfz,7,8,1|1203xg0,6,1,0|128143z,6,1,0|1281440,7,8,1|12iu03z,7,8,1|12iu040,6,1,0|12qr6rz,6,1,0|12qr6s0,7,8,1|131x1fz,7,8,1|131x1g0,6,1,0|139h9fz,6,1,0|139h9g0,7,8,1|13kn43z,7,8,1|13kn440,6,1,0|13s7c3z,6,1,0|13s7c40,7,8,1|143d6rz,7,8,1|143d6s0,6,1,0|14badfz,6,1,0|14badg0,7,8,1|14m39fz,7,8,1|14m39g0,6,1,0|14u0g3z,6,1,0|14u0g40,7,8,1|154tc3z,7,8,1|154tc40,6,1,0|15cqirz,6,1,0|15cqis0,7,8,1|15nwdfz,7,8,1|15nwdg0,6,1,0|15vglfz,6,1,0|15vglg0,7,8,1|166mg3z,7,8,1|166mg40,6,1,0|16e6o3z,6,1,0|16e6o40,7,8,1|16pcirz,7,8,1|16pcis0,6,1,0|16x9pfz,6,1,0|16x9pg0,7,8,1|1782lfz,7,8,1|1782lg0,6,1,0|17fzs3z,6,1,0|17fzs40,7,8,1|17qso3z,7,8,1|17qso40,6,1,0|17ypurz,6,1,0|17ypus0,7,8,1|189iqrz,7,8,1|189iqs0,6,1,0|18hfxfz,6,1,0|18hfxg0,7,8,1|18sls3z,7,8,1|18sls40,6,1,0|190603z,6,1,0|1906040,7,8,1|19bburz,7,8,1|19bbus0,6,1,0|19iw2rz,6,1,0|19iw2s0,7,8,1|19u1xfz,7,8,1|19u1xg0,6,1,0|1a1z43z,6,1,0|1a1z440,7,8,1|1acs03z,7,8,1|1acs040,6,1,0|1akp6rz,6,1,0|1akp6s0,7,8,1|1avi2rz,7,8,1|1avi2s0,6,1,0|1b3f9fz,6,1,0|1b3f9g0,7,8,1|1bel43z,7,8,1|1bel440,6,1,0|1bm5c3z,6,1,0|1bm5c40,7,8,1|1bxb6rz,7,8,1|1bxb6s0,6,1,0|1c4verz,6,1,0|1c4ves0,7,8,1|1cg19fz,7,8,1|1cg19g0,6,1,0|1cnlhfz,6,1,0|1cnlhg0,7,8,1|1cyrc3z,7,8,1|1cyrc40,6,1,0|1d6oirz,6,1,0|1d6ois0,7,8,1|1dhherz,7,8,1|1dhhes0,6,1,0|1dpelfz,6,1,0|1dpelg0,7,8,1|1e07hfz,7,8,1|1e07hg0,6,1,0|1e84o3z,6,1,0|1e84o40,7,8,1|1ejairz,7,8,1|1ejais0,6,1,0|1equqrz,6,1,0|1equqs0,7,8,1|1f20lfz,7,8,1|1f20lg0,6,1,0|1f9ktfz,6,1,0|1f9ktg0,7,8,1|1fkqo3z,7,8,1|1fkqo40,6,1,0|1fsnurz,6,1,0|1fsnus0,7,8,1|1g3gqrz,7,8,1|1g3gqs0,6,1,0|1gbdxfz,6,1,0|1gbdxg0,7,8,1|1gm6tfz,7,8,1|1gm6tg0,6,1,0|1gu403z,6,1,0|1gu4040,7,8,1|1h4ww3z,7,8,1|1h4ww40,6,1,0|1hcu2rz,6,1,0|1hcu2s0,7,8,1|1hnzxfz,7,8,1|1hnzxg0,6,1,0|1hvk5fz,6,1,0|1hvk5g0,7,8,1|1i6q03z,7,8,1|1i6q040,6,1,0|1iea83z,6,1,0|1iea840,7,8,1|1ipg2rz,7,8,1|1ipg2s0,6,1,0|1ixd9fz,6,1,0|1ixd9g0,7,8,1|1j865fz,7,8,1|1j865g0,6,1,0|1jg3c3z,6,1,0|1jg3c40,7,8,1|1jqw83z,7,8,1|1jqw840,6,1,0|1jyterz,6,1,0|1jytes0,7,8,1|1k9z9fz,7,8,1|1k9z9g0,6,1,0|1khjhfz,6,1,0|1khjhg0,7,8,1|1kspc3z,7,8,1|1kspc40,6,1,0|1l09k3z,6,1,0|1l09k40,7,8,1|1lbferz,7,8,1|1lbfes0,6,1,0|1ljclfz,6,1,0|1ljclg0,7,8,1|1lu5hfz,7,8,1|1lu5hg0,6,1,0|1m22o3z,6,1,0|1m22o40,7,8,1|1mcvk3z,7,8,1|1mcvk40,6,1,0|1mksqrz,6,1,0|1mksqs0,7,8,1|1mvlmrz,7,8,1|1mvlms0,6,1,0|1n3itfz,6,1,0|1n3itg0,7,8,1|1neoo3z,7,8,1|1neoo40,6,1,0|1nm8w3z,6,1,0|1nm8w40,7,8,1|1nxeqrz,7,8,1|1nxeqs0,6,1,0|1o4yyrz,6,1,0|1o4yys0,7,8,1|1og4tfz,7,8,1|1og4tg0,6,1,0|1oo203z,6,1,0|1oo2040,7,8,1|1oyuw3z,7,8,1|1oyuw40,6,1,0|1p6s2rz,6,1,0|1p6s2s0,7,8,1|1phkyrz,7,8,1|1phkys0,6,1,0|1ppi5fz,6,1,0|1ppi5g0,7,8,1|1q0o03z,7,8,1|1q0o040,6,1,0|1q8883z,6,1,0|1q88840,7,8,1|1qje2rz,7,8,1|1qje2s0,6,1,0|1qqyarz,6,1,0|1qqyas0,7,8,1|1r245fz,7,8,1|1r245g0,6,1,0|1r9odfz,6,1,0|1r9odg0,7,8,1|1rku83z,7,8,1|1rku840,6,1,0|1rsrerz,6,1,0|1rsres0,7,8,1|1s3karz,7,8,1|1s3kas0,6,1,0|1sbhhfz,6,1,0|1sbhhg0,7,8,1|1smadfz,7,8,1|1smadg0,6,1,0|1su7k3z,6,1,0|1su7k40,7,8,1|1t5derz,7,8,1|1t5des0,6,1,0|1tcxmrz,6,1,0|1tcxms0,7,8,1|1to3hfz,7,8,1|1to3hg0,6,1,0|1tvnpfz,6,1,0|1tvnpg0,7,8,1|1u6tk3z,7,8,1|1u6tk40,6,1,0|1ueqqrz,6,1,0|1ueqqs0,7,8,1|1upjmrz,7,8,1|1upjms0,6,1,0|1uxgtfz,6,1,0|1uxgtg0,7,8,1|1v89pfz,7,8,1|1v89pg0,6,1,0|1vg6w3z,6,1,0|1vg6w40,7,8,1|1vqzs3z,7,8,1|1vqzs40,6,1,0|NaN,6,1,0",
        "Europe/Ljubljana|,0,317,0|-18vsmgp,0,317,0|-18vsmgo,8,8,0|-ezayw1,8,8,0|-ezayw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cv5zw1,8,8,0|-cv5zw0,9,9,1|-cofek1,9,9,1|-cofek0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/London|,0,328,0|-1rprx9y,0,328,0|-1rprx9x,1,1,0|-rzcns1,1,1,0|-rzcns0,26,8,1|-rsid41,26,8,1|-rsid40,1,1,0|-risd41,1,1,0|-risd40,26,8,1|-ragd41,26,8,1|-ragd40,1,1,0|-r0s7s1,1,1,0|-r0s7s0,26,8,1|-qr0d41,26,8,1|-qr0d40,1,1,0|-qhp6g1,1,1,0|-qhp6g0,26,8,1|-q8aag1,26,8,1|-q8aag0,1,1,0|-pyz3s1,1,1,0|-pyz3s0,26,8,1|-po4d41,26,8,1|-po4d40,1,1,0|-pfw2g1,1,1,0|-pfw2g0,26,8,1|-p6h6g1,26,8,1|-p6h6g0,1,1,0|-oxiyg1,1,1,0|-oxiyg0,26,8,1|-onfzs1,26,8,1|-onfzs0,1,1,0|-odd141,1,1,0|-odd140,26,8,1|-o5st41,26,8,1|-o5st40,1,1,0|-nuzx41,1,1,0|-nuzx40,26,8,1|-nmprs1,26,8,1|-nmprs0,1,1,0|-nbwvs1,1,1,0|-nbwvs0,26,8,1|-n39rs1,26,8,1|-n39rs0,1,1,0|-mt6t41,1,1,0|-mt6t40,26,8,1|-mkjp41,26,8,1|-mkjp40,1,1,0|-matp41,1,1,0|-matp40,26,8,1|-m1tmg1,26,8,1|-m1tmg0,1,1,0|-lrdp41,1,1,0|-lrdp40,26,8,1|-liql41,26,8,1|-liql40,1,1,0|-l8nmg1,1,1,0|-l8nmg0,26,8,1|-l00ig1,26,8,1|-l00ig0,1,1,0|-kqaig1,1,1,0|-kqaig0,26,8,1|-khafs1,26,8,1|-khafs0,1,1,0|-k77h41,1,1,0|-k77h40,26,8,1|-jykd41,26,8,1|-jykd40,1,1,0|-joheg1,1,1,0|-joheg0,26,8,1|-jfuag1,26,8,1|-jfuag0,1,1,0|-j64ag1,1,1,0|-j64ag0,26,8,1|-iwr941,26,8,1|-iwr940,1,1,0|-imoag1,1,1,0|-imoag0,26,8,1|-ie16g1,26,8,1|-ie16g0,1,1,0|-i4b6g1,1,1,0|-i4b6g0,26,8,1|-hvb3s1,26,8,1|-hvb3s0,1,1,0|-hl8541,1,1,0|-hl8540,26,8,1|-hcl141,26,8,1|-hcl140,1,1,0|-h2i2g1,1,1,0|-h2i2g0,26,8,1|-gtuyg1,26,8,1|-gtuyg0,1,1,0|-gk4yg1,1,1,0|-gk4yg0,26,8,1|-gb4vs1,26,8,1|-gb4vs0,1,1,0|-g11x41,1,1,0|-g11x40,26,8,1|-fpw2g1,26,8,1|-fpw2g0,1,1,0|-fkul41,1,1,0|-fkul40,26,8,1|-eyiyk1,26,8,1|-eyiyk0,146,9,1|-ethh81,146,9,1|-ethh80,26,8,1|-eh8qk1,26,8,1|-eh8qk0,146,9,1|-earek1,146,9,1|-earek0,26,8,1|-dyinw1,26,8,1|-dyinw0,146,9,1|-drod81,146,9,1|-drod80,26,8,1|-dfsl81,26,8,1|-dfsl80,146,9,1|-d75h81,146,9,1|-d75h80,26,8,1|-cx0nw1,26,8,1|-cx0nw0,146,9,1|-cro2k1,146,9,1|-cro2k0,26,8,1|-cncfs1,26,8,1|-cncfs0,1,1,0|-cdmfs1,1,1,0|-cdmfs0,26,8,1|-c4md41,26,8,1|-c4md40,1,1,0|-bwc7s1,1,1,0|-bwc7s0,26,8,1|-buwfw1,26,8,1|-buwfw0,146,9,1|-bos2k1,146,9,1|-bos2k0,26,8,1|-bkgfs1,26,8,1|-bkgfs0,1,1,0|-bdm541,1,1,0|-bdm540,26,8,1|-b1qd41,26,8,1|-b1qd40,1,1,0|-att6g1,1,1,0|-att6g0,26,8,1|-aj0ag1,26,8,1|-aj0ag0,1,1,0|-aad6g1,1,1,0|-aad6g0,26,8,1|-a0n6g1,26,8,1|-a0n6g0,1,1,0|-9rn3s1,1,1,0|-9rn3s0,26,8,1|-9hx3s1,26,8,1|-9hx3s0,1,1,0|-98k2g1,1,1,0|-98k2g0,26,8,1|-8yu2g1,26,8,1|-8yu2g0,1,1,0|-8ptzs1,1,1,0|-8ptzs0,26,8,1|-8h6vs1,26,8,1|-8h6vs0,1,1,0|-87gvs1,1,1,0|-87gvs0,26,8,1|-7ygt41,26,8,1|-7ygt40,1,1,0|-7odug1,1,1,0|-7odug0,26,8,1|-7fqqg1,26,8,1|-7fqqg0,1,1,0|-75at41,1,1,0|-75at40,26,8,1|-6wnp41,26,8,1|-6wnp40,1,1,0|-6mxp41,1,1,0|-6mxp40,26,8,1|-6dxmg1,26,8,1|-6dxmg0,1,1,0|-63uns1,1,1,0|-63uns0,26,8,1|-5v7js1,26,8,1|-5v7js0,1,1,0|-5l4l41,1,1,0|-5l4l40,26,8,1|-5chh41,26,8,1|-5chh40,1,1,0|-52rh41,1,1,0|-52rh40,26,8,1|-4treg1,26,8,1|-4treg0,1,1,0|-4krbs1,1,1,0|-4krbs0,26,8,1|-49lh41,26,8,1|-49lh40,1,1,0|-421941,1,1,0|-421940,26,8,1|-3qveg1,26,8,1|-3qveg0,1,1,0|-3iy7s1,1,1,0|-3iy7s0,26,8,1|-385bs1,26,8,1|-385bs0,1,1,0|-30l3s1,1,1,0|-30l3s0,26,8,1|-2pf941,26,8,1|-2pf940,1,1,0|-2hv141,1,1,0|-2hv140,26,8,1|-26p6g1,26,8,1|-26p6g0,1,1,0|-1z4yg1,1,1,0|-1z4yg0,26,8,1|-1nz3s1,26,8,1|-1nz3s0,1,1,0|-1gevs1,1,1,0|-1gevs0,26,8,1|-14w2g1,26,8,1|-14w2g0,1,1,0|-z4ns1,1,1,0|-z4ns0,26,8,1|-m6841,26,8,1|-m6840,26,8,0|yd6vz,26,8,0|yd6w0,1,1,0|15kg7z,1,1,0|15kg80,26,8,1|1h39jz,26,8,1|1h39k0,1,1,0|1oaivz,1,1,0|1oaiw0,26,8,1|1ztc7z,26,8,1|1ztc80,1,1,0|270ljz,1,1,0|270lk0,26,8,1|2ijevz,26,8,1|2ijew0,1,1,0|2pqo7z,1,1,0|2pqo80,26,8,1|319hjz,26,8,1|319hk0,1,1,0|38tpjz,1,1,0|38tpk0,26,8,1|3jzk7z,26,8,1|3jzk80,1,1,0|3rjs7z,1,1,0|3rjs80,26,8,1|42pmvz,26,8,1|42pmw0,1,1,0|4a9uvz,1,1,0|4a9uw0,26,8,1|4lso7z,26,8,1|4lso80,1,1,0|4szxjz,1,1,0|4szxk0,26,8,1|54iqvz,26,8,1|54iqw0,1,1,0|5bq07z,1,1,0|5bq080,26,8,1|5n8tjz,26,8,1|5n8tk0,1,1,0|5v5xfz,1,1,0|5v5xg0,26,8,1|65ytfz,26,8,1|65ytg0,1,1,0|6dw03z,1,1,0|6dw040,26,8,1|6oow3z,26,8,1|6oow40,1,1,0|6wm2rz,1,1,0|6wm2s0,26,8,1|77eyrz,26,8,1|77eys0,1,1,0|7fc5fz,1,1,0|7fc5g0,26,8,1|7qi03z,26,8,1|7qi040,1,1,0|7yf6rz,1,1,0|7yf6s0,26,8,1|8982rz,26,8,1|8982s0,1,1,0|8h59fz,1,1,0|8h59g0,26,8,1|8ry5fz,26,8,1|8ry5g0,1,1,0|8zvc3z,1,1,0|8zvc40,26,8,1|9ao83z,26,8,1|9ao840,1,1,0|9ilerz,1,1,0|9iles0,26,8,1|9tearz,26,8,1|9teas0,1,1,0|a1bhfz,1,1,0|a1bhg0,26,8,1|achc3z,26,8,1|achc40,1,1,0|ak1k3z,1,1,0|ak1k40,26,8,1|av7erz,26,8,1|av7es0,1,1,0|b34lfz,1,1,0|b34lg0,26,8,1|bdxhfz,26,8,1|bdxhg0,1,1,0|bluo3z,1,1,0|bluo40,26,8,1|bwnk3z,26,8,1|bwnk40,1,1,0|c4kqrz,1,1,0|c4kqs0,26,8,1|cfdmrz,26,8,1|cfdms0,1,1,0|cnatfz,1,1,0|cnatg0,26,8,1|cy3pfz,26,8,1|cy3pg0,1,1,0|d60w3z,1,1,0|d60w40,26,8,1|dgts3z,26,8,1|dgts40,1,1,0|dp3xfz,1,1,0|dp3xg0,26,8,1|dzwtfz,26,8,1|dzwtg0,1,1,0|e7u03z,1,1,0|e7u040,26,8,1|eimw3z,26,8,1|eimw40,1,1,0|eqk2rz,1,1,0|eqk2s0,26,8,1|f1cyrz,26,8,1|f1cys0,1,1,0|f9a5fz,1,1,0|f9a5g0,26,8,1|fkg03z,26,8,1|fkg040,1,1,0|fs083z,1,1,0|fs0840,26,8,1|g362rz,26,8,1|g362s0,1,1,0|gaqarz,1,1,0|gaqas0,26,8,1|glw5fz,26,8,1|glw5g0,1,1,0|gttc3z,1,1,0|gttc40,26,8,1|h4m83z,26,8,1|h4m840,1,1,0|hcjerz,1,1,0|hcjes0,26,8,1|hncarz,26,8,1|hncas0,1,1,0|hv9hfz,1,1,0|hv9hg0,26,8,1|i6fc3z,26,8,1|i6fc40,1,1,0|idzk3z,1,1,0|idzk40,26,8,1|ip5erz,26,8,1|ip5es0,1,1,0|iwpmrz,1,1,0|iwpms0,26,8,1|j7vhfz,26,8,1|j7vhg0,1,1,0|jffpfz,1,1,0|jffpg0,26,8,1|jqlk3z,26,8,1|jqlk40,1,1,0|jyiqrz,1,1,0|jyiqs0,26,8,1|k9bmrz,26,8,1|k9bms0,1,1,0|kh8tfz,1,1,0|kh8tg0,26,8,1|ks1pfz,26,8,1|ks1pg0,1,1,0|kzyw3z,1,1,0|kzyw40,26,8,1|lb4qrz,26,8,1|lb4qs0,1,1,0|lioyrz,1,1,0|lioys0,26,8,1|ltutfz,26,8,1|ltutg0,1,1,0|m1f1fz,1,1,0|m1f1g0,26,8,1|mckw3z,26,8,1|mckw40,1,1,0|mki2rz,1,1,0|mki2s0,26,8,1|mvayrz,26,8,1|mvays0,1,1,0|n385fz,1,1,0|n385g0,26,8,1|ne11fz,26,8,1|ne11g0,1,1,0|nly83z,1,1,0|nly840,26,8,1|nwr43z,26,8,1|nwr440,1,1,0|o4oarz,1,1,0|o4oas0,26,8,1|ofu5fz,26,8,1|ofu5g0,1,1,0|onedfz,1,1,0|onedg0,26,8,1|oyk83z,26,8,1|oyk840,1,1,0|p64g3z,1,1,0|p64g40,26,8,1|phaarz,26,8,1|phaas0,1,1,0|pp7hfz,1,1,0|pp7hg0,26,8,1|q00dfz,26,8,1|q00dg0,1,1,0|q7xk3z,1,1,0|q7xk40,26,8,1|qiqg3z,26,8,1|qiqg40,1,1,0|qqnmrz,1,1,0|qqnms0,26,8,1|r1thfz,26,8,1|r1thg0,1,1,0|r9dpfz,1,1,0|r9dpg0,26,8,1|rkjk3z,26,8,1|rkjk40,1,1,0|rs3s3z,1,1,0|rs3s40,26,8,1|s39mrz,26,8,1|s39ms0,1,1,0|sb6tfz,1,1,0|sb6tg0,26,8,1|slzpfz,26,8,1|slzpg0,1,1,0|stww3z,1,1,0|stww40,26,8,1|t4ps3z,26,8,1|t4ps40,1,1,0|tcmyrz,1,1,0|tcmys0,26,8,1|tnfurz,26,8,1|tnfus0,1,1,0|tvd1fz,1,1,0|tvd1g0,26,8,1|u6iw3z,26,8,1|u6iw40,1,1,0|ue343z,1,1,0|ue3440,26,8,1|up8yrz,26,8,1|up8ys0,1,1,0|uwt6rz,1,1,0|uwt6s0,26,8,1|v7z1fz,26,8,1|v7z1g0,1,1,0|vfw83z,1,1,0|vfw840,26,8,1|vqp43z,26,8,1|vqp440,1,1,0|vymarz,1,1,0|vymas0,26,8,1|w9f6rz,26,8,1|w9f6s0,1,1,0|whcdfz,1,1,0|whcdg0,26,8,1|wsi83z,26,8,1|wsi840,1,1,0|x02g3z,1,1,0|x02g40,26,8,1|xb8arz,26,8,1|xb8as0,1,1,0|xisirz,1,1,0|xisis0,26,8,1|xtydfz,26,8,1|xtydg0,1,1,0|y1ilfz,1,1,0|y1ilg0,26,8,1|ycog3z,26,8,1|ycog40,1,1,0|yklmrz,1,1,0|yklms0,26,8,1|yveirz,26,8,1|yveis0,1,1,0|z3bpfz,1,1,0|z3bpg0,26,8,1|ze4lfz,26,8,1|ze4lg0,1,1,0|zm1s3z,1,1,0|zm1s40,26,8,1|zx7mrz,26,8,1|zx7ms0,1,1,0|104rurz,1,1,0|104rus0,26,8,1|10fxpfz,26,8,1|10fxpg0,1,1,0|10nhxfz,1,1,0|10nhxg0,26,8,1|10yns3z,26,8,1|10yns40,1,1,0|116kyrz,1,1,0|116kys0,26,8,1|11hdurz,26,8,1|11hdus0,1,1,0|11pb1fz,1,1,0|11pb1g0,26,8,1|1203xfz,26,8,1|1203xg0,1,1,0|128143z,1,1,0|1281440,26,8,1|12iu03z,26,8,1|12iu040,1,1,0|12qr6rz,1,1,0|12qr6s0,26,8,1|131x1fz,26,8,1|131x1g0,1,1,0|139h9fz,1,1,0|139h9g0,26,8,1|13kn43z,26,8,1|13kn440,1,1,0|13s7c3z,1,1,0|13s7c40,26,8,1|143d6rz,26,8,1|143d6s0,1,1,0|14badfz,1,1,0|14badg0,26,8,1|14m39fz,26,8,1|14m39g0,1,1,0|14u0g3z,1,1,0|14u0g40,26,8,1|154tc3z,26,8,1|154tc40,1,1,0|15cqirz,1,1,0|15cqis0,26,8,1|15nwdfz,26,8,1|15nwdg0,1,1,0|15vglfz,1,1,0|15vglg0,26,8,1|166mg3z,26,8,1|166mg40,1,1,0|16e6o3z,1,1,0|16e6o40,26,8,1|16pcirz,26,8,1|16pcis0,1,1,0|16x9pfz,1,1,0|16x9pg0,26,8,1|1782lfz,26,8,1|1782lg0,1,1,0|17fzs3z,1,1,0|17fzs40,26,8,1|17qso3z,26,8,1|17qso40,1,1,0|17ypurz,1,1,0|17ypus0,26,8,1|189iqrz,26,8,1|189iqs0,1,1,0|18hfxfz,1,1,0|18hfxg0,26,8,1|18sls3z,26,8,1|18sls40,1,1,0|190603z,1,1,0|1906040,26,8,1|19bburz,26,8,1|19bbus0,1,1,0|19iw2rz,1,1,0|19iw2s0,26,8,1|19u1xfz,26,8,1|19u1xg0,1,1,0|1a1z43z,1,1,0|1a1z440,26,8,1|1acs03z,26,8,1|1acs040,1,1,0|1akp6rz,1,1,0|1akp6s0,26,8,1|1avi2rz,26,8,1|1avi2s0,1,1,0|1b3f9fz,1,1,0|1b3f9g0,26,8,1|1bel43z,26,8,1|1bel440,1,1,0|1bm5c3z,1,1,0|1bm5c40,26,8,1|1bxb6rz,26,8,1|1bxb6s0,1,1,0|1c4verz,1,1,0|1c4ves0,26,8,1|1cg19fz,26,8,1|1cg19g0,1,1,0|1cnlhfz,1,1,0|1cnlhg0,26,8,1|1cyrc3z,26,8,1|1cyrc40,1,1,0|1d6oirz,1,1,0|1d6ois0,26,8,1|1dhherz,26,8,1|1dhhes0,1,1,0|1dpelfz,1,1,0|1dpelg0,26,8,1|1e07hfz,26,8,1|1e07hg0,1,1,0|1e84o3z,1,1,0|1e84o40,26,8,1|1ejairz,26,8,1|1ejais0,1,1,0|1equqrz,1,1,0|1equqs0,26,8,1|1f20lfz,26,8,1|1f20lg0,1,1,0|1f9ktfz,1,1,0|1f9ktg0,26,8,1|1fkqo3z,26,8,1|1fkqo40,1,1,0|1fsnurz,1,1,0|1fsnus0,26,8,1|1g3gqrz,26,8,1|1g3gqs0,1,1,0|1gbdxfz,1,1,0|1gbdxg0,26,8,1|1gm6tfz,26,8,1|1gm6tg0,1,1,0|1gu403z,1,1,0|1gu4040,26,8,1|1h4ww3z,26,8,1|1h4ww40,1,1,0|1hcu2rz,1,1,0|1hcu2s0,26,8,1|1hnzxfz,26,8,1|1hnzxg0,1,1,0|1hvk5fz,1,1,0|1hvk5g0,26,8,1|1i6q03z,26,8,1|1i6q040,1,1,0|1iea83z,1,1,0|1iea840,26,8,1|1ipg2rz,26,8,1|1ipg2s0,1,1,0|1ixd9fz,1,1,0|1ixd9g0,26,8,1|1j865fz,26,8,1|1j865g0,1,1,0|1jg3c3z,1,1,0|1jg3c40,26,8,1|1jqw83z,26,8,1|1jqw840,1,1,0|1jyterz,1,1,0|1jytes0,26,8,1|1k9z9fz,26,8,1|1k9z9g0,1,1,0|1khjhfz,1,1,0|1khjhg0,26,8,1|1kspc3z,26,8,1|1kspc40,1,1,0|1l09k3z,1,1,0|1l09k40,26,8,1|1lbferz,26,8,1|1lbfes0,1,1,0|1ljclfz,1,1,0|1ljclg0,26,8,1|1lu5hfz,26,8,1|1lu5hg0,1,1,0|1m22o3z,1,1,0|1m22o40,26,8,1|1mcvk3z,26,8,1|1mcvk40,1,1,0|1mksqrz,1,1,0|1mksqs0,26,8,1|1mvlmrz,26,8,1|1mvlms0,1,1,0|1n3itfz,1,1,0|1n3itg0,26,8,1|1neoo3z,26,8,1|1neoo40,1,1,0|1nm8w3z,1,1,0|1nm8w40,26,8,1|1nxeqrz,26,8,1|1nxeqs0,1,1,0|1o4yyrz,1,1,0|1o4yys0,26,8,1|1og4tfz,26,8,1|1og4tg0,1,1,0|1oo203z,1,1,0|1oo2040,26,8,1|1oyuw3z,26,8,1|1oyuw40,1,1,0|1p6s2rz,1,1,0|1p6s2s0,26,8,1|1phkyrz,26,8,1|1phkys0,1,1,0|1ppi5fz,1,1,0|1ppi5g0,26,8,1|1q0o03z,26,8,1|1q0o040,1,1,0|1q8883z,1,1,0|1q88840,26,8,1|1qje2rz,26,8,1|1qje2s0,1,1,0|1qqyarz,1,1,0|1qqyas0,26,8,1|1r245fz,26,8,1|1r245g0,1,1,0|1r9odfz,1,1,0|1r9odg0,26,8,1|1rku83z,26,8,1|1rku840,1,1,0|1rsrerz,1,1,0|1rsres0,26,8,1|1s3karz,26,8,1|1s3kas0,1,1,0|1sbhhfz,1,1,0|1sbhhg0,26,8,1|1smadfz,26,8,1|1smadg0,1,1,0|1su7k3z,1,1,0|1su7k40,26,8,1|1t5derz,26,8,1|1t5des0,1,1,0|1tcxmrz,1,1,0|1tcxms0,26,8,1|1to3hfz,26,8,1|1to3hg0,1,1,0|1tvnpfz,1,1,0|1tvnpg0,26,8,1|1u6tk3z,26,8,1|1u6tk40,1,1,0|1ueqqrz,1,1,0|1ueqqs0,26,8,1|1upjmrz,26,8,1|1upjms0,1,1,0|1uxgtfz,1,1,0|1uxgtg0,26,8,1|1v89pfz,26,8,1|1v89pg0,1,1,0|1vg6w3z,1,1,0|1vg6w40,26,8,1|1vqzs3z,26,8,1|1vqzs40,1,1,0|NaN,1,1,0",
        "Europe/Luxembourg|,0,313,0|-1ayy3h7,0,313,0|-1ayy3h6,53,313,0|-14j9c01,53,313,0|-14j9c00,6,1,0|-ss5uo1,6,1,0|-ss5uo0,8,8,0|-s0dxg1,8,8,0|-s0dxg0,9,9,1|-rsilg1,9,9,1|-rsilg0,8,8,0|-ridmk1,8,8,0|-ridmk0,9,9,1|-ragfw1,9,9,1|-ragfw0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,8,8,0|-qotw41,8,8,0|-qotw40,6,1,0|-qj59g1,6,1,0|-qj59g0,7,8,1|-q7zes1,7,8,1|-q7zes0,6,1,0|-q15441,6,1,0|-q15440,7,8,1|-po6g41,7,8,1|-po6g40,6,1,0|-pgvhg1,6,1,0|-pgvhg0,7,8,1|-p5atg1,7,8,1|-p5atg0,6,1,0|-oxj6s1,6,1,0|-oxj6s0,7,8,1|-ong841,7,8,1|-ong840,6,1,0|-odd9g1,6,1,0|-odd9g0,7,8,1|-o4q5g1,7,8,1|-o4q5g0,6,1,0|-nvq2s1,6,1,0|-nvq2s0,7,8,1|-nm02s1,7,8,1|-nm02s0,6,1,0|-ncn1g1,6,1,0|-ncn1g0,7,8,1|-n3a041,7,8,1|-n3a040,6,1,0|-mt71g1,6,1,0|-mt71g0,7,8,1|-mkjxg1,7,8,1|-mkjxg0,6,1,0|-matxg1,6,1,0|-matxg0,7,8,1|-m1tus1,7,8,1|-m1tus0,6,1,0|-lrqw41,6,1,0|-lrqw40,7,8,1|-liql41,7,8,1|-liql40,6,1,0|-l8nmg1,6,1,0|-l8nmg0,7,8,1|-l00ig1,7,8,1|-l00ig0,6,1,0|-kqaig1,6,1,0|-kqaig0,7,8,1|-khafs1,7,8,1|-khafs0,6,1,0|-k77h41,6,1,0|-k77h40,7,8,1|-jykd41,7,8,1|-jykd40,6,1,0|-jp7bs1,6,1,0|-jp7bs0,7,8,1|-jfuag1,7,8,1|-jfuag0,6,1,0|-j6u7s1,6,1,0|-j6u7s0,7,8,1|-iwr941,7,8,1|-iwr940,6,1,0|-ine7s1,6,1,0|-ine7s0,7,8,1|-ie16g1,7,8,1|-ie16g0,6,1,0|-i513s1,6,1,0|-i513s0,7,8,1|-hvb3s1,7,8,1|-hvb3s0,6,1,0|-hl8541,6,1,0|-hl8540,7,8,1|-hcl141,7,8,1|-hcl140,6,1,0|-h37zs1,6,1,0|-h37zs0,7,8,1|-gtuyg1,7,8,1|-gtuyg0,6,1,0|-gkuvs1,6,1,0|-gkuvs0,7,8,1|-gb4vs1,7,8,1|-gb4vs0,6,1,0|-g11x41,6,1,0|-g11x40,7,8,1|-fpw2g1,7,8,1|-fpw2g0,6,1,0|-fkul41,6,1,0|-fkul40,7,8,1|-fgh6g1,7,8,1|-fgh6g0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d75h81,9,9,1|-d75h80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cofek1,9,9,1|-cofek0,8,8,0|-cbtp81,8,8,0|-cbtp80,9,9,1|-c4kl81,9,9,1|-c4kl80,8,8,0|3s9mrz,8,8,0|3s9ms0,9,9,1|419pfz,9,9,1|419pg0,8,8,0|4azpfz,8,8,0|4azpg0,9,9,1|4kcqrz,9,9,1|4kcqs0,8,8,0|4tps3z,8,8,0|4tps40,9,9,1|532tfz,9,9,1|532tg0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Madrid|,0,334,0|-100edc1,0,334,0|-100edc0,6,1,0|-qzlus1,6,1,0|-qzlus0,7,8,1|-qqnk01,7,8,1|-qqnk00,6,1,0|-qhalg1,6,1,0|-qhalg0,7,8,1|-q7vmo1,7,8,1|-q7vmo0,6,1,0|-nusqs1,6,1,0|-nusqs0,7,8,1|-nm0001,7,8,1|-nm0000,6,1,0|-mt71g1,6,1,0|-mt71g0,7,8,1|-mkjuo1,7,8,1|-mkjuo0,6,1,0|-matxg1,6,1,0|-matxg0,7,8,1|-m1ts01,7,8,1|-m1ts00,6,1,0|-lrqtc1,6,1,0|-lrqtc0,7,8,1|-liqqo1,7,8,1|-liqqo0,6,1,0|-l8nus1,6,1,0|-l8nus0,7,8,1|-l00o01,7,8,1|-l00o00,6,1,0|-gzf6s1,6,1,0|-gzf6s0,7,8,1|-gtv401,7,8,1|-gtv400,6,1,0|-gki5g1,6,1,0|-gki5g0,7,8,1|-gj2dk1,7,8,1|-gj2dk0,147,9,1|-gb3c81,147,9,1|-gb3c80,7,8,1|-fs2001,7,8,1|-fs2000,6,1,0|-fjrxg1,6,1,0|-fjrxg0,8,8,0|-eft481,8,8,0|-eft480,9,9,1|-e9kys1,9,9,1|-e9kys0,8,8,0|-dxsyw1,8,8,0|-dxsyw0,9,9,1|-dp5s41,9,9,1|-dp5s40,8,8,0|-df2w81,8,8,0|-df2w80,9,9,1|-d6fpg1,9,9,1|-d6fpg0,8,8,0|-cwctk1,8,8,0|-cwctk0,9,9,1|-cnpms1,9,9,1|-cnpms0,8,8,0|-cdmqw1,8,8,0|-cdmqw0,9,9,1|-c4zk41,9,9,1|-c4zk40,8,8,0|-asdmw1,8,8,0|-asdmw0,9,9,1|-akgdg1,9,9,1|-akgdg0,8,8,0|28g53z,8,8,0|28g540,9,9,1|2hgajz,9,9,1|2hgak0,8,8,0|2r67rz,8,8,0|2r67s0,9,9,1|306d7z,9,9,1|306d80,8,8,0|396d3z,8,8,0|396d40,9,9,1|3ijh7z,9,9,1|3ijh80,8,8,0|3s9efz,8,8,0|3s9eg0,9,9,1|419jvz,9,9,1|419jw0,8,8,0|4azpfz,8,8,0|4azpg0,9,9,1|4kcqrz,9,9,1|4kcqs0,8,8,0|4tps3z,8,8,0|4tps40,9,9,1|532tfz,9,9,1|532tg0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Malta|,0,335,0|-13qyw0t,0,335,0|-13qyw0s,8,8,0|-rymys1,8,8,0|-rymys0,9,9,1|-rsio81,9,9,1|-rsio80,8,8,0|-rj5k41,8,8,0|-rj5k40,9,9,1|-r9qqw1,9,9,1|-r9qqw0,8,8,0|-r1idg1,8,8,0|-r1idg0,9,9,1|-qqnpk1,9,9,1|-qqnpk0,8,8,0|-qj59g1,8,8,0|-qj59g0,9,9,1|-q7zhk1,9,9,1|-q7zhk0,8,8,0|-pzcas1,8,8,0|-pzcas0,9,9,1|-ppzc81,9,9,1|-ppzc80,8,8,0|-ff59g1,8,8,0|-ff59g0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfsl81,8,8,0|-dfsl80,9,9,1|-d75h81,9,9,1|-d75h80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cohes1,9,9,1|-cohes0,8,8,0|-cf2d81,8,8,0|-cf2d80,9,9,1|-c4mfw1,9,9,1|-c4mfw0,8,8,0|-bwcg41,8,8,0|-bwcg40,9,9,1|-blwis1,9,9,1|-blwis0,8,8,0|-bec581,8,8,0|-bec580,9,9,1|-b36ak1,9,9,1|-b36ak0,8,8,0|-1vwis1,8,8,0|-1vwis0,9,9,1|-1pf9k1,9,9,1|-1pf9k0,8,8,0|-1cthg1,8,8,0|-1cthg0,9,9,1|-16p441,9,9,1|-16p440,8,8,0|-u3es1,8,8,0|-u3es0,9,9,1|-nz1g1,9,9,1|-nz1g0,8,8,0|-b0dg1,8,8,0|-b0dg0,9,9,1|-4w041,9,9,1|-4w040,8,8,0|7pp7z,8,8,0|7pp80,9,9,1|du2jz,9,9,1|du2k0,8,8,0|q2t7z,8,8,0|q2t80,9,9,1|wk57z,9,9,1|wk580,8,8,0|195ujz,8,8,0|195uk0,9,9,1|1fn6jz,9,9,1|1fn6k0,8,8,0|1oyd7z,8,8,0|1oyd80,9,9,1|1ybejz,9,9,1|1ybek0,8,8,0|28t6jz,8,8,0|28t6k0,9,9,1|2gf97z,9,9,1|2gf980,8,8,0|2rjerz,8,8,0|2rjes0,9,9,1|2zginz,9,9,1|2zgio0,8,8,0|3a9hfz,8,8,0|3a9hg0,9,9,1|3i6lbz,9,9,1|3i6lc0,8,8,0|3szk3z,8,8,0|3szk40,9,9,1|40wnzz,9,9,1|40wo00,8,8,0|4bpmrz,8,8,0|4bpms0,9,9,1|4jmqnz,9,9,1|4jmqo0,8,8,0|4ufpfz,8,8,0|4ufpg0,9,9,1|52ctbz,9,9,1|52ctc0,8,8,0|5chpfz,8,8,0|5chpg0,9,9,1|5lfunz,9,9,1|5lfuo0,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Mariehamn|,0,329,0|-1bss9ye,0,329,0|-1bss9yd,76,329,0|-peghye,76,329,0|-peghyd,14,9,0|-ehco81,14,9,0|-ehco80,15,4,1|-e7vxk1,15,4,1|-e7vxk0,14,9,0|5v5unz,14,9,0|5v5uo0,15,4,1|64ivzz,15,4,1|64iw00,14,9,0|6dvxbz,14,9,0|6dvxc0,15,4,1|6n8ynz,15,4,1|6n8yo0,14,9,0|6wm2rz,14,9,0|6wm2s0,15,4,1|75z43z,15,4,1|75z440,14,9,0|7fc5fz,14,9,0|7fc5g0,15,4,1|7p25fz,15,4,1|7p25g0,14,9,0|7yf6rz,14,9,0|7yf6s0,15,4,1|87s83z,15,4,1|87s840,14,9,0|8h59fz,14,9,0|8h59g0,15,4,1|8qiarz,15,4,1|8qias0,14,9,0|8zvc3z,14,9,0|8zvc40,15,4,1|998dfz,15,4,1|998dg0,14,9,0|9ilerz,14,9,0|9iles0,15,4,1|9ryg3z,15,4,1|9ryg40,14,9,0|a1bhfz,14,9,0|a1bhg0,15,4,1|aaoirz,15,4,1|aaois0,14,9,0|ak1k3z,14,9,0|ak1k40,15,4,1|atrk3z,15,4,1|atrk40,14,9,0|b34lfz,14,9,0|b34lg0,15,4,1|bchmrz,15,4,1|bchms0,14,9,0|bluo3z,14,9,0|bluo40,15,4,1|bv7pfz,15,4,1|bv7pg0,14,9,0|c4kqrz,14,9,0|c4kqs0,15,4,1|cdxs3z,15,4,1|cdxs40,14,9,0|cnatfz,14,9,0|cnatg0,15,4,1|cwnurz,15,4,1|cwnus0,14,9,0|d60w3z,14,9,0|d60w40,15,4,1|dfdxfz,15,4,1|dfdxg0,14,9,0|dp3xfz,14,9,0|dp3xg0,15,4,1|dzwtfz,15,4,1|dzwtg0,14,9,0|e7u03z,14,9,0|e7u040,15,4,1|eimw3z,15,4,1|eimw40,14,9,0|eqk2rz,14,9,0|eqk2s0,15,4,1|f1cyrz,15,4,1|f1cys0,14,9,0|f9a5fz,14,9,0|f9a5g0,15,4,1|fkg03z,15,4,1|fkg040,14,9,0|fs083z,14,9,0|fs0840,15,4,1|g362rz,15,4,1|g362s0,14,9,0|gaqarz,14,9,0|gaqas0,15,4,1|glw5fz,15,4,1|glw5g0,14,9,0|gttc3z,14,9,0|gttc40,15,4,1|h4m83z,15,4,1|h4m840,14,9,0|hcjerz,14,9,0|hcjes0,15,4,1|hncarz,15,4,1|hncas0,14,9,0|hv9hfz,14,9,0|hv9hg0,15,4,1|i6fc3z,15,4,1|i6fc40,14,9,0|idzk3z,14,9,0|idzk40,15,4,1|ip5erz,15,4,1|ip5es0,14,9,0|iwpmrz,14,9,0|iwpms0,15,4,1|j7vhfz,15,4,1|j7vhg0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|lioyrz,14,9,0|lioys0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n385fz,14,9,0|n385g0,15,4,1|ne11fz,15,4,1|ne11g0,14,9,0|nly83z,14,9,0|nly840,15,4,1|nwr43z,15,4,1|nwr440,14,9,0|o4oarz,14,9,0|o4oas0,15,4,1|ofu5fz,15,4,1|ofu5g0,14,9,0|onedfz,14,9,0|onedg0,15,4,1|oyk83z,15,4,1|oyk840,14,9,0|p64g3z,14,9,0|p64g40,15,4,1|phaarz,15,4,1|phaas0,14,9,0|pp7hfz,14,9,0|pp7hg0,15,4,1|q00dfz,15,4,1|q00dg0,14,9,0|q7xk3z,14,9,0|q7xk40,15,4,1|qiqg3z,15,4,1|qiqg40,14,9,0|qqnmrz,14,9,0|qqnms0,15,4,1|r1thfz,15,4,1|r1thg0,14,9,0|r9dpfz,14,9,0|r9dpg0,15,4,1|rkjk3z,15,4,1|rkjk40,14,9,0|rs3s3z,14,9,0|rs3s40,15,4,1|s39mrz,15,4,1|s39ms0,14,9,0|sb6tfz,14,9,0|sb6tg0,15,4,1|slzpfz,15,4,1|slzpg0,14,9,0|stww3z,14,9,0|stww40,15,4,1|t4ps3z,15,4,1|t4ps40,14,9,0|tcmyrz,14,9,0|tcmys0,15,4,1|tnfurz,15,4,1|tnfus0,14,9,0|tvd1fz,14,9,0|tvd1g0,15,4,1|u6iw3z,15,4,1|u6iw40,14,9,0|ue343z,14,9,0|ue3440,15,4,1|up8yrz,15,4,1|up8ys0,14,9,0|uwt6rz,14,9,0|uwt6s0,15,4,1|v7z1fz,15,4,1|v7z1g0,14,9,0|vfw83z,14,9,0|vfw840,15,4,1|vqp43z,15,4,1|vqp440,14,9,0|vymarz,14,9,0|vymas0,15,4,1|w9f6rz,15,4,1|w9f6s0,14,9,0|whcdfz,14,9,0|whcdg0,15,4,1|wsi83z,15,4,1|wsi840,14,9,0|x02g3z,14,9,0|x02g40,15,4,1|xb8arz,15,4,1|xb8as0,14,9,0|xisirz,14,9,0|xisis0,15,4,1|xtydfz,15,4,1|xtydg0,14,9,0|y1ilfz,14,9,0|y1ilg0,15,4,1|ycog3z,15,4,1|ycog40,14,9,0|yklmrz,14,9,0|yklms0,15,4,1|yveirz,15,4,1|yveis0,14,9,0|z3bpfz,14,9,0|z3bpg0,15,4,1|ze4lfz,15,4,1|ze4lg0,14,9,0|zm1s3z,14,9,0|zm1s40,15,4,1|zx7mrz,15,4,1|zx7ms0,14,9,0|104rurz,14,9,0|104rus0,15,4,1|10fxpfz,15,4,1|10fxpg0,14,9,0|10nhxfz,14,9,0|10nhxg0,15,4,1|10yns3z,15,4,1|10yns40,14,9,0|116kyrz,14,9,0|116kys0,15,4,1|11hdurz,15,4,1|11hdus0,14,9,0|11pb1fz,14,9,0|11pb1g0,15,4,1|1203xfz,15,4,1|1203xg0,14,9,0|128143z,14,9,0|1281440,15,4,1|12iu03z,15,4,1|12iu040,14,9,0|12qr6rz,14,9,0|12qr6s0,15,4,1|131x1fz,15,4,1|131x1g0,14,9,0|139h9fz,14,9,0|139h9g0,15,4,1|13kn43z,15,4,1|13kn440,14,9,0|13s7c3z,14,9,0|13s7c40,15,4,1|143d6rz,15,4,1|143d6s0,14,9,0|14badfz,14,9,0|14badg0,15,4,1|14m39fz,15,4,1|14m39g0,14,9,0|14u0g3z,14,9,0|14u0g40,15,4,1|154tc3z,15,4,1|154tc40,14,9,0|15cqirz,14,9,0|15cqis0,15,4,1|15nwdfz,15,4,1|15nwdg0,14,9,0|15vglfz,14,9,0|15vglg0,15,4,1|166mg3z,15,4,1|166mg40,14,9,0|16e6o3z,14,9,0|16e6o40,15,4,1|16pcirz,15,4,1|16pcis0,14,9,0|16x9pfz,14,9,0|16x9pg0,15,4,1|1782lfz,15,4,1|1782lg0,14,9,0|17fzs3z,14,9,0|17fzs40,15,4,1|17qso3z,15,4,1|17qso40,14,9,0|17ypurz,14,9,0|17ypus0,15,4,1|189iqrz,15,4,1|189iqs0,14,9,0|18hfxfz,14,9,0|18hfxg0,15,4,1|18sls3z,15,4,1|18sls40,14,9,0|190603z,14,9,0|1906040,15,4,1|19bburz,15,4,1|19bbus0,14,9,0|19iw2rz,14,9,0|19iw2s0,15,4,1|19u1xfz,15,4,1|19u1xg0,14,9,0|1a1z43z,14,9,0|1a1z440,15,4,1|1acs03z,15,4,1|1acs040,14,9,0|1akp6rz,14,9,0|1akp6s0,15,4,1|1avi2rz,15,4,1|1avi2s0,14,9,0|1b3f9fz,14,9,0|1b3f9g0,15,4,1|1bel43z,15,4,1|1bel440,14,9,0|1bm5c3z,14,9,0|1bm5c40,15,4,1|1bxb6rz,15,4,1|1bxb6s0,14,9,0|1c4verz,14,9,0|1c4ves0,15,4,1|1cg19fz,15,4,1|1cg19g0,14,9,0|1cnlhfz,14,9,0|1cnlhg0,15,4,1|1cyrc3z,15,4,1|1cyrc40,14,9,0|1d6oirz,14,9,0|1d6ois0,15,4,1|1dhherz,15,4,1|1dhhes0,14,9,0|1dpelfz,14,9,0|1dpelg0,15,4,1|1e07hfz,15,4,1|1e07hg0,14,9,0|1e84o3z,14,9,0|1e84o40,15,4,1|1ejairz,15,4,1|1ejais0,14,9,0|1equqrz,14,9,0|1equqs0,15,4,1|1f20lfz,15,4,1|1f20lg0,14,9,0|1f9ktfz,14,9,0|1f9ktg0,15,4,1|1fkqo3z,15,4,1|1fkqo40,14,9,0|1fsnurz,14,9,0|1fsnus0,15,4,1|1g3gqrz,15,4,1|1g3gqs0,14,9,0|1gbdxfz,14,9,0|1gbdxg0,15,4,1|1gm6tfz,15,4,1|1gm6tg0,14,9,0|1gu403z,14,9,0|1gu4040,15,4,1|1h4ww3z,15,4,1|1h4ww40,14,9,0|1hcu2rz,14,9,0|1hcu2s0,15,4,1|1hnzxfz,15,4,1|1hnzxg0,14,9,0|1hvk5fz,14,9,0|1hvk5g0,15,4,1|1i6q03z,15,4,1|1i6q040,14,9,0|1iea83z,14,9,0|1iea840,15,4,1|1ipg2rz,15,4,1|1ipg2s0,14,9,0|1ixd9fz,14,9,0|1ixd9g0,15,4,1|1j865fz,15,4,1|1j865g0,14,9,0|1jg3c3z,14,9,0|1jg3c40,15,4,1|1jqw83z,15,4,1|1jqw840,14,9,0|1jyterz,14,9,0|1jytes0,15,4,1|1k9z9fz,15,4,1|1k9z9g0,14,9,0|1khjhfz,14,9,0|1khjhg0,15,4,1|1kspc3z,15,4,1|1kspc40,14,9,0|1l09k3z,14,9,0|1l09k40,15,4,1|1lbferz,15,4,1|1lbfes0,14,9,0|1ljclfz,14,9,0|1ljclg0,15,4,1|1lu5hfz,15,4,1|1lu5hg0,14,9,0|1m22o3z,14,9,0|1m22o40,15,4,1|1mcvk3z,15,4,1|1mcvk40,14,9,0|1mksqrz,14,9,0|1mksqs0,15,4,1|1mvlmrz,15,4,1|1mvlms0,14,9,0|1n3itfz,14,9,0|1n3itg0,15,4,1|1neoo3z,15,4,1|1neoo40,14,9,0|1nm8w3z,14,9,0|1nm8w40,15,4,1|1nxeqrz,15,4,1|1nxeqs0,14,9,0|1o4yyrz,14,9,0|1o4yys0,15,4,1|1og4tfz,15,4,1|1og4tg0,14,9,0|1oo203z,14,9,0|1oo2040,15,4,1|1oyuw3z,15,4,1|1oyuw40,14,9,0|1p6s2rz,14,9,0|1p6s2s0,15,4,1|1phkyrz,15,4,1|1phkys0,14,9,0|1ppi5fz,14,9,0|1ppi5g0,15,4,1|1q0o03z,15,4,1|1q0o040,14,9,0|1q8883z,14,9,0|1q88840,15,4,1|1qje2rz,15,4,1|1qje2s0,14,9,0|1qqyarz,14,9,0|1qqyas0,15,4,1|1r245fz,15,4,1|1r245g0,14,9,0|1r9odfz,14,9,0|1r9odg0,15,4,1|1rku83z,15,4,1|1rku840,14,9,0|1rsrerz,14,9,0|1rsres0,15,4,1|1s3karz,15,4,1|1s3kas0,14,9,0|1sbhhfz,14,9,0|1sbhhg0,15,4,1|1smadfz,15,4,1|1smadg0,14,9,0|1su7k3z,14,9,0|1su7k40,15,4,1|1t5derz,15,4,1|1t5des0,14,9,0|1tcxmrz,14,9,0|1tcxms0,15,4,1|1to3hfz,15,4,1|1to3hg0,14,9,0|1tvnpfz,14,9,0|1tvnpg0,15,4,1|1u6tk3z,15,4,1|1u6tk40,14,9,0|1ueqqrz,14,9,0|1ueqqs0,15,4,1|1upjmrz,15,4,1|1upjms0,14,9,0|1uxgtfz,14,9,0|1uxgtg0,15,4,1|1v89pfz,15,4,1|1v89pg0,14,9,0|1vg6w3z,14,9,0|1vg6w40,15,4,1|1vqzs3z,15,4,1|1vqzs40,14,9,0|NaN,14,9,0",
        "Europe/Minsk|,0,336,0|-1ayy7rt,0,336,0|-1ayy7rs,20,337,0|-nu113d,20,337,0|-nu113c,14,9,0|-kmr1k1,14,9,0|-kmr1k0,143,4,0|-evpf01,143,4,0|-evpf00,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-db2g81,9,9,1|-db2g80,143,4,0|5vb6bz,143,4,0|5vb6c0,144,201,1|64pzjz,144,201,1|64pzk0,143,4,0|6e33nz,143,4,0|6e33o0,144,201,1|6nhwvz,144,201,1|6nhww0,143,4,0|6wv0zz,143,4,0|6wv100,144,201,1|769u7z,144,201,1|769u80,143,4,0|7foszz,143,4,0|7fot00,144,201,1|7p1zvz,144,201,1|7p1zw0,143,4,0|7yf17z,143,4,0|7yf180,144,201,1|87s2jz,144,201,1|87s2k0,143,4,0|8h53vz,143,4,0|8h53w0,144,201,1|8qi57z,144,201,1|8qi580,143,4,0|8zv6jz,143,4,0|8zv6k0,144,201,1|9987vz,144,201,1|9987w0,143,4,0|9il97z,143,4,0|9il980,144,201,1|9ryajz,144,201,1|9ryak0,143,4,0|a1bbvz,143,4,0|a1bbw0,144,201,1|aaod7z,144,201,1|aaod80,143,4,0|b34fvz,143,4,0|b34fw0,15,4,1|bchjzz,15,4,1|bchk00,14,9,0|blulbz,14,9,0|blulc0,15,4,1|bv7mnz,15,4,1|bv7mo0,14,9,0|c4knzz,14,9,0|c4ko00,15,4,1|cdxpbz,15,4,1|cdxpc0,14,9,0|cnaqnz,14,9,0|cnaqo0,15,4,1|cwnrzz,15,4,1|cwns00,14,9,0|d60tbz,14,9,0|d60tc0,15,4,1|dfdunz,15,4,1|dfduo0,14,9,0|dp3unz,14,9,0|dp3uo0,15,4,1|dzwqnz,15,4,1|dzwqo0,14,9,0|e7txbz,14,9,0|e7txc0,15,4,1|eimtbz,15,4,1|eimtc0,14,9,0|eqjzzz,14,9,0|eqk000,15,4,1|f1cvzz,15,4,1|f1cw00,14,9,0|f9a2nz,14,9,0|f9a2o0,15,4,1|fkfxbz,15,4,1|fkfxc0,14,9,0|fs05bz,14,9,0|fs05c0,15,4,1|g35zzz,15,4,1|g36000,14,9,0|gaq7zz,14,9,0|gaq800,15,4,1|glw2nz,15,4,1|glw2o0,14,9,0|gtt9bz,14,9,0|gtt9c0,15,4,1|h4m5bz,15,4,1|h4m5c0,14,9,0|hcjbzz,14,9,0|hcjc00,15,4,1|hnc7zz,15,4,1|hnc800,14,9,0|hv9enz,14,9,0|hv9eo0,15,4,1|i6f9bz,15,4,1|i6f9c0,14,9,0|idzhbz,14,9,0|idzhc0,15,4,1|ip5bzz,15,4,1|ip5c00,14,9,0|iwpjzz,14,9,0|iwpk00,15,4,1|j7venz,15,4,1|j7veo0,14,9,0|jffmnz,14,9,0|jffmo0,15,4,1|jqlhbz,15,4,1|jqlhc0,14,9,0|jyinzz,14,9,0|jyio00,15,4,1|k9bjzz,15,4,1|k9bk00,14,9,0|kh8qnz,14,9,0|kh8qo0,15,4,1|ks1mnz,15,4,1|ks1mo0,14,9,0|kzytbz,14,9,0|kzytc0,15,4,1|lb4nzz,15,4,1|lb4o00,14,9,0|liovzz,14,9,0|liow00,96,4,0|NaN,96,4,0",
        "Europe/Monaco|,0,7,0|-154gb3m,0,7,0|-154gb3l,5,7,0|-uozn3m,5,7,0|-uozn3l,6,1,0|-ry2lg1,6,1,0|-ry2lg0,7,8,1|-rsgqs1,7,8,1|-rsgqs0,6,1,0|-rjiis1,6,1,0|-rjiis0,7,8,1|-r9dpg1,7,8,1|-r9dpg0,6,1,0|-r1idg1,6,1,0|-r1idg0,7,8,1|-qqnms1,7,8,1|-qqnms0,6,1,0|-qj59g1,6,1,0|-qj59g0,7,8,1|-q7xk41,7,8,1|-q7xk40,6,1,0|-q15441,6,1,0|-q15440,7,8,1|-po6g41,7,8,1|-po6g40,6,1,0|-pgvhg1,6,1,0|-pgvhg0,7,8,1|-p5atg1,7,8,1|-p5atg0,6,1,0|-oxj6s1,6,1,0|-oxj6s0,7,8,1|-ong841,7,8,1|-ong840,6,1,0|-obkg41,6,1,0|-obkg40,7,8,1|-o4q5g1,7,8,1|-o4q5g0,6,1,0|-nvq2s1,6,1,0|-nvq2s0,7,8,1|-nm02s1,7,8,1|-nm02s0,6,1,0|-ncn1g1,6,1,0|-ncn1g0,7,8,1|-n3a041,7,8,1|-n3a040,6,1,0|-mt71g1,6,1,0|-mt71g0,7,8,1|-mkjxg1,7,8,1|-mkjxg0,6,1,0|-matxg1,6,1,0|-matxg0,7,8,1|-m1tus1,7,8,1|-m1tus0,6,1,0|-lrqw41,6,1,0|-lrqw40,7,8,1|-liqtg1,7,8,1|-liqtg0,6,1,0|-l8nus1,6,1,0|-l8nus0,7,8,1|-l00qs1,7,8,1|-l00qs0,6,1,0|-kqaqs1,6,1,0|-kqaqs0,7,8,1|-khao41,7,8,1|-khao40,6,1,0|-k77pg1,6,1,0|-k77pg0,7,8,1|-jyklg1,7,8,1|-jyklg0,6,1,0|-jp7k41,6,1,0|-jp7k40,7,8,1|-jfuis1,7,8,1|-jfuis0,6,1,0|-j6ug41,6,1,0|-j6ug40,7,8,1|-iwrhg1,7,8,1|-iwrhg0,6,1,0|-ineg41,6,1,0|-ineg40,7,8,1|-ie1es1,7,8,1|-ie1es0,6,1,0|-i51c41,6,1,0|-i51c40,7,8,1|-hvbc41,7,8,1|-hvbc40,6,1,0|-hl8dg1,6,1,0|-hl8dg0,7,8,1|-hcl9g1,7,8,1|-hcl9g0,6,1,0|-h38841,6,1,0|-h38840,7,8,1|-gtv6s1,7,8,1|-gtv6s0,6,1,0|-gkv441,6,1,0|-gkv440,7,8,1|-gb5441,7,8,1|-gb5440,6,1,0|-g125g1,6,1,0|-g125g0,7,8,1|-fpwas1,7,8,1|-fpwas0,6,1,0|-fkul41,6,1,0|-fkul40,7,8,1|-ff5c81,7,8,1|-ff5c80,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d8caw1,9,9,1|-d8caw0,147,9,1|-d62qs1,147,9,1|-d62qs0,7,8,1|-cx0nw1,7,8,1|-cx0nw0,147,9,1|-cofek1,147,9,1|-cofek0,8,8,0|396inz,8,8,0|396io0,9,9,1|3ijh7z,9,9,1|3ijh80,8,8,0|3s9mrz,8,8,0|3s9ms0,9,9,1|419pfz,9,9,1|419pg0,8,8,0|4azpfz,8,8,0|4azpg0,9,9,1|4kcqrz,9,9,1|4kcqs0,8,8,0|4tps3z,8,8,0|4tps40,9,9,1|532tfz,9,9,1|532tg0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Moscow|,0,338,0|-1ayy9mi,0,338,0|-1ayy9mh,20,338,0|-rx5dmi,20,338,0|-rx5dmh,20,339,0|-refds8,20,339,0|-refds7,44,340,1|-r57wg8,44,340,1|-r57wg7,20,339,0|-qx8xw8,20,339,0|-qx8xw7,148,341,1|-qrqps8,148,341,1|-qrqps7,44,340,1|-qeh0k8,44,340,1|-qeh0k7,148,341,1|-qcx401,148,341,1|-qcx400,144,201,1|-qak8g1,144,201,1|-qak8g0,143,4,0|-pibkg1,143,4,0|-pibkg0,144,201,1|-pgkok1,144,201,1|-pgkok0,87,184,1|-p84z81,87,184,1|-p84z80,144,201,1|-p6lcg1,144,201,1|-p6lcg0,143,4,0|-ontcc1,143,4,0|-ontcc0,14,9,0|-kmr1k1,14,9,0|-kmr1k0,143,4,0|5vb6bz,143,4,0|5vb6c0,144,201,1|64pzjz,144,201,1|64pzk0,143,4,0|6e33nz,143,4,0|6e33o0,144,201,1|6nhwvz,144,201,1|6nhww0,143,4,0|6wv0zz,143,4,0|6wv100,144,201,1|769u7z,144,201,1|769u80,143,4,0|7foszz,143,4,0|7fot00,144,201,1|7p1zvz,144,201,1|7p1zw0,143,4,0|7yf17z,143,4,0|7yf180,144,201,1|87s2jz,144,201,1|87s2k0,143,4,0|8h53vz,143,4,0|8h53w0,144,201,1|8qi57z,144,201,1|8qi580,143,4,0|8zv6jz,143,4,0|8zv6k0,144,201,1|9987vz,144,201,1|9987w0,143,4,0|9il97z,143,4,0|9il980,144,201,1|9ryajz,144,201,1|9ryak0,143,4,0|a1bbvz,143,4,0|a1bbw0,144,201,1|aaod7z,144,201,1|aaod80,143,4,0|ak1ejz,143,4,0|ak1ek0,144,201,1|atrejz,144,201,1|atrek0,143,4,0|b34fvz,143,4,0|b34fw0,15,4,1|bchjzz,15,4,1|bchk00,14,9,0|bi8ynz,14,9,0|bi8yo0,143,4,0|bluijz,143,4,0|bluik0,144,201,1|bv7jvz,144,201,1|bv7jw0,143,4,0|c4kl7z,143,4,0|c4kl80,144,201,1|cdxmjz,144,201,1|cdxmk0,143,4,0|cnanvz,143,4,0|cnanw0,144,201,1|cwnp7z,144,201,1|cwnp80,143,4,0|d60qjz,143,4,0|d60qk0,144,201,1|dfdrvz,144,201,1|dfdrw0,143,4,0|dp3rvz,143,4,0|dp3rw0,144,201,1|dzwnvz,144,201,1|dzwnw0,143,4,0|e7tujz,143,4,0|e7tuk0,144,201,1|eimqjz,144,201,1|eimqk0,143,4,0|eqjx7z,143,4,0|eqjx80,144,201,1|f1ct7z,144,201,1|f1ct80,143,4,0|f99zvz,143,4,0|f99zw0,144,201,1|fkfujz,144,201,1|fkfuk0,143,4,0|fs02jz,143,4,0|fs02k0,144,201,1|g35x7z,144,201,1|g35x80,143,4,0|gaq57z,143,4,0|gaq580,144,201,1|glvzvz,144,201,1|glvzw0,143,4,0|gtt6jz,143,4,0|gtt6k0,144,201,1|h4m2jz,144,201,1|h4m2k0,143,4,0|hcj97z,143,4,0|hcj980,144,201,1|hnc57z,144,201,1|hnc580,143,4,0|hv9bvz,143,4,0|hv9bw0,144,201,1|i6f6jz,144,201,1|i6f6k0,143,4,0|idzejz,143,4,0|idzek0,144,201,1|ip597z,144,201,1|ip5980,143,4,0|iwph7z,143,4,0|iwph80,144,201,1|j7vbvz,144,201,1|j7vbw0,143,4,0|jffjvz,143,4,0|jffjw0,144,201,1|jqlejz,144,201,1|jqlek0,143,4,0|jyil7z,143,4,0|jyil80,144,201,1|k9bh7z,144,201,1|k9bh80,143,4,0|kh8nvz,143,4,0|kh8nw0,144,201,1|ks1jvz,144,201,1|ks1jw0,143,4,0|kzyqjz,143,4,0|kzyqk0,144,201,1|lb4l7z,144,201,1|lb4l80,143,4,0|liot7z,143,4,0|liot80,143,201,0|ne0t3z,143,201,0|ne0t40,143,4,0|NaN,143,4,0",
        "Europe/Oslo|,0,195,0|-1421155,0,195,0|-1421154,8,8,0|-s0e081,8,8,0|-s0e080,9,9,1|-rsilg1,9,9,1|-rsilg0,8,8,0|-ridmk1,8,8,0|-ridmk0,9,9,1|-ragfw1,9,9,1|-ragfw0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,8,8,0|-fizzw1,8,8,0|-fizzw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cucg01,9,9,1|-cucg00,98,4,1|-co0o01,98,4,1|-co0o00,9,9,1|-cl6qk1,9,9,1|-cl6qk0,8,8,0|-cdmik1,8,8,0|-cdmik0,9,9,1|-c4kl81,9,9,1|-c4kl80,8,8,0|-bv9bs1,8,8,0|-bv9bs0,9,9,1|-btgl81,9,9,1|-btgl80,98,4,1|-bqxxc1,98,4,1|-bqxxc0,9,9,1|-blwd81,9,9,1|-blwd80,8,8,0|-bbtek1,8,8,0|-bbtek0,9,9,1|-b36ak1,9,9,1|-b36ak0,8,8,0|-atgak1,8,8,0|-atgak0,9,9,1|-akg7w1,9,9,1|-akg7w0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Paris|,0,7,0|-154gb3m,0,7,0|-154gb3l,5,7,0|-uozn3m,5,7,0|-uozn3l,6,1,0|-ry2lg1,6,1,0|-ry2lg0,7,8,1|-rsgqs1,7,8,1|-rsgqs0,6,1,0|-rjiis1,6,1,0|-rjiis0,7,8,1|-r9dpg1,7,8,1|-r9dpg0,6,1,0|-r1idg1,6,1,0|-r1idg0,7,8,1|-qqnms1,7,8,1|-qqnms0,6,1,0|-qj59g1,6,1,0|-qj59g0,7,8,1|-q7xk41,7,8,1|-q7xk40,6,1,0|-q15441,6,1,0|-q15440,7,8,1|-po6g41,7,8,1|-po6g40,6,1,0|-pgvhg1,6,1,0|-pgvhg0,7,8,1|-p5atg1,7,8,1|-p5atg0,6,1,0|-oxj6s1,6,1,0|-oxj6s0,7,8,1|-ong841,7,8,1|-ong840,6,1,0|-obkg41,6,1,0|-obkg40,7,8,1|-o4q5g1,7,8,1|-o4q5g0,6,1,0|-nvq2s1,6,1,0|-nvq2s0,7,8,1|-nm02s1,7,8,1|-nm02s0,6,1,0|-ncn1g1,6,1,0|-ncn1g0,7,8,1|-n3a041,7,8,1|-n3a040,6,1,0|-mt71g1,6,1,0|-mt71g0,7,8,1|-mkjxg1,7,8,1|-mkjxg0,6,1,0|-matxg1,6,1,0|-matxg0,7,8,1|-m1tus1,7,8,1|-m1tus0,6,1,0|-lrqw41,6,1,0|-lrqw40,7,8,1|-liqtg1,7,8,1|-liqtg0,6,1,0|-l8nus1,6,1,0|-l8nus0,7,8,1|-l00qs1,7,8,1|-l00qs0,6,1,0|-kqaqs1,6,1,0|-kqaqs0,7,8,1|-khao41,7,8,1|-khao40,6,1,0|-k77pg1,6,1,0|-k77pg0,7,8,1|-jyklg1,7,8,1|-jyklg0,6,1,0|-jp7k41,6,1,0|-jp7k40,7,8,1|-jfuis1,7,8,1|-jfuis0,6,1,0|-j6ug41,6,1,0|-j6ug40,7,8,1|-iwrhg1,7,8,1|-iwrhg0,6,1,0|-ineg41,6,1,0|-ineg40,7,8,1|-ie1es1,7,8,1|-ie1es0,6,1,0|-i51c41,6,1,0|-i51c40,7,8,1|-hvbc41,7,8,1|-hvbc40,6,1,0|-hl8dg1,6,1,0|-hl8dg0,7,8,1|-hcl9g1,7,8,1|-hcl9g0,6,1,0|-h38841,6,1,0|-h38840,7,8,1|-gtv6s1,7,8,1|-gtv6s0,6,1,0|-gkv441,6,1,0|-gkv440,7,8,1|-gb5441,7,8,1|-gb5440,6,1,0|-g125g1,6,1,0|-g125g0,7,8,1|-fpwas1,7,8,1|-fpwas0,6,1,0|-fkul41,6,1,0|-fkul40,7,8,1|-ff5c81,7,8,1|-ff5c80,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d8caw1,9,9,1|-d8caw0,147,9,1|-d62qs1,147,9,1|-d62qs0,7,8,1|-cx0nw1,7,8,1|-cx0nw0,147,9,1|-cofek1,147,9,1|-cofek0,8,8,0|396inz,8,8,0|396io0,9,9,1|3ijh7z,9,9,1|3ijh80,8,8,0|3s9mrz,8,8,0|3s9ms0,9,9,1|419pfz,9,9,1|419pg0,8,8,0|4azpfz,8,8,0|4azpg0,9,9,1|4kcqrz,9,9,1|4kcqs0,8,8,0|4tps3z,8,8,0|4tps40,9,9,1|532tfz,9,9,1|532tg0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Podgorica|,0,317,0|-18vsmgp,0,317,0|-18vsmgo,8,8,0|-ezayw1,8,8,0|-ezayw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cv5zw1,8,8,0|-cv5zw0,9,9,1|-cofek1,9,9,1|-cofek0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Prague|,0,318,0|-1qmkw09,0,318,0|-1qmkw08,5,318,0|-14u7uo9,5,318,0|-14u7uo8,8,8,0|-s0e081,8,8,0|-s0e080,9,9,1|-rsilg1,9,9,1|-rsilg0,8,8,0|-ridmk1,8,8,0|-ridmk0,9,9,1|-ragfw1,9,9,1|-ragfw0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,8,8,0|-fizzw1,8,8,0|-fizzw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cnnmk1,9,9,1|-cnnmk0,8,8,0|-cchrw1,8,8,0|-cchrw0,9,9,1|-c4mfw1,9,9,1|-c4mfw0,8,8,0|-c1qns1,8,8,0|-c1qns0,1,1,1|-bxf3s1,1,1,1|-bxf3s0,8,8,0|-bujh81,8,8,0|-bujh80,9,9,1|-blwd81,9,9,1|-blwd80,8,8,0|-bbtek1,8,8,0|-bbtek0,9,9,1|-b36ak1,9,9,1|-b36ak0,8,8,0|-ati581,8,8,0|-ati580,9,9,1|-akg7w1,9,9,1|-akg7w0,8,8,0|4tps3z,8,8,0|4tps40,9,9,1|532tfz,9,9,1|532tg0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Riga|,0,342,0|-1ayy74z,0,342,0|-1ayy74y,133,342,0|-qznlkz,133,342,0|-qznlky,149,343,1|-qrqewz,149,343,1|-qrqewy,133,342,0|-qhllkz,133,342,0|-qhllky,149,343,1|-qez5kz,149,343,1|-qez5ky,133,342,0|-ms0hsz,133,342,0|-ms0hsy,14,9,0|-fciw81,14,9,0|-fciw80,143,4,0|-evjv01,143,4,0|-evjv00,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-d5thg1,8,8,0|-d5thg0,143,4,0|5vb6bz,143,4,0|5vb6c0,144,201,1|64pzjz,144,201,1|64pzk0,143,4,0|6e33nz,143,4,0|6e33o0,144,201,1|6nhwvz,144,201,1|6nhww0,143,4,0|6wv0zz,143,4,0|6wv100,144,201,1|769u7z,144,201,1|769u80,143,4,0|7foszz,143,4,0|7fot00,144,201,1|7p1zvz,144,201,1|7p1zw0,143,4,0|7yf17z,143,4,0|7yf180,144,201,1|87s2jz,144,201,1|87s2k0,143,4,0|8h53vz,143,4,0|8h53w0,144,201,1|8qi57z,144,201,1|8qi580,143,4,0|8zv6jz,143,4,0|8zv6k0,144,201,1|9987vz,144,201,1|9987w0,143,4,0|9il97z,143,4,0|9il980,144,201,1|9ryajz,144,201,1|9ryak0,143,4,0|a1bbvz,143,4,0|a1bbw0,15,4,1|aaofzz,15,4,1|aaog00,14,9,0|ak1hbz,14,9,0|ak1hc0,15,4,1|atrhbz,15,4,1|atrhc0,14,9,0|b34inz,14,9,0|b34io0,15,4,1|bchjzz,15,4,1|bchk00,14,9,0|blulbz,14,9,0|blulc0,15,4,1|bv7mnz,15,4,1|bv7mo0,14,9,0|c4knzz,14,9,0|c4ko00,15,4,1|cdxpbz,15,4,1|cdxpc0,14,9,0|cnaqnz,14,9,0|cnaqo0,15,4,1|cwnrzz,15,4,1|cwns00,14,9,0|d60tbz,14,9,0|d60tc0,15,4,1|dfdunz,15,4,1|dfduo0,14,9,0|dp3unz,14,9,0|dp3uo0,15,4,1|dygvzz,15,4,1|dygw00,14,9,0|e7u03z,14,9,0|e7u040,15,4,1|eimw3z,15,4,1|eimw40,14,9,0|eqk2rz,14,9,0|eqk2s0,15,4,1|f1cyrz,15,4,1|f1cys0,14,9,0|f9a5fz,14,9,0|f9a5g0,15,4,1|fkg03z,15,4,1|fkg040,14,9,0|gaqarz,14,9,0|gaqas0,15,4,1|glw5fz,15,4,1|glw5g0,14,9,0|gttc3z,14,9,0|gttc40,15,4,1|h4m83z,15,4,1|h4m840,14,9,0|hcjerz,14,9,0|hcjes0,15,4,1|hncarz,15,4,1|hncas0,14,9,0|hv9hfz,14,9,0|hv9hg0,15,4,1|i6fc3z,15,4,1|i6fc40,14,9,0|idzk3z,14,9,0|idzk40,15,4,1|ip5erz,15,4,1|ip5es0,14,9,0|iwpmrz,14,9,0|iwpms0,15,4,1|j7vhfz,15,4,1|j7vhg0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|lioyrz,14,9,0|lioys0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n385fz,14,9,0|n385g0,15,4,1|ne11fz,15,4,1|ne11g0,14,9,0|nly83z,14,9,0|nly840,15,4,1|nwr43z,15,4,1|nwr440,14,9,0|o4oarz,14,9,0|o4oas0,15,4,1|ofu5fz,15,4,1|ofu5g0,14,9,0|onedfz,14,9,0|onedg0,15,4,1|oyk83z,15,4,1|oyk840,14,9,0|p64g3z,14,9,0|p64g40,15,4,1|phaarz,15,4,1|phaas0,14,9,0|pp7hfz,14,9,0|pp7hg0,15,4,1|q00dfz,15,4,1|q00dg0,14,9,0|q7xk3z,14,9,0|q7xk40,15,4,1|qiqg3z,15,4,1|qiqg40,14,9,0|qqnmrz,14,9,0|qqnms0,15,4,1|r1thfz,15,4,1|r1thg0,14,9,0|r9dpfz,14,9,0|r9dpg0,15,4,1|rkjk3z,15,4,1|rkjk40,14,9,0|rs3s3z,14,9,0|rs3s40,15,4,1|s39mrz,15,4,1|s39ms0,14,9,0|sb6tfz,14,9,0|sb6tg0,15,4,1|slzpfz,15,4,1|slzpg0,14,9,0|stww3z,14,9,0|stww40,15,4,1|t4ps3z,15,4,1|t4ps40,14,9,0|tcmyrz,14,9,0|tcmys0,15,4,1|tnfurz,15,4,1|tnfus0,14,9,0|tvd1fz,14,9,0|tvd1g0,15,4,1|u6iw3z,15,4,1|u6iw40,14,9,0|ue343z,14,9,0|ue3440,15,4,1|up8yrz,15,4,1|up8ys0,14,9,0|uwt6rz,14,9,0|uwt6s0,15,4,1|v7z1fz,15,4,1|v7z1g0,14,9,0|vfw83z,14,9,0|vfw840,15,4,1|vqp43z,15,4,1|vqp440,14,9,0|vymarz,14,9,0|vymas0,15,4,1|w9f6rz,15,4,1|w9f6s0,14,9,0|whcdfz,14,9,0|whcdg0,15,4,1|wsi83z,15,4,1|wsi840,14,9,0|x02g3z,14,9,0|x02g40,15,4,1|xb8arz,15,4,1|xb8as0,14,9,0|xisirz,14,9,0|xisis0,15,4,1|xtydfz,15,4,1|xtydg0,14,9,0|y1ilfz,14,9,0|y1ilg0,15,4,1|ycog3z,15,4,1|ycog40,14,9,0|yklmrz,14,9,0|yklms0,15,4,1|yveirz,15,4,1|yveis0,14,9,0|z3bpfz,14,9,0|z3bpg0,15,4,1|ze4lfz,15,4,1|ze4lg0,14,9,0|zm1s3z,14,9,0|zm1s40,15,4,1|zx7mrz,15,4,1|zx7ms0,14,9,0|104rurz,14,9,0|104rus0,15,4,1|10fxpfz,15,4,1|10fxpg0,14,9,0|10nhxfz,14,9,0|10nhxg0,15,4,1|10yns3z,15,4,1|10yns40,14,9,0|116kyrz,14,9,0|116kys0,15,4,1|11hdurz,15,4,1|11hdus0,14,9,0|11pb1fz,14,9,0|11pb1g0,15,4,1|1203xfz,15,4,1|1203xg0,14,9,0|128143z,14,9,0|1281440,15,4,1|12iu03z,15,4,1|12iu040,14,9,0|12qr6rz,14,9,0|12qr6s0,15,4,1|131x1fz,15,4,1|131x1g0,14,9,0|139h9fz,14,9,0|139h9g0,15,4,1|13kn43z,15,4,1|13kn440,14,9,0|13s7c3z,14,9,0|13s7c40,15,4,1|143d6rz,15,4,1|143d6s0,14,9,0|14badfz,14,9,0|14badg0,15,4,1|14m39fz,15,4,1|14m39g0,14,9,0|14u0g3z,14,9,0|14u0g40,15,4,1|154tc3z,15,4,1|154tc40,14,9,0|15cqirz,14,9,0|15cqis0,15,4,1|15nwdfz,15,4,1|15nwdg0,14,9,0|15vglfz,14,9,0|15vglg0,15,4,1|166mg3z,15,4,1|166mg40,14,9,0|16e6o3z,14,9,0|16e6o40,15,4,1|16pcirz,15,4,1|16pcis0,14,9,0|16x9pfz,14,9,0|16x9pg0,15,4,1|1782lfz,15,4,1|1782lg0,14,9,0|17fzs3z,14,9,0|17fzs40,15,4,1|17qso3z,15,4,1|17qso40,14,9,0|17ypurz,14,9,0|17ypus0,15,4,1|189iqrz,15,4,1|189iqs0,14,9,0|18hfxfz,14,9,0|18hfxg0,15,4,1|18sls3z,15,4,1|18sls40,14,9,0|190603z,14,9,0|1906040,15,4,1|19bburz,15,4,1|19bbus0,14,9,0|19iw2rz,14,9,0|19iw2s0,15,4,1|19u1xfz,15,4,1|19u1xg0,14,9,0|1a1z43z,14,9,0|1a1z440,15,4,1|1acs03z,15,4,1|1acs040,14,9,0|1akp6rz,14,9,0|1akp6s0,15,4,1|1avi2rz,15,4,1|1avi2s0,14,9,0|1b3f9fz,14,9,0|1b3f9g0,15,4,1|1bel43z,15,4,1|1bel440,14,9,0|1bm5c3z,14,9,0|1bm5c40,15,4,1|1bxb6rz,15,4,1|1bxb6s0,14,9,0|1c4verz,14,9,0|1c4ves0,15,4,1|1cg19fz,15,4,1|1cg19g0,14,9,0|1cnlhfz,14,9,0|1cnlhg0,15,4,1|1cyrc3z,15,4,1|1cyrc40,14,9,0|1d6oirz,14,9,0|1d6ois0,15,4,1|1dhherz,15,4,1|1dhhes0,14,9,0|1dpelfz,14,9,0|1dpelg0,15,4,1|1e07hfz,15,4,1|1e07hg0,14,9,0|1e84o3z,14,9,0|1e84o40,15,4,1|1ejairz,15,4,1|1ejais0,14,9,0|1equqrz,14,9,0|1equqs0,15,4,1|1f20lfz,15,4,1|1f20lg0,14,9,0|1f9ktfz,14,9,0|1f9ktg0,15,4,1|1fkqo3z,15,4,1|1fkqo40,14,9,0|1fsnurz,14,9,0|1fsnus0,15,4,1|1g3gqrz,15,4,1|1g3gqs0,14,9,0|1gbdxfz,14,9,0|1gbdxg0,15,4,1|1gm6tfz,15,4,1|1gm6tg0,14,9,0|1gu403z,14,9,0|1gu4040,15,4,1|1h4ww3z,15,4,1|1h4ww40,14,9,0|1hcu2rz,14,9,0|1hcu2s0,15,4,1|1hnzxfz,15,4,1|1hnzxg0,14,9,0|1hvk5fz,14,9,0|1hvk5g0,15,4,1|1i6q03z,15,4,1|1i6q040,14,9,0|1iea83z,14,9,0|1iea840,15,4,1|1ipg2rz,15,4,1|1ipg2s0,14,9,0|1ixd9fz,14,9,0|1ixd9g0,15,4,1|1j865fz,15,4,1|1j865g0,14,9,0|1jg3c3z,14,9,0|1jg3c40,15,4,1|1jqw83z,15,4,1|1jqw840,14,9,0|1jyterz,14,9,0|1jytes0,15,4,1|1k9z9fz,15,4,1|1k9z9g0,14,9,0|1khjhfz,14,9,0|1khjhg0,15,4,1|1kspc3z,15,4,1|1kspc40,14,9,0|1l09k3z,14,9,0|1l09k40,15,4,1|1lbferz,15,4,1|1lbfes0,14,9,0|1ljclfz,14,9,0|1ljclg0,15,4,1|1lu5hfz,15,4,1|1lu5hg0,14,9,0|1m22o3z,14,9,0|1m22o40,15,4,1|1mcvk3z,15,4,1|1mcvk40,14,9,0|1mksqrz,14,9,0|1mksqs0,15,4,1|1mvlmrz,15,4,1|1mvlms0,14,9,0|1n3itfz,14,9,0|1n3itg0,15,4,1|1neoo3z,15,4,1|1neoo40,14,9,0|1nm8w3z,14,9,0|1nm8w40,15,4,1|1nxeqrz,15,4,1|1nxeqs0,14,9,0|1o4yyrz,14,9,0|1o4yys0,15,4,1|1og4tfz,15,4,1|1og4tg0,14,9,0|1oo203z,14,9,0|1oo2040,15,4,1|1oyuw3z,15,4,1|1oyuw40,14,9,0|1p6s2rz,14,9,0|1p6s2s0,15,4,1|1phkyrz,15,4,1|1phkys0,14,9,0|1ppi5fz,14,9,0|1ppi5g0,15,4,1|1q0o03z,15,4,1|1q0o040,14,9,0|1q8883z,14,9,0|1q88840,15,4,1|1qje2rz,15,4,1|1qje2s0,14,9,0|1qqyarz,14,9,0|1qqyas0,15,4,1|1r245fz,15,4,1|1r245g0,14,9,0|1r9odfz,14,9,0|1r9odg0,15,4,1|1rku83z,15,4,1|1rku840,14,9,0|1rsrerz,14,9,0|1rsres0,15,4,1|1s3karz,15,4,1|1s3kas0,14,9,0|1sbhhfz,14,9,0|1sbhhg0,15,4,1|1smadfz,15,4,1|1smadg0,14,9,0|1su7k3z,14,9,0|1su7k40,15,4,1|1t5derz,15,4,1|1t5des0,14,9,0|1tcxmrz,14,9,0|1tcxms0,15,4,1|1to3hfz,15,4,1|1to3hg0,14,9,0|1tvnpfz,14,9,0|1tvnpg0,15,4,1|1u6tk3z,15,4,1|1u6tk40,14,9,0|1ueqqrz,14,9,0|1ueqqs0,15,4,1|1upjmrz,15,4,1|1upjms0,14,9,0|1uxgtfz,14,9,0|1uxgtg0,15,4,1|1v89pfz,15,4,1|1v89pg0,14,9,0|1vg6w3z,14,9,0|1vg6w40,15,4,1|1vqzs3z,15,4,1|1vqzs40,14,9,0|NaN,14,9,0",
        "Europe/Rome|,0,344,0|-1hs7rn9,0,344,0|-1hs7rn8,133,344,0|-13r0qs1,133,344,0|-13r0qs0,8,8,0|-rymys1,8,8,0|-rymys0,9,9,1|-rsio81,9,9,1|-rsio80,8,8,0|-rj5k41,8,8,0|-rj5k40,9,9,1|-r9qqw1,9,9,1|-r9qqw0,8,8,0|-r1idg1,8,8,0|-r1idg0,9,9,1|-qqnpk1,9,9,1|-qqnpk0,8,8,0|-qj59g1,8,8,0|-qj59g0,9,9,1|-q7zhk1,9,9,1|-q7zhk0,8,8,0|-pzcas1,8,8,0|-pzcas0,9,9,1|-ppzc81,9,9,1|-ppzc80,8,8,0|-ff59g1,8,8,0|-ff59g0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d75h81,9,9,1|-d75h80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cohes1,9,9,1|-cohes0,8,8,0|-cf2d81,8,8,0|-cf2d80,9,9,1|-c4mfw1,9,9,1|-c4mfw0,8,8,0|-bwcg41,8,8,0|-bwcg40,9,9,1|-blwis1,9,9,1|-blwis0,8,8,0|-bec581,8,8,0|-bec580,9,9,1|-b36ak1,9,9,1|-b36ak0,8,8,0|-1vwis1,8,8,0|-1vwis0,9,9,1|-1pf9k1,9,9,1|-1pf9k0,8,8,0|-1cthg1,8,8,0|-1cthg0,9,9,1|-16p441,9,9,1|-16p440,8,8,0|-u3es1,8,8,0|-u3es0,9,9,1|-nz1g1,9,9,1|-nz1g0,8,8,0|-b0dg1,8,8,0|-b0dg0,9,9,1|-4w041,9,9,1|-4w040,8,8,0|7pp7z,8,8,0|7pp80,9,9,1|du2jz,9,9,1|du2k0,8,8,0|q2t7z,8,8,0|q2t80,9,9,1|wk57z,9,9,1|wk580,8,8,0|195ujz,8,8,0|195uk0,9,9,1|1fn6jz,9,9,1|1fn6k0,8,8,0|1s8vvz,8,8,0|1s8vw0,9,9,1|1yd97z,9,9,1|1yd980,8,8,0|2alzvz,8,8,0|2alzw0,9,9,1|2h3bvz,9,9,1|2h3bw0,8,8,0|2tp17z,8,8,0|2tp180,9,9,1|2ztejz,9,9,1|2ztek0,8,8,0|3cf3vz,8,8,0|3cf3w0,9,9,1|3ijh7z,9,9,1|3ijh80,8,8,0|3us7vz,8,8,0|3us7w0,9,9,1|419jvz,9,9,1|419jw0,8,8,0|4dv97z,8,8,0|4dv980,9,9,1|4kcl7z,9,9,1|4kcl80,8,8,0|4wlbvz,8,8,0|4wlbw0,9,9,1|532nvz,9,9,1|532nw0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Samara|,0,345,0|-qcx401,0,345,0|-qcx400,96,4,0|-kmr4c1,96,4,0|-kmr4c0,102,201,0|5vb3jz,102,201,0|5vb3k0,87,184,1|64pwrz,87,184,1|64pws0,102,201,0|6e30vz,102,201,0|6e30w0,87,184,1|6nhu3z,87,184,1|6nhu40,102,201,0|6wuy7z,102,201,0|6wuy80,87,184,1|769rfz,87,184,1|769rg0,102,201,0|7foq7z,102,201,0|7foq80,87,184,1|7p1x3z,87,184,1|7p1x40,102,201,0|7yeyfz,102,201,0|7yeyg0,87,184,1|87rzrz,87,184,1|87rzs0,102,201,0|8h513z,102,201,0|8h5140,87,184,1|8qi2fz,87,184,1|8qi2g0,102,201,0|8zv3rz,102,201,0|8zv3s0,87,184,1|99853z,87,184,1|998540,102,201,0|9il6fz,102,201,0|9il6g0,87,184,1|9ry7rz,87,184,1|9ry7s0,102,201,0|a1b93z,102,201,0|a1b940,102,201,1|aaod7z,102,201,1|aaod80,96,4,0|ak1ejz,96,4,0|ak1ek0,102,201,1|atrejz,102,201,1|atrek0,96,4,0|b34fvz,96,4,0|b34fw0,96,4,1|bchjzz,96,4,1|bchk00,96,4,0|bdkfzz,96,4,0|bdkg00,102,201,0|blufrz,102,201,0|blufs0,87,184,1|bv7h3z,87,184,1|bv7h40,102,201,0|c4kifz,102,201,0|c4kig0,87,184,1|cdxjrz,87,184,1|cdxjs0,102,201,0|cnal3z,102,201,0|cnal40,87,184,1|cwnmfz,87,184,1|cwnmg0,102,201,0|d60nrz,102,201,0|d60ns0,87,184,1|dfdp3z,87,184,1|dfdp40,102,201,0|dp3p3z,102,201,0|dp3p40,87,184,1|dzwl3z,87,184,1|dzwl40,102,201,0|e7trrz,102,201,0|e7trs0,87,184,1|eimnrz,87,184,1|eimns0,102,201,0|eqjufz,102,201,0|eqjug0,87,184,1|f1cqfz,87,184,1|f1cqg0,102,201,0|f99x3z,102,201,0|f99x40,87,184,1|fkfrrz,87,184,1|fkfrs0,102,201,0|frzzrz,102,201,0|frzzs0,87,184,1|g35ufz,87,184,1|g35ug0,102,201,0|gaq2fz,102,201,0|gaq2g0,87,184,1|glvx3z,87,184,1|glvx40,102,201,0|gtt3rz,102,201,0|gtt3s0,87,184,1|h4lzrz,87,184,1|h4lzs0,102,201,0|hcj6fz,102,201,0|hcj6g0,87,184,1|hnc2fz,87,184,1|hnc2g0,102,201,0|hv993z,102,201,0|hv9940,87,184,1|i6f3rz,87,184,1|i6f3s0,102,201,0|idzbrz,102,201,0|idzbs0,87,184,1|ip56fz,87,184,1|ip56g0,102,201,0|iwpefz,102,201,0|iwpeg0,87,184,1|j7v93z,87,184,1|j7v940,102,201,0|jffh3z,102,201,0|jffh40,87,184,1|jqlbrz,87,184,1|jqlbs0,102,201,0|jyiifz,102,201,0|jyiig0,87,184,1|k9befz,87,184,1|k9beg0,102,201,0|kh8l3z,102,201,0|kh8l40,87,184,1|ks1h3z,87,184,1|ks1h40,102,201,0|kzynrz,102,201,0|kzyns0,102,201,1|lb4l7z,102,201,1|lb4l80,96,4,0|liot7z,96,4,0|liot80,102,201,0|NaN,102,201,0",
        "Europe/San_Marino|,0,344,0|-1hs7rn9,0,344,0|-1hs7rn8,133,344,0|-13r0qs1,133,344,0|-13r0qs0,8,8,0|-rymys1,8,8,0|-rymys0,9,9,1|-rsio81,9,9,1|-rsio80,8,8,0|-rj5k41,8,8,0|-rj5k40,9,9,1|-r9qqw1,9,9,1|-r9qqw0,8,8,0|-r1idg1,8,8,0|-r1idg0,9,9,1|-qqnpk1,9,9,1|-qqnpk0,8,8,0|-qj59g1,8,8,0|-qj59g0,9,9,1|-q7zhk1,9,9,1|-q7zhk0,8,8,0|-pzcas1,8,8,0|-pzcas0,9,9,1|-ppzc81,9,9,1|-ppzc80,8,8,0|-ff59g1,8,8,0|-ff59g0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d75h81,9,9,1|-d75h80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cohes1,9,9,1|-cohes0,8,8,0|-cf2d81,8,8,0|-cf2d80,9,9,1|-c4mfw1,9,9,1|-c4mfw0,8,8,0|-bwcg41,8,8,0|-bwcg40,9,9,1|-blwis1,9,9,1|-blwis0,8,8,0|-bec581,8,8,0|-bec580,9,9,1|-b36ak1,9,9,1|-b36ak0,8,8,0|-1vwis1,8,8,0|-1vwis0,9,9,1|-1pf9k1,9,9,1|-1pf9k0,8,8,0|-1cthg1,8,8,0|-1cthg0,9,9,1|-16p441,9,9,1|-16p440,8,8,0|-u3es1,8,8,0|-u3es0,9,9,1|-nz1g1,9,9,1|-nz1g0,8,8,0|-b0dg1,8,8,0|-b0dg0,9,9,1|-4w041,9,9,1|-4w040,8,8,0|7pp7z,8,8,0|7pp80,9,9,1|du2jz,9,9,1|du2k0,8,8,0|q2t7z,8,8,0|q2t80,9,9,1|wk57z,9,9,1|wk580,8,8,0|195ujz,8,8,0|195uk0,9,9,1|1fn6jz,9,9,1|1fn6k0,8,8,0|1s8vvz,8,8,0|1s8vw0,9,9,1|1yd97z,9,9,1|1yd980,8,8,0|2alzvz,8,8,0|2alzw0,9,9,1|2h3bvz,9,9,1|2h3bw0,8,8,0|2tp17z,8,8,0|2tp180,9,9,1|2ztejz,9,9,1|2ztek0,8,8,0|3cf3vz,8,8,0|3cf3w0,9,9,1|3ijh7z,9,9,1|3ijh80,8,8,0|3us7vz,8,8,0|3us7w0,9,9,1|419jvz,9,9,1|419jw0,8,8,0|4dv97z,8,8,0|4dv980,9,9,1|4kcl7z,9,9,1|4kcl80,8,8,0|4wlbvz,8,8,0|4wlbw0,9,9,1|532nvz,9,9,1|532nw0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Sarajevo|,0,317,0|-18vsmgp,0,317,0|-18vsmgo,8,8,0|-ezayw1,8,8,0|-ezayw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cv5zw1,8,8,0|-cv5zw0,9,9,1|-cofek1,9,9,1|-cofek0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Saratov|,0,346,0|-qcx401,0,346,0|-qcx400,96,4,0|-kmr4c1,96,4,0|-kmr4c0,102,201,0|5vb3jz,102,201,0|5vb3k0,87,184,1|64pwrz,87,184,1|64pws0,102,201,0|6e30vz,102,201,0|6e30w0,87,184,1|6nhu3z,87,184,1|6nhu40,102,201,0|6wuy7z,102,201,0|6wuy80,87,184,1|769rfz,87,184,1|769rg0,102,201,0|7foq7z,102,201,0|7foq80,87,184,1|7p1x3z,87,184,1|7p1x40,102,201,0|7yeyfz,102,201,0|7yeyg0,87,184,1|87rzrz,87,184,1|87rzs0,102,201,0|8h513z,102,201,0|8h5140,87,184,1|8qi2fz,87,184,1|8qi2g0,102,201,0|8zv3rz,102,201,0|8zv3s0,87,184,1|99853z,87,184,1|998540,102,201,0|9il6fz,102,201,0|9il6g0,102,201,1|9ryajz,102,201,1|9ryak0,96,4,0|a1bbvz,96,4,0|a1bbw0,102,201,1|aaod7z,102,201,1|aaod80,96,4,0|ak1ejz,96,4,0|ak1ek0,102,201,1|atrejz,102,201,1|atrek0,96,4,0|b34fvz,96,4,0|b34fw0,102,201,0|blufrz,102,201,0|blufs0,102,201,1|bv7jvz,102,201,1|bv7jw0,96,4,0|c4kl7z,96,4,0|c4kl80,102,201,1|cdxmjz,102,201,1|cdxmk0,96,4,0|cnanvz,96,4,0|cnanw0,102,201,1|cwnp7z,102,201,1|cwnp80,96,4,0|d60qjz,96,4,0|d60qk0,102,201,1|dfdrvz,102,201,1|dfdrw0,96,4,0|dp3rvz,96,4,0|dp3rw0,102,201,1|dzwnvz,102,201,1|dzwnw0,96,4,0|e7tujz,96,4,0|e7tuk0,102,201,1|eimqjz,102,201,1|eimqk0,96,4,0|eqjx7z,96,4,0|eqjx80,102,201,1|f1ct7z,102,201,1|f1ct80,96,4,0|f99zvz,96,4,0|f99zw0,102,201,1|fkfujz,102,201,1|fkfuk0,96,4,0|fs02jz,96,4,0|fs02k0,102,201,1|g35x7z,102,201,1|g35x80,96,4,0|gaq57z,96,4,0|gaq580,102,201,1|glvzvz,102,201,1|glvzw0,96,4,0|gtt6jz,96,4,0|gtt6k0,102,201,1|h4m2jz,102,201,1|h4m2k0,96,4,0|hcj97z,96,4,0|hcj980,102,201,1|hnc57z,102,201,1|hnc580,96,4,0|hv9bvz,96,4,0|hv9bw0,102,201,1|i6f6jz,102,201,1|i6f6k0,96,4,0|idzejz,96,4,0|idzek0,102,201,1|ip597z,102,201,1|ip5980,96,4,0|iwph7z,96,4,0|iwph80,102,201,1|j7vbvz,102,201,1|j7vbw0,96,4,0|jffjvz,96,4,0|jffjw0,102,201,1|jqlejz,102,201,1|jqlek0,96,4,0|jyil7z,96,4,0|jyil80,102,201,1|k9bh7z,102,201,1|k9bh80,96,4,0|kh8nvz,96,4,0|kh8nw0,102,201,1|ks1jvz,102,201,1|ks1jw0,96,4,0|kzyqjz,96,4,0|kzyqk0,102,201,1|lb4l7z,102,201,1|lb4l80,96,4,0|liot7z,96,4,0|liot80,102,201,0|ne0t3z,102,201,0|ne0t40,96,4,0|ohmt7z,96,4,0|ohmt80,102,201,0|NaN,102,201,0",
        "Europe/Simferopol|,0,347,0|-1ayy8zd,0,347,0|-1ayy8zc,81,348,0|-nu12ap,81,348,0|-nu12ao,14,9,0|-kmr1k1,14,9,0|-kmr1k0,143,4,0|-ep8301,143,4,0|-ep8300,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-df8g81,9,9,1|-df8g80,143,4,0|5vb6bz,143,4,0|5vb6c0,144,201,1|64pzjz,144,201,1|64pzk0,143,4,0|6e33nz,143,4,0|6e33o0,144,201,1|6nhwvz,144,201,1|6nhww0,143,4,0|6wv0zz,143,4,0|6wv100,144,201,1|769u7z,144,201,1|769u80,143,4,0|7foszz,143,4,0|7fot00,144,201,1|7p1zvz,144,201,1|7p1zw0,143,4,0|7yf17z,143,4,0|7yf180,144,201,1|87s2jz,144,201,1|87s2k0,143,4,0|8h53vz,143,4,0|8h53w0,144,201,1|8qi57z,144,201,1|8qi580,143,4,0|8zv6jz,143,4,0|8zv6k0,144,201,1|9987vz,144,201,1|9987w0,143,4,0|9il97z,143,4,0|9il980,144,201,1|9ryajz,144,201,1|9ryak0,143,4,0|a1bbvz,143,4,0|a1bbw0,144,201,1|aaod7z,144,201,1|aaod80,143,4,0|ap2vvz,143,4,0|ap2vw0,14,9,0|blulbz,14,9,0|blulc0,15,4,1|bv7mnz,15,4,1|bv7mo0,14,9,0|c4knzz,14,9,0|c4ko00,15,4,1|cdxpbz,15,4,1|cdxpc0,14,9,0|cnaqnz,14,9,0|cnaqo0,15,4,1|cp3bnz,15,4,1|cp3bo0,144,201,1|cwnp7z,144,201,1|cwnp80,143,4,0|d60qjz,143,4,0|d60qk0,144,201,1|dfdrvz,144,201,1|dfdrw0,143,4,0|dp3mbz,143,4,0|dp3mc0,144,201,1|dzwqnz,144,201,1|dzwqo0,143,4,0|e7u03z,143,4,0|e7u040,15,4,1|eimw3z,15,4,1|eimw40,14,9,0|eqk2rz,14,9,0|eqk2s0,15,4,1|f1cyrz,15,4,1|f1cys0,14,9,0|f9a5fz,14,9,0|f9a5g0,15,4,1|fkg03z,15,4,1|fkg040,14,9,0|fs083z,14,9,0|fs0840,15,4,1|g362rz,15,4,1|g362s0,14,9,0|gaqarz,14,9,0|gaqas0,15,4,1|glw5fz,15,4,1|glw5g0,14,9,0|gttc3z,14,9,0|gttc40,15,4,1|h4m83z,15,4,1|h4m840,14,9,0|hcjerz,14,9,0|hcjes0,15,4,1|hncarz,15,4,1|hncas0,14,9,0|hv9hfz,14,9,0|hv9hg0,15,4,1|i6fc3z,15,4,1|i6fc40,14,9,0|idzk3z,14,9,0|idzk40,15,4,1|ip5erz,15,4,1|ip5es0,14,9,0|iwpmrz,14,9,0|iwpms0,15,4,1|j7vhfz,15,4,1|j7vhg0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|lioyrz,14,9,0|lioys0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n382nz,14,9,0|n382o0,143,201,0|ne0t3z,143,201,0|ne0t40,143,4,0|NaN,143,4,0",
        "Europe/Skopje|,0,317,0|-18vsmgp,0,317,0|-18vsmgo,8,8,0|-ezayw1,8,8,0|-ezayw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cv5zw1,8,8,0|-cv5zw0,9,9,1|-cofek1,9,9,1|-cofek0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Sofia|,0,349,0|-1ayy6zh,0,349,0|-1ayy6zg,115,331,0|-136r6qx,115,331,0|-136r6qw,14,9,0|-e6dzw1,14,9,0|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cx0l41,8,8,0|-cx0l40,14,9,0|4tpgzz,14,9,0|4tph00,15,4,1|534frz,15,4,1|534fs0,14,9,0|5csibz,14,9,0|5csic0,15,4,1|5luifz,15,4,1|5luig0,14,9,0|5vikzz,14,9,0|5vil00,15,4,1|64it7z,15,4,1|64it80,14,9,0|6e8nnz,14,9,0|6e8no0,15,4,1|6n8ynz,15,4,1|6n8yo0,14,9,0|6wlzzz,14,9,0|6wm000,15,4,1|75z1bz,15,4,1|75z1c0,14,9,0|7fc2nz,14,9,0|7fc2o0,15,4,1|7p22nz,15,4,1|7p22o0,14,9,0|7yf3zz,14,9,0|7yf400,15,4,1|87s5bz,15,4,1|87s5c0,14,9,0|8h56nz,14,9,0|8h56o0,15,4,1|8qi7zz,15,4,1|8qi800,14,9,0|8zv9bz,14,9,0|8zv9c0,15,4,1|998anz,15,4,1|998ao0,14,9,0|9ilbzz,14,9,0|9ilc00,15,4,1|9rydbz,15,4,1|9rydc0,14,9,0|a1benz,14,9,0|a1beo0,15,4,1|aaofzz,15,4,1|aaog00,14,9,0|ak1hbz,14,9,0|ak1hc0,15,4,1|atrhbz,15,4,1|atrhc0,14,9,0|b34d3z,14,9,0|b34d40,15,4,1|bchbnz,15,4,1|bchbo0,14,9,0|blufrz,14,9,0|blufs0,15,4,1|bv7ebz,15,4,1|bv7ec0,14,9,0|c4kifz,14,9,0|c4kig0,15,4,1|cdxgzz,15,4,1|cdxh00,14,9,0|cnal3z,14,9,0|cnal40,15,4,1|cwnjnz,15,4,1|cwnjo0,14,9,0|d60nrz,14,9,0|d60ns0,15,4,1|dfdmbz,15,4,1|dfdmc0,14,9,0|dp3p3z,14,9,0|dp3p40,15,4,1|dzwibz,15,4,1|dzwic0,14,9,0|e7u03z,14,9,0|e7u040,15,4,1|eimw3z,15,4,1|eimw40,14,9,0|eqk2rz,14,9,0|eqk2s0,15,4,1|f1cyrz,15,4,1|f1cys0,14,9,0|f9a5fz,14,9,0|f9a5g0,15,4,1|fkg03z,15,4,1|fkg040,14,9,0|fs083z,14,9,0|fs0840,15,4,1|g362rz,15,4,1|g362s0,14,9,0|gaqarz,14,9,0|gaqas0,15,4,1|glw5fz,15,4,1|glw5g0,14,9,0|gttc3z,14,9,0|gttc40,15,4,1|h4m83z,15,4,1|h4m840,14,9,0|hcjerz,14,9,0|hcjes0,15,4,1|hncarz,15,4,1|hncas0,14,9,0|hv9hfz,14,9,0|hv9hg0,15,4,1|i6fc3z,15,4,1|i6fc40,14,9,0|idzk3z,14,9,0|idzk40,15,4,1|ip5erz,15,4,1|ip5es0,14,9,0|iwpmrz,14,9,0|iwpms0,15,4,1|j7vhfz,15,4,1|j7vhg0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|lioyrz,14,9,0|lioys0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n385fz,14,9,0|n385g0,15,4,1|ne11fz,15,4,1|ne11g0,14,9,0|nly83z,14,9,0|nly840,15,4,1|nwr43z,15,4,1|nwr440,14,9,0|o4oarz,14,9,0|o4oas0,15,4,1|ofu5fz,15,4,1|ofu5g0,14,9,0|onedfz,14,9,0|onedg0,15,4,1|oyk83z,15,4,1|oyk840,14,9,0|p64g3z,14,9,0|p64g40,15,4,1|phaarz,15,4,1|phaas0,14,9,0|pp7hfz,14,9,0|pp7hg0,15,4,1|q00dfz,15,4,1|q00dg0,14,9,0|q7xk3z,14,9,0|q7xk40,15,4,1|qiqg3z,15,4,1|qiqg40,14,9,0|qqnmrz,14,9,0|qqnms0,15,4,1|r1thfz,15,4,1|r1thg0,14,9,0|r9dpfz,14,9,0|r9dpg0,15,4,1|rkjk3z,15,4,1|rkjk40,14,9,0|rs3s3z,14,9,0|rs3s40,15,4,1|s39mrz,15,4,1|s39ms0,14,9,0|sb6tfz,14,9,0|sb6tg0,15,4,1|slzpfz,15,4,1|slzpg0,14,9,0|stww3z,14,9,0|stww40,15,4,1|t4ps3z,15,4,1|t4ps40,14,9,0|tcmyrz,14,9,0|tcmys0,15,4,1|tnfurz,15,4,1|tnfus0,14,9,0|tvd1fz,14,9,0|tvd1g0,15,4,1|u6iw3z,15,4,1|u6iw40,14,9,0|ue343z,14,9,0|ue3440,15,4,1|up8yrz,15,4,1|up8ys0,14,9,0|uwt6rz,14,9,0|uwt6s0,15,4,1|v7z1fz,15,4,1|v7z1g0,14,9,0|vfw83z,14,9,0|vfw840,15,4,1|vqp43z,15,4,1|vqp440,14,9,0|vymarz,14,9,0|vymas0,15,4,1|w9f6rz,15,4,1|w9f6s0,14,9,0|whcdfz,14,9,0|whcdg0,15,4,1|wsi83z,15,4,1|wsi840,14,9,0|x02g3z,14,9,0|x02g40,15,4,1|xb8arz,15,4,1|xb8as0,14,9,0|xisirz,14,9,0|xisis0,15,4,1|xtydfz,15,4,1|xtydg0,14,9,0|y1ilfz,14,9,0|y1ilg0,15,4,1|ycog3z,15,4,1|ycog40,14,9,0|yklmrz,14,9,0|yklms0,15,4,1|yveirz,15,4,1|yveis0,14,9,0|z3bpfz,14,9,0|z3bpg0,15,4,1|ze4lfz,15,4,1|ze4lg0,14,9,0|zm1s3z,14,9,0|zm1s40,15,4,1|zx7mrz,15,4,1|zx7ms0,14,9,0|104rurz,14,9,0|104rus0,15,4,1|10fxpfz,15,4,1|10fxpg0,14,9,0|10nhxfz,14,9,0|10nhxg0,15,4,1|10yns3z,15,4,1|10yns40,14,9,0|116kyrz,14,9,0|116kys0,15,4,1|11hdurz,15,4,1|11hdus0,14,9,0|11pb1fz,14,9,0|11pb1g0,15,4,1|1203xfz,15,4,1|1203xg0,14,9,0|128143z,14,9,0|1281440,15,4,1|12iu03z,15,4,1|12iu040,14,9,0|12qr6rz,14,9,0|12qr6s0,15,4,1|131x1fz,15,4,1|131x1g0,14,9,0|139h9fz,14,9,0|139h9g0,15,4,1|13kn43z,15,4,1|13kn440,14,9,0|13s7c3z,14,9,0|13s7c40,15,4,1|143d6rz,15,4,1|143d6s0,14,9,0|14badfz,14,9,0|14badg0,15,4,1|14m39fz,15,4,1|14m39g0,14,9,0|14u0g3z,14,9,0|14u0g40,15,4,1|154tc3z,15,4,1|154tc40,14,9,0|15cqirz,14,9,0|15cqis0,15,4,1|15nwdfz,15,4,1|15nwdg0,14,9,0|15vglfz,14,9,0|15vglg0,15,4,1|166mg3z,15,4,1|166mg40,14,9,0|16e6o3z,14,9,0|16e6o40,15,4,1|16pcirz,15,4,1|16pcis0,14,9,0|16x9pfz,14,9,0|16x9pg0,15,4,1|1782lfz,15,4,1|1782lg0,14,9,0|17fzs3z,14,9,0|17fzs40,15,4,1|17qso3z,15,4,1|17qso40,14,9,0|17ypurz,14,9,0|17ypus0,15,4,1|189iqrz,15,4,1|189iqs0,14,9,0|18hfxfz,14,9,0|18hfxg0,15,4,1|18sls3z,15,4,1|18sls40,14,9,0|190603z,14,9,0|1906040,15,4,1|19bburz,15,4,1|19bbus0,14,9,0|19iw2rz,14,9,0|19iw2s0,15,4,1|19u1xfz,15,4,1|19u1xg0,14,9,0|1a1z43z,14,9,0|1a1z440,15,4,1|1acs03z,15,4,1|1acs040,14,9,0|1akp6rz,14,9,0|1akp6s0,15,4,1|1avi2rz,15,4,1|1avi2s0,14,9,0|1b3f9fz,14,9,0|1b3f9g0,15,4,1|1bel43z,15,4,1|1bel440,14,9,0|1bm5c3z,14,9,0|1bm5c40,15,4,1|1bxb6rz,15,4,1|1bxb6s0,14,9,0|1c4verz,14,9,0|1c4ves0,15,4,1|1cg19fz,15,4,1|1cg19g0,14,9,0|1cnlhfz,14,9,0|1cnlhg0,15,4,1|1cyrc3z,15,4,1|1cyrc40,14,9,0|1d6oirz,14,9,0|1d6ois0,15,4,1|1dhherz,15,4,1|1dhhes0,14,9,0|1dpelfz,14,9,0|1dpelg0,15,4,1|1e07hfz,15,4,1|1e07hg0,14,9,0|1e84o3z,14,9,0|1e84o40,15,4,1|1ejairz,15,4,1|1ejais0,14,9,0|1equqrz,14,9,0|1equqs0,15,4,1|1f20lfz,15,4,1|1f20lg0,14,9,0|1f9ktfz,14,9,0|1f9ktg0,15,4,1|1fkqo3z,15,4,1|1fkqo40,14,9,0|1fsnurz,14,9,0|1fsnus0,15,4,1|1g3gqrz,15,4,1|1g3gqs0,14,9,0|1gbdxfz,14,9,0|1gbdxg0,15,4,1|1gm6tfz,15,4,1|1gm6tg0,14,9,0|1gu403z,14,9,0|1gu4040,15,4,1|1h4ww3z,15,4,1|1h4ww40,14,9,0|1hcu2rz,14,9,0|1hcu2s0,15,4,1|1hnzxfz,15,4,1|1hnzxg0,14,9,0|1hvk5fz,14,9,0|1hvk5g0,15,4,1|1i6q03z,15,4,1|1i6q040,14,9,0|1iea83z,14,9,0|1iea840,15,4,1|1ipg2rz,15,4,1|1ipg2s0,14,9,0|1ixd9fz,14,9,0|1ixd9g0,15,4,1|1j865fz,15,4,1|1j865g0,14,9,0|1jg3c3z,14,9,0|1jg3c40,15,4,1|1jqw83z,15,4,1|1jqw840,14,9,0|1jyterz,14,9,0|1jytes0,15,4,1|1k9z9fz,15,4,1|1k9z9g0,14,9,0|1khjhfz,14,9,0|1khjhg0,15,4,1|1kspc3z,15,4,1|1kspc40,14,9,0|1l09k3z,14,9,0|1l09k40,15,4,1|1lbferz,15,4,1|1lbfes0,14,9,0|1ljclfz,14,9,0|1ljclg0,15,4,1|1lu5hfz,15,4,1|1lu5hg0,14,9,0|1m22o3z,14,9,0|1m22o40,15,4,1|1mcvk3z,15,4,1|1mcvk40,14,9,0|1mksqrz,14,9,0|1mksqs0,15,4,1|1mvlmrz,15,4,1|1mvlms0,14,9,0|1n3itfz,14,9,0|1n3itg0,15,4,1|1neoo3z,15,4,1|1neoo40,14,9,0|1nm8w3z,14,9,0|1nm8w40,15,4,1|1nxeqrz,15,4,1|1nxeqs0,14,9,0|1o4yyrz,14,9,0|1o4yys0,15,4,1|1og4tfz,15,4,1|1og4tg0,14,9,0|1oo203z,14,9,0|1oo2040,15,4,1|1oyuw3z,15,4,1|1oyuw40,14,9,0|1p6s2rz,14,9,0|1p6s2s0,15,4,1|1phkyrz,15,4,1|1phkys0,14,9,0|1ppi5fz,14,9,0|1ppi5g0,15,4,1|1q0o03z,15,4,1|1q0o040,14,9,0|1q8883z,14,9,0|1q88840,15,4,1|1qje2rz,15,4,1|1qje2s0,14,9,0|1qqyarz,14,9,0|1qqyas0,15,4,1|1r245fz,15,4,1|1r245g0,14,9,0|1r9odfz,14,9,0|1r9odg0,15,4,1|1rku83z,15,4,1|1rku840,14,9,0|1rsrerz,14,9,0|1rsres0,15,4,1|1s3karz,15,4,1|1s3kas0,14,9,0|1sbhhfz,14,9,0|1sbhhg0,15,4,1|1smadfz,15,4,1|1smadg0,14,9,0|1su7k3z,14,9,0|1su7k40,15,4,1|1t5derz,15,4,1|1t5des0,14,9,0|1tcxmrz,14,9,0|1tcxms0,15,4,1|1to3hfz,15,4,1|1to3hg0,14,9,0|1tvnpfz,14,9,0|1tvnpg0,15,4,1|1u6tk3z,15,4,1|1u6tk40,14,9,0|1ueqqrz,14,9,0|1ueqqs0,15,4,1|1upjmrz,15,4,1|1upjms0,14,9,0|1uxgtfz,14,9,0|1uxgtg0,15,4,1|1v89pfz,15,4,1|1v89pg0,14,9,0|1vg6w3z,14,9,0|1vg6w40,15,4,1|1vqzs3z,15,4,1|1vqzs40,14,9,0|NaN,14,9,0",
        "Europe/Stockholm|,0,195,0|-1421155,0,195,0|-1421154,8,8,0|-s0e081,8,8,0|-s0e080,9,9,1|-rsilg1,9,9,1|-rsilg0,8,8,0|-ridmk1,8,8,0|-ridmk0,9,9,1|-ragfw1,9,9,1|-ragfw0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,8,8,0|-fizzw1,8,8,0|-fizzw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cucg01,9,9,1|-cucg00,98,4,1|-co0o01,98,4,1|-co0o00,9,9,1|-cl6qk1,9,9,1|-cl6qk0,8,8,0|-cdmik1,8,8,0|-cdmik0,9,9,1|-c4kl81,9,9,1|-c4kl80,8,8,0|-bv9bs1,8,8,0|-bv9bs0,9,9,1|-btgl81,9,9,1|-btgl80,98,4,1|-bqxxc1,98,4,1|-bqxxc0,9,9,1|-blwd81,9,9,1|-blwd80,8,8,0|-bbtek1,8,8,0|-bbtek0,9,9,1|-b36ak1,9,9,1|-b36ak0,8,8,0|-atgak1,8,8,0|-atgak0,9,9,1|-akg7w1,9,9,1|-akg7w0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Tallinn|,0,350,0|-1ayy791,0,350,0|-1ayy790,130,350,0|-r3exx1,130,350,0|-r3exx0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,8,8,0|-qcx6s1,8,8,0|-qcx6s0,130,350,0|-peghx1,130,350,0|-peghx0,14,9,0|-fch1k1,14,9,0|-fch1k0,143,4,0|-ern4c1,143,4,0|-ern4c0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6wg81,9,9,1|-d6wg80,143,4,0|5vb6bz,143,4,0|5vb6c0,144,201,1|64pzjz,144,201,1|64pzk0,143,4,0|6e33nz,143,4,0|6e33o0,144,201,1|6nhwvz,144,201,1|6nhww0,143,4,0|6wv0zz,143,4,0|6wv100,144,201,1|769u7z,144,201,1|769u80,143,4,0|7foszz,143,4,0|7fot00,144,201,1|7p1zvz,144,201,1|7p1zw0,143,4,0|7yf17z,143,4,0|7yf180,144,201,1|87s2jz,144,201,1|87s2k0,143,4,0|8h53vz,143,4,0|8h53w0,144,201,1|8qi57z,144,201,1|8qi580,143,4,0|8zv6jz,143,4,0|8zv6k0,144,201,1|9987vz,144,201,1|9987w0,143,4,0|9il97z,143,4,0|9il980,144,201,1|9ryajz,144,201,1|9ryak0,143,4,0|a1bbvz,143,4,0|a1bbw0,15,4,1|aaofzz,15,4,1|aaog00,14,9,0|ak1hbz,14,9,0|ak1hc0,15,4,1|atrhbz,15,4,1|atrhc0,14,9,0|b34inz,14,9,0|b34io0,15,4,1|bchjzz,15,4,1|bchk00,14,9,0|blulbz,14,9,0|blulc0,15,4,1|bv7mnz,15,4,1|bv7mo0,14,9,0|c4knzz,14,9,0|c4ko00,15,4,1|cdxpbz,15,4,1|cdxpc0,14,9,0|cnaqnz,14,9,0|cnaqo0,15,4,1|cwnrzz,15,4,1|cwns00,14,9,0|d60tbz,14,9,0|d60tc0,15,4,1|dfdunz,15,4,1|dfduo0,14,9,0|dp3unz,14,9,0|dp3uo0,15,4,1|dzwqnz,15,4,1|dzwqo0,14,9,0|e7txbz,14,9,0|e7txc0,15,4,1|eimtbz,15,4,1|eimtc0,14,9,0|eqjzzz,14,9,0|eqk000,15,4,1|f1cyrz,15,4,1|f1cys0,14,9,0|f9a5fz,14,9,0|f9a5g0,15,4,1|fkg03z,15,4,1|fkg040,14,9,0|gttc3z,14,9,0|gttc40,15,4,1|h4m83z,15,4,1|h4m840,14,9,0|hcjerz,14,9,0|hcjes0,15,4,1|hncarz,15,4,1|hncas0,14,9,0|hv9hfz,14,9,0|hv9hg0,15,4,1|i6fc3z,15,4,1|i6fc40,14,9,0|idzk3z,14,9,0|idzk40,15,4,1|ip5erz,15,4,1|ip5es0,14,9,0|iwpmrz,14,9,0|iwpms0,15,4,1|j7vhfz,15,4,1|j7vhg0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|lioyrz,14,9,0|lioys0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n385fz,14,9,0|n385g0,15,4,1|ne11fz,15,4,1|ne11g0,14,9,0|nly83z,14,9,0|nly840,15,4,1|nwr43z,15,4,1|nwr440,14,9,0|o4oarz,14,9,0|o4oas0,15,4,1|ofu5fz,15,4,1|ofu5g0,14,9,0|onedfz,14,9,0|onedg0,15,4,1|oyk83z,15,4,1|oyk840,14,9,0|p64g3z,14,9,0|p64g40,15,4,1|phaarz,15,4,1|phaas0,14,9,0|pp7hfz,14,9,0|pp7hg0,15,4,1|q00dfz,15,4,1|q00dg0,14,9,0|q7xk3z,14,9,0|q7xk40,15,4,1|qiqg3z,15,4,1|qiqg40,14,9,0|qqnmrz,14,9,0|qqnms0,15,4,1|r1thfz,15,4,1|r1thg0,14,9,0|r9dpfz,14,9,0|r9dpg0,15,4,1|rkjk3z,15,4,1|rkjk40,14,9,0|rs3s3z,14,9,0|rs3s40,15,4,1|s39mrz,15,4,1|s39ms0,14,9,0|sb6tfz,14,9,0|sb6tg0,15,4,1|slzpfz,15,4,1|slzpg0,14,9,0|stww3z,14,9,0|stww40,15,4,1|t4ps3z,15,4,1|t4ps40,14,9,0|tcmyrz,14,9,0|tcmys0,15,4,1|tnfurz,15,4,1|tnfus0,14,9,0|tvd1fz,14,9,0|tvd1g0,15,4,1|u6iw3z,15,4,1|u6iw40,14,9,0|ue343z,14,9,0|ue3440,15,4,1|up8yrz,15,4,1|up8ys0,14,9,0|uwt6rz,14,9,0|uwt6s0,15,4,1|v7z1fz,15,4,1|v7z1g0,14,9,0|vfw83z,14,9,0|vfw840,15,4,1|vqp43z,15,4,1|vqp440,14,9,0|vymarz,14,9,0|vymas0,15,4,1|w9f6rz,15,4,1|w9f6s0,14,9,0|whcdfz,14,9,0|whcdg0,15,4,1|wsi83z,15,4,1|wsi840,14,9,0|x02g3z,14,9,0|x02g40,15,4,1|xb8arz,15,4,1|xb8as0,14,9,0|xisirz,14,9,0|xisis0,15,4,1|xtydfz,15,4,1|xtydg0,14,9,0|y1ilfz,14,9,0|y1ilg0,15,4,1|ycog3z,15,4,1|ycog40,14,9,0|yklmrz,14,9,0|yklms0,15,4,1|yveirz,15,4,1|yveis0,14,9,0|z3bpfz,14,9,0|z3bpg0,15,4,1|ze4lfz,15,4,1|ze4lg0,14,9,0|zm1s3z,14,9,0|zm1s40,15,4,1|zx7mrz,15,4,1|zx7ms0,14,9,0|104rurz,14,9,0|104rus0,15,4,1|10fxpfz,15,4,1|10fxpg0,14,9,0|10nhxfz,14,9,0|10nhxg0,15,4,1|10yns3z,15,4,1|10yns40,14,9,0|116kyrz,14,9,0|116kys0,15,4,1|11hdurz,15,4,1|11hdus0,14,9,0|11pb1fz,14,9,0|11pb1g0,15,4,1|1203xfz,15,4,1|1203xg0,14,9,0|128143z,14,9,0|1281440,15,4,1|12iu03z,15,4,1|12iu040,14,9,0|12qr6rz,14,9,0|12qr6s0,15,4,1|131x1fz,15,4,1|131x1g0,14,9,0|139h9fz,14,9,0|139h9g0,15,4,1|13kn43z,15,4,1|13kn440,14,9,0|13s7c3z,14,9,0|13s7c40,15,4,1|143d6rz,15,4,1|143d6s0,14,9,0|14badfz,14,9,0|14badg0,15,4,1|14m39fz,15,4,1|14m39g0,14,9,0|14u0g3z,14,9,0|14u0g40,15,4,1|154tc3z,15,4,1|154tc40,14,9,0|15cqirz,14,9,0|15cqis0,15,4,1|15nwdfz,15,4,1|15nwdg0,14,9,0|15vglfz,14,9,0|15vglg0,15,4,1|166mg3z,15,4,1|166mg40,14,9,0|16e6o3z,14,9,0|16e6o40,15,4,1|16pcirz,15,4,1|16pcis0,14,9,0|16x9pfz,14,9,0|16x9pg0,15,4,1|1782lfz,15,4,1|1782lg0,14,9,0|17fzs3z,14,9,0|17fzs40,15,4,1|17qso3z,15,4,1|17qso40,14,9,0|17ypurz,14,9,0|17ypus0,15,4,1|189iqrz,15,4,1|189iqs0,14,9,0|18hfxfz,14,9,0|18hfxg0,15,4,1|18sls3z,15,4,1|18sls40,14,9,0|190603z,14,9,0|1906040,15,4,1|19bburz,15,4,1|19bbus0,14,9,0|19iw2rz,14,9,0|19iw2s0,15,4,1|19u1xfz,15,4,1|19u1xg0,14,9,0|1a1z43z,14,9,0|1a1z440,15,4,1|1acs03z,15,4,1|1acs040,14,9,0|1akp6rz,14,9,0|1akp6s0,15,4,1|1avi2rz,15,4,1|1avi2s0,14,9,0|1b3f9fz,14,9,0|1b3f9g0,15,4,1|1bel43z,15,4,1|1bel440,14,9,0|1bm5c3z,14,9,0|1bm5c40,15,4,1|1bxb6rz,15,4,1|1bxb6s0,14,9,0|1c4verz,14,9,0|1c4ves0,15,4,1|1cg19fz,15,4,1|1cg19g0,14,9,0|1cnlhfz,14,9,0|1cnlhg0,15,4,1|1cyrc3z,15,4,1|1cyrc40,14,9,0|1d6oirz,14,9,0|1d6ois0,15,4,1|1dhherz,15,4,1|1dhhes0,14,9,0|1dpelfz,14,9,0|1dpelg0,15,4,1|1e07hfz,15,4,1|1e07hg0,14,9,0|1e84o3z,14,9,0|1e84o40,15,4,1|1ejairz,15,4,1|1ejais0,14,9,0|1equqrz,14,9,0|1equqs0,15,4,1|1f20lfz,15,4,1|1f20lg0,14,9,0|1f9ktfz,14,9,0|1f9ktg0,15,4,1|1fkqo3z,15,4,1|1fkqo40,14,9,0|1fsnurz,14,9,0|1fsnus0,15,4,1|1g3gqrz,15,4,1|1g3gqs0,14,9,0|1gbdxfz,14,9,0|1gbdxg0,15,4,1|1gm6tfz,15,4,1|1gm6tg0,14,9,0|1gu403z,14,9,0|1gu4040,15,4,1|1h4ww3z,15,4,1|1h4ww40,14,9,0|1hcu2rz,14,9,0|1hcu2s0,15,4,1|1hnzxfz,15,4,1|1hnzxg0,14,9,0|1hvk5fz,14,9,0|1hvk5g0,15,4,1|1i6q03z,15,4,1|1i6q040,14,9,0|1iea83z,14,9,0|1iea840,15,4,1|1ipg2rz,15,4,1|1ipg2s0,14,9,0|1ixd9fz,14,9,0|1ixd9g0,15,4,1|1j865fz,15,4,1|1j865g0,14,9,0|1jg3c3z,14,9,0|1jg3c40,15,4,1|1jqw83z,15,4,1|1jqw840,14,9,0|1jyterz,14,9,0|1jytes0,15,4,1|1k9z9fz,15,4,1|1k9z9g0,14,9,0|1khjhfz,14,9,0|1khjhg0,15,4,1|1kspc3z,15,4,1|1kspc40,14,9,0|1l09k3z,14,9,0|1l09k40,15,4,1|1lbferz,15,4,1|1lbfes0,14,9,0|1ljclfz,14,9,0|1ljclg0,15,4,1|1lu5hfz,15,4,1|1lu5hg0,14,9,0|1m22o3z,14,9,0|1m22o40,15,4,1|1mcvk3z,15,4,1|1mcvk40,14,9,0|1mksqrz,14,9,0|1mksqs0,15,4,1|1mvlmrz,15,4,1|1mvlms0,14,9,0|1n3itfz,14,9,0|1n3itg0,15,4,1|1neoo3z,15,4,1|1neoo40,14,9,0|1nm8w3z,14,9,0|1nm8w40,15,4,1|1nxeqrz,15,4,1|1nxeqs0,14,9,0|1o4yyrz,14,9,0|1o4yys0,15,4,1|1og4tfz,15,4,1|1og4tg0,14,9,0|1oo203z,14,9,0|1oo2040,15,4,1|1oyuw3z,15,4,1|1oyuw40,14,9,0|1p6s2rz,14,9,0|1p6s2s0,15,4,1|1phkyrz,15,4,1|1phkys0,14,9,0|1ppi5fz,14,9,0|1ppi5g0,15,4,1|1q0o03z,15,4,1|1q0o040,14,9,0|1q8883z,14,9,0|1q88840,15,4,1|1qje2rz,15,4,1|1qje2s0,14,9,0|1qqyarz,14,9,0|1qqyas0,15,4,1|1r245fz,15,4,1|1r245g0,14,9,0|1r9odfz,14,9,0|1r9odg0,15,4,1|1rku83z,15,4,1|1rku840,14,9,0|1rsrerz,14,9,0|1rsres0,15,4,1|1s3karz,15,4,1|1s3kas0,14,9,0|1sbhhfz,14,9,0|1sbhhg0,15,4,1|1smadfz,15,4,1|1smadg0,14,9,0|1su7k3z,14,9,0|1su7k40,15,4,1|1t5derz,15,4,1|1t5des0,14,9,0|1tcxmrz,14,9,0|1tcxms0,15,4,1|1to3hfz,15,4,1|1to3hg0,14,9,0|1tvnpfz,14,9,0|1tvnpg0,15,4,1|1u6tk3z,15,4,1|1u6tk40,14,9,0|1ueqqrz,14,9,0|1ueqqs0,15,4,1|1upjmrz,15,4,1|1upjms0,14,9,0|1uxgtfz,14,9,0|1uxgtg0,15,4,1|1v89pfz,15,4,1|1v89pg0,14,9,0|1vg6w3z,14,9,0|1vg6w40,15,4,1|1vqzs3z,15,4,1|1vqzs40,14,9,0|NaN,14,9,0",
        "Europe/Tirane|,0,351,0|-t85vo9,0,351,0|-t85vo8,8,8,0|-ff3es1,8,8,0|-ff3es0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dy7jw1,9,9,1|-dy7jw0,8,8,0|29h97z,8,8,0|29h980,9,9,1|2h8t3z,9,9,1|2h8t40,8,8,0|2s3mjz,8,8,0|2s3mk0,9,9,1|300qfz,9,9,1|300qg0,8,8,0|3az97z,8,8,0|3az980,9,9,1|3iwd3z,9,9,1|3iwd40,8,8,0|3u2ajz,8,8,0|3u2ak0,9,9,1|41mfrz,9,9,1|41mfs0,8,8,0|4cqijz,8,8,0|4cqik0,9,9,1|4kcifz,9,9,1|4kcig0,8,8,0|4vgl7z,8,8,0|4vgl80,9,9,1|532l3z,9,9,1|532l40,8,8,0|5e6nvz,8,8,0|5e6nw0,9,9,1|5m3rrz,9,9,1|5m3rs0,8,8,0|5wlmjz,8,8,0|5wlmk0,9,9,1|64iqfz,9,9,1|64iqg0,8,8,0|6fonvz,8,8,0|6fonw0,9,9,1|6nlrrz,9,9,1|6nlrs0,8,8,0|6xqnvz,8,8,0|6xqnw0,9,9,1|769zrz,9,9,1|769zs0,8,8,0|7foyjz,8,8,0|7foyk0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Ulyanovsk|,0,352,0|-qcx401,0,352,0|-qcx400,96,4,0|-kmr4c1,96,4,0|-kmr4c0,102,201,0|5vb3jz,102,201,0|5vb3k0,87,184,1|64pwrz,87,184,1|64pws0,102,201,0|6e30vz,102,201,0|6e30w0,87,184,1|6nhu3z,87,184,1|6nhu40,102,201,0|6wuy7z,102,201,0|6wuy80,87,184,1|769rfz,87,184,1|769rg0,102,201,0|7foq7z,102,201,0|7foq80,87,184,1|7p1x3z,87,184,1|7p1x40,102,201,0|7yeyfz,102,201,0|7yeyg0,87,184,1|87rzrz,87,184,1|87rzs0,102,201,0|8h513z,102,201,0|8h5140,87,184,1|8qi2fz,87,184,1|8qi2g0,102,201,0|8zv3rz,102,201,0|8zv3s0,87,184,1|99853z,87,184,1|998540,102,201,0|9il6fz,102,201,0|9il6g0,87,184,1|9ry7rz,87,184,1|9ry7s0,102,201,0|a1b93z,102,201,0|a1b940,102,201,1|aaod7z,102,201,1|aaod80,96,4,0|ak1ejz,96,4,0|ak1ek0,102,201,1|atrejz,102,201,1|atrek0,96,4,0|b34fvz,96,4,0|b34fw0,96,4,1|bchjzz,96,4,1|bchk00,97,9,0|bi8ynz,97,9,0|bi8yo0,96,4,0|bluijz,96,4,0|bluik0,102,201,1|bv7jvz,102,201,1|bv7jw0,96,4,0|c4kl7z,96,4,0|c4kl80,102,201,1|cdxmjz,102,201,1|cdxmk0,96,4,0|cnanvz,96,4,0|cnanw0,102,201,1|cwnp7z,102,201,1|cwnp80,96,4,0|d60qjz,96,4,0|d60qk0,102,201,1|dfdrvz,102,201,1|dfdrw0,96,4,0|dp3rvz,96,4,0|dp3rw0,102,201,1|dzwnvz,102,201,1|dzwnw0,96,4,0|e7tujz,96,4,0|e7tuk0,102,201,1|eimqjz,102,201,1|eimqk0,96,4,0|eqjx7z,96,4,0|eqjx80,102,201,1|f1ct7z,102,201,1|f1ct80,96,4,0|f99zvz,96,4,0|f99zw0,102,201,1|fkfujz,102,201,1|fkfuk0,96,4,0|fs02jz,96,4,0|fs02k0,102,201,1|g35x7z,102,201,1|g35x80,96,4,0|gaq57z,96,4,0|gaq580,102,201,1|glvzvz,102,201,1|glvzw0,96,4,0|gtt6jz,96,4,0|gtt6k0,102,201,1|h4m2jz,102,201,1|h4m2k0,96,4,0|hcj97z,96,4,0|hcj980,102,201,1|hnc57z,102,201,1|hnc580,96,4,0|hv9bvz,96,4,0|hv9bw0,102,201,1|i6f6jz,102,201,1|i6f6k0,96,4,0|idzejz,96,4,0|idzek0,102,201,1|ip597z,102,201,1|ip5980,96,4,0|iwph7z,96,4,0|iwph80,102,201,1|j7vbvz,102,201,1|j7vbw0,96,4,0|jffjvz,96,4,0|jffjw0,102,201,1|jqlejz,102,201,1|jqlek0,96,4,0|jyil7z,96,4,0|jyil80,102,201,1|k9bh7z,102,201,1|k9bh80,96,4,0|kh8nvz,96,4,0|kh8nw0,102,201,1|ks1jvz,102,201,1|ks1jw0,96,4,0|kzyqjz,96,4,0|kzyqk0,102,201,1|lb4l7z,102,201,1|lb4l80,96,4,0|liot7z,96,4,0|liot80,102,201,0|ne0t3z,102,201,0|ne0t40,96,4,0|o4o57z,96,4,0|o4o580,102,201,0|NaN,102,201,0",
        "Europe/Uzhgorod|,0,333,0|-1ayy8bh,0,333,0|-1ayy8bg,73,333,0|-nu11nh,73,333,0|-nu11ng,14,9,0|-kmr1k1,14,9,0|-kmr1k0,143,4,0|-erdv01,143,4,0|-erdv00,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dnetg1,8,8,0|-dnetg0,143,4,0|5vb6bz,143,4,0|5vb6c0,144,201,1|64pzjz,144,201,1|64pzk0,143,4,0|6e33nz,143,4,0|6e33o0,144,201,1|6nhwvz,144,201,1|6nhww0,143,4,0|6wv0zz,143,4,0|6wv100,144,201,1|769u7z,144,201,1|769u80,143,4,0|7foszz,143,4,0|7fot00,144,201,1|7p1zvz,144,201,1|7p1zw0,143,4,0|7yf17z,143,4,0|7yf180,144,201,1|87s2jz,144,201,1|87s2k0,143,4,0|8h53vz,143,4,0|8h53w0,144,201,1|8qi57z,144,201,1|8qi580,143,4,0|8zv6jz,143,4,0|8zv6k0,144,201,1|9987vz,144,201,1|9987w0,143,4,0|9il97z,143,4,0|9il980,144,201,1|9ryajz,144,201,1|9ryak0,143,4,0|a1bbvz,143,4,0|a1bbw0,144,201,1|aaod7z,144,201,1|aaod80,143,4,0|ak1ejz,143,4,0|ak1ek0,144,201,1|ap2t3z,144,201,1|ap2t40,15,4,1|bchjzz,15,4,1|bchk00,14,9,0|blulbz,14,9,0|blulc0,15,4,1|bv7mnz,15,4,1|bv7mo0,14,9,0|c4knzz,14,9,0|c4ko00,15,4,1|cdxpbz,15,4,1|cdxpc0,14,9,0|cnaqnz,14,9,0|cnaqo0,15,4,1|cwnrzz,15,4,1|cwns00,14,9,0|d60tbz,14,9,0|d60tc0,15,4,1|dfdunz,15,4,1|dfduo0,14,9,0|dp3unz,14,9,0|dp3uo0,15,4,1|dzwtfz,15,4,1|dzwtg0,14,9,0|e7u03z,14,9,0|e7u040,15,4,1|eimw3z,15,4,1|eimw40,14,9,0|eqk2rz,14,9,0|eqk2s0,15,4,1|f1cyrz,15,4,1|f1cys0,14,9,0|f9a5fz,14,9,0|f9a5g0,15,4,1|fkg03z,15,4,1|fkg040,14,9,0|fs083z,14,9,0|fs0840,15,4,1|g362rz,15,4,1|g362s0,14,9,0|gaqarz,14,9,0|gaqas0,15,4,1|glw5fz,15,4,1|glw5g0,14,9,0|gttc3z,14,9,0|gttc40,15,4,1|h4m83z,15,4,1|h4m840,14,9,0|hcjerz,14,9,0|hcjes0,15,4,1|hncarz,15,4,1|hncas0,14,9,0|hv9hfz,14,9,0|hv9hg0,15,4,1|i6fc3z,15,4,1|i6fc40,14,9,0|idzk3z,14,9,0|idzk40,15,4,1|ip5erz,15,4,1|ip5es0,14,9,0|iwpmrz,14,9,0|iwpms0,15,4,1|j7vhfz,15,4,1|j7vhg0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|lioyrz,14,9,0|lioys0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n385fz,14,9,0|n385g0,15,4,1|ne11fz,15,4,1|ne11g0,14,9,0|nly83z,14,9,0|nly840,15,4,1|nwr43z,15,4,1|nwr440,14,9,0|o4oarz,14,9,0|o4oas0,15,4,1|ofu5fz,15,4,1|ofu5g0,14,9,0|onedfz,14,9,0|onedg0,15,4,1|oyk83z,15,4,1|oyk840,14,9,0|p64g3z,14,9,0|p64g40,15,4,1|phaarz,15,4,1|phaas0,14,9,0|pp7hfz,14,9,0|pp7hg0,15,4,1|q00dfz,15,4,1|q00dg0,14,9,0|q7xk3z,14,9,0|q7xk40,15,4,1|qiqg3z,15,4,1|qiqg40,14,9,0|qqnmrz,14,9,0|qqnms0,15,4,1|r1thfz,15,4,1|r1thg0,14,9,0|r9dpfz,14,9,0|r9dpg0,15,4,1|rkjk3z,15,4,1|rkjk40,14,9,0|rs3s3z,14,9,0|rs3s40,15,4,1|s39mrz,15,4,1|s39ms0,14,9,0|sb6tfz,14,9,0|sb6tg0,15,4,1|slzpfz,15,4,1|slzpg0,14,9,0|stww3z,14,9,0|stww40,15,4,1|t4ps3z,15,4,1|t4ps40,14,9,0|tcmyrz,14,9,0|tcmys0,15,4,1|tnfurz,15,4,1|tnfus0,14,9,0|tvd1fz,14,9,0|tvd1g0,15,4,1|u6iw3z,15,4,1|u6iw40,14,9,0|ue343z,14,9,0|ue3440,15,4,1|up8yrz,15,4,1|up8ys0,14,9,0|uwt6rz,14,9,0|uwt6s0,15,4,1|v7z1fz,15,4,1|v7z1g0,14,9,0|vfw83z,14,9,0|vfw840,15,4,1|vqp43z,15,4,1|vqp440,14,9,0|vymarz,14,9,0|vymas0,15,4,1|w9f6rz,15,4,1|w9f6s0,14,9,0|whcdfz,14,9,0|whcdg0,15,4,1|wsi83z,15,4,1|wsi840,14,9,0|x02g3z,14,9,0|x02g40,15,4,1|xb8arz,15,4,1|xb8as0,14,9,0|xisirz,14,9,0|xisis0,15,4,1|xtydfz,15,4,1|xtydg0,14,9,0|y1ilfz,14,9,0|y1ilg0,15,4,1|ycog3z,15,4,1|ycog40,14,9,0|yklmrz,14,9,0|yklms0,15,4,1|yveirz,15,4,1|yveis0,14,9,0|z3bpfz,14,9,0|z3bpg0,15,4,1|ze4lfz,15,4,1|ze4lg0,14,9,0|zm1s3z,14,9,0|zm1s40,15,4,1|zx7mrz,15,4,1|zx7ms0,14,9,0|104rurz,14,9,0|104rus0,15,4,1|10fxpfz,15,4,1|10fxpg0,14,9,0|10nhxfz,14,9,0|10nhxg0,15,4,1|10yns3z,15,4,1|10yns40,14,9,0|116kyrz,14,9,0|116kys0,15,4,1|11hdurz,15,4,1|11hdus0,14,9,0|11pb1fz,14,9,0|11pb1g0,15,4,1|1203xfz,15,4,1|1203xg0,14,9,0|128143z,14,9,0|1281440,15,4,1|12iu03z,15,4,1|12iu040,14,9,0|12qr6rz,14,9,0|12qr6s0,15,4,1|131x1fz,15,4,1|131x1g0,14,9,0|139h9fz,14,9,0|139h9g0,15,4,1|13kn43z,15,4,1|13kn440,14,9,0|13s7c3z,14,9,0|13s7c40,15,4,1|143d6rz,15,4,1|143d6s0,14,9,0|14badfz,14,9,0|14badg0,15,4,1|14m39fz,15,4,1|14m39g0,14,9,0|14u0g3z,14,9,0|14u0g40,15,4,1|154tc3z,15,4,1|154tc40,14,9,0|15cqirz,14,9,0|15cqis0,15,4,1|15nwdfz,15,4,1|15nwdg0,14,9,0|15vglfz,14,9,0|15vglg0,15,4,1|166mg3z,15,4,1|166mg40,14,9,0|16e6o3z,14,9,0|16e6o40,15,4,1|16pcirz,15,4,1|16pcis0,14,9,0|16x9pfz,14,9,0|16x9pg0,15,4,1|1782lfz,15,4,1|1782lg0,14,9,0|17fzs3z,14,9,0|17fzs40,15,4,1|17qso3z,15,4,1|17qso40,14,9,0|17ypurz,14,9,0|17ypus0,15,4,1|189iqrz,15,4,1|189iqs0,14,9,0|18hfxfz,14,9,0|18hfxg0,15,4,1|18sls3z,15,4,1|18sls40,14,9,0|190603z,14,9,0|1906040,15,4,1|19bburz,15,4,1|19bbus0,14,9,0|19iw2rz,14,9,0|19iw2s0,15,4,1|19u1xfz,15,4,1|19u1xg0,14,9,0|1a1z43z,14,9,0|1a1z440,15,4,1|1acs03z,15,4,1|1acs040,14,9,0|1akp6rz,14,9,0|1akp6s0,15,4,1|1avi2rz,15,4,1|1avi2s0,14,9,0|1b3f9fz,14,9,0|1b3f9g0,15,4,1|1bel43z,15,4,1|1bel440,14,9,0|1bm5c3z,14,9,0|1bm5c40,15,4,1|1bxb6rz,15,4,1|1bxb6s0,14,9,0|1c4verz,14,9,0|1c4ves0,15,4,1|1cg19fz,15,4,1|1cg19g0,14,9,0|1cnlhfz,14,9,0|1cnlhg0,15,4,1|1cyrc3z,15,4,1|1cyrc40,14,9,0|1d6oirz,14,9,0|1d6ois0,15,4,1|1dhherz,15,4,1|1dhhes0,14,9,0|1dpelfz,14,9,0|1dpelg0,15,4,1|1e07hfz,15,4,1|1e07hg0,14,9,0|1e84o3z,14,9,0|1e84o40,15,4,1|1ejairz,15,4,1|1ejais0,14,9,0|1equqrz,14,9,0|1equqs0,15,4,1|1f20lfz,15,4,1|1f20lg0,14,9,0|1f9ktfz,14,9,0|1f9ktg0,15,4,1|1fkqo3z,15,4,1|1fkqo40,14,9,0|1fsnurz,14,9,0|1fsnus0,15,4,1|1g3gqrz,15,4,1|1g3gqs0,14,9,0|1gbdxfz,14,9,0|1gbdxg0,15,4,1|1gm6tfz,15,4,1|1gm6tg0,14,9,0|1gu403z,14,9,0|1gu4040,15,4,1|1h4ww3z,15,4,1|1h4ww40,14,9,0|1hcu2rz,14,9,0|1hcu2s0,15,4,1|1hnzxfz,15,4,1|1hnzxg0,14,9,0|1hvk5fz,14,9,0|1hvk5g0,15,4,1|1i6q03z,15,4,1|1i6q040,14,9,0|1iea83z,14,9,0|1iea840,15,4,1|1ipg2rz,15,4,1|1ipg2s0,14,9,0|1ixd9fz,14,9,0|1ixd9g0,15,4,1|1j865fz,15,4,1|1j865g0,14,9,0|1jg3c3z,14,9,0|1jg3c40,15,4,1|1jqw83z,15,4,1|1jqw840,14,9,0|1jyterz,14,9,0|1jytes0,15,4,1|1k9z9fz,15,4,1|1k9z9g0,14,9,0|1khjhfz,14,9,0|1khjhg0,15,4,1|1kspc3z,15,4,1|1kspc40,14,9,0|1l09k3z,14,9,0|1l09k40,15,4,1|1lbferz,15,4,1|1lbfes0,14,9,0|1ljclfz,14,9,0|1ljclg0,15,4,1|1lu5hfz,15,4,1|1lu5hg0,14,9,0|1m22o3z,14,9,0|1m22o40,15,4,1|1mcvk3z,15,4,1|1mcvk40,14,9,0|1mksqrz,14,9,0|1mksqs0,15,4,1|1mvlmrz,15,4,1|1mvlms0,14,9,0|1n3itfz,14,9,0|1n3itg0,15,4,1|1neoo3z,15,4,1|1neoo40,14,9,0|1nm8w3z,14,9,0|1nm8w40,15,4,1|1nxeqrz,15,4,1|1nxeqs0,14,9,0|1o4yyrz,14,9,0|1o4yys0,15,4,1|1og4tfz,15,4,1|1og4tg0,14,9,0|1oo203z,14,9,0|1oo2040,15,4,1|1oyuw3z,15,4,1|1oyuw40,14,9,0|1p6s2rz,14,9,0|1p6s2s0,15,4,1|1phkyrz,15,4,1|1phkys0,14,9,0|1ppi5fz,14,9,0|1ppi5g0,15,4,1|1q0o03z,15,4,1|1q0o040,14,9,0|1q8883z,14,9,0|1q88840,15,4,1|1qje2rz,15,4,1|1qje2s0,14,9,0|1qqyarz,14,9,0|1qqyas0,15,4,1|1r245fz,15,4,1|1r245g0,14,9,0|1r9odfz,14,9,0|1r9odg0,15,4,1|1rku83z,15,4,1|1rku840,14,9,0|1rsrerz,14,9,0|1rsres0,15,4,1|1s3karz,15,4,1|1s3kas0,14,9,0|1sbhhfz,14,9,0|1sbhhg0,15,4,1|1smadfz,15,4,1|1smadg0,14,9,0|1su7k3z,14,9,0|1su7k40,15,4,1|1t5derz,15,4,1|1t5des0,14,9,0|1tcxmrz,14,9,0|1tcxms0,15,4,1|1to3hfz,15,4,1|1to3hg0,14,9,0|1tvnpfz,14,9,0|1tvnpg0,15,4,1|1u6tk3z,15,4,1|1u6tk40,14,9,0|1ueqqrz,14,9,0|1ueqqs0,15,4,1|1upjmrz,15,4,1|1upjms0,14,9,0|1uxgtfz,14,9,0|1uxgtg0,15,4,1|1v89pfz,15,4,1|1v89pg0,14,9,0|1vg6w3z,14,9,0|1vg6w40,15,4,1|1vqzs3z,15,4,1|1vqzs40,14,9,0|NaN,14,9,0",
        "Europe/Vaduz|,0,321,0|-1os49kx,0,321,0|-1os49kw,53,322,0|-13g441n,53,322,0|-13g441m,8,8,0|-eyh6o1,8,8,0|-eyh6o0,9,9,1|-eqk001,9,9,1|-eqk000,8,8,0|-efr401,8,8,0|-efr400,9,9,1|-e7txc1,9,9,1|-e7txc0,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Vatican|,0,344,0|-1hs7rn9,0,344,0|-1hs7rn8,133,344,0|-13r0qs1,133,344,0|-13r0qs0,8,8,0|-rymys1,8,8,0|-rymys0,9,9,1|-rsio81,9,9,1|-rsio80,8,8,0|-rj5k41,8,8,0|-rj5k40,9,9,1|-r9qqw1,9,9,1|-r9qqw0,8,8,0|-r1idg1,8,8,0|-r1idg0,9,9,1|-qqnpk1,9,9,1|-qqnpk0,8,8,0|-qj59g1,8,8,0|-qj59g0,9,9,1|-q7zhk1,9,9,1|-q7zhk0,8,8,0|-pzcas1,8,8,0|-pzcas0,9,9,1|-ppzc81,9,9,1|-ppzc80,8,8,0|-ff59g1,8,8,0|-ff59g0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d75h81,9,9,1|-d75h80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cohes1,9,9,1|-cohes0,8,8,0|-cf2d81,8,8,0|-cf2d80,9,9,1|-c4mfw1,9,9,1|-c4mfw0,8,8,0|-bwcg41,8,8,0|-bwcg40,9,9,1|-blwis1,9,9,1|-blwis0,8,8,0|-bec581,8,8,0|-bec580,9,9,1|-b36ak1,9,9,1|-b36ak0,8,8,0|-1vwis1,8,8,0|-1vwis0,9,9,1|-1pf9k1,9,9,1|-1pf9k0,8,8,0|-1cthg1,8,8,0|-1cthg0,9,9,1|-16p441,9,9,1|-16p440,8,8,0|-u3es1,8,8,0|-u3es0,9,9,1|-nz1g1,9,9,1|-nz1g0,8,8,0|-b0dg1,8,8,0|-b0dg0,9,9,1|-4w041,9,9,1|-4w040,8,8,0|7pp7z,8,8,0|7pp80,9,9,1|du2jz,9,9,1|du2k0,8,8,0|q2t7z,8,8,0|q2t80,9,9,1|wk57z,9,9,1|wk580,8,8,0|195ujz,8,8,0|195uk0,9,9,1|1fn6jz,9,9,1|1fn6k0,8,8,0|1s8vvz,8,8,0|1s8vw0,9,9,1|1yd97z,9,9,1|1yd980,8,8,0|2alzvz,8,8,0|2alzw0,9,9,1|2h3bvz,9,9,1|2h3bw0,8,8,0|2tp17z,8,8,0|2tp180,9,9,1|2ztejz,9,9,1|2ztek0,8,8,0|3cf3vz,8,8,0|3cf3w0,9,9,1|3ijh7z,9,9,1|3ijh80,8,8,0|3us7vz,8,8,0|3us7w0,9,9,1|419jvz,9,9,1|419jw0,8,8,0|4dv97z,8,8,0|4dv980,9,9,1|4kcl7z,9,9,1|4kcl80,8,8,0|4wlbvz,8,8,0|4wlbw0,9,9,1|532nvz,9,9,1|532nw0,8,8,0|5cstfz,8,8,0|5cstg0,9,9,1|5lsw3z,9,9,1|5lsw40,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Vienna|,0,353,0|-14211oy,0,353,0|-14211ox,8,8,0|-s0e081,8,8,0|-s0e080,9,9,1|-rsilg1,9,9,1|-rsilg0,8,8,0|-ridmk1,8,8,0|-ridmk0,9,9,1|-ragfw1,9,9,1|-ragfw0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,8,8,0|-pykd81,8,8,0|-pykd80,9,9,1|-pqa7w1,9,9,1|-pqa7w0,8,8,0|-fizzw1,8,8,0|-fizzw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cx0nw1,8,8,0|-cx0nw0,9,9,1|-cwi581,9,9,1|-cwi580,8,8,0|-cdmik1,8,8,0|-cdmik0,9,9,1|-c4kl81,9,9,1|-c4kl80,8,8,0|-bv9ek1,8,8,0|-bv9ek0,9,9,1|-blwd81,9,9,1|-blwd80,8,8,0|-bbtek1,8,8,0|-bbtek0,9,9,1|-b36ak1,9,9,1|-b36ak0,8,8,0|5csnvz,8,8,0|5csnw0,9,9,1|5lsnrz,9,9,1|5lsns0,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Vilnius|,0,354,0|-1ayy7ct,0,354,0|-1ayy7cs,150,355,0|-rns981,150,355,0|-rns980,73,356,0|-q7q73d,73,356,0|-q7q73c,8,8,0|-ptj1g1,8,8,0|-ptj1g0,14,9,0|-poyaw1,14,9,0|-poyaw0,8,8,0|-fcmis1,8,8,0|-fcmis0,143,4,0|-evwto1,143,4,0|-evwto0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d9kqw1,9,9,1|-d9kqw0,143,4,0|5vb6bz,143,4,0|5vb6c0,144,201,1|64pzjz,144,201,1|64pzk0,143,4,0|6e33nz,143,4,0|6e33o0,144,201,1|6nhwvz,144,201,1|6nhww0,143,4,0|6wv0zz,143,4,0|6wv100,144,201,1|769u7z,144,201,1|769u80,143,4,0|7foszz,143,4,0|7fot00,144,201,1|7p1zvz,144,201,1|7p1zw0,143,4,0|7yf17z,143,4,0|7yf180,144,201,1|87s2jz,144,201,1|87s2k0,143,4,0|8h53vz,143,4,0|8h53w0,144,201,1|8qi57z,144,201,1|8qi580,143,4,0|8zv6jz,143,4,0|8zv6k0,144,201,1|9987vz,144,201,1|9987w0,143,4,0|9il97z,143,4,0|9il980,144,201,1|9ryajz,144,201,1|9ryak0,143,4,0|a1bbvz,143,4,0|a1bbw0,15,4,1|aaofzz,15,4,1|aaog00,14,9,0|ak1hbz,14,9,0|ak1hc0,15,4,1|atrhbz,15,4,1|atrhc0,14,9,0|b34inz,14,9,0|b34io0,15,4,1|bchjzz,15,4,1|bchk00,14,9,0|blulbz,14,9,0|blulc0,15,4,1|bv7mnz,15,4,1|bv7mo0,14,9,0|c4knzz,14,9,0|c4ko00,15,4,1|cdxpbz,15,4,1|cdxpc0,14,9,0|cnaqnz,14,9,0|cnaqo0,15,4,1|cwnrzz,15,4,1|cwns00,14,9,0|d60tbz,14,9,0|d60tc0,15,4,1|dfdunz,15,4,1|dfduo0,14,9,0|dp3unz,14,9,0|dp3uo0,15,4,1|dzwqnz,15,4,1|dzwqo0,14,9,0|e7txbz,14,9,0|e7txc0,15,4,1|eimtbz,15,4,1|eimtc0,14,9,0|eqk2rz,14,9,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,14,9,0|hcjerz,14,9,0|hcjes0,15,4,1|hncarz,15,4,1|hncas0,14,9,0|hv9hfz,14,9,0|hv9hg0,15,4,1|i6fc3z,15,4,1|i6fc40,14,9,0|idzk3z,14,9,0|idzk40,15,4,1|ip5erz,15,4,1|ip5es0,14,9,0|iwpmrz,14,9,0|iwpms0,15,4,1|j7vhfz,15,4,1|j7vhg0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|lioyrz,14,9,0|lioys0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n385fz,14,9,0|n385g0,15,4,1|ne11fz,15,4,1|ne11g0,14,9,0|nly83z,14,9,0|nly840,15,4,1|nwr43z,15,4,1|nwr440,14,9,0|o4oarz,14,9,0|o4oas0,15,4,1|ofu5fz,15,4,1|ofu5g0,14,9,0|onedfz,14,9,0|onedg0,15,4,1|oyk83z,15,4,1|oyk840,14,9,0|p64g3z,14,9,0|p64g40,15,4,1|phaarz,15,4,1|phaas0,14,9,0|pp7hfz,14,9,0|pp7hg0,15,4,1|q00dfz,15,4,1|q00dg0,14,9,0|q7xk3z,14,9,0|q7xk40,15,4,1|qiqg3z,15,4,1|qiqg40,14,9,0|qqnmrz,14,9,0|qqnms0,15,4,1|r1thfz,15,4,1|r1thg0,14,9,0|r9dpfz,14,9,0|r9dpg0,15,4,1|rkjk3z,15,4,1|rkjk40,14,9,0|rs3s3z,14,9,0|rs3s40,15,4,1|s39mrz,15,4,1|s39ms0,14,9,0|sb6tfz,14,9,0|sb6tg0,15,4,1|slzpfz,15,4,1|slzpg0,14,9,0|stww3z,14,9,0|stww40,15,4,1|t4ps3z,15,4,1|t4ps40,14,9,0|tcmyrz,14,9,0|tcmys0,15,4,1|tnfurz,15,4,1|tnfus0,14,9,0|tvd1fz,14,9,0|tvd1g0,15,4,1|u6iw3z,15,4,1|u6iw40,14,9,0|ue343z,14,9,0|ue3440,15,4,1|up8yrz,15,4,1|up8ys0,14,9,0|uwt6rz,14,9,0|uwt6s0,15,4,1|v7z1fz,15,4,1|v7z1g0,14,9,0|vfw83z,14,9,0|vfw840,15,4,1|vqp43z,15,4,1|vqp440,14,9,0|vymarz,14,9,0|vymas0,15,4,1|w9f6rz,15,4,1|w9f6s0,14,9,0|whcdfz,14,9,0|whcdg0,15,4,1|wsi83z,15,4,1|wsi840,14,9,0|x02g3z,14,9,0|x02g40,15,4,1|xb8arz,15,4,1|xb8as0,14,9,0|xisirz,14,9,0|xisis0,15,4,1|xtydfz,15,4,1|xtydg0,14,9,0|y1ilfz,14,9,0|y1ilg0,15,4,1|ycog3z,15,4,1|ycog40,14,9,0|yklmrz,14,9,0|yklms0,15,4,1|yveirz,15,4,1|yveis0,14,9,0|z3bpfz,14,9,0|z3bpg0,15,4,1|ze4lfz,15,4,1|ze4lg0,14,9,0|zm1s3z,14,9,0|zm1s40,15,4,1|zx7mrz,15,4,1|zx7ms0,14,9,0|104rurz,14,9,0|104rus0,15,4,1|10fxpfz,15,4,1|10fxpg0,14,9,0|10nhxfz,14,9,0|10nhxg0,15,4,1|10yns3z,15,4,1|10yns40,14,9,0|116kyrz,14,9,0|116kys0,15,4,1|11hdurz,15,4,1|11hdus0,14,9,0|11pb1fz,14,9,0|11pb1g0,15,4,1|1203xfz,15,4,1|1203xg0,14,9,0|128143z,14,9,0|1281440,15,4,1|12iu03z,15,4,1|12iu040,14,9,0|12qr6rz,14,9,0|12qr6s0,15,4,1|131x1fz,15,4,1|131x1g0,14,9,0|139h9fz,14,9,0|139h9g0,15,4,1|13kn43z,15,4,1|13kn440,14,9,0|13s7c3z,14,9,0|13s7c40,15,4,1|143d6rz,15,4,1|143d6s0,14,9,0|14badfz,14,9,0|14badg0,15,4,1|14m39fz,15,4,1|14m39g0,14,9,0|14u0g3z,14,9,0|14u0g40,15,4,1|154tc3z,15,4,1|154tc40,14,9,0|15cqirz,14,9,0|15cqis0,15,4,1|15nwdfz,15,4,1|15nwdg0,14,9,0|15vglfz,14,9,0|15vglg0,15,4,1|166mg3z,15,4,1|166mg40,14,9,0|16e6o3z,14,9,0|16e6o40,15,4,1|16pcirz,15,4,1|16pcis0,14,9,0|16x9pfz,14,9,0|16x9pg0,15,4,1|1782lfz,15,4,1|1782lg0,14,9,0|17fzs3z,14,9,0|17fzs40,15,4,1|17qso3z,15,4,1|17qso40,14,9,0|17ypurz,14,9,0|17ypus0,15,4,1|189iqrz,15,4,1|189iqs0,14,9,0|18hfxfz,14,9,0|18hfxg0,15,4,1|18sls3z,15,4,1|18sls40,14,9,0|190603z,14,9,0|1906040,15,4,1|19bburz,15,4,1|19bbus0,14,9,0|19iw2rz,14,9,0|19iw2s0,15,4,1|19u1xfz,15,4,1|19u1xg0,14,9,0|1a1z43z,14,9,0|1a1z440,15,4,1|1acs03z,15,4,1|1acs040,14,9,0|1akp6rz,14,9,0|1akp6s0,15,4,1|1avi2rz,15,4,1|1avi2s0,14,9,0|1b3f9fz,14,9,0|1b3f9g0,15,4,1|1bel43z,15,4,1|1bel440,14,9,0|1bm5c3z,14,9,0|1bm5c40,15,4,1|1bxb6rz,15,4,1|1bxb6s0,14,9,0|1c4verz,14,9,0|1c4ves0,15,4,1|1cg19fz,15,4,1|1cg19g0,14,9,0|1cnlhfz,14,9,0|1cnlhg0,15,4,1|1cyrc3z,15,4,1|1cyrc40,14,9,0|1d6oirz,14,9,0|1d6ois0,15,4,1|1dhherz,15,4,1|1dhhes0,14,9,0|1dpelfz,14,9,0|1dpelg0,15,4,1|1e07hfz,15,4,1|1e07hg0,14,9,0|1e84o3z,14,9,0|1e84o40,15,4,1|1ejairz,15,4,1|1ejais0,14,9,0|1equqrz,14,9,0|1equqs0,15,4,1|1f20lfz,15,4,1|1f20lg0,14,9,0|1f9ktfz,14,9,0|1f9ktg0,15,4,1|1fkqo3z,15,4,1|1fkqo40,14,9,0|1fsnurz,14,9,0|1fsnus0,15,4,1|1g3gqrz,15,4,1|1g3gqs0,14,9,0|1gbdxfz,14,9,0|1gbdxg0,15,4,1|1gm6tfz,15,4,1|1gm6tg0,14,9,0|1gu403z,14,9,0|1gu4040,15,4,1|1h4ww3z,15,4,1|1h4ww40,14,9,0|1hcu2rz,14,9,0|1hcu2s0,15,4,1|1hnzxfz,15,4,1|1hnzxg0,14,9,0|1hvk5fz,14,9,0|1hvk5g0,15,4,1|1i6q03z,15,4,1|1i6q040,14,9,0|1iea83z,14,9,0|1iea840,15,4,1|1ipg2rz,15,4,1|1ipg2s0,14,9,0|1ixd9fz,14,9,0|1ixd9g0,15,4,1|1j865fz,15,4,1|1j865g0,14,9,0|1jg3c3z,14,9,0|1jg3c40,15,4,1|1jqw83z,15,4,1|1jqw840,14,9,0|1jyterz,14,9,0|1jytes0,15,4,1|1k9z9fz,15,4,1|1k9z9g0,14,9,0|1khjhfz,14,9,0|1khjhg0,15,4,1|1kspc3z,15,4,1|1kspc40,14,9,0|1l09k3z,14,9,0|1l09k40,15,4,1|1lbferz,15,4,1|1lbfes0,14,9,0|1ljclfz,14,9,0|1ljclg0,15,4,1|1lu5hfz,15,4,1|1lu5hg0,14,9,0|1m22o3z,14,9,0|1m22o40,15,4,1|1mcvk3z,15,4,1|1mcvk40,14,9,0|1mksqrz,14,9,0|1mksqs0,15,4,1|1mvlmrz,15,4,1|1mvlms0,14,9,0|1n3itfz,14,9,0|1n3itg0,15,4,1|1neoo3z,15,4,1|1neoo40,14,9,0|1nm8w3z,14,9,0|1nm8w40,15,4,1|1nxeqrz,15,4,1|1nxeqs0,14,9,0|1o4yyrz,14,9,0|1o4yys0,15,4,1|1og4tfz,15,4,1|1og4tg0,14,9,0|1oo203z,14,9,0|1oo2040,15,4,1|1oyuw3z,15,4,1|1oyuw40,14,9,0|1p6s2rz,14,9,0|1p6s2s0,15,4,1|1phkyrz,15,4,1|1phkys0,14,9,0|1ppi5fz,14,9,0|1ppi5g0,15,4,1|1q0o03z,15,4,1|1q0o040,14,9,0|1q8883z,14,9,0|1q88840,15,4,1|1qje2rz,15,4,1|1qje2s0,14,9,0|1qqyarz,14,9,0|1qqyas0,15,4,1|1r245fz,15,4,1|1r245g0,14,9,0|1r9odfz,14,9,0|1r9odg0,15,4,1|1rku83z,15,4,1|1rku840,14,9,0|1rsrerz,14,9,0|1rsres0,15,4,1|1s3karz,15,4,1|1s3kas0,14,9,0|1sbhhfz,14,9,0|1sbhhg0,15,4,1|1smadfz,15,4,1|1smadg0,14,9,0|1su7k3z,14,9,0|1su7k40,15,4,1|1t5derz,15,4,1|1t5des0,14,9,0|1tcxmrz,14,9,0|1tcxms0,15,4,1|1to3hfz,15,4,1|1to3hg0,14,9,0|1tvnpfz,14,9,0|1tvnpg0,15,4,1|1u6tk3z,15,4,1|1u6tk40,14,9,0|1ueqqrz,14,9,0|1ueqqs0,15,4,1|1upjmrz,15,4,1|1upjms0,14,9,0|1uxgtfz,14,9,0|1uxgtg0,15,4,1|1v89pfz,15,4,1|1v89pg0,14,9,0|1vg6w3z,14,9,0|1vg6w40,15,4,1|1vqzs3z,15,4,1|1vqzs40,14,9,0|NaN,14,9,0",
        "Europe/Volgograd|,0,205,0|-q3cw85,0,205,0|-q3cw84,96,4,0|-kmr4c1,96,4,0|-kmr4c0,102,201,0|5vb3jz,102,201,0|5vb3k0,87,184,1|64pwrz,87,184,1|64pws0,102,201,0|6e30vz,102,201,0|6e30w0,87,184,1|6nhu3z,87,184,1|6nhu40,102,201,0|6wuy7z,102,201,0|6wuy80,87,184,1|769rfz,87,184,1|769rg0,102,201,0|7foq7z,102,201,0|7foq80,87,184,1|7p1x3z,87,184,1|7p1x40,102,201,0|7yeyfz,102,201,0|7yeyg0,87,184,1|87rzrz,87,184,1|87rzs0,102,201,0|8h513z,102,201,0|8h5140,87,184,1|8qi2fz,87,184,1|8qi2g0,102,201,0|8zv3rz,102,201,0|8zv3s0,87,184,1|99853z,87,184,1|998540,102,201,0|9il6fz,102,201,0|9il6g0,144,201,1|9ryajz,144,201,1|9ryak0,143,4,0|a1bbvz,143,4,0|a1bbw0,144,201,1|aaod7z,144,201,1|aaod80,143,4,0|ak1ejz,143,4,0|ak1ek0,144,201,1|atrejz,144,201,1|atrek0,143,4,0|b34fvz,143,4,0|b34fw0,102,201,0|blufrz,102,201,0|blufs0,144,201,1|bv7jvz,144,201,1|bv7jw0,143,4,0|c4kl7z,143,4,0|c4kl80,144,201,1|cdxmjz,144,201,1|cdxmk0,143,4,0|cnanvz,143,4,0|cnanw0,144,201,1|cwnp7z,144,201,1|cwnp80,143,4,0|d60qjz,143,4,0|d60qk0,144,201,1|dfdrvz,144,201,1|dfdrw0,143,4,0|dp3rvz,143,4,0|dp3rw0,144,201,1|dzwnvz,144,201,1|dzwnw0,143,4,0|e7tujz,143,4,0|e7tuk0,144,201,1|eimqjz,144,201,1|eimqk0,143,4,0|eqjx7z,143,4,0|eqjx80,144,201,1|f1ct7z,144,201,1|f1ct80,143,4,0|f99zvz,143,4,0|f99zw0,144,201,1|fkfujz,144,201,1|fkfuk0,143,4,0|fs02jz,143,4,0|fs02k0,144,201,1|g35x7z,144,201,1|g35x80,143,4,0|gaq57z,143,4,0|gaq580,144,201,1|glvzvz,144,201,1|glvzw0,143,4,0|gtt6jz,143,4,0|gtt6k0,144,201,1|h4m2jz,144,201,1|h4m2k0,143,4,0|hcj97z,143,4,0|hcj980,144,201,1|hnc57z,144,201,1|hnc580,143,4,0|hv9bvz,143,4,0|hv9bw0,144,201,1|i6f6jz,144,201,1|i6f6k0,143,4,0|idzejz,143,4,0|idzek0,144,201,1|ip597z,144,201,1|ip5980,143,4,0|iwph7z,143,4,0|iwph80,144,201,1|j7vbvz,144,201,1|j7vbw0,143,4,0|jffjvz,143,4,0|jffjw0,144,201,1|jqlejz,144,201,1|jqlek0,143,4,0|jyil7z,143,4,0|jyil80,144,201,1|k9bh7z,144,201,1|k9bh80,143,4,0|kh8nvz,143,4,0|kh8nw0,144,201,1|ks1jvz,144,201,1|ks1jw0,143,4,0|kzyqjz,143,4,0|kzyqk0,144,201,1|lb4l7z,144,201,1|lb4l80,143,4,0|liot7z,143,4,0|liot80,143,201,0|ne0t3z,143,201,0|ne0t40,143,4,0|pha57z,143,4,0|pha580,102,201,0|qlyvrz,102,201,0|qlyvs0,143,4,0|NaN,143,4,0",
        "Europe/Warsaw|,0,355,0|-1ayy6k1,0,355,0|-1ayy6k0,150,355,0|-se9yk1,150,355,0|-se9yk0,8,8,0|-s0e081,8,8,0|-s0e080,9,9,1|-rsilg1,9,9,1|-rsilg0,8,8,0|-ridmk1,8,8,0|-ridmk0,9,9,1|-ragfw1,9,9,1|-ragfw0,8,8,0|-qznjw1,8,8,0|-qznjw0,9,9,1|-qrqd81,9,9,1|-qrqd80,14,9,0|-qgvpc1,14,9,0|-qgvpc0,15,4,1|-q8yio1,15,4,1|-q8yio0,14,9,0|-ou36w1,14,9,0|-ou36w0,8,8,0|-feqak1,8,8,0|-feqak0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6a2o1,9,9,1|-d6a2o0,8,8,0|-cvmtg1,8,8,0|-cvmtg0,9,9,1|-cm2g81,9,9,1|-cm2g80,8,8,0|-cdmo41,8,8,0|-cdmo40,9,9,1|-c4kl81,9,9,1|-c4kl80,8,8,0|-bttjw1,8,8,0|-bttjw0,9,9,1|-blwd81,9,9,1|-blwd80,8,8,0|-bbtek1,8,8,0|-bbtek0,9,9,1|-b36ak1,9,9,1|-b36ak0,8,8,0|-atgak1,8,8,0|-atgak0,9,9,1|-akg7w1,9,9,1|-akg7w0,8,8,0|-6kf401,8,8,0|-6kf400,9,9,1|-6eaqo1,9,9,1|-6eaqo0,8,8,0|-64xpc1,8,8,0|-64xpc0,9,9,1|-5vko01,9,9,1|-5vko00,8,8,0|-5iyyo1,8,8,0|-5iyyo0,9,9,1|-5chmo1,9,9,1|-5chmo0,8,8,0|-534lc1,8,8,0|-534lc0,9,9,1|-4trk01,9,9,1|-4trk00,8,8,0|-4hitc1,8,8,0|-4hitc0,9,9,1|-4b1hc1,9,9,1|-4b1hc0,8,8,0|-3ysqo1,8,8,0|-3ysqo0,9,9,1|-3sbeo1,9,9,1|-3sbeo0,8,8,0|-3g2o01,8,8,0|-3g2o00,9,9,1|-39lc01,9,9,1|-39lc00,8,8,0|-2wzmo1,8,8,0|-2wzmo0,9,9,1|-2qv9c1,9,9,1|-2qv9c0,8,8,0|3s9jzz,8,8,0|3s9k00,9,9,1|419mnz,9,9,1|419mo0,8,8,0|4azmnz,8,8,0|4azmo0,9,9,1|4kcnzz,9,9,1|4kco00,8,8,0|4tppbz,8,8,0|4tppc0,9,9,1|532qnz,9,9,1|532qo0,8,8,0|5csqnz,8,8,0|5csqo0,9,9,1|5lstbz,9,9,1|5lstc0,8,8,0|5v5unz,8,8,0|5v5uo0,9,9,1|64ivzz,9,9,1|64iw00,8,8,0|6dvxbz,8,8,0|6dvxc0,9,9,1|6n8ynz,9,9,1|6n8yo0,8,8,0|6wlzzz,8,8,0|6wm000,9,9,1|75z1bz,9,9,1|75z1c0,8,8,0|7fc2nz,8,8,0|7fc2o0,9,9,1|7p22nz,9,9,1|7p22o0,8,8,0|7yf3zz,8,8,0|7yf400,9,9,1|87s5bz,9,9,1|87s5c0,8,8,0|8h56nz,8,8,0|8h56o0,9,9,1|8qi7zz,9,9,1|8qi800,8,8,0|8zv9bz,8,8,0|8zv9c0,9,9,1|998anz,9,9,1|998ao0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Zagreb|,0,317,0|-18vsmgp,0,317,0|-18vsmgo,8,8,0|-ezayw1,8,8,0|-ezayw0,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dfqqk1,8,8,0|-dfqqk0,9,9,1|-d6dp81,9,9,1|-d6dp80,8,8,0|-cv5zw1,8,8,0|-cv5zw0,9,9,1|-cofek1,9,9,1|-cofek0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Europe/Zaporozhye|,0,333,0|-1ayy8bh,0,333,0|-1ayy8bg,73,333,0|-nu11nh,73,333,0|-nu11ng,14,9,0|-kmr1k1,14,9,0|-kmr1k0,143,4,0|-erdv01,143,4,0|-erdv00,9,9,1|-e6dzw1,9,9,1|-e6dzw0,8,8,0|-dytrw1,8,8,0|-dytrw0,9,9,1|-dp3rw1,9,9,1|-dp3rw0,8,8,0|-dnetg1,8,8,0|-dnetg0,143,4,0|5vb6bz,143,4,0|5vb6c0,144,201,1|64pzjz,144,201,1|64pzk0,143,4,0|6e33nz,143,4,0|6e33o0,144,201,1|6nhwvz,144,201,1|6nhww0,143,4,0|6wv0zz,143,4,0|6wv100,144,201,1|769u7z,144,201,1|769u80,143,4,0|7foszz,143,4,0|7fot00,144,201,1|7p1zvz,144,201,1|7p1zw0,143,4,0|7yf17z,143,4,0|7yf180,144,201,1|87s2jz,144,201,1|87s2k0,143,4,0|8h53vz,143,4,0|8h53w0,144,201,1|8qi57z,144,201,1|8qi580,143,4,0|8zv6jz,143,4,0|8zv6k0,144,201,1|9987vz,144,201,1|9987w0,143,4,0|9il97z,143,4,0|9il980,144,201,1|9ryajz,144,201,1|9ryak0,143,4,0|a1bbvz,143,4,0|a1bbw0,144,201,1|aaod7z,144,201,1|aaod80,143,4,0|ak1ejz,143,4,0|ak1ek0,144,201,1|ap2t3z,144,201,1|ap2t40,15,4,1|bchjzz,15,4,1|bchk00,14,9,0|blulbz,14,9,0|blulc0,15,4,1|bv7mnz,15,4,1|bv7mo0,14,9,0|c4knzz,14,9,0|c4ko00,15,4,1|cdxpbz,15,4,1|cdxpc0,14,9,0|cnaqnz,14,9,0|cnaqo0,15,4,1|cwnrzz,15,4,1|cwns00,14,9,0|d60tbz,14,9,0|d60tc0,15,4,1|dfdunz,15,4,1|dfduo0,14,9,0|dp3unz,14,9,0|dp3uo0,15,4,1|dzwtfz,15,4,1|dzwtg0,14,9,0|e7u03z,14,9,0|e7u040,15,4,1|eimw3z,15,4,1|eimw40,14,9,0|eqk2rz,14,9,0|eqk2s0,15,4,1|f1cyrz,15,4,1|f1cys0,14,9,0|f9a5fz,14,9,0|f9a5g0,15,4,1|fkg03z,15,4,1|fkg040,14,9,0|fs083z,14,9,0|fs0840,15,4,1|g362rz,15,4,1|g362s0,14,9,0|gaqarz,14,9,0|gaqas0,15,4,1|glw5fz,15,4,1|glw5g0,14,9,0|gttc3z,14,9,0|gttc40,15,4,1|h4m83z,15,4,1|h4m840,14,9,0|hcjerz,14,9,0|hcjes0,15,4,1|hncarz,15,4,1|hncas0,14,9,0|hv9hfz,14,9,0|hv9hg0,15,4,1|i6fc3z,15,4,1|i6fc40,14,9,0|idzk3z,14,9,0|idzk40,15,4,1|ip5erz,15,4,1|ip5es0,14,9,0|iwpmrz,14,9,0|iwpms0,15,4,1|j7vhfz,15,4,1|j7vhg0,14,9,0|jffpfz,14,9,0|jffpg0,15,4,1|jqlk3z,15,4,1|jqlk40,14,9,0|jyiqrz,14,9,0|jyiqs0,15,4,1|k9bmrz,15,4,1|k9bms0,14,9,0|kh8tfz,14,9,0|kh8tg0,15,4,1|ks1pfz,15,4,1|ks1pg0,14,9,0|kzyw3z,14,9,0|kzyw40,15,4,1|lb4qrz,15,4,1|lb4qs0,14,9,0|lioyrz,14,9,0|lioys0,15,4,1|ltutfz,15,4,1|ltutg0,14,9,0|m1f1fz,14,9,0|m1f1g0,15,4,1|mckw3z,15,4,1|mckw40,14,9,0|mki2rz,14,9,0|mki2s0,15,4,1|mvayrz,15,4,1|mvays0,14,9,0|n385fz,14,9,0|n385g0,15,4,1|ne11fz,15,4,1|ne11g0,14,9,0|nly83z,14,9,0|nly840,15,4,1|nwr43z,15,4,1|nwr440,14,9,0|o4oarz,14,9,0|o4oas0,15,4,1|ofu5fz,15,4,1|ofu5g0,14,9,0|onedfz,14,9,0|onedg0,15,4,1|oyk83z,15,4,1|oyk840,14,9,0|p64g3z,14,9,0|p64g40,15,4,1|phaarz,15,4,1|phaas0,14,9,0|pp7hfz,14,9,0|pp7hg0,15,4,1|q00dfz,15,4,1|q00dg0,14,9,0|q7xk3z,14,9,0|q7xk40,15,4,1|qiqg3z,15,4,1|qiqg40,14,9,0|qqnmrz,14,9,0|qqnms0,15,4,1|r1thfz,15,4,1|r1thg0,14,9,0|r9dpfz,14,9,0|r9dpg0,15,4,1|rkjk3z,15,4,1|rkjk40,14,9,0|rs3s3z,14,9,0|rs3s40,15,4,1|s39mrz,15,4,1|s39ms0,14,9,0|sb6tfz,14,9,0|sb6tg0,15,4,1|slzpfz,15,4,1|slzpg0,14,9,0|stww3z,14,9,0|stww40,15,4,1|t4ps3z,15,4,1|t4ps40,14,9,0|tcmyrz,14,9,0|tcmys0,15,4,1|tnfurz,15,4,1|tnfus0,14,9,0|tvd1fz,14,9,0|tvd1g0,15,4,1|u6iw3z,15,4,1|u6iw40,14,9,0|ue343z,14,9,0|ue3440,15,4,1|up8yrz,15,4,1|up8ys0,14,9,0|uwt6rz,14,9,0|uwt6s0,15,4,1|v7z1fz,15,4,1|v7z1g0,14,9,0|vfw83z,14,9,0|vfw840,15,4,1|vqp43z,15,4,1|vqp440,14,9,0|vymarz,14,9,0|vymas0,15,4,1|w9f6rz,15,4,1|w9f6s0,14,9,0|whcdfz,14,9,0|whcdg0,15,4,1|wsi83z,15,4,1|wsi840,14,9,0|x02g3z,14,9,0|x02g40,15,4,1|xb8arz,15,4,1|xb8as0,14,9,0|xisirz,14,9,0|xisis0,15,4,1|xtydfz,15,4,1|xtydg0,14,9,0|y1ilfz,14,9,0|y1ilg0,15,4,1|ycog3z,15,4,1|ycog40,14,9,0|yklmrz,14,9,0|yklms0,15,4,1|yveirz,15,4,1|yveis0,14,9,0|z3bpfz,14,9,0|z3bpg0,15,4,1|ze4lfz,15,4,1|ze4lg0,14,9,0|zm1s3z,14,9,0|zm1s40,15,4,1|zx7mrz,15,4,1|zx7ms0,14,9,0|104rurz,14,9,0|104rus0,15,4,1|10fxpfz,15,4,1|10fxpg0,14,9,0|10nhxfz,14,9,0|10nhxg0,15,4,1|10yns3z,15,4,1|10yns40,14,9,0|116kyrz,14,9,0|116kys0,15,4,1|11hdurz,15,4,1|11hdus0,14,9,0|11pb1fz,14,9,0|11pb1g0,15,4,1|1203xfz,15,4,1|1203xg0,14,9,0|128143z,14,9,0|1281440,15,4,1|12iu03z,15,4,1|12iu040,14,9,0|12qr6rz,14,9,0|12qr6s0,15,4,1|131x1fz,15,4,1|131x1g0,14,9,0|139h9fz,14,9,0|139h9g0,15,4,1|13kn43z,15,4,1|13kn440,14,9,0|13s7c3z,14,9,0|13s7c40,15,4,1|143d6rz,15,4,1|143d6s0,14,9,0|14badfz,14,9,0|14badg0,15,4,1|14m39fz,15,4,1|14m39g0,14,9,0|14u0g3z,14,9,0|14u0g40,15,4,1|154tc3z,15,4,1|154tc40,14,9,0|15cqirz,14,9,0|15cqis0,15,4,1|15nwdfz,15,4,1|15nwdg0,14,9,0|15vglfz,14,9,0|15vglg0,15,4,1|166mg3z,15,4,1|166mg40,14,9,0|16e6o3z,14,9,0|16e6o40,15,4,1|16pcirz,15,4,1|16pcis0,14,9,0|16x9pfz,14,9,0|16x9pg0,15,4,1|1782lfz,15,4,1|1782lg0,14,9,0|17fzs3z,14,9,0|17fzs40,15,4,1|17qso3z,15,4,1|17qso40,14,9,0|17ypurz,14,9,0|17ypus0,15,4,1|189iqrz,15,4,1|189iqs0,14,9,0|18hfxfz,14,9,0|18hfxg0,15,4,1|18sls3z,15,4,1|18sls40,14,9,0|190603z,14,9,0|1906040,15,4,1|19bburz,15,4,1|19bbus0,14,9,0|19iw2rz,14,9,0|19iw2s0,15,4,1|19u1xfz,15,4,1|19u1xg0,14,9,0|1a1z43z,14,9,0|1a1z440,15,4,1|1acs03z,15,4,1|1acs040,14,9,0|1akp6rz,14,9,0|1akp6s0,15,4,1|1avi2rz,15,4,1|1avi2s0,14,9,0|1b3f9fz,14,9,0|1b3f9g0,15,4,1|1bel43z,15,4,1|1bel440,14,9,0|1bm5c3z,14,9,0|1bm5c40,15,4,1|1bxb6rz,15,4,1|1bxb6s0,14,9,0|1c4verz,14,9,0|1c4ves0,15,4,1|1cg19fz,15,4,1|1cg19g0,14,9,0|1cnlhfz,14,9,0|1cnlhg0,15,4,1|1cyrc3z,15,4,1|1cyrc40,14,9,0|1d6oirz,14,9,0|1d6ois0,15,4,1|1dhherz,15,4,1|1dhhes0,14,9,0|1dpelfz,14,9,0|1dpelg0,15,4,1|1e07hfz,15,4,1|1e07hg0,14,9,0|1e84o3z,14,9,0|1e84o40,15,4,1|1ejairz,15,4,1|1ejais0,14,9,0|1equqrz,14,9,0|1equqs0,15,4,1|1f20lfz,15,4,1|1f20lg0,14,9,0|1f9ktfz,14,9,0|1f9ktg0,15,4,1|1fkqo3z,15,4,1|1fkqo40,14,9,0|1fsnurz,14,9,0|1fsnus0,15,4,1|1g3gqrz,15,4,1|1g3gqs0,14,9,0|1gbdxfz,14,9,0|1gbdxg0,15,4,1|1gm6tfz,15,4,1|1gm6tg0,14,9,0|1gu403z,14,9,0|1gu4040,15,4,1|1h4ww3z,15,4,1|1h4ww40,14,9,0|1hcu2rz,14,9,0|1hcu2s0,15,4,1|1hnzxfz,15,4,1|1hnzxg0,14,9,0|1hvk5fz,14,9,0|1hvk5g0,15,4,1|1i6q03z,15,4,1|1i6q040,14,9,0|1iea83z,14,9,0|1iea840,15,4,1|1ipg2rz,15,4,1|1ipg2s0,14,9,0|1ixd9fz,14,9,0|1ixd9g0,15,4,1|1j865fz,15,4,1|1j865g0,14,9,0|1jg3c3z,14,9,0|1jg3c40,15,4,1|1jqw83z,15,4,1|1jqw840,14,9,0|1jyterz,14,9,0|1jytes0,15,4,1|1k9z9fz,15,4,1|1k9z9g0,14,9,0|1khjhfz,14,9,0|1khjhg0,15,4,1|1kspc3z,15,4,1|1kspc40,14,9,0|1l09k3z,14,9,0|1l09k40,15,4,1|1lbferz,15,4,1|1lbfes0,14,9,0|1ljclfz,14,9,0|1ljclg0,15,4,1|1lu5hfz,15,4,1|1lu5hg0,14,9,0|1m22o3z,14,9,0|1m22o40,15,4,1|1mcvk3z,15,4,1|1mcvk40,14,9,0|1mksqrz,14,9,0|1mksqs0,15,4,1|1mvlmrz,15,4,1|1mvlms0,14,9,0|1n3itfz,14,9,0|1n3itg0,15,4,1|1neoo3z,15,4,1|1neoo40,14,9,0|1nm8w3z,14,9,0|1nm8w40,15,4,1|1nxeqrz,15,4,1|1nxeqs0,14,9,0|1o4yyrz,14,9,0|1o4yys0,15,4,1|1og4tfz,15,4,1|1og4tg0,14,9,0|1oo203z,14,9,0|1oo2040,15,4,1|1oyuw3z,15,4,1|1oyuw40,14,9,0|1p6s2rz,14,9,0|1p6s2s0,15,4,1|1phkyrz,15,4,1|1phkys0,14,9,0|1ppi5fz,14,9,0|1ppi5g0,15,4,1|1q0o03z,15,4,1|1q0o040,14,9,0|1q8883z,14,9,0|1q88840,15,4,1|1qje2rz,15,4,1|1qje2s0,14,9,0|1qqyarz,14,9,0|1qqyas0,15,4,1|1r245fz,15,4,1|1r245g0,14,9,0|1r9odfz,14,9,0|1r9odg0,15,4,1|1rku83z,15,4,1|1rku840,14,9,0|1rsrerz,14,9,0|1rsres0,15,4,1|1s3karz,15,4,1|1s3kas0,14,9,0|1sbhhfz,14,9,0|1sbhhg0,15,4,1|1smadfz,15,4,1|1smadg0,14,9,0|1su7k3z,14,9,0|1su7k40,15,4,1|1t5derz,15,4,1|1t5des0,14,9,0|1tcxmrz,14,9,0|1tcxms0,15,4,1|1to3hfz,15,4,1|1to3hg0,14,9,0|1tvnpfz,14,9,0|1tvnpg0,15,4,1|1u6tk3z,15,4,1|1u6tk40,14,9,0|1ueqqrz,14,9,0|1ueqqs0,15,4,1|1upjmrz,15,4,1|1upjms0,14,9,0|1uxgtfz,14,9,0|1uxgtg0,15,4,1|1v89pfz,15,4,1|1v89pg0,14,9,0|1vg6w3z,14,9,0|1vg6w40,15,4,1|1vqzs3z,15,4,1|1vqzs40,14,9,0|NaN,14,9,0",
        "Europe/Zurich|,0,321,0|-1os49kx,0,321,0|-1os49kw,53,322,0|-13g441n,53,322,0|-13g441m,8,8,0|-eyh6o1,8,8,0|-eyh6o0,9,9,1|-eqk001,9,9,1|-eqk000,8,8,0|-efr401,8,8,0|-efr400,9,9,1|-e7txc1,9,9,1|-e7txc0,8,8,0|5v5xfz,8,8,0|5v5xg0,9,9,1|64iyrz,9,9,1|64iys0,8,8,0|6dw03z,8,8,0|6dw040,9,9,1|6n91fz,9,9,1|6n91g0,8,8,0|6wm2rz,8,8,0|6wm2s0,9,9,1|75z43z,9,9,1|75z440,8,8,0|7fc5fz,8,8,0|7fc5g0,9,9,1|7p25fz,9,9,1|7p25g0,8,8,0|7yf6rz,8,8,0|7yf6s0,9,9,1|87s83z,9,9,1|87s840,8,8,0|8h59fz,8,8,0|8h59g0,9,9,1|8qiarz,9,9,1|8qias0,8,8,0|8zvc3z,8,8,0|8zvc40,9,9,1|998dfz,9,9,1|998dg0,8,8,0|9ilerz,8,8,0|9iles0,9,9,1|9ryg3z,9,9,1|9ryg40,8,8,0|a1bhfz,8,8,0|a1bhg0,9,9,1|aaoirz,9,9,1|aaois0,8,8,0|ak1k3z,8,8,0|ak1k40,9,9,1|atrk3z,9,9,1|atrk40,8,8,0|b34lfz,8,8,0|b34lg0,9,9,1|bchmrz,9,9,1|bchms0,8,8,0|bluo3z,8,8,0|bluo40,9,9,1|bv7pfz,9,9,1|bv7pg0,8,8,0|c4kqrz,8,8,0|c4kqs0,9,9,1|cdxs3z,9,9,1|cdxs40,8,8,0|cnatfz,8,8,0|cnatg0,9,9,1|cwnurz,9,9,1|cwnus0,8,8,0|d60w3z,8,8,0|d60w40,9,9,1|dfdxfz,9,9,1|dfdxg0,8,8,0|dp3xfz,8,8,0|dp3xg0,9,9,1|dzwtfz,9,9,1|dzwtg0,8,8,0|e7u03z,8,8,0|e7u040,9,9,1|eimw3z,9,9,1|eimw40,8,8,0|eqk2rz,8,8,0|eqk2s0,9,9,1|f1cyrz,9,9,1|f1cys0,8,8,0|f9a5fz,8,8,0|f9a5g0,9,9,1|fkg03z,9,9,1|fkg040,8,8,0|fs083z,8,8,0|fs0840,9,9,1|g362rz,9,9,1|g362s0,8,8,0|gaqarz,8,8,0|gaqas0,9,9,1|glw5fz,9,9,1|glw5g0,8,8,0|gttc3z,8,8,0|gttc40,9,9,1|h4m83z,9,9,1|h4m840,8,8,0|hcjerz,8,8,0|hcjes0,9,9,1|hncarz,9,9,1|hncas0,8,8,0|hv9hfz,8,8,0|hv9hg0,9,9,1|i6fc3z,9,9,1|i6fc40,8,8,0|idzk3z,8,8,0|idzk40,9,9,1|ip5erz,9,9,1|ip5es0,8,8,0|iwpmrz,8,8,0|iwpms0,9,9,1|j7vhfz,9,9,1|j7vhg0,8,8,0|jffpfz,8,8,0|jffpg0,9,9,1|jqlk3z,9,9,1|jqlk40,8,8,0|jyiqrz,8,8,0|jyiqs0,9,9,1|k9bmrz,9,9,1|k9bms0,8,8,0|kh8tfz,8,8,0|kh8tg0,9,9,1|ks1pfz,9,9,1|ks1pg0,8,8,0|kzyw3z,8,8,0|kzyw40,9,9,1|lb4qrz,9,9,1|lb4qs0,8,8,0|lioyrz,8,8,0|lioys0,9,9,1|ltutfz,9,9,1|ltutg0,8,8,0|m1f1fz,8,8,0|m1f1g0,9,9,1|mckw3z,9,9,1|mckw40,8,8,0|mki2rz,8,8,0|mki2s0,9,9,1|mvayrz,9,9,1|mvays0,8,8,0|n385fz,8,8,0|n385g0,9,9,1|ne11fz,9,9,1|ne11g0,8,8,0|nly83z,8,8,0|nly840,9,9,1|nwr43z,9,9,1|nwr440,8,8,0|o4oarz,8,8,0|o4oas0,9,9,1|ofu5fz,9,9,1|ofu5g0,8,8,0|onedfz,8,8,0|onedg0,9,9,1|oyk83z,9,9,1|oyk840,8,8,0|p64g3z,8,8,0|p64g40,9,9,1|phaarz,9,9,1|phaas0,8,8,0|pp7hfz,8,8,0|pp7hg0,9,9,1|q00dfz,9,9,1|q00dg0,8,8,0|q7xk3z,8,8,0|q7xk40,9,9,1|qiqg3z,9,9,1|qiqg40,8,8,0|qqnmrz,8,8,0|qqnms0,9,9,1|r1thfz,9,9,1|r1thg0,8,8,0|r9dpfz,8,8,0|r9dpg0,9,9,1|rkjk3z,9,9,1|rkjk40,8,8,0|rs3s3z,8,8,0|rs3s40,9,9,1|s39mrz,9,9,1|s39ms0,8,8,0|sb6tfz,8,8,0|sb6tg0,9,9,1|slzpfz,9,9,1|slzpg0,8,8,0|stww3z,8,8,0|stww40,9,9,1|t4ps3z,9,9,1|t4ps40,8,8,0|tcmyrz,8,8,0|tcmys0,9,9,1|tnfurz,9,9,1|tnfus0,8,8,0|tvd1fz,8,8,0|tvd1g0,9,9,1|u6iw3z,9,9,1|u6iw40,8,8,0|ue343z,8,8,0|ue3440,9,9,1|up8yrz,9,9,1|up8ys0,8,8,0|uwt6rz,8,8,0|uwt6s0,9,9,1|v7z1fz,9,9,1|v7z1g0,8,8,0|vfw83z,8,8,0|vfw840,9,9,1|vqp43z,9,9,1|vqp440,8,8,0|vymarz,8,8,0|vymas0,9,9,1|w9f6rz,9,9,1|w9f6s0,8,8,0|whcdfz,8,8,0|whcdg0,9,9,1|wsi83z,9,9,1|wsi840,8,8,0|x02g3z,8,8,0|x02g40,9,9,1|xb8arz,9,9,1|xb8as0,8,8,0|xisirz,8,8,0|xisis0,9,9,1|xtydfz,9,9,1|xtydg0,8,8,0|y1ilfz,8,8,0|y1ilg0,9,9,1|ycog3z,9,9,1|ycog40,8,8,0|yklmrz,8,8,0|yklms0,9,9,1|yveirz,9,9,1|yveis0,8,8,0|z3bpfz,8,8,0|z3bpg0,9,9,1|ze4lfz,9,9,1|ze4lg0,8,8,0|zm1s3z,8,8,0|zm1s40,9,9,1|zx7mrz,9,9,1|zx7ms0,8,8,0|104rurz,8,8,0|104rus0,9,9,1|10fxpfz,9,9,1|10fxpg0,8,8,0|10nhxfz,8,8,0|10nhxg0,9,9,1|10yns3z,9,9,1|10yns40,8,8,0|116kyrz,8,8,0|116kys0,9,9,1|11hdurz,9,9,1|11hdus0,8,8,0|11pb1fz,8,8,0|11pb1g0,9,9,1|1203xfz,9,9,1|1203xg0,8,8,0|128143z,8,8,0|1281440,9,9,1|12iu03z,9,9,1|12iu040,8,8,0|12qr6rz,8,8,0|12qr6s0,9,9,1|131x1fz,9,9,1|131x1g0,8,8,0|139h9fz,8,8,0|139h9g0,9,9,1|13kn43z,9,9,1|13kn440,8,8,0|13s7c3z,8,8,0|13s7c40,9,9,1|143d6rz,9,9,1|143d6s0,8,8,0|14badfz,8,8,0|14badg0,9,9,1|14m39fz,9,9,1|14m39g0,8,8,0|14u0g3z,8,8,0|14u0g40,9,9,1|154tc3z,9,9,1|154tc40,8,8,0|15cqirz,8,8,0|15cqis0,9,9,1|15nwdfz,9,9,1|15nwdg0,8,8,0|15vglfz,8,8,0|15vglg0,9,9,1|166mg3z,9,9,1|166mg40,8,8,0|16e6o3z,8,8,0|16e6o40,9,9,1|16pcirz,9,9,1|16pcis0,8,8,0|16x9pfz,8,8,0|16x9pg0,9,9,1|1782lfz,9,9,1|1782lg0,8,8,0|17fzs3z,8,8,0|17fzs40,9,9,1|17qso3z,9,9,1|17qso40,8,8,0|17ypurz,8,8,0|17ypus0,9,9,1|189iqrz,9,9,1|189iqs0,8,8,0|18hfxfz,8,8,0|18hfxg0,9,9,1|18sls3z,9,9,1|18sls40,8,8,0|190603z,8,8,0|1906040,9,9,1|19bburz,9,9,1|19bbus0,8,8,0|19iw2rz,8,8,0|19iw2s0,9,9,1|19u1xfz,9,9,1|19u1xg0,8,8,0|1a1z43z,8,8,0|1a1z440,9,9,1|1acs03z,9,9,1|1acs040,8,8,0|1akp6rz,8,8,0|1akp6s0,9,9,1|1avi2rz,9,9,1|1avi2s0,8,8,0|1b3f9fz,8,8,0|1b3f9g0,9,9,1|1bel43z,9,9,1|1bel440,8,8,0|1bm5c3z,8,8,0|1bm5c40,9,9,1|1bxb6rz,9,9,1|1bxb6s0,8,8,0|1c4verz,8,8,0|1c4ves0,9,9,1|1cg19fz,9,9,1|1cg19g0,8,8,0|1cnlhfz,8,8,0|1cnlhg0,9,9,1|1cyrc3z,9,9,1|1cyrc40,8,8,0|1d6oirz,8,8,0|1d6ois0,9,9,1|1dhherz,9,9,1|1dhhes0,8,8,0|1dpelfz,8,8,0|1dpelg0,9,9,1|1e07hfz,9,9,1|1e07hg0,8,8,0|1e84o3z,8,8,0|1e84o40,9,9,1|1ejairz,9,9,1|1ejais0,8,8,0|1equqrz,8,8,0|1equqs0,9,9,1|1f20lfz,9,9,1|1f20lg0,8,8,0|1f9ktfz,8,8,0|1f9ktg0,9,9,1|1fkqo3z,9,9,1|1fkqo40,8,8,0|1fsnurz,8,8,0|1fsnus0,9,9,1|1g3gqrz,9,9,1|1g3gqs0,8,8,0|1gbdxfz,8,8,0|1gbdxg0,9,9,1|1gm6tfz,9,9,1|1gm6tg0,8,8,0|1gu403z,8,8,0|1gu4040,9,9,1|1h4ww3z,9,9,1|1h4ww40,8,8,0|1hcu2rz,8,8,0|1hcu2s0,9,9,1|1hnzxfz,9,9,1|1hnzxg0,8,8,0|1hvk5fz,8,8,0|1hvk5g0,9,9,1|1i6q03z,9,9,1|1i6q040,8,8,0|1iea83z,8,8,0|1iea840,9,9,1|1ipg2rz,9,9,1|1ipg2s0,8,8,0|1ixd9fz,8,8,0|1ixd9g0,9,9,1|1j865fz,9,9,1|1j865g0,8,8,0|1jg3c3z,8,8,0|1jg3c40,9,9,1|1jqw83z,9,9,1|1jqw840,8,8,0|1jyterz,8,8,0|1jytes0,9,9,1|1k9z9fz,9,9,1|1k9z9g0,8,8,0|1khjhfz,8,8,0|1khjhg0,9,9,1|1kspc3z,9,9,1|1kspc40,8,8,0|1l09k3z,8,8,0|1l09k40,9,9,1|1lbferz,9,9,1|1lbfes0,8,8,0|1ljclfz,8,8,0|1ljclg0,9,9,1|1lu5hfz,9,9,1|1lu5hg0,8,8,0|1m22o3z,8,8,0|1m22o40,9,9,1|1mcvk3z,9,9,1|1mcvk40,8,8,0|1mksqrz,8,8,0|1mksqs0,9,9,1|1mvlmrz,9,9,1|1mvlms0,8,8,0|1n3itfz,8,8,0|1n3itg0,9,9,1|1neoo3z,9,9,1|1neoo40,8,8,0|1nm8w3z,8,8,0|1nm8w40,9,9,1|1nxeqrz,9,9,1|1nxeqs0,8,8,0|1o4yyrz,8,8,0|1o4yys0,9,9,1|1og4tfz,9,9,1|1og4tg0,8,8,0|1oo203z,8,8,0|1oo2040,9,9,1|1oyuw3z,9,9,1|1oyuw40,8,8,0|1p6s2rz,8,8,0|1p6s2s0,9,9,1|1phkyrz,9,9,1|1phkys0,8,8,0|1ppi5fz,8,8,0|1ppi5g0,9,9,1|1q0o03z,9,9,1|1q0o040,8,8,0|1q8883z,8,8,0|1q88840,9,9,1|1qje2rz,9,9,1|1qje2s0,8,8,0|1qqyarz,8,8,0|1qqyas0,9,9,1|1r245fz,9,9,1|1r245g0,8,8,0|1r9odfz,8,8,0|1r9odg0,9,9,1|1rku83z,9,9,1|1rku840,8,8,0|1rsrerz,8,8,0|1rsres0,9,9,1|1s3karz,9,9,1|1s3kas0,8,8,0|1sbhhfz,8,8,0|1sbhhg0,9,9,1|1smadfz,9,9,1|1smadg0,8,8,0|1su7k3z,8,8,0|1su7k40,9,9,1|1t5derz,9,9,1|1t5des0,8,8,0|1tcxmrz,8,8,0|1tcxms0,9,9,1|1to3hfz,9,9,1|1to3hg0,8,8,0|1tvnpfz,8,8,0|1tvnpg0,9,9,1|1u6tk3z,9,9,1|1u6tk40,8,8,0|1ueqqrz,8,8,0|1ueqqs0,9,9,1|1upjmrz,9,9,1|1upjms0,8,8,0|1uxgtfz,8,8,0|1uxgtg0,9,9,1|1v89pfz,9,9,1|1v89pg0,8,8,0|1vg6w3z,8,8,0|1vg6w40,9,9,1|1vqzs3z,9,9,1|1vqzs40,8,8,0|NaN,8,8,0",
        "Indian/Antananarivo|,0,2,0|-w6p5hh,0,2,0|-w6p5hg,2,3,0|-lnsey1,2,3,0|-lnsey0,3,4,0|-kvcdo1,3,4,0|-kvcdo0,2,3,0|-h80ka1,2,3,0|-h80ka0,4,5,0|-eb6ib1,4,5,0|-eb6ib0,3,4,0|NaN,3,4,0",
        "Indian/Chagos|,0,357,0|-wvpc2t,0,357,0|-wvpc2s,87,184,0|dkgsrz,87,184,0|dkgss0,92,188,0|NaN,92,188,0",
        "Indian/Christmas|,0,209,0|-1ayyla5,0,209,0|-1ayyla4,53,209,0|-pysda5,53,209,0|-pysda4,86,183,0|NaN,86,183,0",
        "Indian/Cocos|,0,285,0|-1ayykhc,0,285,0|-1ayykhb,133,285,0|-q3gv5c,133,285,0|-q3gv5b,107,222,0|-efx621,107,222,0|-efx620,105,216,0|-cvg101,105,216,0|-cvg100,107,222,0|NaN,107,222,0",
        "Indian/Comoro|,0,2,0|-w6p5hh,0,2,0|-w6p5hg,2,3,0|-lnsey1,2,3,0|-lnsey0,3,4,0|-kvcdo1,3,4,0|-kvcdo0,2,3,0|-h80ka1,2,3,0|-h80ka0,4,5,0|-eb6ib1,4,5,0|-eb6ib0,3,4,0|NaN,3,4,0",
        "Indian/Kerguelen|,0,358,0|-1ayyga1,0,358,0|-1ayyga0,20,358,0|-57x6y1,20,358,0|-57x6y0,87,184,0|NaN,87,184,0",
        "Indian/Mahe|,0,227,0|-q3gnkp,0,227,0|-q3gnko,102,201,0|NaN,102,201,0",
        "Indian/Maldives|,0,358,0|-1ayyga1,0,358,0|-1ayyga0,20,358,0|-57x6y1,20,358,0|-57x6y0,87,184,0|NaN,87,184,0",
        "Indian/Mauritius|,0,359,0|-wvp9bd,0,359,0|-wvp9bc,102,201,0|6nykvz,102,201,0|6nykw0,87,184,1|6wai3z,87,184,1|6wai40,102,201,0|k9befz,102,201,0|k9beg0,87,184,1|kh8ibz,87,184,1|kh8ic0,102,201,0|NaN,102,201,0",
        "Indian/Mayotte|,0,2,0|-w6p5hh,0,2,0|-w6p5hg,2,3,0|-lnsey1,2,3,0|-lnsey0,3,4,0|-kvcdo1,3,4,0|-kvcdo0,2,3,0|-h80ka1,2,3,0|-h80ka0,4,5,0|-eb6ib1,4,5,0|-eb6ib0,3,4,0|NaN,3,4,0",
        "Indian/Reunion|,0,227,0|-q3gnkp,0,227,0|-q3gnko,102,201,0|NaN,102,201,0",
        "Pacific/Apia|,0,360,0|-14fxxj5,0,360,0|-14fxxj4,0,361,0|-usiiv5,0,361,0|-usiiv4,151,362,0|-afqw21,151,362,0|-afqw20,152,33,0|l9cp7z,152,33,0|l9cp80,153,34,1|lj12vz,153,34,1|lj12w0,152,33,0|ls15jz,152,33,0|ls15k0,153,34,1|lx0h3z,153,34,1|lx0h40,101,199,1|m1r5jz,101,199,1|m1r5k0,100,193,0|mb46vz,100,193,0|mb46w0,101,199,1|mku6vz,101,199,1|mku6w0,100,193,0|mtu9jz,100,193,0|mtu9k0,101,199,1|n3k9jz,101,199,1|n3k9k0,100,193,0|nckc7z,100,193,0|nckc80,101,199,1|nmac7z,101,199,1|nmac80,100,193,0|nvaevz,100,193,0|nvaew0,101,199,1|o50evz,101,199,1|o50ew0,100,193,0|oe0hjz,100,193,0|oe0hk0,101,199,1|onqhjz,101,199,1|onqhk0,100,193,0|owqk7z,100,193,0|owqk80,101,199,1|p6gk7z,101,199,1|p6gk80,100,193,0|pftljz,100,193,0|pftlk0,101,199,1|ppjljz,101,199,1|ppjlk0,100,193,0|pyjo7z,100,193,0|pyjo80,101,199,1|q89o7z,101,199,1|q89o80,100,193,0|qh9qvz,100,193,0|qh9qw0,101,199,1|qqzqvz,101,199,1|qqzqw0,100,193,0|NaN,100,193,0",
        "Pacific/Auckland|,0,189,0|-1gsoz15,0,189,0|-1gsoz14,93,190,0|-m01p21,93,190,0|-m01p20,94,191,1|-ltxei1,94,191,1|-ltxei0,93,190,0|-lieie1,93,190,0|-lieie0,94,192,1|-lahd41,94,192,1|-lahd40,93,190,0|-kzofq1,93,190,0|-kzofq0,94,192,1|-krrag1,94,192,1|-krrag0,93,190,0|-kgyd21,93,190,0|-kgyd20,94,192,1|-k917s1,94,192,1|-k917s0,93,190,0|-jy8ae1,93,190,0|-jy8ae0,94,192,1|-jpy6g1,94,192,1|-jpy6g0,93,190,0|-jfi7q1,93,190,0|-jfi7q0,94,192,1|-j783s1,94,192,1|-j783s0,93,190,0|-iws521,93,190,0|-iws520,94,192,1|-imc941,94,192,1|-imc940,93,190,0|-ief121,93,190,0|-ief120,94,192,1|-i3m6g1,94,192,1|-i3m6g0,93,190,0|-hvoye1,93,190,0|-hvoye0,94,192,1|-hkw3s1,94,192,1|-hkw3s0,93,190,0|-hcyvq1,93,190,0|-hcyvq0,94,192,1|-h26141,94,192,1|-h26140,93,190,0|-gu8t21,93,190,0|-gu8t20,94,192,1|-gjfyg1,94,192,1|-gjfyg0,93,190,0|-gbiqe1,93,190,0|-gbiqe0,94,192,1|-g0cx41,94,192,1|-g0cx40,93,190,0|-fssnq1,93,190,0|-fssnq0,94,192,1|-fhmug1,94,192,1|-fhmug0,93,190,0|-f9pme1,93,190,0|-f9pme0,94,192,1|-ciy9c1,94,192,1|-ciy9c0,94,192,0|2ivg7z,94,192,0|2ivg80,95,193,1|2omuvz,95,193,1|2omuw0,94,192,0|318k7z,94,192,0|318k80,95,193,1|382uvz,95,193,1|382uw0,94,192,0|3kbljz,94,192,0|3kblk0,95,193,1|3qsxjz,95,193,1|3qsxk0,94,192,0|431o7z,94,192,0|431o80,95,193,1|49j07z,95,193,1|49j080,94,192,0|4lrqvz,94,192,0|4lrqw0,95,193,1|4s92vz,95,193,1|4s92w0,94,192,0|54htjz,94,192,0|54htk0,95,193,1|5az5jz,95,193,1|5az5k0,94,192,0|5n7w7z,94,192,0|5n7w80,95,193,1|5tp87z,95,193,1|5tp880,94,192,0|65xyvz,94,192,0|65xyw0,95,193,1|6cs9jz,95,193,1|6cs9k0,94,192,0|6p107z,94,192,0|6p1080,95,193,1|6vic7z,95,193,1|6vic80,94,192,0|77r2vz,94,192,0|77r2w0,95,193,1|7e8evz,95,193,1|7e8ew0,94,192,0|7qh5jz,94,192,0|7qh5k0,95,193,1|7wyhjz,95,193,1|7wyhk0,94,192,0|89787z,94,192,0|897880,95,193,1|8fok7z,95,193,1|8fok80,94,192,0|8rxavz,94,192,0|8rxaw0,95,193,1|8yemvz,95,193,1|8yemw0,94,192,0|9andjz,94,192,0|9andk0,95,193,1|9hho7z,95,193,1|9hho80,94,192,0|9tqevz,94,192,0|9tqew0,95,193,1|a07qvz,95,193,1|a07qw0,94,192,0|abdljz,94,192,0|abdlk0,95,193,1|ajnqvz,95,193,1|ajnqw0,94,192,0|au3o7z,94,192,0|au3o80,95,193,1|b2dtjz,95,193,1|b2dtk0,94,192,0|bctqvz,94,192,0|bctqw0,95,193,1|bl3w7z,95,193,1|bl3w80,94,192,0|bvjtjz,94,192,0|bvjtk0,95,193,1|c46xjz,95,193,1|c46xk0,94,192,0|ce9w7z,94,192,0|ce9w80,95,193,1|cmx07z,95,193,1|cmx080,94,192,0|cwzyvz,94,192,0|cwzyw0,95,193,1|d5n2vz,95,193,1|d5n2w0,94,192,0|dfq1jz,94,192,0|dfq1k0,95,193,1|dod5jz,95,193,1|dod5k0,94,192,0|dyt2vz,94,192,0|dyt2w0,95,193,1|e7387z,95,193,1|e73880,94,192,0|ehj5jz,94,192,0|ehj5k0,95,193,1|eptavz,95,193,1|eptaw0,94,192,0|f0987z,94,192,0|f09880,95,193,1|f8wc7z,95,193,1|f8wc80,94,192,0|fizavz,94,192,0|fizaw0,95,193,1|frmevz,95,193,1|frmew0,94,192,0|g1pdjz,94,192,0|g1pdk0,95,193,1|gachjz,95,193,1|gachk0,94,192,0|gksevz,94,192,0|gksew0,95,193,1|gt2k7z,95,193,1|gt2k80,94,192,0|h3ihjz,94,192,0|h3ihk0,95,193,1|hbsmvz,95,193,1|hbsmw0,94,192,0|hm8k7z,94,192,0|hm8k80,95,193,1|huvo7z,95,193,1|huvo80,94,192,0|i4ymvz,94,192,0|i4ymw0,95,193,1|idlqvz,95,193,1|idlqw0,94,192,0|inopjz,94,192,0|inopk0,95,193,1|iwbtjz,95,193,1|iwbtk0,94,192,0|j6es7z,94,192,0|j6es80,95,193,1|jf1w7z,95,193,1|jf1w80,94,192,0|jp4uvz,94,192,0|jp4uw0,95,193,1|jyuuvz,95,193,1|jyuuw0,94,192,0|k7uxjz,94,192,0|k7uxk0,95,193,1|khkxjz,95,193,1|khkxk0,94,192,0|kql07z,94,192,0|kql080,95,193,1|l0b07z,95,193,1|l0b080,94,192,0|l9b2vz,94,192,0|l9b2w0,95,193,1|lj12vz,95,193,1|lj12w0,94,192,0|ls15jz,94,192,0|ls15k0,95,193,1|m1r5jz,95,193,1|m1r5k0,94,192,0|mb46vz,94,192,0|mb46w0,95,193,1|mku6vz,95,193,1|mku6w0,94,192,0|mtu9jz,94,192,0|mtu9k0,95,193,1|n3k9jz,95,193,1|n3k9k0,94,192,0|nckc7z,94,192,0|nckc80,95,193,1|nmac7z,95,193,1|nmac80,94,192,0|nvaevz,94,192,0|nvaew0,95,193,1|o50evz,95,193,1|o50ew0,94,192,0|oe0hjz,94,192,0|oe0hk0,95,193,1|onqhjz,95,193,1|onqhk0,94,192,0|owqk7z,94,192,0|owqk80,95,193,1|p6gk7z,95,193,1|p6gk80,94,192,0|pftljz,94,192,0|pftlk0,95,193,1|ppjljz,95,193,1|ppjlk0,94,192,0|pyjo7z,94,192,0|pyjo80,95,193,1|q89o7z,95,193,1|q89o80,94,192,0|qh9qvz,94,192,0|qh9qw0,95,193,1|qqzqvz,95,193,1|qqzqw0,94,192,0|qzztjz,94,192,0|qzztk0,95,193,1|r9ptjz,95,193,1|r9ptk0,94,192,0|ripw7z,94,192,0|ripw80,95,193,1|rsfw7z,95,193,1|rsfw80,94,192,0|s1fyvz,94,192,0|s1fyw0,95,193,1|sbixjz,95,193,1|sbixk0,94,192,0|skj07z,94,192,0|skj080,95,193,1|su907z,95,193,1|su9080,94,192,0|t392vz,94,192,0|t392w0,95,193,1|tcz2vz,95,193,1|tcz2w0,94,192,0|tlz5jz,94,192,0|tlz5k0,95,193,1|tvp5jz,95,193,1|tvp5k0,94,192,0|u4p87z,94,192,0|u4p880,95,193,1|uef87z,95,193,1|uef880,94,192,0|unfavz,94,192,0|unfaw0,95,193,1|ux5avz,95,193,1|ux5aw0,94,192,0|v6ic7z,94,192,0|v6ic80,95,193,1|vg8c7z,95,193,1|vg8c80,94,192,0|vp8evz,94,192,0|vp8ew0,95,193,1|vyyevz,95,193,1|vyyew0,94,192,0|w7yhjz,94,192,0|w7yhk0,95,193,1|whohjz,95,193,1|whohk0,94,192,0|wqok7z,94,192,0|wqok80,95,193,1|x0ek7z,95,193,1|x0ek80,94,192,0|x9emvz,94,192,0|x9emw0,95,193,1|xj4mvz,95,193,1|xj4mw0,94,192,0|xs4pjz,94,192,0|xs4pk0,95,193,1|y1upjz,95,193,1|y1upk0,94,192,0|yb7qvz,94,192,0|yb7qw0,95,193,1|ykxqvz,95,193,1|ykxqw0,94,192,0|ytxtjz,94,192,0|ytxtk0,95,193,1|z3ntjz,95,193,1|z3ntk0,94,192,0|zcnw7z,94,192,0|zcnw80,95,193,1|zmdw7z,95,193,1|zmdw80,94,192,0|zvdyvz,94,192,0|zvdyw0,95,193,1|1053yvz,95,193,1|1053yw0,94,192,0|10e41jz,94,192,0|10e41k0,95,193,1|10nu1jz,95,193,1|10nu1k0,94,192,0|10x72vz,94,192,0|10x72w0,95,193,1|116x2vz,95,193,1|116x2w0,94,192,0|11fx5jz,94,192,0|11fx5k0,95,193,1|11pn5jz,95,193,1|11pn5k0,94,192,0|11yn87z,94,192,0|11yn880,95,193,1|128d87z,95,193,1|128d880,94,192,0|12hdavz,94,192,0|12hdaw0,95,193,1|12r3avz,95,193,1|12r3aw0,94,192,0|1303djz,94,192,0|1303dk0,95,193,1|139tdjz,95,193,1|139tdk0,94,192,0|13itg7z,94,192,0|13itg80,95,193,1|13sjg7z,95,193,1|13sjg80,94,192,0|141whjz,94,192,0|141whk0,95,193,1|14bmhjz,95,193,1|14bmhk0,94,192,0|14kmk7z,94,192,0|14kmk80,95,193,1|14uck7z,95,193,1|14uck80,94,192,0|153cmvz,94,192,0|153cmw0,95,193,1|15d2mvz,95,193,1|15d2mw0,94,192,0|15m2pjz,94,192,0|15m2pk0,95,193,1|15vspjz,95,193,1|15vspk0,94,192,0|164ss7z,94,192,0|164ss80,95,193,1|16eis7z,95,193,1|16eis80,94,192,0|16niuvz,94,192,0|16niuw0,95,193,1|16xltjz,95,193,1|16xltk0,94,192,0|176lw7z,94,192,0|176lw80,95,193,1|17gbw7z,95,193,1|17gbw80,94,192,0|17pbyvz,94,192,0|17pbyw0,95,193,1|17z1yvz,95,193,1|17z1yw0,94,192,0|18821jz,94,192,0|18821k0,95,193,1|18hs1jz,95,193,1|18hs1k0,94,192,0|18qs47z,94,192,0|18qs480,95,193,1|190i47z,95,193,1|190i480,94,192,0|199i6vz,94,192,0|199i6w0,95,193,1|19j86vz,95,193,1|19j86w0,94,192,0|19sl87z,94,192,0|19sl880,95,193,1|1a2b87z,95,193,1|1a2b880,94,192,0|1abbavz,94,192,0|1abbaw0,95,193,1|1al1avz,95,193,1|1al1aw0,94,192,0|1au1djz,94,192,0|1au1dk0,95,193,1|1b3rdjz,95,193,1|1b3rdk0,94,192,0|1bcrg7z,94,192,0|1bcrg80,95,193,1|1bmhg7z,95,193,1|1bmhg80,94,192,0|1bvhivz,94,192,0|1bvhiw0,95,193,1|1c57ivz,95,193,1|1c57iw0,94,192,0|1ce7ljz,94,192,0|1ce7lk0,95,193,1|1cnxljz,95,193,1|1cnxlk0,94,192,0|1cxamvz,94,192,0|1cxamw0,95,193,1|1d70mvz,95,193,1|1d70mw0,94,192,0|1dg0pjz,94,192,0|1dg0pk0,95,193,1|1dpqpjz,95,193,1|1dpqpk0,94,192,0|1dyqs7z,94,192,0|1dyqs80,95,193,1|1e8gs7z,95,193,1|1e8gs80,94,192,0|1ehguvz,94,192,0|1ehguw0,95,193,1|1er6uvz,95,193,1|1er6uw0,94,192,0|1f06xjz,94,192,0|1f06xk0,95,193,1|1f9wxjz,95,193,1|1f9wxk0,94,192,0|1fj9yvz,94,192,0|1fj9yw0,95,193,1|1fszyvz,95,193,1|1fszyw0,94,192,0|1g201jz,94,192,0|1g201k0,95,193,1|1gbq1jz,95,193,1|1gbq1k0,94,192,0|1gkq47z,94,192,0|1gkq480,95,193,1|1gug47z,95,193,1|1gug480,94,192,0|1h3g6vz,94,192,0|1h3g6w0,95,193,1|1hd66vz,95,193,1|1hd66w0,94,192,0|1hm69jz,94,192,0|1hm69k0,95,193,1|1hvw9jz,95,193,1|1hvw9k0,94,192,0|1i4wc7z,94,192,0|1i4wc80,95,193,1|1iemc7z,95,193,1|1iemc80,94,192,0|1inzdjz,94,192,0|1inzdk0,95,193,1|1ixpdjz,95,193,1|1ixpdk0,94,192,0|1j6pg7z,94,192,0|1j6pg80,95,193,1|1jgfg7z,95,193,1|1jgfg80,94,192,0|1jpfivz,94,192,0|1jpfiw0,95,193,1|1jz5ivz,95,193,1|1jz5iw0,94,192,0|1k85ljz,94,192,0|1k85lk0,95,193,1|1khvljz,95,193,1|1khvlk0,94,192,0|1kqvo7z,94,192,0|1kqvo80,95,193,1|1l0lo7z,95,193,1|1l0lo80,94,192,0|1l9lqvz,94,192,0|1l9lqw0,95,193,1|1ljopjz,95,193,1|1ljopk0,94,192,0|1lsos7z,94,192,0|1lsos80,95,193,1|1m2es7z,95,193,1|1m2es80,94,192,0|1mbeuvz,94,192,0|1mbeuw0,95,193,1|1ml4uvz,95,193,1|1ml4uw0,94,192,0|1mu4xjz,94,192,0|1mu4xk0,95,193,1|1n3uxjz,95,193,1|1n3uxk0,94,192,0|1ncv07z,94,192,0|1ncv080,95,193,1|1nml07z,95,193,1|1nml080,94,192,0|1nvl2vz,94,192,0|1nvl2w0,95,193,1|1o5b2vz,95,193,1|1o5b2w0,94,192,0|1oeo47z,94,192,0|1oeo480,95,193,1|1ooe47z,95,193,1|1ooe480,94,192,0|1oxe6vz,94,192,0|1oxe6w0,95,193,1|1p746vz,95,193,1|1p746w0,94,192,0|1pg49jz,94,192,0|1pg49k0,95,193,1|1ppu9jz,95,193,1|1ppu9k0,94,192,0|1pyuc7z,94,192,0|1pyuc80,95,193,1|1q8kc7z,95,193,1|1q8kc80,94,192,0|1qhkevz,94,192,0|1qhkew0,95,193,1|1qraevz,95,193,1|1qraew0,94,192,0|1r0ahjz,94,192,0|1r0ahk0,95,193,1|1ra0hjz,95,193,1|1ra0hk0,94,192,0|1rjdivz,94,192,0|1rjdiw0,95,193,1|1rt3ivz,95,193,1|1rt3iw0,94,192,0|1s23ljz,94,192,0|1s23lk0,95,193,1|1sbtljz,95,193,1|1sbtlk0,94,192,0|1skto7z,94,192,0|1skto80,95,193,1|1sujo7z,95,193,1|1sujo80,94,192,0|1t3jqvz,94,192,0|1t3jqw0,95,193,1|1td9qvz,95,193,1|1td9qw0,94,192,0|1tm9tjz,94,192,0|1tm9tk0,95,193,1|1tvztjz,95,193,1|1tvztk0,94,192,0|1u5cuvz,94,192,0|1u5cuw0,95,193,1|1uf2uvz,95,193,1|1uf2uw0,94,192,0|1uo2xjz,94,192,0|1uo2xk0,95,193,1|1uxsxjz,95,193,1|1uxsxk0,94,192,0|1v6t07z,94,192,0|1v6t080,95,193,1|1vgj07z,95,193,1|1vgj080,94,192,0|1vpj2vz,94,192,0|1vpj2w0,95,193,1|NaN,95,193,1",
        "Pacific/Bougainville|,0,363,0|-1ayyvh5,0,363,0|-1ayyvh4,88,186,0|-1354j8x,88,186,0|-1354j8w,89,187,0|-ecsh41,89,187,0|-ecsh40,105,216,0|-cpsbo1,105,216,0|-cpsbo0,89,187,0|nh90fz,89,187,0|nh90g0,85,182,0|NaN,85,182,0",
        "Pacific/Chatham|,0,364,0|-1gsp0n1,0,364,0|-1gsp0n0,154,365,0|-ciya11,154,365,0|-ciya10,155,366,0|2ivg7z,155,366,0|2ivg80,156,367,1|2omuvz,156,367,1|2omuw0,155,366,0|318k7z,155,366,0|318k80,156,367,1|382uvz,156,367,1|382uw0,155,366,0|3kbljz,155,366,0|3kblk0,156,367,1|3qsxjz,156,367,1|3qsxk0,155,366,0|431o7z,155,366,0|431o80,156,367,1|49j07z,156,367,1|49j080,155,366,0|4lrqvz,155,366,0|4lrqw0,156,367,1|4s92vz,156,367,1|4s92w0,155,366,0|54htjz,155,366,0|54htk0,156,367,1|5az5jz,156,367,1|5az5k0,155,366,0|5n7w7z,155,366,0|5n7w80,156,367,1|5tp87z,156,367,1|5tp880,155,366,0|65xyvz,155,366,0|65xyw0,156,367,1|6cs9jz,156,367,1|6cs9k0,155,366,0|6p107z,155,366,0|6p1080,156,367,1|6vic7z,156,367,1|6vic80,155,366,0|77r2vz,155,366,0|77r2w0,156,367,1|7e8evz,156,367,1|7e8ew0,155,366,0|7qh5jz,155,366,0|7qh5k0,156,367,1|7wyhjz,156,367,1|7wyhk0,155,366,0|89787z,155,366,0|897880,156,367,1|8fok7z,156,367,1|8fok80,155,366,0|8rxavz,155,366,0|8rxaw0,156,367,1|8yemvz,156,367,1|8yemw0,155,366,0|9andjz,155,366,0|9andk0,156,367,1|9hho7z,156,367,1|9hho80,155,366,0|9tqevz,155,366,0|9tqew0,156,367,1|a07qvz,156,367,1|a07qw0,155,366,0|abdljz,155,366,0|abdlk0,156,367,1|ajnqvz,156,367,1|ajnqw0,155,366,0|au3o7z,155,366,0|au3o80,156,367,1|b2dtjz,156,367,1|b2dtk0,155,366,0|bctqvz,155,366,0|bctqw0,156,367,1|bl3w7z,156,367,1|bl3w80,155,366,0|bvjtjz,155,366,0|bvjtk0,156,367,1|c46xjz,156,367,1|c46xk0,155,366,0|ce9w7z,155,366,0|ce9w80,156,367,1|cmx07z,156,367,1|cmx080,155,366,0|cwzyvz,155,366,0|cwzyw0,156,367,1|d5n2vz,156,367,1|d5n2w0,155,366,0|dfq1jz,155,366,0|dfq1k0,156,367,1|dod5jz,156,367,1|dod5k0,155,366,0|dyt2vz,155,366,0|dyt2w0,156,367,1|e7387z,156,367,1|e73880,155,366,0|ehj5jz,155,366,0|ehj5k0,156,367,1|eptavz,156,367,1|eptaw0,155,366,0|f0987z,155,366,0|f09880,156,367,1|f8wc7z,156,367,1|f8wc80,155,366,0|fizavz,155,366,0|fizaw0,156,367,1|frmevz,156,367,1|frmew0,155,366,0|g1pdjz,155,366,0|g1pdk0,156,367,1|gachjz,156,367,1|gachk0,155,366,0|gksevz,155,366,0|gksew0,156,367,1|gt2k7z,156,367,1|gt2k80,155,366,0|h3ihjz,155,366,0|h3ihk0,156,367,1|hbsmvz,156,367,1|hbsmw0,155,366,0|hm8k7z,155,366,0|hm8k80,156,367,1|huvo7z,156,367,1|huvo80,155,366,0|i4ymvz,155,366,0|i4ymw0,156,367,1|idlqvz,156,367,1|idlqw0,155,366,0|inopjz,155,366,0|inopk0,156,367,1|iwbtjz,156,367,1|iwbtk0,155,366,0|j6es7z,155,366,0|j6es80,156,367,1|jf1w7z,156,367,1|jf1w80,155,366,0|jp4uvz,155,366,0|jp4uw0,156,367,1|jyuuvz,156,367,1|jyuuw0,155,366,0|k7uxjz,155,366,0|k7uxk0,156,367,1|khkxjz,156,367,1|khkxk0,155,366,0|kql07z,155,366,0|kql080,156,367,1|l0b07z,156,367,1|l0b080,155,366,0|l9b2vz,155,366,0|l9b2w0,156,367,1|lj12vz,156,367,1|lj12w0,155,366,0|ls15jz,155,366,0|ls15k0,156,367,1|m1r5jz,156,367,1|m1r5k0,155,366,0|mb46vz,155,366,0|mb46w0,156,367,1|mku6vz,156,367,1|mku6w0,155,366,0|mtu9jz,155,366,0|mtu9k0,156,367,1|n3k9jz,156,367,1|n3k9k0,155,366,0|nckc7z,155,366,0|nckc80,156,367,1|nmac7z,156,367,1|nmac80,155,366,0|nvaevz,155,366,0|nvaew0,156,367,1|o50evz,156,367,1|o50ew0,155,366,0|oe0hjz,155,366,0|oe0hk0,156,367,1|onqhjz,156,367,1|onqhk0,155,366,0|owqk7z,155,366,0|owqk80,156,367,1|p6gk7z,156,367,1|p6gk80,155,366,0|pftljz,155,366,0|pftlk0,156,367,1|ppjljz,156,367,1|ppjlk0,155,366,0|pyjo7z,155,366,0|pyjo80,156,367,1|q89o7z,156,367,1|q89o80,155,366,0|qh9qvz,155,366,0|qh9qw0,156,367,1|qqzqvz,156,367,1|qqzqw0,155,366,0|qzztjz,155,366,0|qzztk0,156,367,1|r9ptjz,156,367,1|r9ptk0,155,366,0|ripw7z,155,366,0|ripw80,156,367,1|rsfw7z,156,367,1|rsfw80,155,366,0|s1fyvz,155,366,0|s1fyw0,156,367,1|sbixjz,156,367,1|sbixk0,155,366,0|skj07z,155,366,0|skj080,156,367,1|su907z,156,367,1|su9080,155,366,0|t392vz,155,366,0|t392w0,156,367,1|tcz2vz,156,367,1|tcz2w0,155,366,0|tlz5jz,155,366,0|tlz5k0,156,367,1|tvp5jz,156,367,1|tvp5k0,155,366,0|u4p87z,155,366,0|u4p880,156,367,1|uef87z,156,367,1|uef880,155,366,0|unfavz,155,366,0|unfaw0,156,367,1|ux5avz,156,367,1|ux5aw0,155,366,0|v6ic7z,155,366,0|v6ic80,156,367,1|vg8c7z,156,367,1|vg8c80,155,366,0|vp8evz,155,366,0|vp8ew0,156,367,1|vyyevz,156,367,1|vyyew0,155,366,0|w7yhjz,155,366,0|w7yhk0,156,367,1|whohjz,156,367,1|whohk0,155,366,0|wqok7z,155,366,0|wqok80,156,367,1|x0ek7z,156,367,1|x0ek80,155,366,0|x9emvz,155,366,0|x9emw0,156,367,1|xj4mvz,156,367,1|xj4mw0,155,366,0|xs4pjz,155,366,0|xs4pk0,156,367,1|y1upjz,156,367,1|y1upk0,155,366,0|yb7qvz,155,366,0|yb7qw0,156,367,1|ykxqvz,156,367,1|ykxqw0,155,366,0|ytxtjz,155,366,0|ytxtk0,156,367,1|z3ntjz,156,367,1|z3ntk0,155,366,0|zcnw7z,155,366,0|zcnw80,156,367,1|zmdw7z,156,367,1|zmdw80,155,366,0|zvdyvz,155,366,0|zvdyw0,156,367,1|1053yvz,156,367,1|1053yw0,155,366,0|10e41jz,155,366,0|10e41k0,156,367,1|10nu1jz,156,367,1|10nu1k0,155,366,0|10x72vz,155,366,0|10x72w0,156,367,1|116x2vz,156,367,1|116x2w0,155,366,0|11fx5jz,155,366,0|11fx5k0,156,367,1|11pn5jz,156,367,1|11pn5k0,155,366,0|11yn87z,155,366,0|11yn880,156,367,1|128d87z,156,367,1|128d880,155,366,0|12hdavz,155,366,0|12hdaw0,156,367,1|12r3avz,156,367,1|12r3aw0,155,366,0|1303djz,155,366,0|1303dk0,156,367,1|139tdjz,156,367,1|139tdk0,155,366,0|13itg7z,155,366,0|13itg80,156,367,1|13sjg7z,156,367,1|13sjg80,155,366,0|141whjz,155,366,0|141whk0,156,367,1|14bmhjz,156,367,1|14bmhk0,155,366,0|14kmk7z,155,366,0|14kmk80,156,367,1|14uck7z,156,367,1|14uck80,155,366,0|153cmvz,155,366,0|153cmw0,156,367,1|15d2mvz,156,367,1|15d2mw0,155,366,0|15m2pjz,155,366,0|15m2pk0,156,367,1|15vspjz,156,367,1|15vspk0,155,366,0|164ss7z,155,366,0|164ss80,156,367,1|16eis7z,156,367,1|16eis80,155,366,0|16niuvz,155,366,0|16niuw0,156,367,1|16xltjz,156,367,1|16xltk0,155,366,0|176lw7z,155,366,0|176lw80,156,367,1|17gbw7z,156,367,1|17gbw80,155,366,0|17pbyvz,155,366,0|17pbyw0,156,367,1|17z1yvz,156,367,1|17z1yw0,155,366,0|18821jz,155,366,0|18821k0,156,367,1|18hs1jz,156,367,1|18hs1k0,155,366,0|18qs47z,155,366,0|18qs480,156,367,1|190i47z,156,367,1|190i480,155,366,0|199i6vz,155,366,0|199i6w0,156,367,1|19j86vz,156,367,1|19j86w0,155,366,0|19sl87z,155,366,0|19sl880,156,367,1|1a2b87z,156,367,1|1a2b880,155,366,0|1abbavz,155,366,0|1abbaw0,156,367,1|1al1avz,156,367,1|1al1aw0,155,366,0|1au1djz,155,366,0|1au1dk0,156,367,1|1b3rdjz,156,367,1|1b3rdk0,155,366,0|1bcrg7z,155,366,0|1bcrg80,156,367,1|1bmhg7z,156,367,1|1bmhg80,155,366,0|1bvhivz,155,366,0|1bvhiw0,156,367,1|1c57ivz,156,367,1|1c57iw0,155,366,0|1ce7ljz,155,366,0|1ce7lk0,156,367,1|1cnxljz,156,367,1|1cnxlk0,155,366,0|1cxamvz,155,366,0|1cxamw0,156,367,1|1d70mvz,156,367,1|1d70mw0,155,366,0|1dg0pjz,155,366,0|1dg0pk0,156,367,1|1dpqpjz,156,367,1|1dpqpk0,155,366,0|1dyqs7z,155,366,0|1dyqs80,156,367,1|1e8gs7z,156,367,1|1e8gs80,155,366,0|1ehguvz,155,366,0|1ehguw0,156,367,1|1er6uvz,156,367,1|1er6uw0,155,366,0|1f06xjz,155,366,0|1f06xk0,156,367,1|1f9wxjz,156,367,1|1f9wxk0,155,366,0|1fj9yvz,155,366,0|1fj9yw0,156,367,1|1fszyvz,156,367,1|1fszyw0,155,366,0|1g201jz,155,366,0|1g201k0,156,367,1|1gbq1jz,156,367,1|1gbq1k0,155,366,0|1gkq47z,155,366,0|1gkq480,156,367,1|1gug47z,156,367,1|1gug480,155,366,0|1h3g6vz,155,366,0|1h3g6w0,156,367,1|1hd66vz,156,367,1|1hd66w0,155,366,0|1hm69jz,155,366,0|1hm69k0,156,367,1|1hvw9jz,156,367,1|1hvw9k0,155,366,0|1i4wc7z,155,366,0|1i4wc80,156,367,1|1iemc7z,156,367,1|1iemc80,155,366,0|1inzdjz,155,366,0|1inzdk0,156,367,1|1ixpdjz,156,367,1|1ixpdk0,155,366,0|1j6pg7z,155,366,0|1j6pg80,156,367,1|1jgfg7z,156,367,1|1jgfg80,155,366,0|1jpfivz,155,366,0|1jpfiw0,156,367,1|1jz5ivz,156,367,1|1jz5iw0,155,366,0|1k85ljz,155,366,0|1k85lk0,156,367,1|1khvljz,156,367,1|1khvlk0,155,366,0|1kqvo7z,155,366,0|1kqvo80,156,367,1|1l0lo7z,156,367,1|1l0lo80,155,366,0|1l9lqvz,155,366,0|1l9lqw0,156,367,1|1ljopjz,156,367,1|1ljopk0,155,366,0|1lsos7z,155,366,0|1lsos80,156,367,1|1m2es7z,156,367,1|1m2es80,155,366,0|1mbeuvz,155,366,0|1mbeuw0,156,367,1|1ml4uvz,156,367,1|1ml4uw0,155,366,0|1mu4xjz,155,366,0|1mu4xk0,156,367,1|1n3uxjz,156,367,1|1n3uxk0,155,366,0|1ncv07z,155,366,0|1ncv080,156,367,1|1nml07z,156,367,1|1nml080,155,366,0|1nvl2vz,155,366,0|1nvl2w0,156,367,1|1o5b2vz,156,367,1|1o5b2w0,155,366,0|1oeo47z,155,366,0|1oeo480,156,367,1|1ooe47z,156,367,1|1ooe480,155,366,0|1oxe6vz,155,366,0|1oxe6w0,156,367,1|1p746vz,156,367,1|1p746w0,155,366,0|1pg49jz,155,366,0|1pg49k0,156,367,1|1ppu9jz,156,367,1|1ppu9k0,155,366,0|1pyuc7z,155,366,0|1pyuc80,156,367,1|1q8kc7z,156,367,1|1q8kc80,155,366,0|1qhkevz,155,366,0|1qhkew0,156,367,1|1qraevz,156,367,1|1qraew0,155,366,0|1r0ahjz,155,366,0|1r0ahk0,156,367,1|1ra0hjz,156,367,1|1ra0hk0,155,366,0|1rjdivz,155,366,0|1rjdiw0,156,367,1|1rt3ivz,156,367,1|1rt3iw0,155,366,0|1s23ljz,155,366,0|1s23lk0,156,367,1|1sbtljz,156,367,1|1sbtlk0,155,366,0|1skto7z,155,366,0|1skto80,156,367,1|1sujo7z,156,367,1|1sujo80,155,366,0|1t3jqvz,155,366,0|1t3jqw0,156,367,1|1td9qvz,156,367,1|1td9qw0,155,366,0|1tm9tjz,155,366,0|1tm9tk0,156,367,1|1tvztjz,156,367,1|1tvztk0,155,366,0|1u5cuvz,155,366,0|1u5cuw0,156,367,1|1uf2uvz,156,367,1|1uf2uw0,155,366,0|1uo2xjz,155,366,0|1uo2xk0,156,367,1|1uxsxjz,156,367,1|1uxsxk0,155,366,0|1v6t07z,155,366,0|1v6t080,156,367,1|1vgj07z,156,367,1|1vgj080,155,366,0|1vpj2vz,155,366,0|1vpj2w0,156,367,1|NaN,156,367,1",
        "Pacific/Chuuk|,0,185,0|-1ayytx5,0,185,0|-1ayytx4,88,186,0|-1354j8x,88,186,0|-1354j8w,89,187,0|NaN,89,187,0",
        "Pacific/Easter|,0,368,0|-15r0p2x,0,368,0|-15r0p2w,157,368,0|-jhfaex,157,368,0|-jhfaew,158,62,0|-lsvk1,158,62,0|-lsvk0,159,63,1|-e8qc1,159,63,1|-e8qc0,158,62,0|-1zww1,158,62,0|-1zww0,159,63,1|4hcbz,159,63,1|4hcc0,158,62,0|ekdrz,158,62,0|ekds0,159,63,1|mhhnz,159,63,1|mhho0,158,62,0|xagfz,158,62,0|xagg0,159,63,1|157kbz,159,63,1|157kc0,158,62,0|1gdhrz,158,62,0|1gdhs0,159,63,1|1nxmzz,159,63,1|1nxn00,158,62,0|1ydn3z,158,62,0|1ydn40,159,63,1|26npnz,159,63,1|26npo0,158,62,0|2htn3z,158,62,0|2htn40,159,63,1|2pdsbz,159,63,1|2pdsc0,158,62,0|30jprz,158,62,0|30jps0,159,63,1|38gtnz,159,63,1|38gto0,158,62,0|3j9sfz,158,62,0|3j9sg0,159,63,1|3r6wbz,159,63,1|3r6wc0,158,62,0|41zv3z,158,62,0|41zv40,159,63,1|49wyzz,159,63,1|49wz00,158,62,0|4l2wfz,158,62,0|4l2wg0,159,63,1|4sn1nz,159,63,1|4sn1o0,158,62,0|53sz3z,158,62,0|53sz40,159,63,1|5bd4bz,159,63,1|5bd4c0,158,62,0|5mj1rz,158,62,0|5mj1s0,159,63,1|5ug5nz,159,63,1|5ug5o0,158,62,0|6594fz,158,62,0|6594g0,159,63,1|6d68bz,159,63,1|6d68c0,159,63,0|6nz73z,159,63,0|6nz740,54,59,1|6vwazz,54,59,1|6vwb00,159,63,0|76p9rz,159,63,0|76p9s0,54,59,1|7emdnz,54,59,1|7emdo0,159,63,0|7psb3z,159,63,0|7psb40,54,59,1|7xcgbz,54,59,1|7xcgc0,159,63,0|88idrz,159,63,0|88ids0,54,59,1|8g2izz,54,59,1|8g2j00,159,63,0|8r8gfz,159,63,0|8r8gg0,54,59,1|90lezz,54,59,1|90lf00,159,63,0|99yj3z,159,63,0|99yj40,54,59,1|9hvmzz,54,59,1|9hvn00,159,63,0|9solrz,159,63,0|9sols0,54,59,1|a0lpnz,54,59,1|a0lpo0,159,63,0|abrn3z,159,63,0|abrn40,54,59,1|ajbsbz,54,59,1|ajbsc0,159,63,0|at1v3z,159,63,0|at1v40,54,59,1|b21uzz,54,59,1|b21v00,159,63,0|bd7sfz,159,63,0|bd7sg0,54,59,1|bl4wbz,54,59,1|bl4wc0,159,63,0|bvxv3z,159,63,0|bvxv40,54,59,1|c3uyzz,54,59,1|c3uz00,159,63,0|cenxrz,159,63,0|cenxs0,54,59,1|cml1nz,54,59,1|cml1o0,159,63,0|cxe0fz,159,63,0|cxe0g0,54,59,1|d5b4bz,54,59,1|d5b4c0,159,63,0|dgh1rz,159,63,0|dgh1s0,54,59,1|do16zz,54,59,1|do1700,159,63,0|dz74fz,159,63,0|dz74g0,54,59,1|e7u5nz,54,59,1|e7u5o0,159,63,0|ehx73z,159,63,0|ehx740,54,59,1|epuazz,54,59,1|epub00,159,63,0|ezxcfz,159,63,0|ezxcg0,54,59,1|f9n9nz,54,59,1|f9n9o0,159,63,0|fjdcfz,159,63,0|fjdcg0,54,59,1|fragbz,54,59,1|fragc0,159,63,0|g2gdrz,159,63,0|g2gds0,54,59,1|ga0izz,54,59,1|ga0j00,159,63,0|gl6gfz,159,63,0|gl6gg0,54,59,1|gsqlnz,54,59,1|gsqlo0,159,63,0|h3wj3z,159,63,0|h3wj40,54,59,1|hbgobz,54,59,1|hbgoc0,159,63,0|hmmlrz,159,63,0|hmmls0,54,59,1|hujpnz,54,59,1|hujpo0,159,63,0|i5cofz,159,63,0|i5cog0,54,59,1|id9sbz,54,59,1|id9sc0,159,63,0|io2r3z,159,63,0|io2r40,54,59,1|ivzuzz,54,59,1|ivzv00,159,63,0|j75sfz,159,63,0|j75sg0,54,59,1|jepxnz,54,59,1|jepxo0,159,63,0|jpvv3z,159,63,0|jpvv40,54,59,1|jyiwbz,54,59,1|jyiwc0,159,63,0|k8lxrz,159,63,0|k8lxs0,54,59,1|kgj1nz,54,59,1|kgj1o0,159,63,0|krc0fz,159,63,0|krc0g0,54,59,1|l0c0bz,54,59,1|l0c0c0,159,63,0|la233z,159,63,0|la2340,54,59,1|lkuwbz,54,59,1|lkuwc0,159,63,0|lq9f3z,159,63,0|lq9f40,54,59,1|m380bz,54,59,1|m380c0,159,63,0|m9pf3z,159,63,0|m9pf40,54,59,1|mly2zz,54,59,1|mly300,159,63,0|mssgfz,159,63,0|mssgg0,54,59,1|n4o5nz,54,59,1|n4o5o0,159,63,0|nbij3z,159,63,0|nbij40,54,59,1|o776zz,54,59,1|o77700,159,63,0|obvsfz,159,63,0|obvsg0,54,59,1|opx9nz,54,59,1|opx9o0,159,63,0|oulv3z,159,63,0|oulv40,54,59,1|p8ncbz,54,59,1|p8ncc0,159,63,0|pdbxrz,159,63,0|pdbxs0,54,59,1|ppklnz,54,59,1|ppklo0,159,63,0|pxhv3z,159,63,0|pxhv40,54,59,1|q8aobz,54,59,1|q8aoc0,159,63,0|qg7xrz,159,63,0|qg7xs0,54,59,1|qr0qzz,54,59,1|qr0r00,159,63,0|qyy0fz,159,63,0|qyy0g0,54,59,1|r9qtnz,54,59,1|r9qto0,159,63,0|ri11rz,159,63,0|ri11s0,54,59,1|rsgwbz,54,59,1|rsgwc0,159,63,0|s0e5rz,159,63,0|s0e5s0,54,59,1|sbjxnz,54,59,1|sbjxo0,159,63,0|sjh73z,159,63,0|sjh740,54,59,1|sua0bz,54,59,1|sua0c0,159,63,0|t279rz,159,63,0|t279s0,54,59,1|td02zz,54,59,1|td0300,159,63,0|tkxcfz,159,63,0|tkxcg0,54,59,1|tvq5nz,54,59,1|tvq5o0,159,63,0|u3nf3z,159,63,0|u3nf40,54,59,1|ueg8bz,54,59,1|ueg8c0,159,63,0|umdhrz,159,63,0|umdhs0,54,59,1|uxj9nz,54,59,1|uxj9o0,159,63,0|v53kfz,159,63,0|v53kg0,54,59,1|vg9cbz,54,59,1|vg9cc0,159,63,0|vo6lrz,159,63,0|vo6ls0,54,59,1|vyzezz,54,59,1|vyzf00,159,63,0|w6wofz,159,63,0|w6wog0,54,59,1|whphnz,54,59,1|whpho0,159,63,0|wpmr3z,159,63,0|wpmr40,54,59,1|x0fkbz,54,59,1|x0fkc0,159,63,0|x8ctrz,159,63,0|x8cts0,54,59,1|xj5mzz,54,59,1|xj5n00,159,63,0|xr2wfz,159,63,0|xr2wg0,54,59,1|y28obz,54,59,1|y28oc0,159,63,0|y9sz3z,159,63,0|y9sz40,54,59,1|ykyqzz,54,59,1|ykyr00,159,63,0|ysw0fz,159,63,0|ysw0g0,54,59,1|z3otnz,54,59,1|z3oto0,159,63,0|zbm33z,159,63,0|zbm340,54,59,1|zmewbz,54,59,1|zmewc0,159,63,0|zuc5rz,159,63,0|zuc5s0,54,59,1|1054yzz,54,59,1|1054z00,159,63,0|10d28fz,159,63,0|10d28g0,54,59,1|10o80bz,54,59,1|10o80c0,159,63,0|10vsb3z,159,63,0|10vsb40,54,59,1|116y2zz,54,59,1|116y300,159,63,0|11evcfz,159,63,0|11evcg0,54,59,1|11po5nz,54,59,1|11po5o0,159,63,0|11xlf3z,159,63,0|11xlf40,54,59,1|128e8bz,54,59,1|128e8c0,159,63,0|12gbhrz,159,63,0|12gbhs0,54,59,1|12r4azz,54,59,1|12r4b00,159,63,0|12z1kfz,159,63,0|12z1kg0,54,59,1|139udnz,54,59,1|139udo0,159,63,0|13hrn3z,159,63,0|13hrn40,54,59,1|13sxezz,54,59,1|13sxf00,159,63,0|140hprz,159,63,0|140hps0,54,59,1|14bnhnz,54,59,1|14bnho0,159,63,0|14jkr3z,159,63,0|14jkr40,54,59,1|14udkbz,54,59,1|14udkc0,159,63,0|152atrz,159,63,0|152ats0,54,59,1|15d3mzz,54,59,1|15d3n00,159,63,0|15l0wfz,159,63,0|15l0wg0,54,59,1|15vtpnz,54,59,1|15vtpo0,159,63,0|163qz3z,159,63,0|163qz40,54,59,1|16ejsbz,54,59,1|16ejsc0,159,63,0|16mh1rz,159,63,0|16mh1s0,54,59,1|16xmtnz,54,59,1|16xmto0,159,63,0|175k33z,159,63,0|175k340,54,59,1|17gcwbz,54,59,1|17gcwc0,159,63,0|17oa5rz,159,63,0|17oa5s0,54,59,1|17z2yzz,54,59,1|17z2z00,159,63,0|18708fz,159,63,0|18708g0,54,59,1|18ht1nz,54,59,1|18ht1o0,159,63,0|18pqb3z,159,63,0|18pqb40,54,59,1|190j4bz,54,59,1|190j4c0,159,63,0|198gdrz,159,63,0|198gds0,54,59,1|19jm5nz,54,59,1|19jm5o0,159,63,0|19r6gfz,159,63,0|19r6gg0,54,59,1|1a2c8bz,54,59,1|1a2c8c0,159,63,0|1aa9hrz,159,63,0|1aa9hs0,54,59,1|1al2azz,54,59,1|1al2b00,159,63,0|1aszkfz,159,63,0|1aszkg0,54,59,1|1b3sdnz,54,59,1|1b3sdo0,159,63,0|1bbpn3z,159,63,0|1bbpn40,54,59,1|1bmigbz,54,59,1|1bmigc0,159,63,0|1bufprz,159,63,0|1bufps0,54,59,1|1c58izz,54,59,1|1c58j00,159,63,0|1cd5sfz,159,63,0|1cd5sg0,54,59,1|1cobkbz,54,59,1|1cobkc0,159,63,0|1cvvv3z,159,63,0|1cvvv40,54,59,1|1d71mzz,54,59,1|1d71n00,159,63,0|1deywfz,159,63,0|1deywg0,54,59,1|1dprpnz,54,59,1|1dprpo0,159,63,0|1dxoz3z,159,63,0|1dxoz40,54,59,1|1e8hsbz,54,59,1|1e8hsc0,159,63,0|1egf1rz,159,63,0|1egf1s0,54,59,1|1er7uzz,54,59,1|1er7v00,159,63,0|1ez54fz,159,63,0|1ez54g0,54,59,1|1faawbz,54,59,1|1faawc0,159,63,0|1fhv73z,159,63,0|1fhv740,54,59,1|1ft0yzz,54,59,1|1ft0z00,159,63,0|1g0y8fz,159,63,0|1g0y8g0,54,59,1|1gbr1nz,54,59,1|1gbr1o0,159,63,0|1gjob3z,159,63,0|1gjob40,54,59,1|1guh4bz,54,59,1|1guh4c0,159,63,0|1h2edrz,159,63,0|1h2eds0,54,59,1|1hd76zz,54,59,1|1hd7700,159,63,0|1hl4gfz,159,63,0|1hl4gg0,54,59,1|1hvx9nz,54,59,1|1hvx9o0,159,63,0|1i3uj3z,159,63,0|1i3uj40,54,59,1|1if0azz,54,59,1|1if0b00,159,63,0|1imklrz,159,63,0|1imkls0,54,59,1|1ixqdnz,54,59,1|1ixqdo0,159,63,0|1j5nn3z,159,63,0|1j5nn40,54,59,1|1jgggbz,54,59,1|1jgggc0,159,63,0|1jodprz,159,63,0|1jodps0,54,59,1|1jz6izz,54,59,1|1jz6j00,159,63,0|1k73sfz,159,63,0|1k73sg0,54,59,1|1khwlnz,54,59,1|1khwlo0,159,63,0|1kptv3z,159,63,0|1kptv40,54,59,1|1l0mobz,54,59,1|1l0moc0,159,63,0|1l8jxrz,159,63,0|1l8jxs0,54,59,1|1ljppnz,54,59,1|1ljppo0,159,63,0|1lrmz3z,159,63,0|1lrmz40,54,59,1|1m2fsbz,54,59,1|1m2fsc0,159,63,0|1mad1rz,159,63,0|1mad1s0,54,59,1|1ml5uzz,54,59,1|1ml5v00,159,63,0|1mt34fz,159,63,0|1mt34g0,54,59,1|1n3vxnz,54,59,1|1n3vxo0,159,63,0|1nbt73z,159,63,0|1nbt740,54,59,1|1nmm0bz,54,59,1|1nmm0c0,159,63,0|1nuj9rz,159,63,0|1nuj9s0,54,59,1|1o5p1nz,54,59,1|1o5p1o0,159,63,0|1od9cfz,159,63,0|1od9cg0,54,59,1|1oof4bz,54,59,1|1oof4c0,159,63,0|1owcdrz,159,63,0|1owcds0,54,59,1|1p756zz,54,59,1|1p75700,159,63,0|1pf2gfz,159,63,0|1pf2gg0,54,59,1|1ppv9nz,54,59,1|1ppv9o0,159,63,0|1pxsj3z,159,63,0|1pxsj40,54,59,1|1q8lcbz,54,59,1|1q8lcc0,159,63,0|1qgilrz,159,63,0|1qgils0,54,59,1|1qrbezz,54,59,1|1qrbf00,159,63,0|1qz8ofz,159,63,0|1qz8og0,54,59,1|1raegbz,54,59,1|1raegc0,159,63,0|1rhyr3z,159,63,0|1rhyr40,54,59,1|1rt4izz,54,59,1|1rt4j00,159,63,0|1s11sfz,159,63,0|1s11sg0,54,59,1|1sbulnz,54,59,1|1sbulo0,159,63,0|1sjrv3z,159,63,0|1sjrv40,54,59,1|1sukobz,54,59,1|1sukoc0,159,63,0|1t2hxrz,159,63,0|1t2hxs0,54,59,1|1tdaqzz,54,59,1|1tdar00,159,63,0|1tl80fz,159,63,0|1tl80g0,54,59,1|1twdsbz,54,59,1|1twdsc0,159,63,0|1u3y33z,159,63,0|1u3y340,54,59,1|1uf3uzz,54,59,1|1uf3v00,159,63,0|1un14fz,159,63,0|1un14g0,54,59,1|1uxtxnz,54,59,1|1uxtxo0,159,63,0|1v5r73z,159,63,0|1v5r740,54,59,1|1vgk0bz,54,59,1|1vgk0c0,159,63,0|1voh9rz,159,63,0|1voh9s0,54,59,1|NaN,54,59,1",
        "Pacific/Efate|,0,369,0|-u964i5,0,369,0|-u964i4,85,182,0|22nynz,85,182,0|22nyo0,99,192,1|27pfzz,99,192,1|27pg00,85,182,0|75y6rz,85,182,0|75y6s0,99,192,1|7fb5bz,99,192,1|7fb5c0,85,182,0|7oo9fz,85,182,0|7oo9g0,99,192,1|7y17zz,99,192,1|7y1800,85,182,0|87rarz,85,182,0|87ras0,99,192,1|8granz,99,192,1|8grao0,85,182,0|8qhdfz,85,182,0|8qhdg0,99,192,1|8zubzz,99,192,1|8zuc00,85,182,0|997g3z,85,182,0|997g40,99,192,1|9ikenz,99,192,1|9ikeo0,85,182,0|9rxirz,85,182,0|9rxis0,99,192,1|a1ahbz,99,192,1|a1ahc0,85,182,0|aanlfz,85,182,0|aanlg0,99,192,1|ak0jzz,99,192,1|ak0k00,85,182,0|atdo3z,85,182,0|atdo40,99,192,1|b2qmnz,99,192,1|b2qmo0,85,182,0|bcgpfz,85,182,0|bcgpg0,99,192,1|bikzzz,99,192,1|bil000,85,182,0|bwmmrz,85,182,0|bwmms0,99,192,1|c1b2nz,99,192,1|c1b2o0,85,182,0|NaN,85,182,0",
        "Pacific/Fakaofo|,0,370,0|-100dhmh,0,370,0|-100dhmg,152,33,0|lx0jvz,152,33,0|lx0jw0,100,193,0|NaN,100,193,0",
        "Pacific/Fiji|,0,371,0|-sa2x4x,0,371,0|-sa2x4w,99,192,0|f1p2vz,99,192,0|f1p2w0,100,193,1|f7tg7z,100,193,1|f7tg80,99,192,0|fks47z,99,192,0|fks480,100,193,1|fqjivz,100,193,1|fqjiw0,99,192,0|ktto7z,99,192,0|ktto80,100,193,1|kzy1jz,100,193,1|kzy1k0,99,192,0|laqxjz,99,192,0|laqxk0,100,193,1|lhl87z,100,193,1|lhl880,99,192,0|lth07z,99,192,0|lth080,100,193,1|ly5ivz,100,193,1|ly5iw0,99,192,0|mc72vz,99,192,0|mc72w0,100,193,1|mgvljz,100,193,1|mgvlk0,99,192,0|mva47z,99,192,0|mva480,100,193,1|mzllfz,100,193,1|mzllg0,99,192,0|ned5jz,99,192,0|ned5k0,100,193,1|nibqvz,100,193,1|nibqw0,99,192,0|nx387z,99,192,0|nx3880,100,193,1|o11tjz,100,193,1|o11tk0,99,192,0|og69jz,99,192,0|og69k0,100,193,1|ojrw7z,100,193,1|ojrw80,99,192,0|oywc7z,99,192,0|oywc80,100,193,1|p2hyvz,100,193,1|p2hyw0,99,192,0|phmevz,99,192,0|phmew0,100,193,1|pl81jz,100,193,1|pl81k0,99,192,0|q0pg7z,99,192,0|q0pg80,100,193,1|q3y47z,100,193,1|q3y480,99,192,0|qllavz,99,192,0|qllaw0,100,193,1|qn15jz,100,193,1|qn15k0,99,192,0|NaN,99,192,0",
        "Pacific/Funafuti|,0,372,0|-100f9dh,0,372,0|-100f9dg,99,192,0|NaN,99,192,0",
        "Pacific/Galapagos|,0,373,0|-kcr62p,0,373,0|-kcr62o,54,59,0|8cmlvz,54,59,0|8cmlw0,159,63,0|byewnz,159,63,0|byewo0,54,59,1|c1ylvz,54,59,1|c1ylw0,159,63,0|NaN,159,63,0",
        "Pacific/Gambier|,0,374,0|-tvndod,0,374,0|-tvndoc,160,35,0|NaN,160,35,0",
        "Pacific/Guadalcanal|,0,375,0|-tvowad,0,375,0|-tvowac,85,182,0|NaN,85,182,0",
        "Pacific/Guam|,0,376,0|-1t8j1h1,0,376,0|-1t8j1h0,0,377,0|-100f451,0,377,0|-100f450,161,187,0|-en8eg1,161,187,0|-en8eg0,105,216,0|-d9n501,105,216,0|-d9n500,161,187,0|-5hlkw1,161,187,0|-5hlkw0,162,182,1|-4nnvo1,162,182,1|-4nnvo0,161,187,0|-17w8w1,161,187,0|-17w8w0,162,182,1|-hih6d,162,182,1|-hih6c,161,187,0|-9y0w1,161,187,0|-9y0w0,162,182,1|-6ch01,162,182,1|-6ch00,161,187,0|5wcfz,161,187,0|5wcg0,162,182,1|cqkbz,162,182,1|cqkc0,161,187,0|omf3z,161,187,0|omf40,162,182,1|vgmzz,162,182,1|vgn00,161,187,0|22bb3z,161,187,0|22bb40,162,182,1|25wuzz,162,182,1|25wv00,161,187,0|3c75rz,161,187,0|3c75s0,162,182,1|3gq1pn,162,182,1|3gq1po,161,187,0|3tbtrz,161,187,0|3tbts0,162,182,1|3zt2zz,162,182,1|3zt300,161,187,0|g5z2vz,161,187,0|g5z2w0,163,187,0|NaN,163,187,0",
        "Pacific/Honolulu|,0,378,0|-12lnw3n,0,378,0|-12lnw3m,29,379,0|-j50la1,29,379,0|-j50la0,30,380,1|-j3x0a1,30,380,1|-j3x0a0,29,379,0|-ek1pa1,29,379,0|-ek1pa0,164,380,1|-cq2tg1,164,380,1|-cq2tg0,165,380,1|-cnoo21,165,380,1|-cnoo20,29,379,0|-brzum1,29,379,0|-brzum0,29,34,0|NaN,29,34,0",
        "Pacific/Kanton|,59,1,0|-gvk801,59,1,0|-gvk800,166,381,0|535inz,166,381,0|535io0,152,33,0|d1o97z,152,33,0|d1o980,100,193,0|NaN,100,193,0",
        "Pacific/Kiritimati|,0,382,0|-100dk75,0,382,0|-100dk74,167,383,0|535eyn,167,383,0|535eyo,153,34,0|d1o6fz,153,34,0|d1o6g0,101,199,0|NaN,101,199,0",
        "Pacific/Kosrae|,0,384,0|-1t8j4ul,0,384,0|-1t8j4uk,0,385,0|-100f7il,0,385,0|-100f7ik,85,182,0|-su52k1,85,182,0|-su52k0,105,216,0|-qknl01,105,216,0|-qknl00,85,182,0|-h817w1,85,182,0|-h817w0,89,187,0|-f08x41,89,187,0|-f08x40,105,216,0|-cqtd01,105,216,0|-cqtd00,85,182,0|-4r7w1,85,182,0|-4r7w0,99,192,0|f4tvzz,99,192,0|f4tw00,85,182,0|NaN,85,182,0",
        "Pacific/Kwajalein|,0,386,0|-100f8bl,0,386,0|-100f8bk,85,182,0|-h817w1,85,182,0|-h817w0,89,187,0|-f08x41,89,187,0|-f08x40,105,216,0|-dip2c1,105,216,0|-dip2c0,85,182,0|-4r7w1,85,182,0|-4r7w0,166,381,0|cc3ynz,166,381,0|cc3yo0,99,192,0|NaN,99,192,0",
        "Pacific/Majuro|,0,372,0|-100f9dh,0,372,0|-100f9dg,99,192,0|NaN,99,192,0",
        "Pacific/Marquesas|,0,387,0|-tvncu1,0,387,0|-tvncu0,168,380,0|NaN,168,380,0",
        "Pacific/Midway|,0,388,0|-14fxxq1,0,388,0|-14fxxq0,0,389,0|-usij21,0,389,0|-usij20,169,33,0|NaN,169,33,0",
        "Pacific/Nauru|,0,390,0|-pjxiwt,0,390,0|-pjxiws,140,190,0|-e9rby1,140,190,0|-e9rby0,105,216,0|-couzo1,105,216,0|-couzo0,140,190,0|4r4dlz,140,190,0|4r4dm0,99,192,0|NaN,99,192,0",
        "Pacific/Niue|,0,391,0|-8zbv79,0,391,0|-8zbv78,170,392,0|-2vdcip,170,392,0|-2vdcio,152,33,0|NaN,152,33,0",
        "Pacific/Norfolk|,0,393,0|-100f8ft,0,393,0|-100f8fs,171,394,0|-9x0ps1,171,394,0|-9x0ps0,140,190,0|2iiixz,140,190,0|2iiiy0,172,191,1|2ozuxz,172,191,1|2ozuy0,140,190,0|nvnexz,140,190,0|nvney0,85,182,0|pywpnz,85,182,0|pywpo0,99,192,1|q89qzz,99,192,1|q89r00,85,182,0|qhmsbz,85,182,0|qhmsc0,99,192,1|qqztnz,99,192,1|qqzto0,85,182,0|r0cuzz,85,182,0|r0cv00,99,192,1|r9pwbz,99,192,1|r9pwc0,85,182,0|rj2xnz,85,182,0|rj2xo0,99,192,1|rsfyzz,99,192,1|rsfz00,85,182,0|s1t0bz,85,182,0|s1t0c0,99,192,1|sbj0bz,99,192,1|sbj0c0,85,182,0|skw1nz,85,182,0|skw1o0,99,192,1|su92zz,99,192,1|su9300,85,182,0|t3m4bz,85,182,0|t3m4c0,99,192,1|tcz5nz,99,192,1|tcz5o0,85,182,0|tmc6zz,85,182,0|tmc700,99,192,1|tvp8bz,99,192,1|tvp8c0,85,182,0|u529nz,85,182,0|u529o0,99,192,1|uefazz,99,192,1|uefb00,85,182,0|unscbz,85,182,0|unscc0,99,192,1|ux5dnz,99,192,1|ux5do0,85,182,0|v6vdnz,85,182,0|v6vdo0,99,192,1|vg8ezz,99,192,1|vg8f00,85,182,0|vplgbz,85,182,0|vplgc0,99,192,1|vyyhnz,99,192,1|vyyho0,85,182,0|w8bizz,85,182,0|w8bj00,99,192,1|whokbz,99,192,1|whokc0,85,182,0|wr1lnz,85,182,0|wr1lo0,99,192,1|x0emzz,99,192,1|x0en00,85,182,0|x9robz,85,182,0|x9roc0,99,192,1|xj4pnz,99,192,1|xj4po0,85,182,0|xshqzz,85,182,0|xshr00,99,192,1|y1usbz,99,192,1|y1usc0,85,182,0|ybksbz,85,182,0|ybksc0,99,192,1|ykxtnz,99,192,1|ykxto0,85,182,0|yuauzz,85,182,0|yuav00,99,192,1|z3nwbz,99,192,1|z3nwc0,85,182,0|zd0xnz,85,182,0|zd0xo0,99,192,1|zmdyzz,99,192,1|zmdz00,85,182,0|zvr0bz,85,182,0|zvr0c0,99,192,1|10541nz,99,192,1|10541o0,85,182,0|10eh2zz,85,182,0|10eh300,99,192,1|10nu4bz,99,192,1|10nu4c0,85,182,0|10xk4bz,85,182,0|10xk4c0,99,192,1|116x5nz,99,192,1|116x5o0,85,182,0|11ga6zz,85,182,0|11ga700,99,192,1|11pn8bz,99,192,1|11pn8c0,85,182,0|11z09nz,85,182,0|11z09o0,99,192,1|128dazz,99,192,1|128db00,85,182,0|12hqcbz,85,182,0|12hqcc0,99,192,1|12r3dnz,99,192,1|12r3do0,85,182,0|130gezz,85,182,0|130gf00,99,192,1|139tgbz,99,192,1|139tgc0,85,182,0|13j6hnz,85,182,0|13j6ho0,99,192,1|13sjizz,99,192,1|13sjj00,85,182,0|1429izz,85,182,0|1429j00,99,192,1|14bmkbz,99,192,1|14bmkc0,85,182,0|14kzlnz,85,182,0|14kzlo0,99,192,1|14ucmzz,99,192,1|14ucn00,85,182,0|153pobz,85,182,0|153poc0,99,192,1|15d2pnz,99,192,1|15d2po0,85,182,0|15mfqzz,85,182,0|15mfr00,99,192,1|15vssbz,99,192,1|15vssc0,85,182,0|1655tnz,85,182,0|1655to0,99,192,1|16eiuzz,99,192,1|16eiv00,85,182,0|16nvwbz,85,182,0|16nvwc0,99,192,1|16xlwbz,99,192,1|16xlwc0,85,182,0|176yxnz,85,182,0|176yxo0,99,192,1|17gbyzz,99,192,1|17gbz00,85,182,0|17pp0bz,85,182,0|17pp0c0,99,192,1|17z21nz,99,192,1|17z21o0,85,182,0|188f2zz,85,182,0|188f300,99,192,1|18hs4bz,99,192,1|18hs4c0,85,182,0|18r55nz,85,182,0|18r55o0,99,192,1|190i6zz,99,192,1|190i700,85,182,0|199v8bz,85,182,0|199v8c0,99,192,1|19j89nz,99,192,1|19j89o0,85,182,0|19sy9nz,85,182,0|19sy9o0,99,192,1|1a2bazz,99,192,1|1a2bb00,85,182,0|1abocbz,85,182,0|1abocc0,99,192,1|1al1dnz,99,192,1|1al1do0,85,182,0|1aueezz,85,182,0|1auef00,99,192,1|1b3rgbz,99,192,1|1b3rgc0,85,182,0|1bd4hnz,85,182,0|1bd4ho0,99,192,1|1bmhizz,99,192,1|1bmhj00,85,182,0|1bvukbz,85,182,0|1bvukc0,99,192,1|1c57lnz,99,192,1|1c57lo0,85,182,0|1cekmzz,85,182,0|1cekn00,99,192,1|1cnxobz,99,192,1|1cnxoc0,85,182,0|1cxnobz,85,182,0|1cxnoc0,99,192,1|1d70pnz,99,192,1|1d70po0,85,182,0|1dgdqzz,85,182,0|1dgdr00,99,192,1|1dpqsbz,99,192,1|1dpqsc0,85,182,0|1dz3tnz,85,182,0|1dz3to0,99,192,1|1e8guzz,99,192,1|1e8gv00,85,182,0|1ehtwbz,85,182,0|1ehtwc0,99,192,1|1er6xnz,99,192,1|1er6xo0,85,182,0|1f0jyzz,85,182,0|1f0jz00,99,192,1|1f9x0bz,99,192,1|1f9x0c0,85,182,0|1fjn0bz,85,182,0|1fjn0c0,99,192,1|1ft01nz,99,192,1|1ft01o0,85,182,0|1g2d2zz,85,182,0|1g2d300,99,192,1|1gbq4bz,99,192,1|1gbq4c0,85,182,0|1gl35nz,85,182,0|1gl35o0,99,192,1|1gug6zz,99,192,1|1gug700,85,182,0|1h3t8bz,85,182,0|1h3t8c0,99,192,1|1hd69nz,99,192,1|1hd69o0,85,182,0|1hmjazz,85,182,0|1hmjb00,99,192,1|1hvwcbz,99,192,1|1hvwcc0,85,182,0|1i59dnz,85,182,0|1i59do0,99,192,1|1iemezz,99,192,1|1iemf00,85,182,0|1iocezz,85,182,0|1iocf00,99,192,1|1ixpgbz,99,192,1|1ixpgc0,85,182,0|1j72hnz,85,182,0|1j72ho0,99,192,1|1jgfizz,99,192,1|1jgfj00,85,182,0|1jpskbz,85,182,0|1jpskc0,99,192,1|1jz5lnz,99,192,1|1jz5lo0,85,182,0|1k8imzz,85,182,0|1k8in00,99,192,1|1khvobz,99,192,1|1khvoc0,85,182,0|1kr8pnz,85,182,0|1kr8po0,99,192,1|1l0lqzz,99,192,1|1l0lr00,85,182,0|1l9ysbz,85,182,0|1l9ysc0,99,192,1|1ljosbz,99,192,1|1ljosc0,85,182,0|1lt1tnz,85,182,0|1lt1to0,99,192,1|1m2euzz,99,192,1|1m2ev00,85,182,0|1mbrwbz,85,182,0|1mbrwc0,99,192,1|1ml4xnz,99,192,1|1ml4xo0,85,182,0|1muhyzz,85,182,0|1muhz00,99,192,1|1n3v0bz,99,192,1|1n3v0c0,85,182,0|1nd81nz,85,182,0|1nd81o0,99,192,1|1nml2zz,99,192,1|1nml300,85,182,0|1nvy4bz,85,182,0|1nvy4c0,99,192,1|1o5b5nz,99,192,1|1o5b5o0,85,182,0|1of15nz,85,182,0|1of15o0,99,192,1|1ooe6zz,99,192,1|1ooe700,85,182,0|1oxr8bz,85,182,0|1oxr8c0,99,192,1|1p749nz,99,192,1|1p749o0,85,182,0|1pghazz,85,182,0|1pghb00,99,192,1|1ppucbz,99,192,1|1ppucc0,85,182,0|1pz7dnz,85,182,0|1pz7do0,99,192,1|1q8kezz,99,192,1|1q8kf00,85,182,0|1qhxgbz,85,182,0|1qhxgc0,99,192,1|1qrahnz,99,192,1|1qraho0,85,182,0|1r0nizz,85,182,0|1r0nj00,99,192,1|1ra0kbz,99,192,1|1ra0kc0,85,182,0|1rjqkbz,85,182,0|1rjqkc0,99,192,1|1rt3lnz,99,192,1|1rt3lo0,85,182,0|1s2gmzz,85,182,0|1s2gn00,99,192,1|1sbtobz,99,192,1|1sbtoc0,85,182,0|1sl6pnz,85,182,0|1sl6po0,99,192,1|1sujqzz,99,192,1|1sujr00,85,182,0|1t3wsbz,85,182,0|1t3wsc0,99,192,1|1td9tnz,99,192,1|1td9to0,85,182,0|1tmmuzz,85,182,0|1tmmv00,99,192,1|1tvzwbz,99,192,1|1tvzwc0,85,182,0|1u5pwbz,85,182,0|1u5pwc0,99,192,1|1uf2xnz,99,192,1|1uf2xo0,85,182,0|1uofyzz,85,182,0|1uofz00,99,192,1|1uxt0bz,99,192,1|1uxt0c0,85,182,0|1v761nz,85,182,0|1v761o0,99,192,1|1vgj2zz,99,192,1|1vgj300,85,182,0|1vpw4bz,85,182,0|1vpw4c0,99,192,1|NaN,99,192,1",
        "Pacific/Noumea|,0,395,0|-u9645p,0,395,0|-u9645o,85,182,0|44uerz,85,182,0|44ues0,99,192,1|497qnz,99,192,1|497qo0,85,182,0|4nkhfz,85,182,0|4nkhg0,99,192,1|4rznzz,99,192,1|4rzo00,85,182,0|e1ouzz,85,182,0|e1ov00,99,192,1|e6ddnz,99,192,1|e6ddo0,85,182,0|NaN,85,182,0",
        "Pacific/Pago_Pago|,0,388,0|-14fxxq1,0,388,0|-14fxxq0,0,389,0|-usij21,0,389,0|-usij20,169,33,0|NaN,169,33,0",
        "Pacific/Palau|,0,396,0|-1t8izkl,0,396,0|-1t8izkk,0,397,0|-100f28l,0,397,0|-100f28k,105,216,0|NaN,105,216,0",
        "Pacific/Pitcairn|,0,398,0|-100dp8t,0,398,0|-100dp8s,173,399,0|es2cxz,173,399,0|es2cy0,174,38,0|NaN,174,38,0",
        "Pacific/Pohnpei|,0,375,0|-tvowad,0,375,0|-tvowac,85,182,0|NaN,85,182,0",
        "Pacific/Port_Moresby|,0,185,0|-1ayytx5,0,185,0|-1ayytx4,88,186,0|-1354j8x,88,186,0|-1354j8w,89,187,0|NaN,89,187,0",
        "Pacific/Rarotonga|,0,400,0|-10jifqx,0,400,0|-10jifqw,0,401,0|-8zbx2x,0,401,0|-8zbx2w,175,379,0|4mj95z,175,379,0|4mj960,168,380,1|4sal1z,168,380,1|4sal20,153,34,0|54jd3z,153,34,0|54jd40,168,380,1|5b0npz,168,380,1|5b0nq0,153,34,0|5n9frz,153,34,0|5n9fs0,168,380,1|5tqqdz,168,380,1|5tqqe0,153,34,0|65zifz,153,34,0|65zig0,168,380,1|6ctrpz,168,380,1|6ctrq0,153,34,0|6p2jrz,153,34,0|6p2js0,168,380,1|6vjudz,168,380,1|6vjue0,153,34,0|77smfz,153,34,0|77smg0,168,380,1|7e9x1z,168,380,1|7e9x20,153,34,0|7qip3z,153,34,0|7qip40,168,380,1|7wzzpz,168,380,1|7wzzq0,153,34,0|898rrz,153,34,0|898rs0,168,380,1|8fq2dz,168,380,1|8fq2e0,153,34,0|8ryufz,153,34,0|8ryug0,168,380,1|8yg51z,168,380,1|8yg520,153,34,0|9aox3z,153,34,0|9aox40,168,380,1|9hj6dz,168,380,1|9hj6e0,153,34,0|9tryfz,153,34,0|9tryg0,168,380,1|a0991z,168,380,1|a09920,153,34,0|aci13z,153,34,0|aci140,168,380,1|aizbpz,168,380,1|aizbq0,153,34,0|av83rz,153,34,0|av83s0,168,380,1|b1pedz,168,380,1|b1pee0,153,34,0|NaN,153,34,0",
        "Pacific/Saipan|,0,376,0|-1t8j1h1,0,376,0|-1t8j1h0,0,377,0|-100f451,0,377,0|-100f450,161,187,0|-en8eg1,161,187,0|-en8eg0,105,216,0|-d9n501,105,216,0|-d9n500,161,187,0|-5hlkw1,161,187,0|-5hlkw0,162,182,1|-4nnvo1,162,182,1|-4nnvo0,161,187,0|-17w8w1,161,187,0|-17w8w0,162,182,1|-hih6d,162,182,1|-hih6c,161,187,0|-9y0w1,161,187,0|-9y0w0,162,182,1|-6ch01,162,182,1|-6ch00,161,187,0|5wcfz,161,187,0|5wcg0,162,182,1|cqkbz,162,182,1|cqkc0,161,187,0|omf3z,161,187,0|omf40,162,182,1|vgmzz,162,182,1|vgn00,161,187,0|22bb3z,161,187,0|22bb40,162,182,1|25wuzz,162,182,1|25wv00,161,187,0|3c75rz,161,187,0|3c75s0,162,182,1|3gq1pn,162,182,1|3gq1po,161,187,0|3tbtrz,161,187,0|3tbts0,162,182,1|3zt2zz,162,182,1|3zt300,161,187,0|g5z2vz,161,187,0|g5z2w0,163,187,0|NaN,163,187,0",
        "Pacific/Tahiti|,0,402,0|-tvnayx,0,402,0|-tvnayw,153,34,0|NaN,153,34,0",
        "Pacific/Tarawa|,0,372,0|-100f9dh,0,372,0|-100f9dg,99,192,0|NaN,99,192,0",
        "Pacific/Tongatapu|,0,403,0|-corjk1,0,403,0|-corjk0,176,404,0|-4p3zld,176,404,0|-4p3zlc,100,193,0|fj6mrz,100,193,0|fj6ms0,101,199,1|frmc3z,101,199,1|frmc40,100,193,0|g3i43z,100,193,0|g3i440,101,199,1|g7tlbz,101,199,1|g7tlc0,100,193,0|gm86rz,100,193,0|gm86s0,101,199,1|gqjnzz,101,199,1|gqjo00,100,193,0|og66rz,100,193,0|og66s0,101,199,1|ojrtfz,101,199,1|ojrtg0,100,193,0|NaN,100,193,0",
        "Pacific/Wake|,0,372,0|-100f9dh,0,372,0|-100f9dg,99,192,0|NaN,99,192,0",
        "Pacific/Wallis|,0,372,0|-100f9dh,0,372,0|-100f9dg,99,192,0|NaN,99,192,0"
      ]
    });
  }
  if (Intl.DateTimeFormat && typeof Intl.DateTimeFormat.__addLocaleData === "function") {
    Intl.DateTimeFormat.__addLocaleData(
      {
        "data": {
          "am": "a.m.",
          "pm": "p.m.",
          "weekday": {
            "narrow": [
              "Z",
              "M",
              "D",
              "W",
              "D",
              "V",
              "Z"
            ],
            "short": [
              "zo",
              "ma",
              "di",
              "wo",
              "do",
              "vr",
              "za"
            ],
            "long": [
              "zondag",
              "maandag",
              "dinsdag",
              "woensdag",
              "donderdag",
              "vrijdag",
              "zaterdag"
            ]
          },
          "era": {
            "narrow": {
              "BC": "v.C.",
              "AD": "n.C."
            },
            "short": {
              "BC": "v.Chr.",
              "AD": "n.Chr."
            },
            "long": {
              "BC": "voor Christus",
              "AD": "na Christus"
            }
          },
          "month": {
            "narrow": [
              "J",
              "F",
              "M",
              "A",
              "M",
              "J",
              "J",
              "A",
              "S",
              "O",
              "N",
              "D"
            ],
            "short": [
              "jan",
              "feb",
              "mrt",
              "apr",
              "mei",
              "jun",
              "jul",
              "aug",
              "sep",
              "okt",
              "nov",
              "dec"
            ],
            "long": [
              "januari",
              "februari",
              "maart",
              "april",
              "mei",
              "juni",
              "juli",
              "augustus",
              "september",
              "oktober",
              "november",
              "december"
            ]
          },
          "timeZoneName": {
            "America/Rio_Branco": {
              "long": [
                "Acre-standaardtijd",
                "Acre-zomertijd"
              ]
            },
            "Asia/Kabul": {
              "long": [
                "Afghaanse tijd",
                "Afghaanse tijd"
              ]
            },
            "Africa/Maputo": {
              "long": [
                "Centraal-Afrikaanse tijd",
                "Centraal-Afrikaanse tijd"
              ]
            },
            "Africa/Bujumbura": {
              "long": [
                "Centraal-Afrikaanse tijd",
                "Centraal-Afrikaanse tijd"
              ]
            },
            "Africa/Gaborone": {
              "long": [
                "Centraal-Afrikaanse tijd",
                "Centraal-Afrikaanse tijd"
              ]
            },
            "Africa/Lubumbashi": {
              "long": [
                "Centraal-Afrikaanse tijd",
                "Centraal-Afrikaanse tijd"
              ]
            },
            "Africa/Blantyre": {
              "long": [
                "Centraal-Afrikaanse tijd",
                "Centraal-Afrikaanse tijd"
              ]
            },
            "Africa/Kigali": {
              "long": [
                "Centraal-Afrikaanse tijd",
                "Centraal-Afrikaanse tijd"
              ]
            },
            "Africa/Lusaka": {
              "long": [
                "Centraal-Afrikaanse tijd",
                "Centraal-Afrikaanse tijd"
              ]
            },
            "Africa/Harare": {
              "long": [
                "Centraal-Afrikaanse tijd",
                "Centraal-Afrikaanse tijd"
              ]
            },
            "Africa/Nairobi": {
              "long": [
                "Oost-Afrikaanse tijd",
                "Oost-Afrikaanse tijd"
              ]
            },
            "Africa/Djibouti": {
              "long": [
                "Oost-Afrikaanse tijd",
                "Oost-Afrikaanse tijd"
              ]
            },
            "Africa/Asmera": {
              "long": [
                "Oost-Afrikaanse tijd",
                "Oost-Afrikaanse tijd"
              ]
            },
            "Africa/Addis_Ababa": {
              "long": [
                "Oost-Afrikaanse tijd",
                "Oost-Afrikaanse tijd"
              ]
            },
            "Indian/Comoro": {
              "long": [
                "Oost-Afrikaanse tijd",
                "Oost-Afrikaanse tijd"
              ]
            },
            "Indian/Antananarivo": {
              "long": [
                "Oost-Afrikaanse tijd",
                "Oost-Afrikaanse tijd"
              ]
            },
            "Africa/Mogadishu": {
              "long": [
                "Oost-Afrikaanse tijd",
                "Oost-Afrikaanse tijd"
              ]
            },
            "Africa/Dar_es_Salaam": {
              "long": [
                "Oost-Afrikaanse tijd",
                "Oost-Afrikaanse tijd"
              ]
            },
            "Africa/Kampala": {
              "long": [
                "Oost-Afrikaanse tijd",
                "Oost-Afrikaanse tijd"
              ]
            },
            "Indian/Mayotte": {
              "long": [
                "Oost-Afrikaanse tijd",
                "Oost-Afrikaanse tijd"
              ]
            },
            "Africa/Johannesburg": {
              "long": [
                "Zuid-Afrikaanse tijd",
                "Zuid-Afrikaanse tijd"
              ]
            },
            "Africa/Maseru": {
              "long": [
                "Zuid-Afrikaanse tijd",
                "Zuid-Afrikaanse tijd"
              ]
            },
            "Africa/Mbabane": {
              "long": [
                "Zuid-Afrikaanse tijd",
                "Zuid-Afrikaanse tijd"
              ]
            },
            "Africa/Lagos": {
              "long": [
                "West-Afrikaanse standaardtijd",
                "West-Afrikaanse zomertijd"
              ]
            },
            "Africa/Luanda": {
              "long": [
                "West-Afrikaanse standaardtijd",
                "West-Afrikaanse zomertijd"
              ]
            },
            "Africa/Porto-Novo": {
              "long": [
                "West-Afrikaanse standaardtijd",
                "West-Afrikaanse zomertijd"
              ]
            },
            "Africa/Kinshasa": {
              "long": [
                "West-Afrikaanse standaardtijd",
                "West-Afrikaanse zomertijd"
              ]
            },
            "Africa/Bangui": {
              "long": [
                "West-Afrikaanse standaardtijd",
                "West-Afrikaanse zomertijd"
              ]
            },
            "Africa/Brazzaville": {
              "long": [
                "West-Afrikaanse standaardtijd",
                "West-Afrikaanse zomertijd"
              ]
            },
            "Africa/Douala": {
              "long": [
                "West-Afrikaanse standaardtijd",
                "West-Afrikaanse zomertijd"
              ]
            },
            "Africa/Libreville": {
              "long": [
                "West-Afrikaanse standaardtijd",
                "West-Afrikaanse zomertijd"
              ]
            },
            "Africa/Malabo": {
              "long": [
                "West-Afrikaanse standaardtijd",
                "West-Afrikaanse zomertijd"
              ]
            },
            "Africa/Niamey": {
              "long": [
                "West-Afrikaanse standaardtijd",
                "West-Afrikaanse zomertijd"
              ]
            },
            "Africa/Ndjamena": {
              "long": [
                "West-Afrikaanse standaardtijd",
                "West-Afrikaanse zomertijd"
              ]
            },
            "Asia/Aqtobe": {
              "long": [
                "West-Kazachse tijd",
                "West-Kazachse tijd"
              ]
            },
            "America/Juneau": {
              "long": [
                "Alaska-standaardtijd",
                "Alaska-zomertijd"
              ],
              "short": [
                "AKST",
                "AKDT"
              ]
            },
            "Asia/Almaty": {
              "long": [
                "Oost-Kazachse tijd",
                "Oost-Kazachse tijd"
              ]
            },
            "America/Manaus": {
              "long": [
                "Amazone-standaardtijd",
                "Amazone-zomertijd"
              ]
            },
            "America/Chicago": {
              "long": [
                "Central-standaardtijd",
                "Central-zomertijd"
              ],
              "short": [
                "CST",
                "CDT"
              ]
            },
            "America/Belize": {
              "long": [
                "Central-standaardtijd",
                "Central-zomertijd"
              ],
              "short": [
                "CST",
                "CDT"
              ]
            },
            "America/Winnipeg": {
              "long": [
                "Central-standaardtijd",
                "Central-zomertijd"
              ],
              "short": [
                "CST",
                "CDT"
              ]
            },
            "America/Costa_Rica": {
              "long": [
                "Central-standaardtijd",
                "Central-zomertijd"
              ],
              "short": [
                "CST",
                "CDT"
              ]
            },
            "America/Guatemala": {
              "long": [
                "Central-standaardtijd",
                "Central-zomertijd"
              ],
              "short": [
                "CST",
                "CDT"
              ]
            },
            "America/Tegucigalpa": {
              "long": [
                "Central-standaardtijd",
                "Central-zomertijd"
              ],
              "short": [
                "CST",
                "CDT"
              ]
            },
            "America/Mexico_City": {
              "long": [
                "Central-standaardtijd",
                "Central-zomertijd"
              ],
              "short": [
                "CST",
                "CDT"
              ]
            },
            "America/El_Salvador": {
              "long": [
                "Central-standaardtijd",
                "Central-zomertijd"
              ],
              "short": [
                "CST",
                "CDT"
              ]
            },
            "America/New_York": {
              "long": [
                "Eastern-standaardtijd",
                "Eastern-zomertijd"
              ],
              "short": [
                "EST",
                "EDT"
              ]
            },
            "America/Nassau": {
              "long": [
                "Eastern-standaardtijd",
                "Eastern-zomertijd"
              ],
              "short": [
                "EST",
                "EDT"
              ]
            },
            "America/Toronto": {
              "long": [
                "Eastern-standaardtijd",
                "Eastern-zomertijd"
              ],
              "short": [
                "EST",
                "EDT"
              ]
            },
            "America/Port-au-Prince": {
              "long": [
                "Eastern-standaardtijd",
                "Eastern-zomertijd"
              ],
              "short": [
                "EST",
                "EDT"
              ]
            },
            "America/Jamaica": {
              "long": [
                "Eastern-standaardtijd",
                "Eastern-zomertijd"
              ],
              "short": [
                "EST",
                "EDT"
              ]
            },
            "America/Cayman": {
              "long": [
                "Eastern-standaardtijd",
                "Eastern-zomertijd"
              ],
              "short": [
                "EST",
                "EDT"
              ]
            },
            "America/Panama": {
              "long": [
                "Eastern-standaardtijd",
                "Eastern-zomertijd"
              ],
              "short": [
                "EST",
                "EDT"
              ]
            },
            "America/Denver": {
              "long": [
                "Mountain-standaardtijd",
                "Mountain-zomertijd"
              ],
              "short": [
                "MST",
                "MDT"
              ]
            },
            "America/Edmonton": {
              "long": [
                "Mountain-standaardtijd",
                "Mountain-zomertijd"
              ],
              "short": [
                "MST",
                "MDT"
              ]
            },
            "America/Los_Angeles": {
              "long": [
                "Pacific-standaardtijd",
                "Pacific-zomertijd"
              ],
              "short": [
                "PST",
                "PDT"
              ]
            },
            "America/Vancouver": {
              "long": [
                "Pacific-standaardtijd",
                "Pacific-zomertijd"
              ],
              "short": [
                "PST",
                "PDT"
              ]
            },
            "America/Tijuana": {
              "long": [
                "Pacific-standaardtijd",
                "Pacific-zomertijd"
              ],
              "short": [
                "PST",
                "PDT"
              ]
            },
            "Asia/Anadyr": {
              "long": [
                "Anadyr-standaardtijd",
                "Anadyr-zomertijd"
              ]
            },
            "Pacific/Apia": {
              "long": [
                "Apia-standaardtijd",
                "Apia-zomertijd"
              ]
            },
            "Asia/Riyadh": {
              "long": [
                "Arabische standaardtijd",
                "Arabische zomertijd"
              ]
            },
            "Asia/Bahrain": {
              "long": [
                "Arabische standaardtijd",
                "Arabische zomertijd"
              ]
            },
            "Asia/Baghdad": {
              "long": [
                "Arabische standaardtijd",
                "Arabische zomertijd"
              ]
            },
            "Asia/Kuwait": {
              "long": [
                "Arabische standaardtijd",
                "Arabische zomertijd"
              ]
            },
            "Asia/Qatar": {
              "long": [
                "Arabische standaardtijd",
                "Arabische zomertijd"
              ]
            },
            "Asia/Aden": {
              "long": [
                "Arabische standaardtijd",
                "Arabische zomertijd"
              ]
            },
            "America/Buenos_Aires": {
              "long": [
                "Argentijnse standaardtijd",
                "Argentijnse zomertijd"
              ]
            },
            "America/Argentina/San_Luis": {
              "long": [
                "West-Argentijnse standaardtijd",
                "West-Argentijnse zomertijd"
              ]
            },
            "Asia/Ashgabat": {
              "long": [
                "Turkmeense standaardtijd",
                "Turkmeense zomertijd"
              ]
            },
            "America/Halifax": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Antigua": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Anguilla": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Aruba": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Barbados": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "Atlantic/Bermuda": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Kralendijk": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Curacao": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Dominica": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Grenada": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Thule": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Guadeloupe": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/St_Kitts": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/St_Lucia": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Marigot": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Martinique": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Montserrat": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Puerto_Rico": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Lower_Princes": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Port_of_Spain": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/St_Vincent": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/Tortola": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "America/St_Thomas": {
              "long": [
                "Atlantic-standaardtijd",
                "Atlantic-zomertijd"
              ],
              "short": [
                "AST",
                "ADT"
              ]
            },
            "Australia/Adelaide": {
              "long": [
                "Midden-Australische standaardtijd",
                "Midden-Australische zomertijd"
              ]
            },
            "Australia/Eucla": {
              "long": [
                "Midden-Australische westelijke standaardtijd",
                "Midden-Australische westelijke zomertijd"
              ]
            },
            "Australia/Sydney": {
              "long": [
                "Oost-Australische standaardtijd",
                "Oost-Australische zomertijd"
              ]
            },
            "Australia/Perth": {
              "long": [
                "West-Australische standaardtijd",
                "West-Australische zomertijd"
              ]
            },
            "Atlantic/Azores": {
              "long": [
                "Azoren-standaardtijd",
                "Azoren-zomertijd"
              ]
            },
            "Asia/Thimphu": {
              "long": [
                "Bhutaanse tijd",
                "Bhutaanse tijd"
              ]
            },
            "America/La_Paz": {
              "long": [
                "Boliviaanse tijd",
                "Boliviaanse tijd"
              ]
            },
            "Asia/Kuching": {
              "long": [
                "Maleisische tijd",
                "Maleisische tijd"
              ]
            },
            "America/Sao_Paulo": {
              "long": [
                "Braziliaanse standaardtijd",
                "Braziliaanse zomertijd"
              ]
            },
            "Europe/London": {
              "long": [
                "Greenwich Mean Time",
                "Greenwich Mean Time"
              ],
              "short": [
                "GMT",
                "GMT"
              ]
            },
            "Asia/Brunei": {
              "long": [
                "Bruneise tijd",
                "Bruneise tijd"
              ]
            },
            "Atlantic/Cape_Verde": {
              "long": [
                "Kaapverdische standaardtijd",
                "Kaapverdische zomertijd"
              ]
            },
            "Antarctica/Casey": {
              "long": [
                "Casey tijd",
                "Casey tijd"
              ]
            },
            "Pacific/Saipan": {
              "long": [
                "Noordelijk Mariaanse tijd",
                "Noordelijk Mariaanse tijd"
              ]
            },
            "Pacific/Guam": {
              "long": [
                "Guamese standaardtijd",
                "Guamese standaardtijd"
              ]
            },
            "Pacific/Chatham": {
              "long": [
                "Chatham-standaardtijd",
                "Chatham-zomertijd"
              ]
            },
            "America/Santiago": {
              "long": [
                "Chileense standaardtijd",
                "Chileense zomertijd"
              ]
            },
            "Asia/Shanghai": {
              "long": [
                "Chinese standaardtijd",
                "Chinese zomertijd"
              ]
            },
            "Indian/Christmas": {
              "long": [
                "Christmaseilandse tijd",
                "Christmaseilandse tijd"
              ]
            },
            "Indian/Cocos": {
              "long": [
                "Cocoseilandse tijd",
                "Cocoseilandse tijd"
              ]
            },
            "America/Bogota": {
              "long": [
                "Colombiaanse standaardtijd",
                "Colombiaanse zomertijd"
              ]
            },
            "Pacific/Rarotonga": {
              "long": [
                "Cookeilandse standaardtijd",
                "Cookeilandse halve zomertijd"
              ]
            },
            "America/Havana": {
              "long": [
                "Cubaanse standaardtijd",
                "Cubaanse zomertijd"
              ]
            },
            "Antarctica/Davis": {
              "long": [
                "Davis-tijd",
                "Davis-tijd"
              ]
            },
            "Antarctica/DumontDUrville": {
              "long": [
                "Dumont-d’Urville-tijd",
                "Dumont-d’Urville-tijd"
              ]
            },
            "Asia/Dushanbe": {
              "long": [
                "Tadzjiekse tijd",
                "Tadzjiekse tijd"
              ]
            },
            "America/Paramaribo": {
              "long": [
                "Surinaamse tijd",
                "Surinaamse tijd"
              ]
            },
            "Asia/Dili": {
              "long": [
                "Oost-Timorese tijd",
                "Oost-Timorese tijd"
              ]
            },
            "Pacific/Easter": {
              "long": [
                "Paaseilandse standaardtijd",
                "Paaseilandse zomertijd"
              ]
            },
            "America/Guayaquil": {
              "long": [
                "Ecuadoraanse tijd",
                "Ecuadoraanse tijd"
              ]
            },
            "Europe/Paris": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Andorra": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Tirane": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Vienna": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Sarajevo": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Brussels": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Zurich": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Prague": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Berlin": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Copenhagen": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Madrid": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Gibraltar": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Zagreb": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Budapest": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Rome": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Vaduz": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Luxembourg": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Monaco": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Podgorica": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Skopje": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Malta": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Amsterdam": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Oslo": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Warsaw": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Belgrade": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Stockholm": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Ljubljana": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Arctic/Longyearbyen": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Bratislava": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/San_Marino": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Africa/Tunis": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Vatican": {
              "long": [
                "Midden-Europese standaardtijd",
                "Midden-Europese zomertijd"
              ],
              "short": [
                "CET",
                "CEST"
              ]
            },
            "Europe/Bucharest": {
              "long": [
                "Oost-Europese standaardtijd",
                "Oost-Europese zomertijd"
              ],
              "short": [
                "EET",
                "EEST"
              ]
            },
            "Europe/Mariehamn": {
              "long": [
                "Oost-Europese standaardtijd",
                "Oost-Europese zomertijd"
              ],
              "short": [
                "EET",
                "EEST"
              ]
            },
            "Europe/Sofia": {
              "long": [
                "Oost-Europese standaardtijd",
                "Oost-Europese zomertijd"
              ],
              "short": [
                "EET",
                "EEST"
              ]
            },
            "Asia/Nicosia": {
              "long": [
                "Oost-Europese standaardtijd",
                "Oost-Europese zomertijd"
              ],
              "short": [
                "EET",
                "EEST"
              ]
            },
            "Africa/Cairo": {
              "long": [
                "Oost-Europese standaardtijd",
                "Oost-Europese zomertijd"
              ],
              "short": [
                "EET",
                "EEST"
              ]
            },
            "Europe/Helsinki": {
              "long": [
                "Oost-Europese standaardtijd",
                "Oost-Europese zomertijd"
              ],
              "short": [
                "EET",
                "EEST"
              ]
            },
            "Europe/Athens": {
              "long": [
                "Oost-Europese standaardtijd",
                "Oost-Europese zomertijd"
              ],
              "short": [
                "EET",
                "EEST"
              ]
            },
            "Asia/Beirut": {
              "long": [
                "Oost-Europese standaardtijd",
                "Oost-Europese zomertijd"
              ],
              "short": [
                "EET",
                "EEST"
              ]
            },
            "Europe/Minsk": {
              "long": [
                "Verder-oostelijk-Europese tijd",
                "Verder-oostelijk-Europese tijd"
              ]
            },
            "Europe/Kaliningrad": {
              "long": [
                "Verder-oostelijk-Europese tijd",
                "Verder-oostelijk-Europese tijd"
              ]
            },
            "Atlantic/Canary": {
              "long": [
                "West-Europese standaardtijd",
                "West-Europese zomertijd"
              ],
              "short": [
                "WET",
                "WEST"
              ]
            },
            "Atlantic/Faeroe": {
              "long": [
                "West-Europese standaardtijd",
                "West-Europese zomertijd"
              ],
              "short": [
                "WET",
                "WEST"
              ]
            },
            "Atlantic/Stanley": {
              "long": [
                "Falklandeilandse standaardtijd",
                "Falklandeilandse zomertijd"
              ]
            },
            "Pacific/Fiji": {
              "long": [
                "Fijische standaardtijd",
                "Fijische zomertijd"
              ]
            },
            "America/Cayenne": {
              "long": [
                "Frans-Guyaanse tijd",
                "Frans-Guyaanse tijd"
              ]
            },
            "Indian/Kerguelen": {
              "long": [
                "Franse zuidelijke en Antarctische tijd",
                "Franse zuidelijke en Antarctische tijd"
              ]
            },
            "Asia/Bishkek": {
              "long": [
                "Kirgizische tijd",
                "Kirgizische tijd"
              ]
            },
            "Pacific/Galapagos": {
              "long": [
                "Galapagoseilandse tijd",
                "Galapagoseilandse tijd"
              ]
            },
            "Pacific/Gambier": {
              "long": [
                "Gambiereilandse tijd",
                "Gambiereilandse tijd"
              ]
            },
            "Pacific/Tarawa": {
              "long": [
                "Gilberteilandse tijd",
                "Gilberteilandse tijd"
              ]
            },
            "Atlantic/Reykjavik": {
              "long": [
                "Greenwich Mean Time",
                "Greenwich Mean Time"
              ],
              "short": [
                "GMT",
                "GMT"
              ]
            },
            "Africa/Ouagadougou": {
              "long": [
                "Greenwich Mean Time",
                "Greenwich Mean Time"
              ],
              "short": [
                "GMT",
                "GMT"
              ]
            },
            "Africa/Abidjan": {
              "long": [
                "Greenwich Mean Time",
                "Greenwich Mean Time"
              ],
              "short": [
                "GMT",
                "GMT"
              ]
            },
            "Africa/Accra": {
              "long": [
                "Greenwich Mean Time",
                "Greenwich Mean Time"
              ],
              "short": [
                "GMT",
                "GMT"
              ]
            },
            "Africa/Banjul": {
              "long": [
                "Greenwich Mean Time",
                "Greenwich Mean Time"
              ],
              "short": [
                "GMT",
                "GMT"
              ]
            },
            "Africa/Conakry": {
              "long": [
                "Greenwich Mean Time",
                "Greenwich Mean Time"
              ],
              "short": [
                "GMT",
                "GMT"
              ]
            },
            "Africa/Bamako": {
              "long": [
                "Greenwich Mean Time",
                "Greenwich Mean Time"
              ],
              "short": [
                "GMT",
                "GMT"
              ]
            },
            "Africa/Nouakchott": {
              "long": [
                "Greenwich Mean Time",
                "Greenwich Mean Time"
              ],
              "short": [
                "GMT",
                "GMT"
              ]
            },
            "Atlantic/St_Helena": {
              "long": [
                "Greenwich Mean Time",
                "Greenwich Mean Time"
              ],
              "short": [
                "GMT",
                "GMT"
              ]
            },
            "Africa/Freetown": {
              "long": [
                "Greenwich Mean Time",
                "Greenwich Mean Time"
              ],
              "short": [
                "GMT",
                "GMT"
              ]
            },
            "Africa/Dakar": {
              "long": [
                "Greenwich Mean Time",
                "Greenwich Mean Time"
              ],
              "short": [
                "GMT",
                "GMT"
              ]
            },
            "Africa/Lome": {
              "long": [
                "Greenwich Mean Time",
                "Greenwich Mean Time"
              ],
              "short": [
                "GMT",
                "GMT"
              ]
            },
            "America/Godthab": {
              "long": [
                "West-Groenlandse standaardtijd",
                "West-Groenlandse zomertijd"
              ]
            },
            "America/Scoresbysund": {
              "long": [
                "Oost-Groenlandse standaardtijd",
                "Oost-Groenlandse zomertijd"
              ]
            },
            "Asia/Dubai": {
              "long": [
                "Golf-standaardtijd",
                "Golf-standaardtijd"
              ]
            },
            "Asia/Muscat": {
              "long": [
                "Golf-standaardtijd",
                "Golf-standaardtijd"
              ]
            },
            "America/Guyana": {
              "long": [
                "Guyaanse tijd",
                "Guyaanse tijd"
              ]
            },
            "Pacific/Honolulu": {
              "long": [
                "Hawaii-Aleoetische standaardtijd",
                "Hawaii-Aleoetische zomertijd"
              ],
              "short": [
                "HAST",
                "HADT"
              ]
            },
            "Asia/Hong_Kong": {
              "long": [
                "Hongkongse standaardtijd",
                "Hongkongse zomertijd"
              ]
            },
            "Asia/Hovd": {
              "long": [
                "Hovd-standaardtijd",
                "Hovd-zomertijd"
              ]
            },
            "Asia/Calcutta": {
              "long": [
                "Indiase tijd",
                "Indiase tijd"
              ]
            },
            "Asia/Colombo": {
              "long": [
                "Lanka-tijd",
                "Lanka-tijd"
              ]
            },
            "Indian/Chagos": {
              "long": [
                "Indische Oceaan-tijd",
                "Indische Oceaan-tijd"
              ]
            },
            "Asia/Bangkok": {
              "long": [
                "Indochinese tijd",
                "Indochinese tijd"
              ]
            },
            "Asia/Phnom_Penh": {
              "long": [
                "Indochinese tijd",
                "Indochinese tijd"
              ]
            },
            "Asia/Vientiane": {
              "long": [
                "Indochinese tijd",
                "Indochinese tijd"
              ]
            },
            "Asia/Makassar": {
              "long": [
                "Centraal-Indonesische tijd",
                "Centraal-Indonesische tijd"
              ]
            },
            "Asia/Jayapura": {
              "long": [
                "Oost-Indonesische tijd",
                "Oost-Indonesische tijd"
              ]
            },
            "Asia/Jakarta": {
              "long": [
                "West-Indonesische tijd",
                "West-Indonesische tijd"
              ]
            },
            "Asia/Tehran": {
              "long": [
                "Iraanse standaardtijd",
                "Iraanse zomertijd"
              ]
            },
            "Asia/Irkutsk": {
              "long": [
                "Irkoetsk-standaardtijd",
                "Irkoetsk-zomertijd"
              ]
            },
            "Asia/Jerusalem": {
              "long": [
                "Israëlische standaardtijd",
                "Israëlische zomertijd"
              ]
            },
            "Asia/Tokyo": {
              "long": [
                "Japanse standaardtijd",
                "Japanse zomertijd"
              ]
            },
            "Asia/Kamchatka": {
              "long": [
                "Petropavlovsk-Kamtsjatski-standaardtijd",
                "Petropavlovsk-Kamtsjatski-zomertijd"
              ]
            },
            "Asia/Karachi": {
              "long": [
                "Pakistaanse standaardtijd",
                "Pakistaanse zomertijd"
              ]
            },
            "Asia/Qyzylorda": {
              "long": [
                "Qyzylorda-standaardtijd",
                "Qyzylorda-zomertijd"
              ]
            },
            "Asia/Seoul": {
              "long": [
                "Koreaanse standaardtijd",
                "Koreaanse zomertijd"
              ]
            },
            "Pacific/Kosrae": {
              "long": [
                "Kosraese tijd",
                "Kosraese tijd"
              ]
            },
            "Asia/Krasnoyarsk": {
              "long": [
                "Krasnojarsk-standaardtijd",
                "Krasnojarsk-zomertijd"
              ]
            },
            "Europe/Samara": {
              "long": [
                "Samara-standaardtijd",
                "Samara-zomertijd"
              ]
            },
            "Pacific/Kiritimati": {
              "long": [
                "Line-eilandse tijd",
                "Line-eilandse tijd"
              ]
            },
            "Australia/Lord_Howe": {
              "long": [
                "Lord Howe-eilandse standaardtijd",
                "Lord Howe-eilandse zomertijd"
              ]
            },
            "Asia/Macau": {
              "long": [
                "Macause standaardtijd",
                "Macause zomertijd"
              ]
            },
            "Asia/Magadan": {
              "long": [
                "Magadan-standaardtijd",
                "Magadan-zomertijd"
              ]
            },
            "Indian/Maldives": {
              "long": [
                "Maldivische tijd",
                "Maldivische tijd"
              ]
            },
            "Pacific/Marquesas": {
              "long": [
                "Marquesaseilandse tijd",
                "Marquesaseilandse tijd"
              ]
            },
            "Pacific/Majuro": {
              "long": [
                "Marshalleilandse tijd",
                "Marshalleilandse tijd"
              ]
            },
            "Indian/Mauritius": {
              "long": [
                "Mauritiaanse standaardtijd",
                "Mauritiaanse zomertijd"
              ]
            },
            "Antarctica/Mawson": {
              "long": [
                "Mawson-tijd",
                "Mawson-tijd"
              ]
            },
            "America/Mazatlan": {
              "long": [
                "Mexicaanse Pacific-standaardtijd",
                "Mexicaanse Pacific-zomertijd"
              ]
            },
            "Asia/Ulaanbaatar": {
              "long": [
                "Ulaanbaatar-standaardtijd",
                "Ulaanbaatar-zomertijd"
              ]
            },
            "Europe/Moscow": {
              "long": [
                "Moskou-standaardtijd",
                "Moskou-zomertijd"
              ]
            },
            "Asia/Rangoon": {
              "long": [
                "Myanmarese tijd",
                "Myanmarese tijd"
              ]
            },
            "Pacific/Nauru": {
              "long": [
                "Nauruaanse tijd",
                "Nauruaanse tijd"
              ]
            },
            "Asia/Katmandu": {
              "long": [
                "Nepalese tijd",
                "Nepalese tijd"
              ]
            },
            "Pacific/Noumea": {
              "long": [
                "Nieuw-Caledonische standaardtijd",
                "Nieuw-Caledonische zomertijd"
              ]
            },
            "Pacific/Auckland": {
              "long": [
                "Nieuw-Zeelandse standaardtijd",
                "Nieuw-Zeelandse zomertijd"
              ]
            },
            "Antarctica/McMurdo": {
              "long": [
                "Nieuw-Zeelandse standaardtijd",
                "Nieuw-Zeelandse zomertijd"
              ]
            },
            "America/St_Johns": {
              "long": [
                "Newfoundland-standaardtijd",
                "Newfoundland-zomertijd"
              ]
            },
            "Pacific/Niue": {
              "long": [
                "Niuese tijd",
                "Niuese tijd"
              ]
            },
            "Pacific/Norfolk": {
              "long": [
                "Norfolkeilandse standaardtijd",
                "Norfolkeilandse zomertijd"
              ]
            },
            "America/Noronha": {
              "long": [
                "Fernando de Noronha-standaardtijd",
                "Fernando de Noronha-zomertijd"
              ]
            },
            "Asia/Novosibirsk": {
              "long": [
                "Novosibirsk-standaardtijd",
                "Novosibirsk-zomertijd"
              ]
            },
            "Asia/Omsk": {
              "long": [
                "Omsk-standaardtijd",
                "Omsk-zomertijd"
              ]
            },
            "Pacific/Palau": {
              "long": [
                "Belause tijd",
                "Belause tijd"
              ]
            },
            "Pacific/Port_Moresby": {
              "long": [
                "Papoea-Nieuw-Guineese tijd",
                "Papoea-Nieuw-Guineese tijd"
              ]
            },
            "America/Asuncion": {
              "long": [
                "Paraguayaanse standaardtijd",
                "Paraguayaanse zomertijd"
              ]
            },
            "America/Lima": {
              "long": [
                "Peruaanse standaardtijd",
                "Peruaanse zomertijd"
              ]
            },
            "Asia/Manila": {
              "long": [
                "Filipijnse standaardtijd",
                "Filipijnse zomertijd"
              ]
            },
            "Pacific/Enderbury": {
              "long": [
                "Phoenixeilandse tijd",
                "Phoenixeilandse tijd"
              ]
            },
            "America/Miquelon": {
              "long": [
                "Saint Pierre en Miquelon-standaardtijd",
                "Saint Pierre en Miquelon-zomertijd"
              ]
            },
            "Pacific/Pitcairn": {
              "long": [
                "Pitcairneilandse tijd",
                "Pitcairneilandse tijd"
              ]
            },
            "Pacific/Ponape": {
              "long": [
                "Pohnpei-tijd",
                "Pohnpei-tijd"
              ]
            },
            "Asia/Pyongyang": {
              "long": [
                "Pyongyang-tijd",
                "Pyongyang-tijd"
              ]
            },
            "Indian/Reunion": {
              "long": [
                "Réunionse tijd",
                "Réunionse tijd"
              ]
            },
            "Antarctica/Rothera": {
              "long": [
                "Rothera-tijd",
                "Rothera-tijd"
              ]
            },
            "Asia/Sakhalin": {
              "long": [
                "Sachalin-standaardtijd",
                "Sachalin-zomertijd"
              ]
            },
            "Pacific/Pago_Pago": {
              "long": [
                "Samoaanse standaardtijd",
                "Samoaanse zomertijd"
              ]
            },
            "Indian/Mahe": {
              "long": [
                "Seychelse tijd",
                "Seychelse tijd"
              ]
            },
            "Asia/Singapore": {
              "long": [
                "Singaporese standaardtijd",
                "Singaporese standaardtijd"
              ]
            },
            "Pacific/Guadalcanal": {
              "long": [
                "Salomonseilandse tijd",
                "Salomonseilandse tijd"
              ]
            },
            "Atlantic/South_Georgia": {
              "long": [
                "Zuid-Georgische tijd",
                "Zuid-Georgische tijd"
              ]
            },
            "Asia/Yekaterinburg": {
              "long": [
                "Jekaterinenburg-standaardtijd",
                "Jekaterinenburg-zomertijd"
              ]
            },
            "Antarctica/Syowa": {
              "long": [
                "Syowa-tijd",
                "Syowa-tijd"
              ]
            },
            "Pacific/Tahiti": {
              "long": [
                "Tahitiaanse tijd",
                "Tahitiaanse tijd"
              ]
            },
            "Asia/Taipei": {
              "long": [
                "Taipei-standaardtijd",
                "Taipei-zomertijd"
              ]
            },
            "Asia/Tashkent": {
              "long": [
                "Oezbeekse standaardtijd",
                "Oezbeekse zomertijd"
              ]
            },
            "Pacific/Fakaofo": {
              "long": [
                "Tokelau-eilandse tijd",
                "Tokelau-eilandse tijd"
              ]
            },
            "Pacific/Tongatapu": {
              "long": [
                "Tongaanse standaardtijd",
                "Tongaanse zomertijd"
              ]
            },
            "Pacific/Truk": {
              "long": [
                "Chuukse tijd",
                "Chuukse tijd"
              ]
            },
            "Pacific/Funafuti": {
              "long": [
                "Tuvaluaanse tijd",
                "Tuvaluaanse tijd"
              ]
            },
            "America/Montevideo": {
              "long": [
                "Uruguayaanse standaardtijd",
                "Uruguayaanse zomertijd"
              ]
            },
            "Pacific/Efate": {
              "long": [
                "Vanuatuaanse standaardtijd",
                "Vanuatuaanse zomertijd"
              ]
            },
            "America/Caracas": {
              "long": [
                "Venezolaanse tijd",
                "Venezolaanse tijd"
              ]
            },
            "Asia/Vladivostok": {
              "long": [
                "Vladivostok-standaardtijd",
                "Vladivostok-zomertijd"
              ]
            },
            "Europe/Volgograd": {
              "long": [
                "Wolgograd-standaardtijd",
                "Wolgograd-zomertijd"
              ]
            },
            "Antarctica/Vostok": {
              "long": [
                "Vostok-tijd",
                "Vostok-tijd"
              ]
            },
            "Pacific/Wake": {
              "long": [
                "Wake-eilandse tijd",
                "Wake-eilandse tijd"
              ]
            },
            "Pacific/Wallis": {
              "long": [
                "Wallis en Futunase tijd",
                "Wallis en Futunase tijd"
              ]
            },
            "Asia/Yakutsk": {
              "long": [
                "Jakoetsk-standaardtijd",
                "Jakoetsk-zomertijd"
              ]
            },
            "America/Whitehorse": {
              "long": [
                "Yukon-tijd",
                "Yukon-tijd"
              ]
            },
            "UTC": {
              "long": [
                "gecoördineerde wereldtijd",
                "gecoördineerde wereldtijd"
              ],
              "short": [
                "UTC",
                "UTC"
              ]
            }
          },
          "gmtFormat": "GMT{0}",
          "hourFormat": "+HH:mm;-HH:mm",
          "dateFormat": {
            "full": "EEEE d MMMM y",
            "long": "d MMMM y",
            "medium": "d MMM y",
            "short": "dd-MM-y"
          },
          "timeFormat": {
            "full": "HH:mm:ss zzzz",
            "long": "HH:mm:ss z",
            "medium": "HH:mm:ss",
            "short": "HH:mm"
          },
          "dateTimeFormat": {
            "full": "{1}, {0}",
            "long": "{1}, {0}",
            "medium": "{1}, {0}",
            "short": "{1}, {0}"
          },
          "formats": {
            "gregory": {
              "Bh": "h B",
              "Bhm": "h:mm B",
              "Bhms": "h:mm:ss B",
              "d": "d",
              "E": "ccc",
              "EBhm": "E h:mm B",
              "EBhms": "E h:mm:ss B",
              "Ed": "E d",
              "Ehm": "E h:mm a",
              "EHm": "E HH:mm",
              "Ehms": "E h:mm:ss a",
              "EHms": "E HH:mm:ss",
              "Gy": "y G",
              "GyMd": "d/M/y GGGGG",
              "GyMMM": "MMM y G",
              "GyMMMd": "d MMM y G",
              "GyMMMEd": "E d MMM y G",
              "h": "h a",
              "H": "HH",
              "hm": "h:mm a",
              "Hm": "HH:mm",
              "hms": "h:mm:ss a",
              "Hms": "HH:mm:ss",
              "hmsv": "h:mm:ss a v",
              "Hmsv": "HH:mm:ss v",
              "hmv": "h:mm a v",
              "Hmv": "HH:mm v",
              "M": "L",
              "Md": "d-M",
              "MEd": "E d-M",
              "MMM": "LLL",
              "MMMd": "d MMM",
              "MMMEd": "E d MMM",
              "MMMMd": "d MMMM",
              "ms": "mm:ss",
              "y": "y",
              "yM": "M-y",
              "yMd": "d-M-y",
              "yMEd": "E d-M-y",
              "yMMM": "MMM y",
              "yMMMd": "d MMM y",
              "yMMMEd": "E d MMM y",
              "yMMMM": "MMMM y",
              "EEEE d MMMM y": "EEEE d MMMM y",
              "d MMMM y": "d MMMM y",
              "d MMM y": "d MMM y",
              "dd-MM-y": "dd-MM-y",
              "HH:mm:ss zzzz": "HH:mm:ss zzzz",
              "HH:mm:ss z": "HH:mm:ss z",
              "HH:mm:ss": "HH:mm:ss",
              "HH:mm": "HH:mm",
              "EEEE d MMMM y, HH:mm:ss zzzz": "EEEE d MMMM y, HH:mm:ss zzzz",
              "d MMMM y, HH:mm:ss zzzz": "d MMMM y, HH:mm:ss zzzz",
              "d MMM y, HH:mm:ss zzzz": "d MMM y, HH:mm:ss zzzz",
              "dd-MM-y, HH:mm:ss zzzz": "dd-MM-y, HH:mm:ss zzzz",
              "d, HH:mm:ss zzzz": "d, HH:mm:ss zzzz",
              "E, HH:mm:ss zzzz": "ccc, HH:mm:ss zzzz",
              "Ed, HH:mm:ss zzzz": "E d, HH:mm:ss zzzz",
              "Gy, HH:mm:ss zzzz": "y G, HH:mm:ss zzzz",
              "GyMd, HH:mm:ss zzzz": "d/M/y GGGGG, HH:mm:ss zzzz",
              "GyMMM, HH:mm:ss zzzz": "MMM y G, HH:mm:ss zzzz",
              "GyMMMd, HH:mm:ss zzzz": "d MMM y G, HH:mm:ss zzzz",
              "GyMMMEd, HH:mm:ss zzzz": "E d MMM y G, HH:mm:ss zzzz",
              "M, HH:mm:ss zzzz": "L, HH:mm:ss zzzz",
              "Md, HH:mm:ss zzzz": "d-M, HH:mm:ss zzzz",
              "MEd, HH:mm:ss zzzz": "E d-M, HH:mm:ss zzzz",
              "MMM, HH:mm:ss zzzz": "LLL, HH:mm:ss zzzz",
              "MMMd, HH:mm:ss zzzz": "d MMM, HH:mm:ss zzzz",
              "MMMEd, HH:mm:ss zzzz": "E d MMM, HH:mm:ss zzzz",
              "MMMMd, HH:mm:ss zzzz": "d MMMM, HH:mm:ss zzzz",
              "y, HH:mm:ss zzzz": "y, HH:mm:ss zzzz",
              "yM, HH:mm:ss zzzz": "M-y, HH:mm:ss zzzz",
              "yMd, HH:mm:ss zzzz": "d-M-y, HH:mm:ss zzzz",
              "yMEd, HH:mm:ss zzzz": "E d-M-y, HH:mm:ss zzzz",
              "yMMM, HH:mm:ss zzzz": "MMM y, HH:mm:ss zzzz",
              "yMMMd, HH:mm:ss zzzz": "d MMM y, HH:mm:ss zzzz",
              "yMMMEd, HH:mm:ss zzzz": "E d MMM y, HH:mm:ss zzzz",
              "yMMMM, HH:mm:ss zzzz": "MMMM y, HH:mm:ss zzzz",
              "EEEE d MMMM y, HH:mm:ss z": "EEEE d MMMM y, HH:mm:ss z",
              "d MMMM y, HH:mm:ss z": "d MMMM y, HH:mm:ss z",
              "d MMM y, HH:mm:ss z": "d MMM y, HH:mm:ss z",
              "dd-MM-y, HH:mm:ss z": "dd-MM-y, HH:mm:ss z",
              "d, HH:mm:ss z": "d, HH:mm:ss z",
              "E, HH:mm:ss z": "ccc, HH:mm:ss z",
              "Ed, HH:mm:ss z": "E d, HH:mm:ss z",
              "Gy, HH:mm:ss z": "y G, HH:mm:ss z",
              "GyMd, HH:mm:ss z": "d/M/y GGGGG, HH:mm:ss z",
              "GyMMM, HH:mm:ss z": "MMM y G, HH:mm:ss z",
              "GyMMMd, HH:mm:ss z": "d MMM y G, HH:mm:ss z",
              "GyMMMEd, HH:mm:ss z": "E d MMM y G, HH:mm:ss z",
              "M, HH:mm:ss z": "L, HH:mm:ss z",
              "Md, HH:mm:ss z": "d-M, HH:mm:ss z",
              "MEd, HH:mm:ss z": "E d-M, HH:mm:ss z",
              "MMM, HH:mm:ss z": "LLL, HH:mm:ss z",
              "MMMd, HH:mm:ss z": "d MMM, HH:mm:ss z",
              "MMMEd, HH:mm:ss z": "E d MMM, HH:mm:ss z",
              "MMMMd, HH:mm:ss z": "d MMMM, HH:mm:ss z",
              "y, HH:mm:ss z": "y, HH:mm:ss z",
              "yM, HH:mm:ss z": "M-y, HH:mm:ss z",
              "yMd, HH:mm:ss z": "d-M-y, HH:mm:ss z",
              "yMEd, HH:mm:ss z": "E d-M-y, HH:mm:ss z",
              "yMMM, HH:mm:ss z": "MMM y, HH:mm:ss z",
              "yMMMd, HH:mm:ss z": "d MMM y, HH:mm:ss z",
              "yMMMEd, HH:mm:ss z": "E d MMM y, HH:mm:ss z",
              "yMMMM, HH:mm:ss z": "MMMM y, HH:mm:ss z",
              "EEEE d MMMM y, HH:mm:ss": "EEEE d MMMM y, HH:mm:ss",
              "d MMMM y, HH:mm:ss": "d MMMM y, HH:mm:ss",
              "d MMM y, HH:mm:ss": "d MMM y, HH:mm:ss",
              "dd-MM-y, HH:mm:ss": "dd-MM-y, HH:mm:ss",
              "d, HH:mm:ss": "d, HH:mm:ss",
              "E, HH:mm:ss": "ccc, HH:mm:ss",
              "Ed, HH:mm:ss": "E d, HH:mm:ss",
              "Gy, HH:mm:ss": "y G, HH:mm:ss",
              "GyMd, HH:mm:ss": "d/M/y GGGGG, HH:mm:ss",
              "GyMMM, HH:mm:ss": "MMM y G, HH:mm:ss",
              "GyMMMd, HH:mm:ss": "d MMM y G, HH:mm:ss",
              "GyMMMEd, HH:mm:ss": "E d MMM y G, HH:mm:ss",
              "M, HH:mm:ss": "L, HH:mm:ss",
              "Md, HH:mm:ss": "d-M, HH:mm:ss",
              "MEd, HH:mm:ss": "E d-M, HH:mm:ss",
              "MMM, HH:mm:ss": "LLL, HH:mm:ss",
              "MMMd, HH:mm:ss": "d MMM, HH:mm:ss",
              "MMMEd, HH:mm:ss": "E d MMM, HH:mm:ss",
              "MMMMd, HH:mm:ss": "d MMMM, HH:mm:ss",
              "y, HH:mm:ss": "y, HH:mm:ss",
              "yM, HH:mm:ss": "M-y, HH:mm:ss",
              "yMd, HH:mm:ss": "d-M-y, HH:mm:ss",
              "yMEd, HH:mm:ss": "E d-M-y, HH:mm:ss",
              "yMMM, HH:mm:ss": "MMM y, HH:mm:ss",
              "yMMMd, HH:mm:ss": "d MMM y, HH:mm:ss",
              "yMMMEd, HH:mm:ss": "E d MMM y, HH:mm:ss",
              "yMMMM, HH:mm:ss": "MMMM y, HH:mm:ss",
              "EEEE d MMMM y, HH:mm": "EEEE d MMMM y, HH:mm",
              "d MMMM y, HH:mm": "d MMMM y, HH:mm",
              "d MMM y, HH:mm": "d MMM y, HH:mm",
              "dd-MM-y, HH:mm": "dd-MM-y, HH:mm",
              "d, HH:mm": "d, HH:mm",
              "E, HH:mm": "ccc, HH:mm",
              "Ed, HH:mm": "E d, HH:mm",
              "Gy, HH:mm": "y G, HH:mm",
              "GyMd, HH:mm": "d/M/y GGGGG, HH:mm",
              "GyMMM, HH:mm": "MMM y G, HH:mm",
              "GyMMMd, HH:mm": "d MMM y G, HH:mm",
              "GyMMMEd, HH:mm": "E d MMM y G, HH:mm",
              "M, HH:mm": "L, HH:mm",
              "Md, HH:mm": "d-M, HH:mm",
              "MEd, HH:mm": "E d-M, HH:mm",
              "MMM, HH:mm": "LLL, HH:mm",
              "MMMd, HH:mm": "d MMM, HH:mm",
              "MMMEd, HH:mm": "E d MMM, HH:mm",
              "MMMMd, HH:mm": "d MMMM, HH:mm",
              "y, HH:mm": "y, HH:mm",
              "yM, HH:mm": "M-y, HH:mm",
              "yMd, HH:mm": "d-M-y, HH:mm",
              "yMEd, HH:mm": "E d-M-y, HH:mm",
              "yMMM, HH:mm": "MMM y, HH:mm",
              "yMMMd, HH:mm": "d MMM y, HH:mm",
              "yMMMEd, HH:mm": "E d MMM y, HH:mm",
              "yMMMM, HH:mm": "MMMM y, HH:mm",
              "EEEE d MMMM y, Bh": "EEEE d MMMM y, h B",
              "d MMMM y, Bh": "d MMMM y, h B",
              "d MMM y, Bh": "d MMM y, h B",
              "dd-MM-y, Bh": "dd-MM-y, h B",
              "d, Bh": "d, h B",
              "E, Bh": "ccc, h B",
              "Ed, Bh": "E d, h B",
              "Gy, Bh": "y G, h B",
              "GyMd, Bh": "d/M/y GGGGG, h B",
              "GyMMM, Bh": "MMM y G, h B",
              "GyMMMd, Bh": "d MMM y G, h B",
              "GyMMMEd, Bh": "E d MMM y G, h B",
              "M, Bh": "L, h B",
              "Md, Bh": "d-M, h B",
              "MEd, Bh": "E d-M, h B",
              "MMM, Bh": "LLL, h B",
              "MMMd, Bh": "d MMM, h B",
              "MMMEd, Bh": "E d MMM, h B",
              "MMMMd, Bh": "d MMMM, h B",
              "y, Bh": "y, h B",
              "yM, Bh": "M-y, h B",
              "yMd, Bh": "d-M-y, h B",
              "yMEd, Bh": "E d-M-y, h B",
              "yMMM, Bh": "MMM y, h B",
              "yMMMd, Bh": "d MMM y, h B",
              "yMMMEd, Bh": "E d MMM y, h B",
              "yMMMM, Bh": "MMMM y, h B",
              "EEEE d MMMM y, Bhm": "EEEE d MMMM y, h:mm B",
              "d MMMM y, Bhm": "d MMMM y, h:mm B",
              "d MMM y, Bhm": "d MMM y, h:mm B",
              "dd-MM-y, Bhm": "dd-MM-y, h:mm B",
              "d, Bhm": "d, h:mm B",
              "E, Bhm": "ccc, h:mm B",
              "Ed, Bhm": "E d, h:mm B",
              "Gy, Bhm": "y G, h:mm B",
              "GyMd, Bhm": "d/M/y GGGGG, h:mm B",
              "GyMMM, Bhm": "MMM y G, h:mm B",
              "GyMMMd, Bhm": "d MMM y G, h:mm B",
              "GyMMMEd, Bhm": "E d MMM y G, h:mm B",
              "M, Bhm": "L, h:mm B",
              "Md, Bhm": "d-M, h:mm B",
              "MEd, Bhm": "E d-M, h:mm B",
              "MMM, Bhm": "LLL, h:mm B",
              "MMMd, Bhm": "d MMM, h:mm B",
              "MMMEd, Bhm": "E d MMM, h:mm B",
              "MMMMd, Bhm": "d MMMM, h:mm B",
              "y, Bhm": "y, h:mm B",
              "yM, Bhm": "M-y, h:mm B",
              "yMd, Bhm": "d-M-y, h:mm B",
              "yMEd, Bhm": "E d-M-y, h:mm B",
              "yMMM, Bhm": "MMM y, h:mm B",
              "yMMMd, Bhm": "d MMM y, h:mm B",
              "yMMMEd, Bhm": "E d MMM y, h:mm B",
              "yMMMM, Bhm": "MMMM y, h:mm B",
              "EEEE d MMMM y, Bhms": "EEEE d MMMM y, h:mm:ss B",
              "d MMMM y, Bhms": "d MMMM y, h:mm:ss B",
              "d MMM y, Bhms": "d MMM y, h:mm:ss B",
              "dd-MM-y, Bhms": "dd-MM-y, h:mm:ss B",
              "d, Bhms": "d, h:mm:ss B",
              "E, Bhms": "ccc, h:mm:ss B",
              "Ed, Bhms": "E d, h:mm:ss B",
              "Gy, Bhms": "y G, h:mm:ss B",
              "GyMd, Bhms": "d/M/y GGGGG, h:mm:ss B",
              "GyMMM, Bhms": "MMM y G, h:mm:ss B",
              "GyMMMd, Bhms": "d MMM y G, h:mm:ss B",
              "GyMMMEd, Bhms": "E d MMM y G, h:mm:ss B",
              "M, Bhms": "L, h:mm:ss B",
              "Md, Bhms": "d-M, h:mm:ss B",
              "MEd, Bhms": "E d-M, h:mm:ss B",
              "MMM, Bhms": "LLL, h:mm:ss B",
              "MMMd, Bhms": "d MMM, h:mm:ss B",
              "MMMEd, Bhms": "E d MMM, h:mm:ss B",
              "MMMMd, Bhms": "d MMMM, h:mm:ss B",
              "y, Bhms": "y, h:mm:ss B",
              "yM, Bhms": "M-y, h:mm:ss B",
              "yMd, Bhms": "d-M-y, h:mm:ss B",
              "yMEd, Bhms": "E d-M-y, h:mm:ss B",
              "yMMM, Bhms": "MMM y, h:mm:ss B",
              "yMMMd, Bhms": "d MMM y, h:mm:ss B",
              "yMMMEd, Bhms": "E d MMM y, h:mm:ss B",
              "yMMMM, Bhms": "MMMM y, h:mm:ss B",
              "EEEE d MMMM y, h": "EEEE d MMMM y, h a",
              "d MMMM y, h": "d MMMM y, h a",
              "d MMM y, h": "d MMM y, h a",
              "dd-MM-y, h": "dd-MM-y, h a",
              "d, h": "d, h a",
              "E, h": "ccc, h a",
              "Ed, h": "E d, h a",
              "Gy, h": "y G, h a",
              "GyMd, h": "d/M/y GGGGG, h a",
              "GyMMM, h": "MMM y G, h a",
              "GyMMMd, h": "d MMM y G, h a",
              "GyMMMEd, h": "E d MMM y G, h a",
              "M, h": "L, h a",
              "Md, h": "d-M, h a",
              "MEd, h": "E d-M, h a",
              "MMM, h": "LLL, h a",
              "MMMd, h": "d MMM, h a",
              "MMMEd, h": "E d MMM, h a",
              "MMMMd, h": "d MMMM, h a",
              "y, h": "y, h a",
              "yM, h": "M-y, h a",
              "yMd, h": "d-M-y, h a",
              "yMEd, h": "E d-M-y, h a",
              "yMMM, h": "MMM y, h a",
              "yMMMd, h": "d MMM y, h a",
              "yMMMEd, h": "E d MMM y, h a",
              "yMMMM, h": "MMMM y, h a",
              "EEEE d MMMM y, H": "EEEE d MMMM y, HH",
              "d MMMM y, H": "d MMMM y, HH",
              "d MMM y, H": "d MMM y, HH",
              "dd-MM-y, H": "dd-MM-y, HH",
              "d, H": "d, HH",
              "E, H": "ccc, HH",
              "Ed, H": "E d, HH",
              "Gy, H": "y G, HH",
              "GyMd, H": "d/M/y GGGGG, HH",
              "GyMMM, H": "MMM y G, HH",
              "GyMMMd, H": "d MMM y G, HH",
              "GyMMMEd, H": "E d MMM y G, HH",
              "M, H": "L, HH",
              "Md, H": "d-M, HH",
              "MEd, H": "E d-M, HH",
              "MMM, H": "LLL, HH",
              "MMMd, H": "d MMM, HH",
              "MMMEd, H": "E d MMM, HH",
              "MMMMd, H": "d MMMM, HH",
              "y, H": "y, HH",
              "yM, H": "M-y, HH",
              "yMd, H": "d-M-y, HH",
              "yMEd, H": "E d-M-y, HH",
              "yMMM, H": "MMM y, HH",
              "yMMMd, H": "d MMM y, HH",
              "yMMMEd, H": "E d MMM y, HH",
              "yMMMM, H": "MMMM y, HH",
              "EEEE d MMMM y, hm": "EEEE d MMMM y, h:mm a",
              "d MMMM y, hm": "d MMMM y, h:mm a",
              "d MMM y, hm": "d MMM y, h:mm a",
              "dd-MM-y, hm": "dd-MM-y, h:mm a",
              "d, hm": "d, h:mm a",
              "E, hm": "ccc, h:mm a",
              "Ed, hm": "E d, h:mm a",
              "Gy, hm": "y G, h:mm a",
              "GyMd, hm": "d/M/y GGGGG, h:mm a",
              "GyMMM, hm": "MMM y G, h:mm a",
              "GyMMMd, hm": "d MMM y G, h:mm a",
              "GyMMMEd, hm": "E d MMM y G, h:mm a",
              "M, hm": "L, h:mm a",
              "Md, hm": "d-M, h:mm a",
              "MEd, hm": "E d-M, h:mm a",
              "MMM, hm": "LLL, h:mm a",
              "MMMd, hm": "d MMM, h:mm a",
              "MMMEd, hm": "E d MMM, h:mm a",
              "MMMMd, hm": "d MMMM, h:mm a",
              "y, hm": "y, h:mm a",
              "yM, hm": "M-y, h:mm a",
              "yMd, hm": "d-M-y, h:mm a",
              "yMEd, hm": "E d-M-y, h:mm a",
              "yMMM, hm": "MMM y, h:mm a",
              "yMMMd, hm": "d MMM y, h:mm a",
              "yMMMEd, hm": "E d MMM y, h:mm a",
              "yMMMM, hm": "MMMM y, h:mm a",
              "EEEE d MMMM y, Hm": "EEEE d MMMM y, HH:mm",
              "d MMMM y, Hm": "d MMMM y, HH:mm",
              "d MMM y, Hm": "d MMM y, HH:mm",
              "dd-MM-y, Hm": "dd-MM-y, HH:mm",
              "d, Hm": "d, HH:mm",
              "E, Hm": "ccc, HH:mm",
              "Ed, Hm": "E d, HH:mm",
              "Gy, Hm": "y G, HH:mm",
              "GyMd, Hm": "d/M/y GGGGG, HH:mm",
              "GyMMM, Hm": "MMM y G, HH:mm",
              "GyMMMd, Hm": "d MMM y G, HH:mm",
              "GyMMMEd, Hm": "E d MMM y G, HH:mm",
              "M, Hm": "L, HH:mm",
              "Md, Hm": "d-M, HH:mm",
              "MEd, Hm": "E d-M, HH:mm",
              "MMM, Hm": "LLL, HH:mm",
              "MMMd, Hm": "d MMM, HH:mm",
              "MMMEd, Hm": "E d MMM, HH:mm",
              "MMMMd, Hm": "d MMMM, HH:mm",
              "y, Hm": "y, HH:mm",
              "yM, Hm": "M-y, HH:mm",
              "yMd, Hm": "d-M-y, HH:mm",
              "yMEd, Hm": "E d-M-y, HH:mm",
              "yMMM, Hm": "MMM y, HH:mm",
              "yMMMd, Hm": "d MMM y, HH:mm",
              "yMMMEd, Hm": "E d MMM y, HH:mm",
              "yMMMM, Hm": "MMMM y, HH:mm",
              "EEEE d MMMM y, hms": "EEEE d MMMM y, h:mm:ss a",
              "d MMMM y, hms": "d MMMM y, h:mm:ss a",
              "d MMM y, hms": "d MMM y, h:mm:ss a",
              "dd-MM-y, hms": "dd-MM-y, h:mm:ss a",
              "d, hms": "d, h:mm:ss a",
              "E, hms": "ccc, h:mm:ss a",
              "Ed, hms": "E d, h:mm:ss a",
              "Gy, hms": "y G, h:mm:ss a",
              "GyMd, hms": "d/M/y GGGGG, h:mm:ss a",
              "GyMMM, hms": "MMM y G, h:mm:ss a",
              "GyMMMd, hms": "d MMM y G, h:mm:ss a",
              "GyMMMEd, hms": "E d MMM y G, h:mm:ss a",
              "M, hms": "L, h:mm:ss a",
              "Md, hms": "d-M, h:mm:ss a",
              "MEd, hms": "E d-M, h:mm:ss a",
              "MMM, hms": "LLL, h:mm:ss a",
              "MMMd, hms": "d MMM, h:mm:ss a",
              "MMMEd, hms": "E d MMM, h:mm:ss a",
              "MMMMd, hms": "d MMMM, h:mm:ss a",
              "y, hms": "y, h:mm:ss a",
              "yM, hms": "M-y, h:mm:ss a",
              "yMd, hms": "d-M-y, h:mm:ss a",
              "yMEd, hms": "E d-M-y, h:mm:ss a",
              "yMMM, hms": "MMM y, h:mm:ss a",
              "yMMMd, hms": "d MMM y, h:mm:ss a",
              "yMMMEd, hms": "E d MMM y, h:mm:ss a",
              "yMMMM, hms": "MMMM y, h:mm:ss a",
              "EEEE d MMMM y, Hms": "EEEE d MMMM y, HH:mm:ss",
              "d MMMM y, Hms": "d MMMM y, HH:mm:ss",
              "d MMM y, Hms": "d MMM y, HH:mm:ss",
              "dd-MM-y, Hms": "dd-MM-y, HH:mm:ss",
              "d, Hms": "d, HH:mm:ss",
              "E, Hms": "ccc, HH:mm:ss",
              "Ed, Hms": "E d, HH:mm:ss",
              "Gy, Hms": "y G, HH:mm:ss",
              "GyMd, Hms": "d/M/y GGGGG, HH:mm:ss",
              "GyMMM, Hms": "MMM y G, HH:mm:ss",
              "GyMMMd, Hms": "d MMM y G, HH:mm:ss",
              "GyMMMEd, Hms": "E d MMM y G, HH:mm:ss",
              "M, Hms": "L, HH:mm:ss",
              "Md, Hms": "d-M, HH:mm:ss",
              "MEd, Hms": "E d-M, HH:mm:ss",
              "MMM, Hms": "LLL, HH:mm:ss",
              "MMMd, Hms": "d MMM, HH:mm:ss",
              "MMMEd, Hms": "E d MMM, HH:mm:ss",
              "MMMMd, Hms": "d MMMM, HH:mm:ss",
              "y, Hms": "y, HH:mm:ss",
              "yM, Hms": "M-y, HH:mm:ss",
              "yMd, Hms": "d-M-y, HH:mm:ss",
              "yMEd, Hms": "E d-M-y, HH:mm:ss",
              "yMMM, Hms": "MMM y, HH:mm:ss",
              "yMMMd, Hms": "d MMM y, HH:mm:ss",
              "yMMMEd, Hms": "E d MMM y, HH:mm:ss",
              "yMMMM, Hms": "MMMM y, HH:mm:ss",
              "EEEE d MMMM y, hmsv": "EEEE d MMMM y, h:mm:ss a v",
              "d MMMM y, hmsv": "d MMMM y, h:mm:ss a v",
              "d MMM y, hmsv": "d MMM y, h:mm:ss a v",
              "dd-MM-y, hmsv": "dd-MM-y, h:mm:ss a v",
              "d, hmsv": "d, h:mm:ss a v",
              "E, hmsv": "ccc, h:mm:ss a v",
              "Ed, hmsv": "E d, h:mm:ss a v",
              "Gy, hmsv": "y G, h:mm:ss a v",
              "GyMd, hmsv": "d/M/y GGGGG, h:mm:ss a v",
              "GyMMM, hmsv": "MMM y G, h:mm:ss a v",
              "GyMMMd, hmsv": "d MMM y G, h:mm:ss a v",
              "GyMMMEd, hmsv": "E d MMM y G, h:mm:ss a v",
              "M, hmsv": "L, h:mm:ss a v",
              "Md, hmsv": "d-M, h:mm:ss a v",
              "MEd, hmsv": "E d-M, h:mm:ss a v",
              "MMM, hmsv": "LLL, h:mm:ss a v",
              "MMMd, hmsv": "d MMM, h:mm:ss a v",
              "MMMEd, hmsv": "E d MMM, h:mm:ss a v",
              "MMMMd, hmsv": "d MMMM, h:mm:ss a v",
              "y, hmsv": "y, h:mm:ss a v",
              "yM, hmsv": "M-y, h:mm:ss a v",
              "yMd, hmsv": "d-M-y, h:mm:ss a v",
              "yMEd, hmsv": "E d-M-y, h:mm:ss a v",
              "yMMM, hmsv": "MMM y, h:mm:ss a v",
              "yMMMd, hmsv": "d MMM y, h:mm:ss a v",
              "yMMMEd, hmsv": "E d MMM y, h:mm:ss a v",
              "yMMMM, hmsv": "MMMM y, h:mm:ss a v",
              "EEEE d MMMM y, Hmsv": "EEEE d MMMM y, HH:mm:ss v",
              "d MMMM y, Hmsv": "d MMMM y, HH:mm:ss v",
              "d MMM y, Hmsv": "d MMM y, HH:mm:ss v",
              "dd-MM-y, Hmsv": "dd-MM-y, HH:mm:ss v",
              "d, Hmsv": "d, HH:mm:ss v",
              "E, Hmsv": "ccc, HH:mm:ss v",
              "Ed, Hmsv": "E d, HH:mm:ss v",
              "Gy, Hmsv": "y G, HH:mm:ss v",
              "GyMd, Hmsv": "d/M/y GGGGG, HH:mm:ss v",
              "GyMMM, Hmsv": "MMM y G, HH:mm:ss v",
              "GyMMMd, Hmsv": "d MMM y G, HH:mm:ss v",
              "GyMMMEd, Hmsv": "E d MMM y G, HH:mm:ss v",
              "M, Hmsv": "L, HH:mm:ss v",
              "Md, Hmsv": "d-M, HH:mm:ss v",
              "MEd, Hmsv": "E d-M, HH:mm:ss v",
              "MMM, Hmsv": "LLL, HH:mm:ss v",
              "MMMd, Hmsv": "d MMM, HH:mm:ss v",
              "MMMEd, Hmsv": "E d MMM, HH:mm:ss v",
              "MMMMd, Hmsv": "d MMMM, HH:mm:ss v",
              "y, Hmsv": "y, HH:mm:ss v",
              "yM, Hmsv": "M-y, HH:mm:ss v",
              "yMd, Hmsv": "d-M-y, HH:mm:ss v",
              "yMEd, Hmsv": "E d-M-y, HH:mm:ss v",
              "yMMM, Hmsv": "MMM y, HH:mm:ss v",
              "yMMMd, Hmsv": "d MMM y, HH:mm:ss v",
              "yMMMEd, Hmsv": "E d MMM y, HH:mm:ss v",
              "yMMMM, Hmsv": "MMMM y, HH:mm:ss v",
              "EEEE d MMMM y, hmv": "EEEE d MMMM y, h:mm a v",
              "d MMMM y, hmv": "d MMMM y, h:mm a v",
              "d MMM y, hmv": "d MMM y, h:mm a v",
              "dd-MM-y, hmv": "dd-MM-y, h:mm a v",
              "d, hmv": "d, h:mm a v",
              "E, hmv": "ccc, h:mm a v",
              "Ed, hmv": "E d, h:mm a v",
              "Gy, hmv": "y G, h:mm a v",
              "GyMd, hmv": "d/M/y GGGGG, h:mm a v",
              "GyMMM, hmv": "MMM y G, h:mm a v",
              "GyMMMd, hmv": "d MMM y G, h:mm a v",
              "GyMMMEd, hmv": "E d MMM y G, h:mm a v",
              "M, hmv": "L, h:mm a v",
              "Md, hmv": "d-M, h:mm a v",
              "MEd, hmv": "E d-M, h:mm a v",
              "MMM, hmv": "LLL, h:mm a v",
              "MMMd, hmv": "d MMM, h:mm a v",
              "MMMEd, hmv": "E d MMM, h:mm a v",
              "MMMMd, hmv": "d MMMM, h:mm a v",
              "y, hmv": "y, h:mm a v",
              "yM, hmv": "M-y, h:mm a v",
              "yMd, hmv": "d-M-y, h:mm a v",
              "yMEd, hmv": "E d-M-y, h:mm a v",
              "yMMM, hmv": "MMM y, h:mm a v",
              "yMMMd, hmv": "d MMM y, h:mm a v",
              "yMMMEd, hmv": "E d MMM y, h:mm a v",
              "yMMMM, hmv": "MMMM y, h:mm a v",
              "EEEE d MMMM y, Hmv": "EEEE d MMMM y, HH:mm v",
              "d MMMM y, Hmv": "d MMMM y, HH:mm v",
              "d MMM y, Hmv": "d MMM y, HH:mm v",
              "dd-MM-y, Hmv": "dd-MM-y, HH:mm v",
              "d, Hmv": "d, HH:mm v",
              "E, Hmv": "ccc, HH:mm v",
              "Ed, Hmv": "E d, HH:mm v",
              "Gy, Hmv": "y G, HH:mm v",
              "GyMd, Hmv": "d/M/y GGGGG, HH:mm v",
              "GyMMM, Hmv": "MMM y G, HH:mm v",
              "GyMMMd, Hmv": "d MMM y G, HH:mm v",
              "GyMMMEd, Hmv": "E d MMM y G, HH:mm v",
              "M, Hmv": "L, HH:mm v",
              "Md, Hmv": "d-M, HH:mm v",
              "MEd, Hmv": "E d-M, HH:mm v",
              "MMM, Hmv": "LLL, HH:mm v",
              "MMMd, Hmv": "d MMM, HH:mm v",
              "MMMEd, Hmv": "E d MMM, HH:mm v",
              "MMMMd, Hmv": "d MMMM, HH:mm v",
              "y, Hmv": "y, HH:mm v",
              "yM, Hmv": "M-y, HH:mm v",
              "yMd, Hmv": "d-M-y, HH:mm v",
              "yMEd, Hmv": "E d-M-y, HH:mm v",
              "yMMM, Hmv": "MMM y, HH:mm v",
              "yMMMd, Hmv": "d MMM y, HH:mm v",
              "yMMMEd, Hmv": "E d MMM y, HH:mm v",
              "yMMMM, Hmv": "MMMM y, HH:mm v",
              "EEEE d MMMM y, ms": "EEEE d MMMM y, mm:ss",
              "d MMMM y, ms": "d MMMM y, mm:ss",
              "d MMM y, ms": "d MMM y, mm:ss",
              "dd-MM-y, ms": "dd-MM-y, mm:ss",
              "d, ms": "d, mm:ss",
              "E, ms": "ccc, mm:ss",
              "Ed, ms": "E d, mm:ss",
              "Gy, ms": "y G, mm:ss",
              "GyMd, ms": "d/M/y GGGGG, mm:ss",
              "GyMMM, ms": "MMM y G, mm:ss",
              "GyMMMd, ms": "d MMM y G, mm:ss",
              "GyMMMEd, ms": "E d MMM y G, mm:ss",
              "M, ms": "L, mm:ss",
              "Md, ms": "d-M, mm:ss",
              "MEd, ms": "E d-M, mm:ss",
              "MMM, ms": "LLL, mm:ss",
              "MMMd, ms": "d MMM, mm:ss",
              "MMMEd, ms": "E d MMM, mm:ss",
              "MMMMd, ms": "d MMMM, mm:ss",
              "y, ms": "y, mm:ss",
              "yM, ms": "M-y, mm:ss",
              "yMd, ms": "d-M-y, mm:ss",
              "yMEd, ms": "E d-M-y, mm:ss",
              "yMMM, ms": "MMM y, mm:ss",
              "yMMMd, ms": "d MMM y, mm:ss",
              "yMMMEd, ms": "E d MMM y, mm:ss",
              "yMMMM, ms": "MMMM y, mm:ss"
            }
          },
          "intervalFormats": {
            "intervalFormatFallback": "{0} – {1}",
            "Bh": {
              "B": "h B – h B",
              "h": "h–h B"
            },
            "Bhm": {
              "B": "h:mm B – h:mm B",
              "h": "h:mm–h:mm B",
              "m": "h:mm–h:mm B"
            },
            "d": {
              "d": "d–d"
            },
            "Gy": {
              "G": "y G – y G",
              "y": "y – y G"
            },
            "GyM": {
              "G": "M-y GGGGG – M-y GGGGG",
              "M": "M-y – M-y GGGGG",
              "y": "M-y – M-y GGGGG"
            },
            "GyMd": {
              "d": "d-M-y – d-M-y GGGGG",
              "G": "d-M-y GGGGG – d-M-y GGGGG",
              "M": "d-M-y – d-M-y GGGGG",
              "y": "d-M-y – d-M-y GGGGG"
            },
            "GyMEd": {
              "d": "E d-M-y – E d-M-y GGGGG",
              "G": "E d-M-y GGGGG – E d-M-y GGGGG",
              "M": "E d-M-y – E d-M-y GGGGG",
              "y": "E d-M-y – E d-M-y GGGGG"
            },
            "GyMMM": {
              "G": "MMM y G – MMM y G",
              "M": "MMM – MMM y G",
              "y": "MMM y – MMM y G"
            },
            "GyMMMd": {
              "d": "d–d MMM y G",
              "G": "d MMM y G – d MMM y G",
              "M": "d MMM – d MMM y G",
              "y": "d MMM y – d MMM y G"
            },
            "GyMMMEd": {
              "d": "E d MMM – E d MMM y G",
              "G": "E d MMM y G – E d MMM y G",
              "M": "E d MMM – E d MMM y G",
              "y": "E d MMM y – E d MMM y G"
            },
            "h": {
              "a": "h a – h a",
              "h": "h–h a"
            },
            "H": {
              "H": "HH–HH"
            },
            "hm": {
              "a": "h:mm a – h:mm a",
              "h": "h:mm–h:mm a",
              "m": "h:mm–h:mm a"
            },
            "Hm": {
              "H": "HH:mm–HH:mm",
              "m": "HH:mm–HH:mm"
            },
            "hmv": {
              "a": "h:mm a – h:mm a v",
              "h": "h:mm–h:mm a v",
              "m": "h:mm–h:mm a v"
            },
            "Hmv": {
              "H": "HH:mm–HH:mm v",
              "m": "HH:mm–HH:mm v"
            },
            "hv": {
              "a": "h a – h a v",
              "h": "h–h a v"
            },
            "Hv": {
              "H": "HH–HH v"
            },
            "M": {
              "M": "M–M"
            },
            "Md": {
              "d": "dd-MM – dd-MM",
              "M": "dd-MM – dd-MM"
            },
            "MEd": {
              "d": "E dd-MM – E dd-MM",
              "M": "E dd-MM – E dd-MM"
            },
            "MMM": {
              "M": "MMM–MMM"
            },
            "MMMd": {
              "d": "d–d MMM",
              "M": "d MMM – d MMM"
            },
            "MMMEd": {
              "d": "E d – E d MMM",
              "M": "E d MMM – E d MMM"
            },
            "MMMM": {
              "M": "MMMM–MMMM"
            },
            "y": {
              "y": "y–y"
            },
            "yM": {
              "M": "MM-y – MM-y",
              "y": "MM-y – MM-y"
            },
            "yMd": {
              "d": "dd-MM-y – dd-MM-y",
              "M": "dd-MM-y – dd-MM-y",
              "y": "dd-MM-y – dd-MM-y"
            },
            "yMEd": {
              "d": "E dd-MM-y – E dd-MM-y",
              "M": "E dd-MM-y – E dd-MM-y",
              "y": "E dd-MM-y – E dd-MM-y"
            },
            "yMMM": {
              "M": "MMM–MMM y",
              "y": "MMM y – MMM y"
            },
            "yMMMd": {
              "d": "d–d MMM y",
              "M": "d MMM – d MMM y",
              "y": "d MMM y – d MMM y"
            },
            "yMMMEd": {
              "d": "E d – E d MMM y",
              "M": "E d MMM – E d MMM y",
              "y": "E d MMM y – E d MMM y"
            },
            "yMMMM": {
              "M": "MMMM–MMMM y",
              "y": "MMMM y – MMMM y"
            }
          },
          "hourCycle": "h23",
          "nu": [
            "latn"
          ],
          "ca": [
            "gregory"
          ],
          "hc": [
            "h23",
            ""
          ]
        },
        "locale": "nl"
      }
    );
  }
  if (Intl.NumberFormat && typeof Intl.NumberFormat.__addLocaleData === "function") {
    Intl.NumberFormat.__addLocaleData({
      "data": {
        "currencies": {
          "ADP": {
            "displayName": {
              "other": "Andorrese peseta"
            },
            "narrow": "ADP",
            "symbol": "ADP"
          },
          "AED": {
            "displayName": {
              "other": "VAE-dirham"
            },
            "narrow": "AED",
            "symbol": "AED"
          },
          "AFA": {
            "displayName": {
              "other": "Afghani (AFA)"
            },
            "narrow": "AFA",
            "symbol": "AFA"
          },
          "AFN": {
            "displayName": {
              "other": "Afghaanse afghani"
            },
            "narrow": "؋",
            "symbol": "AFN"
          },
          "ALK": {
            "displayName": {
              "other": "Albanese lek (1946–1965)"
            },
            "narrow": "ALK",
            "symbol": "ALK"
          },
          "ALL": {
            "displayName": {
              "other": "Albanese lek"
            },
            "narrow": "ALL",
            "symbol": "ALL"
          },
          "AMD": {
            "displayName": {
              "other": "Armeense dram"
            },
            "narrow": "֏",
            "symbol": "AMD"
          },
          "ANG": {
            "displayName": {
              "other": "Nederlands-Antilliaanse gulden"
            },
            "narrow": "ANG",
            "symbol": "ANG"
          },
          "AOA": {
            "displayName": {
              "other": "Angolese kwanza"
            },
            "narrow": "Kz",
            "symbol": "AOA"
          },
          "AOK": {
            "displayName": {
              "other": "Angolese kwanza (1977–1990)"
            },
            "narrow": "AOK",
            "symbol": "AOK"
          },
          "AON": {
            "displayName": {
              "other": "Angolese nieuwe kwanza (1990–2000)"
            },
            "narrow": "AON",
            "symbol": "AON"
          },
          "AOR": {
            "displayName": {
              "other": "Angolese kwanza reajustado (1995–1999)"
            },
            "narrow": "AOR",
            "symbol": "AOR"
          },
          "ARA": {
            "displayName": {
              "other": "Argentijnse austral"
            },
            "narrow": "ARA",
            "symbol": "ARA"
          },
          "ARL": {
            "displayName": {
              "other": "Argentijnse peso ley (1970–1983)"
            },
            "narrow": "ARL",
            "symbol": "ARL"
          },
          "ARM": {
            "displayName": {
              "other": "Argentijnse peso (1881–1970)"
            },
            "narrow": "ARM",
            "symbol": "ARM"
          },
          "ARP": {
            "displayName": {
              "other": "Argentijnse peso (1983–1985)"
            },
            "narrow": "ARP",
            "symbol": "ARP"
          },
          "ARS": {
            "displayName": {
              "other": "Argentijnse peso"
            },
            "narrow": "$",
            "symbol": "ARS"
          },
          "ATS": {
            "displayName": {
              "other": "Oostenrijkse schilling"
            },
            "narrow": "ATS",
            "symbol": "ATS"
          },
          "AUD": {
            "displayName": {
              "other": "Australische dollar"
            },
            "narrow": "$",
            "symbol": "AU$"
          },
          "AWG": {
            "displayName": {
              "other": "Arubaanse gulden"
            },
            "narrow": "AWG",
            "symbol": "AWG"
          },
          "AZM": {
            "displayName": {
              "other": "Azerbeidzjaanse manat (1993–2006)"
            },
            "narrow": "AZM",
            "symbol": "AZM"
          },
          "AZN": {
            "displayName": {
              "other": "Azerbeidzjaanse manat"
            },
            "narrow": "₼",
            "symbol": "AZN"
          },
          "BAD": {
            "displayName": {
              "other": "Bosnische dinar"
            },
            "narrow": "BAD",
            "symbol": "BAD"
          },
          "BAM": {
            "displayName": {
              "other": "Bosnische convertibele mark"
            },
            "narrow": "KM",
            "symbol": "BAM"
          },
          "BAN": {
            "displayName": {
              "other": "Nieuwe Bosnische dinar (1994–1997)"
            },
            "narrow": "BAN",
            "symbol": "BAN"
          },
          "BBD": {
            "displayName": {
              "other": "Barbadaanse dollar"
            },
            "narrow": "$",
            "symbol": "BBD"
          },
          "BDT": {
            "displayName": {
              "other": "Bengalese taka"
            },
            "narrow": "৳",
            "symbol": "BDT"
          },
          "BEC": {
            "displayName": {
              "other": "Belgische frank (convertibel)"
            },
            "narrow": "BEC",
            "symbol": "BEC"
          },
          "BEF": {
            "displayName": {
              "other": "Belgische frank"
            },
            "narrow": "BEF",
            "symbol": "BEF"
          },
          "BEL": {
            "displayName": {
              "other": "Belgische frank (financieel)"
            },
            "narrow": "BEL",
            "symbol": "BEL"
          },
          "BGL": {
            "displayName": {
              "other": "Bulgaarse harde lev"
            },
            "narrow": "BGL",
            "symbol": "BGL"
          },
          "BGM": {
            "displayName": {
              "other": "Bulgaarse socialistische lev"
            },
            "narrow": "BGM",
            "symbol": "BGM"
          },
          "BGN": {
            "displayName": {
              "one": "Bulgaarse lev",
              "other": "Bulgaarse leva"
            },
            "narrow": "BGN",
            "symbol": "BGN"
          },
          "BGO": {
            "displayName": {
              "other": "Bulgaarse lev (1879–1952)"
            },
            "narrow": "BGO",
            "symbol": "BGO"
          },
          "BHD": {
            "displayName": {
              "other": "Bahreinse dinar"
            },
            "narrow": "BHD",
            "symbol": "BHD"
          },
          "BIF": {
            "displayName": {
              "other": "Burundese frank"
            },
            "narrow": "BIF",
            "symbol": "BIF"
          },
          "BMD": {
            "displayName": {
              "other": "Bermuda-dollar"
            },
            "narrow": "$",
            "symbol": "BMD"
          },
          "BND": {
            "displayName": {
              "other": "Bruneise dollar"
            },
            "narrow": "$",
            "symbol": "BND"
          },
          "BOB": {
            "displayName": {
              "other": "Boliviaanse boliviano"
            },
            "narrow": "Bs",
            "symbol": "BOB"
          },
          "BOL": {
            "displayName": {
              "other": "Boliviaanse boliviano (1863–1963)"
            },
            "narrow": "BOL",
            "symbol": "BOL"
          },
          "BOP": {
            "displayName": {
              "other": "Boliviaanse peso"
            },
            "narrow": "BOP",
            "symbol": "BOP"
          },
          "BOV": {
            "displayName": {
              "other": "Boliviaanse mvdol"
            },
            "narrow": "BOV",
            "symbol": "BOV"
          },
          "BRB": {
            "displayName": {
              "other": "Braziliaanse cruzeiro novo (1967–1986)"
            },
            "narrow": "BRB",
            "symbol": "BRB"
          },
          "BRC": {
            "displayName": {
              "other": "Braziliaanse cruzado"
            },
            "narrow": "BRC",
            "symbol": "BRC"
          },
          "BRE": {
            "displayName": {
              "other": "Braziliaanse cruzeiro (1990–1993)"
            },
            "narrow": "BRE",
            "symbol": "BRE"
          },
          "BRL": {
            "displayName": {
              "other": "Braziliaanse real"
            },
            "narrow": "R$",
            "symbol": "R$"
          },
          "BRN": {
            "displayName": {
              "other": "Braziliaanse cruzado novo"
            },
            "narrow": "BRN",
            "symbol": "BRN"
          },
          "BRR": {
            "displayName": {
              "other": "Braziliaanse cruzeiro"
            },
            "narrow": "BRR",
            "symbol": "BRR"
          },
          "BRZ": {
            "displayName": {
              "other": "Braziliaanse cruzeiro (1942–1967)"
            },
            "narrow": "BRZ",
            "symbol": "BRZ"
          },
          "BSD": {
            "displayName": {
              "other": "Bahamaanse dollar"
            },
            "narrow": "$",
            "symbol": "BSD"
          },
          "BTN": {
            "displayName": {
              "other": "Bhutaanse ngultrum"
            },
            "narrow": "BTN",
            "symbol": "BTN"
          },
          "BUK": {
            "displayName": {
              "other": "Birmese kyat"
            },
            "narrow": "BUK",
            "symbol": "BUK"
          },
          "BWP": {
            "displayName": {
              "other": "Botswaanse pula"
            },
            "narrow": "P",
            "symbol": "BWP"
          },
          "BYB": {
            "displayName": {
              "other": "Wit-Russische nieuwe roebel (1994–1999)"
            },
            "narrow": "BYB",
            "symbol": "BYB"
          },
          "BYN": {
            "displayName": {
              "other": "Belarussische roebel"
            },
            "narrow": "р.",
            "symbol": "BYN"
          },
          "BYR": {
            "displayName": {
              "other": "Wit-Russische roebel (2000–2016)"
            },
            "narrow": "BYR",
            "symbol": "BYR"
          },
          "BZD": {
            "displayName": {
              "other": "Belizaanse dollar"
            },
            "narrow": "$",
            "symbol": "BZD"
          },
          "CAD": {
            "displayName": {
              "other": "Canadese dollar"
            },
            "narrow": "$",
            "symbol": "C$"
          },
          "CDF": {
            "displayName": {
              "other": "Congolese frank"
            },
            "narrow": "CDF",
            "symbol": "CDF"
          },
          "CHE": {
            "displayName": {
              "other": "WIR euro"
            },
            "narrow": "CHE",
            "symbol": "CHE"
          },
          "CHF": {
            "displayName": {
              "other": "Zwitserse frank"
            },
            "narrow": "CHF",
            "symbol": "CHF"
          },
          "CHW": {
            "displayName": {
              "other": "WIR franc"
            },
            "narrow": "CHW",
            "symbol": "CHW"
          },
          "CLE": {
            "displayName": {
              "other": "Chileense escudo"
            },
            "narrow": "CLE",
            "symbol": "CLE"
          },
          "CLF": {
            "displayName": {
              "other": "Chileense unidades de fomento"
            },
            "narrow": "CLF",
            "symbol": "CLF"
          },
          "CLP": {
            "displayName": {
              "other": "Chileense peso"
            },
            "narrow": "$",
            "symbol": "CLP"
          },
          "CNH": {
            "displayName": {
              "other": "Chinese yuan (offshore)"
            },
            "narrow": "CNH",
            "symbol": "CNH"
          },
          "CNX": {
            "displayName": {
              "other": "dollar van de Chinese Volksbank"
            },
            "narrow": "CNX",
            "symbol": "CNX"
          },
          "CNY": {
            "displayName": {
              "other": "Chinese yuan"
            },
            "narrow": "¥",
            "symbol": "CN¥"
          },
          "COP": {
            "displayName": {
              "other": "Colombiaanse peso"
            },
            "narrow": "$",
            "symbol": "COP"
          },
          "COU": {
            "displayName": {
              "other": "Unidad de Valor Real"
            },
            "narrow": "COU",
            "symbol": "COU"
          },
          "CRC": {
            "displayName": {
              "other": "Costa Ricaanse colon"
            },
            "narrow": "₡",
            "symbol": "CRC"
          },
          "CSD": {
            "displayName": {
              "other": "Oude Servische dinar"
            },
            "narrow": "CSD",
            "symbol": "CSD"
          },
          "CSK": {
            "displayName": {
              "other": "Tsjechoslowaakse harde koruna"
            },
            "narrow": "CSK",
            "symbol": "CSK"
          },
          "CUC": {
            "displayName": {
              "other": "Cubaanse convertibele peso"
            },
            "narrow": "$",
            "symbol": "CUC"
          },
          "CUP": {
            "displayName": {
              "other": "Cubaanse peso"
            },
            "narrow": "$",
            "symbol": "CUP"
          },
          "CVE": {
            "displayName": {
              "other": "Kaapverdische escudo"
            },
            "narrow": "CVE",
            "symbol": "CVE"
          },
          "CYP": {
            "displayName": {
              "other": "Cyprisch pond"
            },
            "narrow": "CYP",
            "symbol": "CYP"
          },
          "CZK": {
            "displayName": {
              "one": "Tsjechische kroon",
              "other": "Tsjechische kronen"
            },
            "narrow": "Kč",
            "symbol": "CZK"
          },
          "DDM": {
            "displayName": {
              "other": "Oost-Duitse ostmark"
            },
            "narrow": "DDM",
            "symbol": "DDM"
          },
          "DEM": {
            "displayName": {
              "other": "Duitse mark"
            },
            "narrow": "DEM",
            "symbol": "DEM"
          },
          "DJF": {
            "displayName": {
              "other": "Djiboutiaanse frank"
            },
            "narrow": "DJF",
            "symbol": "DJF"
          },
          "DKK": {
            "displayName": {
              "one": "Deense kroon",
              "other": "Deense kronen"
            },
            "narrow": "kr",
            "symbol": "DKK"
          },
          "DOP": {
            "displayName": {
              "other": "Dominicaanse peso"
            },
            "narrow": "$",
            "symbol": "DOP"
          },
          "DZD": {
            "displayName": {
              "other": "Algerijnse dinar"
            },
            "narrow": "DZD",
            "symbol": "DZD"
          },
          "ECS": {
            "displayName": {
              "other": "Ecuadoraanse sucre"
            },
            "narrow": "ECS",
            "symbol": "ECS"
          },
          "ECV": {
            "displayName": {
              "other": "Ecuadoraanse unidad de valor constante (UVC)"
            },
            "narrow": "ECV",
            "symbol": "ECV"
          },
          "EEK": {
            "displayName": {
              "other": "Estlandse kroon"
            },
            "narrow": "EEK",
            "symbol": "EEK"
          },
          "EGP": {
            "displayName": {
              "other": "Egyptisch pond"
            },
            "narrow": "E£",
            "symbol": "EGP"
          },
          "ERN": {
            "displayName": {
              "other": "Eritrese nakfa"
            },
            "narrow": "ERN",
            "symbol": "ERN"
          },
          "ESA": {
            "displayName": {
              "other": "Spaanse peseta (account A)"
            },
            "narrow": "ESA",
            "symbol": "ESA"
          },
          "ESB": {
            "displayName": {
              "other": "Spaanse peseta (convertibele account)"
            },
            "narrow": "ESB",
            "symbol": "ESB"
          },
          "ESP": {
            "displayName": {
              "other": "Spaanse peseta"
            },
            "narrow": "₧",
            "symbol": "ESP"
          },
          "ETB": {
            "displayName": {
              "other": "Ethiopische birr"
            },
            "narrow": "ETB",
            "symbol": "ETB"
          },
          "EUR": {
            "displayName": {
              "other": "euro"
            },
            "narrow": "€",
            "symbol": "€"
          },
          "FIM": {
            "displayName": {
              "other": "Finse markka"
            },
            "narrow": "FIM",
            "symbol": "FIM"
          },
          "FJD": {
            "displayName": {
              "other": "Fiji-dollar"
            },
            "narrow": "$",
            "symbol": "FJ$"
          },
          "FKP": {
            "displayName": {
              "other": "Falklandeilands pond"
            },
            "narrow": "£",
            "symbol": "FKP"
          },
          "FRF": {
            "displayName": {
              "other": "Franse franc"
            },
            "narrow": "FRF",
            "symbol": "FRF"
          },
          "GBP": {
            "displayName": {
              "other": "Britse pond"
            },
            "narrow": "£",
            "symbol": "£"
          },
          "GEK": {
            "displayName": {
              "other": "Georgische kupon larit"
            },
            "narrow": "GEK",
            "symbol": "GEK"
          },
          "GEL": {
            "displayName": {
              "other": "Georgische lari"
            },
            "narrow": "₾",
            "symbol": "GEL"
          },
          "GHC": {
            "displayName": {
              "other": "Ghanese cedi (1979–2007)"
            },
            "narrow": "GHC",
            "symbol": "GHC"
          },
          "GHS": {
            "displayName": {
              "other": "Ghanese cedi"
            },
            "narrow": "GH₵",
            "symbol": "GHS"
          },
          "GIP": {
            "displayName": {
              "other": "Gibraltarees pond"
            },
            "narrow": "£",
            "symbol": "GIP"
          },
          "GMD": {
            "displayName": {
              "other": "Gambiaanse dalasi"
            },
            "narrow": "GMD",
            "symbol": "GMD"
          },
          "GNF": {
            "displayName": {
              "other": "Guinese frank"
            },
            "narrow": "FG",
            "symbol": "GNF"
          },
          "GNS": {
            "displayName": {
              "other": "Guinese syli"
            },
            "narrow": "GNS",
            "symbol": "GNS"
          },
          "GQE": {
            "displayName": {
              "other": "Equatoriaal-Guinese ekwele guineana"
            },
            "narrow": "GQE",
            "symbol": "GQE"
          },
          "GRD": {
            "displayName": {
              "other": "Griekse drachme"
            },
            "narrow": "GRD",
            "symbol": "GRD"
          },
          "GTQ": {
            "displayName": {
              "other": "Guatemalteekse quetzal"
            },
            "narrow": "Q",
            "symbol": "GTQ"
          },
          "GWE": {
            "displayName": {
              "other": "Portugees-Guinese escudo"
            },
            "narrow": "GWE",
            "symbol": "GWE"
          },
          "GWP": {
            "displayName": {
              "other": "Guinee-Bissause peso"
            },
            "narrow": "GWP",
            "symbol": "GWP"
          },
          "GYD": {
            "displayName": {
              "other": "Guyaanse dollar"
            },
            "narrow": "$",
            "symbol": "GYD"
          },
          "HKD": {
            "displayName": {
              "other": "Hongkongse dollar"
            },
            "narrow": "$",
            "symbol": "HK$"
          },
          "HNL": {
            "displayName": {
              "other": "Hondurese lempira"
            },
            "narrow": "L",
            "symbol": "HNL"
          },
          "HRD": {
            "displayName": {
              "other": "Kroatische dinar"
            },
            "narrow": "HRD",
            "symbol": "HRD"
          },
          "HRK": {
            "displayName": {
              "other": "Kroatische kuna"
            },
            "narrow": "kn",
            "symbol": "HRK"
          },
          "HTG": {
            "displayName": {
              "other": "Haïtiaanse gourde"
            },
            "narrow": "HTG",
            "symbol": "HTG"
          },
          "HUF": {
            "displayName": {
              "other": "Hongaarse forint"
            },
            "narrow": "Ft",
            "symbol": "HUF"
          },
          "IDR": {
            "displayName": {
              "other": "Indonesische roepia"
            },
            "narrow": "Rp",
            "symbol": "IDR"
          },
          "IEP": {
            "displayName": {
              "other": "Iers pond"
            },
            "narrow": "IEP",
            "symbol": "IEP"
          },
          "ILP": {
            "displayName": {
              "other": "Israëlisch pond"
            },
            "narrow": "ILP",
            "symbol": "ILP"
          },
          "ILR": {
            "displayName": {
              "other": "Israëlische sjekel (1980–1985)"
            },
            "narrow": "ILR",
            "symbol": "ILR"
          },
          "ILS": {
            "displayName": {
              "other": "Israëlische nieuwe shekel"
            },
            "narrow": "₪",
            "symbol": "₪"
          },
          "INR": {
            "displayName": {
              "other": "Indiase roepie"
            },
            "narrow": "₹",
            "symbol": "₹"
          },
          "IQD": {
            "displayName": {
              "other": "Iraakse dinar"
            },
            "narrow": "IQD",
            "symbol": "IQD"
          },
          "IRR": {
            "displayName": {
              "other": "Iraanse rial"
            },
            "narrow": "IRR",
            "symbol": "IRR"
          },
          "ISJ": {
            "displayName": {
              "one": "IJslandse kroon (1918–1981)",
              "other": "IJslandse kronen (1918–1981)"
            },
            "narrow": "ISJ",
            "symbol": "ISJ"
          },
          "ISK": {
            "displayName": {
              "one": "IJslandse kroon",
              "other": "IJslandse kronen"
            },
            "narrow": "kr",
            "symbol": "ISK"
          },
          "ITL": {
            "displayName": {
              "other": "Italiaanse lire"
            },
            "narrow": "ITL",
            "symbol": "ITL"
          },
          "JMD": {
            "displayName": {
              "other": "Jamaicaanse dollar"
            },
            "narrow": "$",
            "symbol": "JMD"
          },
          "JOD": {
            "displayName": {
              "other": "Jordaanse dinar"
            },
            "narrow": "JOD",
            "symbol": "JOD"
          },
          "JPY": {
            "displayName": {
              "other": "Japanse yen"
            },
            "narrow": "¥",
            "symbol": "JP¥"
          },
          "KES": {
            "displayName": {
              "other": "Keniaanse shilling"
            },
            "narrow": "KES",
            "symbol": "KES"
          },
          "KGS": {
            "displayName": {
              "other": "Kirgizische som"
            },
            "narrow": "⃀",
            "symbol": "KGS"
          },
          "KHR": {
            "displayName": {
              "other": "Cambodjaanse riel"
            },
            "narrow": "៛",
            "symbol": "KHR"
          },
          "KMF": {
            "displayName": {
              "other": "Comorese frank"
            },
            "narrow": "CF",
            "symbol": "KMF"
          },
          "KPW": {
            "displayName": {
              "other": "Noord-Koreaanse won"
            },
            "narrow": "₩",
            "symbol": "KPW"
          },
          "KRH": {
            "displayName": {
              "other": "Zuid-Koreaanse hwan (1953–1962)"
            },
            "narrow": "KRH",
            "symbol": "KRH"
          },
          "KRO": {
            "displayName": {
              "other": "oude Zuid-Koreaanse won (1945–1953)"
            },
            "narrow": "KRO",
            "symbol": "KRO"
          },
          "KRW": {
            "displayName": {
              "other": "Zuid-Koreaanse won"
            },
            "narrow": "₩",
            "symbol": "₩"
          },
          "KWD": {
            "displayName": {
              "other": "Koeweitse dinar"
            },
            "narrow": "KWD",
            "symbol": "KWD"
          },
          "KYD": {
            "displayName": {
              "other": "Kaaimaneilandse dollar"
            },
            "narrow": "$",
            "symbol": "KYD"
          },
          "KZT": {
            "displayName": {
              "other": "Kazachse tenge"
            },
            "narrow": "₸",
            "symbol": "KZT"
          },
          "LAK": {
            "displayName": {
              "other": "Laotiaanse kip"
            },
            "narrow": "₭",
            "symbol": "LAK"
          },
          "LBP": {
            "displayName": {
              "other": "Libanees pond"
            },
            "narrow": "L£",
            "symbol": "LBP"
          },
          "LKR": {
            "displayName": {
              "other": "Sri Lankaanse roepie"
            },
            "narrow": "Rs",
            "symbol": "LKR"
          },
          "LRD": {
            "displayName": {
              "other": "Liberiaanse dollar"
            },
            "narrow": "$",
            "symbol": "LRD"
          },
          "LSL": {
            "displayName": {
              "other": "Lesothaanse loti"
            },
            "narrow": "LSL",
            "symbol": "LSL"
          },
          "LTL": {
            "displayName": {
              "other": "Litouwse litas"
            },
            "narrow": "Lt",
            "symbol": "LTL"
          },
          "LTT": {
            "displayName": {
              "other": "Litouwse talonas"
            },
            "narrow": "LTT",
            "symbol": "LTT"
          },
          "LUC": {
            "displayName": {
              "other": "Luxemburgse convertibele franc"
            },
            "narrow": "LUC",
            "symbol": "LUC"
          },
          "LUF": {
            "displayName": {
              "other": "Luxemburgse frank"
            },
            "narrow": "LUF",
            "symbol": "LUF"
          },
          "LUL": {
            "displayName": {
              "other": "Luxemburgse financiële franc"
            },
            "narrow": "LUL",
            "symbol": "LUL"
          },
          "LVL": {
            "displayName": {
              "other": "Letse lats"
            },
            "narrow": "Ls",
            "symbol": "LVL"
          },
          "LVR": {
            "displayName": {
              "other": "Letse roebel"
            },
            "narrow": "LVR",
            "symbol": "LVR"
          },
          "LYD": {
            "displayName": {
              "other": "Libische dinar"
            },
            "narrow": "LYD",
            "symbol": "LYD"
          },
          "MAD": {
            "displayName": {
              "other": "Marokkaanse dirham"
            },
            "narrow": "MAD",
            "symbol": "MAD"
          },
          "MAF": {
            "displayName": {
              "other": "Marokkaanse franc"
            },
            "narrow": "MAF",
            "symbol": "MAF"
          },
          "MCF": {
            "displayName": {
              "other": "Monegaskische frank"
            },
            "narrow": "MCF",
            "symbol": "MCF"
          },
          "MDC": {
            "displayName": {
              "other": "Moldavische cupon"
            },
            "narrow": "MDC",
            "symbol": "MDC"
          },
          "MDL": {
            "displayName": {
              "other": "Moldavische leu"
            },
            "narrow": "MDL",
            "symbol": "MDL"
          },
          "MGA": {
            "displayName": {
              "other": "Malagassische ariary"
            },
            "narrow": "Ar",
            "symbol": "MGA"
          },
          "MGF": {
            "displayName": {
              "other": "Malagassische franc"
            },
            "narrow": "MGF",
            "symbol": "MGF"
          },
          "MKD": {
            "displayName": {
              "other": "Macedonische denar"
            },
            "narrow": "MKD",
            "symbol": "MKD"
          },
          "MKN": {
            "displayName": {
              "other": "Macedonische denar (1992–1993)"
            },
            "narrow": "MKN",
            "symbol": "MKN"
          },
          "MLF": {
            "displayName": {
              "other": "Malinese franc"
            },
            "narrow": "MLF",
            "symbol": "MLF"
          },
          "MMK": {
            "displayName": {
              "other": "Myanmarese kyat"
            },
            "narrow": "K",
            "symbol": "MMK"
          },
          "MNT": {
            "displayName": {
              "other": "Mongoolse tugrik"
            },
            "narrow": "₮",
            "symbol": "MNT"
          },
          "MOP": {
            "displayName": {
              "other": "Macause pataca"
            },
            "narrow": "MOP",
            "symbol": "MOP"
          },
          "MRO": {
            "displayName": {
              "other": "Mauritaanse ouguiya (1973–2017)"
            },
            "narrow": "MRO",
            "symbol": "MRO"
          },
          "MRU": {
            "displayName": {
              "other": "Mauritaanse ouguiya"
            },
            "narrow": "MRU",
            "symbol": "MRU"
          },
          "MTL": {
            "displayName": {
              "other": "Maltese lire"
            },
            "narrow": "MTL",
            "symbol": "MTL"
          },
          "MTP": {
            "displayName": {
              "other": "Maltees pond"
            },
            "narrow": "MTP",
            "symbol": "MTP"
          },
          "MUR": {
            "displayName": {
              "other": "Mauritiaanse roepie"
            },
            "narrow": "Rs",
            "symbol": "MUR"
          },
          "MVP": {
            "displayName": {
              "other": "Maldivische roepie"
            },
            "narrow": "MVP",
            "symbol": "MVP"
          },
          "MVR": {
            "displayName": {
              "other": "Maldivische rufiyaa"
            },
            "narrow": "MVR",
            "symbol": "MVR"
          },
          "MWK": {
            "displayName": {
              "other": "Malawische kwacha"
            },
            "narrow": "MWK",
            "symbol": "MWK"
          },
          "MXN": {
            "displayName": {
              "other": "Mexicaanse peso"
            },
            "narrow": "$",
            "symbol": "MX$"
          },
          "MXP": {
            "displayName": {
              "other": "Mexicaanse zilveren peso (1861–1992)"
            },
            "narrow": "MXP",
            "symbol": "MXP"
          },
          "MXV": {
            "displayName": {
              "other": "Mexicaanse unidad de inversion (UDI)"
            },
            "narrow": "MXV",
            "symbol": "MXV"
          },
          "MYR": {
            "displayName": {
              "other": "Maleisische ringgit"
            },
            "narrow": "RM",
            "symbol": "MYR"
          },
          "MZE": {
            "displayName": {
              "other": "Mozambikaanse escudo"
            },
            "narrow": "MZE",
            "symbol": "MZE"
          },
          "MZM": {
            "displayName": {
              "other": "Oude Mozambikaanse metical"
            },
            "narrow": "MZM",
            "symbol": "MZM"
          },
          "MZN": {
            "displayName": {
              "other": "Mozambikaanse metical"
            },
            "narrow": "MZN",
            "symbol": "MZN"
          },
          "NAD": {
            "displayName": {
              "other": "Namibische dollar"
            },
            "narrow": "$",
            "symbol": "NAD"
          },
          "NGN": {
            "displayName": {
              "other": "Nigeriaanse naira"
            },
            "narrow": "₦",
            "symbol": "NGN"
          },
          "NIC": {
            "displayName": {
              "other": "Nicaraguaanse córdoba (1988–1991)"
            },
            "narrow": "NIC",
            "symbol": "NIC"
          },
          "NIO": {
            "displayName": {
              "other": "Nicaraguaanse córdoba"
            },
            "narrow": "C$",
            "symbol": "NIO"
          },
          "NLG": {
            "displayName": {
              "other": "Nederlandse gulden"
            },
            "narrow": "NLG",
            "symbol": "NLG"
          },
          "NOK": {
            "displayName": {
              "one": "Noorse kroon",
              "other": "Noorse kronen"
            },
            "narrow": "kr",
            "symbol": "NOK"
          },
          "NPR": {
            "displayName": {
              "other": "Nepalese roepie"
            },
            "narrow": "Rs",
            "symbol": "NPR"
          },
          "NZD": {
            "displayName": {
              "other": "Nieuw-Zeelandse dollar"
            },
            "narrow": "$",
            "symbol": "NZ$"
          },
          "OMR": {
            "displayName": {
              "other": "Omaanse rial"
            },
            "narrow": "OMR",
            "symbol": "OMR"
          },
          "PAB": {
            "displayName": {
              "other": "Panamese balboa"
            },
            "narrow": "PAB",
            "symbol": "PAB"
          },
          "PEI": {
            "displayName": {
              "other": "Peruaanse inti"
            },
            "narrow": "PEI",
            "symbol": "PEI"
          },
          "PEN": {
            "displayName": {
              "other": "Peruaanse sol"
            },
            "narrow": "PEN",
            "symbol": "PEN"
          },
          "PES": {
            "displayName": {
              "other": "Peruaanse sol (1863–1965)"
            },
            "narrow": "PES",
            "symbol": "PES"
          },
          "PGK": {
            "displayName": {
              "other": "Papoea-Nieuw-Guinese kina"
            },
            "narrow": "PGK",
            "symbol": "PGK"
          },
          "PHP": {
            "displayName": {
              "other": "Filipijnse peso"
            },
            "narrow": "₱",
            "symbol": "PHP"
          },
          "PKR": {
            "displayName": {
              "other": "Pakistaanse roepie"
            },
            "narrow": "Rs",
            "symbol": "PKR"
          },
          "PLN": {
            "displayName": {
              "other": "Poolse zloty"
            },
            "narrow": "zł",
            "symbol": "PLN"
          },
          "PLZ": {
            "displayName": {
              "other": "Poolse zloty (1950–1995)"
            },
            "narrow": "PLZ",
            "symbol": "PLZ"
          },
          "PTE": {
            "displayName": {
              "other": "Portugese escudo"
            },
            "narrow": "PTE",
            "symbol": "PTE"
          },
          "PYG": {
            "displayName": {
              "other": "Paraguayaanse guarani"
            },
            "narrow": "₲",
            "symbol": "PYG"
          },
          "QAR": {
            "displayName": {
              "other": "Qatarese rial"
            },
            "narrow": "QAR",
            "symbol": "QAR"
          },
          "RHD": {
            "displayName": {
              "other": "Rhodesische dollar"
            },
            "narrow": "RHD",
            "symbol": "RHD"
          },
          "ROL": {
            "displayName": {
              "other": "Oude Roemeense leu"
            },
            "narrow": "ROL",
            "symbol": "ROL"
          },
          "RON": {
            "displayName": {
              "other": "Roemeense leu"
            },
            "narrow": "lei",
            "symbol": "RON"
          },
          "RSD": {
            "displayName": {
              "other": "Servische dinar"
            },
            "narrow": "RSD",
            "symbol": "RSD"
          },
          "RUB": {
            "displayName": {
              "other": "Russische roebel"
            },
            "narrow": "₽",
            "symbol": "RUB"
          },
          "RUR": {
            "displayName": {
              "other": "Russische roebel (1991–1998)"
            },
            "narrow": "р.",
            "symbol": "RUR"
          },
          "RWF": {
            "displayName": {
              "other": "Rwandese frank"
            },
            "narrow": "RF",
            "symbol": "RWF"
          },
          "SAR": {
            "displayName": {
              "other": "Saoedi-Arabische riyal"
            },
            "narrow": "SAR",
            "symbol": "SAR"
          },
          "SBD": {
            "displayName": {
              "other": "Salomon-dollar"
            },
            "narrow": "$",
            "symbol": "SI$"
          },
          "SCR": {
            "displayName": {
              "other": "Seychelse roepie"
            },
            "narrow": "SCR",
            "symbol": "SCR"
          },
          "SDD": {
            "displayName": {
              "other": "Soedanese dinar"
            },
            "narrow": "SDD",
            "symbol": "SDD"
          },
          "SDG": {
            "displayName": {
              "other": "Soedanees pond"
            },
            "narrow": "SDG",
            "symbol": "SDG"
          },
          "SDP": {
            "displayName": {
              "other": "Soedanees pond (1957–1998)"
            },
            "narrow": "SDP",
            "symbol": "SDP"
          },
          "SEK": {
            "displayName": {
              "one": "Zweedse kroon",
              "other": "Zweedse kronen"
            },
            "narrow": "kr",
            "symbol": "SEK"
          },
          "SGD": {
            "displayName": {
              "other": "Singaporese dollar"
            },
            "narrow": "$",
            "symbol": "SGD"
          },
          "SHP": {
            "displayName": {
              "other": "Sint-Heleens pond"
            },
            "narrow": "£",
            "symbol": "SHP"
          },
          "SIT": {
            "displayName": {
              "other": "Sloveense tolar"
            },
            "narrow": "SIT",
            "symbol": "SIT"
          },
          "SKK": {
            "displayName": {
              "other": "Slowaakse koruna"
            },
            "narrow": "SKK",
            "symbol": "SKK"
          },
          "SLE": {
            "displayName": {
              "other": "Sierra Leoonse leone"
            },
            "narrow": "SLE",
            "symbol": "SLE"
          },
          "SLL": {
            "displayName": {
              "other": "Sierra Leoonse leone (1964–2022)"
            },
            "narrow": "SLL",
            "symbol": "SLL"
          },
          "SOS": {
            "displayName": {
              "other": "Somalische shilling"
            },
            "narrow": "SOS",
            "symbol": "SOS"
          },
          "SRD": {
            "displayName": {
              "other": "Surinaamse dollar"
            },
            "narrow": "$",
            "symbol": "SRD"
          },
          "SRG": {
            "displayName": {
              "other": "Surinaamse gulden"
            },
            "narrow": "SRG",
            "symbol": "SRG"
          },
          "SSP": {
            "displayName": {
              "other": "Zuid-Soedanees pond"
            },
            "narrow": "£",
            "symbol": "SSP"
          },
          "STD": {
            "displayName": {
              "other": "Santomese dobra (1977–2017)"
            },
            "narrow": "STD",
            "symbol": "STD"
          },
          "STN": {
            "displayName": {
              "other": "Santomese dobra"
            },
            "narrow": "Db",
            "symbol": "STN"
          },
          "SUR": {
            "displayName": {
              "other": "Sovjet-roebel"
            },
            "narrow": "SUR",
            "symbol": "SUR"
          },
          "SVC": {
            "displayName": {
              "other": "Salvadoraanse colón"
            },
            "narrow": "SVC",
            "symbol": "SVC"
          },
          "SYP": {
            "displayName": {
              "other": "Syrisch pond"
            },
            "narrow": "£",
            "symbol": "SYP"
          },
          "SZL": {
            "displayName": {
              "other": "Swazische lilangeni"
            },
            "narrow": "SZL",
            "symbol": "SZL"
          },
          "THB": {
            "displayName": {
              "other": "Thaise baht"
            },
            "narrow": "฿",
            "symbol": "฿"
          },
          "TJR": {
            "displayName": {
              "other": "Tadzjikistaanse roebel"
            },
            "narrow": "TJR",
            "symbol": "TJR"
          },
          "TJS": {
            "displayName": {
              "other": "Tadzjiekse somoni"
            },
            "narrow": "TJS",
            "symbol": "TJS"
          },
          "TMM": {
            "displayName": {
              "other": "Turkmeense manat (1993–2009)"
            },
            "narrow": "TMM",
            "symbol": "TMM"
          },
          "TMT": {
            "displayName": {
              "other": "Turkmeense manat"
            },
            "narrow": "TMT",
            "symbol": "TMT"
          },
          "TND": {
            "displayName": {
              "other": "Tunesische dinar"
            },
            "narrow": "TND",
            "symbol": "TND"
          },
          "TOP": {
            "displayName": {
              "other": "Tongaanse paʻanga"
            },
            "narrow": "T$",
            "symbol": "TOP"
          },
          "TPE": {
            "displayName": {
              "other": "Timorese escudo"
            },
            "narrow": "TPE",
            "symbol": "TPE"
          },
          "TRL": {
            "displayName": {
              "other": "oude Turkse lira"
            },
            "narrow": "TRL",
            "symbol": "TRL"
          },
          "TRY": {
            "displayName": {
              "other": "Turkse lira"
            },
            "narrow": "₺",
            "symbol": "TRY"
          },
          "TTD": {
            "displayName": {
              "other": "Trinidad en Tobago-dollar"
            },
            "narrow": "$",
            "symbol": "TTD"
          },
          "TWD": {
            "displayName": {
              "other": "Nieuwe Taiwanese dollar"
            },
            "narrow": "NT$",
            "symbol": "NT$"
          },
          "TZS": {
            "displayName": {
              "other": "Tanzaniaanse shilling"
            },
            "narrow": "TZS",
            "symbol": "TZS"
          },
          "UAH": {
            "displayName": {
              "other": "Oekraïense hryvnia"
            },
            "narrow": "₴",
            "symbol": "UAH"
          },
          "UAK": {
            "displayName": {
              "other": "Oekraïense karbovanetz"
            },
            "narrow": "UAK",
            "symbol": "UAK"
          },
          "UGS": {
            "displayName": {
              "other": "Oegandese shilling (1966–1987)"
            },
            "narrow": "UGS",
            "symbol": "UGS"
          },
          "UGX": {
            "displayName": {
              "other": "Oegandese shilling"
            },
            "narrow": "UGX",
            "symbol": "UGX"
          },
          "USD": {
            "displayName": {
              "other": "Amerikaanse dollar"
            },
            "narrow": "$",
            "symbol": "US$"
          },
          "USN": {
            "displayName": {
              "other": "Amerikaanse dollar (volgende dag)"
            },
            "narrow": "USN",
            "symbol": "USN"
          },
          "USS": {
            "displayName": {
              "other": "Amerikaanse dollar (zelfde dag)"
            },
            "narrow": "USS",
            "symbol": "USS"
          },
          "UYI": {
            "displayName": {
              "other": "Uruguayaanse peso en geïndexeerde eenheden"
            },
            "narrow": "UYI",
            "symbol": "UYI"
          },
          "UYP": {
            "displayName": {
              "other": "Uruguayaanse peso (1975–1993)"
            },
            "narrow": "UYP",
            "symbol": "UYP"
          },
          "UYU": {
            "displayName": {
              "other": "Uruguayaanse peso"
            },
            "narrow": "$",
            "symbol": "UYU"
          },
          "UYW": {
            "displayName": {
              "other": "Uruguayaanse nominale salarisindexeenheid"
            },
            "narrow": "UYW",
            "symbol": "UYW"
          },
          "UZS": {
            "displayName": {
              "other": "Oezbeekse sum"
            },
            "narrow": "UZS",
            "symbol": "UZS"
          },
          "VEB": {
            "displayName": {
              "other": "Venezolaanse bolivar (1871–2008)"
            },
            "narrow": "VEB",
            "symbol": "VEB"
          },
          "VED": {
            "displayName": {
              "one": "Bolívar Soberano",
              "other": "Bolívar Soberanos"
            },
            "narrow": "VED",
            "symbol": "VED"
          },
          "VEF": {
            "displayName": {
              "other": "Venezolaanse bolivar (2008–2018)"
            },
            "narrow": "Bs",
            "symbol": "VEF"
          },
          "VES": {
            "displayName": {
              "other": "Venezolaanse bolivar"
            },
            "narrow": "VES",
            "symbol": "VES"
          },
          "VND": {
            "displayName": {
              "other": "Vietnamese dong"
            },
            "narrow": "₫",
            "symbol": "₫"
          },
          "VNN": {
            "displayName": {
              "other": "Vietnamese dong (1978–1985)"
            },
            "narrow": "VNN",
            "symbol": "VNN"
          },
          "VUV": {
            "displayName": {
              "other": "Vanuatuaanse vatu"
            },
            "narrow": "VUV",
            "symbol": "VUV"
          },
          "WST": {
            "displayName": {
              "other": "Samoaanse tala"
            },
            "narrow": "WST",
            "symbol": "WST"
          },
          "XAF": {
            "displayName": {
              "other": "CFA-frank"
            },
            "narrow": "FCFA",
            "symbol": "FCFA"
          },
          "XAG": {
            "displayName": {
              "one": "Troy ounce zilver",
              "other": "Troy ounces zilver"
            },
            "narrow": "XAG",
            "symbol": "XAG"
          },
          "XAU": {
            "displayName": {
              "one": "Troy ounce goud",
              "other": "Troy ounces goud"
            },
            "narrow": "XAU",
            "symbol": "XAU"
          },
          "XBA": {
            "displayName": {
              "other": "Europese samengestelde eenheid"
            },
            "narrow": "XBA",
            "symbol": "XBA"
          },
          "XBB": {
            "displayName": {
              "other": "Europese monetaire eenheid"
            },
            "narrow": "XBB",
            "symbol": "XBB"
          },
          "XBC": {
            "displayName": {
              "other": "Europese rekeneenheid (XBC)"
            },
            "narrow": "XBC",
            "symbol": "XBC"
          },
          "XBD": {
            "displayName": {
              "other": "Europese rekeneenheid (XBD)"
            },
            "narrow": "XBD",
            "symbol": "XBD"
          },
          "XCD": {
            "displayName": {
              "other": "Oost-Caribische dollar"
            },
            "narrow": "$",
            "symbol": "EC$"
          },
          "XCG": {
            "displayName": {
              "other": "Caribische gulden"
            },
            "narrow": "Cg",
            "symbol": "Cg."
          },
          "XDR": {
            "displayName": {
              "other": "Special Drawing Rights"
            },
            "narrow": "XDR",
            "symbol": "XDR"
          },
          "XEU": {
            "displayName": {
              "other": "European Currency Unit"
            },
            "narrow": "XEU",
            "symbol": "XEU"
          },
          "XFO": {
            "displayName": {
              "other": "Franse gouden franc"
            },
            "narrow": "XFO",
            "symbol": "XFO"
          },
          "XFU": {
            "displayName": {
              "other": "Franse UIC-franc"
            },
            "narrow": "XFU",
            "symbol": "XFU"
          },
          "XOF": {
            "displayName": {
              "other": "CFA-franc BCEAO"
            },
            "narrow": "F CFA",
            "symbol": "F CFA"
          },
          "XPD": {
            "displayName": {
              "one": "Troy ounce palladium",
              "other": "Troy ounces palladium"
            },
            "narrow": "XPD",
            "symbol": "XPD"
          },
          "XPF": {
            "displayName": {
              "other": "CFP-frank"
            },
            "narrow": "XPF",
            "symbol": "XPF"
          },
          "XPT": {
            "displayName": {
              "one": "Troy ounce platina",
              "other": "Troy ounces platina"
            },
            "narrow": "XPT",
            "symbol": "XPT"
          },
          "XRE": {
            "displayName": {
              "other": "RINET-fondsen"
            },
            "narrow": "XRE",
            "symbol": "XRE"
          },
          "XSU": {
            "displayName": {
              "other": "Sucre"
            },
            "narrow": "XSU",
            "symbol": "XSU"
          },
          "XTS": {
            "displayName": {
              "other": "Valutacode voor testdoeleinden"
            },
            "narrow": "XTS",
            "symbol": "XTS"
          },
          "XUA": {
            "displayName": {
              "other": "ADB-rekeneenheid"
            },
            "narrow": "XUA",
            "symbol": "XUA"
          },
          "XXX": {
            "displayName": {
              "other": "onbekende munteenheid"
            },
            "narrow": "XXX",
            "symbol": "XXX"
          },
          "YDD": {
            "displayName": {
              "other": "Jemenitische dinar"
            },
            "narrow": "YDD",
            "symbol": "YDD"
          },
          "YER": {
            "displayName": {
              "other": "Jemenitische rial"
            },
            "narrow": "YER",
            "symbol": "YER"
          },
          "YUD": {
            "displayName": {
              "other": "Joegoslavische harde dinar"
            },
            "narrow": "YUD",
            "symbol": "YUD"
          },
          "YUM": {
            "displayName": {
              "other": "Joegoslavische noviy-dinar"
            },
            "narrow": "YUM",
            "symbol": "YUM"
          },
          "YUN": {
            "displayName": {
              "other": "Joegoslavische convertibele dinar"
            },
            "narrow": "YUN",
            "symbol": "YUN"
          },
          "YUR": {
            "displayName": {
              "other": "Joegoslavische hervormde dinar (1992–1993)"
            },
            "narrow": "YUR",
            "symbol": "YUR"
          },
          "ZAL": {
            "displayName": {
              "other": "Zuid-Afrikaanse rand (financieel)"
            },
            "narrow": "ZAL",
            "symbol": "ZAL"
          },
          "ZAR": {
            "displayName": {
              "other": "Zuid-Afrikaanse rand"
            },
            "narrow": "R",
            "symbol": "ZAR"
          },
          "ZMK": {
            "displayName": {
              "other": "Zambiaanse kwacha (1968–2012)"
            },
            "narrow": "ZMK",
            "symbol": "ZMK"
          },
          "ZMW": {
            "displayName": {
              "other": "Zambiaanse kwacha"
            },
            "narrow": "ZK",
            "symbol": "ZMW"
          },
          "ZRN": {
            "displayName": {
              "other": "Zaïrese nieuwe zaïre"
            },
            "narrow": "ZRN",
            "symbol": "ZRN"
          },
          "ZRZ": {
            "displayName": {
              "other": "Zaïrese zaïre"
            },
            "narrow": "ZRZ",
            "symbol": "ZRZ"
          },
          "ZWD": {
            "displayName": {
              "other": "Zimbabwaanse dollar"
            },
            "narrow": "ZWD",
            "symbol": "ZWD"
          },
          "ZWL": {
            "displayName": {
              "other": "Zimbabwaanse dollar (2009)"
            },
            "narrow": "ZWL",
            "symbol": "ZWL"
          },
          "ZWR": {
            "displayName": {
              "other": "Zimbabwaanse dollar (2008)"
            },
            "narrow": "ZWR",
            "symbol": "ZWR"
          }
        },
        "nu": [
          "latn"
        ],
        "numbers": {
          "currency": {
            "latn": {
              "accounting": "¤ #,##0.00;(¤ #,##0.00)",
              "currencySpacing": {
                "afterInsertBetween": " ",
                "beforeInsertBetween": " "
              },
              "short": {
                "1000": {
                  "other": "¤ 0K"
                },
                "10000": {
                  "other": "¤ 00K"
                },
                "100000": {
                  "other": "¤ 000K"
                },
                "1000000": {
                  "other": "¤ 0 mln'.'"
                },
                "10000000": {
                  "other": "¤ 00 mln'.'"
                },
                "100000000": {
                  "other": "¤ 000 mln'.'"
                },
                "1000000000": {
                  "other": "¤ 0 mld'.'"
                },
                "10000000000": {
                  "other": "¤ 00 mld'.'"
                },
                "100000000000": {
                  "other": "¤ 000 mld'.'"
                },
                "1000000000000": {
                  "other": "¤ 0 bln'.'"
                },
                "10000000000000": {
                  "other": "¤ 00 bln'.'"
                },
                "100000000000000": {
                  "other": "¤ 000 bln'.'"
                }
              },
              "standard": "¤ #,##0.00;¤ -#,##0.00",
              "unitPattern": "{0} {1}"
            }
          },
          "decimal": {
            "latn": {
              "long": {
                "1000": {
                  "other": "0 duizend"
                },
                "10000": {
                  "other": "00 duizend"
                },
                "100000": {
                  "other": "000 duizend"
                },
                "1000000": {
                  "other": "0 miljoen"
                },
                "10000000": {
                  "other": "00 miljoen"
                },
                "100000000": {
                  "other": "000 miljoen"
                },
                "1000000000": {
                  "other": "0 miljard"
                },
                "10000000000": {
                  "other": "00 miljard"
                },
                "100000000000": {
                  "other": "000 miljard"
                },
                "1000000000000": {
                  "other": "0 biljoen"
                },
                "10000000000000": {
                  "other": "00 biljoen"
                },
                "100000000000000": {
                  "other": "000 biljoen"
                }
              },
              "short": {
                "1000": {
                  "other": "0K"
                },
                "10000": {
                  "other": "00K"
                },
                "100000": {
                  "other": "000K"
                },
                "1000000": {
                  "other": "0 mln'.'"
                },
                "10000000": {
                  "other": "00 mln'.'"
                },
                "100000000": {
                  "other": "000 mln'.'"
                },
                "1000000000": {
                  "other": "0 mld'.'"
                },
                "10000000000": {
                  "other": "00 mld'.'"
                },
                "100000000000": {
                  "other": "000 mld'.'"
                },
                "1000000000000": {
                  "other": "0 bln'.'"
                },
                "10000000000000": {
                  "other": "00 bln'.'"
                },
                "100000000000000": {
                  "other": "000 bln'.'"
                }
              },
              "standard": "#,##0.###"
            }
          },
          "nu": [
            "latn"
          ],
          "percent": {
            "latn": "#,##0%"
          },
          "symbols": {
            "latn": {
              "approximatelySign": "~",
              "decimal": ",",
              "exponential": "E",
              "group": ".",
              "infinity": "∞",
              "list": ";",
              "minusSign": "-",
              "nan": "NaN",
              "perMille": "‰",
              "percentSign": "%",
              "plusSign": "+",
              "rangeSign": "-",
              "superscriptingExponent": "×",
              "timeSeparator": ":"
            }
          }
        },
        "units": {
          "compound": {
            "per": {
              "long": "{0} per {1}",
              "narrow": "{0}/{1}",
              "short": "{0}/{1}"
            }
          },
          "simple": {
            "acre": {
              "long": {
                "one": "{0} acre",
                "other": "{0} acres"
              },
              "narrow": {
                "one": "{0} acre",
                "other": "{0} acres"
              },
              "perUnit": {},
              "short": {
                "one": "{0} acre",
                "other": "{0} acres"
              }
            },
            "bit": {
              "long": {
                "one": "{0} bit",
                "other": "{0} bits"
              },
              "narrow": {
                "one": "{0} bit",
                "other": "{0} bits"
              },
              "perUnit": {},
              "short": {
                "one": "{0} bit",
                "other": "{0} bits"
              }
            },
            "byte": {
              "long": {
                "other": "{0} byte"
              },
              "narrow": {
                "other": "{0} byte"
              },
              "perUnit": {},
              "short": {
                "other": "{0} byte"
              }
            },
            "celsius": {
              "long": {
                "one": "{0} graad Celsius",
                "other": "{0} graden Celsius"
              },
              "narrow": {
                "other": "{0}°"
              },
              "perUnit": {},
              "short": {
                "other": "{0}°C"
              }
            },
            "centimeter": {
              "long": {
                "other": "{0} centimeter"
              },
              "narrow": {
                "other": "{0} cm"
              },
              "perUnit": {
                "long": "{0} per centimeter",
                "narrow": "{0}/cm",
                "short": "{0}/cm"
              },
              "short": {
                "other": "{0} cm"
              }
            },
            "day": {
              "long": {
                "one": "{0} dag",
                "other": "{0} dagen"
              },
              "narrow": {
                "other": "{0} d"
              },
              "perUnit": {
                "long": "{0} per dag",
                "narrow": "{0}/d",
                "short": "{0}/dag"
              },
              "short": {
                "one": "{0} dag",
                "other": "{0} dagen"
              }
            },
            "degree": {
              "long": {
                "one": "{0} booggraad",
                "other": "{0} booggraden"
              },
              "narrow": {
                "other": "{0}°"
              },
              "perUnit": {},
              "short": {
                "other": "{0}°"
              }
            },
            "fahrenheit": {
              "long": {
                "one": "{0} graad Fahrenheit",
                "other": "{0} graden Fahrenheit"
              },
              "narrow": {
                "other": "{0}°F"
              },
              "perUnit": {},
              "short": {
                "other": "{0}°F"
              }
            },
            "fluid-ounce": {
              "long": {
                "other": "{0} fluid ounce"
              },
              "narrow": {
                "other": "{0} fl oz"
              },
              "perUnit": {},
              "short": {
                "other": "{0} fl oz"
              }
            },
            "foot": {
              "long": {
                "other": "{0} voet"
              },
              "narrow": {
                "other": "{0} ft"
              },
              "perUnit": {
                "long": "{0} per voet",
                "narrow": "{0}/ft",
                "short": "{0}/ft"
              },
              "short": {
                "other": "{0} ft"
              }
            },
            "gallon": {
              "long": {
                "other": "{0} gallon"
              },
              "narrow": {
                "other": "{0} gal"
              },
              "perUnit": {
                "long": "{0} per gallon",
                "narrow": "{0}/gal",
                "short": "{0}/gal"
              },
              "short": {
                "other": "{0} gal"
              }
            },
            "gigabit": {
              "long": {
                "one": "{0} gigabit",
                "other": "{0} gigabits"
              },
              "narrow": {
                "other": "{0} Gb"
              },
              "perUnit": {},
              "short": {
                "other": "{0} Gb"
              }
            },
            "gigabyte": {
              "long": {
                "other": "{0} gigabyte"
              },
              "narrow": {
                "other": "{0} GB"
              },
              "perUnit": {},
              "short": {
                "other": "{0} GB"
              }
            },
            "gram": {
              "long": {
                "other": "{0} gram"
              },
              "narrow": {
                "other": "{0} g"
              },
              "perUnit": {
                "long": "{0} per gram",
                "narrow": "{0}/g",
                "short": "{0}/g"
              },
              "short": {
                "other": "{0} g"
              }
            },
            "hectare": {
              "long": {
                "other": "{0} hectare"
              },
              "narrow": {
                "other": "{0} ha"
              },
              "perUnit": {},
              "short": {
                "other": "{0} ha"
              }
            },
            "hour": {
              "long": {
                "other": "{0} uur"
              },
              "narrow": {
                "other": "{0} u"
              },
              "perUnit": {
                "long": "{0} per uur",
                "narrow": "{0}/u",
                "short": "{0}/uur"
              },
              "short": {
                "other": "{0} uur"
              }
            },
            "inch": {
              "long": {
                "one": "{0} inch",
                "other": "{0} inches"
              },
              "narrow": {
                "other": "{0}″"
              },
              "perUnit": {
                "long": "{0} per inch",
                "narrow": "{0}/in",
                "short": "{0}/in"
              },
              "short": {
                "other": "{0} in"
              }
            },
            "kilobit": {
              "long": {
                "one": "{0} kilobit",
                "other": "{0} kilobits"
              },
              "narrow": {
                "other": "{0} kb"
              },
              "perUnit": {},
              "short": {
                "other": "{0} kb"
              }
            },
            "kilobyte": {
              "long": {
                "other": "{0} kilobyte"
              },
              "narrow": {
                "other": "{0} kB"
              },
              "perUnit": {},
              "short": {
                "other": "{0} kB"
              }
            },
            "kilogram": {
              "long": {
                "other": "{0} kilogram"
              },
              "narrow": {
                "other": "{0} kg"
              },
              "perUnit": {
                "long": "{0} per kilogram",
                "narrow": "{0}/kg",
                "short": "{0}/kg"
              },
              "short": {
                "other": "{0} kg"
              }
            },
            "kilometer": {
              "long": {
                "other": "{0} kilometer"
              },
              "narrow": {
                "other": "{0} km"
              },
              "perUnit": {
                "long": "{0} per kilometer",
                "narrow": "{0}/km",
                "short": "{0}/km"
              },
              "short": {
                "other": "{0} km"
              }
            },
            "kilometer-per-hour": {
              "long": {
                "other": "{0} kilometer per uur"
              },
              "narrow": {
                "other": "{0} km/u"
              },
              "perUnit": {},
              "short": {
                "other": "{0} km/u"
              }
            },
            "liter": {
              "long": {
                "other": "{0} liter"
              },
              "narrow": {
                "other": "{0} l"
              },
              "perUnit": {
                "long": "{0} per liter",
                "narrow": "{0}/l",
                "short": "{0}/l"
              },
              "short": {
                "other": "{0} l"
              }
            },
            "liter-per-kilometer": {
              "long": {
                "other": "{0} liter per kilometer"
              },
              "narrow": {
                "other": "{0} l/km"
              },
              "perUnit": {},
              "short": {
                "other": "{0} l/km"
              }
            },
            "megabit": {
              "long": {
                "one": "{0} megabit",
                "other": "{0} megabits"
              },
              "narrow": {
                "other": "{0} Mb"
              },
              "perUnit": {},
              "short": {
                "other": "{0} Mb"
              }
            },
            "megabyte": {
              "long": {
                "other": "{0} megabyte"
              },
              "narrow": {
                "other": "{0} MB"
              },
              "perUnit": {},
              "short": {
                "other": "{0} MB"
              }
            },
            "meter": {
              "long": {
                "other": "{0} meter"
              },
              "narrow": {
                "other": "{0} m"
              },
              "perUnit": {
                "long": "{0} per meter",
                "narrow": "{0}/m",
                "short": "{0}/m"
              },
              "short": {
                "other": "{0} m"
              }
            },
            "meter-per-second": {
              "long": {
                "other": "{0} meter per seconde"
              },
              "narrow": {
                "other": "{0} m/s"
              },
              "perUnit": {},
              "short": {
                "other": "{0} m/s"
              }
            },
            "mile": {
              "long": {
                "other": "{0} mijl"
              },
              "narrow": {
                "other": "{0} mi"
              },
              "perUnit": {},
              "short": {
                "other": "{0} mi"
              }
            },
            "mile-per-gallon": {
              "long": {
                "other": "{0} mijl per gallon"
              },
              "narrow": {
                "other": "{0} mpg"
              },
              "perUnit": {},
              "short": {
                "other": "{0} mpg"
              }
            },
            "mile-per-hour": {
              "long": {
                "other": "{0} mijl per uur"
              },
              "narrow": {
                "other": "{0} mi/h"
              },
              "perUnit": {},
              "short": {
                "other": "{0} mi/h"
              }
            },
            "mile-scandinavian": {
              "long": {
                "other": "{0} Scandinavische mijl"
              },
              "narrow": {
                "other": "{0} smi"
              },
              "perUnit": {},
              "short": {
                "other": "{0} smi"
              }
            },
            "milliliter": {
              "long": {
                "other": "{0} milliliter"
              },
              "narrow": {
                "other": "{0} ml"
              },
              "perUnit": {},
              "short": {
                "other": "{0} ml"
              }
            },
            "millimeter": {
              "long": {
                "other": "{0} millimeter"
              },
              "narrow": {
                "other": "{0} mm"
              },
              "perUnit": {},
              "short": {
                "other": "{0} mm"
              }
            },
            "millisecond": {
              "long": {
                "one": "{0} milliseconde",
                "other": "{0} milliseconden"
              },
              "narrow": {
                "other": "{0} ms"
              },
              "perUnit": {},
              "short": {
                "other": "{0} ms"
              }
            },
            "minute": {
              "long": {
                "one": "{0} minuut",
                "other": "{0} minuten"
              },
              "narrow": {
                "other": "{0} m"
              },
              "perUnit": {
                "long": "{0} per minuut",
                "narrow": "{0}/m",
                "short": "{0}/min"
              },
              "short": {
                "other": "{0} min"
              }
            },
            "month": {
              "long": {
                "one": "{0} maand",
                "other": "{0} maanden"
              },
              "narrow": {
                "other": "{0} m"
              },
              "perUnit": {
                "long": "{0} per maand",
                "narrow": "{0}/m",
                "short": "{0}/mnd"
              },
              "short": {
                "other": "{0} mnd"
              }
            },
            "ounce": {
              "long": {
                "other": "{0} ounce"
              },
              "narrow": {
                "other": "{0} oz"
              },
              "perUnit": {
                "long": "{0} per ounce",
                "narrow": "{0}/oz",
                "short": "{0}/oz"
              },
              "short": {
                "other": "{0} oz"
              }
            },
            "percent": {
              "long": {
                "other": "{0} procent"
              },
              "narrow": {
                "other": "{0}%"
              },
              "perUnit": {},
              "short": {
                "other": "{0}%"
              }
            },
            "petabyte": {
              "long": {
                "other": "{0} petabyte"
              },
              "narrow": {
                "other": "{0} PB"
              },
              "perUnit": {},
              "short": {
                "other": "{0} PB"
              }
            },
            "pound": {
              "long": {
                "other": "{0} pound"
              },
              "narrow": {
                "other": "{0} lb"
              },
              "perUnit": {
                "long": "{0} per pound",
                "narrow": "{0}/lb",
                "short": "{0}/lb"
              },
              "short": {
                "other": "{0} lb"
              }
            },
            "second": {
              "long": {
                "one": "{0} seconde",
                "other": "{0} seconden"
              },
              "narrow": {
                "other": "{0} s"
              },
              "perUnit": {
                "long": "{0} per seconde",
                "narrow": "{0}/s",
                "short": "{0}/sec"
              },
              "short": {
                "other": "{0} sec"
              }
            },
            "stone": {
              "long": {
                "other": "{0} stone"
              },
              "narrow": {
                "other": "{0} st"
              },
              "perUnit": {},
              "short": {
                "other": "{0} st"
              }
            },
            "terabit": {
              "long": {
                "one": "{0} terabit",
                "other": "{0} terabits"
              },
              "narrow": {
                "other": "{0} Tb"
              },
              "perUnit": {},
              "short": {
                "other": "{0} Tb"
              }
            },
            "terabyte": {
              "long": {
                "other": "{0} terabyte"
              },
              "narrow": {
                "other": "{0} TB"
              },
              "perUnit": {},
              "short": {
                "other": "{0} TB"
              }
            },
            "week": {
              "long": {
                "one": "{0} week",
                "other": "{0} weken"
              },
              "narrow": {
                "other": "{0} w"
              },
              "perUnit": {
                "long": "{0} per week",
                "narrow": "{0}/w",
                "short": "{0}/wk"
              },
              "short": {
                "one": "{0} wk",
                "other": "{0} wkn"
              }
            },
            "yard": {
              "long": {
                "one": "{0} yard",
                "other": "{0} yards"
              },
              "narrow": {
                "other": "{0} yd"
              },
              "perUnit": {},
              "short": {
                "other": "{0} yd"
              }
            },
            "year": {
              "long": {
                "other": "{0} jaar"
              },
              "narrow": {
                "other": "{0} jr"
              },
              "perUnit": {
                "long": "{0} per jaar",
                "narrow": "{0}/jr",
                "short": "{0}/jr"
              },
              "short": {
                "other": "{0} jr"
              }
            }
          }
        }
      },
      "locale": "nl"
    });
  }
  if (Intl.PluralRules && typeof Intl.PluralRules.__addLocaleData === "function") {
    Intl.PluralRules.__addLocaleData({ "data": { "categories": { "cardinal": ["one", "other"], "ordinal": ["other"] }, "fn": function(n, ord) {
      var s = String(n).split("."), v0 = !s[1];
      if (ord) return "other";
      return n == 1 && v0 ? "one" : "other";
    } }, "locale": "nl" });
  }
  if (Intl.RelativeTimeFormat && typeof Intl.RelativeTimeFormat.__addLocaleData === "function") {
    Intl.RelativeTimeFormat.__addLocaleData({
      "data": {
        "day": {
          "-1": "gisteren",
          "-2": "eergisteren",
          "0": "vandaag",
          "1": "morgen",
          "2": "overmorgen",
          "future": {
            "one": "over {0} dag",
            "other": "over {0} dagen"
          },
          "past": {
            "one": "{0} dag geleden",
            "other": "{0} dagen geleden"
          }
        },
        "day-narrow": {
          "-1": "gisteren",
          "-2": "eergisteren",
          "0": "vandaag",
          "1": "morgen",
          "2": "overmorgen",
          "future": {
            "one": "over {0} dag",
            "other": "over {0} dgn"
          },
          "past": {
            "one": "{0} dag geleden",
            "other": "{0} dgn geleden"
          }
        },
        "day-short": {
          "-1": "gisteren",
          "-2": "eergisteren",
          "0": "vandaag",
          "1": "morgen",
          "2": "overmorgen",
          "future": {
            "one": "over {0} dag",
            "other": "over {0} dgn"
          },
          "past": {
            "one": "{0} dag geleden",
            "other": "{0} dgn geleden"
          }
        },
        "hour": {
          "0": "binnen een uur",
          "future": {
            "one": "over {0} uur",
            "other": "over {0} uur"
          },
          "past": {
            "one": "{0} uur geleden",
            "other": "{0} uur geleden"
          }
        },
        "hour-narrow": {
          "0": "binnen een uur",
          "future": {
            "one": "over {0} uur",
            "other": "over {0} uur"
          },
          "past": {
            "one": "{0} uur geleden",
            "other": "{0} uur geleden"
          }
        },
        "hour-short": {
          "0": "binnen een uur",
          "future": {
            "one": "over {0} uur",
            "other": "over {0} uur"
          },
          "past": {
            "one": "{0} uur geleden",
            "other": "{0} uur geleden"
          }
        },
        "minute": {
          "0": "binnen een minuut",
          "future": {
            "one": "over {0} minuut",
            "other": "over {0} minuten"
          },
          "past": {
            "one": "{0} minuut geleden",
            "other": "{0} minuten geleden"
          }
        },
        "minute-narrow": {
          "0": "binnen een minuut",
          "future": {
            "one": "over {0} min.",
            "other": "over {0} min."
          },
          "past": {
            "one": "{0} min. geleden",
            "other": "{0} min. geleden"
          }
        },
        "minute-short": {
          "0": "binnen een minuut",
          "future": {
            "one": "over {0} min.",
            "other": "over {0} min."
          },
          "past": {
            "one": "{0} min. geleden",
            "other": "{0} min. geleden"
          }
        },
        "month": {
          "-1": "vorige maand",
          "0": "deze maand",
          "1": "volgende maand",
          "future": {
            "one": "over {0} maand",
            "other": "over {0} maanden"
          },
          "past": {
            "one": "{0} maand geleden",
            "other": "{0} maanden geleden"
          }
        },
        "month-narrow": {
          "-1": "vorige maand",
          "0": "deze maand",
          "1": "volgende maand",
          "future": {
            "one": "over {0} maand",
            "other": "over {0} maanden"
          },
          "past": {
            "one": "{0} maand geleden",
            "other": "{0} maanden geleden"
          }
        },
        "month-short": {
          "-1": "vorige maand",
          "0": "deze maand",
          "1": "volgende maand",
          "future": {
            "one": "over {0} maand",
            "other": "over {0} maanden"
          },
          "past": {
            "one": "{0} maand geleden",
            "other": "{0} maanden geleden"
          }
        },
        "nu": [
          "latn"
        ],
        "quarter": {
          "-1": "vorig kwartaal",
          "0": "dit kwartaal",
          "1": "volgend kwartaal",
          "future": {
            "one": "over {0} kwartaal",
            "other": "over {0} kwartalen"
          },
          "past": {
            "one": "{0} kwartaal geleden",
            "other": "{0} kwartalen geleden"
          }
        },
        "quarter-narrow": {
          "-1": "vorig kwartaal",
          "0": "dit kwartaal",
          "1": "volgend kwartaal",
          "future": {
            "one": "over {0} kw.",
            "other": "over {0} kw."
          },
          "past": {
            "one": "{0} kw. geleden",
            "other": "{0} kw. geleden"
          }
        },
        "quarter-short": {
          "-1": "vorig kwartaal",
          "0": "dit kwartaal",
          "1": "volgend kwartaal",
          "future": {
            "one": "over {0} kwart.",
            "other": "over {0} kwart."
          },
          "past": {
            "one": "{0} kwart. geleden",
            "other": "{0} kwart. geleden"
          }
        },
        "second": {
          "0": "nu",
          "future": {
            "one": "over {0} seconde",
            "other": "over {0} seconden"
          },
          "past": {
            "one": "{0} seconde geleden",
            "other": "{0} seconden geleden"
          }
        },
        "second-narrow": {
          "0": "nu",
          "future": {
            "one": "over {0} sec.",
            "other": "over {0} sec."
          },
          "past": {
            "one": "{0} sec. geleden",
            "other": "{0} sec. geleden"
          }
        },
        "second-short": {
          "0": "nu",
          "future": {
            "one": "over {0} sec.",
            "other": "over {0} sec."
          },
          "past": {
            "one": "{0} sec. geleden",
            "other": "{0} sec. geleden"
          }
        },
        "week": {
          "-1": "vorige week",
          "0": "deze week",
          "1": "volgende week",
          "future": {
            "one": "over {0} week",
            "other": "over {0} weken"
          },
          "past": {
            "one": "{0} week geleden",
            "other": "{0} weken geleden"
          }
        },
        "week-narrow": {
          "-1": "vorige week",
          "0": "deze week",
          "1": "volgende week",
          "future": {
            "one": "over {0} week",
            "other": "over {0} weken"
          },
          "past": {
            "one": "{0} week geleden",
            "other": "{0} weken geleden"
          }
        },
        "week-short": {
          "-1": "vorige week",
          "0": "deze week",
          "1": "volgende week",
          "future": {
            "one": "over {0} week",
            "other": "over {0} weken"
          },
          "past": {
            "one": "{0} week geleden",
            "other": "{0} weken geleden"
          }
        },
        "year": {
          "-1": "vorig jaar",
          "0": "dit jaar",
          "1": "volgend jaar",
          "future": {
            "one": "over {0} jaar",
            "other": "over {0} jaar"
          },
          "past": {
            "one": "{0} jaar geleden",
            "other": "{0} jaar geleden"
          }
        },
        "year-narrow": {
          "-1": "vorig jaar",
          "0": "dit jaar",
          "1": "volgend jaar",
          "future": {
            "one": "over {0} jaar",
            "other": "over {0} jaar"
          },
          "past": {
            "one": "{0} jaar geleden",
            "other": "{0} jaar geleden"
          }
        },
        "year-short": {
          "-1": "vorig jaar",
          "0": "dit jaar",
          "1": "volgend jaar",
          "future": {
            "one": "over {0} jaar",
            "other": "over {0} jaar"
          },
          "past": {
            "one": "{0} jaar geleden",
            "other": "{0} jaar geleden"
          }
        }
      },
      "locale": "nl"
    });
  }
  if ("__setDefaultTimeZone" in Intl.DateTimeFormat) {
    Intl.DateTimeFormat.__setDefaultTimeZone("Europe/Amsterdam");
  }
  function isInteger(value2) {
    return INTEGER_REGEX.test(value2);
  }
  const INTEGER_REGEX = /^-?[0-9]+$/;
  function isNumber(value2) {
    return NUMBER_REGEX.test(value2);
  }
  const NUMBER_REGEX = /^-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?$/;
  function isSafeNumber(value2, config2) {
    const num = Number.parseFloat(value2);
    const str = String(num);
    const v = extractSignificantDigits(value2);
    const s = extractSignificantDigits(str);
    if (v === s) {
      return true;
    }
    return false;
  }
  let UnsafeNumberReason = /* @__PURE__ */ function(UnsafeNumberReason2) {
    UnsafeNumberReason2["underflow"] = "underflow";
    UnsafeNumberReason2["overflow"] = "overflow";
    UnsafeNumberReason2["truncate_integer"] = "truncate_integer";
    UnsafeNumberReason2["truncate_float"] = "truncate_float";
    return UnsafeNumberReason2;
  }({});
  function getUnsafeNumberReason(value2) {
    if (isSafeNumber(value2)) {
      return void 0;
    }
    if (isInteger(value2)) {
      return UnsafeNumberReason.truncate_integer;
    }
    const num = Number.parseFloat(value2);
    if (!Number.isFinite(num)) {
      return UnsafeNumberReason.overflow;
    }
    if (num === 0) {
      return UnsafeNumberReason.underflow;
    }
    return UnsafeNumberReason.truncate_float;
  }
  function extractSignificantDigits(value2) {
    return value2.replace(EXPONENTIAL_PART_REGEX, "").replace(DOT_REGEX, "").replace(TRAILING_ZEROS_REGEX, "").replace(LEADING_MINUS_AND_ZEROS_REGEX, "");
  }
  const EXPONENTIAL_PART_REGEX = /[eE][+-]?\d+$/;
  const LEADING_MINUS_AND_ZEROS_REGEX = /^-?(0*)?/;
  const DOT_REGEX = /\./;
  const TRAILING_ZEROS_REGEX = /0+$/;
  class LosslessNumber {
    constructor(value2) {
      // numeric value as string
      // type information
      __publicField(this, "isLosslessNumber", true);
      if (!isNumber(value2)) {
        throw new Error(`Invalid number (value: "${value2}")`);
      }
      this.value = value2;
    }
    /**
     * Get the value of the LosslessNumber as number or bigint.
     *
     * - a number is returned for safe numbers and decimal values that only lose some insignificant digits
     * - a bigint is returned for big integer numbers
     * - an Error is thrown for values that will overflow or underflow
     *
     * Note that you can implement your own strategy for conversion by just getting the value as string
     * via .toString(), and using util functions like isInteger, isSafeNumber, getUnsafeNumberReason,
     * and toSafeNumberOrThrow to convert it to a numeric value.
     */
    valueOf() {
      const unsafeReason = getUnsafeNumberReason(this.value);
      if (unsafeReason === void 0 || unsafeReason === UnsafeNumberReason.truncate_float) {
        return Number.parseFloat(this.value);
      }
      if (isInteger(this.value)) {
        return BigInt(this.value);
      }
      throw new Error(`Cannot safely convert to number: the value '${this.value}' would ${unsafeReason} and become ${Number.parseFloat(this.value)}`);
    }
    /**
     * Get the value of the LosslessNumber as string.
     */
    toString() {
      return this.value;
    }
    // Note: we do NOT implement a .toJSON() method, and you should not implement
    // or use that, it cannot safely turn the numeric value in the string into
    // stringified JSON since it has to be parsed into a number first.
  }
  function isLosslessNumber(value2) {
    return value2 && typeof value2 === "object" && value2.isLosslessNumber === true || false;
  }
  function parseLosslessNumber(value2) {
    return new LosslessNumber(value2);
  }
  function revive(json, reviver) {
    return reviveValue({
      "": json
    }, "", json, reviver);
  }
  function reviveValue(context, key, value2, reviver) {
    if (Array.isArray(value2)) {
      return reviver.call(context, key, reviveArray(value2, reviver));
    }
    if (value2 && typeof value2 === "object" && !isLosslessNumber(value2)) {
      return reviver.call(context, key, reviveObject(value2, reviver));
    }
    return reviver.call(context, key, value2);
  }
  function reviveObject(object, reviver) {
    for (const key of Object.keys(object)) {
      const value2 = reviveValue(object, key, object[key], reviver);
      if (value2 !== void 0) {
        object[key] = value2;
      } else {
        delete object[key];
      }
    }
    return object;
  }
  function reviveArray(array, reviver) {
    for (let i = 0; i < array.length; i++) {
      array[i] = reviveValue(array, String(i), array[i], reviver);
    }
    return array;
  }
  function parse$2(text, reviver) {
    let parseNumber = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : parseLosslessNumber;
    let i = 0;
    const value2 = parseValue();
    expectValue(value2);
    expectEndOfInput();
    return reviver ? revive(value2, reviver) : value2;
    function parseObject() {
      if (text.charCodeAt(i) === codeOpeningBrace) {
        i++;
        skipWhitespace();
        const object = {};
        let initial = true;
        while (i < text.length && text.charCodeAt(i) !== codeClosingBrace) {
          if (!initial) {
            eatComma();
            skipWhitespace();
          } else {
            initial = false;
          }
          const start = i;
          const key = parseString();
          if (key === void 0) {
            throwObjectKeyExpected();
            return;
          }
          skipWhitespace();
          eatColon();
          const value3 = parseValue();
          if (value3 === void 0) {
            throwObjectValueExpected();
            return;
          }
          if (Object.prototype.hasOwnProperty.call(object, key) && !isDeepEqual(value3, object[key])) {
            throwDuplicateKey(key, start + 1);
          }
          object[key] = value3;
        }
        if (text.charCodeAt(i) !== codeClosingBrace) {
          throwObjectKeyOrEndExpected();
        }
        i++;
        return object;
      }
    }
    function parseArray() {
      if (text.charCodeAt(i) === codeOpeningBracket) {
        i++;
        skipWhitespace();
        const array = [];
        let initial = true;
        while (i < text.length && text.charCodeAt(i) !== codeClosingBracket) {
          if (!initial) {
            eatComma();
          } else {
            initial = false;
          }
          const value3 = parseValue();
          expectArrayItem(value3);
          array.push(value3);
        }
        if (text.charCodeAt(i) !== codeClosingBracket) {
          throwArrayItemOrEndExpected();
        }
        i++;
        return array;
      }
    }
    function parseValue() {
      skipWhitespace();
      const value3 = parseString() ?? parseNumeric() ?? parseObject() ?? parseArray() ?? parseKeyword("true", true) ?? parseKeyword("false", false) ?? parseKeyword("null", null);
      skipWhitespace();
      return value3;
    }
    function parseKeyword(name, value3) {
      if (text.slice(i, i + name.length) === name) {
        i += name.length;
        return value3;
      }
    }
    function skipWhitespace() {
      while (isWhitespace(text.charCodeAt(i))) {
        i++;
      }
    }
    function parseString() {
      if (text.charCodeAt(i) === codeDoubleQuote) {
        i++;
        let result = "";
        while (i < text.length && text.charCodeAt(i) !== codeDoubleQuote) {
          if (text.charCodeAt(i) === codeBackslash) {
            const char = text[i + 1];
            const escapeChar = escapeCharacters[char];
            if (escapeChar !== void 0) {
              result += escapeChar;
              i++;
            } else if (char === "u") {
              if (isHex(text.charCodeAt(i + 2)) && isHex(text.charCodeAt(i + 3)) && isHex(text.charCodeAt(i + 4)) && isHex(text.charCodeAt(i + 5))) {
                result += String.fromCharCode(Number.parseInt(text.slice(i + 2, i + 6), 16));
                i += 5;
              } else {
                throwInvalidUnicodeCharacter(i);
              }
            } else {
              throwInvalidEscapeCharacter(i);
            }
          } else {
            if (isValidStringCharacter(text.charCodeAt(i))) {
              result += text[i];
            } else {
              throwInvalidCharacter(text[i]);
            }
          }
          i++;
        }
        expectEndOfString();
        i++;
        return result;
      }
    }
    function parseNumeric() {
      const start = i;
      if (text.charCodeAt(i) === codeMinus) {
        i++;
        expectDigit(start);
      }
      if (text.charCodeAt(i) === codeZero) {
        i++;
      } else if (isNonZeroDigit(text.charCodeAt(i))) {
        i++;
        while (isDigit(text.charCodeAt(i))) {
          i++;
        }
      }
      if (text.charCodeAt(i) === codeDot) {
        i++;
        expectDigit(start);
        while (isDigit(text.charCodeAt(i))) {
          i++;
        }
      }
      if (text.charCodeAt(i) === codeLowercaseE || text.charCodeAt(i) === codeUppercaseE) {
        i++;
        if (text.charCodeAt(i) === codeMinus || text.charCodeAt(i) === codePlus) {
          i++;
        }
        expectDigit(start);
        while (isDigit(text.charCodeAt(i))) {
          i++;
        }
      }
      if (i > start) {
        return parseNumber(text.slice(start, i));
      }
    }
    function eatComma() {
      if (text.charCodeAt(i) !== codeComma) {
        throw new SyntaxError(`Comma ',' expected after value ${gotAt()}`);
      }
      i++;
    }
    function eatColon() {
      if (text.charCodeAt(i) !== codeColon) {
        throw new SyntaxError(`Colon ':' expected after property name ${gotAt()}`);
      }
      i++;
    }
    function expectValue(value3) {
      if (value3 === void 0) {
        throw new SyntaxError(`JSON value expected ${gotAt()}`);
      }
    }
    function expectArrayItem(value3) {
      if (value3 === void 0) {
        throw new SyntaxError(`Array item expected ${gotAt()}`);
      }
    }
    function expectEndOfInput() {
      if (i < text.length) {
        throw new SyntaxError(`Expected end of input ${gotAt()}`);
      }
    }
    function expectDigit(start) {
      if (!isDigit(text.charCodeAt(i))) {
        const numSoFar = text.slice(start, i);
        throw new SyntaxError(`Invalid number '${numSoFar}', expecting a digit ${gotAt()}`);
      }
    }
    function expectEndOfString() {
      if (text.charCodeAt(i) !== codeDoubleQuote) {
        throw new SyntaxError(`End of string '"' expected ${gotAt()}`);
      }
    }
    function throwObjectKeyExpected() {
      throw new SyntaxError(`Quoted object key expected ${gotAt()}`);
    }
    function throwDuplicateKey(key, pos2) {
      throw new SyntaxError(`Duplicate key '${key}' encountered at position ${pos2}`);
    }
    function throwObjectKeyOrEndExpected() {
      throw new SyntaxError(`Quoted object key or end of object '}' expected ${gotAt()}`);
    }
    function throwArrayItemOrEndExpected() {
      throw new SyntaxError(`Array item or end of array ']' expected ${gotAt()}`);
    }
    function throwInvalidCharacter(char) {
      throw new SyntaxError(`Invalid character '${char}' ${pos()}`);
    }
    function throwInvalidEscapeCharacter(start) {
      const chars = text.slice(start, start + 2);
      throw new SyntaxError(`Invalid escape character '${chars}' ${pos()}`);
    }
    function throwObjectValueExpected() {
      throw new SyntaxError(`Object value expected after ':' ${pos()}`);
    }
    function throwInvalidUnicodeCharacter(start) {
      const chars = text.slice(start, start + 6);
      throw new SyntaxError(`Invalid unicode character '${chars}' ${pos()}`);
    }
    function pos() {
      return `at position ${i}`;
    }
    function got() {
      return i < text.length ? `but got '${text[i]}'` : "but reached end of input";
    }
    function gotAt() {
      return `${got()} ${pos()}`;
    }
  }
  function isWhitespace(code2) {
    return code2 === codeSpace || code2 === codeNewline || code2 === codeTab || code2 === codeReturn;
  }
  function isHex(code2) {
    return code2 >= codeZero && code2 <= codeNine || code2 >= codeUppercaseA && code2 <= codeUppercaseF || code2 >= codeLowercaseA && code2 <= codeLowercaseF;
  }
  function isDigit(code2) {
    return code2 >= codeZero && code2 <= codeNine;
  }
  function isNonZeroDigit(code2) {
    return code2 >= codeOne && code2 <= codeNine;
  }
  function isValidStringCharacter(code2) {
    return code2 >= 32 && code2 <= 1114111;
  }
  function isDeepEqual(a, b) {
    if (a === b) {
      return true;
    }
    if (Array.isArray(a) && Array.isArray(b)) {
      return a.length === b.length && a.every((item, index) => isDeepEqual(item, b[index]));
    }
    if (isObject(a) && isObject(b)) {
      const keys = [.../* @__PURE__ */ new Set([...Object.keys(a), ...Object.keys(b)])];
      return keys.every((key) => isDeepEqual(a[key], b[key]));
    }
    return false;
  }
  function isObject(value2) {
    return typeof value2 === "object" && value2 !== null;
  }
  const escapeCharacters = {
    '"': '"',
    "\\": "\\",
    "/": "/",
    b: "\b",
    f: "\f",
    n: "\n",
    r: "\r",
    t: "	"
    // note that \u is handled separately in parseString()
  };
  const codeBackslash = 92;
  const codeOpeningBrace = 123;
  const codeClosingBrace = 125;
  const codeOpeningBracket = 91;
  const codeClosingBracket = 93;
  const codeSpace = 32;
  const codeNewline = 10;
  const codeTab = 9;
  const codeReturn = 13;
  const codeDoubleQuote = 34;
  const codePlus = 43;
  const codeMinus = 45;
  const codeZero = 48;
  const codeOne = 49;
  const codeNine = 57;
  const codeComma = 44;
  const codeDot = 46;
  const codeColon = 58;
  const codeUppercaseA = 65;
  const codeLowercaseA = 97;
  const codeUppercaseE = 69;
  const codeLowercaseE = 101;
  const codeUppercaseF = 70;
  const codeLowercaseF = 102;
  function stringify(value2, replacer, space, numberStringifiers) {
    const resolvedSpace = resolveSpace(space);
    const replacedValue = typeof replacer === "function" ? replacer.call({
      "": value2
    }, "", value2) : value2;
    return stringifyValue(replacedValue, "");
    function stringifyValue(value3, indent) {
      if (Array.isArray(numberStringifiers)) {
        const stringifier = numberStringifiers.find((item) => item.test(value3));
        if (stringifier) {
          const str = stringifier.stringify(value3);
          if (typeof str !== "string" || !isNumber(str)) {
            throw new Error(`Invalid JSON number: output of a number stringifier must be a string containing a JSON number (output: ${str})`);
          }
          return str;
        }
      }
      if (typeof value3 === "boolean" || typeof value3 === "number" || typeof value3 === "string" || value3 === null || value3 instanceof Date || value3 instanceof Boolean || value3 instanceof Number || value3 instanceof String) {
        return JSON.stringify(value3);
      }
      if (value3?.isLosslessNumber) {
        return value3.toString();
      }
      if (typeof value3 === "bigint") {
        return value3.toString();
      }
      if (Array.isArray(value3)) {
        return stringifyArray(value3, indent);
      }
      if (value3 && typeof value3 === "object") {
        return stringifyObject(value3, indent);
      }
      return void 0;
    }
    function stringifyArray(array, indent) {
      if (array.length === 0) {
        return "[]";
      }
      const childIndent = resolvedSpace ? indent + resolvedSpace : void 0;
      let str = resolvedSpace ? "[\n" : "[";
      for (let i = 0; i < array.length; i++) {
        const item = typeof replacer === "function" ? replacer.call(array, String(i), array[i]) : array[i];
        if (resolvedSpace) {
          str += childIndent;
        }
        if (typeof item !== "undefined" && typeof item !== "function") {
          str += stringifyValue(item, childIndent);
        } else {
          str += "null";
        }
        if (i < array.length - 1) {
          str += resolvedSpace ? ",\n" : ",";
        }
      }
      str += resolvedSpace ? `
${indent}]` : "]";
      return str;
    }
    function stringifyObject(object, indent) {
      if (typeof object.toJSON === "function") {
        return stringify(object.toJSON(), replacer, space, void 0);
      }
      const keys = Array.isArray(replacer) ? replacer.map(String) : Object.keys(object);
      if (keys.length === 0) {
        return "{}";
      }
      const childIndent = resolvedSpace ? indent + resolvedSpace : void 0;
      let first = true;
      let str = resolvedSpace ? "{\n" : "{";
      for (const key of keys) {
        const value3 = typeof replacer === "function" ? replacer.call(object, key, object[key]) : object[key];
        if (includeProperty(key, value3)) {
          if (first) {
            first = false;
          } else {
            str += resolvedSpace ? ",\n" : ",";
          }
          const keyStr = JSON.stringify(key);
          str += resolvedSpace ? `${childIndent + keyStr}: ` : `${keyStr}:`;
          str += stringifyValue(value3, childIndent);
        }
      }
      str += resolvedSpace ? `
${indent}}` : "}";
      return str;
    }
    function includeProperty(_key, value3) {
      return typeof value3 !== "undefined" && typeof value3 !== "function" && typeof value3 !== "symbol";
    }
  }
  function resolveSpace(space) {
    if (typeof space === "number") {
      return " ".repeat(space);
    }
    if (typeof space === "string" && space !== "") {
      return space;
    }
    return void 0;
  }
  function losslessParse(text) {
    if (typeof text !== "string") {
      throw new Error("Input is not a (JSON) string");
    }
    return parse$2(text);
  }
  function losslessStringify(value2, format2 = false) {
    if (format2) {
      return stringify(value2, null, 2);
    }
    return stringify(value2);
  }
  function createJsonApi(func) {
    return function(...args) {
      const result = func(...args.map(losslessParse));
      return losslessStringify(result);
    };
  }
  function isFhirResource(value2, type) {
    const resource = value2;
    if (!type) {
      return typeof resource?.resourceType === "string" && !!resource?.resourceType.length;
    }
    return resource?.resourceType === type;
  }
  function isNullish(value2) {
    return value2 === void 0 || value2 === null;
  }
  function isNonNullish(value2) {
    return !isNullish(value2);
  }
  function map(items, iteratee, returnEmpty = false) {
    if (!items?.length) {
      return returnEmpty ? [] : void 0;
    }
    return items.map(iteratee).filter(isNonNullish);
  }
  function capitalizeFirstLetter(str) {
    if (!str) return str;
    return str.charAt(0).toUpperCase() + str.slice(1);
  }
  function getBundleResources(bundle) {
    if (!isFhirResource(bundle, "Bundle")) {
      throw new Error(
        `input does not seem to be a Fhir Bundle. Received resourceType: "${bundle?.resourceType}"`
      );
    }
    const resources = bundle.entry?.map((entry) => entry.resource).filter(isNonNullish);
    if (!resources?.length) return [];
    return resources;
  }
  function getIntlConfig(options) {
    const { ignoreMissingTranslations, onError, ...rest } = options;
    const handleError = (error) => {
      if (ignoreMissingTranslations && typeof error.message === "string" && error.message.includes("[@formatjs/intl Error MISSING_TRANSLATION]")) {
        return;
      }
      if (typeof onError === "function") {
        onError(error);
        return;
      }
      throw error;
    };
    return {
      onError: handleError,
      ...rest
    };
  }
  const codeLabels = {
    "codes.r3.observation.status.amended": [{ "type": 0, "value": "Gewijzigd" }],
    "codes.r3.observation.status.cancelled": [{ "type": 0, "value": "Geannuleerd" }],
    "codes.r3.observation.status.corrected": [{ "type": 0, "value": "Gecorrigeerd" }],
    "codes.r3.observation.status.entered-in-error": [{ "type": 0, "value": "Foutief ingevoerd" }],
    "codes.r3.observation.status.final": [{ "type": 0, "value": "Definitief" }],
    "codes.r3.observation.status.preliminary": [{ "type": 0, "value": "Inleidend" }],
    "codes.r3.observation.status.registered": [{ "type": 0, "value": "Geregistreerd" }],
    "codes.r3.observation.status.unknown": [{ "type": 0, "value": "Onbekend" }],
    "codes.r3.zib_medication_use.status.active": [{ "type": 0, "value": "Actief" }],
    "codes.r3.zib_medication_use.status.completed": [{ "type": 0, "value": "Voldaan" }],
    "codes.r3.zib_medication_use.status.entered-in-error": [{ "type": 0, "value": "Foutief ingevoerd" }],
    "codes.r3.zib_medication_use.status.intended": [{ "type": 0, "value": "Bedoeld" }],
    "codes.r3.zib_medication_use.status.on-hold": [{ "type": 0, "value": "Gepauzeerd" }],
    "codes.r3.zib_medication_use.status.stopped": [{ "type": 0, "value": "Gestopt" }]
  };
  const detailLabels = {
    "details.options": [{ "type": 0, "value": "Opties" }],
    "details.r3.ihe_mhd_minimal_document_reference.group_attachment": [{ "type": 0, "value": "Inhoud" }],
    "details.r3.ihe_mhd_minimal_document_reference.group_author": [{ "type": 0, "value": "Opgesteld door" }]
  };
  const fhirMessages = {
    "fhir.boolean.false": [{ "type": 0, "value": "Nee" }],
    "fhir.boolean.true": [{ "type": 0, "value": "Ja" }],
    "fhir.code_in_system": [{ "type": 1, "value": "code" }, { "type": 0, "value": " in code systeem " }, { "type": 1, "value": "system" }],
    "fhir.empty_value": [{ "type": 0, "value": "Niet bekend" }],
    "fhir.group_general_info": [{ "type": 0, "value": "Algemeen" }],
    "fhir.period.end": [{ "type": 0, "value": "Eind datum" }],
    "fhir.period.start": [{ "type": 0, "value": "Begin datum" }],
    "fhir.range.high": [{ "type": 0, "value": "Bovengrens" }],
    "fhir.range.low": [{ "type": 0, "value": "Ondergrens" }],
    "fhir.ratio.denominator": [{ "type": 0, "value": "Noemer" }],
    "fhir.ratio.numerator": [{ "type": 0, "value": "Teller" }],
    "fhir.unknown": [{ "type": 0, "value": "Onbekend" }]
  };
  const r3ResourceLabels = {
    "r3.e_afspraak_appointment": [{ "type": 0, "value": "Afspraak" }],
    "r3.gp_diagnostic_result": [{ "type": 0, "value": "Laboratorium uitslag" }],
    "r3.gp_encounter": [{ "type": 0, "value": "Contact" }],
    "r3.gp_journal_entry": [{ "type": 0, "value": "Journaalregel" }],
    "r3.gp_laboratory_result": [{ "type": 0, "value": "Laboratorium uitslag" }],
    "r3.ihe_mhd_document_manifest": [{ "type": 0, "value": "Document manifest" }],
    "r3.ihe_mhd_minimal_document_reference.author": [{ "type": 0, "value": "Specialist" }],
    "r3.ihe_mhd_minimal_document_reference.class": [{ "type": 0, "value": "Categorie" }],
    "r3.ihe_mhd_minimal_document_reference.content": [{ "type": 0, "value": "Inhoud" }],
    "r3.ihe_mhd_minimal_document_reference.content.attachment.content_type": [{ "type": 0, "value": "Inhoudstype" }],
    "r3.ihe_mhd_minimal_document_reference.content.attachment.creation": [{ "type": 0, "value": "Gecreëerd" }],
    "r3.ihe_mhd_minimal_document_reference.content.attachment.language": [{ "type": 0, "value": "Taal" }],
    "r3.ihe_mhd_minimal_document_reference.content.attachment.title": [{ "type": 0, "value": "Titel" }],
    "r3.ihe_mhd_minimal_document_reference.content.attachment.url": [{ "type": 0, "value": "Url" }],
    "r3.ihe_mhd_minimal_document_reference.indexed": [{ "type": 0, "value": "Aangemaakt op" }],
    "r3.ihe_mhd_minimal_document_reference.master_identifier": [{ "type": 0, "value": "Identifier" }],
    "r3.ihe_mhd_minimal_document_reference.security_label": [{ "type": 0, "value": "Beveiligingslabel" }],
    "r3.ihe_mhd_minimal_document_reference.status": [{ "type": 0, "value": "Status" }],
    "r3.ihe_mhd_minimal_document_reference.subject": [{ "type": 0, "value": "Onderwerp" }],
    "r3.ihe_mhd_minimal_document_reference.type": [{ "type": 0, "value": "Type" }],
    "r3.nl_core_episodeofcare": [{ "type": 0, "value": "Episode" }],
    "r3.nl_core_episodeofcare.identifier": [{ "type": 0, "value": "Identificatienummer" }],
    "r3.nl_core_episodeofcare.patient": [{ "type": 0, "value": "Patient" }],
    "r3.nl_core_episodeofcare.period": [{ "type": 0, "value": "Periode" }],
    "r3.nl_core_episodeofcare.type": [{ "type": 0, "value": "Type" }],
    "r3.nl_core_observation": [{ "type": 0, "value": "Observatie" }],
    "r3.nl_core_practitionerrole": [{ "type": 0, "value": "Zorgverlener rol" }],
    "r3.zib_administration_agreement.performer": [{ "type": 0, "value": "Uitvoerder" }],
    "r3.zib_administration_agreement.performer.actor": [{ "type": 0, "value": "Specialist" }],
    "r3.zib_administration_agreement.performer.on_behalf_of": [{ "type": 0, "value": "Op verzoek van" }],
    "r3.zib_administration_agreement.period_of_use": [{ "type": 0, "value": "Gebruiksperiode" }],
    "r3.zib_administration_agreement.stop_type": [{ "type": 0, "value": "Beëindigingsreden" }],
    "r3.zib_advance_directive.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_alcohol_use.identifier": [{ "type": 0, "value": "Identificatie" }],
    "r3.zib_alcohol_use.performer": [{ "type": 0, "value": "Verantwoordelijk" }],
    "r3.zib_alcohol_use.subject": [{ "type": 0, "value": "Patiënt" }],
    "r3.zib_alert": [{ "type": 0, "value": "Alert" }],
    "r3.zib_alert.author": [{ "type": 0, "value": "Auteur" }],
    "r3.zib_alert.identifier": [{ "type": 0, "value": "Identificatie" }],
    "r3.zib_laboratory_test_result_observation.context": [{ "type": 0, "value": "Verband" }],
    "r3.zib_laboratory_test_result_observation.general_test_information": [{ "type": 0, "value": "Algemene testinformatie" }],
    "r3.zib_laboratory_test_result_observation.interpretation": [{ "type": 0, "value": "Interpretatie" }],
    "r3.zib_laboratory_test_result_observation.lab_test": [{ "type": 0, "value": "Laboratoriumtest" }],
    "r3.zib_laboratory_test_result_observation.performer": [{ "type": 0, "value": "Zorgverlener" }],
    "r3.zib_laboratory_test_result_observation.reference_range.type": [{ "type": 0, "value": "Referentie type" }],
    "r3.zib_laboratory_test_result_substance": [{ "type": 0, "value": "Monstermateriaal" }],
    "r3.zib_medical_device_request": [{ "type": 0, "value": "Medisch hulpmiddel aanvraag" }],
    "r3.zib_medication_use.effective_period.duration": [{ "type": 0, "value": "Tijdsduur" }],
    "r3.zib_medication_use.repeat_period_cyclical_schedule": [{ "type": 0, "value": "Herhaalperiode cyclisch schema" }],
    "r3.zib_vaccination_recommendation": [{ "type": 0, "value": "Vaccinatieadvies" }]
  };
  const r4ResourceLabels = {
    "r4.nl_core_contact_information_email_addresses": [{ "type": 0, "value": "Contactgegevens" }],
    "r4.nl_core_contact_information_email_addresses.use": [{ "type": 0, "value": "Email soort" }],
    "r4.nl_core_contact_information_email_addresses.value": [{ "type": 0, "value": "E-mailadres" }],
    "r4.nl_core_contact_information_telephone_numbers": [{ "type": 0, "value": "Contactgegevens" }],
    "r4.nl_core_contact_information_telephone_numbers.comment": [{ "type": 0, "value": "Telecom toelichting" }],
    "r4.nl_core_contact_information_telephone_numbers.telecom_type": [{ "type": 0, "value": "Telecom type" }],
    "r4.nl_core_contact_information_telephone_numbers.use": [{ "type": 0, "value": "Telecom type / nummer soort" }],
    "r4.nl_core_contact_information_telephone_numbers.value": [{ "type": 0, "value": "Telefoonnummer" }],
    "r4.nl_core_healtcare_provider": [{ "type": 0, "value": "Zorgverlener" }],
    "r4.nl_core_healtcare_provider.identifier": [{ "type": 0, "value": "Identifier" }],
    "r4.nl_core_healtcare_provider.managing_organization": [{ "type": 0, "value": "Beherende organisatie" }],
    "r4.nl_core_healtcare_provider.name": [{ "type": 0, "value": "Zorgverlener naam" }],
    "r4.nl_core_health_professional_practitioner_role": [{ "type": 0, "value": "Zorgprofessional rol" }],
    "r4.nl_core_health_professional_practitioner_role.location": [{ "type": 0, "value": "Locatie" }],
    "r4.nl_core_health_professional_practitioner_role.organization": [{ "type": 0, "value": "Zorgaanbieder" }],
    "r4.nl_core_health_professional_practitioner_role.practitioner": [{ "type": 0, "value": "Zorgverlener" }],
    "r4.nl_core_health_professional_practitioner_role.speciality": [{ "type": 0, "value": "Specialiteit" }],
    "r4.nl_core_healthcare_provider_organization": [{ "type": 0, "value": "Zorgverlener organisatie" }],
    "r4.nl_core_healthcare_provider_organization.department_speciality": [{ "type": 0, "value": "Zorgverlener organisatie afdelings specialiteit" }],
    "r4.nl_core_healthcare_provider_organization.identifier": [{ "type": 0, "value": "Zorgverlener organisatie identifier" }],
    "r4.nl_core_healthcare_provider_organization.name": [{ "type": 0, "value": "Zorgverlener organisatie naam" }],
    "r4.nl_core_healthcare_provider_organization.organization_type": [{ "type": 0, "value": "Zorgverlener organisatie type" }],
    "r4.nl_core_vaccination_event.dose_quantity": [{ "type": 0, "value": "Dosis" }],
    "r4.nl_core_vaccination_event.extra": [{ "type": 0, "value": "Extra informatie" }],
    "r4.nl_core_vaccination_event.identifier": [{ "type": 0, "value": "Identificatienummer" }],
    "r4.nl_core_vaccination_event.location": [{ "type": 0, "value": "Zorgaanbieder" }],
    "r4.nl_core_vaccination_event.note": [{ "type": 0, "value": "Toelichting" }],
    "r4.nl_core_vaccination_event.occurrence_date_time": [{ "type": 0, "value": "Gegeven op" }],
    "r4.nl_core_vaccination_event.performed_by": [{ "type": 0, "value": "Gegeven door" }],
    "r4.nl_core_vaccination_event.performer": [{ "type": 0, "value": "Zorgverlener" }],
    "r4.nl_core_vaccination_event.pharmaceutical_product": [{ "type": 0, "value": "Inenting" }],
    "r4.nl_core_vaccination_event.protocol_applied": [{ "type": 0, "value": "Protocol toegepast" }],
    "r4.nl_core_vaccination_event.protocol_applied.authority": [{ "type": 0, "value": "Autoriteit" }],
    "r4.nl_core_vaccination_event.protocol_applied.dose_number": [{ "type": 0, "value": "Dosis nummer" }],
    "r4.nl_core_vaccination_event.protocol_applied.series_doses": [{ "type": 0, "value": "Serie dosis" }],
    "r4.nl_core_vaccination_event.route": [{ "type": 0, "value": "Toedieningsweg" }],
    "r4.nl_core_vaccination_event.site": [{ "type": 0, "value": "Lichaamsplek" }],
    "r4.nl_core_vaccination_event.status": [{ "type": 0, "value": "Status" }],
    "r4.nl_core_vaccination_event.vaccine_code": [{ "type": 0, "value": "Uniek nummer" }],
    "r4.zib_pharmaceutical_product.batch": [{ "type": 0, "value": "Batch" }],
    "r4.zib_pharmaceutical_product.batch.expiration_date": [{ "type": 0, "value": "Batch vervaldatum" }],
    "r4.zib_pharmaceutical_product.batch.lot_number": [{ "type": 0, "value": "Batch lotnummer" }],
    "r4.zib_pharmaceutical_product.description": [{ "type": 0, "value": "Omschrijving" }],
    "r4.zib_pharmaceutical_product.identifier": [{ "type": 0, "value": "Serienummer" }],
    "r4.zib_pharmaceutical_product.ingredient.item": [{ "type": 0, "value": "Medicatie ingredient item" }]
  };
  const summaryLabels = {
    "summary.options": [{ "type": 0, "value": "Opties" }],
    "summary.organization": [{ "type": 0, "value": "Zorgaanbieder" }],
    "summary.r3.ihe_mhd_minimal_document_reference.group_attachment": [{ "type": 0, "value": "Bijlage" }],
    "summary.r3.ihe_mhd_minimal_document_reference.group_author": [{ "type": 0, "value": "Opgesteld door" }],
    "summary.r3.ihe_mhd_minimal_document_reference.show_details": [{ "type": 0, "value": "Bekijk alle documentgegevens" }],
    "summary.r3.zib_instructions_for_use": [{ "type": 0, "value": "Instructies " }, { "type": 1, "value": "sequence" }],
    "summary.r3.zib_instructions_for_use.dose": [{ "type": 0, "value": "Hoeveelheid per keer" }],
    "summary.r3.zib_instructions_for_use.dose.high": [{ "type": 0, "value": "Maximaal" }],
    "summary.r3.zib_instructions_for_use.dose.low": [{ "type": 0, "value": "Minimaal" }],
    "summary.r3.zib_instructions_for_use.text": [{ "type": 0, "value": "Gebruiksaanwijzing" }],
    "summary.r3.zib_laboratory_test_result_observation.effective": [{ "type": 0, "value": "Datum van de uitslag" }],
    "summary.r3.zib_laboratory_test_result_observation.effective.end": [{ "type": 0, "value": "Eind datum van de uitslag" }],
    "summary.r3.zib_laboratory_test_result_observation.effective.start": [{ "type": 0, "value": "Begin datum van de uitslag" }],
    "summary.r3.zib_laboratory_test_result_observation.group_performer": [{ "type": 0, "value": "Test afgenomen door" }],
    "summary.r3.zib_laboratory_test_result_observation.group_test_details": [{ "type": 0, "value": "Details van de test" }],
    "summary.r3.zib_laboratory_test_result_observation.interpretation": [{ "type": 0, "value": "Beoordeling" }],
    "summary.r3.zib_laboratory_test_result_observation.performer": [{ "type": 0, "value": "Specialist" }],
    "summary.r3.zib_laboratory_test_result_observation.reference_range": [{ "type": 0, "value": "Referentiewaarden" }],
    "summary.r3.zib_laboratory_test_result_observation.reference_range.high": [{ "type": 0, "value": "Maximale waarde" }],
    "summary.r3.zib_laboratory_test_result_observation.reference_range.low": [{ "type": 0, "value": "Minimale waarde" }],
    "summary.r3.zib_laboratory_test_result_observation.show_details": [{ "type": 0, "value": "Bekijk alle uitslaggegevens" }],
    "summary.r3.zib_laboratory_test_result_observation.specimen": [{ "type": 0, "value": "Materiaal" }],
    "summary.r3.zib_laboratory_test_result_observation.status": [{ "type": 0, "value": "Status" }],
    "summary.r3.zib_laboratory_test_result_observation.value": [{ "type": 0, "value": "Resultaat" }],
    "summary.r3.zib_medication_use.group_period": [{ "type": 0, "value": "Periode van gebruik" }],
    "summary.r3.zib_medication_use.group_prescriber": [{ "type": 0, "value": "Voorgeschreven door" }],
    "summary.r3.zib_medication_use.prescriber": [{ "type": 0, "value": "Specialist" }],
    "summary.r3.zib_medication_use.show_details": [{ "type": 0, "value": "Bekijk alle medicijngegevens" }],
    "summary.r3.zib_medication_use.status": [{ "type": 0, "value": "Status" }],
    "summary.r4.nl_core_vaccination_event.group_performer": [{ "type": 0, "value": "Gegeven door" }],
    "summary.r4.nl_core_vaccination_event.show_details": [{ "type": 0, "value": "Bekijk alle vaccinatiegegevens" }]
  };
  const systemLabels = {
    "system.code.http://hl7.org/fhir/referencerange-meaning|follicular": [{ "type": 0, "value": "Folliculair stadium referentiewaarden" }],
    "system.code.http://hl7.org/fhir/referencerange-meaning|luteal": [{ "type": 0, "value": "Luteaal referentiewaarden" }],
    "system.code.http://hl7.org/fhir/referencerange-meaning|midcycle": [{ "type": 0, "value": "Middencyclus referentiewaarden" }],
    "system.code.http://hl7.org/fhir/referencerange-meaning|normal": [{ "type": 0, "value": "Normale referentiewaarden" }],
    "system.code.http://hl7.org/fhir/referencerange-meaning|post": [{ "type": 0, "value": "Posttherapeutische referentiewaarden" }],
    "system.code.http://hl7.org/fhir/referencerange-meaning|postmeopausal": [{ "type": 0, "value": "Post-menopauze referentiewaarden" }],
    "system.code.http://hl7.org/fhir/referencerange-meaning|pre": [{ "type": 0, "value": "Pre-therapeutische referentiewaarden" }],
    "system.code.http://hl7.org/fhir/referencerange-meaning|pre-puberty": [{ "type": 0, "value": "Pre-puberteit referentiewaarden" }],
    "system.code.http://hl7.org/fhir/referencerange-meaning|recommended": [{ "type": 0, "value": "Aanbevolen referentiewaarden" }],
    "system.code.http://hl7.org/fhir/referencerange-meaning|therapeutic": [{ "type": 0, "value": "Therapeutische referentiewaarden" }],
    "system.code.http://hl7.org/fhir/referencerange-meaning|treatment": [{ "type": 0, "value": "Behandelings referentiewaarden" }],
    "system.urn:oid:2.16.840.1.113883.2.4.4.9": [{ "type": 0, "value": "G-Standaard Toedieningswegen (tabel 7)" }],
    "system.value.http://unitsofmeasure.org|d": [{ "offset": 0, "options": { "one": { "value": [{ "type": 0, "value": "één dag" }] }, "other": { "value": [{ "style": null, "type": 2, "value": "value" }, { "type": 0, "value": " dagen" }] } }, "pluralType": "cardinal", "type": 6, "value": "value" }],
    "system.value.http://unitsofmeasure.org|mmol/L": [{ "offset": 0, "options": { "one": { "value": [{ "style": null, "type": 2, "value": "value" }, { "type": 0, "value": " millimol per liter" }] }, "other": { "value": [{ "style": null, "type": 2, "value": "value" }, { "type": 0, "value": " millimol per liter" }] } }, "pluralType": "cardinal", "type": 6, "value": "value" }],
    "system.value.urn:oid:2.16.840.1.113883.2.4.4.1.900.2|245": [{ "offset": 0, "options": { "one": { "value": [{ "style": null, "type": 2, "value": "value" }, { "type": 0, "value": " stuk" }] }, "other": { "value": [{ "style": null, "type": 2, "value": "value" }, { "type": 0, "value": " stuks" }] } }, "pluralType": "cardinal", "type": 6, "value": "value" }]
  };
  const r3ResourceLabelsDefault = {
    "r3.gp_encounter_report": [{ "type": 0, "value": "Deelcontactverslag" }],
    "r3.gp_journal_entry.value": [{ "type": 0, "value": "Journaalregel tekst" }],
    "r3.nl_core_address": [{ "type": 0, "value": "Adres informatie" }],
    "r3.nl_core_address.address_type.value": [{ "type": 0, "value": "Adres soort" }],
    "r3.nl_core_address.city": [{ "type": 0, "value": "Municipality" }],
    "r3.nl_core_address.country": [{ "type": 0, "value": "Land" }],
    "r3.nl_core_address.country.country_code.value": [{ "type": 0, "value": "Land GBA codelijst" }],
    "r3.nl_core_address.district": [{ "type": 0, "value": "Gemeente" }],
    "r3.nl_core_address.official": [{ "type": 0, "value": "Markeer een adres als een 'officieel geregistreerd adres." }],
    "r3.nl_core_address.postal_code": [{ "type": 0, "value": "Postcode" }],
    "r3.nl_core_address.state": [{ "type": 0, "value": "Provincie" }],
    "r3.nl_core_address_official.value": [{ "type": 0, "value": "True als deze deel is van een officieel register. false indien dat niet het geval is" }],
    "r3.nl_core_careplan.nursing_intervention.detail.code": [{ "type": 0, "value": "Interventie" }],
    "r3.nl_core_careplan.nursing_intervention.detail.goal": [{ "type": 0, "value": "Behandeldoel" }],
    "r3.nl_core_careplan.nursing_intervention.detail.medical_device": [{ "type": 0, "value": "Medisch hulpmiddel" }],
    "r3.nl_core_careplan.nursing_intervention.detail.performer": [{ "type": 0, "value": "Uitvoerder" }],
    "r3.nl_core_careplan.nursing_intervention.detail.reason_reference": [{ "type": 0, "value": "Indicatie" }],
    "r3.nl_core_careplan.nursing_intervention.detail.scheduled_timing.repeat.bounds_period.end": [{ "type": 0, "value": "Actie eind datum tijd" }],
    "r3.nl_core_careplan.nursing_intervention.detail.scheduled_timing.repeat.bounds_period.start": [{ "type": 0, "value": "Actie start datum tijd" }],
    "r3.nl_core_careplan.nursing_intervention.detail.scheduled_timing.repeat.frequency": [{ "type": 0, "value": "Frequentie" }],
    "r3.nl_core_careplan.nursing_intervention.detail.scheduled_timing.repeat.period": [{ "type": 0, "value": "Interval" }],
    "r3.nl_core_careplan.nursing_intervention.outcome_codeable_concept.text": [{ "type": 0, "value": "Zorgresultaat" }],
    "r3.nl_core_careplan.nursing_intervention.outcome_reference": [{ "type": 0, "value": "Meetwaarde" }],
    "r3.nl_core_careteam.participant.role.health_professional_role": [{ "type": 0, "value": "Zorgverlener rol" }],
    "r3.nl_core_contactpoint": [{ "type": 0, "value": "Contactgegevens" }],
    "r3.nl_core_contactpoint.system": [{ "type": 0, "value": "Telecom type / email soort" }],
    "r3.nl_core_contactpoint.telecom_type": [{ "type": 0, "value": "Telecom type" }],
    "r3.nl_core_contactpoint.use": [{ "type": 0, "value": "Telecom type / nummer soort / email soort" }],
    "r3.nl_core_contactpoint.value": [{ "type": 0, "value": "Telefoonnummer / e-mailadres" }],
    "r3.nl_core_episodeofcare.type.text": [{ "type": 0, "value": "Concern label" }],
    "r3.nl_core_healthcareservice.telecom": [{ "type": 0, "value": "Contactgegevens" }],
    "r3.nl_core_humanname.family": [{ "type": 0, "value": "Achternaam" }],
    "r3.nl_core_humanname.family.humanname_own_name": [{ "type": 0, "value": "Geslachtsnaam" }],
    "r3.nl_core_humanname.family.humanname_own_prefix": [{ "type": 0, "value": "Voorvoegsel geslachtsnaam" }],
    "r3.nl_core_humanname.family.humanname_partner_name": [{ "type": 0, "value": "Geslachtsnaam partner" }],
    "r3.nl_core_humanname.family.humanname_partner_prefix": [{ "type": 0, "value": "Voorvoegsel geslachtsnaam partner" }],
    "r3.nl_core_humanname.given": [{ "type": 0, "value": "Voornamen" }],
    "r3.nl_core_humanname.humanname_assembly_order": [{ "type": 0, "value": "Voorkeursvolgorde van de naamdelen." }],
    "r3.nl_core_location.address": [{ "type": 0, "value": "Adresgegevens" }],
    "r3.nl_core_location.name": [{ "type": 0, "value": "Organization location" }],
    "r3.nl_core_location.telecom": [{ "type": 0, "value": "Contactgegevens" }],
    "r3.nl_core_organization": [{ "type": 0, "value": "Zorgaanbieder" }],
    "r3.nl_core_organization.address": [{ "type": 0, "value": "Adresgegevens" }],
    "r3.nl_core_organization.agb": [{ "type": 0, "value": "AGB" }],
    "r3.nl_core_organization.agb.value": [{ "type": 0, "value": "AGB-z (vektis AGB-z zorgverlenertabel)" }],
    "r3.nl_core_organization.alias": [{ "type": 0, "value": "Organisatie alias" }],
    "r3.nl_core_organization.department_specialty": [{ "type": 0, "value": "Afdeling specialisme" }],
    "r3.nl_core_organization.name": [{ "type": 0, "value": "Organisatie naam of afdeling naam" }],
    "r3.nl_core_organization.organization_type": [{ "type": 0, "value": "Organisatie type" }],
    "r3.nl_core_organization.telecom": [{ "type": 0, "value": "Contactgegevens" }],
    "r3.nl_core_organization.ura": [{ "type": 0, "value": "URA" }],
    "r3.nl_core_organization.ura.value": [{ "type": 0, "value": "URA (UZI-register abonneenummer)" }],
    "r3.nl_core_organization.uzovi": [{ "type": 0, "value": "UZOVI" }],
    "r3.nl_core_organization.uzovi.value": [{ "type": 0, "value": "Unieke zorgverekeraar identificatie (het UZOVI-nummer)" }],
    "r3.nl_core_patient": [{ "type": 0, "value": "Patiënt" }],
    "r3.nl_core_patient.address": [{ "type": 0, "value": "Adresgegevens" }],
    "r3.nl_core_patient.birth_date": [{ "type": 0, "value": "Geboortedatum" }],
    "r3.nl_core_patient.bsn": [{ "type": 0, "value": "BSN" }],
    "r3.nl_core_patient.bsn.value": [{ "type": 0, "value": "BSN" }],
    "r3.nl_core_patient.communication": [{ "type": 0, "value": "Taalvaardigheid" }],
    "r3.nl_core_patient.communication.language": [{ "type": 0, "value": "Communicatie taal" }],
    "r3.nl_core_patient.contact": [{ "type": 0, "value": "Contactpersoon" }],
    "r3.nl_core_patient.contact.address": [{ "type": 0, "value": "Adresgegevens" }],
    "r3.nl_core_patient.contact.name": [{ "type": 0, "value": "Naamgegevens" }],
    "r3.nl_core_patient.contact.relationship": [{ "type": 0, "value": "Relatie" }],
    "r3.nl_core_patient.contact.role": [{ "type": 0, "value": "Rol" }],
    "r3.nl_core_patient.deceased": [{ "type": 0, "value": "Overlijdensindicator/datum overlijden" }],
    "r3.nl_core_patient.gender": [{ "type": 0, "value": "Geslacht" }],
    "r3.nl_core_patient.gender.geslacht_codelijst": [{ "type": 0, "value": "Geslacht" }],
    "r3.nl_core_patient.general_practitioner": [{ "type": 0, "value": "Huisarts" }],
    "r3.nl_core_patient.identifier": [{ "type": 0, "value": "Identificatienummer" }],
    "r3.nl_core_patient.marital_status": [{ "type": 0, "value": "Burgerlijke staat" }],
    "r3.nl_core_patient.multiple_birth": [{ "type": 0, "value": "Meerlingindicator" }],
    "r3.nl_core_patient.name": [{ "type": 0, "value": "Naamgegevens" }],
    "r3.nl_core_patient.nationality": [{ "type": 0, "value": "Nationaliteit" }],
    "r3.nl_core_patient.preferred_pharmacy": [{ "type": 0, "value": "Verwijst naar de voorkeursapotheek van de patiënt" }],
    "r3.nl_core_person.address": [{ "type": 0, "value": "Adresgegevens" }],
    "r3.nl_core_person.birth_date": [{ "type": 0, "value": "Geboortedatum" }],
    "r3.nl_core_person.bsn": [{ "type": 0, "value": "BSN" }],
    "r3.nl_core_person.bsn.value": [{ "type": 0, "value": "BSN" }],
    "r3.nl_core_person.gender": [{ "type": 0, "value": "Geslacht" }],
    "r3.nl_core_person.identifier": [{ "type": 0, "value": "Identificatienummer" }],
    "r3.nl_core_person.name": [{ "type": 0, "value": "Naamgegevens" }],
    "r3.nl_core_person.telecom": [{ "type": 0, "value": "Contactgegevens" }],
    "r3.nl_core_practitioner": [{ "type": 0, "value": "Zorgverlener" }],
    "r3.nl_core_practitioner.address": [{ "type": 0, "value": "Adresgegevens" }],
    "r3.nl_core_practitioner.agb": [{ "type": 0, "value": "AGB" }],
    "r3.nl_core_practitioner.big": [{ "type": 0, "value": "BIG" }],
    "r3.nl_core_practitioner.identifier": [{ "type": 0, "value": "Zorgverlener identificatie nummer" }],
    "r3.nl_core_practitioner.name": [{ "type": 0, "value": "Naamgegevens" }],
    "r3.nl_core_practitioner.uzi": [{ "type": 0, "value": "UZI" }],
    "r3.nl_core_practitionerrole.organization": [{ "type": 0, "value": "Zorgaanbieder" }],
    "r3.nl_core_practitionerrole.specialty": [{ "type": 0, "value": "Specialisme" }],
    "r3.nl_core_practitionerrole.specialty.specialty_agb": [{ "type": 0, "value": "Specialisme AGB" }],
    "r3.nl_core_practitionerrole.specialty.specialty_uzi": [{ "type": 0, "value": "Specialisme UZI" }],
    "r3.nl_core_relatedperson.address": [{ "type": 0, "value": "Adresgegevens" }],
    "r3.nl_core_relatedperson.name": [{ "type": 0, "value": "Naamgegevens" }],
    "r3.nl_core_relatedperson.relationship": [{ "type": 0, "value": "Relatie" }],
    "r3.nl_core_relatedperson.role": [{ "type": 0, "value": "Rol" }],
    "r3.nl_core_relatedperson_role.value": [{ "type": 0, "value": "Rol" }],
    "r3.zib_ability_to_dress_oneself": [{ "type": 0, "value": "Vermogen tot zich kleden" }],
    "r3.zib_ability_to_dress_oneself.body_part_to_be_dressed.value": [{ "type": 0, "value": "Te kleden lichaamsdeel" }],
    "r3.zib_ability_to_dress_oneself.value": [{ "type": 0, "value": "Zich kleden" }],
    "r3.zib_ability_to_drink": [{ "type": 0, "value": "Vermogen tot drinken" }],
    "r3.zib_ability_to_drink.drinking_limitations.value": [{ "type": 0, "value": "Drink beperkingen" }],
    "r3.zib_ability_to_drink.value": [{ "type": 0, "value": "Drinken" }],
    "r3.zib_ability_to_eat": [{ "type": 0, "value": "Vermogen tot eten" }],
    "r3.zib_ability_to_eat.eating_limitations.value": [{ "type": 0, "value": "Eet beperkingen" }],
    "r3.zib_ability_to_eat.value": [{ "type": 0, "value": "Eten" }],
    "r3.zib_ability_to_groome": [{ "type": 0, "value": "Vermogen tot uiterlijke verzorging" }],
    "r3.zib_ability_to_groome.value": [{ "type": 0, "value": "Uiterlijke verzorging" }],
    "r3.zib_ability_to_manage_medication": [{ "type": 0, "value": "Ability to manage medication" }],
    "r3.zib_ability_to_manage_medication.required_assistance.value": [{ "type": 0, "value": "Hulp bij toediening" }],
    "r3.zib_ability_to_manage_medication.value": [{ "type": 0, "value": "Zelfstandig medicatiegebruik" }],
    "r3.zib_ability_to_perform_mouthcare_activities": [{ "type": 0, "value": "Vermogen tot mondverzorging" }],
    "r3.zib_ability_to_perform_mouthcare_activities.value": [{ "type": 0, "value": "Verzorgen tanden" }],
    "r3.zib_ability_to_perform_mouthcare_activities_medical_device": [{ "type": 0, "value": "Prothese" }],
    "r3.zib_ability_to_perform_nursing_activities": [{ "type": 0, "value": "Vermogen tot verpleegtechnische handelingen" }],
    "r3.zib_ability_to_perform_nursing_activities.focus.value": [{ "type": 0, "value": "Betrokkene" }],
    "r3.zib_ability_to_perform_nursing_activities.nursing_intervention.value": [{ "type": 0, "value": "Verpleegkundige interventie" }],
    "r3.zib_ability_to_perform_nursing_activities.value": [{ "type": 0, "value": "Verrichten VPK handeling" }],
    "r3.zib_ability_to_use_toilet": [{ "type": 0, "value": "Vermogen tot toiletgang" }],
    "r3.zib_ability_to_use_toilet.menstrual_care.value": [{ "type": 0, "value": "Zorg bij menstruatie" }],
    "r3.zib_ability_to_use_toilet.toilet_use.value": [{ "type": 0, "value": "Toiletgebruik" }],
    "r3.zib_ability_to_wash_one_self": [{ "type": 0, "value": "Vermogen tot zich wassen" }],
    "r3.zib_ability_to_wash_one_self.body_part_to_be_bathed.value": [{ "type": 0, "value": "Te wassen lichaamsdeel" }],
    "r3.zib_ability_to_wash_one_self.value": [{ "type": 0, "value": "Zich wassen" }],
    "r3.zib_administration_agreement": [{ "type": 0, "value": "Toedieningsafspraak" }],
    "r3.zib_administration_agreement.additional_information": [{ "type": 0, "value": "Toedieningsafspraak aanvullende informatie" }],
    "r3.zib_administration_agreement.agreement_reason": [{ "type": 0, "value": "Reden afspraak" }],
    "r3.zib_administration_agreement.authored_on": [{ "type": 0, "value": "Toedieningsafspraak datum tijd" }],
    "r3.zib_administration_agreement.authorizing_prescription": [{ "type": 0, "value": "Medicatieafspraak" }],
    "r3.zib_administration_agreement.medication_reference": [{ "type": 0, "value": "Geneesmiddel bij toedienings afspraak" }],
    "r3.zib_administration_agreement.medication_treatment": [{ "type": 0, "value": "Medicamenteuze behandeling" }],
    "r3.zib_administration_agreement.note": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_administration_agreement.performer": [{ "type": 0, "value": "Verstrekker" }],
    "r3.zib_administration_agreement.status": [{ "type": 0, "value": "Geannuleerd indicator" }],
    "r3.zib_administration_agreement.usage_duration": [{ "type": 0, "value": "Gebruiksduur" }],
    "r3.zib_administration_schedule": [{ "type": 0, "value": "Toedieningsschema" }],
    "r3.zib_administration_schedule.repeat.bounds": [{ "type": 0, "value": "Doseerduur" }],
    "r3.zib_administration_schedule.repeat.day_of_week": [{ "type": 0, "value": "Weekdagen" }],
    "r3.zib_administration_schedule.repeat.duration": [{ "type": 0, "value": "Toedieninsgduur" }],
    "r3.zib_administration_schedule.repeat.duration_unit": [{ "type": 0, "value": "Toedieninsgduur" }],
    "r3.zib_administration_schedule.repeat.frequency": [{ "type": 0, "value": "Frequentie" }],
    "r3.zib_administration_schedule.repeat.frequency_max": [{ "type": 0, "value": "Maximum waarde" }],
    "r3.zib_administration_schedule.repeat.period": [{ "type": 0, "value": "Interval" }],
    "r3.zib_administration_schedule.repeat.period_unit": [{ "type": 0, "value": "Interval" }],
    "r3.zib_administration_schedule.repeat.time_of_day": [{ "type": 0, "value": "Toedientijd" }],
    "r3.zib_administration_schedule.repeat.when": [{ "type": 0, "value": "Dagdeel" }],
    "r3.zib_advance_directive": [{ "type": 0, "value": "Wilsverklaring" }],
    "r3.zib_advance_directive.consenting_party": [{ "type": 0, "value": "Vertegenwoordiger" }],
    "r3.zib_advance_directive.date_time": [{ "type": 0, "value": "Wilsverklaring datum" }],
    "r3.zib_advance_directive.disorder": [{ "type": 0, "value": "Aandoening" }],
    "r3.zib_advance_directive.source": [{ "type": 0, "value": "Wilsverklaring document" }],
    "r3.zib_advance_directive.type_of_living_will": [{ "type": 0, "value": "Wilsverklaring type" }],
    "r3.zib_alcohol_use": [{ "type": 0, "value": "Alcohol gebruik" }],
    "r3.zib_alcohol_use.amount.value": [{ "type": 0, "value": "Hoeveelheid" }],
    "r3.zib_alcohol_use.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_alcohol_use.effective_period.end": [{ "type": 0, "value": "Stop datum" }],
    "r3.zib_alcohol_use.effective_period.start": [{ "type": 0, "value": "Start datum" }],
    "r3.zib_alcohol_use.value": [{ "type": 0, "value": "Alcohol gebruik status" }],
    "r3.zib_alert.category": [{ "type": 0, "value": "Alert type" }],
    "r3.zib_alert.code": [{ "type": 0, "value": "Alert naam" }],
    "r3.zib_alert.concern_reference": [{ "type": 0, "value": "Conditie" }],
    "r3.zib_alert.period.start": [{ "type": 0, "value": "Begin datum tijd" }],
    "r3.zib_allergy_intolerance": [{ "type": 0, "value": "Allergie intolerantie" }],
    "r3.zib_allergy_intolerance.category.allergie_categorie_codelijst": [{ "type": 0, "value": "Allergie categorie" }],
    "r3.zib_allergy_intolerance.clinical_status": [{ "type": 0, "value": "Allergie status" }],
    "r3.zib_allergy_intolerance.clinical_status.allergie_status_codelijst": [{ "type": 0, "value": "Allergie status" }],
    "r3.zib_allergy_intolerance.code": [{ "type": 0, "value": "Veroorzakende stof" }],
    "r3.zib_allergy_intolerance.criticality.critical_extent_codelist": [{ "type": 0, "value": "Mate van kritiek zijn" }],
    "r3.zib_allergy_intolerance.identifier": [{ "type": 0, "value": "Identificatie" }],
    "r3.zib_allergy_intolerance.last_occurrence": [{ "type": 0, "value": "Laatste reactie datum tijd" }],
    "r3.zib_allergy_intolerance.note.author": [{ "type": 0, "value": "Auteur" }],
    "r3.zib_allergy_intolerance.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_allergy_intolerance.onset_date_time": [{ "type": 0, "value": "Begin datum tijd" }],
    "r3.zib_allergy_intolerance.patient": [{ "type": 0, "value": "Patiënt" }],
    "r3.zib_allergy_intolerance.reaction": [{ "type": 0, "value": "Reactie" }],
    "r3.zib_allergy_intolerance.reaction.description": [{ "type": 0, "value": "Reactie beschrijving" }],
    "r3.zib_allergy_intolerance.reaction.exposure_route": [{ "type": 0, "value": "Wijze van blootstelling" }],
    "r3.zib_allergy_intolerance.reaction.manifestation": [{ "type": 0, "value": "Symptoom" }],
    "r3.zib_allergy_intolerance.reaction.onset": [{ "type": 0, "value": "Reactie tijdstip" }],
    "r3.zib_allergy_intolerance.reaction.severity": [{ "type": 0, "value": "Ernst" }],
    "r3.zib_allergy_intolerance.reaction.substance": [{ "type": 0, "value": "Specifieke stof" }],
    "r3.zib_allergy_intolerance.recorder": [{ "type": 0, "value": "Auteur" }],
    "r3.zib_allergy_intolerance.verification_status": [{ "type": 0, "value": "Allergie status" }],
    "r3.zib_apgar_score.10_minute_appearance_score.value": [{ "type": 0, "value": "Huidskleur score" }],
    "r3.zib_apgar_score.10_minute_grimace_score.value": [{ "type": 0, "value": "Reflexen score" }],
    "r3.zib_apgar_score.10_minute_muscle_tone_score.value": [{ "type": 0, "value": "Spierspanning score" }],
    "r3.zib_apgar_score.10_minute_pulse_score.value": [{ "type": 0, "value": "Hartslag score" }],
    "r3.zib_apgar_score.10_minute_respiratory_score.value": [{ "type": 0, "value": "Ademhaling score" }],
    "r3.zib_apgar_score.1_minute_appearance_score.value": [{ "type": 0, "value": "Huidskleur score" }],
    "r3.zib_apgar_score.1_minute_grimace_score.value": [{ "type": 0, "value": "Reflexen score" }],
    "r3.zib_apgar_score.1_minute_muscle_tone_score.value": [{ "type": 0, "value": "Spierspanning score" }],
    "r3.zib_apgar_score.1_minute_pulse_score.value": [{ "type": 0, "value": "Hartslag score" }],
    "r3.zib_apgar_score.1_minute_respiratory_score.value": [{ "type": 0, "value": "Ademhaling score" }],
    "r3.zib_apgar_score.5_minute_appearance_score.value": [{ "type": 0, "value": "Huidskleur score" }],
    "r3.zib_apgar_score.5_minute_grimace_score.value": [{ "type": 0, "value": "Reflexen score" }],
    "r3.zib_apgar_score.5_minute_muscle_tone_score.value": [{ "type": 0, "value": "Spierspanning score" }],
    "r3.zib_apgar_score.5_minute_pulse_score.value": [{ "type": 0, "value": "Hartslag score" }],
    "r3.zib_apgar_score.5_minute_respiratory_score.value": [{ "type": 0, "value": "Ademhaling score" }],
    "r3.zib_apgar_score.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_apgar_score.effective_date_time": [{ "type": 0, "value": "Apgar score datum tijd" }],
    "r3.zib_apgar_score.value": [{ "type": 0, "value": "Apgar score totaal" }],
    "r3.zib_bladder_function": [{ "type": 0, "value": "Blaasfunctie" }],
    "r3.zib_bladder_function.code": [{ "type": 0, "value": "Blaasfunctie" }],
    "r3.zib_bladder_function.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_bladder_function.value": [{ "type": 0, "value": "Urine continentie" }],
    "r3.zib_blood_pressure": [{ "type": 0, "value": "Bloeddruk" }],
    "r3.zib_blood_pressure.average_blood_pressure_loinc.value": [{ "type": 0, "value": "Gemiddelde bloeddruk" }],
    "r3.zib_blood_pressure.average_blood_pressure_snomed.value": [{ "type": 0, "value": "Gemiddelde bloeddruk" }],
    "r3.zib_blood_pressure.body_site": [{ "type": 0, "value": "Meet locatie" }],
    "r3.zib_blood_pressure.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_blood_pressure.cuff_type_loinc.value": [{ "type": 0, "value": "Manchet type" }],
    "r3.zib_blood_pressure.cuff_type_snomed.value": [{ "type": 0, "value": "Manchet type" }],
    "r3.zib_blood_pressure.diastolic_bp.code": [{ "type": 0, "value": "Diastolische bloeddruk" }],
    "r3.zib_blood_pressure.diastolic_endpoint.code": [{ "type": 0, "value": "Component test" }],
    "r3.zib_blood_pressure.diastolic_endpoint.value": [{ "type": 0, "value": "Diastolisch eindpunt" }],
    "r3.zib_blood_pressure.effective": [{ "type": 0, "value": "Bloeddruk datum tijd" }],
    "r3.zib_blood_pressure.method": [{ "type": 0, "value": "Meetmethode" }],
    "r3.zib_blood_pressure.position_loinc.value": [{ "type": 0, "value": "Houding" }],
    "r3.zib_blood_pressure.position_snomed.value": [{ "type": 0, "value": "Houding" }],
    "r3.zib_blood_pressure.systolic_bp.value": [{ "type": 0, "value": "Systolische bloeddruk" }],
    "r3.zib_body_height": [{ "type": 0, "value": "Lichaamslengte" }],
    "r3.zib_body_height.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_body_height.effective": [{ "type": 0, "value": "Lengte datum tijd" }],
    "r3.zib_body_height.subject": [{ "type": 0, "value": "Patiënt" }],
    "r3.zib_body_height.value": [{ "type": 0, "value": "Lengte waarde" }],
    "r3.zib_body_temperature": [{ "type": 0, "value": "Lichaamstemperatuur" }],
    "r3.zib_body_temperature.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_body_temperature.effective": [{ "type": 0, "value": "Temperatuur datum tijd" }],
    "r3.zib_body_temperature.method": [{ "type": 0, "value": "Temperatuur type" }],
    "r3.zib_body_temperature.value": [{ "type": 0, "value": "Temperatuur waarde" }],
    "r3.zib_body_weight": [{ "type": 0, "value": "Lichaamsgewicht" }],
    "r3.zib_body_weight.clothing.value": [{ "type": 0, "value": "Kleding" }],
    "r3.zib_body_weight.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_body_weight.effective": [{ "type": 0, "value": "Gewicht datum tijd" }],
    "r3.zib_body_weight.value": [{ "type": 0, "value": "Gewicht waarde" }],
    "r3.zib_bowel_function": [{ "type": 0, "value": "Darmfunctie" }],
    "r3.zib_bowel_function.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_bowel_function.defecation_color.value": [{ "type": 0, "value": "Defecatie kleur" }],
    "r3.zib_bowel_function.defecation_consistency.value": [{ "type": 0, "value": "Defecatie consistentie" }],
    "r3.zib_bowel_function.fecal_continence.value": [{ "type": 0, "value": "Feces continentie" }],
    "r3.zib_bowel_function.frequency.value": [{ "type": 0, "value": "Frequentie" }],
    "r3.zib_burn_wound": [{ "type": 0, "value": "Brandwond" }],
    "r3.zib_burn_wound.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r3.zib_burn_wound.body_site.laterality.value": [{ "type": 0, "value": "Lateraliteit" }],
    "r3.zib_burn_wound.code": [{ "type": 0, "value": "Brandwond" }],
    "r3.zib_burn_wound.code.burn_type.value": [{ "type": 0, "value": "Brandwond soort" }],
    "r3.zib_burn_wound.date_of_last_dressing_change.value": [{ "type": 0, "value": "Datum laatste verbandwissel" }],
    "r3.zib_burn_wound.extent.value": [{ "type": 0, "value": "Uitgebreidheid" }],
    "r3.zib_burn_wound.note": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_burn_wound.onset": [{ "type": 0, "value": "Ontstaans datum" }],
    "r3.zib_burn_wound.stage.summary": [{ "type": 0, "value": "Dieptegraad" }],
    "r3.zib_burn_wound_extent": [{ "type": 0, "value": "Uitgebreidheid" }],
    "r3.zib_checklist_pain_behaviour": [{ "type": 0, "value": "Checklist pijn gedrag" }],
    "r3.zib_checklist_pain_behaviour.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_checklist_pain_behaviour.cry.value": [{ "type": 0, "value": "Huilen" }],
    "r3.zib_checklist_pain_behaviour.effective_date_time": [{ "type": 0, "value": "Score datum tijd" }],
    "r3.zib_checklist_pain_behaviour.eyes.value": [{ "type": 0, "value": "Ogen" }],
    "r3.zib_checklist_pain_behaviour.face.value": [{ "type": 0, "value": "Gezicht" }],
    "r3.zib_checklist_pain_behaviour.grimace.value": [{ "type": 0, "value": "Grimas" }],
    "r3.zib_checklist_pain_behaviour.looking_sad.value": [{ "type": 0, "value": "Verdrietige blik" }],
    "r3.zib_checklist_pain_behaviour.moaning.value": [{ "type": 0, "value": "Kreunen" }],
    "r3.zib_checklist_pain_behaviour.mouth.value": [{ "type": 0, "value": "Mond" }],
    "r3.zib_checklist_pain_behaviour.panic.value": [{ "type": 0, "value": "Paniek" }],
    "r3.zib_checklist_pain_behaviour.sounds_of_restlessness.value": [{ "type": 0, "value": "Onrustige geluiden" }],
    "r3.zib_checklist_pain_behaviour.tears.value": [{ "type": 0, "value": "Tranen" }],
    "r3.zib_checklist_pain_behaviour.value": [{ "type": 0, "value": "Totaal score" }],
    "r3.zib_comfort_scale": [{ "type": 0, "value": "Comfort score" }],
    "r3.zib_comfort_scale.alertness.value": [{ "type": 0, "value": "Alertheid" }],
    "r3.zib_comfort_scale.body_movement.value": [{ "type": 0, "value": "Lichaamsbeweging" }],
    "r3.zib_comfort_scale.body_muscle_tone.value": [{ "type": 0, "value": "Spierspanning" }],
    "r3.zib_comfort_scale.calmness_agitation.value": [{ "type": 0, "value": "Kalmte_ agitatie" }],
    "r3.zib_comfort_scale.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_comfort_scale.crying.value": [{ "type": 0, "value": "Ademhalingsreactie" }],
    "r3.zib_comfort_scale.effective_date_time": [{ "type": 0, "value": "Score datum tijd" }],
    "r3.zib_comfort_scale.facial_tone.value": [{ "type": 0, "value": "Gezichtsspanning" }],
    "r3.zib_comfort_scale.respiratory_response.value": [{ "type": 0, "value": "Ademhalingsreactie" }],
    "r3.zib_comfort_scale.value": [{ "type": 0, "value": "Totaal score" }],
    "r3.zib_contact_information_telecom_type": [{ "type": 0, "value": "Definieert een specifieke gecodeerde waarde voor het concept telecom type gebruikt in de zib contactgegevens, zodat de in de zib gedefinieerde waardelijst kan worden gebruikt." }],
    "r3.zib_development_child": [{ "type": 0, "value": "Ontwikkeling kind" }],
    "r3.zib_development_child.age_first_menstruation.value": [{ "type": 0, "value": "Leeftijd eerste menstruatie" }],
    "r3.zib_development_child.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_development_child.development_cognition.value": [{ "type": 0, "value": "Ontwikkeling verstandelijk" }],
    "r3.zib_development_child.development_linguistics.value": [{ "type": 0, "value": "Ontwikkeling taal" }],
    "r3.zib_development_child.development_locomotion.value": [{ "type": 0, "value": "Ontwikkeling motoriek" }],
    "r3.zib_development_child.development_social.value": [{ "type": 0, "value": "Ontwikkeling sociaal" }],
    "r3.zib_development_child.effective_date_time": [{ "type": 0, "value": "Ontwikkeling kind datum tijd" }],
    "r3.zib_development_child.toilet_trainedness_feces.value": [{ "type": 0, "value": "Zindelijkheid feces" }],
    "r3.zib_development_child.toilet_trainedness_urine.value": [{ "type": 0, "value": "Zindelijkheid urine" }],
    "r3.zib_dispense": [{ "type": 0, "value": "Verstrekking" }],
    "r3.zib_dispense.additional_information": [{ "type": 0, "value": "Verstrekking aanvullende informatie" }],
    "r3.zib_dispense.authorizing_prescription": [{ "type": 0, "value": "Verstrekkingsverzoek" }],
    "r3.zib_dispense.days_supply": [{ "type": 0, "value": "Verbruiks duur" }],
    "r3.zib_dispense.destination": [{ "type": 0, "value": "Afleverlocatie" }],
    "r3.zib_dispense.distribution_form": [{ "type": 0, "value": "Distributievorm" }],
    "r3.zib_dispense.medication_reference": [{ "type": 0, "value": "Verstrek geneesmiddel" }],
    "r3.zib_dispense.medication_treatment": [{ "type": 0, "value": "Medicamenteuze behandeling" }],
    "r3.zib_dispense.note": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_dispense.performer": [{ "type": 0, "value": "Verstrekker" }],
    "r3.zib_dispense.quantity": [{ "type": 0, "value": "Verstrekte hoeveelheid" }],
    "r3.zib_dispense.request_date": [{ "type": 0, "value": "Aanschrijfdatum" }],
    "r3.zib_dispense.when_handed_over": [{ "type": 0, "value": "Verstrekkings datum tijd" }],
    "r3.zib_dispense_request": [{ "type": 0, "value": "Verstrekkingsverzoek" }],
    "r3.zib_dispense_request.additional_wishes": [{ "type": 0, "value": "Aanvullende wensen" }],
    "r3.zib_dispense_request.authored_on": [{ "type": 0, "value": "Verstrekkingsverzoek datum" }],
    "r3.zib_dispense_request.dispense_request": [{ "type": 0, "value": "Verstrekkingsverzoek" }],
    "r3.zib_dispense_request.dispense_request.dispense_location": [{ "type": 0, "value": "Afleverlocatie" }],
    "r3.zib_dispense_request.dispense_request.expected_supply_duration": [{ "type": 0, "value": "Duur" }],
    "r3.zib_dispense_request.dispense_request.number_of_repeats_allowed": [{ "type": 0, "value": "Aantal herhalingen" }],
    "r3.zib_dispense_request.dispense_request.performer": [{ "type": 0, "value": "Beoogd verstrekker" }],
    "r3.zib_dispense_request.dispense_request.quantity": [{ "type": 0, "value": "Te verstrekken hoeveelheid" }],
    "r3.zib_dispense_request.dispense_request.validity_period": [{ "type": 0, "value": "Verbruiksperiode" }],
    "r3.zib_dispense_request.dispense_request.validity_period.end": [{ "type": 0, "value": "Einddatum" }],
    "r3.zib_dispense_request.dispense_request.validity_period.start": [{ "type": 0, "value": "Ingangsdatum" }],
    "r3.zib_dispense_request.medication_reference": [{ "type": 0, "value": "Geneesmiddel" }],
    "r3.zib_dispense_request.medication_treatment": [{ "type": 0, "value": "Medicamenteuze behandeling" }],
    "r3.zib_dispense_request.note": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_drug_use": [{ "type": 0, "value": "Drugs gebruik" }],
    "r3.zib_drug_use.amount.value": [{ "type": 0, "value": "Hoeveelheid" }],
    "r3.zib_drug_use.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_drug_use.drug_or_medication_type.value": [{ "type": 0, "value": "Drugs of geneesmiddel soort" }],
    "r3.zib_drug_use.effective_period.end": [{ "type": 0, "value": "Stop datum" }],
    "r3.zib_drug_use.effective_period.start": [{ "type": 0, "value": "Start datum" }],
    "r3.zib_drug_use.route_of_administration.value": [{ "type": 0, "value": "Toedieningsweg" }],
    "r3.zib_drug_use.value": [{ "type": 0, "value": "Drug gebruik status" }],
    "r3.zib_encounter": [{ "type": 0, "value": "Contact" }],
    "r3.zib_encounter.class": [{ "type": 0, "value": "Contact type" }],
    "r3.zib_encounter.diagnosis.condition": [{ "type": 0, "value": "Probleem" }],
    "r3.zib_encounter.hospitalization.admit_source": [{ "type": 0, "value": "Herkomst" }],
    "r3.zib_encounter.hospitalization.discharge_disposition": [{ "type": 0, "value": "Bestemming" }],
    "r3.zib_encounter.participant.individual": [{ "type": 0, "value": "Contact met" }],
    "r3.zib_encounter.participant.type.health_professional_role": [{ "type": 0, "value": "Zorgverlener rol" }],
    "r3.zib_encounter.period.end": [{ "type": 0, "value": "Eind datum tijd" }],
    "r3.zib_encounter.period.start": [{ "type": 0, "value": "Begin datum tijd" }],
    "r3.zib_encounter.reason": [{ "type": 0, "value": "Afwijkende uitslag" }],
    "r3.zib_encounter.reason.text": [{ "type": 0, "value": "Afwijkende uitslag" }],
    "r3.zib_encounter.service_provider": [{ "type": 0, "value": "Locatie" }],
    "r3.zib_family_situation": [{ "type": 0, "value": "Gezinssituatie" }],
    "r3.zib_family_situation.care_responsibility.value": [{ "type": 0, "value": "Zorgtaak" }],
    "r3.zib_family_situation.child.value": [{ "type": 0, "value": "Geboortedatum" }],
    "r3.zib_family_situation.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_family_situation.family_composition.value": [{ "type": 0, "value": "Gezinssamenstelling" }],
    "r3.zib_family_situation.number_of_children.value": [{ "type": 0, "value": "Aantal kinderen" }],
    "r3.zib_family_situation.number_of_children_living_at_home.value": [{ "type": 0, "value": "Aantal kinderen inwonend" }],
    "r3.zib_family_situation_child": [{ "type": 0, "value": "Gezinssituatie kind" }],
    "r3.zib_family_situation_child.child": [{ "type": 0, "value": "Kind" }],
    "r3.zib_family_situation_child.child.contact_person": [{ "type": 0, "value": "Contact persoon" }],
    "r3.zib_family_situation_child.child.value": [{ "type": 0, "value": "Geboortedatum" }],
    "r3.zib_family_situation_child.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_family_situation_child.family_composition.value": [{ "type": 0, "value": "Gezinssamenstelling" }],
    "r3.zib_family_situation_child.number_of_siblings.value": [{ "type": 0, "value": "Aantal kinderen" }],
    "r3.zib_family_situation_child.parent_carer.parent_carer": [{ "type": 0, "value": "Ouder verzorger" }],
    "r3.zib_family_situation_child.sibling": [{ "type": 0, "value": "Broer of zus" }],
    "r3.zib_family_situation_child.sibling.contact_person": [{ "type": 0, "value": "Contactpersoon" }],
    "r3.zib_family_situation_child.sibling.value": [{ "type": 0, "value": "Geboortedatum zus broer" }],
    "r3.zib_family_situation_living_at_home_indicator": [{ "type": 0, "value": "Inwonend" }],
    "r3.zib_family_situation_living_at_home_indicator.value": [{ "type": 0, "value": "Inwonend" }],
    "r3.zib_feeding_pattern_infant": [{ "type": 0, "value": "Voedingspatroon zuigeling" }],
    "r3.zib_feeding_pattern_infant.based_on": [{ "type": 0, "value": "Voedingsadvies" }],
    "r3.zib_feeding_pattern_infant.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_feeding_pattern_infant.effective_date_time": [{ "type": 0, "value": "Voedingspatroon zuigeling datum tijd" }],
    "r3.zib_feeding_pattern_infant.feeding_frequency.value": [{ "type": 0, "value": "Voeding frequentie" }],
    "r3.zib_feeding_pattern_infant.feeding_supplement.value": [{ "type": 0, "value": "Voeding toevoeging" }],
    "r3.zib_feeding_pattern_infant.feeding_type.feeding_method.value": [{ "type": 0, "value": "Voeding methode" }],
    "r3.zib_feeding_pattern_infant.feeding_type.value": [{ "type": 0, "value": "Voeding soort" }],
    "r3.zib_feeding_tube_system": [{ "type": 0, "value": "Sonde systeem" }],
    "r3.zib_feeding_tube_system.medical_device": [{ "type": 0, "value": "Medisch hulpmiddel" }],
    "r3.zib_feeding_tube_system_enteral_nutrition": [{ "type": 0, "value": "Sonde voeding" }],
    "r3.zib_feeding_tube_system_feeding_tube_length": [{ "type": 0, "value": "Sonde lengte" }],
    "r3.zib_flacc_pain_scale": [{ "type": 0, "value": "FLAC cpijn score" }],
    "r3.zib_flacc_pain_scale.activity.value": [{ "type": 0, "value": "Activiteit" }],
    "r3.zib_flacc_pain_scale.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_flacc_pain_scale.consolability.value": [{ "type": 0, "value": "Troostbaar" }],
    "r3.zib_flacc_pain_scale.cry.value": [{ "type": 0, "value": "Huilen" }],
    "r3.zib_flacc_pain_scale.effective_date_time": [{ "type": 0, "value": "Score datum tijd" }],
    "r3.zib_flacc_pain_scale.face.value": [{ "type": 0, "value": "Gezicht" }],
    "r3.zib_flacc_pain_scale.legs.value": [{ "type": 0, "value": "Benen" }],
    "r3.zib_flacc_pain_scale.value": [{ "type": 0, "value": "Totaal score" }],
    "r3.zib_fluid_balance": [{ "type": 0, "value": "Vochtbalans" }],
    "r3.zib_fluid_balance.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_fluid_balance.effective_period.end": [{ "type": 0, "value": "Vochtbalans stoptijd" }],
    "r3.zib_fluid_balance.effective_period.start": [{ "type": 0, "value": "Vochtbalans starttijd" }],
    "r3.zib_fluid_balance.fluid_total_in.value": [{ "type": 0, "value": "Vocht totaal in" }],
    "r3.zib_fluid_balance.fluid_total_out.value": [{ "type": 0, "value": "Vocht totaal uit" }],
    "r3.zib_freedom_restricting_measures": [{ "type": 0, "value": "Vrijheidsbeperkende maatregelen" }],
    "r3.zib_freedom_restricting_measures.legal_status": [{ "type": 0, "value": "Juridische status" }],
    "r3.zib_freedom_restricting_measures.legally_capable.legally_capable_comment": [{ "type": 0, "value": "Wilsbekwaam toelichting" }],
    "r3.zib_freedom_restricting_measures.legally_capable.legally_capable_indicator": [{ "type": 0, "value": "Wilsbekwaam" }],
    "r3.zib_freedom_restricting_measures.performed_period.end": [{ "type": 0, "value": "Einde episode" }],
    "r3.zib_freedom_restricting_measures.performed_period.start": [{ "type": 0, "value": "Aanvang episode" }],
    "r3.zib_freedom_restricting_measures_legally_capable.legally_capable_comment.value": [{ "type": 0, "value": "Wilsbekwaam toelichting" }],
    "r3.zib_freedom_restricting_measures_legally_capable.legally_capable_indicator.value": [{ "type": 0, "value": "Wilsbekwaam" }],
    "r3.zib_freedom_restricting_measures_permission": [{ "type": 0, "value": "Toestemming" }],
    "r3.zib_functional_or_mental_status": [{ "type": 0, "value": "Functionele of mentale status" }],
    "r3.zib_functional_or_mental_status.code": [{ "type": 0, "value": "Status naam" }],
    "r3.zib_functional_or_mental_status.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_functional_or_mental_status.effective_period.start": [{ "type": 0, "value": "Status datum" }],
    "r3.zib_functional_or_mental_status.medical_device": [{ "type": 0, "value": "Hulpmiddel" }],
    "r3.zib_functional_or_mental_status.subject": [{ "type": 0, "value": "Patiënt" }],
    "r3.zib_functional_or_mental_status.value": [{ "type": 0, "value": "Status waarde" }],
    "r3.zib_functional_or_mental_status_medical_device.value": [{ "type": 0, "value": "Medisch hulpmiddel" }],
    "r3.zib_general_measurement": [{ "type": 0, "value": "Meet uitslag" }],
    "r3.zib_general_measurement.code": [{ "type": 0, "value": "Onderzoek" }],
    "r3.zib_general_measurement.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_general_measurement.effective": [{ "type": 0, "value": "Uitslag datum tijd" }],
    "r3.zib_general_measurement.method": [{ "type": 0, "value": "Meetmethode" }],
    "r3.zib_general_measurement.related": [{ "type": 0, "value": "Meet uitslag" }],
    "r3.zib_general_measurement.status.result_status_codelist": [{ "type": 0, "value": "Resultaat status" }],
    "r3.zib_general_measurement.value": [{ "type": 0, "value": "Uitslag waarde" }],
    "r3.zib_head_circumference": [{ "type": 0, "value": "Schedelomvang" }],
    "r3.zib_head_circumference.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_head_circumference.effective": [{ "type": 0, "value": "Schedelomvang datum tijd" }],
    "r3.zib_head_circumference.method": [{ "type": 0, "value": "Schedelomvang meetmethode" }],
    "r3.zib_head_circumference.value": [{ "type": 0, "value": "Schedelomvang waarde" }],
    "r3.zib_hearing_function": [{ "type": 0, "value": "Functie horen" }],
    "r3.zib_hearing_function.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_hearing_function.value": [{ "type": 0, "value": "Hoor functie" }],
    "r3.zib_hearing_function_hearing_aid": [{ "type": 0, "value": "Horen hulpmiddel" }],
    "r3.zib_hearing_function_hearing_aid.body_site": [{ "type": 0, "value": "Hulpmiddel anatomische locatie" }],
    "r3.zib_heart_rate": [{ "type": 0, "value": "Hartfrequentie" }],
    "r3.zib_heart_rate.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_heart_rate.effective": [{ "type": 0, "value": "Hartfrequentie datum tijd" }],
    "r3.zib_heart_rate.interpretation": [{ "type": 0, "value": "Hartslag regelmatigheid" }],
    "r3.zib_heart_rate.method": [{ "type": 0, "value": "Hartslag meet methode" }],
    "r3.zib_heart_rate.value": [{ "type": 0, "value": "Hartfrequentie waarde" }],
    "r3.zib_help_from_others.activity": [{ "type": 0, "value": "Hulp van anderen" }],
    "r3.zib_help_from_others.activity.detail.category": [{ "type": 0, "value": "Soort hulp" }],
    "r3.zib_help_from_others.activity.detail.code": [{ "type": 0, "value": "Aard" }],
    "r3.zib_help_from_others.activity.detail.description": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_help_from_others.activity.detail.performer": [{ "type": 0, "value": "Hulpverlener" }],
    "r3.zib_help_from_others.activity.detail.scheduled_string": [{ "type": 0, "value": "Frequentie" }],
    "r3.zib_illness_perception": [{ "type": 0, "value": "Ziektebeleving" }],
    "r3.zib_illness_perception.coping_with_illness_by_family": [{ "type": 0, "value": "Omgaan met ziekteproces door naasten" }],
    "r3.zib_illness_perception.coping_with_illness_by_patient": [{ "type": 0, "value": "Omgaan met ziekteproces door patiënt" }],
    "r3.zib_illness_perception.patient_illness_insight": [{ "type": 0, "value": "Ziekte inzicht van patiënt" }],
    "r3.zib_infusion": [{ "type": 0, "value": "Infuus" }],
    "r3.zib_infusion_administering_system.device.peripheral": [{ "type": 0, "value": "Randapparaat" }],
    "r3.zib_infusion_administering_system.note.text": [{ "type": 0, "value": "Toedienings systeem toelichting" }],
    "r3.zib_infusion_lumen_or_line": [{ "type": 0, "value": "Lumen of lijn" }],
    "r3.zib_infusion_lumen_or_line.administering_system": [{ "type": 0, "value": "Toedienings systeem" }],
    "r3.zib_infusion_lumen_or_line.line_status": [{ "type": 0, "value": "Lijn status" }],
    "r3.zib_infusion_lumen_or_line.lock_fluid": [{ "type": 0, "value": "Slot vloeistof" }],
    "r3.zib_infusion_lumen_or_line.lumen_location": [{ "type": 0, "value": "Lumen locatie" }],
    "r3.zib_instructions_for_use": [{ "type": 0, "value": "Gebruiksinstructie" }],
    "r3.zib_instructions_for_use.additional_instruction": [{ "type": 0, "value": "Aanvullende instructie" }],
    "r3.zib_instructions_for_use.as_needed_codeable_concept": [{ "type": 0, "value": "Zo nodig" }],
    "r3.zib_instructions_for_use.dose": [{ "type": 0, "value": "Keerdosis" }],
    "r3.zib_instructions_for_use.max_dose_per_period": [{ "type": 0, "value": "Maximale dosering" }],
    "r3.zib_instructions_for_use.rate": [{ "type": 0, "value": "Toedieningssnelheid" }],
    "r3.zib_instructions_for_use.route": [{ "type": 0, "value": "Toedieningsweg" }],
    "r3.zib_instructions_for_use.sequence": [{ "type": 0, "value": "Volgnummer" }],
    "r3.zib_instructions_for_use.text": [{ "type": 0, "value": "Omschrijving" }],
    "r3.zib_laboratory_test_result_diagnostic_report": [{ "type": 0, "value": "Laboratorium uitslag" }],
    "r3.zib_laboratory_test_result_diagnostic_report.based_on": [{ "type": 0, "value": "Aanvrager" }],
    "r3.zib_laboratory_test_result_diagnostic_report.category.result_type": [{ "type": 0, "value": "Resultaat type" }],
    "r3.zib_laboratory_test_result_diagnostic_report.code": [{ "type": 0, "value": "Onderzoek" }],
    "r3.zib_laboratory_test_result_diagnostic_report.conclusion": [{ "type": 0, "value": "Uitslag interpretatie en/of toelichting" }],
    "r3.zib_laboratory_test_result_diagnostic_report.identifier": [{ "type": 0, "value": "Identificatie" }],
    "r3.zib_laboratory_test_result_diagnostic_report.performer.role.health_professional_role": [{ "type": 0, "value": "Zorgverlener rol" }],
    "r3.zib_laboratory_test_result_diagnostic_report.specimen": [{ "type": 0, "value": "Monster" }],
    "r3.zib_laboratory_test_result_diagnostic_report.status": [{ "type": 0, "value": "Resultaat status" }],
    "r3.zib_laboratory_test_result_diagnostic_report.status.result_status": [{ "type": 0, "value": "Resultaat status" }],
    "r3.zib_laboratory_test_result_observation": [{ "type": 0, "value": "Laboratorium uitslag" }],
    "r3.zib_laboratory_test_result_observation.based_on": [{ "type": 0, "value": "Aanvrager" }],
    "r3.zib_laboratory_test_result_observation.code": [{ "type": 0, "value": "Test code" }],
    "r3.zib_laboratory_test_result_observation.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_laboratory_test_result_observation.component": [{ "type": 0, "value": "Laboratorium test" }],
    "r3.zib_laboratory_test_result_observation.component.code": [{ "type": 0, "value": "Test code" }],
    "r3.zib_laboratory_test_result_observation.component.interpretation": [{ "type": 0, "value": "Interpretatie vlaggen" }],
    "r3.zib_laboratory_test_result_observation.component.value": [{ "type": 0, "value": "Test uitslag" }],
    "r3.zib_laboratory_test_result_observation.effective": [{ "type": 0, "value": "Test datum tijd" }],
    "r3.zib_laboratory_test_result_observation.identifier": [{ "type": 0, "value": "Identificatie" }],
    "r3.zib_laboratory_test_result_observation.interpretation.interpretatie_vlaggen_codelijst": [{ "type": 0, "value": "Interpretatie vlaggen" }],
    "r3.zib_laboratory_test_result_observation.method": [{ "type": 0, "value": "Testmethode" }],
    "r3.zib_laboratory_test_result_observation.reference_range": [{ "type": 0, "value": "Referentie" }],
    "r3.zib_laboratory_test_result_observation.reference_range.high": [{ "type": 0, "value": "Referentie bovengrens" }],
    "r3.zib_laboratory_test_result_observation.reference_range.low": [{ "type": 0, "value": "Referentie ondergrens" }],
    "r3.zib_laboratory_test_result_observation.related": [{ "type": 0, "value": "Gerelateerde uitslag" }],
    "r3.zib_laboratory_test_result_observation.result_type": [{ "type": 0, "value": "Resultaat type" }],
    "r3.zib_laboratory_test_result_observation.specimen": [{ "type": 0, "value": "Monster" }],
    "r3.zib_laboratory_test_result_observation.status": [{ "type": 0, "value": "Test uitslag status" }],
    "r3.zib_laboratory_test_result_observation.status.test_result_status": [{ "type": 0, "value": "Test uitslag status" }],
    "r3.zib_laboratory_test_result_observation.subject": [{ "type": 0, "value": "Patiënt" }],
    "r3.zib_laboratory_test_result_observation.value": [{ "type": 0, "value": "Test uitslag" }],
    "r3.zib_laboratory_test_result_specimen": [{ "type": 0, "value": "Monster" }],
    "r3.zib_laboratory_test_result_specimen.collection.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r3.zib_laboratory_test_result_specimen.collection.body_site.morphology": [{ "type": 0, "value": "Morfologie" }],
    "r3.zib_laboratory_test_result_specimen.collection.collected_date_time": [{ "type": 0, "value": "Afname datum tijd" }],
    "r3.zib_laboratory_test_result_specimen.collection.collected_period": [{ "type": 0, "value": "Verzamelperiode" }],
    "r3.zib_laboratory_test_result_specimen.collection.method": [{ "type": 0, "value": "Afnameprocedure" }],
    "r3.zib_laboratory_test_result_specimen.collection.quantity": [{ "type": 0, "value": "Verzamelvolume" }],
    "r3.zib_laboratory_test_result_specimen.container": [{ "type": 0, "value": "Monstercontainer" }],
    "r3.zib_laboratory_test_result_specimen.container.identifier": [{ "type": 0, "value": "Monstervolgnummer" }],
    "r3.zib_laboratory_test_result_specimen.container.type": [{ "type": 0, "value": "Containertype" }],
    "r3.zib_laboratory_test_result_specimen.identifier": [{ "type": 0, "value": "Monsternummer" }],
    "r3.zib_laboratory_test_result_specimen.note": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_laboratory_test_result_specimen.received_time": [{ "type": 0, "value": "Aanname datum tijd" }],
    "r3.zib_laboratory_test_result_specimen.subject": [{ "type": 0, "value": "Bron monster" }],
    "r3.zib_laboratory_test_result_specimen.type": [{ "type": 0, "value": "Monstermateriaal" }],
    "r3.zib_laboratory_test_result_specimen_isolate": [{ "type": 0, "value": "Monster" }],
    "r3.zib_laboratory_test_result_specimen_isolate.collection.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r3.zib_laboratory_test_result_specimen_isolate.collection.body_site.morphology": [{ "type": 0, "value": "Morfologie" }],
    "r3.zib_laboratory_test_result_specimen_isolate.collection.collected_date_time": [{ "type": 0, "value": "Afname datum tijd" }],
    "r3.zib_laboratory_test_result_specimen_isolate.collection.collected_period": [{ "type": 0, "value": "Verzamelperiode" }],
    "r3.zib_laboratory_test_result_specimen_isolate.collection.method": [{ "type": 0, "value": "Afnameprocedure" }],
    "r3.zib_laboratory_test_result_specimen_isolate.collection.quantity": [{ "type": 0, "value": "Verzamelvolume" }],
    "r3.zib_laboratory_test_result_specimen_isolate.container": [{ "type": 0, "value": "Monstercontainer" }],
    "r3.zib_laboratory_test_result_specimen_isolate.container.identifier": [{ "type": 0, "value": "Monstervolgnummer" }],
    "r3.zib_laboratory_test_result_specimen_isolate.container.type": [{ "type": 0, "value": "Containertype" }],
    "r3.zib_laboratory_test_result_specimen_isolate.identifier": [{ "type": 0, "value": "Monsternummer" }],
    "r3.zib_laboratory_test_result_specimen_isolate.note": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_laboratory_test_result_specimen_isolate.received_time": [{ "type": 0, "value": "Aanname datum tijd" }],
    "r3.zib_laboratory_test_result_specimen_isolate.subject": [{ "type": 0, "value": "Bron monster" }],
    "r3.zib_laboratory_test_result_specimen_isolate.type": [{ "type": 0, "value": "Microorganisme" }],
    "r3.zib_laboratory_test_result_substance.code": [{ "type": 0, "value": "Microorganisme" }],
    "r3.zib_life_stance.value": [{ "type": 0, "value": "Levensovertuiging" }],
    "r3.zib_living_situation": [{ "type": 0, "value": "Woonsituatie" }],
    "r3.zib_living_situation.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_living_situation.value": [{ "type": 0, "value": "Woning type" }],
    "r3.zib_medical_device": [{ "type": 0, "value": "Medisch hulpmiddel" }],
    "r3.zib_medical_device.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r3.zib_medical_device.health_professional": [{ "type": 0, "value": "Zorgverlener" }],
    "r3.zib_medical_device.healthcare_provider": [{ "type": 0, "value": "Zorgaanbieder" }],
    "r3.zib_medical_device.indication.indication_problem": [{ "type": 0, "value": "Indicatie" }],
    "r3.zib_medical_device.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_medical_device.when_used": [{ "type": 0, "value": "Tijdsduur gedefinieerd door start- en einddatum/tijd" }],
    "r3.zib_medical_device.when_used.start": [{ "type": 0, "value": "Begin datum" }],
    "r3.zib_medical_device_organization.value": [{ "type": 0, "value": "Zorgaanbieder" }],
    "r3.zib_medical_device_practitioner.value": [{ "type": 0, "value": "Zorgverlener" }],
    "r3.zib_medical_device_problem.value": [{ "type": 0, "value": "Indicatie" }],
    "r3.zib_medical_device_product": [{ "type": 0, "value": "Product" }],
    "r3.zib_medical_device_product.identifier": [{ "type": 0, "value": "Product ID" }],
    "r3.zib_medical_device_product.note.text": [{ "type": 0, "value": "Product omschrijving" }],
    "r3.zib_medical_device_product.type": [{ "type": 0, "value": "Product type" }],
    "r3.zib_medical_device_request.code_codeable_concept": [{ "type": 0, "value": "Product type" }],
    "r3.zib_medical_device_request.code_reference": [{ "type": 0, "value": "Product" }],
    "r3.zib_medical_device_request.occurrence_period.end": [{ "type": 0, "value": "Eind datum" }],
    "r3.zib_medical_device_request.occurrence_period.start": [{ "type": 0, "value": "Begin datum" }],
    "r3.zib_medical_device_request.performer_type.health_professional_role": [{ "type": 0, "value": "Zorgverlener rol" }],
    "r3.zib_medical_device_request.status.order_status": [{ "type": 0, "value": "Order status" }],
    "r3.zib_medication_administration": [{ "type": 0, "value": "Medicatie toediening" }],
    "r3.zib_medication_administration.agreed_date_time": [{ "type": 0, "value": "Afgesproken datum tijd" }],
    "r3.zib_medication_administration.dosage.dose": [{ "type": 0, "value": "Toegediende hoeveelheid" }],
    "r3.zib_medication_administration.dosage.rate": [{ "type": 0, "value": "Toedieningssnelheid" }],
    "r3.zib_medication_administration.dosage.route": [{ "type": 0, "value": "Toedieningsweg" }],
    "r3.zib_medication_administration.double_check_performed": [{ "type": 0, "value": "Dubbele controle uitgevoerd" }],
    "r3.zib_medication_administration.effective": [{ "type": 0, "value": "Toedienings datum tijd" }],
    "r3.zib_medication_administration.medication_reference": [{ "type": 0, "value": "Product" }],
    "r3.zib_medication_administration.medication_treatment": [{ "type": 0, "value": "Medicamenteuze behandeling" }],
    "r3.zib_medication_administration.note": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_medication_administration.performer": [{ "type": 0, "value": "Toediener" }],
    "r3.zib_medication_administration.status": [{ "type": 0, "value": "Medicatie toediening status" }],
    "r3.zib_medication_administration.status.order_status": [{ "type": 0, "value": "Order status" }],
    "r3.zib_medication_administration.supporting_information": [{ "type": 0, "value": "Gerelateerde afspraak" }],
    "r3.zib_medication_administration_deviating_administration.deviation": [{ "type": 0, "value": "Afwijkende toediening" }],
    "r3.zib_medication_administration_deviating_administration.reason_for_deviation": [{ "type": 0, "value": "Medicatie toediening reden van afwijken" }],
    "r3.zib_medication_agreement": [{ "type": 0, "value": "Medicatieafspraak" }],
    "r3.zib_medication_agreement.additional_information": [{ "type": 0, "value": "Medicatieafspraak aanvullende informatie" }],
    "r3.zib_medication_agreement.authored_on": [{ "type": 0, "value": "Afspraakdatum" }],
    "r3.zib_medication_agreement.medication_reference": [{ "type": 0, "value": "Afgesprokengeneesmiddel" }],
    "r3.zib_medication_agreement.medication_treatment": [{ "type": 0, "value": "Medicamenteuze behandeling" }],
    "r3.zib_medication_agreement.note": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_medication_agreement.reason_code": [{ "type": 0, "value": "Reden medicatieafspraak" }],
    "r3.zib_medication_agreement.reason_reference": [{ "type": 0, "value": "Reden van voorschrijven" }],
    "r3.zib_medication_agreement.requester": [{ "type": 0, "value": "Voorschrijver" }],
    "r3.zib_medication_agreement.usage_duration": [{ "type": 0, "value": "Duur" }],
    "r3.zib_medication_period_of_use": [{ "type": 0, "value": "Gebruiksperiode" }],
    "r3.zib_medication_use": [{ "type": 0, "value": "Medicatiegebruik" }],
    "r3.zib_medication_use.as_agreed_indicator": [{ "type": 0, "value": "Volgens afspraak indicator" }],
    "r3.zib_medication_use.author": [{ "type": 0, "value": "Auteur" }],
    "r3.zib_medication_use.date_asserted": [{ "type": 0, "value": "Registratiedatum" }],
    "r3.zib_medication_use.effective_period": [{ "type": 0, "value": "Gebruiksperiode" }],
    "r3.zib_medication_use.effective_period.duration": [{ "type": 0, "value": "Tijds duur" }],
    "r3.zib_medication_use.effective_period.end": [{ "type": 0, "value": "Einddatum" }],
    "r3.zib_medication_use.effective_period.start": [{ "type": 0, "value": "Ingangsdatum" }],
    "r3.zib_medication_use.medication_reference": [{ "type": 0, "value": "Gebruiksproduct" }],
    "r3.zib_medication_use.medication_treatment": [{ "type": 0, "value": "Medicamenteuze behandeling" }],
    "r3.zib_medication_use.note": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_medication_use.prescriber": [{ "type": 0, "value": "Voorschrijver" }],
    "r3.zib_medication_use.reason_code.text": [{ "type": 0, "value": "Reden gebruik" }],
    "r3.zib_medication_use.reason_for_change_or_discontinuation_of_use": [{ "type": 0, "value": "Reden wijzigen of stoppen gebruik" }],
    "r3.zib_medication_use.status": [{ "type": 0, "value": "Medicatie gebruik stop type" }],
    "r3.zib_medication_use.taken": [{ "type": 0, "value": "Gebruik indicator" }],
    "r3.zib_medication_use_duration.value": [{ "type": 0, "value": "Gebruiksduur" }],
    "r3.zib_medication_use_reason_for_change_or_discontinuation_of_use.value": [{ "type": 0, "value": "Reden wijzigen of stoppen gebruik" }],
    "r3.zib_mobility": [{ "type": 0, "value": "Mobiliteit" }],
    "r3.zib_mobility.changing_position.value": [{ "type": 0, "value": "Houding veranderen" }],
    "r3.zib_mobility.climbing_stairs.value": [{ "type": 0, "value": "Traplopen" }],
    "r3.zib_mobility.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_mobility.maintaining_position.value": [{ "type": 0, "value": "Houding handhaven" }],
    "r3.zib_mobility.transfer.value": [{ "type": 0, "value": "Uitvoeren transfer" }],
    "r3.zib_mobility.walking.value": [{ "type": 0, "value": "Lopen" }],
    "r3.zib_must_score": [{ "type": 0, "value": "MUST score" }],
    "r3.zib_must_score.bmi_score.value": [{ "type": 0, "value": "BMI score" }],
    "r3.zib_must_score.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_must_score.effective_date_time": [{ "type": 0, "value": "MUST score datum tijd" }],
    "r3.zib_must_score.illness_score.value": [{ "type": 0, "value": "Ziekte score" }],
    "r3.zib_must_score.value": [{ "type": 0, "value": "Totaal score" }],
    "r3.zib_must_score.weight_loss_score.value": [{ "type": 0, "value": "Gewichtsverlies score" }],
    "r3.zib_nursing_intervention": [{ "type": 0, "value": "Verpleegkundige interventie" }],
    "r3.zib_nursing_intervention.code": [{ "type": 0, "value": "Interventie" }],
    "r3.zib_nursing_intervention.frequency": [{ "type": 0, "value": "Frequentie" }],
    "r3.zib_nursing_intervention.instruction": [{ "type": 0, "value": "Instructie" }],
    "r3.zib_nursing_intervention.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_nursing_intervention.performed_period.end": [{ "type": 0, "value": "Actie eind datum tijd" }],
    "r3.zib_nursing_intervention.performed_period.start": [{ "type": 0, "value": "Actie start datum tijd" }],
    "r3.zib_nursing_intervention.performer": [{ "type": 0, "value": "Uitvoerder" }],
    "r3.zib_nursing_intervention.performer.role.health_professional_role": [{ "type": 0, "value": "Zorgverlener rol" }],
    "r3.zib_nursing_intervention.reason_reference": [{ "type": 0, "value": "Indicatie" }],
    "r3.zib_nursing_intervention.requester": [{ "type": 0, "value": "Aanvrager" }],
    "r3.zib_nursing_intervention.treatment_objective": [{ "type": 0, "value": "Behandeldoel" }],
    "r3.zib_nursing_intervention_interval": [{ "type": 0, "value": "Interval" }],
    "r3.zib_nursing_intervention_requester.value": [{ "type": 0, "value": "Aanvrager" }],
    "r3.zib_nutrition_advice": [{ "type": 0, "value": "Voedingsadvies" }],
    "r3.zib_nutrition_advice.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_nutrition_advice.oral_diet.fluid_consistency_type.text": [{ "type": 0, "value": "Consistentie" }],
    "r3.zib_nutrition_advice.oral_diet.texture.food_type.text": [{ "type": 0, "value": "Consistentie" }],
    "r3.zib_nutrition_advice.oral_diet.texture.modifier.text": [{ "type": 0, "value": "Consistentie" }],
    "r3.zib_nutrition_advice.oral_diet.type.text": [{ "type": 0, "value": "Dieet type" }],
    "r3.zib_nutrition_advice_explanation.value": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_outcome_of_care": [{ "type": 0, "value": "Uitkomst van zorg" }],
    "r3.zib_outcome_of_care.conclusion": [{ "type": 0, "value": "Zorgresultaat" }],
    "r3.zib_outcome_of_care.health_condition": [{ "type": 0, "value": "Gezondheidstoestand" }],
    "r3.zib_outcome_of_care.intervention.value": [{ "type": 0, "value": "Interventie" }],
    "r3.zib_outcome_of_care.measurement_value": [{ "type": 0, "value": "Meetwaarde" }],
    "r3.zib_oxygen_saturation": [{ "type": 0, "value": "O2 saturatie" }],
    "r3.zib_oxygen_saturation.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_oxygen_saturation.effective": [{ "type": 0, "value": "O2 saturatie datum tijd" }],
    "r3.zib_oxygen_saturation.extra_oxygen_administration.value": [{ "type": 0, "value": "Extra zuurstof toediening" }],
    "r3.zib_oxygen_saturation.value": [{ "type": 0, "value": "Sp o2 waarde" }],
    "r3.zib_pain_score": [{ "type": 0, "value": "Pijnscore" }],
    "r3.zib_pain_score.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r3.zib_pain_score.body_site.laterality": [{ "type": 0, "value": "Lateraliteit" }],
    "r3.zib_pain_score.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_pain_score.effective_date_time": [{ "type": 0, "value": "Pijnscore datum tijd" }],
    "r3.zib_pain_score.method": [{ "type": 0, "value": "Pijn meetmethode" }],
    "r3.zib_pain_score.value": [{ "type": 0, "value": "Pijnscore waarde" }],
    "r3.zib_participation_in_society": [{ "type": 0, "value": "Participatie in maatschappij" }],
    "r3.zib_participation_in_society.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_participation_in_society.hobby.value": [{ "type": 0, "value": "Vrijetijdsbesteding" }],
    "r3.zib_participation_in_society.social_network": [{ "type": 0, "value": "Social network" }],
    "r3.zib_participation_in_society.social_network.value": [{ "type": 0, "value": "Sociaal netwerk" }],
    "r3.zib_participation_in_society.work_situation.value": [{ "type": 0, "value": "Arbeidssituatie" }],
    "r3.zib_payer": [{ "type": 0, "value": "Verzekering" }],
    "r3.zib_payer.payor": [{ "type": 0, "value": "Verzekeraar" }],
    "r3.zib_payer.payor.bank_information.account_number": [{ "type": 0, "value": "Rekeningnummer" }],
    "r3.zib_payer.payor.bank_information.bank_name": [{ "type": 0, "value": "Bank naam" }],
    "r3.zib_payer.payor.bank_information.bankcode": [{ "type": 0, "value": "Bankcode" }],
    "r3.zib_payer.period.end": [{ "type": 0, "value": "Eind datum tijd" }],
    "r3.zib_payer.period.start": [{ "type": 0, "value": "Begin datum tijd" }],
    "r3.zib_payer.subscriber_id": [{ "type": 0, "value": "Verzekerde nummer" }],
    "r3.zib_payer.type": [{ "type": 0, "value": "Verzekerings soort" }],
    "r3.zib_payer_bank_information": [{ "type": 0, "value": "Bankgegevens" }],
    "r3.zib_payer_bank_information.account_number.value": [{ "type": 0, "value": "Rekeningnummer" }],
    "r3.zib_payer_bank_information.bank_name.value": [{ "type": 0, "value": "Bank naam" }],
    "r3.zib_payer_bank_information.bankcode.value": [{ "type": 0, "value": "Bankcode" }],
    "r3.zib_pregnancy": [{ "type": 0, "value": "Zwangerschap" }],
    "r3.zib_pregnancy_date_last_menstruation.value": [{ "type": 0, "value": "Datum laatste menstruatie" }],
    "r3.zib_pregnancy_gravidity.value": [{ "type": 0, "value": "Graviditeit" }],
    "r3.zib_pregnancy_parity.value": [{ "type": 0, "value": "Pariteit" }],
    "r3.zib_pregnancy_pregnancy_duration.value": [{ "type": 0, "value": "Zwangerschapsduur" }],
    "r3.zib_pregnancy_pregnancy_status.value": [{ "type": 0, "value": "Zwanger" }],
    "r3.zib_pregnancy_term_date.value": [{ "type": 0, "value": "A terme datum" }],
    "r3.zib_pressure_ulcer": [{ "type": 0, "value": "Decubitus wond" }],
    "r3.zib_pressure_ulcer.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r3.zib_pressure_ulcer.body_site.laterality.value": [{ "type": 0, "value": "Lateraliteit" }],
    "r3.zib_pressure_ulcer.code": [{ "type": 0, "value": "Decubitus wond" }],
    "r3.zib_pressure_ulcer.date_of_last_dressing_change.value": [{ "type": 0, "value": "Datum laatste verband wissel" }],
    "r3.zib_pressure_ulcer.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_pressure_ulcer.onset": [{ "type": 0, "value": "Ontstaans datum" }],
    "r3.zib_pressure_ulcer.stage.summary": [{ "type": 0, "value": "Decubitus categorie" }],
    "r3.zib_problem": [{ "type": 0, "value": "Concern" }],
    "r3.zib_problem.abatement_date_time": [{ "type": 0, "value": "Probleem eind datum" }],
    "r3.zib_problem.body_site": [{ "type": 0, "value": "Probleem anatomische locatie" }],
    "r3.zib_problem.body_site.laterality": [{ "type": 0, "value": "Probleem lateraliteit" }],
    "r3.zib_problem.category": [{ "type": 0, "value": "Probleem type" }],
    "r3.zib_problem.clinical_status": [{ "type": 0, "value": "Probleem status" }],
    "r3.zib_problem.clinical_status.problem_status_codelist": [{ "type": 0, "value": "Probleemstatus" }],
    "r3.zib_problem.code": [{ "type": 0, "value": "Probleem naam" }],
    "r3.zib_problem.note": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_problem.onset_date_time": [{ "type": 0, "value": "Probleem begin datum" }],
    "r3.zib_problem.verification_status": [{ "type": 0, "value": "Verificatie status" }],
    "r3.zib_problem.verification_status.verificatie_status_codelijst": [{ "type": 0, "value": "Verificatie status codelijst" }],
    "r3.zib_procedure": [{ "type": 0, "value": "Verrichting" }],
    "r3.zib_procedure.body_site": [{ "type": 0, "value": "Verrichting anatomische locatie" }],
    "r3.zib_procedure.code": [{ "type": 0, "value": "Verrichting type" }],
    "r3.zib_procedure.code.verrichting_type_codelijst": [{ "type": 0, "value": "Verrichting type" }],
    "r3.zib_procedure.focal_device.manipulated": [{ "type": 0, "value": "Medisch hulpmiddel" }],
    "r3.zib_procedure.performed_period.end": [{ "type": 0, "value": "Verrichting eind datum" }],
    "r3.zib_procedure.performed_period.start": [{ "type": 0, "value": "Verrichting start datum" }],
    "r3.zib_procedure.performer": [{ "type": 0, "value": "Uitgevoerd door" }],
    "r3.zib_procedure.performer.role.health_professional_role": [{ "type": 0, "value": "Zorgverlener rol" }],
    "r3.zib_procedure.procedure_method.value": [{ "type": 0, "value": "Verrichting methode" }],
    "r3.zib_procedure.reason_reference": [{ "type": 0, "value": "Indicatie" }],
    "r3.zib_procedure_request": [{ "type": 0, "value": "Verrichting" }],
    "r3.zib_procedure_request.body_site": [{ "type": 0, "value": "Verrichting anatomische locatie" }],
    "r3.zib_procedure_request.code": [{ "type": 0, "value": "Verrichting type" }],
    "r3.zib_procedure_request.code.verrichting_type_codelijst": [{ "type": 0, "value": "Verrichting type codelijst" }],
    "r3.zib_procedure_request.occurrence_period.end": [{ "type": 0, "value": "Eind datum" }],
    "r3.zib_procedure_request.occurrence_period.start": [{ "type": 0, "value": "Begin datum" }],
    "r3.zib_procedure_request.occurrence_timing.repeat.frequency": [{ "type": 0, "value": "Frequentie" }],
    "r3.zib_procedure_request.occurrence_timing.repeat.period": [{ "type": 0, "value": "Interval" }],
    "r3.zib_procedure_request.performer": [{ "type": 0, "value": "Uitgevoerd door" }],
    "r3.zib_procedure_request.performer_type.health_professional_role": [{ "type": 0, "value": "Zorgverlener rol" }],
    "r3.zib_procedure_request.reason_reference": [{ "type": 0, "value": "Indicatie" }],
    "r3.zib_procedure_request.requester.agent": [{ "type": 0, "value": "Aangevraagd door" }],
    "r3.zib_procedure_request.status.order_status": [{ "type": 0, "value": "Order status" }],
    "r3.zib_product": [{ "type": 0, "value": "Geneesmiddel" }],
    "r3.zib_product.code.coding": [{ "type": 0, "value": "Product code" }],
    "r3.zib_product.code.text": [{ "type": 0, "value": "Product naam" }],
    "r3.zib_product.description": [{ "type": 0, "value": "Omschrijving" }],
    "r3.zib_product.form": [{ "type": 0, "value": "Farmaceutische vorm" }],
    "r3.zib_product.ingredient": [{ "type": 0, "value": "Ingredient" }],
    "r3.zib_product.ingredient.amount": [{ "type": 0, "value": "Sterkte" }],
    "r3.zib_product.ingredient.amount.denominator": [{ "type": 0, "value": "Product hoeveelheid" }],
    "r3.zib_product.ingredient.amount.numerator": [{ "type": 0, "value": "Ingredient hoeveelheid" }],
    "r3.zib_product.ingredient.item_codeable_concept": [{ "type": 0, "value": "Ingredient code" }],
    "r3.zib_pulse_rate": [{ "type": 0, "value": "Polsfrequentie" }],
    "r3.zib_pulse_rate.code": [{ "type": 0, "value": "Polsfrequentie" }],
    "r3.zib_pulse_rate.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_pulse_rate.effective": [{ "type": 0, "value": "Polsfrequentie datum tijd" }],
    "r3.zib_pulse_rate.pulse_regularity.code": [{ "type": 0, "value": "Component test" }],
    "r3.zib_pulse_rate.pulse_regularity.value": [{ "type": 0, "value": "Pols regelmatigheid" }],
    "r3.zib_pulse_rate.subject": [{ "type": 0, "value": "Patiënt" }],
    "r3.zib_pulse_rate.value": [{ "type": 0, "value": "Polsfrequentie waarde" }],
    "r3.zib_respiration.administered_oxygen": [{ "type": 0, "value": "Toegediende zuurstof" }],
    "r3.zib_respiration.administered_oxygen.extra_oxygen_administration.value": [{ "type": 0, "value": "Extra zuurstof toediening" }],
    "r3.zib_respiration.administered_oxygen.fi_o_2.value": [{ "type": 0, "value": "Fi o2" }],
    "r3.zib_respiration.administered_oxygen.flow_rate.value": [{ "type": 0, "value": "Flow rate" }],
    "r3.zib_respiration.breathing_frequency.value": [{ "type": 0, "value": "Ademfrequentie" }],
    "r3.zib_respiration.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_respiration.depth.value": [{ "type": 0, "value": "Diepte" }],
    "r3.zib_respiration.deviating_breathing_pattern.value": [{ "type": 0, "value": "Afwijkend ademhalingspatroon" }],
    "r3.zib_respiration.effective_date_time": [{ "type": 0, "value": "Ademhaling datum tijd" }],
    "r3.zib_respiration.rhythm.value": [{ "type": 0, "value": "Ritme" }],
    "r3.zib_respiration_administered_oxygen_administration_device": [{ "type": 0, "value": "Toediening hulpmiddel" }],
    "r3.zib_skin_disorder": [{ "type": 0, "value": "Huidaandoening" }],
    "r3.zib_skin_disorder.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r3.zib_skin_disorder.body_site.laterality.value": [{ "type": 0, "value": "Lateraliteit" }],
    "r3.zib_skin_disorder.code": [{ "type": 0, "value": "Soort aandoening" }],
    "r3.zib_skin_disorder.due_to.value": [{ "type": 0, "value": "Oorzaak" }],
    "r3.zib_skin_disorder.note": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_sna_qrc_score": [{ "type": 0, "value": "SNA qrc score" }],
    "r3.zib_sna_qrc_score.appetite_score.value": [{ "type": 0, "value": "Eetlust score" }],
    "r3.zib_sna_qrc_score.assisted_eating.value": [{ "type": 0, "value": "Hulp bij eten" }],
    "r3.zib_sna_qrc_score.bmi_score.value": [{ "type": 0, "value": "BMI score" }],
    "r3.zib_sna_qrc_score.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_sna_qrc_score.effective_date_time": [{ "type": 0, "value": "SNA qrc score datum tijd" }],
    "r3.zib_sna_qrc_score.value": [{ "type": 0, "value": "Totaal score" }],
    "r3.zib_sna_qrc_score.weight_loss_score.value": [{ "type": 0, "value": "Gewichtsverlies score" }],
    "r3.zib_snaq_65_plus_score": [{ "type": 0, "value": "SNAQ65+score" }],
    "r3.zib_snaq_65_plus_score.appetite_score.value": [{ "type": 0, "value": "Eetlust score" }],
    "r3.zib_snaq_65_plus_score.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_snaq_65_plus_score.effective_date_time": [{ "type": 0, "value": "SNAQ65+score datum tijd" }],
    "r3.zib_snaq_65_plus_score.exercise_score.value": [{ "type": 0, "value": "Inspannings score" }],
    "r3.zib_snaq_65_plus_score.upperarm_circumference.value": [{ "type": 0, "value": "Bovenarm omtrek score" }],
    "r3.zib_snaq_65_plus_score.value": [{ "type": 0, "value": "Totaal score" }],
    "r3.zib_snaq_65_plus_score.weight_loss_score.value": [{ "type": 0, "value": "Gewichtsverlies score" }],
    "r3.zib_snaq_score": [{ "type": 0, "value": "SNAQ score" }],
    "r3.zib_snaq_score.appetite_score.value": [{ "type": 0, "value": "Eetlust score" }],
    "r3.zib_snaq_score.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_snaq_score.effective_date_time": [{ "type": 0, "value": "SNAQ score datum tijd" }],
    "r3.zib_snaq_score.nutrition_score.value": [{ "type": 0, "value": "Voedings score" }],
    "r3.zib_snaq_score.value": [{ "type": 0, "value": "Totaal score" }],
    "r3.zib_snaq_score.weight_loss_score.value": [{ "type": 0, "value": "Gewichtsverlies score" }],
    "r3.zib_stoma": [{ "type": 0, "value": "Stoma" }],
    "r3.zib_stoma.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r3.zib_stoma.body_site.laterality": [{ "type": 0, "value": "Lateraliteit" }],
    "r3.zib_stoma.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_stoma.effective_date_time": [{ "type": 0, "value": "Aanleg datum" }],
    "r3.zib_stoma.value": [{ "type": 0, "value": "Stoma type" }],
    "r3.zib_strong_kids_score": [{ "type": 0, "value": "Strong kids score" }],
    "r3.zib_strong_kids_score.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_strong_kids_score.condition_score.value": [{ "type": 0, "value": "Ziekte beeld score" }],
    "r3.zib_strong_kids_score.effective_date_time": [{ "type": 0, "value": "Score datum tijd" }],
    "r3.zib_strong_kids_score.nutrition_score.value": [{ "type": 0, "value": "Voedings score" }],
    "r3.zib_strong_kids_score.nutrition_status_score.value": [{ "type": 0, "value": "Voedingstoestand score" }],
    "r3.zib_strong_kids_score.value": [{ "type": 0, "value": "Totaal score" }],
    "r3.zib_strong_kids_score.weight_loss_score.value": [{ "type": 0, "value": "Gewichtsverlies score" }],
    "r3.zib_text_result": [{ "type": 0, "value": "Tekst uitslag" }],
    "r3.zib_text_result.code": [{ "type": 0, "value": "Onderzoek" }],
    "r3.zib_text_result.identifier": [{ "type": 0, "value": "Identificatie" }],
    "r3.zib_text_result.performer.role.health_professional_role": [{ "type": 0, "value": "Zorgverlener rol" }],
    "r3.zib_text_result.status": [{ "type": 0, "value": "Tekst uitslag status" }],
    "r3.zib_text_result.status.text_result_status": [{ "type": 0, "value": "Tekst uitslag status" }],
    "r3.zib_tobacco_use": [{ "type": 0, "value": "Tabak gebruik" }],
    "r3.zib_tobacco_use.amount.value": [{ "type": 0, "value": "Hoeveelheid" }],
    "r3.zib_tobacco_use.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_tobacco_use.effective_period.end": [{ "type": 0, "value": "Stop datum" }],
    "r3.zib_tobacco_use.effective_period.start": [{ "type": 0, "value": "Start datum" }],
    "r3.zib_tobacco_use.pack_years.value": [{ "type": 0, "value": "Pack years" }],
    "r3.zib_tobacco_use.type_of_tobacco_used.value": [{ "type": 0, "value": "Soort tabak gebruik" }],
    "r3.zib_tobacco_use.value": [{ "type": 0, "value": "Tabak gebruik status" }],
    "r3.zib_treatment_directive": [{ "type": 0, "value": "Behandel aanwijzing" }],
    "r3.zib_treatment_directive.except.restrictions": [{ "type": 0, "value": "Beperkingen" }],
    "r3.zib_treatment_directive.period.end": [{ "type": 0, "value": "Eind datum" }],
    "r3.zib_treatment_directive.period.start": [{ "type": 0, "value": "Begin datum" }],
    "r3.zib_treatment_directive.source": [{ "type": 0, "value": "Wilsverklaring" }],
    "r3.zib_treatment_directive.treatment": [{ "type": 0, "value": "Behandeling" }],
    "r3.zib_treatment_directive.treatment_permitted": [{ "type": 0, "value": "Behandeling toegestaan" }],
    "r3.zib_treatment_directive.verification.verification_date": [{ "type": 0, "value": "Verificatie datum" }],
    "r3.zib_treatment_directive.verification.verified": [{ "type": 0, "value": "Geverifieerd" }],
    "r3.zib_treatment_directive.verification.verified_with": [{ "type": 0, "value": "Geverifieerd bij" }],
    "r3.zib_treatment_directive_treatment.value": [{ "type": 0, "value": "Behandeling" }],
    "r3.zib_treatment_directive_treatment_permitted.value": [{ "type": 0, "value": "Behandeling toegestaan" }],
    "r3.zib_treatment_directive_verification": [{ "type": 0, "value": "Verificatie" }],
    "r3.zib_treatment_directive_verification.verification_date.value": [{ "type": 0, "value": "Verificatie datum" }],
    "r3.zib_treatment_directive_verification.verified.value": [{ "type": 0, "value": "Geverifieerd" }],
    "r3.zib_treatment_objective": [{ "type": 0, "value": "Behandeldoel" }],
    "r3.zib_treatment_objective.addresses": [{ "type": 0, "value": "Probleem" }],
    "r3.zib_treatment_objective.description": [{ "type": 0, "value": "Gewenst zorgresultaat" }],
    "r3.zib_treatment_objective.target.detail": [{ "type": 0, "value": "Streefwaarde / gewenste gezondheidstoestand" }],
    "r3.zib_vaccination": [{ "type": 0, "value": "Vaccinatie" }],
    "r3.zib_vaccination.date": [{ "type": 0, "value": "Vaccinatie datum" }],
    "r3.zib_vaccination.dose_quantity": [{ "type": 0, "value": "Dosis" }],
    "r3.zib_vaccination.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_vaccination.practitioner.actor": [{ "type": 0, "value": "Toediener" }],
    "r3.zib_vaccination.practitioner.role.health_professional_role": [{ "type": 0, "value": "Zorgverlener rol" }],
    "r3.zib_vaccination.vaccine_code": [{ "type": 0, "value": "Product code" }],
    "r3.zib_vaccination_recommendation.order_status": [{ "type": 0, "value": "Order status" }],
    "r3.zib_vaccination_recommendation.recommendation.date": [{ "type": 0, "value": "Gewenste datum hervaccinatie" }],
    "r3.zib_vaccination_recommendation.recommendation.date_criterion": [{ "type": 0, "value": "Start date" }],
    "r3.zib_vaccination_recommendation.recommendation.vaccine_code": [{ "type": 0, "value": "Product code" }],
    "r3.zib_visual_function": [{ "type": 0, "value": "Functie zien" }],
    "r3.zib_visual_function.comment": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_visual_function.value": [{ "type": 0, "value": "Visuele functie" }],
    "r3.zib_visual_function_visual_aid": [{ "type": 0, "value": "Zien hulpmiddel" }],
    "r3.zib_wound": [{ "type": 0, "value": "Wond" }],
    "r3.zib_wound.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r3.zib_wound.body_site.laterality.value": [{ "type": 0, "value": "Lateraliteit" }],
    "r3.zib_wound.code": [{ "type": 0, "value": "Wond soort" }],
    "r3.zib_wound.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r3.zib_wound.onset": [{ "type": 0, "value": "Wond ontstaans datum" }]
  };
  const r4ResourceLabelsDefault = {
    "r4.nl_core_ability_to_dress_oneself": [{ "type": 0, "value": "Nl-core-ability to dress oneself" }],
    "r4.nl_core_ability_to_drink": [{ "type": 0, "value": "Nl-core-ability to drink" }],
    "r4.nl_core_ability_to_drink.drinking_limitations": [{ "type": 0, "value": "Nl-core-ability to drink.drinking limitations" }],
    "r4.nl_core_ability_to_eat": [{ "type": 0, "value": "Nl-core-ability to eat" }],
    "r4.nl_core_ability_to_eat.eating_limitations": [{ "type": 0, "value": "Nl-core-ability to eat.eating limitations" }],
    "r4.nl_core_ability_to_groom": [{ "type": 0, "value": "Nl-core-ability to groom" }],
    "r4.nl_core_ability_to_use_toilet": [{ "type": 0, "value": "Nl-core-ability to use toilet" }],
    "r4.nl_core_ability_to_use_toilet.menstrual_care": [{ "type": 0, "value": "Nl-core-ability to use toilet.menstrual care" }],
    "r4.nl_core_ability_to_use_toilet.toilet_use": [{ "type": 0, "value": "Nl-core-ability to use toilet.toilet use" }],
    "r4.nl_core_ability_to_wash_oneself": [{ "type": 0, "value": "Nl-core-ability to wash oneself" }],
    "r4.nl_core_address_information": [{ "type": 0, "value": "Nl-core-address information" }],
    "r4.nl_core_advance_directive": [{ "type": 0, "value": "Nl-core-advance directive" }],
    "r4.nl_core_alcohol_use": [{ "type": 0, "value": "Nl-core-alcohol use" }],
    "r4.nl_core_alert": [{ "type": 0, "value": "Nl-core-alert" }],
    "r4.nl_core_allergy_intolerance": [{ "type": 0, "value": "Nl-core-allergy intolerance" }],
    "r4.nl_core_anatomical_location": [{ "type": 0, "value": "Nl-core-anatomical location" }],
    "r4.nl_core_apgar_score_10_minute": [{ "type": 0, "value": "Nl-core-apgar score-10 minute" }],
    "r4.nl_core_apgar_score_1_minute": [{ "type": 0, "value": "Nl-core-apgar score-1 minute" }],
    "r4.nl_core_apgar_score_5_minute": [{ "type": 0, "value": "Nl-core-apgar score-5 minute" }],
    "r4.nl_core_barthel_adl_index": [{ "type": 0, "value": "Nl-core-barthel ADL index" }],
    "r4.nl_core_blood_pressure": [{ "type": 0, "value": "Nl-core-blood pressure" }],
    "r4.nl_core_body_height": [{ "type": 0, "value": "Nl-core-body height" }],
    "r4.nl_core_body_temperature": [{ "type": 0, "value": "Nl-core-body temperature" }],
    "r4.nl_core_body_weight": [{ "type": 0, "value": "Nl-core-body weight" }],
    "r4.nl_core_bowel_function": [{ "type": 0, "value": "Nl-core-bowel function" }],
    "r4.nl_core_bowel_function.defecation_color": [{ "type": 0, "value": "Nl-core-bowel function.defecation color" }],
    "r4.nl_core_bowel_function.defecation_consistency": [{ "type": 0, "value": "Nl-core-bowel function.defecation consistency" }],
    "r4.nl_core_bowel_function.fecal_continence": [{ "type": 0, "value": "Nl-core-bowel function.fecal continence" }],
    "r4.nl_core_bowel_function.frequency": [{ "type": 0, "value": "Nl-core-bowel function.frequency" }],
    "r4.nl_core_burnwound": [{ "type": 0, "value": "Nl-core-burnwound" }],
    "r4.nl_core_burnwound.extent": [{ "type": 0, "value": "Nl-core-burnwound.extent" }],
    "r4.nl_core_care_team": [{ "type": 0, "value": "Nl-core-care team" }],
    "r4.nl_core_checklist_pain_behavior": [{ "type": 0, "value": "Nl-core-checklist pain behavior" }],
    "r4.nl_core_comfort_scale": [{ "type": 0, "value": "Nl-core-comfort scale" }],
    "r4.nl_core_contact_information_email_addresses": [{ "type": 0, "value": "Nl-core-contact information-email addresses" }],
    "r4.nl_core_contact_information_telephone_numbers": [{ "type": 0, "value": "Nl-core-contact information-telephone numbers" }],
    "r4.nl_core_contact_person": [{ "type": 0, "value": "Nl-core-contact person" }],
    "r4.nl_core_development_child": [{ "type": 0, "value": "Nl-core-development child" }],
    "r4.nl_core_development_child.age_first_menstruation": [{ "type": 0, "value": "Nl-core-development child.age first menstruation" }],
    "r4.nl_core_development_child.development_cognition": [{ "type": 0, "value": "Nl-core-development child.development cognition" }],
    "r4.nl_core_development_child.development_linguistics": [{ "type": 0, "value": "Nl-core-development child.development linguistics" }],
    "r4.nl_core_development_child.development_locomotion": [{ "type": 0, "value": "Nl-core-development child.development locomotion" }],
    "r4.nl_core_development_child.development_social": [{ "type": 0, "value": "Nl-core-development child.development social" }],
    "r4.nl_core_development_child.toilet_trainedness_feces": [{ "type": 0, "value": "Nl-core-development child.toilet trainedness feces" }],
    "r4.nl_core_development_child.toilet_trainedness_urine": [{ "type": 0, "value": "Nl-core-development child.toilet trainedness urine" }],
    "r4.nl_core_dos_score": [{ "type": 0, "value": "Nl-core-DOS score" }],
    "r4.nl_core_drug_use": [{ "type": 0, "value": "Nl-core-drug use" }],
    "r4.nl_core_education": [{ "type": 0, "value": "Nl-core-education" }],
    "r4.nl_core_encounter": [{ "type": 0, "value": "Nl-core-encounter" }],
    "r4.nl_core_episode_of_care": [{ "type": 0, "value": "Nl-core-episode of care" }],
    "r4.nl_core_feeding_pattern_infant": [{ "type": 0, "value": "Nl-core-feeding pattern infant" }],
    "r4.nl_core_flac_cpain_scale": [{ "type": 0, "value": "Nl-core-FLAC cpain scale" }],
    "r4.nl_core_fluid_balance": [{ "type": 0, "value": "Nl-core-fluid balance" }],
    "r4.nl_core_fluid_balance.fluid_total_in": [{ "type": 0, "value": "Nl-core-fluid balance.fluid total in" }],
    "r4.nl_core_fluid_balance.fluid_total_out": [{ "type": 0, "value": "Nl-core-fluid balance.fluid total out" }],
    "r4.nl_core_freedom_restricting_intervention": [{ "type": 0, "value": "Nl-core-freedom restricting intervention" }],
    "r4.nl_core_functional_or_mental_status": [{ "type": 0, "value": "Nl-core-functional or mental status" }],
    "r4.nl_core_glasgow_coma_scale": [{ "type": 0, "value": "Nl-core-glasgow coma scale" }],
    "r4.nl_core_head_circumference": [{ "type": 0, "value": "Nl-core-head circumference" }],
    "r4.nl_core_health_professional_practitioner": [{ "type": 0, "value": "Nl-core-health professional-practitioner" }],
    "r4.nl_core_health_professional_practitioner_role": [{ "type": 0, "value": "Nl-core-health professional-practitioner role" }],
    "r4.nl_core_healthcare_provider": [{ "type": 0, "value": "Nl-core-healthcare provider" }],
    "r4.nl_core_healthcare_provider_organization": [{ "type": 0, "value": "Nl-core-healthcare provider-organization" }],
    "r4.nl_core_hearing_function": [{ "type": 0, "value": "Nl-core-hearing function" }],
    "r4.nl_core_hearing_function.hearing_aid": [{ "type": 0, "value": "Nl-core-hearing function.hearing aid" }],
    "r4.nl_core_hearing_function.hearing_aid.product": [{ "type": 0, "value": "Nl-core-hearing function.hearing aid.product" }],
    "r4.nl_core_heart_rate": [{ "type": 0, "value": "Nl-core-heart rate" }],
    "r4.nl_core_heart_rate.heartbeat_regularity": [{ "type": 0, "value": "Nl-core-heart rate.heartbeat regularity" }],
    "r4.nl_core_heart_rate.interpretation_heart_rate": [{ "type": 0, "value": "Nl-core-heart rate.interpretation heart rate" }],
    "r4.nl_core_help_from_others": [{ "type": 0, "value": "Nl-core-help from others" }],
    "r4.nl_core_illness_perception": [{ "type": 0, "value": "Nl-core-illness perception" }],
    "r4.nl_core_illness_perception.coping_with_illness_by_family": [{ "type": 0, "value": "Nl-core-illness perception.coping with illness by family" }],
    "r4.nl_core_illness_perception.coping_with_illness_by_patient": [{ "type": 0, "value": "Nl-core-illness perception.coping with illness by patient" }],
    "r4.nl_core_illness_perception.patient_illness_insight": [{ "type": 0, "value": "Nl-core-illness perception.patient illness insight" }],
    "r4.nl_core_laboratory_test_result": [{ "type": 0, "value": "Nl-core-laboratory test result" }],
    "r4.nl_core_laboratory_test_result.specimen": [{ "type": 0, "value": "Nl-core-laboratory test result.specimen" }],
    "r4.nl_core_laboratory_test_result.specimen_source": [{ "type": 0, "value": "Nl-core-laboratory test result.specimen source" }],
    "r4.nl_core_laboratory_test_result.specimen_source.patient": [{ "type": 0, "value": "Patiënt" }],
    "r4.nl_core_legal_situation_legal_status": [{ "type": 0, "value": "Nl-core-legal situation-legal status" }],
    "r4.nl_core_legal_situation_representation": [{ "type": 0, "value": "Nl-core-legal situation-representation" }],
    "r4.nl_core_life_stance": [{ "type": 0, "value": "Nl-core-life stance" }],
    "r4.nl_core_living_situation": [{ "type": 0, "value": "Nl-core-living situation" }],
    "r4.nl_core_medical_device": [{ "type": 0, "value": "Nl-core-medical device" }],
    "r4.nl_core_medical_device.product": [{ "type": 0, "value": "Nl-core-medical device.product" }],
    "r4.nl_core_medication_contra_indication": [{ "type": 0, "value": "Nl-core-medication contra indication" }],
    "r4.nl_core_mobility": [{ "type": 0, "value": "Nl-core-mobility" }],
    "r4.nl_core_mobility.changing_position": [{ "type": 0, "value": "Nl-core-mobility.changing position" }],
    "r4.nl_core_mobility.climbing_stairs": [{ "type": 0, "value": "Nl-core-mobility.climbing stairs" }],
    "r4.nl_core_mobility.maintaining_position": [{ "type": 0, "value": "Nl-core-mobility.maintaining position" }],
    "r4.nl_core_mobility.transfer": [{ "type": 0, "value": "Nl-core-mobility.transfer" }],
    "r4.nl_core_mobility.walking": [{ "type": 0, "value": "Nl-core-mobility.walking" }],
    "r4.nl_core_must_score": [{ "type": 0, "value": "Nl-core-MUST score" }],
    "r4.nl_core_name_information": [{ "type": 0, "value": "Nl-core-name information" }],
    "r4.nl_core_name_information.given_name": [{ "type": 0, "value": "Nl-core-name information.given name" }],
    "r4.nl_core_nursing_intervention": [{ "type": 0, "value": "Nl-core-nursing intervention" }],
    "r4.nl_core_nutrition_advice": [{ "type": 0, "value": "Nl-core-nutrition advice" }],
    "r4.nl_core_o_2_saturation": [{ "type": 0, "value": "Nl-core-o2 saturation" }],
    "r4.nl_core_pain_score": [{ "type": 0, "value": "Nl-core-pain score" }],
    "r4.nl_core_participation_in_society": [{ "type": 0, "value": "Nl-core-participation in society" }],
    "r4.nl_core_participation_in_society.hobby": [{ "type": 0, "value": "Nl-core-participation in society.hobby" }],
    "r4.nl_core_participation_in_society.social_network": [{ "type": 0, "value": "Nl-core-participation in society.social network" }],
    "r4.nl_core_participation_in_society.work_situation": [{ "type": 0, "value": "Nl-core-participation in society.work situation" }],
    "r4.nl_core_patient": [{ "type": 0, "value": "Nl-core-patient" }],
    "r4.nl_core_payer.insurance_company": [{ "type": 0, "value": "Nl-core-payer.insurance company" }],
    "r4.nl_core_payer.payer_person": [{ "type": 0, "value": "Nl-core-payer.payer person" }],
    "r4.nl_core_payer_organization": [{ "type": 0, "value": "Nl-core-payer-organization" }],
    "r4.nl_core_pharmaceutical_product": [{ "type": 0, "value": "Nl-core-pharmaceutical product" }],
    "r4.nl_core_pregnancy": [{ "type": 0, "value": "Nl-core-pregnancy" }],
    "r4.nl_core_pregnancy.date_last_menstruation": [{ "type": 0, "value": "Nl-core-pregnancy.date last menstruation" }],
    "r4.nl_core_pregnancy.estimated_date_of_delivery": [{ "type": 0, "value": "Nl-core-pregnancy.estimated date of delivery" }],
    "r4.nl_core_pregnancy.gravidity": [{ "type": 0, "value": "Nl-core-pregnancy.gravidity" }],
    "r4.nl_core_pregnancy.parity": [{ "type": 0, "value": "Nl-core-pregnancy.parity" }],
    "r4.nl_core_pregnancy.pregnancy_duration": [{ "type": 0, "value": "Nl-core-pregnancy.pregnancy duration" }],
    "r4.nl_core_pressure_ulcer": [{ "type": 0, "value": "Nl-core-pressure ulcer" }],
    "r4.nl_core_problem": [{ "type": 0, "value": "Nl-core-problem" }],
    "r4.nl_core_procedure_event": [{ "type": 0, "value": "Nl-core-procedure-event" }],
    "r4.nl_core_procedure_request": [{ "type": 0, "value": "Nl-core-procedure-request" }],
    "r4.nl_core_pulse_rate": [{ "type": 0, "value": "Nl-core-pulse rate" }],
    "r4.nl_core_pulse_rate.pulse_regularity": [{ "type": 0, "value": "Nl-core-pulse rate.pulse regularity" }],
    "r4.nl_core_refraction": [{ "type": 0, "value": "Nl-core-refraction" }],
    "r4.nl_core_skin_disorder": [{ "type": 0, "value": "Nl-core-skin disorder" }],
    "r4.nl_core_sna_qrc_score": [{ "type": 0, "value": "Nl-core-SNA qrc score" }],
    "r4.nl_core_snaq_65_plus_score": [{ "type": 0, "value": "Nl-core-SNAQ65plus score" }],
    "r4.nl_core_snaq_score": [{ "type": 0, "value": "Nl-core-SNAQ score" }],
    "r4.nl_core_soap_report": [{ "type": 0, "value": "Nl-core-SOAP report" }],
    "r4.nl_core_soap_report.soap_line": [{ "type": 0, "value": "Nl-core-SOAP report.SOAP line" }],
    "r4.nl_core_stoma": [{ "type": 0, "value": "Nl-core-stoma" }],
    "r4.nl_core_strong_kids_score": [{ "type": 0, "value": "Nl-core-strong kids score" }],
    "r4.nl_core_text_result": [{ "type": 0, "value": "Nl-core-text result" }],
    "r4.nl_core_text_result.visual_result": [{ "type": 0, "value": "Nl-core-text result.visual result" }],
    "r4.nl_core_time_interval": [{ "type": 0, "value": "Nl-core-time interval" }],
    "r4.nl_core_tobacco_use": [{ "type": 0, "value": "Nl-core-tobacco use" }],
    "r4.nl_core_treatment_directive_2": [{ "type": 0, "value": "Nl-core-treatment directive2" }],
    "r4.nl_core_vaccination_event": [{ "type": 0, "value": "Nl-core-vaccination-event" }],
    "r4.nl_core_vaccination_event.patient": [{ "type": 0, "value": "Patient" }],
    "r4.nl_core_vaccination_event.protocol_applied.target_disease": [{ "type": 0, "value": "Vaccinatie pathogeen" }],
    "r4.nl_core_vaccination_event.vaccination_indication": [{ "type": 0, "value": "Vaccinatie indicatie" }],
    "r4.nl_core_vaccination_event.vaccination_motive": [{ "type": 0, "value": "Vaccinatie aanleiding" }],
    "r4.nl_core_vaccination_request": [{ "type": 0, "value": "Nl-core-vaccination-request" }],
    "r4.nl_core_visual_function": [{ "type": 0, "value": "Nl-core-visual function" }],
    "r4.nl_core_visual_function.visual_aid": [{ "type": 0, "value": "Nl-core-visual function.visual aid" }],
    "r4.nl_core_visual_function.visual_aid.product": [{ "type": 0, "value": "Nl-core-visual function.visual aid.product" }],
    "r4.nl_core_wound": [{ "type": 0, "value": "Nl-core-wound" }],
    "r4.nl_core_wound.drain": [{ "type": 0, "value": "Nl-core-wound.drain" }],
    "r4.nl_core_wound.drain.product": [{ "type": 0, "value": "Nl-core-wound.drain.product" }],
    "r4.nl_core_wound.wound_edge": [{ "type": 0, "value": "Nl-core-wound.wound edge" }],
    "r4.nl_core_wound.wound_infection": [{ "type": 0, "value": "Nl-core-wound.wound infection" }],
    "r4.nl_core_wound.wound_moisture": [{ "type": 0, "value": "Nl-core-wound.wound moisture" }],
    "r4.nl_core_wound.wound_tissue": [{ "type": 0, "value": "Nl-core-wound.wound tissue" }],
    "r4.nl_core_wounds.date_of_last_dressing_change": [{ "type": 0, "value": "Nl-core-wounds.date of last dressing change" }],
    "r4.nl_core_wounds.wound_characteristics": [{ "type": 0, "value": "Nl-core-wounds.wound characteristics" }],
    "r4.nl_core_wounds.wound_depth": [{ "type": 0, "value": "Nl-core-wounds.wound depth" }],
    "r4.nl_core_wounds.wound_image": [{ "type": 0, "value": "Nl-core-wounds.wound image" }],
    "r4.nl_core_wounds.wound_length": [{ "type": 0, "value": "Nl-core-wounds.wound length" }],
    "r4.nl_core_wounds.wound_width": [{ "type": 0, "value": "Nl-core-wounds.wound width" }],
    "r4.zib_ability_to_dress_oneself": [{ "type": 0, "value": "Vermogen tot zich kleden" }],
    "r4.zib_ability_to_dress_oneself.body_part_to_be_dressed.value": [{ "type": 0, "value": "Te kleden lichaamsdeel" }],
    "r4.zib_ability_to_dress_oneself.value": [{ "type": 0, "value": "Zich kleden" }],
    "r4.zib_ability_to_drink": [{ "type": 0, "value": "Vermogen tot drinken" }],
    "r4.zib_ability_to_drink.drinking_limitations.value": [{ "type": 0, "value": "Drink beperkingen" }],
    "r4.zib_ability_to_drink.value": [{ "type": 0, "value": "Drinken" }],
    "r4.zib_ability_to_eat": [{ "type": 0, "value": "Vermogen tot eten" }],
    "r4.zib_ability_to_eat.eating_limitations.value": [{ "type": 0, "value": "Eet beperkingen" }],
    "r4.zib_ability_to_eat.value": [{ "type": 0, "value": "Eten" }],
    "r4.zib_ability_to_groom": [{ "type": 0, "value": "Vermogen tot uiterlijke verzorging" }],
    "r4.zib_ability_to_groom.value": [{ "type": 0, "value": "Uiterlijke verzorging" }],
    "r4.zib_ability_to_use_toilet": [{ "type": 0, "value": "Vermogen tot toiletgang" }],
    "r4.zib_ability_to_use_toilet.menstrual_care.value": [{ "type": 0, "value": "Zorg bij menstruatie" }],
    "r4.zib_ability_to_use_toilet.toilet_use.value": [{ "type": 0, "value": "Toiletgebruik" }],
    "r4.zib_ability_to_wash_oneself": [{ "type": 0, "value": "Vermogen tot zich wassen" }],
    "r4.zib_ability_to_wash_oneself.body_part_to_be_bathed.value": [{ "type": 0, "value": "Te wassen lichaamsdeel" }],
    "r4.zib_ability_to_wash_oneself.value": [{ "type": 0, "value": "Zich wassen" }],
    "r4.zib_address_information": [{ "type": 0, "value": "Adresgegevens" }],
    "r4.zib_address_information.city": [{ "type": 0, "value": "Woonplaats" }],
    "r4.zib_address_information.country.country_code.value": [{ "type": 0, "value": "Land" }],
    "r4.zib_address_information.district": [{ "type": 0, "value": "Gemeente" }],
    "r4.zib_address_information.line.additional_information.value": [{ "type": 0, "value": "Additionele informatie" }],
    "r4.zib_address_information.line.house_number.value": [{ "type": 0, "value": "Huisnummer" }],
    "r4.zib_address_information.line.house_number_indication.value": [{ "type": 0, "value": "Aanduiding bij nummer" }],
    "r4.zib_address_information.line.house_number_letter_house_number_addition.value": [{ "type": 0, "value": "Huisnummerletter" }],
    "r4.zib_address_information.line.street_name.value": [{ "type": 0, "value": "Straat" }],
    "r4.zib_address_information.postal_code": [{ "type": 0, "value": "Postcode" }],
    "r4.zib_address_information.type": [{ "type": 0, "value": "Adres soort" }],
    "r4.zib_address_information.use": [{ "type": 0, "value": "Adres soort" }],
    "r4.zib_advance_directive": [{ "type": 0, "value": "Wilsverklaring" }],
    "r4.zib_advance_directive.comment.value": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_advance_directive.date_time": [{ "type": 0, "value": "Wilsverklaring datum" }],
    "r4.zib_advance_directive.provision.code": [{ "type": 0, "value": "Wilsverklaring type" }],
    "r4.zib_advance_directive.provision.representative.reference": [{ "type": 0, "value": "Vertegenwoordiger" }],
    "r4.zib_advance_directive.source_attachment.data": [{ "type": 0, "value": "Wilsverklaring document" }],
    "r4.zib_alcohol_use": [{ "type": 0, "value": "Alcohol gebruik" }],
    "r4.zib_alcohol_use.amount.value": [{ "type": 0, "value": "Hoeveelheid" }],
    "r4.zib_alcohol_use.effective_period.end": [{ "type": 0, "value": "Stop datum" }],
    "r4.zib_alcohol_use.effective_period.start": [{ "type": 0, "value": "Start datum" }],
    "r4.zib_alcohol_use.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_alcohol_use.value": [{ "type": 0, "value": "Alcohol gebruik status" }],
    "r4.zib_alert.alert_type": [{ "type": 0, "value": "Alert type" }],
    "r4.zib_alert.code.alert_name": [{ "type": 0, "value": "Alert naam" }],
    "r4.zib_alert.comment.value": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_alert.condition.value": [{ "type": 0, "value": "Conditie" }],
    "r4.zib_alert.period.end": [{ "type": 0, "value": "Eind datum tijd" }],
    "r4.zib_alert.period.start": [{ "type": 0, "value": "Begin datum tijd" }],
    "r4.zib_allergy_intolerance": [{ "type": 0, "value": "Allergie intolerantie" }],
    "r4.zib_allergy_intolerance.category": [{ "type": 0, "value": "Allergie categorie" }],
    "r4.zib_allergy_intolerance.category.allergy_category_codelist.value": [{ "type": 0, "value": "Allergie categorie" }],
    "r4.zib_allergy_intolerance.clinical_status": [{ "type": 0, "value": "Allergie status" }],
    "r4.zib_allergy_intolerance.code": [{ "type": 0, "value": "Veroorzakende stof" }],
    "r4.zib_allergy_intolerance.criticality": [{ "type": 0, "value": "Mate van kritiek zijn" }],
    "r4.zib_allergy_intolerance.criticality.critical_extent_codelist.value": [{ "type": 0, "value": "Mate van kritiek zijn" }],
    "r4.zib_allergy_intolerance.last_occurrence": [{ "type": 0, "value": "Laatste reactie datum tijd" }],
    "r4.zib_allergy_intolerance.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_allergy_intolerance.onset_date_time": [{ "type": 0, "value": "Begin datum tijd" }],
    "r4.zib_allergy_intolerance.reaction": [{ "type": 0, "value": "Reactie" }],
    "r4.zib_allergy_intolerance.reaction.description": [{ "type": 0, "value": "Reactie beschrijving" }],
    "r4.zib_allergy_intolerance.reaction.exposure_route": [{ "type": 0, "value": "Wijze van blootstelling" }],
    "r4.zib_allergy_intolerance.reaction.manifestation": [{ "type": 0, "value": "Symptoom" }],
    "r4.zib_allergy_intolerance.reaction.onset": [{ "type": 0, "value": "Reactie tijdstip" }],
    "r4.zib_allergy_intolerance.reaction.severity": [{ "type": 0, "value": "Ernst" }],
    "r4.zib_allergy_intolerance.reaction.substance": [{ "type": 0, "value": "Specifieke stof" }],
    "r4.zib_allergy_intolerance.verification_status": [{ "type": 0, "value": "Allergie status" }],
    "r4.zib_anatomical_location": [{ "type": 0, "value": "Locatie" }],
    "r4.zib_apgar_score_10_minute": [{ "type": 0, "value": "Apgar score" }],
    "r4.zib_apgar_score_10_minute.appearance_score.value": [{ "type": 0, "value": "Huidskleur score" }],
    "r4.zib_apgar_score_10_minute.effective_date_time": [{ "type": 0, "value": "Apgar score datum tijd" }],
    "r4.zib_apgar_score_10_minute.grimace_score.value": [{ "type": 0, "value": "Reflexen score" }],
    "r4.zib_apgar_score_10_minute.muscle_tone_score.value": [{ "type": 0, "value": "Spierspanning score" }],
    "r4.zib_apgar_score_10_minute.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_apgar_score_10_minute.pulse_score.value": [{ "type": 0, "value": "Hartslag score" }],
    "r4.zib_apgar_score_10_minute.respiratory_score.value": [{ "type": 0, "value": "Ademhaling score" }],
    "r4.zib_apgar_score_10_minute.value": [{ "type": 0, "value": "Apgar score totaal" }],
    "r4.zib_apgar_score_1_minute": [{ "type": 0, "value": "Apgar score" }],
    "r4.zib_apgar_score_1_minute.appearance_score.value": [{ "type": 0, "value": "Huidskleur score" }],
    "r4.zib_apgar_score_1_minute.effective_date_time": [{ "type": 0, "value": "Apgar score datum tijd" }],
    "r4.zib_apgar_score_1_minute.grimace_score.value": [{ "type": 0, "value": "Reflexen score" }],
    "r4.zib_apgar_score_1_minute.muscle_tone_score.value": [{ "type": 0, "value": "Spierspanning score" }],
    "r4.zib_apgar_score_1_minute.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_apgar_score_1_minute.pulse_score.value": [{ "type": 0, "value": "Hartslag score" }],
    "r4.zib_apgar_score_1_minute.respiratory_score.value": [{ "type": 0, "value": "Ademhaling score" }],
    "r4.zib_apgar_score_1_minute.value": [{ "type": 0, "value": "Apgar score totaal" }],
    "r4.zib_apgar_score_5_minute": [{ "type": 0, "value": "Apgar score" }],
    "r4.zib_apgar_score_5_minute.appearance_score.value": [{ "type": 0, "value": "Huidskleur score" }],
    "r4.zib_apgar_score_5_minute.effective_date_time": [{ "type": 0, "value": "Apgar score datum tijd" }],
    "r4.zib_apgar_score_5_minute.grimace_score.value": [{ "type": 0, "value": "Reflexen score" }],
    "r4.zib_apgar_score_5_minute.muscle_tone_score.value": [{ "type": 0, "value": "Spierspanning score" }],
    "r4.zib_apgar_score_5_minute.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_apgar_score_5_minute.pulse_score.value": [{ "type": 0, "value": "Hartslag score" }],
    "r4.zib_apgar_score_5_minute.respiratory_score.value": [{ "type": 0, "value": "Ademhaling score" }],
    "r4.zib_apgar_score_5_minute.value": [{ "type": 0, "value": "Apgar score totaal" }],
    "r4.zib_barthel_adl_index": [{ "type": 0, "value": "Barthel index" }],
    "r4.zib_barthel_adl_index.bathing.value": [{ "type": 0, "value": "Baden douchen" }],
    "r4.zib_barthel_adl_index.bladder.value": [{ "type": 0, "value": "Blaas" }],
    "r4.zib_barthel_adl_index.bowels.value": [{ "type": 0, "value": "Darm" }],
    "r4.zib_barthel_adl_index.dressing.value": [{ "type": 0, "value": "Aan uitkleden" }],
    "r4.zib_barthel_adl_index.feeding.value": [{ "type": 0, "value": "Eten" }],
    "r4.zib_barthel_adl_index.grooming.value": [{ "type": 0, "value": "Uiterlijke verzorging" }],
    "r4.zib_barthel_adl_index.managing_stairs.value": [{ "type": 0, "value": "Trappen lopen" }],
    "r4.zib_barthel_adl_index.mobility.value": [{ "type": 0, "value": "Mobiliteit" }],
    "r4.zib_barthel_adl_index.toilet_use.value": [{ "type": 0, "value": "Toiletgebruik" }],
    "r4.zib_barthel_adl_index.transfers.value": [{ "type": 0, "value": "Transfers" }],
    "r4.zib_barthel_adl_index.value": [{ "type": 0, "value": "Totaal score" }],
    "r4.zib_blood_pressure": [{ "type": 0, "value": "Bloeddruk" }],
    "r4.zib_blood_pressure.average_blood_pressure.value": [{ "type": 0, "value": "Gemiddelde bloeddruk" }],
    "r4.zib_blood_pressure.body_site": [{ "type": 0, "value": "Meet locatie" }],
    "r4.zib_blood_pressure.cuff_type.value": [{ "type": 0, "value": "Manchet type" }],
    "r4.zib_blood_pressure.diastolic_bp.value": [{ "type": 0, "value": "Diastolische bloeddruk" }],
    "r4.zib_blood_pressure.diastolic_endpoint.value": [{ "type": 0, "value": "Diastolisch eindpunt" }],
    "r4.zib_blood_pressure.effective_date_time": [{ "type": 0, "value": "Bloeddruk datum tijd" }],
    "r4.zib_blood_pressure.method": [{ "type": 0, "value": "Meetmethode" }],
    "r4.zib_blood_pressure.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_blood_pressure.position.value": [{ "type": 0, "value": "Houding" }],
    "r4.zib_blood_pressure.systolic_bp.value": [{ "type": 0, "value": "Systolische bloeddruk" }],
    "r4.zib_body_height": [{ "type": 0, "value": "Lichaamslengte" }],
    "r4.zib_body_height.effective_date_time": [{ "type": 0, "value": "Lengte datum tijd" }],
    "r4.zib_body_height.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_body_height.position.value": [{ "type": 0, "value": "Positie" }],
    "r4.zib_body_height.value": [{ "type": 0, "value": "Lengte waarde" }],
    "r4.zib_body_temperature": [{ "type": 0, "value": "Lichaamstemperatuur" }],
    "r4.zib_body_temperature.code.temperature_type": [{ "type": 0, "value": "Temperatuur type" }],
    "r4.zib_body_temperature.effective_date_time": [{ "type": 0, "value": "Temperatuur datum tijd" }],
    "r4.zib_body_temperature.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_body_temperature.value": [{ "type": 0, "value": "Temperatuur waarde" }],
    "r4.zib_body_weight": [{ "type": 0, "value": "Lichaamsgewicht" }],
    "r4.zib_body_weight.clothing.value": [{ "type": 0, "value": "Kleding" }],
    "r4.zib_body_weight.effective_date_time": [{ "type": 0, "value": "Gewicht datum tijd" }],
    "r4.zib_body_weight.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_body_weight.value": [{ "type": 0, "value": "Gewicht waarde" }],
    "r4.zib_bowel_function": [{ "type": 0, "value": "Darmfunctie" }],
    "r4.zib_bowel_function.defecation_color.value": [{ "type": 0, "value": "Defecatie kleur" }],
    "r4.zib_bowel_function.defecation_consistency.value": [{ "type": 0, "value": "Defecatie consistentie" }],
    "r4.zib_bowel_function.fecal_continence.value": [{ "type": 0, "value": "Feces continentie" }],
    "r4.zib_bowel_function.frequency.value": [{ "type": 0, "value": "Frequentie" }],
    "r4.zib_bowel_function.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_bowel_function.stoma.value": [{ "type": 0, "value": "Stoma" }],
    "r4.zib_burnwound": [{ "type": 0, "value": "Brandwond" }],
    "r4.zib_burnwound.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r4.zib_burnwound.code": [{ "type": 0, "value": "Brandwond soort" }],
    "r4.zib_burnwound.extent.value": [{ "type": 0, "value": "Uitgebreidheid" }],
    "r4.zib_burnwound.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_burnwound.onset_date_time": [{ "type": 0, "value": "Ontstaans datum" }],
    "r4.zib_burnwound.stage.summary": [{ "type": 0, "value": "Dieptegraad" }],
    "r4.zib_care_team": [{ "type": 0, "value": "Zorg team" }],
    "r4.zib_care_team.contact_person.member": [{ "type": 0, "value": "Contactpersoon" }],
    "r4.zib_care_team.healthcare_professional.health_professional_role": [{ "type": 0, "value": "Zorgverlener rol" }],
    "r4.zib_care_team.healthcare_professional.member": [{ "type": 0, "value": "Zorgverlener" }],
    "r4.zib_care_team.name": [{ "type": 0, "value": "Zorg team naam" }],
    "r4.zib_care_team.patient.member": [{ "type": 0, "value": "Patient" }],
    "r4.zib_care_team.reason_reference": [{ "type": 0, "value": "Probleem" }],
    "r4.zib_checklist_pain_behavior": [{ "type": 0, "value": "Checklist pijn gedrag" }],
    "r4.zib_checklist_pain_behavior.cry.value": [{ "type": 0, "value": "Huilen" }],
    "r4.zib_checklist_pain_behavior.effective_date_time": [{ "type": 0, "value": "Score datum tijd" }],
    "r4.zib_checklist_pain_behavior.eyes.value": [{ "type": 0, "value": "Ogen" }],
    "r4.zib_checklist_pain_behavior.face.value": [{ "type": 0, "value": "Gezicht" }],
    "r4.zib_checklist_pain_behavior.grimace.value": [{ "type": 0, "value": "Grimas" }],
    "r4.zib_checklist_pain_behavior.looking_sad.value": [{ "type": 0, "value": "Verdrietige blik" }],
    "r4.zib_checklist_pain_behavior.moaning.value": [{ "type": 0, "value": "Kreunen" }],
    "r4.zib_checklist_pain_behavior.mouth.value": [{ "type": 0, "value": "Mond" }],
    "r4.zib_checklist_pain_behavior.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_checklist_pain_behavior.panic.value": [{ "type": 0, "value": "Paniek" }],
    "r4.zib_checklist_pain_behavior.sounds_of_restlessness.value": [{ "type": 0, "value": "Onrustgeluiden" }],
    "r4.zib_checklist_pain_behavior.tears.value": [{ "type": 0, "value": "Tranen" }],
    "r4.zib_checklist_pain_behavior.value": [{ "type": 0, "value": "Totaal score" }],
    "r4.zib_comfort_scale": [{ "type": 0, "value": "Comfort score" }],
    "r4.zib_comfort_scale.alertness.value": [{ "type": 0, "value": "Alertheid" }],
    "r4.zib_comfort_scale.body_movement.value": [{ "type": 0, "value": "Lichaamsbeweging" }],
    "r4.zib_comfort_scale.body_muscle_tone.value": [{ "type": 0, "value": "Spierspanning" }],
    "r4.zib_comfort_scale.calmness_agitation.value": [{ "type": 0, "value": "Kalmte_ agitatie" }],
    "r4.zib_comfort_scale.crying.value": [{ "type": 0, "value": "Huilen" }],
    "r4.zib_comfort_scale.effective_date_time": [{ "type": 0, "value": "Score datum tijd" }],
    "r4.zib_comfort_scale.facial_tone.value": [{ "type": 0, "value": "Gezichtsspanning" }],
    "r4.zib_comfort_scale.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_comfort_scale.respiratory_response.value": [{ "type": 0, "value": "Ademhalingsreactie" }],
    "r4.zib_comfort_scale.value": [{ "type": 0, "value": "Totaal score" }],
    "r4.zib_contact_information_email_addresses": [{ "type": 0, "value": "Email adressen" }],
    "r4.zib_contact_information_email_addresses.use": [{ "type": 0, "value": "Email soort" }],
    "r4.zib_contact_information_email_addresses.value": [{ "type": 0, "value": "Email adres" }],
    "r4.zib_contact_information_telephone_numbers": [{ "type": 0, "value": "Telefoonnummers" }],
    "r4.zib_contact_information_telephone_numbers.comment.value": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_contact_information_telephone_numbers.system": [{ "type": 0, "value": "Telecom type" }],
    "r4.zib_contact_information_telephone_numbers.system.telecom_type.value": [{ "type": 0, "value": "Telecom type" }],
    "r4.zib_contact_information_telephone_numbers.use": [{ "type": 0, "value": "Nummer soort" }],
    "r4.zib_contact_information_telephone_numbers.value": [{ "type": 0, "value": "Telefoonnummer" }],
    "r4.zib_contact_person": [{ "type": 0, "value": "Contactpersoon" }],
    "r4.zib_contact_person.name": [{ "type": 0, "value": "Naamgegevens" }],
    "r4.zib_contact_person.relationship": [{ "type": 0, "value": "Relatie" }],
    "r4.zib_contact_person.role": [{ "type": 0, "value": "Rol" }],
    "r4.zib_contact_person.telecom": [{ "type": 0, "value": "Contactgegevens" }],
    "r4.zib_development_child": [{ "type": 0, "value": "Ontwikkeling kind" }],
    "r4.zib_development_child.age_first_menstruation.effective_date_time": [{ "type": 0, "value": "Ontwikkeling kind datum tijd" }],
    "r4.zib_development_child.age_first_menstruation.value": [{ "type": 0, "value": "Leeftijd eerste menstruatie" }],
    "r4.zib_development_child.development_cognition.effective_date_time": [{ "type": 0, "value": "Ontwikkeling kind datum tijd" }],
    "r4.zib_development_child.development_cognition.value": [{ "type": 0, "value": "Ontwikkeling verstandelijk" }],
    "r4.zib_development_child.development_linguistics.effective_date_time": [{ "type": 0, "value": "Ontwikkeling kind datum tijd" }],
    "r4.zib_development_child.development_linguistics.value": [{ "type": 0, "value": "Ontwikkeling taal" }],
    "r4.zib_development_child.development_locomotion.effective_date_time": [{ "type": 0, "value": "Ontwikkeling kind datum tijd" }],
    "r4.zib_development_child.development_locomotion.value": [{ "type": 0, "value": "Ontwikkeling motoriek" }],
    "r4.zib_development_child.development_social.effective_date_time": [{ "type": 0, "value": "Ontwikkeling kind datum tijd" }],
    "r4.zib_development_child.development_social.value": [{ "type": 0, "value": "Ontwikkeling sociaal" }],
    "r4.zib_development_child.effective_date_time": [{ "type": 0, "value": "Ontwikkeling kind datum tijd" }],
    "r4.zib_development_child.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_development_child.toilet_trainedness_feces.effective_date_time": [{ "type": 0, "value": "Ontwikkeling kind datum tijd" }],
    "r4.zib_development_child.toilet_trainedness_feces.value": [{ "type": 0, "value": "Zindelijkheid feces" }],
    "r4.zib_development_child.toilet_trainedness_urine.effective_date_time": [{ "type": 0, "value": "Ontwikkeling kind datum tijd" }],
    "r4.zib_development_child.toilet_trainedness_urine.value": [{ "type": 0, "value": "Zindelijkheid urine" }],
    "r4.zib_dos_score": [{ "type": 0, "value": "DOS score" }],
    "r4.zib_dos_score.answers_no_fit.value": [{ "type": 0, "value": "Antwoorden niet passend" }],
    "r4.zib_dos_score.dozes_off.value": [{ "type": 0, "value": "Zakt weg" }],
    "r4.zib_dos_score.easily_distracted.value": [{ "type": 0, "value": "Snel afgeleid" }],
    "r4.zib_dos_score.easily_emotional.value": [{ "type": 0, "value": "Snel geemotioneerd" }],
    "r4.zib_dos_score.effective_date_time": [{ "type": 0, "value": "DOS score datum tijd" }],
    "r4.zib_dos_score.hallucinations.value": [{ "type": 0, "value": "Hallucinaties" }],
    "r4.zib_dos_score.knows_part_day.value": [{ "type": 0, "value": "Beseft dagdeel" }],
    "r4.zib_dos_score.maintains_attention.value": [{ "type": 0, "value": "Heeft aandacht" }],
    "r4.zib_dos_score.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_dos_score.pulls_wires.value": [{ "type": 0, "value": "Trekt draden" }],
    "r4.zib_dos_score.reacts_slowly.value": [{ "type": 0, "value": "Reageert traag" }],
    "r4.zib_dos_score.remembers_recent.value": [{ "type": 0, "value": "Herinnert recent" }],
    "r4.zib_dos_score.restless.value": [{ "type": 0, "value": "Rusteloos" }],
    "r4.zib_dos_score.thinks_somewhere_else.value": [{ "type": 0, "value": "Denkt ergens anders" }],
    "r4.zib_dos_score.unfinished_question_answer.value": [{ "type": 0, "value": "Vraag antwoord niet af" }],
    "r4.zib_dos_score.value": [{ "type": 0, "value": "DOS score totaal" }],
    "r4.zib_drug_use": [{ "type": 0, "value": "Drugs gebruik" }],
    "r4.zib_drug_use.amount.value": [{ "type": 0, "value": "Hoeveelheid" }],
    "r4.zib_drug_use.drug_or_medication_type.value": [{ "type": 0, "value": "Drugs of geneesmiddel soort" }],
    "r4.zib_drug_use.effective_period.end": [{ "type": 0, "value": "Stop datum" }],
    "r4.zib_drug_use.effective_period.start": [{ "type": 0, "value": "Start datum" }],
    "r4.zib_drug_use.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_drug_use.route_of_administration.value": [{ "type": 0, "value": "Toedieningsweg" }],
    "r4.zib_drug_use.value": [{ "type": 0, "value": "Drugs gebruik status" }],
    "r4.zib_education.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_education.value": [{ "type": 0, "value": "Schooltype" }],
    "r4.zib_encounter": [{ "type": 0, "value": "Contact" }],
    "r4.zib_encounter.class": [{ "type": 0, "value": "Contact type" }],
    "r4.zib_encounter.deviating_result.comment_contact_reason.value": [{ "type": 0, "value": "Toelichting reden contact" }],
    "r4.zib_encounter.deviating_result.text": [{ "type": 0, "value": "Afwijkende uitslag" }],
    "r4.zib_encounter.health_professional.individual": [{ "type": 0, "value": "Contact met" }],
    "r4.zib_encounter.health_professional.type": [{ "type": 0, "value": "Zorgverlener rol" }],
    "r4.zib_encounter.hospitalization.admit_source": [{ "type": 0, "value": "Herkomst" }],
    "r4.zib_encounter.hospitalization.discharge_disposition": [{ "type": 0, "value": "Bestemming" }],
    "r4.zib_encounter.location.location": [{ "type": 0, "value": "Locatie" }],
    "r4.zib_encounter.period.end": [{ "type": 0, "value": "Eind datum tijd" }],
    "r4.zib_encounter.period.start": [{ "type": 0, "value": "Begin datum tijd" }],
    "r4.zib_encounter.problem": [{ "type": 0, "value": "Probleem" }],
    "r4.zib_encounter.procedure": [{ "type": 0, "value": "Verrichting" }],
    "r4.zib_encounter.reason_reference.comment_contact_reason.value": [{ "type": 0, "value": "Toelichting reden contact" }],
    "r4.zib_episode_of_care": [{ "type": 0, "value": "Zorg episode" }],
    "r4.zib_episode_of_care.comment.value": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_episode_of_care.diagnosis.condition": [{ "type": 0, "value": "Focus zorg episode" }],
    "r4.zib_episode_of_care.period.end": [{ "type": 0, "value": "Eind datum" }],
    "r4.zib_episode_of_care.period.start": [{ "type": 0, "value": "Begin datum" }],
    "r4.zib_feeding_pattern_infant": [{ "type": 0, "value": "Voedingspatroon zuigeling" }],
    "r4.zib_feeding_pattern_infant.based_on": [{ "type": 0, "value": "Voedingsadvies" }],
    "r4.zib_feeding_pattern_infant.effective_date_time": [{ "type": 0, "value": "Voedingspatroon zuigeling datum tijd" }],
    "r4.zib_feeding_pattern_infant.feeding_frequency.value": [{ "type": 0, "value": "Voeding frequentie" }],
    "r4.zib_feeding_pattern_infant.feeding_supplement.value": [{ "type": 0, "value": "Voeding toevoeging" }],
    "r4.zib_feeding_pattern_infant.feeding_type.value": [{ "type": 0, "value": "Voeding soort" }],
    "r4.zib_feeding_pattern_infant.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_flac_cpain_scale": [{ "type": 0, "value": "FLAC cpijn score" }],
    "r4.zib_flac_cpain_scale.activity.value": [{ "type": 0, "value": "Activiteit" }],
    "r4.zib_flac_cpain_scale.consolability.value": [{ "type": 0, "value": "Troostbaar" }],
    "r4.zib_flac_cpain_scale.cry.value": [{ "type": 0, "value": "Huilen" }],
    "r4.zib_flac_cpain_scale.effective_date_time": [{ "type": 0, "value": "Score datum tijd" }],
    "r4.zib_flac_cpain_scale.face.value": [{ "type": 0, "value": "Gezicht" }],
    "r4.zib_flac_cpain_scale.legs.value": [{ "type": 0, "value": "Benen" }],
    "r4.zib_flac_cpain_scale.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_flac_cpain_scale.value": [{ "type": 0, "value": "Totaal score" }],
    "r4.zib_fluid_balance": [{ "type": 0, "value": "Vochtbalans" }],
    "r4.zib_fluid_balance.effective_period.end": [{ "type": 0, "value": "Vochtbalans stoptijd" }],
    "r4.zib_fluid_balance.effective_period.start": [{ "type": 0, "value": "Vochtbalans starttijd" }],
    "r4.zib_fluid_balance.fluid_total_in.effective_period.end": [{ "type": 0, "value": "Vochtbalans stoptijd" }],
    "r4.zib_fluid_balance.fluid_total_in.effective_period.start": [{ "type": 0, "value": "Vochtbalans starttijd" }],
    "r4.zib_fluid_balance.fluid_total_in.value": [{ "type": 0, "value": "Vocht totaal in" }],
    "r4.zib_fluid_balance.fluid_total_out.effective_period.end": [{ "type": 0, "value": "Vochtbalans stoptijd" }],
    "r4.zib_fluid_balance.fluid_total_out.effective_period.start": [{ "type": 0, "value": "Vochtbalans starttijd" }],
    "r4.zib_fluid_balance.fluid_total_out.value": [{ "type": 0, "value": "Vocht totaal uit" }],
    "r4.zib_fluid_balance.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_freedom_restricting_intervention": [{ "type": 0, "value": "Vrijheidsbeperkende interventie" }],
    "r4.zib_freedom_restricting_intervention.code": [{ "type": 0, "value": "Soort interventie" }],
    "r4.zib_freedom_restricting_intervention.legal_situation_legal_status": [{ "type": 0, "value": "Juridische situatie" }],
    "r4.zib_freedom_restricting_intervention.legal_situation_representation": [{ "type": 0, "value": "Juridische situatie" }],
    "r4.zib_freedom_restricting_intervention.performed_date_time": [{ "type": 0, "value": "Begin" }],
    "r4.zib_freedom_restricting_intervention.performed_period.end": [{ "type": 0, "value": "Einde" }],
    "r4.zib_freedom_restricting_intervention.performed_period.start": [{ "type": 0, "value": "Begin" }],
    "r4.zib_freedom_restricting_intervention.reason_code": [{ "type": 0, "value": "Reden van toepassen" }],
    "r4.zib_functional_or_mental_status": [{ "type": 0, "value": "Functionele of mentale status" }],
    "r4.zib_functional_or_mental_status.code": [{ "type": 0, "value": "Status naam" }],
    "r4.zib_functional_or_mental_status.effective_date_time": [{ "type": 0, "value": "Status datum" }],
    "r4.zib_functional_or_mental_status.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_functional_or_mental_status.value": [{ "type": 0, "value": "Status waarde" }],
    "r4.zib_glasgow_coma_scale": [{ "type": 0, "value": "Glasgow coma scale" }],
    "r4.zib_glasgow_coma_scale.conditions_during_measurement.value": [{ "type": 0, "value": "Condities tijdens meting" }],
    "r4.zib_glasgow_coma_scale.effective_date_time": [{ "type": 0, "value": "Glasgow coma scale datum tijd" }],
    "r4.zib_glasgow_coma_scale.gcs_eyes.value": [{ "type": 0, "value": "GCS_ eyes" }],
    "r4.zib_glasgow_coma_scale.gcs_motor.value": [{ "type": 0, "value": "GCS_ motor" }],
    "r4.zib_glasgow_coma_scale.gcs_verbal.value": [{ "type": 0, "value": "GCS_ verbal" }],
    "r4.zib_glasgow_coma_scale.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_glasgow_coma_scale.value": [{ "type": 0, "value": "Totaal score" }],
    "r4.zib_head_circumference": [{ "type": 0, "value": "Schedelomvang" }],
    "r4.zib_head_circumference.effective_date_time": [{ "type": 0, "value": "Schedelomvang datum tijd" }],
    "r4.zib_head_circumference.method": [{ "type": 0, "value": "Schedelomvang meetmethode" }],
    "r4.zib_head_circumference.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_head_circumference.value": [{ "type": 0, "value": "Schedelomvang waarde" }],
    "r4.zib_health_professional_practitioner": [{ "type": 0, "value": "Zorgverlener" }],
    "r4.zib_health_professional_practitioner.gender": [{ "type": 0, "value": "Geslacht" }],
    "r4.zib_health_professional_practitioner.identifier": [{ "type": 0, "value": "Zorgverlener identificatienummer" }],
    "r4.zib_health_professional_practitioner.name": [{ "type": 0, "value": "Naamgegevens" }],
    "r4.zib_health_professional_practitioner.telecom": [{ "type": 0, "value": "Contactgegevens" }],
    "r4.zib_health_professional_practitioner_role": [{ "type": 0, "value": "Zorgverlener" }],
    "r4.zib_health_professional_practitioner_role.organization": [{ "type": 0, "value": "Zorgaanbieder" }],
    "r4.zib_health_professional_practitioner_role.specialty": [{ "type": 0, "value": "Specialisme" }],
    "r4.zib_health_professional_practitioner_role.telecom": [{ "type": 0, "value": "Contactgegevens" }],
    "r4.zib_healthcare_provider": [{ "type": 0, "value": "Organisatie locatie" }],
    "r4.zib_healthcare_provider.name": [{ "type": 0, "value": "Locatie naam" }],
    "r4.zib_healthcare_provider.telecom": [{ "type": 0, "value": "Contactgegevens" }],
    "r4.zib_healthcare_provider_organization": [{ "type": 0, "value": "Zorgaanbieder" }],
    "r4.zib_healthcare_provider_organization.department_specialty": [{ "type": 0, "value": "Afdeling specialisme" }],
    "r4.zib_healthcare_provider_organization.identifier": [{ "type": 0, "value": "Zorgaanbieder identificatienummer" }],
    "r4.zib_healthcare_provider_organization.name": [{ "type": 0, "value": "Organisatie naam" }],
    "r4.zib_healthcare_provider_organization.organization_type": [{ "type": 0, "value": "Organisatie type" }],
    "r4.zib_hearing_function": [{ "type": 0, "value": "Functie horen" }],
    "r4.zib_hearing_function.hearing_aid.body_site": [{ "type": 0, "value": "Hulpmiddel anatomische locatie" }],
    "r4.zib_hearing_function.hearing_aid.hearing_function": [{ "type": 0, "value": "Functie horen" }],
    "r4.zib_hearing_function.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_hearing_function.value": [{ "type": 0, "value": "Hoor functie" }],
    "r4.zib_heart_rate": [{ "type": 0, "value": "Hartfrequentie" }],
    "r4.zib_heart_rate.effective_date_time": [{ "type": 0, "value": "Hartfrequentie datum tijd" }],
    "r4.zib_heart_rate.heartbeat_regularity.effective_date_time": [{ "type": 0, "value": "Hartfrequentie datum tijd" }],
    "r4.zib_heart_rate.heartbeat_regularity.method": [{ "type": 0, "value": "Hartslag meet methode" }],
    "r4.zib_heart_rate.heartbeat_regularity.value": [{ "type": 0, "value": "Hartslag regelmatigheid" }],
    "r4.zib_heart_rate.interpretation_heart_rate.effective_date_time": [{ "type": 0, "value": "Hartfrequentie datum tijd" }],
    "r4.zib_heart_rate.interpretation_heart_rate.method": [{ "type": 0, "value": "Hartslag meet methode" }],
    "r4.zib_heart_rate.interpretation_heart_rate.value": [{ "type": 0, "value": "Interpretatie frequentie" }],
    "r4.zib_heart_rate.method": [{ "type": 0, "value": "Hartslag meet methode" }],
    "r4.zib_heart_rate.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_heart_rate.value": [{ "type": 0, "value": "Hartfrequentie waarde" }],
    "r4.zib_help_from_others": [{ "type": 0, "value": "Hulp van anderen" }],
    "r4.zib_help_from_others.activity.detail.caregiver": [{ "type": 0, "value": "Mantelzorger" }],
    "r4.zib_help_from_others.activity.detail.code": [{ "type": 0, "value": "Soort hulp" }],
    "r4.zib_help_from_others.activity.detail.description": [{ "type": 0, "value": "Aard" }],
    "r4.zib_help_from_others.activity.detail.health_professional": [{ "type": 0, "value": "Zorgverlener" }],
    "r4.zib_help_from_others.activity.detail.healthcare_provider": [{ "type": 0, "value": "Zorgaanbieder" }],
    "r4.zib_help_from_others.activity.detail.performer": [{ "type": 0, "value": "Hulpverlener" }],
    "r4.zib_help_from_others.activity.detail.scheduled_string": [{ "type": 0, "value": "Frequentie" }],
    "r4.zib_help_from_others.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_illness_perception": [{ "type": 0, "value": "Ziektebeleving" }],
    "r4.zib_illness_perception.coping_with_illness_by_family.value": [{ "type": 0, "value": "Omgaan met ziekteproces door naasten" }],
    "r4.zib_illness_perception.coping_with_illness_by_patient.value": [{ "type": 0, "value": "Omgaan met ziekteproces door patiënt" }],
    "r4.zib_illness_perception.patient_illness_insight.value": [{ "type": 0, "value": "Ziekte inzicht van patiënt" }],
    "r4.zib_laboratory_test_result": [{ "type": 0, "value": "Laboratorium uitslag" }],
    "r4.zib_laboratory_test_result.code": [{ "type": 0, "value": "Onderzoek" }],
    "r4.zib_laboratory_test_result.effective_date_time": [{ "type": 0, "value": "Test datum tijd" }],
    "r4.zib_laboratory_test_result.laboratory_test": [{ "type": 0, "value": "Laboratorium test" }],
    "r4.zib_laboratory_test_result.method": [{ "type": 0, "value": "Testmethode" }],
    "r4.zib_laboratory_test_result.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_laboratory_test_result.performer": [{ "type": 0, "value": "Uitvoerder" }],
    "r4.zib_laboratory_test_result.reference_range.high": [{ "type": 0, "value": "Referentie bovengrens" }],
    "r4.zib_laboratory_test_result.reference_range.low": [{ "type": 0, "value": "Referentie ondergrens" }],
    "r4.zib_laboratory_test_result.result_flags": [{ "type": 0, "value": "Interpretatie vlaggen" }],
    "r4.zib_laboratory_test_result.result_interpretation.text": [{ "type": 0, "value": "Uitslag interpretatie" }],
    "r4.zib_laboratory_test_result.result_type": [{ "type": 0, "value": "Resultaat type" }],
    "r4.zib_laboratory_test_result.sequel_to.value": [{ "type": 0, "value": "Gerelateerde uitslag" }],
    "r4.zib_laboratory_test_result.specimen": [{ "type": 0, "value": "Monster" }],
    "r4.zib_laboratory_test_result.specimen.collection.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r4.zib_laboratory_test_result.specimen.collection.collected_date_time": [{ "type": 0, "value": "Afname datum tijd" }],
    "r4.zib_laboratory_test_result.specimen.collection.collected_period": [{ "type": 0, "value": "Verzamelperiode" }],
    "r4.zib_laboratory_test_result.specimen.collection.duration": [{ "type": 0, "value": "Verzamelperiode" }],
    "r4.zib_laboratory_test_result.specimen.collection.method": [{ "type": 0, "value": "Afnameprocedure" }],
    "r4.zib_laboratory_test_result.specimen.collection.quantity": [{ "type": 0, "value": "Verzamelvolume" }],
    "r4.zib_laboratory_test_result.specimen.container.specimen_number_extension.value": [{ "type": 0, "value": "Monstervolgnummer" }],
    "r4.zib_laboratory_test_result.specimen.container.type": [{ "type": 0, "value": "Containertype" }],
    "r4.zib_laboratory_test_result.specimen.identifier": [{ "type": 0, "value": "Monsternummer" }],
    "r4.zib_laboratory_test_result.specimen.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_laboratory_test_result.specimen.received_time": [{ "type": 0, "value": "Aanname datum tijd" }],
    "r4.zib_laboratory_test_result.specimen.subject": [{ "type": 0, "value": "Bron monster" }],
    "r4.zib_laboratory_test_result.specimen.type": [{ "type": 0, "value": "Monstermateriaal" }],
    "r4.zib_laboratory_test_result.specimen_source.device_name.name": [{ "type": 0, "value": "Bron monster" }],
    "r4.zib_laboratory_test_result.status": [{ "type": 0, "value": "Test uitslag status" }],
    "r4.zib_laboratory_test_result.value": [{ "type": 0, "value": "Test uitslag" }],
    "r4.zib_legal_situation_legal_status": [{ "type": 0, "value": "Juridische situatie" }],
    "r4.zib_legal_situation_legal_status.abatement_date_time": [{ "type": 0, "value": "Datum einde" }],
    "r4.zib_legal_situation_legal_status.code": [{ "type": 0, "value": "Juridische status" }],
    "r4.zib_legal_situation_legal_status.onset_date_time": [{ "type": 0, "value": "Datum aanvang" }],
    "r4.zib_legal_situation_representation": [{ "type": 0, "value": "Juridische situatie" }],
    "r4.zib_legal_situation_representation.abatement_date_time": [{ "type": 0, "value": "Datum einde" }],
    "r4.zib_legal_situation_representation.code": [{ "type": 0, "value": "Vertegenwoordiging" }],
    "r4.zib_legal_situation_representation.onset_date_time": [{ "type": 0, "value": "Datum aanvang" }],
    "r4.zib_life_stance": [{ "type": 0, "value": "Levensovertuiging RC" }],
    "r4.zib_life_stance.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_life_stance.value": [{ "type": 0, "value": "Levensovertuiging" }],
    "r4.zib_living_situation": [{ "type": 0, "value": "Woonsituatie" }],
    "r4.zib_living_situation.home_adaption.value": [{ "type": 0, "value": "Woning aanpassing" }],
    "r4.zib_living_situation.living_condition.value": [{ "type": 0, "value": "Woon omstandigheid" }],
    "r4.zib_living_situation.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_living_situation.value": [{ "type": 0, "value": "Woning type" }],
    "r4.zib_medical_device": [{ "type": 0, "value": "Medisch hulpmiddel" }],
    "r4.zib_medical_device.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r4.zib_medical_device.bowel_function": [{ "type": 0, "value": "Darmfunctie" }],
    "r4.zib_medical_device.functional_or_mental_status": [{ "type": 0, "value": "Functionele of mentale status" }],
    "r4.zib_medical_device.indication": [{ "type": 0, "value": "Indicatie" }],
    "r4.zib_medical_device.mobility": [{ "type": 0, "value": "Mobiliteit" }],
    "r4.zib_medical_device.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_medical_device.procedure_event": [{ "type": 0, "value": "Verrichting" }],
    "r4.zib_medical_device.procedure_request": [{ "type": 0, "value": "Verrichting" }],
    "r4.zib_medical_device.product": [{ "type": 0, "value": "Product" }],
    "r4.zib_medical_device.product.gs_1_product_id": [{ "type": 0, "value": "Product ID" }],
    "r4.zib_medical_device.product.gs_1_udi_carrier.carrier_hrf": [{ "type": 0, "value": "Product ID" }],
    "r4.zib_medical_device.product.hibc_product_id": [{ "type": 0, "value": "Product ID" }],
    "r4.zib_medical_device.product.hibc_udi_carrier.carrier_hrf": [{ "type": 0, "value": "Product ID" }],
    "r4.zib_medical_device.product.note.text": [{ "type": 0, "value": "Product omschrijving" }],
    "r4.zib_medical_device.product.type": [{ "type": 0, "value": "Product type" }],
    "r4.zib_medical_device.stoma": [{ "type": 0, "value": "Stoma" }],
    "r4.zib_medical_device.timing_period.end": [{ "type": 0, "value": "Eind datum" }],
    "r4.zib_medical_device.timing_period.start": [{ "type": 0, "value": "Begin datum" }],
    "r4.zib_medical_device.wound": [{ "type": 0, "value": "Wond" }],
    "r4.zib_medication_contra_indication": [{ "type": 0, "value": "Medicatie contra indicatie" }],
    "r4.zib_medication_contra_indication.author": [{ "type": 0, "value": "Melder" }],
    "r4.zib_medication_contra_indication.code": [{ "type": 0, "value": "Medicatie contra indicatie naam" }],
    "r4.zib_medication_contra_indication.comment.value": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_medication_contra_indication.period.end": [{ "type": 0, "value": "Eind datum" }],
    "r4.zib_medication_contra_indication.period.start": [{ "type": 0, "value": "Begin datum" }],
    "r4.zib_mobility": [{ "type": 0, "value": "Mobiliteit" }],
    "r4.zib_mobility.changing_position.value": [{ "type": 0, "value": "Houding veranderen" }],
    "r4.zib_mobility.climbing_stairs.value": [{ "type": 0, "value": "Traplopen" }],
    "r4.zib_mobility.maintaining_position.value": [{ "type": 0, "value": "Houding handhaven" }],
    "r4.zib_mobility.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_mobility.transfer.value": [{ "type": 0, "value": "Uitvoeren transfer" }],
    "r4.zib_mobility.walking.value": [{ "type": 0, "value": "Lopen" }],
    "r4.zib_must_score": [{ "type": 0, "value": "MUST score" }],
    "r4.zib_must_score.bmi_score.value": [{ "type": 0, "value": "BMI score" }],
    "r4.zib_must_score.effective_date_time": [{ "type": 0, "value": "MUST score datum tijd" }],
    "r4.zib_must_score.illness_score.value": [{ "type": 0, "value": "Ziekte score" }],
    "r4.zib_must_score.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_must_score.value": [{ "type": 0, "value": "Totaal score" }],
    "r4.zib_must_score.weight_loss_score.value": [{ "type": 0, "value": "Gewichtsverlies score" }],
    "r4.zib_name_information": [{ "type": 0, "value": "Naamgegevens" }],
    "r4.zib_name_information.family.last_name.value": [{ "type": 0, "value": "Achternaam" }],
    "r4.zib_name_information.family.partner_last_name.value": [{ "type": 0, "value": "Achternaam partner" }],
    "r4.zib_name_information.family.partner_prefix.value": [{ "type": 0, "value": "Voorvoegsels partner" }],
    "r4.zib_name_information.family.prefix.value": [{ "type": 0, "value": "Voorvoegsels" }],
    "r4.zib_name_information.given": [{ "type": 0, "value": "Voornaam" }],
    "r4.zib_name_information.given_name.given": [{ "type": 0, "value": "Roepnaam" }],
    "r4.zib_name_information.name_usage.value": [{ "type": 0, "value": "Naamgebruik" }],
    "r4.zib_name_information.prefix": [{ "type": 0, "value": "Titels" }],
    "r4.zib_name_information.suffix": [{ "type": 0, "value": "Titels" }],
    "r4.zib_nursing_intervention": [{ "type": 0, "value": "Verpleegkundige interventie" }],
    "r4.zib_nursing_intervention.activity.detail.caregiver": [{ "type": 0, "value": "Verzorger" }],
    "r4.zib_nursing_intervention.activity.detail.code": [{ "type": 0, "value": "Interventie" }],
    "r4.zib_nursing_intervention.activity.detail.description": [{ "type": 0, "value": "Instructie" }],
    "r4.zib_nursing_intervention.activity.detail.healthcare_provider": [{ "type": 0, "value": "Zorgverlener" }],
    "r4.zib_nursing_intervention.activity.detail.medical_device.value": [{ "type": 0, "value": "Medisch hulpmiddel" }],
    "r4.zib_nursing_intervention.activity.detail.patient": [{ "type": 0, "value": "Patient" }],
    "r4.zib_nursing_intervention.activity.detail.scheduled_timing.repeat.bounds_period.end": [{ "type": 0, "value": "Actie eind datum tijd" }],
    "r4.zib_nursing_intervention.activity.detail.scheduled_timing.repeat.bounds_period.start": [{ "type": 0, "value": "Actie start datum tijd" }],
    "r4.zib_nursing_intervention.activity.detail.scheduled_timing.repeat.frequency": [{ "type": 0, "value": "Interval" }],
    "r4.zib_nursing_intervention.activity.detail.scheduled_timing.repeat.period": [{ "type": 0, "value": "Interval" }],
    "r4.zib_nursing_intervention.activity.detail.scheduled_timing.repeat.period_unit": [{ "type": 0, "value": "Interval" }],
    "r4.zib_nursing_intervention.addresses": [{ "type": 0, "value": "Indicatie" }],
    "r4.zib_nursing_intervention.goal": [{ "type": 0, "value": "Behandeldoel" }],
    "r4.zib_nursing_intervention.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_nursing_intervention.period.end": [{ "type": 0, "value": "Actie eind datum tijd" }],
    "r4.zib_nursing_intervention.period.start": [{ "type": 0, "value": "Actie start datum tijd" }],
    "r4.zib_nursing_intervention.requester": [{ "type": 0, "value": "Aanvrager" }],
    "r4.zib_nutrition_advice": [{ "type": 0, "value": "Voedingsadvies" }],
    "r4.zib_nutrition_advice.indication.value": [{ "type": 0, "value": "Indicatie" }],
    "r4.zib_nutrition_advice.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_nutrition_advice.oral_diet.fluid_consistency_type.text": [{ "type": 0, "value": "Consistentie" }],
    "r4.zib_nutrition_advice.oral_diet.texture.modifier.text": [{ "type": 0, "value": "Consistentie" }],
    "r4.zib_nutrition_advice.oral_diet.type.text": [{ "type": 0, "value": "Dieet type" }],
    "r4.zib_o_2_saturation": [{ "type": 0, "value": "O2 saturatie" }],
    "r4.zib_o_2_saturation.effective_date_time": [{ "type": 0, "value": "O2 saturatie datum tijd" }],
    "r4.zib_o_2_saturation.extra_oxygen_administration.value": [{ "type": 0, "value": "Extra zuurstof toediening" }],
    "r4.zib_o_2_saturation.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_o_2_saturation.value": [{ "type": 0, "value": "Sp o2 waarde" }],
    "r4.zib_pain_score": [{ "type": 0, "value": "Pijn score" }],
    "r4.zib_pain_score.effective_date_time": [{ "type": 0, "value": "Pijnscore datum tijd" }],
    "r4.zib_pain_score.method": [{ "type": 0, "value": "Pijn meetmethode" }],
    "r4.zib_pain_score.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_pain_score.value": [{ "type": 0, "value": "Pijnscore waarde" }],
    "r4.zib_participation_in_society": [{ "type": 0, "value": "Participatie in maatschappij" }],
    "r4.zib_participation_in_society.hobby.value": [{ "type": 0, "value": "Vrijetijdsbesteding" }],
    "r4.zib_participation_in_society.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_participation_in_society.social_network.value": [{ "type": 0, "value": "Sociaal netwerk" }],
    "r4.zib_participation_in_society.work_situation.value": [{ "type": 0, "value": "Arbeidssituatie" }],
    "r4.zib_patient": [{ "type": 0, "value": "Patient" }],
    "r4.zib_patient.birth_date": [{ "type": 0, "value": "Geboortedatum" }],
    "r4.zib_patient.communication": [{ "type": 0, "value": "Taalvaardigheid" }],
    "r4.zib_patient.communication.comment.value": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_patient.communication.language": [{ "type": 0, "value": "Communicatie taal" }],
    "r4.zib_patient.communication.language_control": [{ "type": 0, "value": "Taalvaardigheid begrijpen" }],
    "r4.zib_patient.contact": [{ "type": 0, "value": "Contactpersoon" }],
    "r4.zib_patient.contact.contact_person.value": [{ "type": 0, "value": "Contactpersoon" }],
    "r4.zib_patient.contact.relationship": [{ "type": 0, "value": "Relatie" }],
    "r4.zib_patient.contact.role": [{ "type": 0, "value": "Rol" }],
    "r4.zib_patient.contact.telecom": [{ "type": 0, "value": "Contactgegevens" }],
    "r4.zib_patient.deceased_boolean": [{ "type": 0, "value": "Overlijdens indicator" }],
    "r4.zib_patient.deceased_date_time": [{ "type": 0, "value": "Datum overlijden" }],
    "r4.zib_patient.gender": [{ "type": 0, "value": "Geslacht" }],
    "r4.zib_patient.gender.gender_codelist.value": [{ "type": 0, "value": "Geslacht" }],
    "r4.zib_patient.identifier": [{ "type": 0, "value": "Identificatienummer" }],
    "r4.zib_patient.marital_status": [{ "type": 0, "value": "Burgerlijke staat" }],
    "r4.zib_patient.multiple_birth_boolean": [{ "type": 0, "value": "Meerling indicator" }],
    "r4.zib_patient.name": [{ "type": 0, "value": "Naamgegevens" }],
    "r4.zib_patient.nationality.code.value": [{ "type": 0, "value": "Nationaliteit" }],
    "r4.zib_patient.telecom": [{ "type": 0, "value": "Contactgegevens" }],
    "r4.zib_payer.insurance_company": [{ "type": 0, "value": "Betaler" }],
    "r4.zib_payer.insurance_company.payor": [{ "type": 0, "value": "Verzekeraar" }],
    "r4.zib_payer.insurance_company.period.end": [{ "type": 0, "value": "Eind datum tijd" }],
    "r4.zib_payer.insurance_company.period.start": [{ "type": 0, "value": "Begin datum tijd" }],
    "r4.zib_payer.insurance_company.subscriber_id": [{ "type": 0, "value": "Verzekerde nummer" }],
    "r4.zib_payer.insurance_company.type": [{ "type": 0, "value": "Verzekeringssoort" }],
    "r4.zib_payer.payer_person": [{ "type": 0, "value": "Betaler" }],
    "r4.zib_payer.payer_person.payor": [{ "type": 0, "value": "Betaler persoon" }],
    "r4.zib_payer_organization": [{ "type": 0, "value": "Verzekeraar" }],
    "r4.zib_payer_organization.name": [{ "type": 0, "value": "Organisatie naam" }],
    "r4.zib_payer_organization.telecom": [{ "type": 0, "value": "Contactgegevens" }],
    "r4.zib_payer_organization.uzovi": [{ "type": 0, "value": "Identificatie nummer" }],
    "r4.zib_pharmaceutical_product": [{ "type": 0, "value": "Farmaceutisch product" }],
    "r4.zib_pharmaceutical_product.code": [{ "type": 0, "value": "Product code" }],
    "r4.zib_pharmaceutical_product.code.text": [{ "type": 0, "value": "Product naam" }],
    "r4.zib_pharmaceutical_product.form": [{ "type": 0, "value": "Farmaceutische vorm" }],
    "r4.zib_pharmaceutical_product.ingredient": [{ "type": 0, "value": "Ingredient" }],
    "r4.zib_pharmaceutical_product.ingredient.item_codeable_concept": [{ "type": 0, "value": "Ingredient code" }],
    "r4.zib_pharmaceutical_product.ingredient.strength": [{ "type": 0, "value": "Sterkte" }],
    "r4.zib_pharmaceutical_product.ingredient.strength.denominator": [{ "type": 0, "value": "Product hoeveelheid" }],
    "r4.zib_pharmaceutical_product.ingredient.strength.numerator": [{ "type": 0, "value": "Ingredient hoeveelheid" }],
    "r4.zib_pregnancy": [{ "type": 0, "value": "Zwangerschap" }],
    "r4.zib_pregnancy.date_last_menstruation.value": [{ "type": 0, "value": "Datum laatste menstruatie" }],
    "r4.zib_pregnancy.estimated_date_of_delivery.effective_date_time": [{ "type": 0, "value": "Datum bepaling" }],
    "r4.zib_pregnancy.estimated_date_of_delivery.method": [{ "type": 0, "value": "Bepalings methode" }],
    "r4.zib_pregnancy.estimated_date_of_delivery.value": [{ "type": 0, "value": "A terme datum" }],
    "r4.zib_pregnancy.gravidity.value": [{ "type": 0, "value": "Graviditeit" }],
    "r4.zib_pregnancy.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_pregnancy.parity.value": [{ "type": 0, "value": "Pariteit" }],
    "r4.zib_pregnancy.pregnancy_duration.value": [{ "type": 0, "value": "Zwangerschapsduur" }],
    "r4.zib_pressure_ulcer": [{ "type": 0, "value": "Decubitus wond" }],
    "r4.zib_pressure_ulcer.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r4.zib_pressure_ulcer.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_pressure_ulcer.onset_date_time": [{ "type": 0, "value": "Ontstaans datum" }],
    "r4.zib_pressure_ulcer.stage.summary": [{ "type": 0, "value": "Decubitus categorie" }],
    "r4.zib_problem": [{ "type": 0, "value": "Probleem" }],
    "r4.zib_problem.abatement_date_time": [{ "type": 0, "value": "Probleem eind datum" }],
    "r4.zib_problem.body_site": [{ "type": 0, "value": "Probleem anatomische locatie" }],
    "r4.zib_problem.clinical_status": [{ "type": 0, "value": "Probleem status" }],
    "r4.zib_problem.code": [{ "type": 0, "value": "Probleem naam" }],
    "r4.zib_problem.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_problem.onset_date_time": [{ "type": 0, "value": "Probleem begin datum" }],
    "r4.zib_problem.problem_type": [{ "type": 0, "value": "Probleem type" }],
    "r4.zib_problem.verification_status": [{ "type": 0, "value": "Verificatie status" }],
    "r4.zib_procedure_event": [{ "type": 0, "value": "Verrichting" }],
    "r4.zib_procedure_event.body_site": [{ "type": 0, "value": "Verrichting anatomische locatie" }],
    "r4.zib_procedure_event.code": [{ "type": 0, "value": "Verrichting type" }],
    "r4.zib_procedure_event.location": [{ "type": 0, "value": "Locatie" }],
    "r4.zib_procedure_event.performed_date_time": [{ "type": 0, "value": "Verrichting start datum" }],
    "r4.zib_procedure_event.performed_period.end": [{ "type": 0, "value": "Verrichting eind datum" }],
    "r4.zib_procedure_event.performed_period.start": [{ "type": 0, "value": "Verrichting start datum" }],
    "r4.zib_procedure_event.performer.actor": [{ "type": 0, "value": "Uitvoerder" }],
    "r4.zib_procedure_event.reason_reference": [{ "type": 0, "value": "Indicatie" }],
    "r4.zib_procedure_event.text_result": [{ "type": 0, "value": "Tekst uitslag" }],
    "r4.zib_procedure_request": [{ "type": 0, "value": "Verrichting" }],
    "r4.zib_procedure_request.body_site": [{ "type": 0, "value": "Verrichting anatomische locatie" }],
    "r4.zib_procedure_request.code": [{ "type": 0, "value": "Verrichting type" }],
    "r4.zib_procedure_request.location_reference": [{ "type": 0, "value": "Locatie" }],
    "r4.zib_procedure_request.occurrence_date_time": [{ "type": 0, "value": "Verrichting start datum" }],
    "r4.zib_procedure_request.occurrence_period.end": [{ "type": 0, "value": "Verrichting eind datum" }],
    "r4.zib_procedure_request.occurrence_period.start": [{ "type": 0, "value": "Verrichting start datum" }],
    "r4.zib_procedure_request.performer": [{ "type": 0, "value": "Uitvoerder" }],
    "r4.zib_procedure_request.procedure_method": [{ "type": 0, "value": "Verrichting methode" }],
    "r4.zib_procedure_request.reason_reference": [{ "type": 0, "value": "Indicatie" }],
    "r4.zib_procedure_request.requester": [{ "type": 0, "value": "Aanvrager" }],
    "r4.zib_pulse_rate": [{ "type": 0, "value": "Polsfrequentie" }],
    "r4.zib_pulse_rate.effective_date_time": [{ "type": 0, "value": "Polsfrequentie datum tijd" }],
    "r4.zib_pulse_rate.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_pulse_rate.pulse_regularity.effective_date_time": [{ "type": 0, "value": "Polsfrequentie datum tijd" }],
    "r4.zib_pulse_rate.pulse_regularity.value": [{ "type": 0, "value": "Pols regelmatigheid" }],
    "r4.zib_pulse_rate.value": [{ "type": 0, "value": "Polsfrequentie waarde" }],
    "r4.zib_refraction": [{ "type": 0, "value": "Refractie" }],
    "r4.zib_refraction.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r4.zib_refraction.cylindrical_refraction_axis.value": [{ "type": 0, "value": "Cilindrische refractie as" }],
    "r4.zib_refraction.cylindrical_refraction_value.value": [{ "type": 0, "value": "Cilindrische refractie waarde" }],
    "r4.zib_refraction.effective_date_time": [{ "type": 0, "value": "Refractie datum tijd" }],
    "r4.zib_refraction.method": [{ "type": 0, "value": "Refractie meet methode" }],
    "r4.zib_refraction.prism_base.value": [{ "type": 0, "value": "Prisma basis" }],
    "r4.zib_refraction.prism_value.value": [{ "type": 0, "value": "Prisma waarde" }],
    "r4.zib_refraction.read_addition.value": [{ "type": 0, "value": "Lees additie" }],
    "r4.zib_refraction.spherical_equivalent.value": [{ "type": 0, "value": "Sferisch equivalent" }],
    "r4.zib_refraction.spherical_refraction_value.value": [{ "type": 0, "value": "Sferische refractie waarde" }],
    "r4.zib_skin_disorder": [{ "type": 0, "value": "Huidaandoening" }],
    "r4.zib_skin_disorder.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r4.zib_skin_disorder.cause.value": [{ "type": 0, "value": "Oorzaak" }],
    "r4.zib_skin_disorder.code": [{ "type": 0, "value": "Soort aandoening" }],
    "r4.zib_skin_disorder.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_skin_disorder.onset_date_time": [{ "type": 0, "value": "Ontstaans datum" }],
    "r4.zib_sna_qrc_score": [{ "type": 0, "value": "SNA qrc score" }],
    "r4.zib_sna_qrc_score.appetite_score.value": [{ "type": 0, "value": "Eetlust score" }],
    "r4.zib_sna_qrc_score.assisted_eating.value": [{ "type": 0, "value": "Hulp bij eten" }],
    "r4.zib_sna_qrc_score.bmi_score.value": [{ "type": 0, "value": "BMI score" }],
    "r4.zib_sna_qrc_score.effective_date_time": [{ "type": 0, "value": "SNA qrc score datum tijd" }],
    "r4.zib_sna_qrc_score.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_sna_qrc_score.value": [{ "type": 0, "value": "Totaal score" }],
    "r4.zib_sna_qrc_score.weight_loss_score.value": [{ "type": 0, "value": "Gewichtsverlies score" }],
    "r4.zib_snaq_65_plus_score": [{ "type": 0, "value": "SNAQ65+score" }],
    "r4.zib_snaq_65_plus_score.appetite_score.value": [{ "type": 0, "value": "Eetlust score" }],
    "r4.zib_snaq_65_plus_score.effective_date_time": [{ "type": 0, "value": "SNAQ65+score datum tijd" }],
    "r4.zib_snaq_65_plus_score.exercise_score.value": [{ "type": 0, "value": "Inspannings score" }],
    "r4.zib_snaq_65_plus_score.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_snaq_65_plus_score.upperarm_circumference.value": [{ "type": 0, "value": "Bovenarm omtrek score" }],
    "r4.zib_snaq_65_plus_score.value": [{ "type": 0, "value": "Totaal score" }],
    "r4.zib_snaq_65_plus_score.weight_loss_score.value": [{ "type": 0, "value": "Gewichtsverlies score" }],
    "r4.zib_snaq_score": [{ "type": 0, "value": "SNAQ score" }],
    "r4.zib_snaq_score.appetite_score.value": [{ "type": 0, "value": "Eetlust score" }],
    "r4.zib_snaq_score.effective_date_time": [{ "type": 0, "value": "SNAQ score datum tijd" }],
    "r4.zib_snaq_score.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_snaq_score.nutrition_score.value": [{ "type": 0, "value": "Voedings score" }],
    "r4.zib_snaq_score.value": [{ "type": 0, "value": "Totaal score" }],
    "r4.zib_snaq_score.weight_loss_score.value": [{ "type": 0, "value": "Gewichtsverlies score" }],
    "r4.zib_soap_report": [{ "type": 0, "value": "SOEP verslag" }],
    "r4.zib_soap_report.author": [{ "type": 0, "value": "Auteur" }],
    "r4.zib_soap_report.date": [{ "type": 0, "value": "SOEP verslag datum tijd" }],
    "r4.zib_soap_report.soap_line": [{ "type": 0, "value": "SOEP regel" }],
    "r4.zib_soap_report.soap_line.code": [{ "type": 0, "value": "SOEP regel naam" }],
    "r4.zib_soap_report.soap_line.value": [{ "type": 0, "value": "SOEP regel tekst" }],
    "r4.zib_stoma": [{ "type": 0, "value": "Stoma" }],
    "r4.zib_stoma.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r4.zib_stoma.code": [{ "type": 0, "value": "Stoma type" }],
    "r4.zib_stoma.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_stoma.onset_date_time": [{ "type": 0, "value": "Aanleg datum" }],
    "r4.zib_strong_kids_score": [{ "type": 0, "value": "Strong kids score" }],
    "r4.zib_strong_kids_score.condition_score.value": [{ "type": 0, "value": "Ziekte beeld score" }],
    "r4.zib_strong_kids_score.effective_date_time": [{ "type": 0, "value": "Score datum tijd" }],
    "r4.zib_strong_kids_score.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_strong_kids_score.nutrition_score.value": [{ "type": 0, "value": "Voedings score" }],
    "r4.zib_strong_kids_score.nutrition_status_score.value": [{ "type": 0, "value": "Voedingstoestand score" }],
    "r4.zib_strong_kids_score.value": [{ "type": 0, "value": "Totaal score" }],
    "r4.zib_strong_kids_score.weight_loss_score.value": [{ "type": 0, "value": "Gewichtsverlies score" }],
    "r4.zib_text_result": [{ "type": 0, "value": "Tekst uitslag" }],
    "r4.zib_text_result.code": [{ "type": 0, "value": "Tekst uitslag type" }],
    "r4.zib_text_result.conclusion": [{ "type": 0, "value": "Tekst resultaat" }],
    "r4.zib_text_result.effective_date_time": [{ "type": 0, "value": "Tekst uitslag datum tijd" }],
    "r4.zib_text_result.status": [{ "type": 0, "value": "Tekst uitslag status" }],
    "r4.zib_text_result.status.text_result_status.value": [{ "type": 0, "value": "Tekst uitslag status" }],
    "r4.zib_text_result.visual_result.content": [{ "type": 0, "value": "Visueel resultaat" }],
    "r4.zib_time_interval": [{ "type": 0, "value": "Tijds interval" }],
    "r4.zib_time_interval.end": [{ "type": 0, "value": "Eind datum tijd" }],
    "r4.zib_time_interval.start": [{ "type": 0, "value": "Start datum tijd" }],
    "r4.zib_tobacco_use": [{ "type": 0, "value": "Tabak gebruik" }],
    "r4.zib_tobacco_use.amount.value": [{ "type": 0, "value": "Hoeveelheid" }],
    "r4.zib_tobacco_use.effective_period.end": [{ "type": 0, "value": "Stop datum" }],
    "r4.zib_tobacco_use.effective_period.start": [{ "type": 0, "value": "Start datum" }],
    "r4.zib_tobacco_use.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_tobacco_use.pack_years.value": [{ "type": 0, "value": "Pack years" }],
    "r4.zib_tobacco_use.type_of_tobacco_used.value": [{ "type": 0, "value": "Soort tabak gebruik" }],
    "r4.zib_tobacco_use.value": [{ "type": 0, "value": "Tabak gebruik status" }],
    "r4.zib_treatment_directive_2": [{ "type": 0, "value": "Behandel aanwijzing" }],
    "r4.zib_treatment_directive_2.comment.value": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_treatment_directive_2.date_time": [{ "type": 0, "value": "Meest recente bespreekdatum" }],
    "r4.zib_treatment_directive_2.provision.agreement_party": [{ "type": 0, "value": "Afspraak partij" }],
    "r4.zib_treatment_directive_2.provision.agreement_party.reference": [{ "type": 0, "value": "Patient" }],
    "r4.zib_treatment_directive_2.provision.code": [{ "type": 0, "value": "Behandeling" }],
    "r4.zib_treatment_directive_2.provision.period.end": [{ "type": 0, "value": "Datum beeindigd" }],
    "r4.zib_treatment_directive_2.provision.type": [{ "type": 0, "value": "Behandel besluit" }],
    "r4.zib_treatment_directive_2.source_reference": [{ "type": 0, "value": "Wilsverklaring" }],
    "r4.zib_vaccination_event": [{ "type": 0, "value": "Vaccinatie" }],
    "r4.zib_vaccination_event.administrator.actor": [{ "type": 0, "value": "Toediener" }],
    "r4.zib_vaccination_event.dose_quantity": [{ "type": 0, "value": "Dosis" }],
    "r4.zib_vaccination_event.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_vaccination_event.occurrence_date_time": [{ "type": 0, "value": "Vaccinatie datum" }],
    "r4.zib_vaccination_event.vaccine_code": [{ "type": 0, "value": "Product code" }],
    "r4.zib_vaccination_request": [{ "type": 0, "value": "Vaccinatie" }],
    "r4.zib_vaccination_request.recommendation.date_criterion.value": [{ "type": 0, "value": "Vaccinatie datum" }],
    "r4.zib_vaccination_request.recommendation.description": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_vaccination_request.recommendation.vaccine_code": [{ "type": 0, "value": "Product code" }],
    "r4.zib_visual_function": [{ "type": 0, "value": "Functie zien" }],
    "r4.zib_visual_function.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_visual_function.value": [{ "type": 0, "value": "Visuele functie" }],
    "r4.zib_visual_function.visual_aid.visual_function": [{ "type": 0, "value": "Functie zien" }],
    "r4.zib_wound": [{ "type": 0, "value": "Wond" }],
    "r4.zib_wound.body_site": [{ "type": 0, "value": "Anatomische locatie" }],
    "r4.zib_wound.code": [{ "type": 0, "value": "Wond soort" }],
    "r4.zib_wound.drain.drain": [{ "type": 0, "value": "Wond" }],
    "r4.zib_wound.note.text": [{ "type": 0, "value": "Toelichting" }],
    "r4.zib_wound.onset_date_time": [{ "type": 0, "value": "Wond ontstaansdatum" }],
    "r4.zib_wound.wound_edge.value": [{ "type": 0, "value": "Wond rand" }],
    "r4.zib_wound.wound_infection.value": [{ "type": 0, "value": "Wond infectie" }],
    "r4.zib_wound.wound_moisture.value": [{ "type": 0, "value": "Wond vochtigheid" }],
    "r4.zib_wound.wound_tissue.value": [{ "type": 0, "value": "Wond weefsel" }],
    "r4.zib_wounds.date_of_last_dressing_change.value": [{ "type": 0, "value": "Datum laatste verbandwissel" }],
    "r4.zib_wounds.wound_depth.value": [{ "type": 0, "value": "Wonddiepte" }],
    "r4.zib_wounds.wound_image.content.attachment": [{ "type": 0, "value": "Wond foto" }],
    "r4.zib_wounds.wound_length.value": [{ "type": 0, "value": "Wondlengte" }],
    "r4.zib_wounds.wound_width.value": [{ "type": 0, "value": "Wondbreedte" }]
  };
  const fhirMessagesNL = {
    ...r3ResourceLabelsDefault,
    ...r4ResourceLabelsDefault,
    ...r3ResourceLabels,
    ...r4ResourceLabels,
    ...summaryLabels,
    ...detailLabels,
    ...codeLabels,
    ...systemLabels,
    ...fhirMessages
  };
  function getFhirIntlConfig(options) {
    return getIntlConfig({ messages: fhirMessagesNL, ...options });
  }
  function createHelpers(intl2) {
    const formatMessage2 = (id, ...args) => intl2.formatMessage({ id }, ...args);
    const hasMessage = (id) => !!intl2.messages[id];
    return {
      formatMessage: formatMessage2,
      hasMessage
    };
  }
  var Locale = /* @__PURE__ */ ((Locale2) => {
    Locale2["NL_NL"] = "nl-NL";
    return Locale2;
  })(Locale || {});
  var ErrorKind;
  (function(ErrorKind2) {
    ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_CLOSING_BRACE"] = 1] = "EXPECT_ARGUMENT_CLOSING_BRACE";
    ErrorKind2[ErrorKind2["EMPTY_ARGUMENT"] = 2] = "EMPTY_ARGUMENT";
    ErrorKind2[ErrorKind2["MALFORMED_ARGUMENT"] = 3] = "MALFORMED_ARGUMENT";
    ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_TYPE"] = 4] = "EXPECT_ARGUMENT_TYPE";
    ErrorKind2[ErrorKind2["INVALID_ARGUMENT_TYPE"] = 5] = "INVALID_ARGUMENT_TYPE";
    ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_STYLE"] = 6] = "EXPECT_ARGUMENT_STYLE";
    ErrorKind2[ErrorKind2["INVALID_NUMBER_SKELETON"] = 7] = "INVALID_NUMBER_SKELETON";
    ErrorKind2[ErrorKind2["INVALID_DATE_TIME_SKELETON"] = 8] = "INVALID_DATE_TIME_SKELETON";
    ErrorKind2[ErrorKind2["EXPECT_NUMBER_SKELETON"] = 9] = "EXPECT_NUMBER_SKELETON";
    ErrorKind2[ErrorKind2["EXPECT_DATE_TIME_SKELETON"] = 10] = "EXPECT_DATE_TIME_SKELETON";
    ErrorKind2[ErrorKind2["UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"] = 11] = "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE";
    ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_OPTIONS"] = 12] = "EXPECT_SELECT_ARGUMENT_OPTIONS";
    ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"] = 13] = "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE";
    ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"] = 14] = "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE";
    ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR"] = 15] = "EXPECT_SELECT_ARGUMENT_SELECTOR";
    ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR"] = 16] = "EXPECT_PLURAL_ARGUMENT_SELECTOR";
    ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"] = 17] = "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT";
    ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"] = 18] = "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT";
    ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_SELECTOR"] = 19] = "INVALID_PLURAL_ARGUMENT_SELECTOR";
    ErrorKind2[ErrorKind2["DUPLICATE_PLURAL_ARGUMENT_SELECTOR"] = 20] = "DUPLICATE_PLURAL_ARGUMENT_SELECTOR";
    ErrorKind2[ErrorKind2["DUPLICATE_SELECT_ARGUMENT_SELECTOR"] = 21] = "DUPLICATE_SELECT_ARGUMENT_SELECTOR";
    ErrorKind2[ErrorKind2["MISSING_OTHER_CLAUSE"] = 22] = "MISSING_OTHER_CLAUSE";
    ErrorKind2[ErrorKind2["INVALID_TAG"] = 23] = "INVALID_TAG";
    ErrorKind2[ErrorKind2["INVALID_TAG_NAME"] = 25] = "INVALID_TAG_NAME";
    ErrorKind2[ErrorKind2["UNMATCHED_CLOSING_TAG"] = 26] = "UNMATCHED_CLOSING_TAG";
    ErrorKind2[ErrorKind2["UNCLOSED_TAG"] = 27] = "UNCLOSED_TAG";
  })(ErrorKind || (ErrorKind = {}));
  var TYPE;
  (function(TYPE2) {
    TYPE2[TYPE2["literal"] = 0] = "literal";
    TYPE2[TYPE2["argument"] = 1] = "argument";
    TYPE2[TYPE2["number"] = 2] = "number";
    TYPE2[TYPE2["date"] = 3] = "date";
    TYPE2[TYPE2["time"] = 4] = "time";
    TYPE2[TYPE2["select"] = 5] = "select";
    TYPE2[TYPE2["plural"] = 6] = "plural";
    TYPE2[TYPE2["pound"] = 7] = "pound";
    TYPE2[TYPE2["tag"] = 8] = "tag";
  })(TYPE || (TYPE = {}));
  var SKELETON_TYPE;
  (function(SKELETON_TYPE2) {
    SKELETON_TYPE2[SKELETON_TYPE2["number"] = 0] = "number";
    SKELETON_TYPE2[SKELETON_TYPE2["dateTime"] = 1] = "dateTime";
  })(SKELETON_TYPE || (SKELETON_TYPE = {}));
  function isLiteralElement(el) {
    return el.type === TYPE.literal;
  }
  function isArgumentElement(el) {
    return el.type === TYPE.argument;
  }
  function isNumberElement(el) {
    return el.type === TYPE.number;
  }
  function isDateElement(el) {
    return el.type === TYPE.date;
  }
  function isTimeElement(el) {
    return el.type === TYPE.time;
  }
  function isSelectElement(el) {
    return el.type === TYPE.select;
  }
  function isPluralElement(el) {
    return el.type === TYPE.plural;
  }
  function isPoundElement(el) {
    return el.type === TYPE.pound;
  }
  function isTagElement(el) {
    return el.type === TYPE.tag;
  }
  function isNumberSkeleton(el) {
    return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.number);
  }
  function isDateTimeSkeleton(el) {
    return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.dateTime);
  }
  var SPACE_SEPARATOR_REGEX = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/;
  var DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
  function parseDateTimeSkeleton(skeleton2) {
    var result = {};
    skeleton2.replace(DATE_TIME_REGEX, function(match2) {
      var len = match2.length;
      switch (match2[0]) {
        // Era
        case "G":
          result.era = len === 4 ? "long" : len === 5 ? "narrow" : "short";
          break;
        // Year
        case "y":
          result.year = len === 2 ? "2-digit" : "numeric";
          break;
        case "Y":
        case "u":
        case "U":
        case "r":
          throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");
        // Quarter
        case "q":
        case "Q":
          throw new RangeError("`q/Q` (quarter) patterns are not supported");
        // Month
        case "M":
        case "L":
          result.month = ["numeric", "2-digit", "short", "long", "narrow"][len - 1];
          break;
        // Week
        case "w":
        case "W":
          throw new RangeError("`w/W` (week) patterns are not supported");
        case "d":
          result.day = ["numeric", "2-digit"][len - 1];
          break;
        case "D":
        case "F":
        case "g":
          throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");
        // Weekday
        case "E":
          result.weekday = len === 4 ? "long" : len === 5 ? "narrow" : "short";
          break;
        case "e":
          if (len < 4) {
            throw new RangeError("`e..eee` (weekday) patterns are not supported");
          }
          result.weekday = ["short", "long", "narrow", "short"][len - 4];
          break;
        case "c":
          if (len < 4) {
            throw new RangeError("`c..ccc` (weekday) patterns are not supported");
          }
          result.weekday = ["short", "long", "narrow", "short"][len - 4];
          break;
        // Period
        case "a":
          result.hour12 = true;
          break;
        case "b":
        // am, pm, noon, midnight
        case "B":
          throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");
        // Hour
        case "h":
          result.hourCycle = "h12";
          result.hour = ["numeric", "2-digit"][len - 1];
          break;
        case "H":
          result.hourCycle = "h23";
          result.hour = ["numeric", "2-digit"][len - 1];
          break;
        case "K":
          result.hourCycle = "h11";
          result.hour = ["numeric", "2-digit"][len - 1];
          break;
        case "k":
          result.hourCycle = "h24";
          result.hour = ["numeric", "2-digit"][len - 1];
          break;
        case "j":
        case "J":
        case "C":
          throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");
        // Minute
        case "m":
          result.minute = ["numeric", "2-digit"][len - 1];
          break;
        // Second
        case "s":
          result.second = ["numeric", "2-digit"][len - 1];
          break;
        case "S":
        case "A":
          throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");
        // Zone
        case "z":
          result.timeZoneName = len < 4 ? "short" : "long";
          break;
        case "Z":
        // 1..3, 4, 5: The ISO8601 varios formats
        case "O":
        // 1, 4: milliseconds in day short, long
        case "v":
        // 1, 4: generic non-location format
        case "V":
        // 1, 2, 3, 4: time zone ID or city
        case "X":
        // 1, 2, 3, 4: The ISO8601 varios formats
        case "x":
          throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead");
      }
      return "";
    });
    return result;
  }
  var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i;
  function parseNumberSkeletonFromString(skeleton2) {
    if (skeleton2.length === 0) {
      throw new Error("Number skeleton cannot be empty");
    }
    var stringTokens = skeleton2.split(WHITE_SPACE_REGEX).filter(function(x) {
      return x.length > 0;
    });
    var tokens = [];
    for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {
      var stringToken = stringTokens_1[_i];
      var stemAndOptions = stringToken.split("/");
      if (stemAndOptions.length === 0) {
        throw new Error("Invalid number skeleton");
      }
      var stem = stemAndOptions[0], options = stemAndOptions.slice(1);
      for (var _a2 = 0, options_1 = options; _a2 < options_1.length; _a2++) {
        var option = options_1[_a2];
        if (option.length === 0) {
          throw new Error("Invalid number skeleton");
        }
      }
      tokens.push({ stem, options });
    }
    return tokens;
  }
  function icuUnitToEcma(unit) {
    return unit.replace(/^(.*?)-/, "");
  }
  var FRACTION_PRECISION_REGEX = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g;
  var SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\+|#+)?[rs]?$/g;
  var INTEGER_WIDTH_REGEX = /(\*)(0+)|(#+)(0+)|(0+)/g;
  var CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;
  function parseSignificantPrecision(str) {
    var result = {};
    if (str[str.length - 1] === "r") {
      result.roundingPriority = "morePrecision";
    } else if (str[str.length - 1] === "s") {
      result.roundingPriority = "lessPrecision";
    }
    str.replace(SIGNIFICANT_PRECISION_REGEX, function(_, g1, g2) {
      if (typeof g2 !== "string") {
        result.minimumSignificantDigits = g1.length;
        result.maximumSignificantDigits = g1.length;
      } else if (g2 === "+") {
        result.minimumSignificantDigits = g1.length;
      } else if (g1[0] === "#") {
        result.maximumSignificantDigits = g1.length;
      } else {
        result.minimumSignificantDigits = g1.length;
        result.maximumSignificantDigits = g1.length + (typeof g2 === "string" ? g2.length : 0);
      }
      return "";
    });
    return result;
  }
  function parseSign(str) {
    switch (str) {
      case "sign-auto":
        return {
          signDisplay: "auto"
        };
      case "sign-accounting":
      case "()":
        return {
          currencySign: "accounting"
        };
      case "sign-always":
      case "+!":
        return {
          signDisplay: "always"
        };
      case "sign-accounting-always":
      case "()!":
        return {
          signDisplay: "always",
          currencySign: "accounting"
        };
      case "sign-except-zero":
      case "+?":
        return {
          signDisplay: "exceptZero"
        };
      case "sign-accounting-except-zero":
      case "()?":
        return {
          signDisplay: "exceptZero",
          currencySign: "accounting"
        };
      case "sign-never":
      case "+_":
        return {
          signDisplay: "never"
        };
    }
  }
  function parseConciseScientificAndEngineeringStem(stem) {
    var result;
    if (stem[0] === "E" && stem[1] === "E") {
      result = {
        notation: "engineering"
      };
      stem = stem.slice(2);
    } else if (stem[0] === "E") {
      result = {
        notation: "scientific"
      };
      stem = stem.slice(1);
    }
    if (result) {
      var signDisplay = stem.slice(0, 2);
      if (signDisplay === "+!") {
        result.signDisplay = "always";
        stem = stem.slice(2);
      } else if (signDisplay === "+?") {
        result.signDisplay = "exceptZero";
        stem = stem.slice(2);
      }
      if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {
        throw new Error("Malformed concise eng/scientific notation");
      }
      result.minimumIntegerDigits = stem.length;
    }
    return result;
  }
  function parseNotationOptions(opt) {
    var result = {};
    var signOpts = parseSign(opt);
    if (signOpts) {
      return signOpts;
    }
    return result;
  }
  function parseNumberSkeleton(tokens) {
    var result = {};
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
      var token = tokens_1[_i];
      switch (token.stem) {
        case "percent":
        case "%":
          result.style = "percent";
          continue;
        case "%x100":
          result.style = "percent";
          result.scale = 100;
          continue;
        case "currency":
          result.style = "currency";
          result.currency = token.options[0];
          continue;
        case "group-off":
        case ",_":
          result.useGrouping = false;
          continue;
        case "precision-integer":
        case ".":
          result.maximumFractionDigits = 0;
          continue;
        case "measure-unit":
        case "unit":
          result.style = "unit";
          result.unit = icuUnitToEcma(token.options[0]);
          continue;
        case "compact-short":
        case "K":
          result.notation = "compact";
          result.compactDisplay = "short";
          continue;
        case "compact-long":
        case "KK":
          result.notation = "compact";
          result.compactDisplay = "long";
          continue;
        case "scientific":
          result = __assign(__assign(__assign({}, result), { notation: "scientific" }), token.options.reduce(function(all, opt2) {
            return __assign(__assign({}, all), parseNotationOptions(opt2));
          }, {}));
          continue;
        case "engineering":
          result = __assign(__assign(__assign({}, result), { notation: "engineering" }), token.options.reduce(function(all, opt2) {
            return __assign(__assign({}, all), parseNotationOptions(opt2));
          }, {}));
          continue;
        case "notation-simple":
          result.notation = "standard";
          continue;
        // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h
        case "unit-width-narrow":
          result.currencyDisplay = "narrowSymbol";
          result.unitDisplay = "narrow";
          continue;
        case "unit-width-short":
          result.currencyDisplay = "code";
          result.unitDisplay = "short";
          continue;
        case "unit-width-full-name":
          result.currencyDisplay = "name";
          result.unitDisplay = "long";
          continue;
        case "unit-width-iso-code":
          result.currencyDisplay = "symbol";
          continue;
        case "scale":
          result.scale = parseFloat(token.options[0]);
          continue;
        case "rounding-mode-floor":
          result.roundingMode = "floor";
          continue;
        case "rounding-mode-ceiling":
          result.roundingMode = "ceil";
          continue;
        case "rounding-mode-down":
          result.roundingMode = "trunc";
          continue;
        case "rounding-mode-up":
          result.roundingMode = "expand";
          continue;
        case "rounding-mode-half-even":
          result.roundingMode = "halfEven";
          continue;
        case "rounding-mode-half-down":
          result.roundingMode = "halfTrunc";
          continue;
        case "rounding-mode-half-up":
          result.roundingMode = "halfExpand";
          continue;
        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width
        case "integer-width":
          if (token.options.length > 1) {
            throw new RangeError("integer-width stems only accept a single optional option");
          }
          token.options[0].replace(INTEGER_WIDTH_REGEX, function(_, g1, g2, g3, g4, g5) {
            if (g1) {
              result.minimumIntegerDigits = g2.length;
            } else if (g3 && g4) {
              throw new Error("We currently do not support maximum integer digits");
            } else if (g5) {
              throw new Error("We currently do not support exact integer digits");
            }
            return "";
          });
          continue;
      }
      if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {
        result.minimumIntegerDigits = token.stem.length;
        continue;
      }
      if (FRACTION_PRECISION_REGEX.test(token.stem)) {
        if (token.options.length > 1) {
          throw new RangeError("Fraction-precision stems only accept a single optional option");
        }
        token.stem.replace(FRACTION_PRECISION_REGEX, function(_, g1, g2, g3, g4, g5) {
          if (g2 === "*") {
            result.minimumFractionDigits = g1.length;
          } else if (g3 && g3[0] === "#") {
            result.maximumFractionDigits = g3.length;
          } else if (g4 && g5) {
            result.minimumFractionDigits = g4.length;
            result.maximumFractionDigits = g4.length + g5.length;
          } else {
            result.minimumFractionDigits = g1.length;
            result.maximumFractionDigits = g1.length;
          }
          return "";
        });
        var opt = token.options[0];
        if (opt === "w") {
          result = __assign(__assign({}, result), { trailingZeroDisplay: "stripIfInteger" });
        } else if (opt) {
          result = __assign(__assign({}, result), parseSignificantPrecision(opt));
        }
        continue;
      }
      if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {
        result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));
        continue;
      }
      var signOpts = parseSign(token.stem);
      if (signOpts) {
        result = __assign(__assign({}, result), signOpts);
      }
      var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);
      if (conciseScientificAndEngineeringOpts) {
        result = __assign(__assign({}, result), conciseScientificAndEngineeringOpts);
      }
    }
    return result;
  }
  var timeData = {
    "001": [
      "H",
      "h"
    ],
    "419": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "AC": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "AD": [
      "H",
      "hB"
    ],
    "AE": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "AF": [
      "H",
      "hb",
      "hB",
      "h"
    ],
    "AG": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "AI": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "AL": [
      "h",
      "H",
      "hB"
    ],
    "AM": [
      "H",
      "hB"
    ],
    "AO": [
      "H",
      "hB"
    ],
    "AR": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "AS": [
      "h",
      "H"
    ],
    "AT": [
      "H",
      "hB"
    ],
    "AU": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "AW": [
      "H",
      "hB"
    ],
    "AX": [
      "H"
    ],
    "AZ": [
      "H",
      "hB",
      "h"
    ],
    "BA": [
      "H",
      "hB",
      "h"
    ],
    "BB": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "BD": [
      "h",
      "hB",
      "H"
    ],
    "BE": [
      "H",
      "hB"
    ],
    "BF": [
      "H",
      "hB"
    ],
    "BG": [
      "H",
      "hB",
      "h"
    ],
    "BH": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "BI": [
      "H",
      "h"
    ],
    "BJ": [
      "H",
      "hB"
    ],
    "BL": [
      "H",
      "hB"
    ],
    "BM": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "BN": [
      "hb",
      "hB",
      "h",
      "H"
    ],
    "BO": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "BQ": [
      "H"
    ],
    "BR": [
      "H",
      "hB"
    ],
    "BS": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "BT": [
      "h",
      "H"
    ],
    "BW": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "BY": [
      "H",
      "h"
    ],
    "BZ": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "CA": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "CC": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "CD": [
      "hB",
      "H"
    ],
    "CF": [
      "H",
      "h",
      "hB"
    ],
    "CG": [
      "H",
      "hB"
    ],
    "CH": [
      "H",
      "hB",
      "h"
    ],
    "CI": [
      "H",
      "hB"
    ],
    "CK": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "CL": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "CM": [
      "H",
      "h",
      "hB"
    ],
    "CN": [
      "H",
      "hB",
      "hb",
      "h"
    ],
    "CO": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "CP": [
      "H"
    ],
    "CR": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "CU": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "CV": [
      "H",
      "hB"
    ],
    "CW": [
      "H",
      "hB"
    ],
    "CX": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "CY": [
      "h",
      "H",
      "hb",
      "hB"
    ],
    "CZ": [
      "H"
    ],
    "DE": [
      "H",
      "hB"
    ],
    "DG": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "DJ": [
      "h",
      "H"
    ],
    "DK": [
      "H"
    ],
    "DM": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "DO": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "DZ": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "EA": [
      "H",
      "h",
      "hB",
      "hb"
    ],
    "EC": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "EE": [
      "H",
      "hB"
    ],
    "EG": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "EH": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "ER": [
      "h",
      "H"
    ],
    "ES": [
      "H",
      "hB",
      "h",
      "hb"
    ],
    "ET": [
      "hB",
      "hb",
      "h",
      "H"
    ],
    "FI": [
      "H"
    ],
    "FJ": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "FK": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "FM": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "FO": [
      "H",
      "h"
    ],
    "FR": [
      "H",
      "hB"
    ],
    "GA": [
      "H",
      "hB"
    ],
    "GB": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "GD": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "GE": [
      "H",
      "hB",
      "h"
    ],
    "GF": [
      "H",
      "hB"
    ],
    "GG": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "GH": [
      "h",
      "H"
    ],
    "GI": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "GL": [
      "H",
      "h"
    ],
    "GM": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "GN": [
      "H",
      "hB"
    ],
    "GP": [
      "H",
      "hB"
    ],
    "GQ": [
      "H",
      "hB",
      "h",
      "hb"
    ],
    "GR": [
      "h",
      "H",
      "hb",
      "hB"
    ],
    "GT": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "GU": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "GW": [
      "H",
      "hB"
    ],
    "GY": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "HK": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "HN": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "HR": [
      "H",
      "hB"
    ],
    "HU": [
      "H",
      "h"
    ],
    "IC": [
      "H",
      "h",
      "hB",
      "hb"
    ],
    "ID": [
      "H"
    ],
    "IE": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "IL": [
      "H",
      "hB"
    ],
    "IM": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "IN": [
      "h",
      "H"
    ],
    "IO": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "IQ": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "IR": [
      "hB",
      "H"
    ],
    "IS": [
      "H"
    ],
    "IT": [
      "H",
      "hB"
    ],
    "JE": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "JM": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "JO": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "JP": [
      "H",
      "K",
      "h"
    ],
    "KE": [
      "hB",
      "hb",
      "H",
      "h"
    ],
    "KG": [
      "H",
      "h",
      "hB",
      "hb"
    ],
    "KH": [
      "hB",
      "h",
      "H",
      "hb"
    ],
    "KI": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "KM": [
      "H",
      "h",
      "hB",
      "hb"
    ],
    "KN": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "KP": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "KR": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "KW": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "KY": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "KZ": [
      "H",
      "hB"
    ],
    "LA": [
      "H",
      "hb",
      "hB",
      "h"
    ],
    "LB": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "LC": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "LI": [
      "H",
      "hB",
      "h"
    ],
    "LK": [
      "H",
      "h",
      "hB",
      "hb"
    ],
    "LR": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "LS": [
      "h",
      "H"
    ],
    "LT": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "LU": [
      "H",
      "h",
      "hB"
    ],
    "LV": [
      "H",
      "hB",
      "hb",
      "h"
    ],
    "LY": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "MA": [
      "H",
      "h",
      "hB",
      "hb"
    ],
    "MC": [
      "H",
      "hB"
    ],
    "MD": [
      "H",
      "hB"
    ],
    "ME": [
      "H",
      "hB",
      "h"
    ],
    "MF": [
      "H",
      "hB"
    ],
    "MG": [
      "H",
      "h"
    ],
    "MH": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "MK": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "ML": [
      "H"
    ],
    "MM": [
      "hB",
      "hb",
      "H",
      "h"
    ],
    "MN": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "MO": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "MP": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "MQ": [
      "H",
      "hB"
    ],
    "MR": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "MS": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "MT": [
      "H",
      "h"
    ],
    "MU": [
      "H",
      "h"
    ],
    "MV": [
      "H",
      "h"
    ],
    "MW": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "MX": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "MY": [
      "hb",
      "hB",
      "h",
      "H"
    ],
    "MZ": [
      "H",
      "hB"
    ],
    "NA": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "NC": [
      "H",
      "hB"
    ],
    "NE": [
      "H"
    ],
    "NF": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "NG": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "NI": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "NL": [
      "H",
      "hB"
    ],
    "NO": [
      "H",
      "h"
    ],
    "NP": [
      "H",
      "h",
      "hB"
    ],
    "NR": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "NU": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "NZ": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "OM": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "PA": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "PE": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "PF": [
      "H",
      "h",
      "hB"
    ],
    "PG": [
      "h",
      "H"
    ],
    "PH": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "PK": [
      "h",
      "hB",
      "H"
    ],
    "PL": [
      "H",
      "h"
    ],
    "PM": [
      "H",
      "hB"
    ],
    "PN": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "PR": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "PS": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "PT": [
      "H",
      "hB"
    ],
    "PW": [
      "h",
      "H"
    ],
    "PY": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "QA": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "RE": [
      "H",
      "hB"
    ],
    "RO": [
      "H",
      "hB"
    ],
    "RS": [
      "H",
      "hB",
      "h"
    ],
    "RU": [
      "H"
    ],
    "RW": [
      "H",
      "h"
    ],
    "SA": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "SB": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "SC": [
      "H",
      "h",
      "hB"
    ],
    "SD": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "SE": [
      "H"
    ],
    "SG": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "SH": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "SI": [
      "H",
      "hB"
    ],
    "SJ": [
      "H"
    ],
    "SK": [
      "H"
    ],
    "SL": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "SM": [
      "H",
      "h",
      "hB"
    ],
    "SN": [
      "H",
      "h",
      "hB"
    ],
    "SO": [
      "h",
      "H"
    ],
    "SR": [
      "H",
      "hB"
    ],
    "SS": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "ST": [
      "H",
      "hB"
    ],
    "SV": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "SX": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "SY": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "SZ": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "TA": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "TC": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "TD": [
      "h",
      "H",
      "hB"
    ],
    "TF": [
      "H",
      "h",
      "hB"
    ],
    "TG": [
      "H",
      "hB"
    ],
    "TH": [
      "H",
      "h"
    ],
    "TJ": [
      "H",
      "h"
    ],
    "TL": [
      "H",
      "hB",
      "hb",
      "h"
    ],
    "TM": [
      "H",
      "h"
    ],
    "TN": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "TO": [
      "h",
      "H"
    ],
    "TR": [
      "H",
      "hB"
    ],
    "TT": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "TW": [
      "hB",
      "hb",
      "h",
      "H"
    ],
    "TZ": [
      "hB",
      "hb",
      "H",
      "h"
    ],
    "UA": [
      "H",
      "hB",
      "h"
    ],
    "UG": [
      "hB",
      "hb",
      "H",
      "h"
    ],
    "UM": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "US": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "UY": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "UZ": [
      "H",
      "hB",
      "h"
    ],
    "VA": [
      "H",
      "h",
      "hB"
    ],
    "VC": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "VE": [
      "h",
      "H",
      "hB",
      "hb"
    ],
    "VG": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "VI": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "VN": [
      "H",
      "h"
    ],
    "VU": [
      "h",
      "H"
    ],
    "WF": [
      "H",
      "hB"
    ],
    "WS": [
      "h",
      "H"
    ],
    "XK": [
      "H",
      "hB",
      "h"
    ],
    "YE": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "YT": [
      "H",
      "hB"
    ],
    "ZA": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "ZM": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "ZW": [
      "H",
      "h"
    ],
    "af-ZA": [
      "H",
      "h",
      "hB",
      "hb"
    ],
    "ar-001": [
      "h",
      "hB",
      "hb",
      "H"
    ],
    "ca-ES": [
      "H",
      "h",
      "hB"
    ],
    "en-001": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "en-HK": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "en-IL": [
      "H",
      "h",
      "hb",
      "hB"
    ],
    "en-MY": [
      "h",
      "hb",
      "H",
      "hB"
    ],
    "es-BR": [
      "H",
      "h",
      "hB",
      "hb"
    ],
    "es-ES": [
      "H",
      "h",
      "hB",
      "hb"
    ],
    "es-GQ": [
      "H",
      "h",
      "hB",
      "hb"
    ],
    "fr-CA": [
      "H",
      "h",
      "hB"
    ],
    "gl-ES": [
      "H",
      "h",
      "hB"
    ],
    "gu-IN": [
      "hB",
      "hb",
      "h",
      "H"
    ],
    "hi-IN": [
      "hB",
      "h",
      "H"
    ],
    "it-CH": [
      "H",
      "h",
      "hB"
    ],
    "it-IT": [
      "H",
      "h",
      "hB"
    ],
    "kn-IN": [
      "hB",
      "h",
      "H"
    ],
    "ml-IN": [
      "hB",
      "h",
      "H"
    ],
    "mr-IN": [
      "hB",
      "hb",
      "h",
      "H"
    ],
    "pa-IN": [
      "hB",
      "hb",
      "h",
      "H"
    ],
    "ta-IN": [
      "hB",
      "h",
      "hb",
      "H"
    ],
    "te-IN": [
      "hB",
      "h",
      "H"
    ],
    "zu-ZA": [
      "H",
      "hB",
      "hb",
      "h"
    ]
  };
  function getBestPattern(skeleton2, locale) {
    var skeletonCopy = "";
    for (var patternPos = 0; patternPos < skeleton2.length; patternPos++) {
      var patternChar = skeleton2.charAt(patternPos);
      if (patternChar === "j") {
        var extraLength = 0;
        while (patternPos + 1 < skeleton2.length && skeleton2.charAt(patternPos + 1) === patternChar) {
          extraLength++;
          patternPos++;
        }
        var hourLen = 1 + (extraLength & 1);
        var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);
        var dayPeriodChar = "a";
        var hourChar = getDefaultHourSymbolFromLocale(locale);
        if (hourChar == "H" || hourChar == "k") {
          dayPeriodLen = 0;
        }
        while (dayPeriodLen-- > 0) {
          skeletonCopy += dayPeriodChar;
        }
        while (hourLen-- > 0) {
          skeletonCopy = hourChar + skeletonCopy;
        }
      } else if (patternChar === "J") {
        skeletonCopy += "H";
      } else {
        skeletonCopy += patternChar;
      }
    }
    return skeletonCopy;
  }
  function getDefaultHourSymbolFromLocale(locale) {
    var hourCycle = locale.hourCycle;
    if (hourCycle === void 0 && // @ts-ignore hourCycle(s) is not identified yet
    locale.hourCycles && // @ts-ignore
    locale.hourCycles.length) {
      hourCycle = locale.hourCycles[0];
    }
    if (hourCycle) {
      switch (hourCycle) {
        case "h24":
          return "k";
        case "h23":
          return "H";
        case "h12":
          return "h";
        case "h11":
          return "K";
        default:
          throw new Error("Invalid hourCycle");
      }
    }
    var languageTag = locale.language;
    var regionTag;
    if (languageTag !== "root") {
      regionTag = locale.maximize().region;
    }
    var hourCycles = timeData[regionTag || ""] || timeData[languageTag || ""] || timeData["".concat(languageTag, "-001")] || timeData["001"];
    return hourCycles[0];
  }
  var _a;
  var SPACE_SEPARATOR_START_REGEX = new RegExp("^".concat(SPACE_SEPARATOR_REGEX.source, "*"));
  var SPACE_SEPARATOR_END_REGEX = new RegExp("".concat(SPACE_SEPARATOR_REGEX.source, "*$"));
  function createLocation(start, end) {
    return { start, end };
  }
  var hasNativeStartsWith = !!String.prototype.startsWith && "_a".startsWith("a", 1);
  var hasNativeFromCodePoint = !!String.fromCodePoint;
  var hasNativeFromEntries = !!Object.fromEntries;
  var hasNativeCodePointAt = !!String.prototype.codePointAt;
  var hasTrimStart = !!String.prototype.trimStart;
  var hasTrimEnd = !!String.prototype.trimEnd;
  var hasNativeIsSafeInteger = !!Number.isSafeInteger;
  var isSafeInteger = hasNativeIsSafeInteger ? Number.isSafeInteger : function(n) {
    return typeof n === "number" && isFinite(n) && Math.floor(n) === n && Math.abs(n) <= 9007199254740991;
  };
  var REGEX_SUPPORTS_U_AND_Y = true;
  try {
    var re = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
    REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec("a")) === null || _a === void 0 ? void 0 : _a[0]) === "a";
  } catch (_) {
    REGEX_SUPPORTS_U_AND_Y = false;
  }
  var startsWith = hasNativeStartsWith ? (
    // Native
    function startsWith2(s, search, position) {
      return s.startsWith(search, position);
    }
  ) : (
    // For IE11
    function startsWith2(s, search, position) {
      return s.slice(position, position + search.length) === search;
    }
  );
  var fromCodePoint = hasNativeFromCodePoint ? String.fromCodePoint : (
    // IE11
    function fromCodePoint2() {
      var codePoints = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        codePoints[_i] = arguments[_i];
      }
      var elements = "";
      var length = codePoints.length;
      var i = 0;
      var code2;
      while (length > i) {
        code2 = codePoints[i++];
        if (code2 > 1114111)
          throw RangeError(code2 + " is not a valid code point");
        elements += code2 < 65536 ? String.fromCharCode(code2) : String.fromCharCode(((code2 -= 65536) >> 10) + 55296, code2 % 1024 + 56320);
      }
      return elements;
    }
  );
  var fromEntries = (
    // native
    hasNativeFromEntries ? Object.fromEntries : (
      // Ponyfill
      function fromEntries2(entries) {
        var obj = {};
        for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
          var _a2 = entries_1[_i], k = _a2[0], v = _a2[1];
          obj[k] = v;
        }
        return obj;
      }
    )
  );
  var codePointAt = hasNativeCodePointAt ? (
    // Native
    function codePointAt2(s, index) {
      return s.codePointAt(index);
    }
  ) : (
    // IE 11
    function codePointAt2(s, index) {
      var size = s.length;
      if (index < 0 || index >= size) {
        return void 0;
      }
      var first = s.charCodeAt(index);
      var second;
      return first < 55296 || first > 56319 || index + 1 === size || (second = s.charCodeAt(index + 1)) < 56320 || second > 57343 ? first : (first - 55296 << 10) + (second - 56320) + 65536;
    }
  );
  var trimStart = hasTrimStart ? (
    // Native
    function trimStart2(s) {
      return s.trimStart();
    }
  ) : (
    // Ponyfill
    function trimStart2(s) {
      return s.replace(SPACE_SEPARATOR_START_REGEX, "");
    }
  );
  var trimEnd = hasTrimEnd ? (
    // Native
    function trimEnd2(s) {
      return s.trimEnd();
    }
  ) : (
    // Ponyfill
    function trimEnd2(s) {
      return s.replace(SPACE_SEPARATOR_END_REGEX, "");
    }
  );
  function RE(s, flag) {
    return new RegExp(s, flag);
  }
  var matchIdentifierAtIndex;
  if (REGEX_SUPPORTS_U_AND_Y) {
    var IDENTIFIER_PREFIX_RE_1 = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
    matchIdentifierAtIndex = function matchIdentifierAtIndex2(s, index) {
      var _a2;
      IDENTIFIER_PREFIX_RE_1.lastIndex = index;
      var match2 = IDENTIFIER_PREFIX_RE_1.exec(s);
      return (_a2 = match2[1]) !== null && _a2 !== void 0 ? _a2 : "";
    };
  } else {
    matchIdentifierAtIndex = function matchIdentifierAtIndex2(s, index) {
      var match2 = [];
      while (true) {
        var c = codePointAt(s, index);
        if (c === void 0 || _isWhiteSpace(c) || _isPatternSyntax(c)) {
          break;
        }
        match2.push(c);
        index += c >= 65536 ? 2 : 1;
      }
      return fromCodePoint.apply(void 0, match2);
    };
  }
  var Parser = (
    /** @class */
    function() {
      function Parser2(message, options) {
        if (options === void 0) {
          options = {};
        }
        this.message = message;
        this.position = { offset: 0, line: 1, column: 1 };
        this.ignoreTag = !!options.ignoreTag;
        this.locale = options.locale;
        this.requiresOtherClause = !!options.requiresOtherClause;
        this.shouldParseSkeletons = !!options.shouldParseSkeletons;
      }
      Parser2.prototype.parse = function() {
        if (this.offset() !== 0) {
          throw Error("parser can only be used once");
        }
        return this.parseMessage(0, "", false);
      };
      Parser2.prototype.parseMessage = function(nestingLevel, parentArgType, expectingCloseTag) {
        var elements = [];
        while (!this.isEOF()) {
          var char = this.char();
          if (char === 123) {
            var result = this.parseArgument(nestingLevel, expectingCloseTag);
            if (result.err) {
              return result;
            }
            elements.push(result.val);
          } else if (char === 125 && nestingLevel > 0) {
            break;
          } else if (char === 35 && (parentArgType === "plural" || parentArgType === "selectordinal")) {
            var position = this.clonePosition();
            this.bump();
            elements.push({
              type: TYPE.pound,
              location: createLocation(position, this.clonePosition())
            });
          } else if (char === 60 && !this.ignoreTag && this.peek() === 47) {
            if (expectingCloseTag) {
              break;
            } else {
              return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));
            }
          } else if (char === 60 && !this.ignoreTag && _isAlpha(this.peek() || 0)) {
            var result = this.parseTag(nestingLevel, parentArgType);
            if (result.err) {
              return result;
            }
            elements.push(result.val);
          } else {
            var result = this.parseLiteral(nestingLevel, parentArgType);
            if (result.err) {
              return result;
            }
            elements.push(result.val);
          }
        }
        return { val: elements, err: null };
      };
      Parser2.prototype.parseTag = function(nestingLevel, parentArgType) {
        var startPosition = this.clonePosition();
        this.bump();
        var tagName = this.parseTagName();
        this.bumpSpace();
        if (this.bumpIf("/>")) {
          return {
            val: {
              type: TYPE.literal,
              value: "<".concat(tagName, "/>"),
              location: createLocation(startPosition, this.clonePosition())
            },
            err: null
          };
        } else if (this.bumpIf(">")) {
          var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);
          if (childrenResult.err) {
            return childrenResult;
          }
          var children = childrenResult.val;
          var endTagStartPosition = this.clonePosition();
          if (this.bumpIf("</")) {
            if (this.isEOF() || !_isAlpha(this.char())) {
              return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
            }
            var closingTagNameStartPosition = this.clonePosition();
            var closingTagName = this.parseTagName();
            if (tagName !== closingTagName) {
              return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));
            }
            this.bumpSpace();
            if (!this.bumpIf(">")) {
              return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
            }
            return {
              val: {
                type: TYPE.tag,
                value: tagName,
                children,
                location: createLocation(startPosition, this.clonePosition())
              },
              err: null
            };
          } else {
            return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));
          }
        } else {
          return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));
        }
      };
      Parser2.prototype.parseTagName = function() {
        var startOffset = this.offset();
        this.bump();
        while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {
          this.bump();
        }
        return this.message.slice(startOffset, this.offset());
      };
      Parser2.prototype.parseLiteral = function(nestingLevel, parentArgType) {
        var start = this.clonePosition();
        var value2 = "";
        while (true) {
          var parseQuoteResult = this.tryParseQuote(parentArgType);
          if (parseQuoteResult) {
            value2 += parseQuoteResult;
            continue;
          }
          var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);
          if (parseUnquotedResult) {
            value2 += parseUnquotedResult;
            continue;
          }
          var parseLeftAngleResult = this.tryParseLeftAngleBracket();
          if (parseLeftAngleResult) {
            value2 += parseLeftAngleResult;
            continue;
          }
          break;
        }
        var location = createLocation(start, this.clonePosition());
        return {
          val: { type: TYPE.literal, value: value2, location },
          err: null
        };
      };
      Parser2.prototype.tryParseLeftAngleBracket = function() {
        if (!this.isEOF() && this.char() === 60 && (this.ignoreTag || // If at the opening tag or closing tag position, bail.
        !_isAlphaOrSlash(this.peek() || 0))) {
          this.bump();
          return "<";
        }
        return null;
      };
      Parser2.prototype.tryParseQuote = function(parentArgType) {
        if (this.isEOF() || this.char() !== 39) {
          return null;
        }
        switch (this.peek()) {
          case 39:
            this.bump();
            this.bump();
            return "'";
          // '{', '<', '>', '}'
          case 123:
          case 60:
          case 62:
          case 125:
            break;
          case 35:
            if (parentArgType === "plural" || parentArgType === "selectordinal") {
              break;
            }
            return null;
          default:
            return null;
        }
        this.bump();
        var codePoints = [this.char()];
        this.bump();
        while (!this.isEOF()) {
          var ch = this.char();
          if (ch === 39) {
            if (this.peek() === 39) {
              codePoints.push(39);
              this.bump();
            } else {
              this.bump();
              break;
            }
          } else {
            codePoints.push(ch);
          }
          this.bump();
        }
        return fromCodePoint.apply(void 0, codePoints);
      };
      Parser2.prototype.tryParseUnquoted = function(nestingLevel, parentArgType) {
        if (this.isEOF()) {
          return null;
        }
        var ch = this.char();
        if (ch === 60 || ch === 123 || ch === 35 && (parentArgType === "plural" || parentArgType === "selectordinal") || ch === 125 && nestingLevel > 0) {
          return null;
        } else {
          this.bump();
          return fromCodePoint(ch);
        }
      };
      Parser2.prototype.parseArgument = function(nestingLevel, expectingCloseTag) {
        var openingBracePosition = this.clonePosition();
        this.bump();
        this.bumpSpace();
        if (this.isEOF()) {
          return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
        }
        if (this.char() === 125) {
          this.bump();
          return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
        }
        var value2 = this.parseIdentifierIfPossible().value;
        if (!value2) {
          return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
        }
        this.bumpSpace();
        if (this.isEOF()) {
          return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
        }
        switch (this.char()) {
          // Simple argument: `{name}`
          case 125: {
            this.bump();
            return {
              val: {
                type: TYPE.argument,
                // value does not include the opening and closing braces.
                value: value2,
                location: createLocation(openingBracePosition, this.clonePosition())
              },
              err: null
            };
          }
          // Argument with options: `{name, format, ...}`
          case 44: {
            this.bump();
            this.bumpSpace();
            if (this.isEOF()) {
              return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
            }
            return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value2, openingBracePosition);
          }
          default:
            return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
        }
      };
      Parser2.prototype.parseIdentifierIfPossible = function() {
        var startingPosition = this.clonePosition();
        var startOffset = this.offset();
        var value2 = matchIdentifierAtIndex(this.message, startOffset);
        var endOffset = startOffset + value2.length;
        this.bumpTo(endOffset);
        var endPosition = this.clonePosition();
        var location = createLocation(startingPosition, endPosition);
        return { value: value2, location };
      };
      Parser2.prototype.parseArgumentOptions = function(nestingLevel, expectingCloseTag, value2, openingBracePosition) {
        var _a2;
        var typeStartPosition = this.clonePosition();
        var argType = this.parseIdentifierIfPossible().value;
        var typeEndPosition = this.clonePosition();
        switch (argType) {
          case "":
            return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
          case "number":
          case "date":
          case "time": {
            this.bumpSpace();
            var styleAndLocation = null;
            if (this.bumpIf(",")) {
              this.bumpSpace();
              var styleStartPosition = this.clonePosition();
              var result = this.parseSimpleArgStyleIfPossible();
              if (result.err) {
                return result;
              }
              var style = trimEnd(result.val);
              if (style.length === 0) {
                return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));
              }
              var styleLocation = createLocation(styleStartPosition, this.clonePosition());
              styleAndLocation = { style, styleLocation };
            }
            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
            if (argCloseResult.err) {
              return argCloseResult;
            }
            var location_1 = createLocation(openingBracePosition, this.clonePosition());
            if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, "::", 0)) {
              var skeleton2 = trimStart(styleAndLocation.style.slice(2));
              if (argType === "number") {
                var result = this.parseNumberSkeletonFromString(skeleton2, styleAndLocation.styleLocation);
                if (result.err) {
                  return result;
                }
                return {
                  val: { type: TYPE.number, value: value2, location: location_1, style: result.val },
                  err: null
                };
              } else {
                if (skeleton2.length === 0) {
                  return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);
                }
                var dateTimePattern = skeleton2;
                if (this.locale) {
                  dateTimePattern = getBestPattern(skeleton2, this.locale);
                }
                var style = {
                  type: SKELETON_TYPE.dateTime,
                  pattern: dateTimePattern,
                  location: styleAndLocation.styleLocation,
                  parsedOptions: this.shouldParseSkeletons ? parseDateTimeSkeleton(dateTimePattern) : {}
                };
                var type = argType === "date" ? TYPE.date : TYPE.time;
                return {
                  val: { type, value: value2, location: location_1, style },
                  err: null
                };
              }
            }
            return {
              val: {
                type: argType === "number" ? TYPE.number : argType === "date" ? TYPE.date : TYPE.time,
                value: value2,
                location: location_1,
                style: (_a2 = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a2 !== void 0 ? _a2 : null
              },
              err: null
            };
          }
          case "plural":
          case "selectordinal":
          case "select": {
            var typeEndPosition_1 = this.clonePosition();
            this.bumpSpace();
            if (!this.bumpIf(",")) {
              return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign({}, typeEndPosition_1)));
            }
            this.bumpSpace();
            var identifierAndLocation = this.parseIdentifierIfPossible();
            var pluralOffset = 0;
            if (argType !== "select" && identifierAndLocation.value === "offset") {
              if (!this.bumpIf(":")) {
                return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));
              }
              this.bumpSpace();
              var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);
              if (result.err) {
                return result;
              }
              this.bumpSpace();
              identifierAndLocation = this.parseIdentifierIfPossible();
              pluralOffset = result.val;
            }
            var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);
            if (optionsResult.err) {
              return optionsResult;
            }
            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
            if (argCloseResult.err) {
              return argCloseResult;
            }
            var location_2 = createLocation(openingBracePosition, this.clonePosition());
            if (argType === "select") {
              return {
                val: {
                  type: TYPE.select,
                  value: value2,
                  options: fromEntries(optionsResult.val),
                  location: location_2
                },
                err: null
              };
            } else {
              return {
                val: {
                  type: TYPE.plural,
                  value: value2,
                  options: fromEntries(optionsResult.val),
                  offset: pluralOffset,
                  pluralType: argType === "plural" ? "cardinal" : "ordinal",
                  location: location_2
                },
                err: null
              };
            }
          }
          default:
            return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
        }
      };
      Parser2.prototype.tryParseArgumentClose = function(openingBracePosition) {
        if (this.isEOF() || this.char() !== 125) {
          return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
        }
        this.bump();
        return { val: true, err: null };
      };
      Parser2.prototype.parseSimpleArgStyleIfPossible = function() {
        var nestedBraces = 0;
        var startPosition = this.clonePosition();
        while (!this.isEOF()) {
          var ch = this.char();
          switch (ch) {
            case 39: {
              this.bump();
              var apostrophePosition = this.clonePosition();
              if (!this.bumpUntil("'")) {
                return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));
              }
              this.bump();
              break;
            }
            case 123: {
              nestedBraces += 1;
              this.bump();
              break;
            }
            case 125: {
              if (nestedBraces > 0) {
                nestedBraces -= 1;
              } else {
                return {
                  val: this.message.slice(startPosition.offset, this.offset()),
                  err: null
                };
              }
              break;
            }
            default:
              this.bump();
              break;
          }
        }
        return {
          val: this.message.slice(startPosition.offset, this.offset()),
          err: null
        };
      };
      Parser2.prototype.parseNumberSkeletonFromString = function(skeleton2, location) {
        var tokens = [];
        try {
          tokens = parseNumberSkeletonFromString(skeleton2);
        } catch (e) {
          return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location);
        }
        return {
          val: {
            type: SKELETON_TYPE.number,
            tokens,
            location,
            parsedOptions: this.shouldParseSkeletons ? parseNumberSkeleton(tokens) : {}
          },
          err: null
        };
      };
      Parser2.prototype.tryParsePluralOrSelectOptions = function(nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {
        var _a2;
        var hasOtherClause = false;
        var options = [];
        var parsedSelectors = /* @__PURE__ */ new Set();
        var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;
        while (true) {
          if (selector.length === 0) {
            var startPosition = this.clonePosition();
            if (parentArgType !== "select" && this.bumpIf("=")) {
              var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);
              if (result.err) {
                return result;
              }
              selectorLocation = createLocation(startPosition, this.clonePosition());
              selector = this.message.slice(startPosition.offset, this.offset());
            } else {
              break;
            }
          }
          if (parsedSelectors.has(selector)) {
            return this.error(parentArgType === "select" ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);
          }
          if (selector === "other") {
            hasOtherClause = true;
          }
          this.bumpSpace();
          var openingBracePosition = this.clonePosition();
          if (!this.bumpIf("{")) {
            return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));
          }
          var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);
          if (fragmentResult.err) {
            return fragmentResult;
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          options.push([
            selector,
            {
              value: fragmentResult.val,
              location: createLocation(openingBracePosition, this.clonePosition())
            }
          ]);
          parsedSelectors.add(selector);
          this.bumpSpace();
          _a2 = this.parseIdentifierIfPossible(), selector = _a2.value, selectorLocation = _a2.location;
        }
        if (options.length === 0) {
          return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));
        }
        if (this.requiresOtherClause && !hasOtherClause) {
          return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));
        }
        return { val: options, err: null };
      };
      Parser2.prototype.tryParseDecimalInteger = function(expectNumberError, invalidNumberError) {
        var sign2 = 1;
        var startingPosition = this.clonePosition();
        if (this.bumpIf("+")) ;
        else if (this.bumpIf("-")) {
          sign2 = -1;
        }
        var hasDigits = false;
        var decimal2 = 0;
        while (!this.isEOF()) {
          var ch = this.char();
          if (ch >= 48 && ch <= 57) {
            hasDigits = true;
            decimal2 = decimal2 * 10 + (ch - 48);
            this.bump();
          } else {
            break;
          }
        }
        var location = createLocation(startingPosition, this.clonePosition());
        if (!hasDigits) {
          return this.error(expectNumberError, location);
        }
        decimal2 *= sign2;
        if (!isSafeInteger(decimal2)) {
          return this.error(invalidNumberError, location);
        }
        return { val: decimal2, err: null };
      };
      Parser2.prototype.offset = function() {
        return this.position.offset;
      };
      Parser2.prototype.isEOF = function() {
        return this.offset() === this.message.length;
      };
      Parser2.prototype.clonePosition = function() {
        return {
          offset: this.position.offset,
          line: this.position.line,
          column: this.position.column
        };
      };
      Parser2.prototype.char = function() {
        var offset = this.position.offset;
        if (offset >= this.message.length) {
          throw Error("out of bound");
        }
        var code2 = codePointAt(this.message, offset);
        if (code2 === void 0) {
          throw Error("Offset ".concat(offset, " is at invalid UTF-16 code unit boundary"));
        }
        return code2;
      };
      Parser2.prototype.error = function(kind, location) {
        return {
          val: null,
          err: {
            kind,
            message: this.message,
            location
          }
        };
      };
      Parser2.prototype.bump = function() {
        if (this.isEOF()) {
          return;
        }
        var code2 = this.char();
        if (code2 === 10) {
          this.position.line += 1;
          this.position.column = 1;
          this.position.offset += 1;
        } else {
          this.position.column += 1;
          this.position.offset += code2 < 65536 ? 1 : 2;
        }
      };
      Parser2.prototype.bumpIf = function(prefix) {
        if (startsWith(this.message, prefix, this.offset())) {
          for (var i = 0; i < prefix.length; i++) {
            this.bump();
          }
          return true;
        }
        return false;
      };
      Parser2.prototype.bumpUntil = function(pattern) {
        var currentOffset = this.offset();
        var index = this.message.indexOf(pattern, currentOffset);
        if (index >= 0) {
          this.bumpTo(index);
          return true;
        } else {
          this.bumpTo(this.message.length);
          return false;
        }
      };
      Parser2.prototype.bumpTo = function(targetOffset) {
        if (this.offset() > targetOffset) {
          throw Error("targetOffset ".concat(targetOffset, " must be greater than or equal to the current offset ").concat(this.offset()));
        }
        targetOffset = Math.min(targetOffset, this.message.length);
        while (true) {
          var offset = this.offset();
          if (offset === targetOffset) {
            break;
          }
          if (offset > targetOffset) {
            throw Error("targetOffset ".concat(targetOffset, " is at invalid UTF-16 code unit boundary"));
          }
          this.bump();
          if (this.isEOF()) {
            break;
          }
        }
      };
      Parser2.prototype.bumpSpace = function() {
        while (!this.isEOF() && _isWhiteSpace(this.char())) {
          this.bump();
        }
      };
      Parser2.prototype.peek = function() {
        if (this.isEOF()) {
          return null;
        }
        var code2 = this.char();
        var offset = this.offset();
        var nextCode = this.message.charCodeAt(offset + (code2 >= 65536 ? 2 : 1));
        return nextCode !== null && nextCode !== void 0 ? nextCode : null;
      };
      return Parser2;
    }()
  );
  function _isAlpha(codepoint) {
    return codepoint >= 97 && codepoint <= 122 || codepoint >= 65 && codepoint <= 90;
  }
  function _isAlphaOrSlash(codepoint) {
    return _isAlpha(codepoint) || codepoint === 47;
  }
  function _isPotentialElementNameChar(c) {
    return c === 45 || c === 46 || c >= 48 && c <= 57 || c === 95 || c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 183 || c >= 192 && c <= 214 || c >= 216 && c <= 246 || c >= 248 && c <= 893 || c >= 895 && c <= 8191 || c >= 8204 && c <= 8205 || c >= 8255 && c <= 8256 || c >= 8304 && c <= 8591 || c >= 11264 && c <= 12271 || c >= 12289 && c <= 55295 || c >= 63744 && c <= 64975 || c >= 65008 && c <= 65533 || c >= 65536 && c <= 983039;
  }
  function _isWhiteSpace(c) {
    return c >= 9 && c <= 13 || c === 32 || c === 133 || c >= 8206 && c <= 8207 || c === 8232 || c === 8233;
  }
  function _isPatternSyntax(c) {
    return c >= 33 && c <= 35 || c === 36 || c >= 37 && c <= 39 || c === 40 || c === 41 || c === 42 || c === 43 || c === 44 || c === 45 || c >= 46 && c <= 47 || c >= 58 && c <= 59 || c >= 60 && c <= 62 || c >= 63 && c <= 64 || c === 91 || c === 92 || c === 93 || c === 94 || c === 96 || c === 123 || c === 124 || c === 125 || c === 126 || c === 161 || c >= 162 && c <= 165 || c === 166 || c === 167 || c === 169 || c === 171 || c === 172 || c === 174 || c === 176 || c === 177 || c === 182 || c === 187 || c === 191 || c === 215 || c === 247 || c >= 8208 && c <= 8213 || c >= 8214 && c <= 8215 || c === 8216 || c === 8217 || c === 8218 || c >= 8219 && c <= 8220 || c === 8221 || c === 8222 || c === 8223 || c >= 8224 && c <= 8231 || c >= 8240 && c <= 8248 || c === 8249 || c === 8250 || c >= 8251 && c <= 8254 || c >= 8257 && c <= 8259 || c === 8260 || c === 8261 || c === 8262 || c >= 8263 && c <= 8273 || c === 8274 || c === 8275 || c >= 8277 && c <= 8286 || c >= 8592 && c <= 8596 || c >= 8597 && c <= 8601 || c >= 8602 && c <= 8603 || c >= 8604 && c <= 8607 || c === 8608 || c >= 8609 && c <= 8610 || c === 8611 || c >= 8612 && c <= 8613 || c === 8614 || c >= 8615 && c <= 8621 || c === 8622 || c >= 8623 && c <= 8653 || c >= 8654 && c <= 8655 || c >= 8656 && c <= 8657 || c === 8658 || c === 8659 || c === 8660 || c >= 8661 && c <= 8691 || c >= 8692 && c <= 8959 || c >= 8960 && c <= 8967 || c === 8968 || c === 8969 || c === 8970 || c === 8971 || c >= 8972 && c <= 8991 || c >= 8992 && c <= 8993 || c >= 8994 && c <= 9e3 || c === 9001 || c === 9002 || c >= 9003 && c <= 9083 || c === 9084 || c >= 9085 && c <= 9114 || c >= 9115 && c <= 9139 || c >= 9140 && c <= 9179 || c >= 9180 && c <= 9185 || c >= 9186 && c <= 9254 || c >= 9255 && c <= 9279 || c >= 9280 && c <= 9290 || c >= 9291 && c <= 9311 || c >= 9472 && c <= 9654 || c === 9655 || c >= 9656 && c <= 9664 || c === 9665 || c >= 9666 && c <= 9719 || c >= 9720 && c <= 9727 || c >= 9728 && c <= 9838 || c === 9839 || c >= 9840 && c <= 10087 || c === 10088 || c === 10089 || c === 10090 || c === 10091 || c === 10092 || c === 10093 || c === 10094 || c === 10095 || c === 10096 || c === 10097 || c === 10098 || c === 10099 || c === 10100 || c === 10101 || c >= 10132 && c <= 10175 || c >= 10176 && c <= 10180 || c === 10181 || c === 10182 || c >= 10183 && c <= 10213 || c === 10214 || c === 10215 || c === 10216 || c === 10217 || c === 10218 || c === 10219 || c === 10220 || c === 10221 || c === 10222 || c === 10223 || c >= 10224 && c <= 10239 || c >= 10240 && c <= 10495 || c >= 10496 && c <= 10626 || c === 10627 || c === 10628 || c === 10629 || c === 10630 || c === 10631 || c === 10632 || c === 10633 || c === 10634 || c === 10635 || c === 10636 || c === 10637 || c === 10638 || c === 10639 || c === 10640 || c === 10641 || c === 10642 || c === 10643 || c === 10644 || c === 10645 || c === 10646 || c === 10647 || c === 10648 || c >= 10649 && c <= 10711 || c === 10712 || c === 10713 || c === 10714 || c === 10715 || c >= 10716 && c <= 10747 || c === 10748 || c === 10749 || c >= 10750 && c <= 11007 || c >= 11008 && c <= 11055 || c >= 11056 && c <= 11076 || c >= 11077 && c <= 11078 || c >= 11079 && c <= 11084 || c >= 11085 && c <= 11123 || c >= 11124 && c <= 11125 || c >= 11126 && c <= 11157 || c === 11158 || c >= 11159 && c <= 11263 || c >= 11776 && c <= 11777 || c === 11778 || c === 11779 || c === 11780 || c === 11781 || c >= 11782 && c <= 11784 || c === 11785 || c === 11786 || c === 11787 || c === 11788 || c === 11789 || c >= 11790 && c <= 11798 || c === 11799 || c >= 11800 && c <= 11801 || c === 11802 || c === 11803 || c === 11804 || c === 11805 || c >= 11806 && c <= 11807 || c === 11808 || c === 11809 || c === 11810 || c === 11811 || c === 11812 || c === 11813 || c === 11814 || c === 11815 || c === 11816 || c === 11817 || c >= 11818 && c <= 11822 || c === 11823 || c >= 11824 && c <= 11833 || c >= 11834 && c <= 11835 || c >= 11836 && c <= 11839 || c === 11840 || c === 11841 || c === 11842 || c >= 11843 && c <= 11855 || c >= 11856 && c <= 11857 || c === 11858 || c >= 11859 && c <= 11903 || c >= 12289 && c <= 12291 || c === 12296 || c === 12297 || c === 12298 || c === 12299 || c === 12300 || c === 12301 || c === 12302 || c === 12303 || c === 12304 || c === 12305 || c >= 12306 && c <= 12307 || c === 12308 || c === 12309 || c === 12310 || c === 12311 || c === 12312 || c === 12313 || c === 12314 || c === 12315 || c === 12316 || c === 12317 || c >= 12318 && c <= 12319 || c === 12320 || c === 12336 || c === 64830 || c === 64831 || c >= 65093 && c <= 65094;
  }
  function pruneLocation(els) {
    els.forEach(function(el) {
      delete el.location;
      if (isSelectElement(el) || isPluralElement(el)) {
        for (var k in el.options) {
          delete el.options[k].location;
          pruneLocation(el.options[k].value);
        }
      } else if (isNumberElement(el) && isNumberSkeleton(el.style)) {
        delete el.style.location;
      } else if ((isDateElement(el) || isTimeElement(el)) && isDateTimeSkeleton(el.style)) {
        delete el.style.location;
      } else if (isTagElement(el)) {
        pruneLocation(el.children);
      }
    });
  }
  function parse$1(message, opts) {
    if (opts === void 0) {
      opts = {};
    }
    opts = __assign({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);
    var result = new Parser(message, opts).parse();
    if (result.err) {
      var error = SyntaxError(ErrorKind[result.err.kind]);
      error.location = result.err.location;
      error.originalMessage = result.err.message;
      throw error;
    }
    if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {
      pruneLocation(result.val);
    }
    return result.val;
  }
  var ErrorCode;
  (function(ErrorCode2) {
    ErrorCode2["MISSING_VALUE"] = "MISSING_VALUE";
    ErrorCode2["INVALID_VALUE"] = "INVALID_VALUE";
    ErrorCode2["MISSING_INTL_API"] = "MISSING_INTL_API";
  })(ErrorCode || (ErrorCode = {}));
  var FormatError = (
    /** @class */
    function(_super) {
      __extends(FormatError2, _super);
      function FormatError2(msg, code2, originalMessage) {
        var _this = _super.call(this, msg) || this;
        _this.code = code2;
        _this.originalMessage = originalMessage;
        return _this;
      }
      FormatError2.prototype.toString = function() {
        return "[formatjs Error: ".concat(this.code, "] ").concat(this.message);
      };
      return FormatError2;
    }(Error)
  );
  var InvalidValueError = (
    /** @class */
    function(_super) {
      __extends(InvalidValueError2, _super);
      function InvalidValueError2(variableId, value2, options, originalMessage) {
        return _super.call(this, 'Invalid values for "'.concat(variableId, '": "').concat(value2, '". Options are "').concat(Object.keys(options).join('", "'), '"'), ErrorCode.INVALID_VALUE, originalMessage) || this;
      }
      return InvalidValueError2;
    }(FormatError)
  );
  var InvalidValueTypeError = (
    /** @class */
    function(_super) {
      __extends(InvalidValueTypeError2, _super);
      function InvalidValueTypeError2(value2, type, originalMessage) {
        return _super.call(this, 'Value for "'.concat(value2, '" must be of type ').concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;
      }
      return InvalidValueTypeError2;
    }(FormatError)
  );
  var MissingValueError = (
    /** @class */
    function(_super) {
      __extends(MissingValueError2, _super);
      function MissingValueError2(variableId, originalMessage) {
        return _super.call(this, 'The intl string context variable "'.concat(variableId, '" was not provided to the string "').concat(originalMessage, '"'), ErrorCode.MISSING_VALUE, originalMessage) || this;
      }
      return MissingValueError2;
    }(FormatError)
  );
  var PART_TYPE;
  (function(PART_TYPE2) {
    PART_TYPE2[PART_TYPE2["literal"] = 0] = "literal";
    PART_TYPE2[PART_TYPE2["object"] = 1] = "object";
  })(PART_TYPE || (PART_TYPE = {}));
  function mergeLiteral(parts) {
    if (parts.length < 2) {
      return parts;
    }
    return parts.reduce(function(all, part) {
      var lastPart = all[all.length - 1];
      if (!lastPart || lastPart.type !== PART_TYPE.literal || part.type !== PART_TYPE.literal) {
        all.push(part);
      } else {
        lastPart.value += part.value;
      }
      return all;
    }, []);
  }
  function isFormatXMLElementFn(el) {
    return typeof el === "function";
  }
  function formatToParts(els, locales, formatters, formats, values, currentPluralValue, originalMessage) {
    if (els.length === 1 && isLiteralElement(els[0])) {
      return [
        {
          type: PART_TYPE.literal,
          value: els[0].value
        }
      ];
    }
    var result = [];
    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {
      var el = els_1[_i];
      if (isLiteralElement(el)) {
        result.push({
          type: PART_TYPE.literal,
          value: el.value
        });
        continue;
      }
      if (isPoundElement(el)) {
        if (typeof currentPluralValue === "number") {
          result.push({
            type: PART_TYPE.literal,
            value: formatters.getNumberFormat(locales).format(currentPluralValue)
          });
        }
        continue;
      }
      var varName = el.value;
      if (!(values && varName in values)) {
        throw new MissingValueError(varName, originalMessage);
      }
      var value2 = values[varName];
      if (isArgumentElement(el)) {
        if (!value2 || typeof value2 === "string" || typeof value2 === "number") {
          value2 = typeof value2 === "string" || typeof value2 === "number" ? String(value2) : "";
        }
        result.push({
          type: typeof value2 === "string" ? PART_TYPE.literal : PART_TYPE.object,
          value: value2
        });
        continue;
      }
      if (isDateElement(el)) {
        var style = typeof el.style === "string" ? formats.date[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : void 0;
        result.push({
          type: PART_TYPE.literal,
          value: formatters.getDateTimeFormat(locales, style).format(value2)
        });
        continue;
      }
      if (isTimeElement(el)) {
        var style = typeof el.style === "string" ? formats.time[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : formats.time.medium;
        result.push({
          type: PART_TYPE.literal,
          value: formatters.getDateTimeFormat(locales, style).format(value2)
        });
        continue;
      }
      if (isNumberElement(el)) {
        var style = typeof el.style === "string" ? formats.number[el.style] : isNumberSkeleton(el.style) ? el.style.parsedOptions : void 0;
        if (style && style.scale) {
          value2 = value2 * (style.scale || 1);
        }
        result.push({
          type: PART_TYPE.literal,
          value: formatters.getNumberFormat(locales, style).format(value2)
        });
        continue;
      }
      if (isTagElement(el)) {
        var children = el.children, value_1 = el.value;
        var formatFn = values[value_1];
        if (!isFormatXMLElementFn(formatFn)) {
          throw new InvalidValueTypeError(value_1, "function", originalMessage);
        }
        var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);
        var chunks = formatFn(parts.map(function(p) {
          return p.value;
        }));
        if (!Array.isArray(chunks)) {
          chunks = [chunks];
        }
        result.push.apply(result, chunks.map(function(c) {
          return {
            type: typeof c === "string" ? PART_TYPE.literal : PART_TYPE.object,
            value: c
          };
        }));
      }
      if (isSelectElement(el)) {
        var opt = el.options[value2] || el.options.other;
        if (!opt) {
          throw new InvalidValueError(el.value, value2, Object.keys(el.options), originalMessage);
        }
        result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));
        continue;
      }
      if (isPluralElement(el)) {
        var opt = el.options["=".concat(value2)];
        if (!opt) {
          if (!Intl.PluralRules) {
            throw new FormatError('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n', ErrorCode.MISSING_INTL_API, originalMessage);
          }
          var rule = formatters.getPluralRules(locales, { type: el.pluralType }).select(value2 - (el.offset || 0));
          opt = el.options[rule] || el.options.other;
        }
        if (!opt) {
          throw new InvalidValueError(el.value, value2, Object.keys(el.options), originalMessage);
        }
        result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value2 - (el.offset || 0)));
        continue;
      }
    }
    return mergeLiteral(result);
  }
  function mergeConfig(c1, c2) {
    if (!c2) {
      return c1;
    }
    return __assign(__assign(__assign({}, c1 || {}), c2 || {}), Object.keys(c1).reduce(function(all, k) {
      all[k] = __assign(__assign({}, c1[k]), c2[k] || {});
      return all;
    }, {}));
  }
  function mergeConfigs(defaultConfig, configs) {
    if (!configs) {
      return defaultConfig;
    }
    return Object.keys(defaultConfig).reduce(function(all, k) {
      all[k] = mergeConfig(defaultConfig[k], configs[k]);
      return all;
    }, __assign({}, defaultConfig));
  }
  function createFastMemoizeCache$1(store) {
    return {
      create: function() {
        return {
          get: function(key) {
            return store[key];
          },
          set: function(key, value2) {
            store[key] = value2;
          }
        };
      }
    };
  }
  function createDefaultFormatters(cache) {
    if (cache === void 0) {
      cache = {
        number: {},
        dateTime: {},
        pluralRules: {}
      };
    }
    return {
      getNumberFormat: memoize(function() {
        var _a2;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return new ((_a2 = Intl.NumberFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
      }, {
        cache: createFastMemoizeCache$1(cache.number),
        strategy: strategies.variadic
      }),
      getDateTimeFormat: memoize(function() {
        var _a2;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return new ((_a2 = Intl.DateTimeFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
      }, {
        cache: createFastMemoizeCache$1(cache.dateTime),
        strategy: strategies.variadic
      }),
      getPluralRules: memoize(function() {
        var _a2;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return new ((_a2 = Intl.PluralRules).bind.apply(_a2, __spreadArray([void 0], args, false)))();
      }, {
        cache: createFastMemoizeCache$1(cache.pluralRules),
        strategy: strategies.variadic
      })
    };
  }
  var IntlMessageFormat = (
    /** @class */
    function() {
      function IntlMessageFormat2(message, locales, overrideFormats, opts) {
        if (locales === void 0) {
          locales = IntlMessageFormat2.defaultLocale;
        }
        var _this = this;
        this.formatterCache = {
          number: {},
          dateTime: {},
          pluralRules: {}
        };
        this.format = function(values) {
          var parts = _this.formatToParts(values);
          if (parts.length === 1) {
            return parts[0].value;
          }
          var result = parts.reduce(function(all, part) {
            if (!all.length || part.type !== PART_TYPE.literal || typeof all[all.length - 1] !== "string") {
              all.push(part.value);
            } else {
              all[all.length - 1] += part.value;
            }
            return all;
          }, []);
          if (result.length <= 1) {
            return result[0] || "";
          }
          return result;
        };
        this.formatToParts = function(values) {
          return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, void 0, _this.message);
        };
        this.resolvedOptions = function() {
          var _a3;
          return {
            locale: ((_a3 = _this.resolvedLocale) === null || _a3 === void 0 ? void 0 : _a3.toString()) || Intl.NumberFormat.supportedLocalesOf(_this.locales)[0]
          };
        };
        this.getAst = function() {
          return _this.ast;
        };
        this.locales = locales;
        this.resolvedLocale = IntlMessageFormat2.resolveLocale(locales);
        if (typeof message === "string") {
          this.message = message;
          if (!IntlMessageFormat2.__parse) {
            throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");
          }
          var _a2 = opts || {};
          _a2.formatters;
          var parseOpts = __rest(_a2, ["formatters"]);
          this.ast = IntlMessageFormat2.__parse(message, __assign(__assign({}, parseOpts), { locale: this.resolvedLocale }));
        } else {
          this.ast = message;
        }
        if (!Array.isArray(this.ast)) {
          throw new TypeError("A message must be provided as a String or AST.");
        }
        this.formats = mergeConfigs(IntlMessageFormat2.formats, overrideFormats);
        this.formatters = opts && opts.formatters || createDefaultFormatters(this.formatterCache);
      }
      Object.defineProperty(IntlMessageFormat2, "defaultLocale", {
        get: function() {
          if (!IntlMessageFormat2.memoizedDefaultLocale) {
            IntlMessageFormat2.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;
          }
          return IntlMessageFormat2.memoizedDefaultLocale;
        },
        enumerable: false,
        configurable: true
      });
      IntlMessageFormat2.memoizedDefaultLocale = null;
      IntlMessageFormat2.resolveLocale = function(locales) {
        if (typeof Intl.Locale === "undefined") {
          return;
        }
        var supportedLocales = Intl.NumberFormat.supportedLocalesOf(locales);
        if (supportedLocales.length > 0) {
          return new Intl.Locale(supportedLocales[0]);
        }
        return new Intl.Locale(typeof locales === "string" ? locales : locales[0]);
      };
      IntlMessageFormat2.__parse = parse$1;
      IntlMessageFormat2.formats = {
        number: {
          integer: {
            maximumFractionDigits: 0
          },
          currency: {
            style: "currency"
          },
          percent: {
            style: "percent"
          }
        },
        date: {
          short: {
            month: "numeric",
            day: "numeric",
            year: "2-digit"
          },
          medium: {
            month: "short",
            day: "numeric",
            year: "numeric"
          },
          long: {
            month: "long",
            day: "numeric",
            year: "numeric"
          },
          full: {
            weekday: "long",
            month: "long",
            day: "numeric",
            year: "numeric"
          }
        },
        time: {
          short: {
            hour: "numeric",
            minute: "numeric"
          },
          medium: {
            hour: "numeric",
            minute: "numeric",
            second: "numeric"
          },
          long: {
            hour: "numeric",
            minute: "numeric",
            second: "numeric",
            timeZoneName: "short"
          },
          full: {
            hour: "numeric",
            minute: "numeric",
            second: "numeric",
            timeZoneName: "short"
          }
        }
      };
      return IntlMessageFormat2;
    }()
  );
  var IntlErrorCode;
  (function(IntlErrorCode2) {
    IntlErrorCode2["FORMAT_ERROR"] = "FORMAT_ERROR";
    IntlErrorCode2["UNSUPPORTED_FORMATTER"] = "UNSUPPORTED_FORMATTER";
    IntlErrorCode2["INVALID_CONFIG"] = "INVALID_CONFIG";
    IntlErrorCode2["MISSING_DATA"] = "MISSING_DATA";
    IntlErrorCode2["MISSING_TRANSLATION"] = "MISSING_TRANSLATION";
  })(IntlErrorCode || (IntlErrorCode = {}));
  var IntlError = (
    /** @class */
    function(_super) {
      __extends(IntlError2, _super);
      function IntlError2(code2, message, exception) {
        var _this = this;
        var err = exception ? exception instanceof Error ? exception : new Error(String(exception)) : void 0;
        _this = _super.call(this, "[@formatjs/intl Error ".concat(code2, "] ").concat(message, "\n").concat(err ? "\n".concat(err.message, "\n").concat(err.stack) : "")) || this;
        _this.code = code2;
        if (typeof Error.captureStackTrace === "function") {
          Error.captureStackTrace(_this, IntlError2);
        }
        return _this;
      }
      return IntlError2;
    }(Error)
  );
  var UnsupportedFormatterError = (
    /** @class */
    function(_super) {
      __extends(UnsupportedFormatterError2, _super);
      function UnsupportedFormatterError2(message, exception) {
        return _super.call(this, IntlErrorCode.UNSUPPORTED_FORMATTER, message, exception) || this;
      }
      return UnsupportedFormatterError2;
    }(IntlError)
  );
  var InvalidConfigError = (
    /** @class */
    function(_super) {
      __extends(InvalidConfigError2, _super);
      function InvalidConfigError2(message, exception) {
        return _super.call(this, IntlErrorCode.INVALID_CONFIG, message, exception) || this;
      }
      return InvalidConfigError2;
    }(IntlError)
  );
  var MissingDataError = (
    /** @class */
    function(_super) {
      __extends(MissingDataError2, _super);
      function MissingDataError2(message, exception) {
        return _super.call(this, IntlErrorCode.MISSING_DATA, message, exception) || this;
      }
      return MissingDataError2;
    }(IntlError)
  );
  var IntlFormatError = (
    /** @class */
    function(_super) {
      __extends(IntlFormatError2, _super);
      function IntlFormatError2(message, locale, exception) {
        var _this = _super.call(this, IntlErrorCode.FORMAT_ERROR, "".concat(message, "\nLocale: ").concat(locale, "\n"), exception) || this;
        _this.locale = locale;
        return _this;
      }
      return IntlFormatError2;
    }(IntlError)
  );
  var MessageFormatError = (
    /** @class */
    function(_super) {
      __extends(MessageFormatError2, _super);
      function MessageFormatError2(message, locale, descriptor, exception) {
        var _this = _super.call(this, "".concat(message, "\nMessageID: ").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.id, "\nDefault Message: ").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.defaultMessage, "\nDescription: ").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.description, "\n"), locale, exception) || this;
        _this.descriptor = descriptor;
        _this.locale = locale;
        return _this;
      }
      return MessageFormatError2;
    }(IntlFormatError)
  );
  var MissingTranslationError = (
    /** @class */
    function(_super) {
      __extends(MissingTranslationError2, _super);
      function MissingTranslationError2(descriptor, locale) {
        var _this = _super.call(this, IntlErrorCode.MISSING_TRANSLATION, 'Missing message: "'.concat(descriptor.id, '" for locale "').concat(locale, '", using ').concat(descriptor.defaultMessage ? "default message (".concat(typeof descriptor.defaultMessage === "string" ? descriptor.defaultMessage : descriptor.defaultMessage.map(function(e) {
          var _a2;
          return (_a2 = e.value) !== null && _a2 !== void 0 ? _a2 : JSON.stringify(e);
        }).join(), ")") : "id", " as fallback.")) || this;
        _this.descriptor = descriptor;
        return _this;
      }
      return MissingTranslationError2;
    }(IntlError)
  );
  function invariant(condition, message, Err) {
    if (Err === void 0) {
      Err = Error;
    }
    if (!condition) {
      throw new Err(message);
    }
  }
  function filterProps(props, allowlist, defaults) {
    if (defaults === void 0) {
      defaults = {};
    }
    return allowlist.reduce(function(filtered, name) {
      if (name in props) {
        filtered[name] = props[name];
      } else if (name in defaults) {
        filtered[name] = defaults[name];
      }
      return filtered;
    }, {});
  }
  var defaultErrorHandler = function(error) {
    if (process.env.NODE_ENV !== "production") {
      console.error(error);
    }
  };
  var defaultWarnHandler = function(warning) {
    if (process.env.NODE_ENV !== "production") {
      console.warn(warning);
    }
  };
  var DEFAULT_INTL_CONFIG = {
    formats: {},
    messages: {},
    timeZone: void 0,
    defaultLocale: "en",
    defaultFormats: {},
    fallbackOnEmptyString: true,
    onError: defaultErrorHandler,
    onWarn: defaultWarnHandler
  };
  function createIntlCache() {
    return {
      dateTime: {},
      number: {},
      message: {},
      relativeTime: {},
      pluralRules: {},
      list: {},
      displayNames: {}
    };
  }
  function createFastMemoizeCache(store) {
    return {
      create: function() {
        return {
          get: function(key) {
            return store[key];
          },
          set: function(key, value2) {
            store[key] = value2;
          }
        };
      }
    };
  }
  function createFormatters(cache) {
    if (cache === void 0) {
      cache = createIntlCache();
    }
    var RelativeTimeFormat = Intl.RelativeTimeFormat;
    var ListFormat = Intl.ListFormat;
    var DisplayNames = Intl.DisplayNames;
    var getDateTimeFormat = memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.DateTimeFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.dateTime),
      strategy: strategies.variadic
    });
    var getNumberFormat = memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.NumberFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.number),
      strategy: strategies.variadic
    });
    var getPluralRules = memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.PluralRules).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.pluralRules),
      strategy: strategies.variadic
    });
    return {
      getDateTimeFormat,
      getNumberFormat,
      getMessageFormat: memoize(function(message, locales, overrideFormats, opts) {
        return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {
          getNumberFormat,
          getDateTimeFormat,
          getPluralRules
        } }, opts || {}));
      }, {
        cache: createFastMemoizeCache(cache.message),
        strategy: strategies.variadic
      }),
      getRelativeTimeFormat: memoize(function() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArray([void 0], args, false)))();
      }, {
        cache: createFastMemoizeCache(cache.relativeTime),
        strategy: strategies.variadic
      }),
      getPluralRules,
      getListFormat: memoize(function() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return new (ListFormat.bind.apply(ListFormat, __spreadArray([void 0], args, false)))();
      }, {
        cache: createFastMemoizeCache(cache.list),
        strategy: strategies.variadic
      }),
      getDisplayNames: memoize(function() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return new (DisplayNames.bind.apply(DisplayNames, __spreadArray([void 0], args, false)))();
      }, {
        cache: createFastMemoizeCache(cache.displayNames),
        strategy: strategies.variadic
      })
    };
  }
  function getNamedFormat(formats, type, name, onError) {
    var formatType = formats && formats[type];
    var format2;
    if (formatType) {
      format2 = formatType[name];
    }
    if (format2) {
      return format2;
    }
    onError(new UnsupportedFormatterError("No ".concat(type, " format named: ").concat(name)));
  }
  function setTimeZoneInOptions(opts, timeZone) {
    return Object.keys(opts).reduce(function(all, k) {
      all[k] = __assign({ timeZone }, opts[k]);
      return all;
    }, {});
  }
  function deepMergeOptions(opts1, opts2) {
    var keys = Object.keys(__assign(__assign({}, opts1), opts2));
    return keys.reduce(function(all, k) {
      all[k] = __assign(__assign({}, opts1[k] || {}), opts2[k] || {});
      return all;
    }, {});
  }
  function deepMergeFormatsAndSetTimeZone(f1, timeZone) {
    if (!timeZone) {
      return f1;
    }
    var mfFormats = IntlMessageFormat.formats;
    return __assign(__assign(__assign({}, mfFormats), f1), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone)) });
  }
  var formatMessage = function(_a2, state, messageDescriptor, values, opts) {
    var locale = _a2.locale, formats = _a2.formats, messages = _a2.messages, defaultLocale = _a2.defaultLocale, defaultFormats = _a2.defaultFormats, fallbackOnEmptyString = _a2.fallbackOnEmptyString, onError = _a2.onError, timeZone = _a2.timeZone, defaultRichTextElements = _a2.defaultRichTextElements;
    if (messageDescriptor === void 0) {
      messageDescriptor = { id: "" };
    }
    var msgId = messageDescriptor.id, defaultMessage = messageDescriptor.defaultMessage;
    invariant(!!msgId, "[@formatjs/intl] An `id` must be provided to format a message. You can either:\n1. Configure your build toolchain with [babel-plugin-formatjs](https://formatjs.github.io/docs/tooling/babel-plugin)\nor [@formatjs/ts-transformer](https://formatjs.github.io/docs/tooling/ts-transformer) OR\n2. Configure your `eslint` config to include [eslint-plugin-formatjs](https://formatjs.github.io/docs/tooling/linter#enforce-id)\nto autofix this issue");
    var id = String(msgId);
    var message = (
      // In case messages is Object.create(null)
      // e.g import('foo.json') from webpack)
      // See https://github.com/formatjs/formatjs/issues/1914
      messages && Object.prototype.hasOwnProperty.call(messages, id) && messages[id]
    );
    if (Array.isArray(message) && message.length === 1 && message[0].type === TYPE.literal) {
      return message[0].value;
    }
    if (!values && message && typeof message === "string" && !defaultRichTextElements) {
      return message.replace(/'\{(.*?)\}'/gi, "{$1}");
    }
    values = __assign(__assign({}, defaultRichTextElements), values || {});
    formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);
    defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);
    if (!message) {
      if (fallbackOnEmptyString === false && message === "") {
        return message;
      }
      if (!defaultMessage || locale && locale.toLowerCase() !== defaultLocale.toLowerCase()) {
        onError(new MissingTranslationError(messageDescriptor, locale));
      }
      if (defaultMessage) {
        try {
          var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);
          return formatter.format(values);
        } catch (e) {
          onError(new MessageFormatError('Error formatting default message for: "'.concat(id, '", rendering default message verbatim'), locale, messageDescriptor, e));
          return typeof defaultMessage === "string" ? defaultMessage : id;
        }
      }
      return id;
    }
    try {
      var formatter = state.getMessageFormat(message, locale, formats, __assign({ formatters: state }, opts || {}));
      return formatter.format(values);
    } catch (e) {
      onError(new MessageFormatError('Error formatting message: "'.concat(id, '", using ').concat(defaultMessage ? "default message" : "id", " as fallback."), locale, messageDescriptor, e));
    }
    if (defaultMessage) {
      try {
        var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);
        return formatter.format(values);
      } catch (e) {
        onError(new MessageFormatError('Error formatting the default message for: "'.concat(id, '", rendering message verbatim'), locale, messageDescriptor, e));
      }
    }
    if (typeof message === "string") {
      return message;
    }
    if (typeof defaultMessage === "string") {
      return defaultMessage;
    }
    return id;
  };
  var DATE_TIME_FORMAT_OPTIONS = [
    "formatMatcher",
    "timeZone",
    "hour12",
    "weekday",
    "era",
    "year",
    "month",
    "day",
    "hour",
    "minute",
    "second",
    "timeZoneName",
    "hourCycle",
    "dateStyle",
    "timeStyle",
    "calendar",
    // 'dayPeriod',
    "numberingSystem",
    "fractionalSecondDigits"
  ];
  function getFormatter$2(_a2, type, getDateTimeFormat, options) {
    var locale = _a2.locale, formats = _a2.formats, onError = _a2.onError, timeZone = _a2.timeZone;
    if (options === void 0) {
      options = {};
    }
    var format2 = options.format;
    var defaults = __assign(__assign({}, timeZone && { timeZone }), format2 && getNamedFormat(formats, type, format2, onError));
    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);
    if (type === "time" && !filteredOptions.hour && !filteredOptions.minute && !filteredOptions.second && !filteredOptions.timeStyle && !filteredOptions.dateStyle) {
      filteredOptions = __assign(__assign({}, filteredOptions), { hour: "numeric", minute: "numeric" });
    }
    return getDateTimeFormat(locale, filteredOptions);
  }
  function formatDate(config2, getDateTimeFormat) {
    var _a2 = [];
    for (var _i = 2; _i < arguments.length; _i++) {
      _a2[_i - 2] = arguments[_i];
    }
    var value2 = _a2[0], _b = _a2[1], options = _b === void 0 ? {} : _b;
    var date2 = typeof value2 === "string" ? new Date(value2 || 0) : value2;
    try {
      return getFormatter$2(config2, "date", getDateTimeFormat, options).format(date2);
    } catch (e) {
      config2.onError(new IntlFormatError("Error formatting date.", config2.locale, e));
    }
    return String(date2);
  }
  function formatTime(config2, getDateTimeFormat) {
    var _a2 = [];
    for (var _i = 2; _i < arguments.length; _i++) {
      _a2[_i - 2] = arguments[_i];
    }
    var value2 = _a2[0], _b = _a2[1], options = _b === void 0 ? {} : _b;
    var date2 = typeof value2 === "string" ? new Date(value2 || 0) : value2;
    try {
      return getFormatter$2(config2, "time", getDateTimeFormat, options).format(date2);
    } catch (e) {
      config2.onError(new IntlFormatError("Error formatting time.", config2.locale, e));
    }
    return String(date2);
  }
  function formatDateTimeRange(config2, getDateTimeFormat) {
    var _a2 = [];
    for (var _i = 2; _i < arguments.length; _i++) {
      _a2[_i - 2] = arguments[_i];
    }
    var from = _a2[0], to = _a2[1], _b = _a2[2], options = _b === void 0 ? {} : _b;
    var fromDate = typeof from === "string" ? new Date(from || 0) : from;
    var toDate = typeof to === "string" ? new Date(to || 0) : to;
    try {
      return getFormatter$2(config2, "dateTimeRange", getDateTimeFormat, options).formatRange(fromDate, toDate);
    } catch (e) {
      config2.onError(new IntlFormatError("Error formatting date time range.", config2.locale, e));
    }
    return String(fromDate);
  }
  function formatDateToParts(config2, getDateTimeFormat) {
    var _a2 = [];
    for (var _i = 2; _i < arguments.length; _i++) {
      _a2[_i - 2] = arguments[_i];
    }
    var value2 = _a2[0], _b = _a2[1], options = _b === void 0 ? {} : _b;
    var date2 = typeof value2 === "string" ? new Date(value2 || 0) : value2;
    try {
      return getFormatter$2(config2, "date", getDateTimeFormat, options).formatToParts(date2);
    } catch (e) {
      config2.onError(new IntlFormatError("Error formatting date.", config2.locale, e));
    }
    return [];
  }
  function formatTimeToParts(config2, getDateTimeFormat) {
    var _a2 = [];
    for (var _i = 2; _i < arguments.length; _i++) {
      _a2[_i - 2] = arguments[_i];
    }
    var value2 = _a2[0], _b = _a2[1], options = _b === void 0 ? {} : _b;
    var date2 = typeof value2 === "string" ? new Date(value2 || 0) : value2;
    try {
      return getFormatter$2(config2, "time", getDateTimeFormat, options).formatToParts(date2);
    } catch (e) {
      config2.onError(new IntlFormatError("Error formatting time.", config2.locale, e));
    }
    return [];
  }
  var DISPLAY_NAMES_OPTONS = [
    "style",
    "type",
    "fallback",
    "languageDisplay"
  ];
  function formatDisplayName(_a2, getDisplayNames, value2, options) {
    var locale = _a2.locale, onError = _a2.onError;
    var DisplayNames = Intl.DisplayNames;
    if (!DisplayNames) {
      onError(new FormatError('Intl.DisplayNames is not available in this environment.\nTry polyfilling it using "@formatjs/intl-displaynames"\n', ErrorCode.MISSING_INTL_API));
    }
    var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);
    try {
      return getDisplayNames(locale, filteredOptions).of(value2);
    } catch (e) {
      onError(new IntlFormatError("Error formatting display name.", locale, e));
    }
  }
  var LIST_FORMAT_OPTIONS = [
    "type",
    "style"
  ];
  var now = Date.now();
  function generateToken(i) {
    return "".concat(now, "_").concat(i, "_").concat(now);
  }
  function formatList(opts, getListFormat, values, options) {
    if (options === void 0) {
      options = {};
    }
    var results = formatListToParts(opts, getListFormat, values, options).reduce(function(all, el) {
      var val = el.value;
      if (typeof val !== "string") {
        all.push(val);
      } else if (typeof all[all.length - 1] === "string") {
        all[all.length - 1] += val;
      } else {
        all.push(val);
      }
      return all;
    }, []);
    return results.length === 1 ? results[0] : results.length === 0 ? "" : results;
  }
  function formatListToParts(_a2, getListFormat, values, options) {
    var locale = _a2.locale, onError = _a2.onError;
    if (options === void 0) {
      options = {};
    }
    var ListFormat = Intl.ListFormat;
    if (!ListFormat) {
      onError(new FormatError('Intl.ListFormat is not available in this environment.\nTry polyfilling it using "@formatjs/intl-listformat"\n', ErrorCode.MISSING_INTL_API));
    }
    var filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);
    try {
      var richValues_1 = {};
      var serializedValues = values.map(function(v, i) {
        if (typeof v === "object") {
          var id = generateToken(i);
          richValues_1[id] = v;
          return id;
        }
        return String(v);
      });
      return getListFormat(locale, filteredOptions).formatToParts(serializedValues).map(function(part) {
        return part.type === "literal" ? part : __assign(__assign({}, part), { value: richValues_1[part.value] || part.value });
      });
    } catch (e) {
      onError(new IntlFormatError("Error formatting list.", locale, e));
    }
    return values;
  }
  var PLURAL_FORMAT_OPTIONS = ["type"];
  function formatPlural(_a2, getPluralRules, value2, options) {
    var locale = _a2.locale, onError = _a2.onError;
    if (options === void 0) {
      options = {};
    }
    if (!Intl.PluralRules) {
      onError(new FormatError('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n', ErrorCode.MISSING_INTL_API));
    }
    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);
    try {
      return getPluralRules(locale, filteredOptions).select(value2);
    } catch (e) {
      onError(new IntlFormatError("Error formatting plural.", locale, e));
    }
    return "other";
  }
  var RELATIVE_TIME_FORMAT_OPTIONS = ["numeric", "style"];
  function getFormatter$1(_a2, getRelativeTimeFormat, options) {
    var locale = _a2.locale, formats = _a2.formats, onError = _a2.onError;
    if (options === void 0) {
      options = {};
    }
    var format2 = options.format;
    var defaults = !!format2 && getNamedFormat(formats, "relative", format2, onError) || {};
    var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);
    return getRelativeTimeFormat(locale, filteredOptions);
  }
  function formatRelativeTime(config2, getRelativeTimeFormat, value2, unit, options) {
    if (options === void 0) {
      options = {};
    }
    if (!unit) {
      unit = "second";
    }
    var RelativeTimeFormat = Intl.RelativeTimeFormat;
    if (!RelativeTimeFormat) {
      config2.onError(new FormatError('Intl.RelativeTimeFormat is not available in this environment.\nTry polyfilling it using "@formatjs/intl-relativetimeformat"\n', ErrorCode.MISSING_INTL_API));
    }
    try {
      return getFormatter$1(config2, getRelativeTimeFormat, options).format(value2, unit);
    } catch (e) {
      config2.onError(new IntlFormatError("Error formatting relative time.", config2.locale, e));
    }
    return String(value2);
  }
  var NUMBER_FORMAT_OPTIONS = [
    "style",
    "currency",
    "unit",
    "unitDisplay",
    "useGrouping",
    "minimumIntegerDigits",
    "minimumFractionDigits",
    "maximumFractionDigits",
    "minimumSignificantDigits",
    "maximumSignificantDigits",
    // ES2020 NumberFormat
    "compactDisplay",
    "currencyDisplay",
    "currencySign",
    "notation",
    "signDisplay",
    "unit",
    "unitDisplay",
    "numberingSystem",
    // ES2023 NumberFormat
    "trailingZeroDisplay",
    "roundingPriority",
    "roundingIncrement",
    "roundingMode"
  ];
  function getFormatter(_a2, getNumberFormat, options) {
    var locale = _a2.locale, formats = _a2.formats, onError = _a2.onError;
    if (options === void 0) {
      options = {};
    }
    var format2 = options.format;
    var defaults = format2 && getNamedFormat(formats, "number", format2, onError) || {};
    var filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);
    return getNumberFormat(locale, filteredOptions);
  }
  function formatNumber(config2, getNumberFormat, value2, options) {
    if (options === void 0) {
      options = {};
    }
    try {
      return getFormatter(config2, getNumberFormat, options).format(value2);
    } catch (e) {
      config2.onError(new IntlFormatError("Error formatting number.", config2.locale, e));
    }
    return String(value2);
  }
  function formatNumberToParts(config2, getNumberFormat, value2, options) {
    if (options === void 0) {
      options = {};
    }
    try {
      return getFormatter(config2, getNumberFormat, options).formatToParts(value2);
    } catch (e) {
      config2.onError(new IntlFormatError("Error formatting number.", config2.locale, e));
    }
    return [];
  }
  function messagesContainString(messages) {
    var firstMessage = messages ? messages[Object.keys(messages)[0]] : void 0;
    return typeof firstMessage === "string";
  }
  function verifyConfigMessages(config2) {
    if (config2.onWarn && config2.defaultRichTextElements && messagesContainString(config2.messages || {})) {
      config2.onWarn('[@formatjs/intl] "defaultRichTextElements" was specified but "message" was not pre-compiled. \nPlease consider using "@formatjs/cli" to pre-compile your messages for performance.\nFor more details see https://formatjs.github.io/docs/getting-started/message-distribution');
    }
  }
  function createIntl(config2, cache) {
    var formatters = createFormatters(cache);
    var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config2);
    var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;
    if (!locale) {
      if (onError) {
        onError(new InvalidConfigError('"locale" was not configured, using "'.concat(defaultLocale, '" as fallback. See https://formatjs.github.io/docs/react-intl/api#intlshape for more details')));
      }
      resolvedConfig.locale = resolvedConfig.defaultLocale || "en";
    } else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {
      onError(new MissingDataError('Missing locale data for locale: "'.concat(locale, '" in Intl.NumberFormat. Using default locale: "').concat(defaultLocale, '" as fallback. See https://formatjs.github.io/docs/react-intl#runtime-requirements for more details')));
    } else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length && onError) {
      onError(new MissingDataError('Missing locale data for locale: "'.concat(locale, '" in Intl.DateTimeFormat. Using default locale: "').concat(defaultLocale, '" as fallback. See https://formatjs.github.io/docs/react-intl#runtime-requirements for more details')));
    }
    verifyConfigMessages(resolvedConfig);
    return __assign(__assign({}, resolvedConfig), { formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateTimeRange: formatDateTimeRange.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), formatMessage: formatMessage.bind(null, resolvedConfig, formatters), $t: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatListToParts: formatListToParts.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });
  }
  function numberToString(value2) {
    if (isNullish(value2)) return;
    return value2.toString();
  }
  function getChildren(value2) {
    if (isNullish(value2)) return [];
    if (Array.isArray(value2)) {
      return value2.map((x) => x.children).flat();
    }
    return value2.children;
  }
  function isEmptyUiEntry(uiField) {
    switch (uiField.type) {
      case "REFERENCE_VALUE":
      case "REFERENCE_LINK":
      case "DOWNLOAD_BINARY":
        return isNullish(uiField.reference);
      case "SINGLE_VALUE":
        return isNullish(uiField.display);
      case "MULTIPLE_VALUES":
      case "MULTIPLE_GROUPED_VALUES":
        return isNullish(uiField.display) || !uiField.display.flat().length;
      case "DOWNLOAD_LINK":
        return isNullish(uiField.url);
      default:
        throw new Error(`Unknown UI entry type: ${uiField.type}`);
    }
  }
  function isUiSchemaGroup(schema) {
    return schema.children?.some((x) => typeof x.type === "string");
  }
  function processGroup(group, { formatMessage: formatMessage2 }) {
    return {
      ...group,
      children: group.children.map((entry) => {
        return isEmptyUiEntry(entry) && !["DOWNLOAD_LINK", "DOWNLOAD_BINARY"].includes(entry.type) ? {
          type: "SINGLE_VALUE",
          label: entry.label,
          display: formatMessage2("fhir.empty_value")
        } : entry;
      })
    };
  }
  function setEmptyEntries(context) {
    return (schema) => {
      if (Array.isArray(schema)) {
        return schema.map((x) => processGroup(x, context));
      }
      if (isUiSchemaGroup(schema)) {
        return processGroup(schema, context);
      }
      return {
        ...schema,
        children: schema.children.map((x) => processGroup(x, context))
      };
    };
  }
  const intlCache = createIntlCache();
  function createUiHelperContext(options) {
    const { locale, ignoreMissingTranslations, isSummary } = options;
    const intl2 = createIntl(
      getFhirIntlConfig({
        locale,
        ignoreMissingTranslations
      }),
      intlCache
    );
    return {
      isSummary,
      intl: intl2,
      ...createHelpers(intl2)
    };
  }
  const attachment$1 = ({ formatMessage: formatMessage2 }) => (value2) => {
    const label = value2?.title ?? formatMessage2("fhir.unknown");
    if (isBinaryReference(value2?.url)) {
      return {
        type: "DOWNLOAD_BINARY",
        label,
        reference: value2?.url
      };
    }
    return {
      type: "DOWNLOAD_LINK",
      label,
      url: value2?.url
    };
  };
  function isBinaryReference(value2) {
    return value2?.startsWith("Binary/");
  }
  const annotationDisplay = (value2) => {
    return value2?.text;
  };
  const annotation$1 = ({ intl: intl2 }) => (label, value2) => {
    if (Array.isArray(value2)) {
      return {
        label: intl2.formatMessage({ id: label }),
        type: "MULTIPLE_VALUES",
        display: value2.map(annotationDisplay).filter(isNonNullish)
      };
    }
    return {
      label: intl2.formatMessage({ id: label }),
      display: annotationDisplay(value2),
      type: "SINGLE_VALUE"
    };
  };
  const boolean$1 = ({ formatMessage: formatMessage2 }) => (label, value2) => {
    const truthyString = value2 ? formatMessage2("fhir.boolean.true") : formatMessage2("fhir.boolean.false");
    return {
      label: formatMessage2(label),
      type: "SINGLE_VALUE",
      display: isNonNullish(value2) ? truthyString : void 0
    };
  };
  function code$1(context) {
    const { hasMessage, formatMessage: formatMessage2 } = context;
    return function(label, value2, options) {
      const { i18nCode } = options ?? {};
      function translateCode(code2) {
        const i18nKey = `codes.${i18nCode}.${code2}`;
        if (isNullish(code2)) {
          return;
        }
        if (i18nCode && hasMessage(i18nKey)) {
          return formatMessage2(i18nKey);
        }
        return code2;
      }
      if (Array.isArray(value2)) {
        return {
          label: formatMessage2(label),
          type: "MULTIPLE_VALUES",
          display: value2.map(translateCode).filter(isNonNullish)
        };
      }
      return {
        label: formatMessage2(label),
        type: "SINGLE_VALUE",
        display: translateCode(value2)
      };
    };
  }
  const systemCode = ({ formatMessage: formatMessage2, hasMessage }) => (value2) => {
    const { display, code: code2, system: system2 } = value2 ?? {};
    const systemCodeI18n = `system.code.${system2}|${code2}`;
    const systemCodeString = hasMessage(systemCodeI18n) ? formatMessage2(systemCodeI18n) : display;
    return systemCodeString ?? code2;
  };
  const system = (context) => (value2) => {
    const { isSummary, formatMessage: formatMessage2 } = context;
    const { display, code: code2, system: system2 } = value2 ?? {};
    const systemCodeTranslation = systemCode(context)(value2);
    if (isSummary) {
      return systemCodeTranslation;
    }
    let codeInSystemString;
    if (code2 && system2) {
      codeInSystemString = formatMessage2("fhir.code_in_system", {
        code: code2,
        system: system2
      });
    } else {
      codeInSystemString = system2 ?? code2;
    }
    const systemString = `${display ?? ""} ${codeInSystemString ? "(" + codeInSystemString + ")" : ""}`.trim();
    return systemString === "" ? void 0 : systemString;
  };
  const codeableDisplay = (context) => (value2) => {
    if (value2?.text?.length) {
      return [value2.text];
    }
    const formatSystem = system(context);
    return value2?.coding.map(formatSystem).filter(isNonNullish) ?? [];
  };
  const codeableConcept$1 = (context) => (label, value2) => {
    const { formatMessage: formatMessage2 } = context;
    const display = codeableDisplay(context);
    if (Array.isArray(value2)) {
      return {
        label: formatMessage2(label),
        type: "MULTIPLE_GROUPED_VALUES",
        display: value2.map(display)
      };
    }
    return {
      label: formatMessage2(label),
      type: "MULTIPLE_VALUES",
      display: display(value2)
    };
  };
  const coding$1 = (context) => (label, value2) => {
    const { formatMessage: formatMessage2 } = context;
    const display = system(context);
    if (Array.isArray(value2)) {
      return {
        label: formatMessage2(label),
        type: "MULTIPLE_VALUES",
        display: value2.map(display).filter(isNonNullish)
      };
    }
    return {
      label: formatMessage2(label),
      type: "SINGLE_VALUE",
      display: display(value2)
    };
  };
  const milliseconds = /T\d\d:\d\d:\d\d\.\d+/i;
  const seconds = /T\d\d:\d\d:\d\d/i;
  const minutes = /T\d\d:\d\d/i;
  const hours = /T\d\d/i;
  const dateRegexp = /^\d\d\d\d-\d\d-\d\d/;
  const month = /^\d\d\d\d-\d\d/;
  const year = /^\d\d\d\d/;
  const timezone = /(([+-][\d:]+)|Z)$/i;
  function getDateFormatOptions(dateString, isSummary = false) {
    const hasMilliseconds = milliseconds.test(dateString);
    const hasSeconds = hasMilliseconds || seconds.test(dateString);
    const hasMinutes = hasSeconds || minutes.test(dateString);
    const hasHours = hasMinutes || hours.test(dateString);
    const hasDate = dateRegexp.test(dateString);
    const hasMonth = hasDate || month.test(dateString);
    const hasYear = hasMonth || year.test(dateString);
    const hasTimezone = hasHours && timezone.test(dateString);
    return {
      year: hasYear ? "numeric" : void 0,
      month: hasMonth ? "long" : void 0,
      day: hasDate ? "numeric" : void 0,
      hour: hasHours ? "numeric" : void 0,
      minute: hasMinutes ? "numeric" : void 0,
      ...!isSummary && {
        second: hasSeconds ? "numeric" : void 0,
        fractionalSecondDigits: hasMilliseconds ? 3 : void 0,
        timeZoneName: hasTimezone ? "shortOffset" : void 0
      }
    };
  }
  const date$2 = ({ intl: { locale }, isSummary }) => (value2) => {
    if (isNullish(value2)) return;
    const date2 = new Date(value2);
    const dateTimeFormat = new Intl.DateTimeFormat(
      locale,
      getDateFormatOptions(value2, isSummary)
    );
    try {
      return dateTimeFormat.format(date2);
    } catch (_error) {
      return `${value2}`;
    }
  };
  const date$3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    date: date$2
  }, Symbol.toStringTag, { value: "Module" }));
  const date$1 = (i18nContext) => (label, value2) => {
    return {
      label: i18nContext.formatMessage(label),
      type: "SINGLE_VALUE",
      display: date$2(i18nContext)(value2)
    };
  };
  const dateTime$1 = (context) => (label, value2) => {
    if (Array.isArray(value2)) {
      return {
        label: context.formatMessage(label),
        type: "MULTIPLE_VALUES",
        display: value2.map(date$2(context)).filter(isNonNullish)
      };
    }
    return {
      label: context.formatMessage(label),
      type: "SINGLE_VALUE",
      display: date$2(context)(value2)
    };
  };
  const decimal$1 = ({ intl: intl2 }) => (label, value2) => {
    return {
      label: intl2.formatMessage({ id: label }),
      type: "SINGLE_VALUE",
      display: numberToString(value2)
    };
  };
  const systemValue = ({ formatMessage: formatMessage2, hasMessage }) => (value2) => {
    if (isNullish(value2)) return;
    const { system: system2, code: code2, value: quantityValue, unit } = value2;
    const countI18nKey = `system.value.${system2}|${code2}`;
    if (hasMessage(countI18nKey)) {
      return formatMessage2(countI18nKey, { value: quantityValue });
    }
    if (unit) {
      return `${numberToString(quantityValue)} ${unit}`;
    }
    return numberToString(quantityValue);
  };
  const quantity$1 = (context) => (label, value2) => {
    const { formatMessage: formatMessage2 } = context;
    return {
      label: formatMessage2(label),
      type: `SINGLE_VALUE`,
      display: systemValue(context)(value2)
    };
  };
  const duration$1 = quantity$1;
  const identifier$1 = ({ intl: intl2 }) => (label, value2) => {
    if (Array.isArray(value2)) {
      return {
        label: intl2.formatMessage({ id: label }),
        type: "MULTIPLE_VALUES",
        display: value2?.map((x) => x?.value).filter(isNonNullish)
      };
    }
    return {
      label: intl2.formatMessage({ id: label }),
      type: "SINGLE_VALUE",
      display: value2?.value
    };
  };
  const instant$1 = (i18nContext) => (label, value2) => {
    return dateTime$1(i18nContext)(label, value2);
  };
  const integer$1 = ({ intl: intl2 }) => (label, value2) => {
    return {
      label: intl2.formatMessage({ id: label }),
      type: "SINGLE_VALUE",
      display: numberToString(value2)
    };
  };
  const integer64$1 = ({ intl: intl2 }) => (label, value2) => {
    return {
      label: intl2.formatMessage({ id: label }),
      type: "SINGLE_VALUE",
      display: numberToString(value2)
    };
  };
  const period$1 = (i18nContext) => (label, value2) => {
    const { formatMessage: formatMessage2, hasMessage } = i18nContext;
    const startLabel = `${label}.start`;
    const endLabel = `${label}.end`;
    const formatDate2 = date$2(i18nContext);
    return [
      {
        label: formatMessage2(hasMessage(startLabel) ? startLabel : `fhir.period.start`),
        type: `SINGLE_VALUE`,
        display: formatDate2(value2?.start)
      },
      {
        label: formatMessage2(hasMessage(endLabel) ? endLabel : `fhir.period.end`),
        type: `SINGLE_VALUE`,
        display: formatDate2(value2?.end)
      }
    ];
  };
  const positiveInt$1 = ({ intl: intl2 }) => (label, value2) => {
    return {
      label: intl2.formatMessage({ id: label }),
      type: "SINGLE_VALUE",
      display: numberToString(value2)
    };
  };
  const range$1 = (context) => (label, value2) => {
    const { hasMessage, formatMessage: formatMessage2 } = context;
    const lowLabel = `${label}.low`;
    const highLabel = `${label}.high`;
    const formatSystemValue = systemValue(context);
    return [
      {
        label: formatMessage2(hasMessage(lowLabel) ? lowLabel : `fhir.range.low`),
        type: `SINGLE_VALUE`,
        display: formatSystemValue(value2?.low)
      },
      {
        label: formatMessage2(hasMessage(highLabel) ? highLabel : `fhir.range.high`),
        type: `SINGLE_VALUE`,
        display: formatSystemValue(value2?.high)
      }
    ];
  };
  const ratio$1 = (context) => (label, value2) => {
    const { hasMessage, formatMessage: formatMessage2 } = context;
    const numeratorLabel = `${label}.numerator`;
    const denominatorLabel = `${label}.denominator`;
    const formatSystemValue = systemValue(context);
    return [
      {
        label: formatMessage2(
          hasMessage(numeratorLabel) ? numeratorLabel : `fhir.ratio.numerator`
        ),
        type: `SINGLE_VALUE`,
        display: formatSystemValue(value2?.numerator)
      },
      {
        label: formatMessage2(
          hasMessage(denominatorLabel) ? denominatorLabel : `fhir.ratio.denominator`
        ),
        type: `SINGLE_VALUE`,
        display: formatSystemValue(value2?.denominator)
      }
    ];
  };
  const reference$1 = ({ intl: intl2 }) => (label, value2) => {
    if (Array.isArray(value2)) {
      return {
        label: intl2.formatMessage({ id: label }),
        type: "MULTIPLE_VALUES",
        display: value2.map((x) => x.display).filter(isNonNullish)
      };
    }
    return {
      label: intl2.formatMessage({ id: label }),
      type: "REFERENCE_VALUE",
      display: value2?.display,
      reference: value2?.reference
    };
  };
  const string$1 = ({ intl: intl2 }) => (label, value2) => {
    if (Array.isArray(value2)) {
      return {
        label: intl2.formatMessage({ id: label }),
        type: "MULTIPLE_VALUES",
        display: value2.filter(isNonNullish)
      };
    }
    return {
      label: intl2.formatMessage({ id: label }),
      type: "SINGLE_VALUE",
      display: value2
    };
  };
  const unsignedInt$1 = ({ intl: intl2 }) => (label, value2) => {
    return {
      label: intl2.formatMessage({ id: label }),
      type: "SINGLE_VALUE",
      display: numberToString(value2)
    };
  };
  function getTypes(context) {
    return {
      annotation: annotation$1(context),
      boolean: boolean$1(context),
      code: code$1(context),
      codeableConcept: codeableConcept$1(context),
      coding: coding$1(context),
      date: date$1(context),
      dateTime: dateTime$1(context),
      instant: instant$1(context),
      duration: duration$1(context),
      identifier: identifier$1(context),
      period: period$1(context),
      quantity: quantity$1(context),
      range: range$1(context),
      ratio: ratio$1(context),
      reference: reference$1(context),
      string: string$1(context),
      decimal: decimal$1(context),
      integer: integer$1(context),
      integer64: integer64$1(context),
      unsignedInt: unsignedInt$1(context),
      positiveInt: positiveInt$1(context)
    };
  }
  const oneOfValueX$1 = (context) => (label, value2, prefix = "value") => {
    if (isNullish(value2)) {
      return [];
    }
    const typeUiFunctions = getTypes(context);
    let type;
    for (type in typeUiFunctions) {
      const key = `${prefix}${capitalizeFirstLetter(type)}`;
      if (key in value2 && isNonNullish(value2[key])) {
        const uiValue = typeUiFunctions[type](label, value2[key]);
        return Array.isArray(uiValue) ? uiValue : [uiValue];
      }
    }
    return [];
  };
  function valueWithUnit$1(value2, unit) {
    if (isNullish(value2)) return;
    const valueString = numberToString(value2);
    if (isNullish(unit)) return valueString;
    return `${valueString} ${unit}`;
  }
  function valueWithMaxValue(value2, maxValue) {
    if (isNullish(value2)) return;
    const valueString = numberToString(value2);
    if (isNullish(maxValue)) return valueString;
    return `${valueString} / ${numberToString(maxValue)}`;
  }
  const value = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    valueWithMaxValue,
    valueWithUnit: valueWithUnit$1
  }, Symbol.toStringTag, { value: "Module" }));
  const format = {
    ...value,
    ...date$3
  };
  const valueWithMax = ({ intl: intl2 }) => (label, value2, max2) => {
    return {
      label: intl2.formatMessage({ id: label }),
      display: format.valueWithMaxValue(value2, max2),
      type: "SINGLE_VALUE"
    };
  };
  const valueWithUnit = ({ intl: intl2 }) => (label, value2, unit) => {
    return {
      label: intl2.formatMessage({ id: label }),
      display: format.valueWithUnit(value2, unit),
      type: "SINGLE_VALUE"
    };
  };
  function getSpecial(context) {
    return {
      valueWithMax: valueWithMax(context),
      valueWithUnit: valueWithUnit(context),
      oneOfValueX: oneOfValueX$1(context),
      attachment: attachment$1(context)
    };
  }
  function getUi(context) {
    return {
      ...getTypes(context),
      ...getSpecial(context),
      helpers: {
        getChildren
      }
    };
  }
  function createSchemaContext(options) {
    const {
      resources = [],
      organization: organization2 = void 0,
      locale,
      ignoreMissingTranslations,
      isSummary
    } = options;
    const uiHelperContext = createUiHelperContext({ locale, ignoreMissingTranslations, isSummary });
    return {
      ...uiHelperContext,
      ui: getUi(uiHelperContext),
      resources,
      organization: organization2,
      isSummary
    };
  }
  function isMgoResource(value2) {
    const resourceTyped = value2;
    return !!resourceTyped?.resourceType && !!resourceTyped?.profile;
  }
  var FhirVersion = /* @__PURE__ */ ((FhirVersion2) => {
    FhirVersion2["R3"] = "R3";
    FhirVersion2["R4"] = "R4";
    return FhirVersion2;
  })(FhirVersion || {});
  var lodash$1 = { exports: {} };
  /**
   * @license
   * Lodash <https://lodash.com/>
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   */
  var lodash = lodash$1.exports;
  var hasRequiredLodash;
  function requireLodash() {
    if (hasRequiredLodash) return lodash$1.exports;
    hasRequiredLodash = 1;
    (function(module, exports2) {
      (function() {
        var undefined$1;
        var VERSION = "4.17.21";
        var LARGE_ARRAY_SIZE = 200;
        var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
        var HASH_UNDEFINED = "__lodash_hash_undefined__";
        var MAX_MEMOIZE_SIZE = 500;
        var PLACEHOLDER = "__lodash_placeholder__";
        var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
        var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
        var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
        var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
        var HOT_COUNT = 800, HOT_SPAN = 16;
        var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
        var INFINITY = 1 / 0, MAX_SAFE_INTEGER2 = 9007199254740991, MAX_INTEGER = 17976931348623157e292, NAN = 0 / 0;
        var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
        var wrapFlags = [
          ["ary", WRAP_ARY_FLAG],
          ["bind", WRAP_BIND_FLAG],
          ["bindKey", WRAP_BIND_KEY_FLAG],
          ["curry", WRAP_CURRY_FLAG],
          ["curryRight", WRAP_CURRY_RIGHT_FLAG],
          ["flip", WRAP_FLIP_FLAG],
          ["partial", WRAP_PARTIAL_FLAG],
          ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
          ["rearg", WRAP_REARG_FLAG]
        ];
        var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", domExcTag = "[object DOMException]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", promiseTag = "[object Promise]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]", weakSetTag = "[object WeakSet]";
        var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
        var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
        var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
        var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
        var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
        var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
        var reTrimStart = /^\s+/;
        var reWhitespace = /\s/;
        var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
        var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
        var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
        var reEscapeChar = /\\(\\)?/g;
        var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
        var reFlags = /\w*$/;
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
        var reIsBinary = /^0b[01]+$/i;
        var reIsHostCtor = /^\[object .+?Constructor\]$/;
        var reIsOctal = /^0o[0-7]+$/i;
        var reIsUint = /^(?:0|[1-9]\d*)$/;
        var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
        var reNoMatch = /($^)/;
        var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
        var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
        var rsApos = "['’]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
        var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
        var reApos = RegExp(rsApos, "g");
        var reComboMark = RegExp(rsCombo, "g");
        var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
        var reUnicodeWord = RegExp([
          rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
          rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
          rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
          rsUpper + "+" + rsOptContrUpper,
          rsOrdUpper,
          rsOrdLower,
          rsDigits,
          rsEmoji
        ].join("|"), "g");
        var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
        var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
        var contextProps = [
          "Array",
          "Buffer",
          "DataView",
          "Date",
          "Error",
          "Float32Array",
          "Float64Array",
          "Function",
          "Int8Array",
          "Int16Array",
          "Int32Array",
          "Map",
          "Math",
          "Object",
          "Promise",
          "RegExp",
          "Set",
          "String",
          "Symbol",
          "TypeError",
          "Uint8Array",
          "Uint8ClampedArray",
          "Uint16Array",
          "Uint32Array",
          "WeakMap",
          "_",
          "clearTimeout",
          "isFinite",
          "parseInt",
          "setTimeout"
        ];
        var templateCounter = -1;
        var typedArrayTags = {};
        typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
        typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
        var cloneableTags = {};
        cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
        cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
        var deburredLetters = {
          // Latin-1 Supplement block.
          "À": "A",
          "Á": "A",
          "Â": "A",
          "Ã": "A",
          "Ä": "A",
          "Å": "A",
          "à": "a",
          "á": "a",
          "â": "a",
          "ã": "a",
          "ä": "a",
          "å": "a",
          "Ç": "C",
          "ç": "c",
          "Ð": "D",
          "ð": "d",
          "È": "E",
          "É": "E",
          "Ê": "E",
          "Ë": "E",
          "è": "e",
          "é": "e",
          "ê": "e",
          "ë": "e",
          "Ì": "I",
          "Í": "I",
          "Î": "I",
          "Ï": "I",
          "ì": "i",
          "í": "i",
          "î": "i",
          "ï": "i",
          "Ñ": "N",
          "ñ": "n",
          "Ò": "O",
          "Ó": "O",
          "Ô": "O",
          "Õ": "O",
          "Ö": "O",
          "Ø": "O",
          "ò": "o",
          "ó": "o",
          "ô": "o",
          "õ": "o",
          "ö": "o",
          "ø": "o",
          "Ù": "U",
          "Ú": "U",
          "Û": "U",
          "Ü": "U",
          "ù": "u",
          "ú": "u",
          "û": "u",
          "ü": "u",
          "Ý": "Y",
          "ý": "y",
          "ÿ": "y",
          "Æ": "Ae",
          "æ": "ae",
          "Þ": "Th",
          "þ": "th",
          "ß": "ss",
          // Latin Extended-A block.
          "Ā": "A",
          "Ă": "A",
          "Ą": "A",
          "ā": "a",
          "ă": "a",
          "ą": "a",
          "Ć": "C",
          "Ĉ": "C",
          "Ċ": "C",
          "Č": "C",
          "ć": "c",
          "ĉ": "c",
          "ċ": "c",
          "č": "c",
          "Ď": "D",
          "Đ": "D",
          "ď": "d",
          "đ": "d",
          "Ē": "E",
          "Ĕ": "E",
          "Ė": "E",
          "Ę": "E",
          "Ě": "E",
          "ē": "e",
          "ĕ": "e",
          "ė": "e",
          "ę": "e",
          "ě": "e",
          "Ĝ": "G",
          "Ğ": "G",
          "Ġ": "G",
          "Ģ": "G",
          "ĝ": "g",
          "ğ": "g",
          "ġ": "g",
          "ģ": "g",
          "Ĥ": "H",
          "Ħ": "H",
          "ĥ": "h",
          "ħ": "h",
          "Ĩ": "I",
          "Ī": "I",
          "Ĭ": "I",
          "Į": "I",
          "İ": "I",
          "ĩ": "i",
          "ī": "i",
          "ĭ": "i",
          "į": "i",
          "ı": "i",
          "Ĵ": "J",
          "ĵ": "j",
          "Ķ": "K",
          "ķ": "k",
          "ĸ": "k",
          "Ĺ": "L",
          "Ļ": "L",
          "Ľ": "L",
          "Ŀ": "L",
          "Ł": "L",
          "ĺ": "l",
          "ļ": "l",
          "ľ": "l",
          "ŀ": "l",
          "ł": "l",
          "Ń": "N",
          "Ņ": "N",
          "Ň": "N",
          "Ŋ": "N",
          "ń": "n",
          "ņ": "n",
          "ň": "n",
          "ŋ": "n",
          "Ō": "O",
          "Ŏ": "O",
          "Ő": "O",
          "ō": "o",
          "ŏ": "o",
          "ő": "o",
          "Ŕ": "R",
          "Ŗ": "R",
          "Ř": "R",
          "ŕ": "r",
          "ŗ": "r",
          "ř": "r",
          "Ś": "S",
          "Ŝ": "S",
          "Ş": "S",
          "Š": "S",
          "ś": "s",
          "ŝ": "s",
          "ş": "s",
          "š": "s",
          "Ţ": "T",
          "Ť": "T",
          "Ŧ": "T",
          "ţ": "t",
          "ť": "t",
          "ŧ": "t",
          "Ũ": "U",
          "Ū": "U",
          "Ŭ": "U",
          "Ů": "U",
          "Ű": "U",
          "Ų": "U",
          "ũ": "u",
          "ū": "u",
          "ŭ": "u",
          "ů": "u",
          "ű": "u",
          "ų": "u",
          "Ŵ": "W",
          "ŵ": "w",
          "Ŷ": "Y",
          "ŷ": "y",
          "Ÿ": "Y",
          "Ź": "Z",
          "Ż": "Z",
          "Ž": "Z",
          "ź": "z",
          "ż": "z",
          "ž": "z",
          "Ĳ": "IJ",
          "ĳ": "ij",
          "Œ": "Oe",
          "œ": "oe",
          "ŉ": "'n",
          "ſ": "s"
        };
        var htmlEscapes = {
          "&": "&amp;",
          "<": "&lt;",
          ">": "&gt;",
          '"': "&quot;",
          "'": "&#39;"
        };
        var htmlUnescapes = {
          "&amp;": "&",
          "&lt;": "<",
          "&gt;": ">",
          "&quot;": '"',
          "&#39;": "'"
        };
        var stringEscapes = {
          "\\": "\\",
          "'": "'",
          "\n": "n",
          "\r": "r",
          "\u2028": "u2028",
          "\u2029": "u2029"
        };
        var freeParseFloat = parseFloat, freeParseInt = parseInt;
        var freeGlobal = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
        var freeSelf = typeof self == "object" && self && self.Object === Object && self;
        var root = freeGlobal || freeSelf || Function("return this")();
        var freeExports = exports2 && !exports2.nodeType && exports2;
        var freeModule = freeExports && true && module && !module.nodeType && module;
        var moduleExports = freeModule && freeModule.exports === freeExports;
        var freeProcess = moduleExports && freeGlobal.process;
        var nodeUtil = function() {
          try {
            var types2 = freeModule && freeModule.require && freeModule.require("util").types;
            if (types2) {
              return types2;
            }
            return freeProcess && freeProcess.binding && freeProcess.binding("util");
          } catch (e) {
          }
        }();
        var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
        function apply(func, thisArg, args) {
          switch (args.length) {
            case 0:
              return func.call(thisArg);
            case 1:
              return func.call(thisArg, args[0]);
            case 2:
              return func.call(thisArg, args[0], args[1]);
            case 3:
              return func.call(thisArg, args[0], args[1], args[2]);
          }
          return func.apply(thisArg, args);
        }
        function arrayAggregator(array, setter, iteratee, accumulator) {
          var index = -1, length = array == null ? 0 : array.length;
          while (++index < length) {
            var value2 = array[index];
            setter(accumulator, value2, iteratee(value2), array);
          }
          return accumulator;
        }
        function arrayEach(array, iteratee) {
          var index = -1, length = array == null ? 0 : array.length;
          while (++index < length) {
            if (iteratee(array[index], index, array) === false) {
              break;
            }
          }
          return array;
        }
        function arrayEachRight(array, iteratee) {
          var length = array == null ? 0 : array.length;
          while (length--) {
            if (iteratee(array[length], length, array) === false) {
              break;
            }
          }
          return array;
        }
        function arrayEvery(array, predicate) {
          var index = -1, length = array == null ? 0 : array.length;
          while (++index < length) {
            if (!predicate(array[index], index, array)) {
              return false;
            }
          }
          return true;
        }
        function arrayFilter(array, predicate) {
          var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
          while (++index < length) {
            var value2 = array[index];
            if (predicate(value2, index, array)) {
              result[resIndex++] = value2;
            }
          }
          return result;
        }
        function arrayIncludes(array, value2) {
          var length = array == null ? 0 : array.length;
          return !!length && baseIndexOf(array, value2, 0) > -1;
        }
        function arrayIncludesWith(array, value2, comparator) {
          var index = -1, length = array == null ? 0 : array.length;
          while (++index < length) {
            if (comparator(value2, array[index])) {
              return true;
            }
          }
          return false;
        }
        function arrayMap(array, iteratee) {
          var index = -1, length = array == null ? 0 : array.length, result = Array(length);
          while (++index < length) {
            result[index] = iteratee(array[index], index, array);
          }
          return result;
        }
        function arrayPush(array, values) {
          var index = -1, length = values.length, offset = array.length;
          while (++index < length) {
            array[offset + index] = values[index];
          }
          return array;
        }
        function arrayReduce(array, iteratee, accumulator, initAccum) {
          var index = -1, length = array == null ? 0 : array.length;
          if (initAccum && length) {
            accumulator = array[++index];
          }
          while (++index < length) {
            accumulator = iteratee(accumulator, array[index], index, array);
          }
          return accumulator;
        }
        function arrayReduceRight(array, iteratee, accumulator, initAccum) {
          var length = array == null ? 0 : array.length;
          if (initAccum && length) {
            accumulator = array[--length];
          }
          while (length--) {
            accumulator = iteratee(accumulator, array[length], length, array);
          }
          return accumulator;
        }
        function arraySome(array, predicate) {
          var index = -1, length = array == null ? 0 : array.length;
          while (++index < length) {
            if (predicate(array[index], index, array)) {
              return true;
            }
          }
          return false;
        }
        var asciiSize = baseProperty("length");
        function asciiToArray(string2) {
          return string2.split("");
        }
        function asciiWords(string2) {
          return string2.match(reAsciiWord) || [];
        }
        function baseFindKey(collection, predicate, eachFunc) {
          var result;
          eachFunc(collection, function(value2, key, collection2) {
            if (predicate(value2, key, collection2)) {
              result = key;
              return false;
            }
          });
          return result;
        }
        function baseFindIndex(array, predicate, fromIndex, fromRight) {
          var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
          while (fromRight ? index-- : ++index < length) {
            if (predicate(array[index], index, array)) {
              return index;
            }
          }
          return -1;
        }
        function baseIndexOf(array, value2, fromIndex) {
          return value2 === value2 ? strictIndexOf(array, value2, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
        }
        function baseIndexOfWith(array, value2, fromIndex, comparator) {
          var index = fromIndex - 1, length = array.length;
          while (++index < length) {
            if (comparator(array[index], value2)) {
              return index;
            }
          }
          return -1;
        }
        function baseIsNaN(value2) {
          return value2 !== value2;
        }
        function baseMean(array, iteratee) {
          var length = array == null ? 0 : array.length;
          return length ? baseSum(array, iteratee) / length : NAN;
        }
        function baseProperty(key) {
          return function(object) {
            return object == null ? undefined$1 : object[key];
          };
        }
        function basePropertyOf(object) {
          return function(key) {
            return object == null ? undefined$1 : object[key];
          };
        }
        function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
          eachFunc(collection, function(value2, index, collection2) {
            accumulator = initAccum ? (initAccum = false, value2) : iteratee(accumulator, value2, index, collection2);
          });
          return accumulator;
        }
        function baseSortBy(array, comparer) {
          var length = array.length;
          array.sort(comparer);
          while (length--) {
            array[length] = array[length].value;
          }
          return array;
        }
        function baseSum(array, iteratee) {
          var result, index = -1, length = array.length;
          while (++index < length) {
            var current = iteratee(array[index]);
            if (current !== undefined$1) {
              result = result === undefined$1 ? current : result + current;
            }
          }
          return result;
        }
        function baseTimes(n, iteratee) {
          var index = -1, result = Array(n);
          while (++index < n) {
            result[index] = iteratee(index);
          }
          return result;
        }
        function baseToPairs(object, props) {
          return arrayMap(props, function(key) {
            return [key, object[key]];
          });
        }
        function baseTrim(string2) {
          return string2 ? string2.slice(0, trimmedEndIndex(string2) + 1).replace(reTrimStart, "") : string2;
        }
        function baseUnary(func) {
          return function(value2) {
            return func(value2);
          };
        }
        function baseValues(object, props) {
          return arrayMap(props, function(key) {
            return object[key];
          });
        }
        function cacheHas(cache, key) {
          return cache.has(key);
        }
        function charsStartIndex(strSymbols, chrSymbols) {
          var index = -1, length = strSymbols.length;
          while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
          }
          return index;
        }
        function charsEndIndex(strSymbols, chrSymbols) {
          var index = strSymbols.length;
          while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
          }
          return index;
        }
        function countHolders(array, placeholder) {
          var length = array.length, result = 0;
          while (length--) {
            if (array[length] === placeholder) {
              ++result;
            }
          }
          return result;
        }
        var deburrLetter = basePropertyOf(deburredLetters);
        var escapeHtmlChar = basePropertyOf(htmlEscapes);
        function escapeStringChar(chr) {
          return "\\" + stringEscapes[chr];
        }
        function getValue(object, key) {
          return object == null ? undefined$1 : object[key];
        }
        function hasUnicode(string2) {
          return reHasUnicode.test(string2);
        }
        function hasUnicodeWord(string2) {
          return reHasUnicodeWord.test(string2);
        }
        function iteratorToArray(iterator) {
          var data2, result = [];
          while (!(data2 = iterator.next()).done) {
            result.push(data2.value);
          }
          return result;
        }
        function mapToArray(map2) {
          var index = -1, result = Array(map2.size);
          map2.forEach(function(value2, key) {
            result[++index] = [key, value2];
          });
          return result;
        }
        function overArg(func, transform) {
          return function(arg) {
            return func(transform(arg));
          };
        }
        function replaceHolders(array, placeholder) {
          var index = -1, length = array.length, resIndex = 0, result = [];
          while (++index < length) {
            var value2 = array[index];
            if (value2 === placeholder || value2 === PLACEHOLDER) {
              array[index] = PLACEHOLDER;
              result[resIndex++] = index;
            }
          }
          return result;
        }
        function setToArray(set) {
          var index = -1, result = Array(set.size);
          set.forEach(function(value2) {
            result[++index] = value2;
          });
          return result;
        }
        function setToPairs(set) {
          var index = -1, result = Array(set.size);
          set.forEach(function(value2) {
            result[++index] = [value2, value2];
          });
          return result;
        }
        function strictIndexOf(array, value2, fromIndex) {
          var index = fromIndex - 1, length = array.length;
          while (++index < length) {
            if (array[index] === value2) {
              return index;
            }
          }
          return -1;
        }
        function strictLastIndexOf(array, value2, fromIndex) {
          var index = fromIndex + 1;
          while (index--) {
            if (array[index] === value2) {
              return index;
            }
          }
          return index;
        }
        function stringSize(string2) {
          return hasUnicode(string2) ? unicodeSize(string2) : asciiSize(string2);
        }
        function stringToArray(string2) {
          return hasUnicode(string2) ? unicodeToArray(string2) : asciiToArray(string2);
        }
        function trimmedEndIndex(string2) {
          var index = string2.length;
          while (index-- && reWhitespace.test(string2.charAt(index))) {
          }
          return index;
        }
        var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
        function unicodeSize(string2) {
          var result = reUnicode.lastIndex = 0;
          while (reUnicode.test(string2)) {
            ++result;
          }
          return result;
        }
        function unicodeToArray(string2) {
          return string2.match(reUnicode) || [];
        }
        function unicodeWords(string2) {
          return string2.match(reUnicodeWord) || [];
        }
        var runInContext = function runInContext2(context) {
          context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
          var Array2 = context.Array, Date2 = context.Date, Error2 = context.Error, Function2 = context.Function, Math2 = context.Math, Object2 = context.Object, RegExp2 = context.RegExp, String2 = context.String, TypeError2 = context.TypeError;
          var arrayProto = Array2.prototype, funcProto = Function2.prototype, objectProto = Object2.prototype;
          var coreJsData = context["__core-js_shared__"];
          var funcToString = funcProto.toString;
          var hasOwnProperty = objectProto.hasOwnProperty;
          var idCounter = 0;
          var maskSrcKey = function() {
            var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
            return uid ? "Symbol(src)_1." + uid : "";
          }();
          var nativeObjectToString = objectProto.toString;
          var objectCtorString = funcToString.call(Object2);
          var oldDash = root._;
          var reIsNative = RegExp2(
            "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
          );
          var Buffer2 = moduleExports ? context.Buffer : undefined$1, Symbol2 = context.Symbol, Uint8Array2 = context.Uint8Array, allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : undefined$1, getPrototype = overArg(Object2.getPrototypeOf, Object2), objectCreate = Object2.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : undefined$1, symIterator = Symbol2 ? Symbol2.iterator : undefined$1, symToStringTag = Symbol2 ? Symbol2.toStringTag : undefined$1;
          var defineProperty2 = function() {
            try {
              var func = getNative(Object2, "defineProperty");
              func({}, "", {});
              return func;
            } catch (e) {
            }
          }();
          var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date2 && Date2.now !== root.Date.now && Date2.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
          var nativeCeil = Math2.ceil, nativeFloor = Math2.floor, nativeGetSymbols = Object2.getOwnPropertySymbols, nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : undefined$1, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object2.keys, Object2), nativeMax = Math2.max, nativeMin = Math2.min, nativeNow = Date2.now, nativeParseInt = context.parseInt, nativeRandom = Math2.random, nativeReverse = arrayProto.reverse;
          var DataView = getNative(context, "DataView"), Map = getNative(context, "Map"), Promise2 = getNative(context, "Promise"), Set2 = getNative(context, "Set"), WeakMap2 = getNative(context, "WeakMap"), nativeCreate = getNative(Object2, "create");
          var metaMap = WeakMap2 && new WeakMap2();
          var realNames = {};
          var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise2), setCtorString = toSource(Set2), weakMapCtorString = toSource(WeakMap2);
          var symbolProto = Symbol2 ? Symbol2.prototype : undefined$1, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined$1, symbolToString = symbolProto ? symbolProto.toString : undefined$1;
          function lodash2(value2) {
            if (isObjectLike(value2) && !isArray(value2) && !(value2 instanceof LazyWrapper)) {
              if (value2 instanceof LodashWrapper) {
                return value2;
              }
              if (hasOwnProperty.call(value2, "__wrapped__")) {
                return wrapperClone(value2);
              }
            }
            return new LodashWrapper(value2);
          }
          var baseCreate = /* @__PURE__ */ function() {
            function object() {
            }
            return function(proto) {
              if (!isObject2(proto)) {
                return {};
              }
              if (objectCreate) {
                return objectCreate(proto);
              }
              object.prototype = proto;
              var result2 = new object();
              object.prototype = undefined$1;
              return result2;
            };
          }();
          function baseLodash() {
          }
          function LodashWrapper(value2, chainAll) {
            this.__wrapped__ = value2;
            this.__actions__ = [];
            this.__chain__ = !!chainAll;
            this.__index__ = 0;
            this.__values__ = undefined$1;
          }
          lodash2.templateSettings = {
            /**
             * Used to detect `data` property values to be HTML-escaped.
             *
             * @memberOf _.templateSettings
             * @type {RegExp}
             */
            "escape": reEscape,
            /**
             * Used to detect code to be evaluated.
             *
             * @memberOf _.templateSettings
             * @type {RegExp}
             */
            "evaluate": reEvaluate,
            /**
             * Used to detect `data` property values to inject.
             *
             * @memberOf _.templateSettings
             * @type {RegExp}
             */
            "interpolate": reInterpolate,
            /**
             * Used to reference the data object in the template text.
             *
             * @memberOf _.templateSettings
             * @type {string}
             */
            "variable": "",
            /**
             * Used to import variables into the compiled template.
             *
             * @memberOf _.templateSettings
             * @type {Object}
             */
            "imports": {
              /**
               * A reference to the `lodash` function.
               *
               * @memberOf _.templateSettings.imports
               * @type {Function}
               */
              "_": lodash2
            }
          };
          lodash2.prototype = baseLodash.prototype;
          lodash2.prototype.constructor = lodash2;
          LodashWrapper.prototype = baseCreate(baseLodash.prototype);
          LodashWrapper.prototype.constructor = LodashWrapper;
          function LazyWrapper(value2) {
            this.__wrapped__ = value2;
            this.__actions__ = [];
            this.__dir__ = 1;
            this.__filtered__ = false;
            this.__iteratees__ = [];
            this.__takeCount__ = MAX_ARRAY_LENGTH;
            this.__views__ = [];
          }
          function lazyClone() {
            var result2 = new LazyWrapper(this.__wrapped__);
            result2.__actions__ = copyArray(this.__actions__);
            result2.__dir__ = this.__dir__;
            result2.__filtered__ = this.__filtered__;
            result2.__iteratees__ = copyArray(this.__iteratees__);
            result2.__takeCount__ = this.__takeCount__;
            result2.__views__ = copyArray(this.__views__);
            return result2;
          }
          function lazyReverse() {
            if (this.__filtered__) {
              var result2 = new LazyWrapper(this);
              result2.__dir__ = -1;
              result2.__filtered__ = true;
            } else {
              result2 = this.clone();
              result2.__dir__ *= -1;
            }
            return result2;
          }
          function lazyValue() {
            var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
            if (!isArr || !isRight && arrLength == length && takeCount == length) {
              return baseWrapperValue(array, this.__actions__);
            }
            var result2 = [];
            outer:
              while (length-- && resIndex < takeCount) {
                index += dir;
                var iterIndex = -1, value2 = array[index];
                while (++iterIndex < iterLength) {
                  var data2 = iteratees[iterIndex], iteratee2 = data2.iteratee, type = data2.type, computed = iteratee2(value2);
                  if (type == LAZY_MAP_FLAG) {
                    value2 = computed;
                  } else if (!computed) {
                    if (type == LAZY_FILTER_FLAG) {
                      continue outer;
                    } else {
                      break outer;
                    }
                  }
                }
                result2[resIndex++] = value2;
              }
            return result2;
          }
          LazyWrapper.prototype = baseCreate(baseLodash.prototype);
          LazyWrapper.prototype.constructor = LazyWrapper;
          function Hash(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }
          function hashClear() {
            this.__data__ = nativeCreate ? nativeCreate(null) : {};
            this.size = 0;
          }
          function hashDelete(key) {
            var result2 = this.has(key) && delete this.__data__[key];
            this.size -= result2 ? 1 : 0;
            return result2;
          }
          function hashGet(key) {
            var data2 = this.__data__;
            if (nativeCreate) {
              var result2 = data2[key];
              return result2 === HASH_UNDEFINED ? undefined$1 : result2;
            }
            return hasOwnProperty.call(data2, key) ? data2[key] : undefined$1;
          }
          function hashHas(key) {
            var data2 = this.__data__;
            return nativeCreate ? data2[key] !== undefined$1 : hasOwnProperty.call(data2, key);
          }
          function hashSet(key, value2) {
            var data2 = this.__data__;
            this.size += this.has(key) ? 0 : 1;
            data2[key] = nativeCreate && value2 === undefined$1 ? HASH_UNDEFINED : value2;
            return this;
          }
          Hash.prototype.clear = hashClear;
          Hash.prototype["delete"] = hashDelete;
          Hash.prototype.get = hashGet;
          Hash.prototype.has = hashHas;
          Hash.prototype.set = hashSet;
          function ListCache(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }
          function listCacheClear() {
            this.__data__ = [];
            this.size = 0;
          }
          function listCacheDelete(key) {
            var data2 = this.__data__, index = assocIndexOf(data2, key);
            if (index < 0) {
              return false;
            }
            var lastIndex = data2.length - 1;
            if (index == lastIndex) {
              data2.pop();
            } else {
              splice.call(data2, index, 1);
            }
            --this.size;
            return true;
          }
          function listCacheGet(key) {
            var data2 = this.__data__, index = assocIndexOf(data2, key);
            return index < 0 ? undefined$1 : data2[index][1];
          }
          function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1;
          }
          function listCacheSet(key, value2) {
            var data2 = this.__data__, index = assocIndexOf(data2, key);
            if (index < 0) {
              ++this.size;
              data2.push([key, value2]);
            } else {
              data2[index][1] = value2;
            }
            return this;
          }
          ListCache.prototype.clear = listCacheClear;
          ListCache.prototype["delete"] = listCacheDelete;
          ListCache.prototype.get = listCacheGet;
          ListCache.prototype.has = listCacheHas;
          ListCache.prototype.set = listCacheSet;
          function MapCache(entries) {
            var index = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }
          function mapCacheClear() {
            this.size = 0;
            this.__data__ = {
              "hash": new Hash(),
              "map": new (Map || ListCache)(),
              "string": new Hash()
            };
          }
          function mapCacheDelete(key) {
            var result2 = getMapData(this, key)["delete"](key);
            this.size -= result2 ? 1 : 0;
            return result2;
          }
          function mapCacheGet(key) {
            return getMapData(this, key).get(key);
          }
          function mapCacheHas(key) {
            return getMapData(this, key).has(key);
          }
          function mapCacheSet(key, value2) {
            var data2 = getMapData(this, key), size2 = data2.size;
            data2.set(key, value2);
            this.size += data2.size == size2 ? 0 : 1;
            return this;
          }
          MapCache.prototype.clear = mapCacheClear;
          MapCache.prototype["delete"] = mapCacheDelete;
          MapCache.prototype.get = mapCacheGet;
          MapCache.prototype.has = mapCacheHas;
          MapCache.prototype.set = mapCacheSet;
          function SetCache(values2) {
            var index = -1, length = values2 == null ? 0 : values2.length;
            this.__data__ = new MapCache();
            while (++index < length) {
              this.add(values2[index]);
            }
          }
          function setCacheAdd(value2) {
            this.__data__.set(value2, HASH_UNDEFINED);
            return this;
          }
          function setCacheHas(value2) {
            return this.__data__.has(value2);
          }
          SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
          SetCache.prototype.has = setCacheHas;
          function Stack(entries) {
            var data2 = this.__data__ = new ListCache(entries);
            this.size = data2.size;
          }
          function stackClear() {
            this.__data__ = new ListCache();
            this.size = 0;
          }
          function stackDelete(key) {
            var data2 = this.__data__, result2 = data2["delete"](key);
            this.size = data2.size;
            return result2;
          }
          function stackGet(key) {
            return this.__data__.get(key);
          }
          function stackHas(key) {
            return this.__data__.has(key);
          }
          function stackSet(key, value2) {
            var data2 = this.__data__;
            if (data2 instanceof ListCache) {
              var pairs = data2.__data__;
              if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
                pairs.push([key, value2]);
                this.size = ++data2.size;
                return this;
              }
              data2 = this.__data__ = new MapCache(pairs);
            }
            data2.set(key, value2);
            this.size = data2.size;
            return this;
          }
          Stack.prototype.clear = stackClear;
          Stack.prototype["delete"] = stackDelete;
          Stack.prototype.get = stackGet;
          Stack.prototype.has = stackHas;
          Stack.prototype.set = stackSet;
          function arrayLikeKeys(value2, inherited) {
            var isArr = isArray(value2), isArg = !isArr && isArguments(value2), isBuff = !isArr && !isArg && isBuffer(value2), isType = !isArr && !isArg && !isBuff && isTypedArray(value2), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes(value2.length, String2) : [], length = result2.length;
            for (var key in value2) {
              if ((inherited || hasOwnProperty.call(value2, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
              (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
              isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
              isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
              isIndex(key, length)))) {
                result2.push(key);
              }
            }
            return result2;
          }
          function arraySample(array) {
            var length = array.length;
            return length ? array[baseRandom(0, length - 1)] : undefined$1;
          }
          function arraySampleSize(array, n) {
            return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
          }
          function arrayShuffle(array) {
            return shuffleSelf(copyArray(array));
          }
          function assignMergeValue(object, key, value2) {
            if (value2 !== undefined$1 && !eq(object[key], value2) || value2 === undefined$1 && !(key in object)) {
              baseAssignValue(object, key, value2);
            }
          }
          function assignValue(object, key, value2) {
            var objValue = object[key];
            if (!(hasOwnProperty.call(object, key) && eq(objValue, value2)) || value2 === undefined$1 && !(key in object)) {
              baseAssignValue(object, key, value2);
            }
          }
          function assocIndexOf(array, key) {
            var length = array.length;
            while (length--) {
              if (eq(array[length][0], key)) {
                return length;
              }
            }
            return -1;
          }
          function baseAggregator(collection, setter, iteratee2, accumulator) {
            baseEach(collection, function(value2, key, collection2) {
              setter(accumulator, value2, iteratee2(value2), collection2);
            });
            return accumulator;
          }
          function baseAssign(object, source) {
            return object && copyObject(source, keys(source), object);
          }
          function baseAssignIn(object, source) {
            return object && copyObject(source, keysIn(source), object);
          }
          function baseAssignValue(object, key, value2) {
            if (key == "__proto__" && defineProperty2) {
              defineProperty2(object, key, {
                "configurable": true,
                "enumerable": true,
                "value": value2,
                "writable": true
              });
            } else {
              object[key] = value2;
            }
          }
          function baseAt(object, paths) {
            var index = -1, length = paths.length, result2 = Array2(length), skip = object == null;
            while (++index < length) {
              result2[index] = skip ? undefined$1 : get(object, paths[index]);
            }
            return result2;
          }
          function baseClamp(number, lower, upper) {
            if (number === number) {
              if (upper !== undefined$1) {
                number = number <= upper ? number : upper;
              }
              if (lower !== undefined$1) {
                number = number >= lower ? number : lower;
              }
            }
            return number;
          }
          function baseClone(value2, bitmask, customizer, key, object, stack) {
            var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
            if (customizer) {
              result2 = object ? customizer(value2, key, object, stack) : customizer(value2);
            }
            if (result2 !== undefined$1) {
              return result2;
            }
            if (!isObject2(value2)) {
              return value2;
            }
            var isArr = isArray(value2);
            if (isArr) {
              result2 = initCloneArray(value2);
              if (!isDeep) {
                return copyArray(value2, result2);
              }
            } else {
              var tag2 = getTag(value2), isFunc = tag2 == funcTag || tag2 == genTag;
              if (isBuffer(value2)) {
                return cloneBuffer(value2, isDeep);
              }
              if (tag2 == objectTag || tag2 == argsTag || isFunc && !object) {
                result2 = isFlat || isFunc ? {} : initCloneObject(value2);
                if (!isDeep) {
                  return isFlat ? copySymbolsIn(value2, baseAssignIn(result2, value2)) : copySymbols(value2, baseAssign(result2, value2));
                }
              } else {
                if (!cloneableTags[tag2]) {
                  return object ? value2 : {};
                }
                result2 = initCloneByTag(value2, tag2, isDeep);
              }
            }
            stack || (stack = new Stack());
            var stacked = stack.get(value2);
            if (stacked) {
              return stacked;
            }
            stack.set(value2, result2);
            if (isSet(value2)) {
              value2.forEach(function(subValue) {
                result2.add(baseClone(subValue, bitmask, customizer, subValue, value2, stack));
              });
            } else if (isMap(value2)) {
              value2.forEach(function(subValue, key2) {
                result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value2, stack));
              });
            }
            var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
            var props = isArr ? undefined$1 : keysFunc(value2);
            arrayEach(props || value2, function(subValue, key2) {
              if (props) {
                key2 = subValue;
                subValue = value2[key2];
              }
              assignValue(result2, key2, baseClone(subValue, bitmask, customizer, key2, value2, stack));
            });
            return result2;
          }
          function baseConforms(source) {
            var props = keys(source);
            return function(object) {
              return baseConformsTo(object, source, props);
            };
          }
          function baseConformsTo(object, source, props) {
            var length = props.length;
            if (object == null) {
              return !length;
            }
            object = Object2(object);
            while (length--) {
              var key = props[length], predicate = source[key], value2 = object[key];
              if (value2 === undefined$1 && !(key in object) || !predicate(value2)) {
                return false;
              }
            }
            return true;
          }
          function baseDelay(func, wait, args) {
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            return setTimeout(function() {
              func.apply(undefined$1, args);
            }, wait);
          }
          function baseDifference(array, values2, iteratee2, comparator) {
            var index = -1, includes2 = arrayIncludes, isCommon = true, length = array.length, result2 = [], valuesLength = values2.length;
            if (!length) {
              return result2;
            }
            if (iteratee2) {
              values2 = arrayMap(values2, baseUnary(iteratee2));
            }
            if (comparator) {
              includes2 = arrayIncludesWith;
              isCommon = false;
            } else if (values2.length >= LARGE_ARRAY_SIZE) {
              includes2 = cacheHas;
              isCommon = false;
              values2 = new SetCache(values2);
            }
            outer:
              while (++index < length) {
                var value2 = array[index], computed = iteratee2 == null ? value2 : iteratee2(value2);
                value2 = comparator || value2 !== 0 ? value2 : 0;
                if (isCommon && computed === computed) {
                  var valuesIndex = valuesLength;
                  while (valuesIndex--) {
                    if (values2[valuesIndex] === computed) {
                      continue outer;
                    }
                  }
                  result2.push(value2);
                } else if (!includes2(values2, computed, comparator)) {
                  result2.push(value2);
                }
              }
            return result2;
          }
          var baseEach = createBaseEach(baseForOwn);
          var baseEachRight = createBaseEach(baseForOwnRight, true);
          function baseEvery(collection, predicate) {
            var result2 = true;
            baseEach(collection, function(value2, index, collection2) {
              result2 = !!predicate(value2, index, collection2);
              return result2;
            });
            return result2;
          }
          function baseExtremum(array, iteratee2, comparator) {
            var index = -1, length = array.length;
            while (++index < length) {
              var value2 = array[index], current = iteratee2(value2);
              if (current != null && (computed === undefined$1 ? current === current && !isSymbol(current) : comparator(current, computed))) {
                var computed = current, result2 = value2;
              }
            }
            return result2;
          }
          function baseFill(array, value2, start, end) {
            var length = array.length;
            start = toInteger(start);
            if (start < 0) {
              start = -start > length ? 0 : length + start;
            }
            end = end === undefined$1 || end > length ? length : toInteger(end);
            if (end < 0) {
              end += length;
            }
            end = start > end ? 0 : toLength(end);
            while (start < end) {
              array[start++] = value2;
            }
            return array;
          }
          function baseFilter(collection, predicate) {
            var result2 = [];
            baseEach(collection, function(value2, index, collection2) {
              if (predicate(value2, index, collection2)) {
                result2.push(value2);
              }
            });
            return result2;
          }
          function baseFlatten(array, depth, predicate, isStrict, result2) {
            var index = -1, length = array.length;
            predicate || (predicate = isFlattenable);
            result2 || (result2 = []);
            while (++index < length) {
              var value2 = array[index];
              if (depth > 0 && predicate(value2)) {
                if (depth > 1) {
                  baseFlatten(value2, depth - 1, predicate, isStrict, result2);
                } else {
                  arrayPush(result2, value2);
                }
              } else if (!isStrict) {
                result2[result2.length] = value2;
              }
            }
            return result2;
          }
          var baseFor = createBaseFor();
          var baseForRight = createBaseFor(true);
          function baseForOwn(object, iteratee2) {
            return object && baseFor(object, iteratee2, keys);
          }
          function baseForOwnRight(object, iteratee2) {
            return object && baseForRight(object, iteratee2, keys);
          }
          function baseFunctions(object, props) {
            return arrayFilter(props, function(key) {
              return isFunction(object[key]);
            });
          }
          function baseGet(object, path) {
            path = castPath(path, object);
            var index = 0, length = path.length;
            while (object != null && index < length) {
              object = object[toKey(path[index++])];
            }
            return index && index == length ? object : undefined$1;
          }
          function baseGetAllKeys(object, keysFunc, symbolsFunc) {
            var result2 = keysFunc(object);
            return isArray(object) ? result2 : arrayPush(result2, symbolsFunc(object));
          }
          function baseGetTag(value2) {
            if (value2 == null) {
              return value2 === undefined$1 ? undefinedTag : nullTag;
            }
            return symToStringTag && symToStringTag in Object2(value2) ? getRawTag(value2) : objectToString(value2);
          }
          function baseGt(value2, other) {
            return value2 > other;
          }
          function baseHas(object, key) {
            return object != null && hasOwnProperty.call(object, key);
          }
          function baseHasIn(object, key) {
            return object != null && key in Object2(object);
          }
          function baseInRange(number, start, end) {
            return number >= nativeMin(start, end) && number < nativeMax(start, end);
          }
          function baseIntersection(arrays, iteratee2, comparator) {
            var includes2 = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array2(othLength), maxLength = Infinity, result2 = [];
            while (othIndex--) {
              var array = arrays[othIndex];
              if (othIndex && iteratee2) {
                array = arrayMap(array, baseUnary(iteratee2));
              }
              maxLength = nativeMin(array.length, maxLength);
              caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined$1;
            }
            array = arrays[0];
            var index = -1, seen = caches[0];
            outer:
              while (++index < length && result2.length < maxLength) {
                var value2 = array[index], computed = iteratee2 ? iteratee2(value2) : value2;
                value2 = comparator || value2 !== 0 ? value2 : 0;
                if (!(seen ? cacheHas(seen, computed) : includes2(result2, computed, comparator))) {
                  othIndex = othLength;
                  while (--othIndex) {
                    var cache = caches[othIndex];
                    if (!(cache ? cacheHas(cache, computed) : includes2(arrays[othIndex], computed, comparator))) {
                      continue outer;
                    }
                  }
                  if (seen) {
                    seen.push(computed);
                  }
                  result2.push(value2);
                }
              }
            return result2;
          }
          function baseInverter(object, setter, iteratee2, accumulator) {
            baseForOwn(object, function(value2, key, object2) {
              setter(accumulator, iteratee2(value2), key, object2);
            });
            return accumulator;
          }
          function baseInvoke(object, path, args) {
            path = castPath(path, object);
            object = parent(object, path);
            var func = object == null ? object : object[toKey(last(path))];
            return func == null ? undefined$1 : apply(func, object, args);
          }
          function baseIsArguments(value2) {
            return isObjectLike(value2) && baseGetTag(value2) == argsTag;
          }
          function baseIsArrayBuffer(value2) {
            return isObjectLike(value2) && baseGetTag(value2) == arrayBufferTag;
          }
          function baseIsDate(value2) {
            return isObjectLike(value2) && baseGetTag(value2) == dateTag;
          }
          function baseIsEqual(value2, other, bitmask, customizer, stack) {
            if (value2 === other) {
              return true;
            }
            if (value2 == null || other == null || !isObjectLike(value2) && !isObjectLike(other)) {
              return value2 !== value2 && other !== other;
            }
            return baseIsEqualDeep(value2, other, bitmask, customizer, baseIsEqual, stack);
          }
          function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
            var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
            objTag = objTag == argsTag ? objectTag : objTag;
            othTag = othTag == argsTag ? objectTag : othTag;
            var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
            if (isSameTag && isBuffer(object)) {
              if (!isBuffer(other)) {
                return false;
              }
              objIsArr = true;
              objIsObj = false;
            }
            if (isSameTag && !objIsObj) {
              stack || (stack = new Stack());
              return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
            }
            if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
              var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
              if (objIsWrapped || othIsWrapped) {
                var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
                stack || (stack = new Stack());
                return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
              }
            }
            if (!isSameTag) {
              return false;
            }
            stack || (stack = new Stack());
            return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
          }
          function baseIsMap(value2) {
            return isObjectLike(value2) && getTag(value2) == mapTag;
          }
          function baseIsMatch(object, source, matchData, customizer) {
            var index = matchData.length, length = index, noCustomizer = !customizer;
            if (object == null) {
              return !length;
            }
            object = Object2(object);
            while (index--) {
              var data2 = matchData[index];
              if (noCustomizer && data2[2] ? data2[1] !== object[data2[0]] : !(data2[0] in object)) {
                return false;
              }
            }
            while (++index < length) {
              data2 = matchData[index];
              var key = data2[0], objValue = object[key], srcValue = data2[1];
              if (noCustomizer && data2[2]) {
                if (objValue === undefined$1 && !(key in object)) {
                  return false;
                }
              } else {
                var stack = new Stack();
                if (customizer) {
                  var result2 = customizer(objValue, srcValue, key, object, source, stack);
                }
                if (!(result2 === undefined$1 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result2)) {
                  return false;
                }
              }
            }
            return true;
          }
          function baseIsNative(value2) {
            if (!isObject2(value2) || isMasked(value2)) {
              return false;
            }
            var pattern = isFunction(value2) ? reIsNative : reIsHostCtor;
            return pattern.test(toSource(value2));
          }
          function baseIsRegExp(value2) {
            return isObjectLike(value2) && baseGetTag(value2) == regexpTag;
          }
          function baseIsSet(value2) {
            return isObjectLike(value2) && getTag(value2) == setTag;
          }
          function baseIsTypedArray(value2) {
            return isObjectLike(value2) && isLength(value2.length) && !!typedArrayTags[baseGetTag(value2)];
          }
          function baseIteratee(value2) {
            if (typeof value2 == "function") {
              return value2;
            }
            if (value2 == null) {
              return identity;
            }
            if (typeof value2 == "object") {
              return isArray(value2) ? baseMatchesProperty(value2[0], value2[1]) : baseMatches(value2);
            }
            return property(value2);
          }
          function baseKeys(object) {
            if (!isPrototype(object)) {
              return nativeKeys(object);
            }
            var result2 = [];
            for (var key in Object2(object)) {
              if (hasOwnProperty.call(object, key) && key != "constructor") {
                result2.push(key);
              }
            }
            return result2;
          }
          function baseKeysIn(object) {
            if (!isObject2(object)) {
              return nativeKeysIn(object);
            }
            var isProto = isPrototype(object), result2 = [];
            for (var key in object) {
              if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) {
                result2.push(key);
              }
            }
            return result2;
          }
          function baseLt(value2, other) {
            return value2 < other;
          }
          function baseMap(collection, iteratee2) {
            var index = -1, result2 = isArrayLike(collection) ? Array2(collection.length) : [];
            baseEach(collection, function(value2, key, collection2) {
              result2[++index] = iteratee2(value2, key, collection2);
            });
            return result2;
          }
          function baseMatches(source) {
            var matchData = getMatchData(source);
            if (matchData.length == 1 && matchData[0][2]) {
              return matchesStrictComparable(matchData[0][0], matchData[0][1]);
            }
            return function(object) {
              return object === source || baseIsMatch(object, source, matchData);
            };
          }
          function baseMatchesProperty(path, srcValue) {
            if (isKey(path) && isStrictComparable(srcValue)) {
              return matchesStrictComparable(toKey(path), srcValue);
            }
            return function(object) {
              var objValue = get(object, path);
              return objValue === undefined$1 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
            };
          }
          function baseMerge(object, source, srcIndex, customizer, stack) {
            if (object === source) {
              return;
            }
            baseFor(source, function(srcValue, key) {
              stack || (stack = new Stack());
              if (isObject2(srcValue)) {
                baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
              } else {
                var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : undefined$1;
                if (newValue === undefined$1) {
                  newValue = srcValue;
                }
                assignMergeValue(object, key, newValue);
              }
            }, keysIn);
          }
          function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
            var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
            if (stacked) {
              assignMergeValue(object, key, stacked);
              return;
            }
            var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : undefined$1;
            var isCommon = newValue === undefined$1;
            if (isCommon) {
              var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
              newValue = srcValue;
              if (isArr || isBuff || isTyped) {
                if (isArray(objValue)) {
                  newValue = objValue;
                } else if (isArrayLikeObject(objValue)) {
                  newValue = copyArray(objValue);
                } else if (isBuff) {
                  isCommon = false;
                  newValue = cloneBuffer(srcValue, true);
                } else if (isTyped) {
                  isCommon = false;
                  newValue = cloneTypedArray(srcValue, true);
                } else {
                  newValue = [];
                }
              } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
                newValue = objValue;
                if (isArguments(objValue)) {
                  newValue = toPlainObject(objValue);
                } else if (!isObject2(objValue) || isFunction(objValue)) {
                  newValue = initCloneObject(srcValue);
                }
              } else {
                isCommon = false;
              }
            }
            if (isCommon) {
              stack.set(srcValue, newValue);
              mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
              stack["delete"](srcValue);
            }
            assignMergeValue(object, key, newValue);
          }
          function baseNth(array, n) {
            var length = array.length;
            if (!length) {
              return;
            }
            n += n < 0 ? length : 0;
            return isIndex(n, length) ? array[n] : undefined$1;
          }
          function baseOrderBy(collection, iteratees, orders) {
            if (iteratees.length) {
              iteratees = arrayMap(iteratees, function(iteratee2) {
                if (isArray(iteratee2)) {
                  return function(value2) {
                    return baseGet(value2, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
                  };
                }
                return iteratee2;
              });
            } else {
              iteratees = [identity];
            }
            var index = -1;
            iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
            var result2 = baseMap(collection, function(value2, key, collection2) {
              var criteria = arrayMap(iteratees, function(iteratee2) {
                return iteratee2(value2);
              });
              return { "criteria": criteria, "index": ++index, "value": value2 };
            });
            return baseSortBy(result2, function(object, other) {
              return compareMultiple(object, other, orders);
            });
          }
          function basePick(object, paths) {
            return basePickBy(object, paths, function(value2, path) {
              return hasIn(object, path);
            });
          }
          function basePickBy(object, paths, predicate) {
            var index = -1, length = paths.length, result2 = {};
            while (++index < length) {
              var path = paths[index], value2 = baseGet(object, path);
              if (predicate(value2, path)) {
                baseSet(result2, castPath(path, object), value2);
              }
            }
            return result2;
          }
          function basePropertyDeep(path) {
            return function(object) {
              return baseGet(object, path);
            };
          }
          function basePullAll(array, values2, iteratee2, comparator) {
            var indexOf2 = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values2.length, seen = array;
            if (array === values2) {
              values2 = copyArray(values2);
            }
            if (iteratee2) {
              seen = arrayMap(array, baseUnary(iteratee2));
            }
            while (++index < length) {
              var fromIndex = 0, value2 = values2[index], computed = iteratee2 ? iteratee2(value2) : value2;
              while ((fromIndex = indexOf2(seen, computed, fromIndex, comparator)) > -1) {
                if (seen !== array) {
                  splice.call(seen, fromIndex, 1);
                }
                splice.call(array, fromIndex, 1);
              }
            }
            return array;
          }
          function basePullAt(array, indexes) {
            var length = array ? indexes.length : 0, lastIndex = length - 1;
            while (length--) {
              var index = indexes[length];
              if (length == lastIndex || index !== previous) {
                var previous = index;
                if (isIndex(index)) {
                  splice.call(array, index, 1);
                } else {
                  baseUnset(array, index);
                }
              }
            }
            return array;
          }
          function baseRandom(lower, upper) {
            return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
          }
          function baseRange(start, end, step, fromRight) {
            var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result2 = Array2(length);
            while (length--) {
              result2[fromRight ? length : ++index] = start;
              start += step;
            }
            return result2;
          }
          function baseRepeat(string2, n) {
            var result2 = "";
            if (!string2 || n < 1 || n > MAX_SAFE_INTEGER2) {
              return result2;
            }
            do {
              if (n % 2) {
                result2 += string2;
              }
              n = nativeFloor(n / 2);
              if (n) {
                string2 += string2;
              }
            } while (n);
            return result2;
          }
          function baseRest(func, start) {
            return setToString(overRest(func, start, identity), func + "");
          }
          function baseSample(collection) {
            return arraySample(values(collection));
          }
          function baseSampleSize(collection, n) {
            var array = values(collection);
            return shuffleSelf(array, baseClamp(n, 0, array.length));
          }
          function baseSet(object, path, value2, customizer) {
            if (!isObject2(object)) {
              return object;
            }
            path = castPath(path, object);
            var index = -1, length = path.length, lastIndex = length - 1, nested = object;
            while (nested != null && ++index < length) {
              var key = toKey(path[index]), newValue = value2;
              if (key === "__proto__" || key === "constructor" || key === "prototype") {
                return object;
              }
              if (index != lastIndex) {
                var objValue = nested[key];
                newValue = customizer ? customizer(objValue, key, nested) : undefined$1;
                if (newValue === undefined$1) {
                  newValue = isObject2(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
                }
              }
              assignValue(nested, key, newValue);
              nested = nested[key];
            }
            return object;
          }
          var baseSetData = !metaMap ? identity : function(func, data2) {
            metaMap.set(func, data2);
            return func;
          };
          var baseSetToString = !defineProperty2 ? identity : function(func, string2) {
            return defineProperty2(func, "toString", {
              "configurable": true,
              "enumerable": false,
              "value": constant(string2),
              "writable": true
            });
          };
          function baseShuffle(collection) {
            return shuffleSelf(values(collection));
          }
          function baseSlice(array, start, end) {
            var index = -1, length = array.length;
            if (start < 0) {
              start = -start > length ? 0 : length + start;
            }
            end = end > length ? length : end;
            if (end < 0) {
              end += length;
            }
            length = start > end ? 0 : end - start >>> 0;
            start >>>= 0;
            var result2 = Array2(length);
            while (++index < length) {
              result2[index] = array[index + start];
            }
            return result2;
          }
          function baseSome(collection, predicate) {
            var result2;
            baseEach(collection, function(value2, index, collection2) {
              result2 = predicate(value2, index, collection2);
              return !result2;
            });
            return !!result2;
          }
          function baseSortedIndex(array, value2, retHighest) {
            var low = 0, high = array == null ? low : array.length;
            if (typeof value2 == "number" && value2 === value2 && high <= HALF_MAX_ARRAY_LENGTH) {
              while (low < high) {
                var mid = low + high >>> 1, computed = array[mid];
                if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value2 : computed < value2)) {
                  low = mid + 1;
                } else {
                  high = mid;
                }
              }
              return high;
            }
            return baseSortedIndexBy(array, value2, identity, retHighest);
          }
          function baseSortedIndexBy(array, value2, iteratee2, retHighest) {
            var low = 0, high = array == null ? 0 : array.length;
            if (high === 0) {
              return 0;
            }
            value2 = iteratee2(value2);
            var valIsNaN = value2 !== value2, valIsNull = value2 === null, valIsSymbol = isSymbol(value2), valIsUndefined = value2 === undefined$1;
            while (low < high) {
              var mid = nativeFloor((low + high) / 2), computed = iteratee2(array[mid]), othIsDefined = computed !== undefined$1, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);
              if (valIsNaN) {
                var setLow = retHighest || othIsReflexive;
              } else if (valIsUndefined) {
                setLow = othIsReflexive && (retHighest || othIsDefined);
              } else if (valIsNull) {
                setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
              } else if (valIsSymbol) {
                setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
              } else if (othIsNull || othIsSymbol) {
                setLow = false;
              } else {
                setLow = retHighest ? computed <= value2 : computed < value2;
              }
              if (setLow) {
                low = mid + 1;
              } else {
                high = mid;
              }
            }
            return nativeMin(high, MAX_ARRAY_INDEX);
          }
          function baseSortedUniq(array, iteratee2) {
            var index = -1, length = array.length, resIndex = 0, result2 = [];
            while (++index < length) {
              var value2 = array[index], computed = iteratee2 ? iteratee2(value2) : value2;
              if (!index || !eq(computed, seen)) {
                var seen = computed;
                result2[resIndex++] = value2 === 0 ? 0 : value2;
              }
            }
            return result2;
          }
          function baseToNumber(value2) {
            if (typeof value2 == "number") {
              return value2;
            }
            if (isSymbol(value2)) {
              return NAN;
            }
            return +value2;
          }
          function baseToString(value2) {
            if (typeof value2 == "string") {
              return value2;
            }
            if (isArray(value2)) {
              return arrayMap(value2, baseToString) + "";
            }
            if (isSymbol(value2)) {
              return symbolToString ? symbolToString.call(value2) : "";
            }
            var result2 = value2 + "";
            return result2 == "0" && 1 / value2 == -Infinity ? "-0" : result2;
          }
          function baseUniq(array, iteratee2, comparator) {
            var index = -1, includes2 = arrayIncludes, length = array.length, isCommon = true, result2 = [], seen = result2;
            if (comparator) {
              isCommon = false;
              includes2 = arrayIncludesWith;
            } else if (length >= LARGE_ARRAY_SIZE) {
              var set2 = iteratee2 ? null : createSet(array);
              if (set2) {
                return setToArray(set2);
              }
              isCommon = false;
              includes2 = cacheHas;
              seen = new SetCache();
            } else {
              seen = iteratee2 ? [] : result2;
            }
            outer:
              while (++index < length) {
                var value2 = array[index], computed = iteratee2 ? iteratee2(value2) : value2;
                value2 = comparator || value2 !== 0 ? value2 : 0;
                if (isCommon && computed === computed) {
                  var seenIndex = seen.length;
                  while (seenIndex--) {
                    if (seen[seenIndex] === computed) {
                      continue outer;
                    }
                  }
                  if (iteratee2) {
                    seen.push(computed);
                  }
                  result2.push(value2);
                } else if (!includes2(seen, computed, comparator)) {
                  if (seen !== result2) {
                    seen.push(computed);
                  }
                  result2.push(value2);
                }
              }
            return result2;
          }
          function baseUnset(object, path) {
            path = castPath(path, object);
            object = parent(object, path);
            return object == null || delete object[toKey(last(path))];
          }
          function baseUpdate(object, path, updater, customizer) {
            return baseSet(object, path, updater(baseGet(object, path)), customizer);
          }
          function baseWhile(array, predicate, isDrop, fromRight) {
            var length = array.length, index = fromRight ? length : -1;
            while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {
            }
            return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
          }
          function baseWrapperValue(value2, actions) {
            var result2 = value2;
            if (result2 instanceof LazyWrapper) {
              result2 = result2.value();
            }
            return arrayReduce(actions, function(result3, action) {
              return action.func.apply(action.thisArg, arrayPush([result3], action.args));
            }, result2);
          }
          function baseXor(arrays, iteratee2, comparator) {
            var length = arrays.length;
            if (length < 2) {
              return length ? baseUniq(arrays[0]) : [];
            }
            var index = -1, result2 = Array2(length);
            while (++index < length) {
              var array = arrays[index], othIndex = -1;
              while (++othIndex < length) {
                if (othIndex != index) {
                  result2[index] = baseDifference(result2[index] || array, arrays[othIndex], iteratee2, comparator);
                }
              }
            }
            return baseUniq(baseFlatten(result2, 1), iteratee2, comparator);
          }
          function baseZipObject(props, values2, assignFunc) {
            var index = -1, length = props.length, valsLength = values2.length, result2 = {};
            while (++index < length) {
              var value2 = index < valsLength ? values2[index] : undefined$1;
              assignFunc(result2, props[index], value2);
            }
            return result2;
          }
          function castArrayLikeObject(value2) {
            return isArrayLikeObject(value2) ? value2 : [];
          }
          function castFunction(value2) {
            return typeof value2 == "function" ? value2 : identity;
          }
          function castPath(value2, object) {
            if (isArray(value2)) {
              return value2;
            }
            return isKey(value2, object) ? [value2] : stringToPath(toString(value2));
          }
          var castRest = baseRest;
          function castSlice(array, start, end) {
            var length = array.length;
            end = end === undefined$1 ? length : end;
            return !start && end >= length ? array : baseSlice(array, start, end);
          }
          var clearTimeout = ctxClearTimeout || function(id) {
            return root.clearTimeout(id);
          };
          function cloneBuffer(buffer, isDeep) {
            if (isDeep) {
              return buffer.slice();
            }
            var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
            buffer.copy(result2);
            return result2;
          }
          function cloneArrayBuffer(arrayBuffer) {
            var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
            new Uint8Array2(result2).set(new Uint8Array2(arrayBuffer));
            return result2;
          }
          function cloneDataView(dataView, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
            return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
          }
          function cloneRegExp(regexp) {
            var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
            result2.lastIndex = regexp.lastIndex;
            return result2;
          }
          function cloneSymbol(symbol) {
            return symbolValueOf ? Object2(symbolValueOf.call(symbol)) : {};
          }
          function cloneTypedArray(typedArray, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
            return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
          }
          function compareAscending(value2, other) {
            if (value2 !== other) {
              var valIsDefined = value2 !== undefined$1, valIsNull = value2 === null, valIsReflexive = value2 === value2, valIsSymbol = isSymbol(value2);
              var othIsDefined = other !== undefined$1, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
              if (!othIsNull && !othIsSymbol && !valIsSymbol && value2 > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
                return 1;
              }
              if (!valIsNull && !valIsSymbol && !othIsSymbol && value2 < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
                return -1;
              }
            }
            return 0;
          }
          function compareMultiple(object, other, orders) {
            var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
            while (++index < length) {
              var result2 = compareAscending(objCriteria[index], othCriteria[index]);
              if (result2) {
                if (index >= ordersLength) {
                  return result2;
                }
                var order = orders[index];
                return result2 * (order == "desc" ? -1 : 1);
              }
            }
            return object.index - other.index;
          }
          function composeArgs(args, partials, holders, isCurried) {
            var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(leftLength + rangeLength), isUncurried = !isCurried;
            while (++leftIndex < leftLength) {
              result2[leftIndex] = partials[leftIndex];
            }
            while (++argsIndex < holdersLength) {
              if (isUncurried || argsIndex < argsLength) {
                result2[holders[argsIndex]] = args[argsIndex];
              }
            }
            while (rangeLength--) {
              result2[leftIndex++] = args[argsIndex++];
            }
            return result2;
          }
          function composeArgsRight(args, partials, holders, isCurried) {
            var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(rangeLength + rightLength), isUncurried = !isCurried;
            while (++argsIndex < rangeLength) {
              result2[argsIndex] = args[argsIndex];
            }
            var offset = argsIndex;
            while (++rightIndex < rightLength) {
              result2[offset + rightIndex] = partials[rightIndex];
            }
            while (++holdersIndex < holdersLength) {
              if (isUncurried || argsIndex < argsLength) {
                result2[offset + holders[holdersIndex]] = args[argsIndex++];
              }
            }
            return result2;
          }
          function copyArray(source, array) {
            var index = -1, length = source.length;
            array || (array = Array2(length));
            while (++index < length) {
              array[index] = source[index];
            }
            return array;
          }
          function copyObject(source, props, object, customizer) {
            var isNew = !object;
            object || (object = {});
            var index = -1, length = props.length;
            while (++index < length) {
              var key = props[index];
              var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined$1;
              if (newValue === undefined$1) {
                newValue = source[key];
              }
              if (isNew) {
                baseAssignValue(object, key, newValue);
              } else {
                assignValue(object, key, newValue);
              }
            }
            return object;
          }
          function copySymbols(source, object) {
            return copyObject(source, getSymbols(source), object);
          }
          function copySymbolsIn(source, object) {
            return copyObject(source, getSymbolsIn(source), object);
          }
          function createAggregator(setter, initializer) {
            return function(collection, iteratee2) {
              var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
              return func(collection, setter, getIteratee(iteratee2, 2), accumulator);
            };
          }
          function createAssigner(assigner) {
            return baseRest(function(object, sources) {
              var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined$1, guard = length > 2 ? sources[2] : undefined$1;
              customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : undefined$1;
              if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                customizer = length < 3 ? undefined$1 : customizer;
                length = 1;
              }
              object = Object2(object);
              while (++index < length) {
                var source = sources[index];
                if (source) {
                  assigner(object, source, index, customizer);
                }
              }
              return object;
            });
          }
          function createBaseEach(eachFunc, fromRight) {
            return function(collection, iteratee2) {
              if (collection == null) {
                return collection;
              }
              if (!isArrayLike(collection)) {
                return eachFunc(collection, iteratee2);
              }
              var length = collection.length, index = fromRight ? length : -1, iterable = Object2(collection);
              while (fromRight ? index-- : ++index < length) {
                if (iteratee2(iterable[index], index, iterable) === false) {
                  break;
                }
              }
              return collection;
            };
          }
          function createBaseFor(fromRight) {
            return function(object, iteratee2, keysFunc) {
              var index = -1, iterable = Object2(object), props = keysFunc(object), length = props.length;
              while (length--) {
                var key = props[fromRight ? length : ++index];
                if (iteratee2(iterable[key], key, iterable) === false) {
                  break;
                }
              }
              return object;
            };
          }
          function createBind(func, bitmask, thisArg) {
            var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
            function wrapper() {
              var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
              return fn.apply(isBind ? thisArg : this, arguments);
            }
            return wrapper;
          }
          function createCaseFirst(methodName) {
            return function(string2) {
              string2 = toString(string2);
              var strSymbols = hasUnicode(string2) ? stringToArray(string2) : undefined$1;
              var chr = strSymbols ? strSymbols[0] : string2.charAt(0);
              var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string2.slice(1);
              return chr[methodName]() + trailing;
            };
          }
          function createCompounder(callback) {
            return function(string2) {
              return arrayReduce(words(deburr(string2).replace(reApos, "")), callback, "");
            };
          }
          function createCtor(Ctor) {
            return function() {
              var args = arguments;
              switch (args.length) {
                case 0:
                  return new Ctor();
                case 1:
                  return new Ctor(args[0]);
                case 2:
                  return new Ctor(args[0], args[1]);
                case 3:
                  return new Ctor(args[0], args[1], args[2]);
                case 4:
                  return new Ctor(args[0], args[1], args[2], args[3]);
                case 5:
                  return new Ctor(args[0], args[1], args[2], args[3], args[4]);
                case 6:
                  return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
                case 7:
                  return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
              }
              var thisBinding = baseCreate(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
              return isObject2(result2) ? result2 : thisBinding;
            };
          }
          function createCurry(func, bitmask, arity) {
            var Ctor = createCtor(func);
            function wrapper() {
              var length = arguments.length, args = Array2(length), index = length, placeholder = getHolder(wrapper);
              while (index--) {
                args[index] = arguments[index];
              }
              var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
              length -= holders.length;
              if (length < arity) {
                return createRecurry(
                  func,
                  bitmask,
                  createHybrid,
                  wrapper.placeholder,
                  undefined$1,
                  args,
                  holders,
                  undefined$1,
                  undefined$1,
                  arity - length
                );
              }
              var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
              return apply(fn, this, args);
            }
            return wrapper;
          }
          function createFind(findIndexFunc) {
            return function(collection, predicate, fromIndex) {
              var iterable = Object2(collection);
              if (!isArrayLike(collection)) {
                var iteratee2 = getIteratee(predicate, 3);
                collection = keys(collection);
                predicate = function(key) {
                  return iteratee2(iterable[key], key, iterable);
                };
              }
              var index = findIndexFunc(collection, predicate, fromIndex);
              return index > -1 ? iterable[iteratee2 ? collection[index] : index] : undefined$1;
            };
          }
          function createFlow(fromRight) {
            return flatRest(function(funcs) {
              var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
              if (fromRight) {
                funcs.reverse();
              }
              while (index--) {
                var func = funcs[index];
                if (typeof func != "function") {
                  throw new TypeError2(FUNC_ERROR_TEXT);
                }
                if (prereq && !wrapper && getFuncName(func) == "wrapper") {
                  var wrapper = new LodashWrapper([], true);
                }
              }
              index = wrapper ? index : length;
              while (++index < length) {
                func = funcs[index];
                var funcName = getFuncName(func), data2 = funcName == "wrapper" ? getData(func) : undefined$1;
                if (data2 && isLaziable(data2[0]) && data2[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data2[4].length && data2[9] == 1) {
                  wrapper = wrapper[getFuncName(data2[0])].apply(wrapper, data2[3]);
                } else {
                  wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
                }
              }
              return function() {
                var args = arguments, value2 = args[0];
                if (wrapper && args.length == 1 && isArray(value2)) {
                  return wrapper.plant(value2).value();
                }
                var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value2;
                while (++index2 < length) {
                  result2 = funcs[index2].call(this, result2);
                }
                return result2;
              };
            });
          }
          function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
            var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined$1 : createCtor(func);
            function wrapper() {
              var length = arguments.length, args = Array2(length), index = length;
              while (index--) {
                args[index] = arguments[index];
              }
              if (isCurried) {
                var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
              }
              if (partials) {
                args = composeArgs(args, partials, holders, isCurried);
              }
              if (partialsRight) {
                args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
              }
              length -= holdersCount;
              if (isCurried && length < arity) {
                var newHolders = replaceHolders(args, placeholder);
                return createRecurry(
                  func,
                  bitmask,
                  createHybrid,
                  wrapper.placeholder,
                  thisArg,
                  args,
                  newHolders,
                  argPos,
                  ary2,
                  arity - length
                );
              }
              var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
              length = args.length;
              if (argPos) {
                args = reorder(args, argPos);
              } else if (isFlip && length > 1) {
                args.reverse();
              }
              if (isAry && ary2 < length) {
                args.length = ary2;
              }
              if (this && this !== root && this instanceof wrapper) {
                fn = Ctor || createCtor(fn);
              }
              return fn.apply(thisBinding, args);
            }
            return wrapper;
          }
          function createInverter(setter, toIteratee) {
            return function(object, iteratee2) {
              return baseInverter(object, setter, toIteratee(iteratee2), {});
            };
          }
          function createMathOperation(operator, defaultValue) {
            return function(value2, other) {
              var result2;
              if (value2 === undefined$1 && other === undefined$1) {
                return defaultValue;
              }
              if (value2 !== undefined$1) {
                result2 = value2;
              }
              if (other !== undefined$1) {
                if (result2 === undefined$1) {
                  return other;
                }
                if (typeof value2 == "string" || typeof other == "string") {
                  value2 = baseToString(value2);
                  other = baseToString(other);
                } else {
                  value2 = baseToNumber(value2);
                  other = baseToNumber(other);
                }
                result2 = operator(value2, other);
              }
              return result2;
            };
          }
          function createOver(arrayFunc) {
            return flatRest(function(iteratees) {
              iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
              return baseRest(function(args) {
                var thisArg = this;
                return arrayFunc(iteratees, function(iteratee2) {
                  return apply(iteratee2, thisArg, args);
                });
              });
            });
          }
          function createPadding(length, chars) {
            chars = chars === undefined$1 ? " " : baseToString(chars);
            var charsLength = chars.length;
            if (charsLength < 2) {
              return charsLength ? baseRepeat(chars, length) : chars;
            }
            var result2 = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
            return hasUnicode(chars) ? castSlice(stringToArray(result2), 0, length).join("") : result2.slice(0, length);
          }
          function createPartial(func, bitmask, thisArg, partials) {
            var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
            function wrapper() {
              var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array2(leftLength + argsLength), fn = this && this !== root && this instanceof wrapper ? Ctor : func;
              while (++leftIndex < leftLength) {
                args[leftIndex] = partials[leftIndex];
              }
              while (argsLength--) {
                args[leftIndex++] = arguments[++argsIndex];
              }
              return apply(fn, isBind ? thisArg : this, args);
            }
            return wrapper;
          }
          function createRange(fromRight) {
            return function(start, end, step) {
              if (step && typeof step != "number" && isIterateeCall(start, end, step)) {
                end = step = undefined$1;
              }
              start = toFinite(start);
              if (end === undefined$1) {
                end = start;
                start = 0;
              } else {
                end = toFinite(end);
              }
              step = step === undefined$1 ? start < end ? 1 : -1 : toFinite(step);
              return baseRange(start, end, step, fromRight);
            };
          }
          function createRelationalOperation(operator) {
            return function(value2, other) {
              if (!(typeof value2 == "string" && typeof other == "string")) {
                value2 = toNumber(value2);
                other = toNumber(other);
              }
              return operator(value2, other);
            };
          }
          function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
            var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined$1, newHoldersRight = isCurry ? undefined$1 : holders, newPartials = isCurry ? partials : undefined$1, newPartialsRight = isCurry ? undefined$1 : partials;
            bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
            bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
            if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
              bitmask &= -4;
            }
            var newData = [
              func,
              bitmask,
              thisArg,
              newPartials,
              newHolders,
              newPartialsRight,
              newHoldersRight,
              argPos,
              ary2,
              arity
            ];
            var result2 = wrapFunc.apply(undefined$1, newData);
            if (isLaziable(func)) {
              setData(result2, newData);
            }
            result2.placeholder = placeholder;
            return setWrapToString(result2, func, bitmask);
          }
          function createRound(methodName) {
            var func = Math2[methodName];
            return function(number, precision) {
              number = toNumber(number);
              precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
              if (precision && nativeIsFinite(number)) {
                var pair = (toString(number) + "e").split("e"), value2 = func(pair[0] + "e" + (+pair[1] + precision));
                pair = (toString(value2) + "e").split("e");
                return +(pair[0] + "e" + (+pair[1] - precision));
              }
              return func(number);
            };
          }
          var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY) ? noop : function(values2) {
            return new Set2(values2);
          };
          function createToPairs(keysFunc) {
            return function(object) {
              var tag2 = getTag(object);
              if (tag2 == mapTag) {
                return mapToArray(object);
              }
              if (tag2 == setTag) {
                return setToPairs(object);
              }
              return baseToPairs(object, keysFunc(object));
            };
          }
          function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
            var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
            if (!isBindKey && typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            var length = partials ? partials.length : 0;
            if (!length) {
              bitmask &= -97;
              partials = holders = undefined$1;
            }
            ary2 = ary2 === undefined$1 ? ary2 : nativeMax(toInteger(ary2), 0);
            arity = arity === undefined$1 ? arity : toInteger(arity);
            length -= holders ? holders.length : 0;
            if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
              var partialsRight = partials, holdersRight = holders;
              partials = holders = undefined$1;
            }
            var data2 = isBindKey ? undefined$1 : getData(func);
            var newData = [
              func,
              bitmask,
              thisArg,
              partials,
              holders,
              partialsRight,
              holdersRight,
              argPos,
              ary2,
              arity
            ];
            if (data2) {
              mergeData(newData, data2);
            }
            func = newData[0];
            bitmask = newData[1];
            thisArg = newData[2];
            partials = newData[3];
            holders = newData[4];
            arity = newData[9] = newData[9] === undefined$1 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
            if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
              bitmask &= -25;
            }
            if (!bitmask || bitmask == WRAP_BIND_FLAG) {
              var result2 = createBind(func, bitmask, thisArg);
            } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
              result2 = createCurry(func, bitmask, arity);
            } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
              result2 = createPartial(func, bitmask, thisArg, partials);
            } else {
              result2 = createHybrid.apply(undefined$1, newData);
            }
            var setter = data2 ? baseSetData : setData;
            return setWrapToString(setter(result2, newData), func, bitmask);
          }
          function customDefaultsAssignIn(objValue, srcValue, key, object) {
            if (objValue === undefined$1 || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
              return srcValue;
            }
            return objValue;
          }
          function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
            if (isObject2(objValue) && isObject2(srcValue)) {
              stack.set(srcValue, objValue);
              baseMerge(objValue, srcValue, undefined$1, customDefaultsMerge, stack);
              stack["delete"](srcValue);
            }
            return objValue;
          }
          function customOmitClone(value2) {
            return isPlainObject(value2) ? undefined$1 : value2;
          }
          function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
            if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
              return false;
            }
            var arrStacked = stack.get(array);
            var othStacked = stack.get(other);
            if (arrStacked && othStacked) {
              return arrStacked == other && othStacked == array;
            }
            var index = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined$1;
            stack.set(array, other);
            stack.set(other, array);
            while (++index < arrLength) {
              var arrValue = array[index], othValue = other[index];
              if (customizer) {
                var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
              }
              if (compared !== undefined$1) {
                if (compared) {
                  continue;
                }
                result2 = false;
                break;
              }
              if (seen) {
                if (!arraySome(other, function(othValue2, othIndex) {
                  if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                    return seen.push(othIndex);
                  }
                })) {
                  result2 = false;
                  break;
                }
              } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                result2 = false;
                break;
              }
            }
            stack["delete"](array);
            stack["delete"](other);
            return result2;
          }
          function equalByTag(object, other, tag2, bitmask, customizer, equalFunc, stack) {
            switch (tag2) {
              case dataViewTag:
                if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                  return false;
                }
                object = object.buffer;
                other = other.buffer;
              case arrayBufferTag:
                if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
                  return false;
                }
                return true;
              case boolTag:
              case dateTag:
              case numberTag:
                return eq(+object, +other);
              case errorTag:
                return object.name == other.name && object.message == other.message;
              case regexpTag:
              case stringTag:
                return object == other + "";
              case mapTag:
                var convert = mapToArray;
              case setTag:
                var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
                convert || (convert = setToArray);
                if (object.size != other.size && !isPartial) {
                  return false;
                }
                var stacked = stack.get(object);
                if (stacked) {
                  return stacked == other;
                }
                bitmask |= COMPARE_UNORDERED_FLAG;
                stack.set(object, other);
                var result2 = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                stack["delete"](object);
                return result2;
              case symbolTag:
                if (symbolValueOf) {
                  return symbolValueOf.call(object) == symbolValueOf.call(other);
                }
            }
            return false;
          }
          function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
            if (objLength != othLength && !isPartial) {
              return false;
            }
            var index = objLength;
            while (index--) {
              var key = objProps[index];
              if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
                return false;
              }
            }
            var objStacked = stack.get(object);
            var othStacked = stack.get(other);
            if (objStacked && othStacked) {
              return objStacked == other && othStacked == object;
            }
            var result2 = true;
            stack.set(object, other);
            stack.set(other, object);
            var skipCtor = isPartial;
            while (++index < objLength) {
              key = objProps[index];
              var objValue = object[key], othValue = other[key];
              if (customizer) {
                var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
              }
              if (!(compared === undefined$1 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                result2 = false;
                break;
              }
              skipCtor || (skipCtor = key == "constructor");
            }
            if (result2 && !skipCtor) {
              var objCtor = object.constructor, othCtor = other.constructor;
              if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
                result2 = false;
              }
            }
            stack["delete"](object);
            stack["delete"](other);
            return result2;
          }
          function flatRest(func) {
            return setToString(overRest(func, undefined$1, flatten), func + "");
          }
          function getAllKeys(object) {
            return baseGetAllKeys(object, keys, getSymbols);
          }
          function getAllKeysIn(object) {
            return baseGetAllKeys(object, keysIn, getSymbolsIn);
          }
          var getData = !metaMap ? noop : function(func) {
            return metaMap.get(func);
          };
          function getFuncName(func) {
            var result2 = func.name + "", array = realNames[result2], length = hasOwnProperty.call(realNames, result2) ? array.length : 0;
            while (length--) {
              var data2 = array[length], otherFunc = data2.func;
              if (otherFunc == null || otherFunc == func) {
                return data2.name;
              }
            }
            return result2;
          }
          function getHolder(func) {
            var object = hasOwnProperty.call(lodash2, "placeholder") ? lodash2 : func;
            return object.placeholder;
          }
          function getIteratee() {
            var result2 = lodash2.iteratee || iteratee;
            result2 = result2 === iteratee ? baseIteratee : result2;
            return arguments.length ? result2(arguments[0], arguments[1]) : result2;
          }
          function getMapData(map3, key) {
            var data2 = map3.__data__;
            return isKeyable(key) ? data2[typeof key == "string" ? "string" : "hash"] : data2.map;
          }
          function getMatchData(object) {
            var result2 = keys(object), length = result2.length;
            while (length--) {
              var key = result2[length], value2 = object[key];
              result2[length] = [key, value2, isStrictComparable(value2)];
            }
            return result2;
          }
          function getNative(object, key) {
            var value2 = getValue(object, key);
            return baseIsNative(value2) ? value2 : undefined$1;
          }
          function getRawTag(value2) {
            var isOwn = hasOwnProperty.call(value2, symToStringTag), tag2 = value2[symToStringTag];
            try {
              value2[symToStringTag] = undefined$1;
              var unmasked = true;
            } catch (e) {
            }
            var result2 = nativeObjectToString.call(value2);
            if (unmasked) {
              if (isOwn) {
                value2[symToStringTag] = tag2;
              } else {
                delete value2[symToStringTag];
              }
            }
            return result2;
          }
          var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
            if (object == null) {
              return [];
            }
            object = Object2(object);
            return arrayFilter(nativeGetSymbols(object), function(symbol) {
              return propertyIsEnumerable.call(object, symbol);
            });
          };
          var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
            var result2 = [];
            while (object) {
              arrayPush(result2, getSymbols(object));
              object = getPrototype(object);
            }
            return result2;
          };
          var getTag = baseGetTag;
          if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
            getTag = function(value2) {
              var result2 = baseGetTag(value2), Ctor = result2 == objectTag ? value2.constructor : undefined$1, ctorString = Ctor ? toSource(Ctor) : "";
              if (ctorString) {
                switch (ctorString) {
                  case dataViewCtorString:
                    return dataViewTag;
                  case mapCtorString:
                    return mapTag;
                  case promiseCtorString:
                    return promiseTag;
                  case setCtorString:
                    return setTag;
                  case weakMapCtorString:
                    return weakMapTag;
                }
              }
              return result2;
            };
          }
          function getView(start, end, transforms) {
            var index = -1, length = transforms.length;
            while (++index < length) {
              var data2 = transforms[index], size2 = data2.size;
              switch (data2.type) {
                case "drop":
                  start += size2;
                  break;
                case "dropRight":
                  end -= size2;
                  break;
                case "take":
                  end = nativeMin(end, start + size2);
                  break;
                case "takeRight":
                  start = nativeMax(start, end - size2);
                  break;
              }
            }
            return { "start": start, "end": end };
          }
          function getWrapDetails(source) {
            var match2 = source.match(reWrapDetails);
            return match2 ? match2[1].split(reSplitDetails) : [];
          }
          function hasPath(object, path, hasFunc) {
            path = castPath(path, object);
            var index = -1, length = path.length, result2 = false;
            while (++index < length) {
              var key = toKey(path[index]);
              if (!(result2 = object != null && hasFunc(object, key))) {
                break;
              }
              object = object[key];
            }
            if (result2 || ++index != length) {
              return result2;
            }
            length = object == null ? 0 : object.length;
            return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
          }
          function initCloneArray(array) {
            var length = array.length, result2 = new array.constructor(length);
            if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
              result2.index = array.index;
              result2.input = array.input;
            }
            return result2;
          }
          function initCloneObject(object) {
            return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
          }
          function initCloneByTag(object, tag2, isDeep) {
            var Ctor = object.constructor;
            switch (tag2) {
              case arrayBufferTag:
                return cloneArrayBuffer(object);
              case boolTag:
              case dateTag:
                return new Ctor(+object);
              case dataViewTag:
                return cloneDataView(object, isDeep);
              case float32Tag:
              case float64Tag:
              case int8Tag:
              case int16Tag:
              case int32Tag:
              case uint8Tag:
              case uint8ClampedTag:
              case uint16Tag:
              case uint32Tag:
                return cloneTypedArray(object, isDeep);
              case mapTag:
                return new Ctor();
              case numberTag:
              case stringTag:
                return new Ctor(object);
              case regexpTag:
                return cloneRegExp(object);
              case setTag:
                return new Ctor();
              case symbolTag:
                return cloneSymbol(object);
            }
          }
          function insertWrapDetails(source, details) {
            var length = details.length;
            if (!length) {
              return source;
            }
            var lastIndex = length - 1;
            details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
            details = details.join(length > 2 ? ", " : " ");
            return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
          }
          function isFlattenable(value2) {
            return isArray(value2) || isArguments(value2) || !!(spreadableSymbol && value2 && value2[spreadableSymbol]);
          }
          function isIndex(value2, length) {
            var type = typeof value2;
            length = length == null ? MAX_SAFE_INTEGER2 : length;
            return !!length && (type == "number" || type != "symbol" && reIsUint.test(value2)) && (value2 > -1 && value2 % 1 == 0 && value2 < length);
          }
          function isIterateeCall(value2, index, object) {
            if (!isObject2(object)) {
              return false;
            }
            var type = typeof index;
            if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
              return eq(object[index], value2);
            }
            return false;
          }
          function isKey(value2, object) {
            if (isArray(value2)) {
              return false;
            }
            var type = typeof value2;
            if (type == "number" || type == "symbol" || type == "boolean" || value2 == null || isSymbol(value2)) {
              return true;
            }
            return reIsPlainProp.test(value2) || !reIsDeepProp.test(value2) || object != null && value2 in Object2(object);
          }
          function isKeyable(value2) {
            var type = typeof value2;
            return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value2 !== "__proto__" : value2 === null;
          }
          function isLaziable(func) {
            var funcName = getFuncName(func), other = lodash2[funcName];
            if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) {
              return false;
            }
            if (func === other) {
              return true;
            }
            var data2 = getData(other);
            return !!data2 && func === data2[0];
          }
          function isMasked(func) {
            return !!maskSrcKey && maskSrcKey in func;
          }
          var isMaskable = coreJsData ? isFunction : stubFalse;
          function isPrototype(value2) {
            var Ctor = value2 && value2.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
            return value2 === proto;
          }
          function isStrictComparable(value2) {
            return value2 === value2 && !isObject2(value2);
          }
          function matchesStrictComparable(key, srcValue) {
            return function(object) {
              if (object == null) {
                return false;
              }
              return object[key] === srcValue && (srcValue !== undefined$1 || key in Object2(object));
            };
          }
          function memoizeCapped(func) {
            var result2 = memoize2(func, function(key) {
              if (cache.size === MAX_MEMOIZE_SIZE) {
                cache.clear();
              }
              return key;
            });
            var cache = result2.cache;
            return result2;
          }
          function mergeData(data2, source) {
            var bitmask = data2[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
            var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data2[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
            if (!(isCommon || isCombo)) {
              return data2;
            }
            if (srcBitmask & WRAP_BIND_FLAG) {
              data2[2] = source[2];
              newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
            }
            var value2 = source[3];
            if (value2) {
              var partials = data2[3];
              data2[3] = partials ? composeArgs(partials, value2, source[4]) : value2;
              data2[4] = partials ? replaceHolders(data2[3], PLACEHOLDER) : source[4];
            }
            value2 = source[5];
            if (value2) {
              partials = data2[5];
              data2[5] = partials ? composeArgsRight(partials, value2, source[6]) : value2;
              data2[6] = partials ? replaceHolders(data2[5], PLACEHOLDER) : source[6];
            }
            value2 = source[7];
            if (value2) {
              data2[7] = value2;
            }
            if (srcBitmask & WRAP_ARY_FLAG) {
              data2[8] = data2[8] == null ? source[8] : nativeMin(data2[8], source[8]);
            }
            if (data2[9] == null) {
              data2[9] = source[9];
            }
            data2[0] = source[0];
            data2[1] = newBitmask;
            return data2;
          }
          function nativeKeysIn(object) {
            var result2 = [];
            if (object != null) {
              for (var key in Object2(object)) {
                result2.push(key);
              }
            }
            return result2;
          }
          function objectToString(value2) {
            return nativeObjectToString.call(value2);
          }
          function overRest(func, start, transform2) {
            start = nativeMax(start === undefined$1 ? func.length - 1 : start, 0);
            return function() {
              var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array2(length);
              while (++index < length) {
                array[index] = args[start + index];
              }
              index = -1;
              var otherArgs = Array2(start + 1);
              while (++index < start) {
                otherArgs[index] = args[index];
              }
              otherArgs[start] = transform2(array);
              return apply(func, this, otherArgs);
            };
          }
          function parent(object, path) {
            return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
          }
          function reorder(array, indexes) {
            var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
            while (length--) {
              var index = indexes[length];
              array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined$1;
            }
            return array;
          }
          function safeGet(object, key) {
            if (key === "constructor" && typeof object[key] === "function") {
              return;
            }
            if (key == "__proto__") {
              return;
            }
            return object[key];
          }
          var setData = shortOut(baseSetData);
          var setTimeout = ctxSetTimeout || function(func, wait) {
            return root.setTimeout(func, wait);
          };
          var setToString = shortOut(baseSetToString);
          function setWrapToString(wrapper, reference2, bitmask) {
            var source = reference2 + "";
            return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
          }
          function shortOut(func) {
            var count = 0, lastCalled = 0;
            return function() {
              var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
              lastCalled = stamp;
              if (remaining > 0) {
                if (++count >= HOT_COUNT) {
                  return arguments[0];
                }
              } else {
                count = 0;
              }
              return func.apply(undefined$1, arguments);
            };
          }
          function shuffleSelf(array, size2) {
            var index = -1, length = array.length, lastIndex = length - 1;
            size2 = size2 === undefined$1 ? length : size2;
            while (++index < size2) {
              var rand = baseRandom(index, lastIndex), value2 = array[rand];
              array[rand] = array[index];
              array[index] = value2;
            }
            array.length = size2;
            return array;
          }
          var stringToPath = memoizeCapped(function(string2) {
            var result2 = [];
            if (string2.charCodeAt(0) === 46) {
              result2.push("");
            }
            string2.replace(rePropName, function(match2, number, quote, subString) {
              result2.push(quote ? subString.replace(reEscapeChar, "$1") : number || match2);
            });
            return result2;
          });
          function toKey(value2) {
            if (typeof value2 == "string" || isSymbol(value2)) {
              return value2;
            }
            var result2 = value2 + "";
            return result2 == "0" && 1 / value2 == -Infinity ? "-0" : result2;
          }
          function toSource(func) {
            if (func != null) {
              try {
                return funcToString.call(func);
              } catch (e) {
              }
              try {
                return func + "";
              } catch (e) {
              }
            }
            return "";
          }
          function updateWrapDetails(details, bitmask) {
            arrayEach(wrapFlags, function(pair) {
              var value2 = "_." + pair[0];
              if (bitmask & pair[1] && !arrayIncludes(details, value2)) {
                details.push(value2);
              }
            });
            return details.sort();
          }
          function wrapperClone(wrapper) {
            if (wrapper instanceof LazyWrapper) {
              return wrapper.clone();
            }
            var result2 = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
            result2.__actions__ = copyArray(wrapper.__actions__);
            result2.__index__ = wrapper.__index__;
            result2.__values__ = wrapper.__values__;
            return result2;
          }
          function chunk(array, size2, guard) {
            if (guard ? isIterateeCall(array, size2, guard) : size2 === undefined$1) {
              size2 = 1;
            } else {
              size2 = nativeMax(toInteger(size2), 0);
            }
            var length = array == null ? 0 : array.length;
            if (!length || size2 < 1) {
              return [];
            }
            var index = 0, resIndex = 0, result2 = Array2(nativeCeil(length / size2));
            while (index < length) {
              result2[resIndex++] = baseSlice(array, index, index += size2);
            }
            return result2;
          }
          function compact(array) {
            var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
            while (++index < length) {
              var value2 = array[index];
              if (value2) {
                result2[resIndex++] = value2;
              }
            }
            return result2;
          }
          function concat() {
            var length = arguments.length;
            if (!length) {
              return [];
            }
            var args = Array2(length - 1), array = arguments[0], index = length;
            while (index--) {
              args[index - 1] = arguments[index];
            }
            return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
          }
          var difference = baseRest(function(array, values2) {
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true)) : [];
          });
          var differenceBy = baseRest(function(array, values2) {
            var iteratee2 = last(values2);
            if (isArrayLikeObject(iteratee2)) {
              iteratee2 = undefined$1;
            }
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2)) : [];
          });
          var differenceWith = baseRest(function(array, values2) {
            var comparator = last(values2);
            if (isArrayLikeObject(comparator)) {
              comparator = undefined$1;
            }
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, true), undefined$1, comparator) : [];
          });
          function drop(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            n = guard || n === undefined$1 ? 1 : toInteger(n);
            return baseSlice(array, n < 0 ? 0 : n, length);
          }
          function dropRight(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            n = guard || n === undefined$1 ? 1 : toInteger(n);
            n = length - n;
            return baseSlice(array, 0, n < 0 ? 0 : n);
          }
          function dropRightWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
          }
          function dropWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
          }
          function fill(array, value2, start, end) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            if (start && typeof start != "number" && isIterateeCall(array, value2, start)) {
              start = 0;
              end = length;
            }
            return baseFill(array, value2, start, end);
          }
          function findIndex(array, predicate, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return -1;
            }
            var index = fromIndex == null ? 0 : toInteger(fromIndex);
            if (index < 0) {
              index = nativeMax(length + index, 0);
            }
            return baseFindIndex(array, getIteratee(predicate, 3), index);
          }
          function findLastIndex(array, predicate, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return -1;
            }
            var index = length - 1;
            if (fromIndex !== undefined$1) {
              index = toInteger(fromIndex);
              index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return baseFindIndex(array, getIteratee(predicate, 3), index, true);
          }
          function flatten(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseFlatten(array, 1) : [];
          }
          function flattenDeep(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseFlatten(array, INFINITY) : [];
          }
          function flattenDepth(array, depth) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            depth = depth === undefined$1 ? 1 : toInteger(depth);
            return baseFlatten(array, depth);
          }
          function fromPairs(pairs) {
            var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
            while (++index < length) {
              var pair = pairs[index];
              result2[pair[0]] = pair[1];
            }
            return result2;
          }
          function head(array) {
            return array && array.length ? array[0] : undefined$1;
          }
          function indexOf(array, value2, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return -1;
            }
            var index = fromIndex == null ? 0 : toInteger(fromIndex);
            if (index < 0) {
              index = nativeMax(length + index, 0);
            }
            return baseIndexOf(array, value2, index);
          }
          function initial(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseSlice(array, 0, -1) : [];
          }
          var intersection = baseRest(function(arrays) {
            var mapped = arrayMap(arrays, castArrayLikeObject);
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
          });
          var intersectionBy = baseRest(function(arrays) {
            var iteratee2 = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
            if (iteratee2 === last(mapped)) {
              iteratee2 = undefined$1;
            } else {
              mapped.pop();
            }
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee2, 2)) : [];
          });
          var intersectionWith = baseRest(function(arrays) {
            var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
            comparator = typeof comparator == "function" ? comparator : undefined$1;
            if (comparator) {
              mapped.pop();
            }
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined$1, comparator) : [];
          });
          function join(array, separator) {
            return array == null ? "" : nativeJoin.call(array, separator);
          }
          function last(array) {
            var length = array == null ? 0 : array.length;
            return length ? array[length - 1] : undefined$1;
          }
          function lastIndexOf(array, value2, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return -1;
            }
            var index = length;
            if (fromIndex !== undefined$1) {
              index = toInteger(fromIndex);
              index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return value2 === value2 ? strictLastIndexOf(array, value2, index) : baseFindIndex(array, baseIsNaN, index, true);
          }
          function nth(array, n) {
            return array && array.length ? baseNth(array, toInteger(n)) : undefined$1;
          }
          var pull = baseRest(pullAll);
          function pullAll(array, values2) {
            return array && array.length && values2 && values2.length ? basePullAll(array, values2) : array;
          }
          function pullAllBy(array, values2, iteratee2) {
            return array && array.length && values2 && values2.length ? basePullAll(array, values2, getIteratee(iteratee2, 2)) : array;
          }
          function pullAllWith(array, values2, comparator) {
            return array && array.length && values2 && values2.length ? basePullAll(array, values2, undefined$1, comparator) : array;
          }
          var pullAt = flatRest(function(array, indexes) {
            var length = array == null ? 0 : array.length, result2 = baseAt(array, indexes);
            basePullAt(array, arrayMap(indexes, function(index) {
              return isIndex(index, length) ? +index : index;
            }).sort(compareAscending));
            return result2;
          });
          function remove(array, predicate) {
            var result2 = [];
            if (!(array && array.length)) {
              return result2;
            }
            var index = -1, indexes = [], length = array.length;
            predicate = getIteratee(predicate, 3);
            while (++index < length) {
              var value2 = array[index];
              if (predicate(value2, index, array)) {
                result2.push(value2);
                indexes.push(index);
              }
            }
            basePullAt(array, indexes);
            return result2;
          }
          function reverse(array) {
            return array == null ? array : nativeReverse.call(array);
          }
          function slice(array, start, end) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            if (end && typeof end != "number" && isIterateeCall(array, start, end)) {
              start = 0;
              end = length;
            } else {
              start = start == null ? 0 : toInteger(start);
              end = end === undefined$1 ? length : toInteger(end);
            }
            return baseSlice(array, start, end);
          }
          function sortedIndex(array, value2) {
            return baseSortedIndex(array, value2);
          }
          function sortedIndexBy(array, value2, iteratee2) {
            return baseSortedIndexBy(array, value2, getIteratee(iteratee2, 2));
          }
          function sortedIndexOf(array, value2) {
            var length = array == null ? 0 : array.length;
            if (length) {
              var index = baseSortedIndex(array, value2);
              if (index < length && eq(array[index], value2)) {
                return index;
              }
            }
            return -1;
          }
          function sortedLastIndex(array, value2) {
            return baseSortedIndex(array, value2, true);
          }
          function sortedLastIndexBy(array, value2, iteratee2) {
            return baseSortedIndexBy(array, value2, getIteratee(iteratee2, 2), true);
          }
          function sortedLastIndexOf(array, value2) {
            var length = array == null ? 0 : array.length;
            if (length) {
              var index = baseSortedIndex(array, value2, true) - 1;
              if (eq(array[index], value2)) {
                return index;
              }
            }
            return -1;
          }
          function sortedUniq(array) {
            return array && array.length ? baseSortedUniq(array) : [];
          }
          function sortedUniqBy(array, iteratee2) {
            return array && array.length ? baseSortedUniq(array, getIteratee(iteratee2, 2)) : [];
          }
          function tail(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseSlice(array, 1, length) : [];
          }
          function take(array, n, guard) {
            if (!(array && array.length)) {
              return [];
            }
            n = guard || n === undefined$1 ? 1 : toInteger(n);
            return baseSlice(array, 0, n < 0 ? 0 : n);
          }
          function takeRight(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            n = guard || n === undefined$1 ? 1 : toInteger(n);
            n = length - n;
            return baseSlice(array, n < 0 ? 0 : n, length);
          }
          function takeRightWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
          }
          function takeWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
          }
          var union = baseRest(function(arrays) {
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
          });
          var unionBy = baseRest(function(arrays) {
            var iteratee2 = last(arrays);
            if (isArrayLikeObject(iteratee2)) {
              iteratee2 = undefined$1;
            }
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee2, 2));
          });
          var unionWith = baseRest(function(arrays) {
            var comparator = last(arrays);
            comparator = typeof comparator == "function" ? comparator : undefined$1;
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined$1, comparator);
          });
          function uniq(array) {
            return array && array.length ? baseUniq(array) : [];
          }
          function uniqBy(array, iteratee2) {
            return array && array.length ? baseUniq(array, getIteratee(iteratee2, 2)) : [];
          }
          function uniqWith(array, comparator) {
            comparator = typeof comparator == "function" ? comparator : undefined$1;
            return array && array.length ? baseUniq(array, undefined$1, comparator) : [];
          }
          function unzip(array) {
            if (!(array && array.length)) {
              return [];
            }
            var length = 0;
            array = arrayFilter(array, function(group) {
              if (isArrayLikeObject(group)) {
                length = nativeMax(group.length, length);
                return true;
              }
            });
            return baseTimes(length, function(index) {
              return arrayMap(array, baseProperty(index));
            });
          }
          function unzipWith(array, iteratee2) {
            if (!(array && array.length)) {
              return [];
            }
            var result2 = unzip(array);
            if (iteratee2 == null) {
              return result2;
            }
            return arrayMap(result2, function(group) {
              return apply(iteratee2, undefined$1, group);
            });
          }
          var without = baseRest(function(array, values2) {
            return isArrayLikeObject(array) ? baseDifference(array, values2) : [];
          });
          var xor = baseRest(function(arrays) {
            return baseXor(arrayFilter(arrays, isArrayLikeObject));
          });
          var xorBy = baseRest(function(arrays) {
            var iteratee2 = last(arrays);
            if (isArrayLikeObject(iteratee2)) {
              iteratee2 = undefined$1;
            }
            return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee2, 2));
          });
          var xorWith = baseRest(function(arrays) {
            var comparator = last(arrays);
            comparator = typeof comparator == "function" ? comparator : undefined$1;
            return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined$1, comparator);
          });
          var zip = baseRest(unzip);
          function zipObject(props, values2) {
            return baseZipObject(props || [], values2 || [], assignValue);
          }
          function zipObjectDeep(props, values2) {
            return baseZipObject(props || [], values2 || [], baseSet);
          }
          var zipWith = baseRest(function(arrays) {
            var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : undefined$1;
            iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : undefined$1;
            return unzipWith(arrays, iteratee2);
          });
          function chain(value2) {
            var result2 = lodash2(value2);
            result2.__chain__ = true;
            return result2;
          }
          function tap(value2, interceptor) {
            interceptor(value2);
            return value2;
          }
          function thru(value2, interceptor) {
            return interceptor(value2);
          }
          var wrapperAt = flatRest(function(paths) {
            var length = paths.length, start = length ? paths[0] : 0, value2 = this.__wrapped__, interceptor = function(object) {
              return baseAt(object, paths);
            };
            if (length > 1 || this.__actions__.length || !(value2 instanceof LazyWrapper) || !isIndex(start)) {
              return this.thru(interceptor);
            }
            value2 = value2.slice(start, +start + (length ? 1 : 0));
            value2.__actions__.push({
              "func": thru,
              "args": [interceptor],
              "thisArg": undefined$1
            });
            return new LodashWrapper(value2, this.__chain__).thru(function(array) {
              if (length && !array.length) {
                array.push(undefined$1);
              }
              return array;
            });
          });
          function wrapperChain() {
            return chain(this);
          }
          function wrapperCommit() {
            return new LodashWrapper(this.value(), this.__chain__);
          }
          function wrapperNext() {
            if (this.__values__ === undefined$1) {
              this.__values__ = toArray(this.value());
            }
            var done = this.__index__ >= this.__values__.length, value2 = done ? undefined$1 : this.__values__[this.__index__++];
            return { "done": done, "value": value2 };
          }
          function wrapperToIterator() {
            return this;
          }
          function wrapperPlant(value2) {
            var result2, parent2 = this;
            while (parent2 instanceof baseLodash) {
              var clone3 = wrapperClone(parent2);
              clone3.__index__ = 0;
              clone3.__values__ = undefined$1;
              if (result2) {
                previous.__wrapped__ = clone3;
              } else {
                result2 = clone3;
              }
              var previous = clone3;
              parent2 = parent2.__wrapped__;
            }
            previous.__wrapped__ = value2;
            return result2;
          }
          function wrapperReverse() {
            var value2 = this.__wrapped__;
            if (value2 instanceof LazyWrapper) {
              var wrapped = value2;
              if (this.__actions__.length) {
                wrapped = new LazyWrapper(this);
              }
              wrapped = wrapped.reverse();
              wrapped.__actions__.push({
                "func": thru,
                "args": [reverse],
                "thisArg": undefined$1
              });
              return new LodashWrapper(wrapped, this.__chain__);
            }
            return this.thru(reverse);
          }
          function wrapperValue() {
            return baseWrapperValue(this.__wrapped__, this.__actions__);
          }
          var countBy = createAggregator(function(result2, value2, key) {
            if (hasOwnProperty.call(result2, key)) {
              ++result2[key];
            } else {
              baseAssignValue(result2, key, 1);
            }
          });
          function every(collection, predicate, guard) {
            var func = isArray(collection) ? arrayEvery : baseEvery;
            if (guard && isIterateeCall(collection, predicate, guard)) {
              predicate = undefined$1;
            }
            return func(collection, getIteratee(predicate, 3));
          }
          function filter(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter;
            return func(collection, getIteratee(predicate, 3));
          }
          var find = createFind(findIndex);
          var findLast = createFind(findLastIndex);
          function flatMap(collection, iteratee2) {
            return baseFlatten(map2(collection, iteratee2), 1);
          }
          function flatMapDeep(collection, iteratee2) {
            return baseFlatten(map2(collection, iteratee2), INFINITY);
          }
          function flatMapDepth(collection, iteratee2, depth) {
            depth = depth === undefined$1 ? 1 : toInteger(depth);
            return baseFlatten(map2(collection, iteratee2), depth);
          }
          function forEach(collection, iteratee2) {
            var func = isArray(collection) ? arrayEach : baseEach;
            return func(collection, getIteratee(iteratee2, 3));
          }
          function forEachRight(collection, iteratee2) {
            var func = isArray(collection) ? arrayEachRight : baseEachRight;
            return func(collection, getIteratee(iteratee2, 3));
          }
          var groupBy = createAggregator(function(result2, value2, key) {
            if (hasOwnProperty.call(result2, key)) {
              result2[key].push(value2);
            } else {
              baseAssignValue(result2, key, [value2]);
            }
          });
          function includes(collection, value2, fromIndex, guard) {
            collection = isArrayLike(collection) ? collection : values(collection);
            fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
            var length = collection.length;
            if (fromIndex < 0) {
              fromIndex = nativeMax(length + fromIndex, 0);
            }
            return isString(collection) ? fromIndex <= length && collection.indexOf(value2, fromIndex) > -1 : !!length && baseIndexOf(collection, value2, fromIndex) > -1;
          }
          var invokeMap = baseRest(function(collection, path, args) {
            var index = -1, isFunc = typeof path == "function", result2 = isArrayLike(collection) ? Array2(collection.length) : [];
            baseEach(collection, function(value2) {
              result2[++index] = isFunc ? apply(path, value2, args) : baseInvoke(value2, path, args);
            });
            return result2;
          });
          var keyBy = createAggregator(function(result2, value2, key) {
            baseAssignValue(result2, key, value2);
          });
          function map2(collection, iteratee2) {
            var func = isArray(collection) ? arrayMap : baseMap;
            return func(collection, getIteratee(iteratee2, 3));
          }
          function orderBy(collection, iteratees, orders, guard) {
            if (collection == null) {
              return [];
            }
            if (!isArray(iteratees)) {
              iteratees = iteratees == null ? [] : [iteratees];
            }
            orders = guard ? undefined$1 : orders;
            if (!isArray(orders)) {
              orders = orders == null ? [] : [orders];
            }
            return baseOrderBy(collection, iteratees, orders);
          }
          var partition = createAggregator(function(result2, value2, key) {
            result2[key ? 0 : 1].push(value2);
          }, function() {
            return [[], []];
          });
          function reduce(collection, iteratee2, accumulator) {
            var func = isArray(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
            return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEach);
          }
          function reduceRight(collection, iteratee2, accumulator) {
            var func = isArray(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
            return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEachRight);
          }
          function reject(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter;
            return func(collection, negate(getIteratee(predicate, 3)));
          }
          function sample(collection) {
            var func = isArray(collection) ? arraySample : baseSample;
            return func(collection);
          }
          function sampleSize(collection, n, guard) {
            if (guard ? isIterateeCall(collection, n, guard) : n === undefined$1) {
              n = 1;
            } else {
              n = toInteger(n);
            }
            var func = isArray(collection) ? arraySampleSize : baseSampleSize;
            return func(collection, n);
          }
          function shuffle(collection) {
            var func = isArray(collection) ? arrayShuffle : baseShuffle;
            return func(collection);
          }
          function size(collection) {
            if (collection == null) {
              return 0;
            }
            if (isArrayLike(collection)) {
              return isString(collection) ? stringSize(collection) : collection.length;
            }
            var tag2 = getTag(collection);
            if (tag2 == mapTag || tag2 == setTag) {
              return collection.size;
            }
            return baseKeys(collection).length;
          }
          function some(collection, predicate, guard) {
            var func = isArray(collection) ? arraySome : baseSome;
            if (guard && isIterateeCall(collection, predicate, guard)) {
              predicate = undefined$1;
            }
            return func(collection, getIteratee(predicate, 3));
          }
          var sortBy = baseRest(function(collection, iteratees) {
            if (collection == null) {
              return [];
            }
            var length = iteratees.length;
            if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
              iteratees = [];
            } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
              iteratees = [iteratees[0]];
            }
            return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
          });
          var now2 = ctxNow || function() {
            return root.Date.now();
          };
          function after(n, func) {
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            n = toInteger(n);
            return function() {
              if (--n < 1) {
                return func.apply(this, arguments);
              }
            };
          }
          function ary(func, n, guard) {
            n = guard ? undefined$1 : n;
            n = func && n == null ? func.length : n;
            return createWrap(func, WRAP_ARY_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, n);
          }
          function before(n, func) {
            var result2;
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            n = toInteger(n);
            return function() {
              if (--n > 0) {
                result2 = func.apply(this, arguments);
              }
              if (n <= 1) {
                func = undefined$1;
              }
              return result2;
            };
          }
          var bind = baseRest(function(func, thisArg, partials) {
            var bitmask = WRAP_BIND_FLAG;
            if (partials.length) {
              var holders = replaceHolders(partials, getHolder(bind));
              bitmask |= WRAP_PARTIAL_FLAG;
            }
            return createWrap(func, bitmask, thisArg, partials, holders);
          });
          var bindKey = baseRest(function(object, key, partials) {
            var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
            if (partials.length) {
              var holders = replaceHolders(partials, getHolder(bindKey));
              bitmask |= WRAP_PARTIAL_FLAG;
            }
            return createWrap(key, bitmask, object, partials, holders);
          });
          function curry(func, arity, guard) {
            arity = guard ? undefined$1 : arity;
            var result2 = createWrap(func, WRAP_CURRY_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, undefined$1, arity);
            result2.placeholder = curry.placeholder;
            return result2;
          }
          function curryRight(func, arity, guard) {
            arity = guard ? undefined$1 : arity;
            var result2 = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, undefined$1, arity);
            result2.placeholder = curryRight.placeholder;
            return result2;
          }
          function debounce(func, wait, options) {
            var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            wait = toNumber(wait) || 0;
            if (isObject2(options)) {
              leading = !!options.leading;
              maxing = "maxWait" in options;
              maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
              trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            function invokeFunc(time) {
              var args = lastArgs, thisArg = lastThis;
              lastArgs = lastThis = undefined$1;
              lastInvokeTime = time;
              result2 = func.apply(thisArg, args);
              return result2;
            }
            function leadingEdge(time) {
              lastInvokeTime = time;
              timerId = setTimeout(timerExpired, wait);
              return leading ? invokeFunc(time) : result2;
            }
            function remainingWait(time) {
              var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
              return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
            }
            function shouldInvoke(time) {
              var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
              return lastCallTime === undefined$1 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
            }
            function timerExpired() {
              var time = now2();
              if (shouldInvoke(time)) {
                return trailingEdge(time);
              }
              timerId = setTimeout(timerExpired, remainingWait(time));
            }
            function trailingEdge(time) {
              timerId = undefined$1;
              if (trailing && lastArgs) {
                return invokeFunc(time);
              }
              lastArgs = lastThis = undefined$1;
              return result2;
            }
            function cancel() {
              if (timerId !== undefined$1) {
                clearTimeout(timerId);
              }
              lastInvokeTime = 0;
              lastArgs = lastCallTime = lastThis = timerId = undefined$1;
            }
            function flush() {
              return timerId === undefined$1 ? result2 : trailingEdge(now2());
            }
            function debounced() {
              var time = now2(), isInvoking = shouldInvoke(time);
              lastArgs = arguments;
              lastThis = this;
              lastCallTime = time;
              if (isInvoking) {
                if (timerId === undefined$1) {
                  return leadingEdge(lastCallTime);
                }
                if (maxing) {
                  clearTimeout(timerId);
                  timerId = setTimeout(timerExpired, wait);
                  return invokeFunc(lastCallTime);
                }
              }
              if (timerId === undefined$1) {
                timerId = setTimeout(timerExpired, wait);
              }
              return result2;
            }
            debounced.cancel = cancel;
            debounced.flush = flush;
            return debounced;
          }
          var defer = baseRest(function(func, args) {
            return baseDelay(func, 1, args);
          });
          var delay = baseRest(function(func, wait, args) {
            return baseDelay(func, toNumber(wait) || 0, args);
          });
          function flip(func) {
            return createWrap(func, WRAP_FLIP_FLAG);
          }
          function memoize2(func, resolver) {
            if (typeof func != "function" || resolver != null && typeof resolver != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            var memoized = function() {
              var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
              if (cache.has(key)) {
                return cache.get(key);
              }
              var result2 = func.apply(this, args);
              memoized.cache = cache.set(key, result2) || cache;
              return result2;
            };
            memoized.cache = new (memoize2.Cache || MapCache)();
            return memoized;
          }
          memoize2.Cache = MapCache;
          function negate(predicate) {
            if (typeof predicate != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            return function() {
              var args = arguments;
              switch (args.length) {
                case 0:
                  return !predicate.call(this);
                case 1:
                  return !predicate.call(this, args[0]);
                case 2:
                  return !predicate.call(this, args[0], args[1]);
                case 3:
                  return !predicate.call(this, args[0], args[1], args[2]);
              }
              return !predicate.apply(this, args);
            };
          }
          function once(func) {
            return before(2, func);
          }
          var overArgs = castRest(function(func, transforms) {
            transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
            var funcsLength = transforms.length;
            return baseRest(function(args) {
              var index = -1, length = nativeMin(args.length, funcsLength);
              while (++index < length) {
                args[index] = transforms[index].call(this, args[index]);
              }
              return apply(func, this, args);
            });
          });
          var partial = baseRest(function(func, partials) {
            var holders = replaceHolders(partials, getHolder(partial));
            return createWrap(func, WRAP_PARTIAL_FLAG, undefined$1, partials, holders);
          });
          var partialRight = baseRest(function(func, partials) {
            var holders = replaceHolders(partials, getHolder(partialRight));
            return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined$1, partials, holders);
          });
          var rearg = flatRest(function(func, indexes) {
            return createWrap(func, WRAP_REARG_FLAG, undefined$1, undefined$1, undefined$1, indexes);
          });
          function rest(func, start) {
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            start = start === undefined$1 ? start : toInteger(start);
            return baseRest(func, start);
          }
          function spread(func, start) {
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            start = start == null ? 0 : nativeMax(toInteger(start), 0);
            return baseRest(function(args) {
              var array = args[start], otherArgs = castSlice(args, 0, start);
              if (array) {
                arrayPush(otherArgs, array);
              }
              return apply(func, this, otherArgs);
            });
          }
          function throttle(func, wait, options) {
            var leading = true, trailing = true;
            if (typeof func != "function") {
              throw new TypeError2(FUNC_ERROR_TEXT);
            }
            if (isObject2(options)) {
              leading = "leading" in options ? !!options.leading : leading;
              trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            return debounce(func, wait, {
              "leading": leading,
              "maxWait": wait,
              "trailing": trailing
            });
          }
          function unary(func) {
            return ary(func, 1);
          }
          function wrap(value2, wrapper) {
            return partial(castFunction(wrapper), value2);
          }
          function castArray() {
            if (!arguments.length) {
              return [];
            }
            var value2 = arguments[0];
            return isArray(value2) ? value2 : [value2];
          }
          function clone2(value2) {
            return baseClone(value2, CLONE_SYMBOLS_FLAG);
          }
          function cloneWith(value2, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined$1;
            return baseClone(value2, CLONE_SYMBOLS_FLAG, customizer);
          }
          function cloneDeep(value2) {
            return baseClone(value2, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
          }
          function cloneDeepWith(value2, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined$1;
            return baseClone(value2, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
          }
          function conformsTo(object, source) {
            return source == null || baseConformsTo(object, source, keys(source));
          }
          function eq(value2, other) {
            return value2 === other || value2 !== value2 && other !== other;
          }
          var gt = createRelationalOperation(baseGt);
          var gte = createRelationalOperation(function(value2, other) {
            return value2 >= other;
          });
          var isArguments = baseIsArguments(/* @__PURE__ */ function() {
            return arguments;
          }()) ? baseIsArguments : function(value2) {
            return isObjectLike(value2) && hasOwnProperty.call(value2, "callee") && !propertyIsEnumerable.call(value2, "callee");
          };
          var isArray = Array2.isArray;
          var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
          function isArrayLike(value2) {
            return value2 != null && isLength(value2.length) && !isFunction(value2);
          }
          function isArrayLikeObject(value2) {
            return isObjectLike(value2) && isArrayLike(value2);
          }
          function isBoolean(value2) {
            return value2 === true || value2 === false || isObjectLike(value2) && baseGetTag(value2) == boolTag;
          }
          var isBuffer = nativeIsBuffer || stubFalse;
          var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
          function isElement(value2) {
            return isObjectLike(value2) && value2.nodeType === 1 && !isPlainObject(value2);
          }
          function isEmpty(value2) {
            if (value2 == null) {
              return true;
            }
            if (isArrayLike(value2) && (isArray(value2) || typeof value2 == "string" || typeof value2.splice == "function" || isBuffer(value2) || isTypedArray(value2) || isArguments(value2))) {
              return !value2.length;
            }
            var tag2 = getTag(value2);
            if (tag2 == mapTag || tag2 == setTag) {
              return !value2.size;
            }
            if (isPrototype(value2)) {
              return !baseKeys(value2).length;
            }
            for (var key in value2) {
              if (hasOwnProperty.call(value2, key)) {
                return false;
              }
            }
            return true;
          }
          function isEqual(value2, other) {
            return baseIsEqual(value2, other);
          }
          function isEqualWith(value2, other, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined$1;
            var result2 = customizer ? customizer(value2, other) : undefined$1;
            return result2 === undefined$1 ? baseIsEqual(value2, other, undefined$1, customizer) : !!result2;
          }
          function isError(value2) {
            if (!isObjectLike(value2)) {
              return false;
            }
            var tag2 = baseGetTag(value2);
            return tag2 == errorTag || tag2 == domExcTag || typeof value2.message == "string" && typeof value2.name == "string" && !isPlainObject(value2);
          }
          function isFinite2(value2) {
            return typeof value2 == "number" && nativeIsFinite(value2);
          }
          function isFunction(value2) {
            if (!isObject2(value2)) {
              return false;
            }
            var tag2 = baseGetTag(value2);
            return tag2 == funcTag || tag2 == genTag || tag2 == asyncTag || tag2 == proxyTag;
          }
          function isInteger2(value2) {
            return typeof value2 == "number" && value2 == toInteger(value2);
          }
          function isLength(value2) {
            return typeof value2 == "number" && value2 > -1 && value2 % 1 == 0 && value2 <= MAX_SAFE_INTEGER2;
          }
          function isObject2(value2) {
            var type = typeof value2;
            return value2 != null && (type == "object" || type == "function");
          }
          function isObjectLike(value2) {
            return value2 != null && typeof value2 == "object";
          }
          var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
          function isMatch(object, source) {
            return object === source || baseIsMatch(object, source, getMatchData(source));
          }
          function isMatchWith(object, source, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined$1;
            return baseIsMatch(object, source, getMatchData(source), customizer);
          }
          function isNaN2(value2) {
            return isNumber2(value2) && value2 != +value2;
          }
          function isNative(value2) {
            if (isMaskable(value2)) {
              throw new Error2(CORE_ERROR_TEXT);
            }
            return baseIsNative(value2);
          }
          function isNull(value2) {
            return value2 === null;
          }
          function isNil(value2) {
            return value2 == null;
          }
          function isNumber2(value2) {
            return typeof value2 == "number" || isObjectLike(value2) && baseGetTag(value2) == numberTag;
          }
          function isPlainObject(value2) {
            if (!isObjectLike(value2) || baseGetTag(value2) != objectTag) {
              return false;
            }
            var proto = getPrototype(value2);
            if (proto === null) {
              return true;
            }
            var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
            return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
          }
          var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
          function isSafeInteger2(value2) {
            return isInteger2(value2) && value2 >= -9007199254740991 && value2 <= MAX_SAFE_INTEGER2;
          }
          var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
          function isString(value2) {
            return typeof value2 == "string" || !isArray(value2) && isObjectLike(value2) && baseGetTag(value2) == stringTag;
          }
          function isSymbol(value2) {
            return typeof value2 == "symbol" || isObjectLike(value2) && baseGetTag(value2) == symbolTag;
          }
          var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
          function isUndefined(value2) {
            return value2 === undefined$1;
          }
          function isWeakMap(value2) {
            return isObjectLike(value2) && getTag(value2) == weakMapTag;
          }
          function isWeakSet(value2) {
            return isObjectLike(value2) && baseGetTag(value2) == weakSetTag;
          }
          var lt = createRelationalOperation(baseLt);
          var lte = createRelationalOperation(function(value2, other) {
            return value2 <= other;
          });
          function toArray(value2) {
            if (!value2) {
              return [];
            }
            if (isArrayLike(value2)) {
              return isString(value2) ? stringToArray(value2) : copyArray(value2);
            }
            if (symIterator && value2[symIterator]) {
              return iteratorToArray(value2[symIterator]());
            }
            var tag2 = getTag(value2), func = tag2 == mapTag ? mapToArray : tag2 == setTag ? setToArray : values;
            return func(value2);
          }
          function toFinite(value2) {
            if (!value2) {
              return value2 === 0 ? value2 : 0;
            }
            value2 = toNumber(value2);
            if (value2 === INFINITY || value2 === -Infinity) {
              var sign2 = value2 < 0 ? -1 : 1;
              return sign2 * MAX_INTEGER;
            }
            return value2 === value2 ? value2 : 0;
          }
          function toInteger(value2) {
            var result2 = toFinite(value2), remainder = result2 % 1;
            return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
          }
          function toLength(value2) {
            return value2 ? baseClamp(toInteger(value2), 0, MAX_ARRAY_LENGTH) : 0;
          }
          function toNumber(value2) {
            if (typeof value2 == "number") {
              return value2;
            }
            if (isSymbol(value2)) {
              return NAN;
            }
            if (isObject2(value2)) {
              var other = typeof value2.valueOf == "function" ? value2.valueOf() : value2;
              value2 = isObject2(other) ? other + "" : other;
            }
            if (typeof value2 != "string") {
              return value2 === 0 ? value2 : +value2;
            }
            value2 = baseTrim(value2);
            var isBinary2 = reIsBinary.test(value2);
            return isBinary2 || reIsOctal.test(value2) ? freeParseInt(value2.slice(2), isBinary2 ? 2 : 8) : reIsBadHex.test(value2) ? NAN : +value2;
          }
          function toPlainObject(value2) {
            return copyObject(value2, keysIn(value2));
          }
          function toSafeInteger(value2) {
            return value2 ? baseClamp(toInteger(value2), -9007199254740991, MAX_SAFE_INTEGER2) : value2 === 0 ? value2 : 0;
          }
          function toString(value2) {
            return value2 == null ? "" : baseToString(value2);
          }
          var assign = createAssigner(function(object, source) {
            if (isPrototype(source) || isArrayLike(source)) {
              copyObject(source, keys(source), object);
              return;
            }
            for (var key in source) {
              if (hasOwnProperty.call(source, key)) {
                assignValue(object, key, source[key]);
              }
            }
          });
          var assignIn = createAssigner(function(object, source) {
            copyObject(source, keysIn(source), object);
          });
          var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
            copyObject(source, keysIn(source), object, customizer);
          });
          var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
            copyObject(source, keys(source), object, customizer);
          });
          var at = flatRest(baseAt);
          function create(prototype, properties) {
            var result2 = baseCreate(prototype);
            return properties == null ? result2 : baseAssign(result2, properties);
          }
          var defaults = baseRest(function(object, sources) {
            object = Object2(object);
            var index = -1;
            var length = sources.length;
            var guard = length > 2 ? sources[2] : undefined$1;
            if (guard && isIterateeCall(sources[0], sources[1], guard)) {
              length = 1;
            }
            while (++index < length) {
              var source = sources[index];
              var props = keysIn(source);
              var propsIndex = -1;
              var propsLength = props.length;
              while (++propsIndex < propsLength) {
                var key = props[propsIndex];
                var value2 = object[key];
                if (value2 === undefined$1 || eq(value2, objectProto[key]) && !hasOwnProperty.call(object, key)) {
                  object[key] = source[key];
                }
              }
            }
            return object;
          });
          var defaultsDeep = baseRest(function(args) {
            args.push(undefined$1, customDefaultsMerge);
            return apply(mergeWith, undefined$1, args);
          });
          function findKey(object, predicate) {
            return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
          }
          function findLastKey(object, predicate) {
            return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
          }
          function forIn(object, iteratee2) {
            return object == null ? object : baseFor(object, getIteratee(iteratee2, 3), keysIn);
          }
          function forInRight(object, iteratee2) {
            return object == null ? object : baseForRight(object, getIteratee(iteratee2, 3), keysIn);
          }
          function forOwn(object, iteratee2) {
            return object && baseForOwn(object, getIteratee(iteratee2, 3));
          }
          function forOwnRight(object, iteratee2) {
            return object && baseForOwnRight(object, getIteratee(iteratee2, 3));
          }
          function functions(object) {
            return object == null ? [] : baseFunctions(object, keys(object));
          }
          function functionsIn(object) {
            return object == null ? [] : baseFunctions(object, keysIn(object));
          }
          function get(object, path, defaultValue) {
            var result2 = object == null ? undefined$1 : baseGet(object, path);
            return result2 === undefined$1 ? defaultValue : result2;
          }
          function has(object, path) {
            return object != null && hasPath(object, path, baseHas);
          }
          function hasIn(object, path) {
            return object != null && hasPath(object, path, baseHasIn);
          }
          var invert = createInverter(function(result2, value2, key) {
            if (value2 != null && typeof value2.toString != "function") {
              value2 = nativeObjectToString.call(value2);
            }
            result2[value2] = key;
          }, constant(identity));
          var invertBy = createInverter(function(result2, value2, key) {
            if (value2 != null && typeof value2.toString != "function") {
              value2 = nativeObjectToString.call(value2);
            }
            if (hasOwnProperty.call(result2, value2)) {
              result2[value2].push(key);
            } else {
              result2[value2] = [key];
            }
          }, getIteratee);
          var invoke = baseRest(baseInvoke);
          function keys(object) {
            return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
          }
          function keysIn(object) {
            return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
          }
          function mapKeys(object, iteratee2) {
            var result2 = {};
            iteratee2 = getIteratee(iteratee2, 3);
            baseForOwn(object, function(value2, key, object2) {
              baseAssignValue(result2, iteratee2(value2, key, object2), value2);
            });
            return result2;
          }
          function mapValues(object, iteratee2) {
            var result2 = {};
            iteratee2 = getIteratee(iteratee2, 3);
            baseForOwn(object, function(value2, key, object2) {
              baseAssignValue(result2, key, iteratee2(value2, key, object2));
            });
            return result2;
          }
          var merge = createAssigner(function(object, source, srcIndex) {
            baseMerge(object, source, srcIndex);
          });
          var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
            baseMerge(object, source, srcIndex, customizer);
          });
          var omit = flatRest(function(object, paths) {
            var result2 = {};
            if (object == null) {
              return result2;
            }
            var isDeep = false;
            paths = arrayMap(paths, function(path) {
              path = castPath(path, object);
              isDeep || (isDeep = path.length > 1);
              return path;
            });
            copyObject(object, getAllKeysIn(object), result2);
            if (isDeep) {
              result2 = baseClone(result2, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
            }
            var length = paths.length;
            while (length--) {
              baseUnset(result2, paths[length]);
            }
            return result2;
          });
          function omitBy(object, predicate) {
            return pickBy(object, negate(getIteratee(predicate)));
          }
          var pick = flatRest(function(object, paths) {
            return object == null ? {} : basePick(object, paths);
          });
          function pickBy(object, predicate) {
            if (object == null) {
              return {};
            }
            var props = arrayMap(getAllKeysIn(object), function(prop) {
              return [prop];
            });
            predicate = getIteratee(predicate);
            return basePickBy(object, props, function(value2, path) {
              return predicate(value2, path[0]);
            });
          }
          function result(object, path, defaultValue) {
            path = castPath(path, object);
            var index = -1, length = path.length;
            if (!length) {
              length = 1;
              object = undefined$1;
            }
            while (++index < length) {
              var value2 = object == null ? undefined$1 : object[toKey(path[index])];
              if (value2 === undefined$1) {
                index = length;
                value2 = defaultValue;
              }
              object = isFunction(value2) ? value2.call(object) : value2;
            }
            return object;
          }
          function set(object, path, value2) {
            return object == null ? object : baseSet(object, path, value2);
          }
          function setWith(object, path, value2, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined$1;
            return object == null ? object : baseSet(object, path, value2, customizer);
          }
          var toPairs = createToPairs(keys);
          var toPairsIn = createToPairs(keysIn);
          function transform(object, iteratee2, accumulator) {
            var isArr = isArray(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
            iteratee2 = getIteratee(iteratee2, 4);
            if (accumulator == null) {
              var Ctor = object && object.constructor;
              if (isArrLike) {
                accumulator = isArr ? new Ctor() : [];
              } else if (isObject2(object)) {
                accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
              } else {
                accumulator = {};
              }
            }
            (isArrLike ? arrayEach : baseForOwn)(object, function(value2, index, object2) {
              return iteratee2(accumulator, value2, index, object2);
            });
            return accumulator;
          }
          function unset(object, path) {
            return object == null ? true : baseUnset(object, path);
          }
          function update(object, path, updater) {
            return object == null ? object : baseUpdate(object, path, castFunction(updater));
          }
          function updateWith(object, path, updater, customizer) {
            customizer = typeof customizer == "function" ? customizer : undefined$1;
            return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
          }
          function values(object) {
            return object == null ? [] : baseValues(object, keys(object));
          }
          function valuesIn(object) {
            return object == null ? [] : baseValues(object, keysIn(object));
          }
          function clamp2(number, lower, upper) {
            if (upper === undefined$1) {
              upper = lower;
              lower = undefined$1;
            }
            if (upper !== undefined$1) {
              upper = toNumber(upper);
              upper = upper === upper ? upper : 0;
            }
            if (lower !== undefined$1) {
              lower = toNumber(lower);
              lower = lower === lower ? lower : 0;
            }
            return baseClamp(toNumber(number), lower, upper);
          }
          function inRange(number, start, end) {
            start = toFinite(start);
            if (end === undefined$1) {
              end = start;
              start = 0;
            } else {
              end = toFinite(end);
            }
            number = toNumber(number);
            return baseInRange(number, start, end);
          }
          function random2(lower, upper, floating) {
            if (floating && typeof floating != "boolean" && isIterateeCall(lower, upper, floating)) {
              upper = floating = undefined$1;
            }
            if (floating === undefined$1) {
              if (typeof upper == "boolean") {
                floating = upper;
                upper = undefined$1;
              } else if (typeof lower == "boolean") {
                floating = lower;
                lower = undefined$1;
              }
            }
            if (lower === undefined$1 && upper === undefined$1) {
              lower = 0;
              upper = 1;
            } else {
              lower = toFinite(lower);
              if (upper === undefined$1) {
                upper = lower;
                lower = 0;
              } else {
                upper = toFinite(upper);
              }
            }
            if (lower > upper) {
              var temp = lower;
              lower = upper;
              upper = temp;
            }
            if (floating || lower % 1 || upper % 1) {
              var rand = nativeRandom();
              return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
            }
            return baseRandom(lower, upper);
          }
          var camelCase = createCompounder(function(result2, word, index) {
            word = word.toLowerCase();
            return result2 + (index ? capitalize(word) : word);
          });
          function capitalize(string2) {
            return upperFirst(toString(string2).toLowerCase());
          }
          function deburr(string2) {
            string2 = toString(string2);
            return string2 && string2.replace(reLatin, deburrLetter).replace(reComboMark, "");
          }
          function endsWith(string2, target, position) {
            string2 = toString(string2);
            target = baseToString(target);
            var length = string2.length;
            position = position === undefined$1 ? length : baseClamp(toInteger(position), 0, length);
            var end = position;
            position -= target.length;
            return position >= 0 && string2.slice(position, end) == target;
          }
          function escape(string2) {
            string2 = toString(string2);
            return string2 && reHasUnescapedHtml.test(string2) ? string2.replace(reUnescapedHtml, escapeHtmlChar) : string2;
          }
          function escapeRegExp(string2) {
            string2 = toString(string2);
            return string2 && reHasRegExpChar.test(string2) ? string2.replace(reRegExpChar, "\\$&") : string2;
          }
          var kebabCase = createCompounder(function(result2, word, index) {
            return result2 + (index ? "-" : "") + word.toLowerCase();
          });
          var lowerCase = createCompounder(function(result2, word, index) {
            return result2 + (index ? " " : "") + word.toLowerCase();
          });
          var lowerFirst = createCaseFirst("toLowerCase");
          function pad(string2, length, chars) {
            string2 = toString(string2);
            length = toInteger(length);
            var strLength = length ? stringSize(string2) : 0;
            if (!length || strLength >= length) {
              return string2;
            }
            var mid = (length - strLength) / 2;
            return createPadding(nativeFloor(mid), chars) + string2 + createPadding(nativeCeil(mid), chars);
          }
          function padEnd(string2, length, chars) {
            string2 = toString(string2);
            length = toInteger(length);
            var strLength = length ? stringSize(string2) : 0;
            return length && strLength < length ? string2 + createPadding(length - strLength, chars) : string2;
          }
          function padStart(string2, length, chars) {
            string2 = toString(string2);
            length = toInteger(length);
            var strLength = length ? stringSize(string2) : 0;
            return length && strLength < length ? createPadding(length - strLength, chars) + string2 : string2;
          }
          function parseInt2(string2, radix, guard) {
            if (guard || radix == null) {
              radix = 0;
            } else if (radix) {
              radix = +radix;
            }
            return nativeParseInt(toString(string2).replace(reTrimStart, ""), radix || 0);
          }
          function repeat2(string2, n, guard) {
            if (guard ? isIterateeCall(string2, n, guard) : n === undefined$1) {
              n = 1;
            } else {
              n = toInteger(n);
            }
            return baseRepeat(toString(string2), n);
          }
          function replace() {
            var args = arguments, string2 = toString(args[0]);
            return args.length < 3 ? string2 : string2.replace(args[1], args[2]);
          }
          var snakeCase = createCompounder(function(result2, word, index) {
            return result2 + (index ? "_" : "") + word.toLowerCase();
          });
          function split(string2, separator, limit) {
            if (limit && typeof limit != "number" && isIterateeCall(string2, separator, limit)) {
              separator = limit = undefined$1;
            }
            limit = limit === undefined$1 ? MAX_ARRAY_LENGTH : limit >>> 0;
            if (!limit) {
              return [];
            }
            string2 = toString(string2);
            if (string2 && (typeof separator == "string" || separator != null && !isRegExp(separator))) {
              separator = baseToString(separator);
              if (!separator && hasUnicode(string2)) {
                return castSlice(stringToArray(string2), 0, limit);
              }
            }
            return string2.split(separator, limit);
          }
          var startCase = createCompounder(function(result2, word, index) {
            return result2 + (index ? " " : "") + upperFirst(word);
          });
          function startsWith2(string2, target, position) {
            string2 = toString(string2);
            position = position == null ? 0 : baseClamp(toInteger(position), 0, string2.length);
            target = baseToString(target);
            return string2.slice(position, position + target.length) == target;
          }
          function template(string2, options, guard) {
            var settings = lodash2.templateSettings;
            if (guard && isIterateeCall(string2, options, guard)) {
              options = undefined$1;
            }
            string2 = toString(string2);
            options = assignInWith({}, options, settings, customDefaultsAssignIn);
            var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
            var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
            var reDelimiters = RegExp2(
              (options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$",
              "g"
            );
            var sourceURL = "//# sourceURL=" + (hasOwnProperty.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
            string2.replace(reDelimiters, function(match2, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
              interpolateValue || (interpolateValue = esTemplateValue);
              source += string2.slice(index, offset).replace(reUnescapedString, escapeStringChar);
              if (escapeValue) {
                isEscaping = true;
                source += "' +\n__e(" + escapeValue + ") +\n'";
              }
              if (evaluateValue) {
                isEvaluating = true;
                source += "';\n" + evaluateValue + ";\n__p += '";
              }
              if (interpolateValue) {
                source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
              }
              index = offset + match2.length;
              return match2;
            });
            source += "';\n";
            var variable = hasOwnProperty.call(options, "variable") && options.variable;
            if (!variable) {
              source = "with (obj) {\n" + source + "\n}\n";
            } else if (reForbiddenIdentifierChars.test(variable)) {
              throw new Error2(INVALID_TEMPL_VAR_ERROR_TEXT);
            }
            source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
            source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
            var result2 = attempt(function() {
              return Function2(importsKeys, sourceURL + "return " + source).apply(undefined$1, importsValues);
            });
            result2.source = source;
            if (isError(result2)) {
              throw result2;
            }
            return result2;
          }
          function toLower(value2) {
            return toString(value2).toLowerCase();
          }
          function toUpper(value2) {
            return toString(value2).toUpperCase();
          }
          function trim(string2, chars, guard) {
            string2 = toString(string2);
            if (string2 && (guard || chars === undefined$1)) {
              return baseTrim(string2);
            }
            if (!string2 || !(chars = baseToString(chars))) {
              return string2;
            }
            var strSymbols = stringToArray(string2), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
            return castSlice(strSymbols, start, end).join("");
          }
          function trimEnd2(string2, chars, guard) {
            string2 = toString(string2);
            if (string2 && (guard || chars === undefined$1)) {
              return string2.slice(0, trimmedEndIndex(string2) + 1);
            }
            if (!string2 || !(chars = baseToString(chars))) {
              return string2;
            }
            var strSymbols = stringToArray(string2), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
            return castSlice(strSymbols, 0, end).join("");
          }
          function trimStart2(string2, chars, guard) {
            string2 = toString(string2);
            if (string2 && (guard || chars === undefined$1)) {
              return string2.replace(reTrimStart, "");
            }
            if (!string2 || !(chars = baseToString(chars))) {
              return string2;
            }
            var strSymbols = stringToArray(string2), start = charsStartIndex(strSymbols, stringToArray(chars));
            return castSlice(strSymbols, start).join("");
          }
          function truncate2(string2, options) {
            var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
            if (isObject2(options)) {
              var separator = "separator" in options ? options.separator : separator;
              length = "length" in options ? toInteger(options.length) : length;
              omission = "omission" in options ? baseToString(options.omission) : omission;
            }
            string2 = toString(string2);
            var strLength = string2.length;
            if (hasUnicode(string2)) {
              var strSymbols = stringToArray(string2);
              strLength = strSymbols.length;
            }
            if (length >= strLength) {
              return string2;
            }
            var end = length - stringSize(omission);
            if (end < 1) {
              return omission;
            }
            var result2 = strSymbols ? castSlice(strSymbols, 0, end).join("") : string2.slice(0, end);
            if (separator === undefined$1) {
              return result2 + omission;
            }
            if (strSymbols) {
              end += result2.length - end;
            }
            if (isRegExp(separator)) {
              if (string2.slice(end).search(separator)) {
                var match2, substring = result2;
                if (!separator.global) {
                  separator = RegExp2(separator.source, toString(reFlags.exec(separator)) + "g");
                }
                separator.lastIndex = 0;
                while (match2 = separator.exec(substring)) {
                  var newEnd = match2.index;
                }
                result2 = result2.slice(0, newEnd === undefined$1 ? end : newEnd);
              }
            } else if (string2.indexOf(baseToString(separator), end) != end) {
              var index = result2.lastIndexOf(separator);
              if (index > -1) {
                result2 = result2.slice(0, index);
              }
            }
            return result2 + omission;
          }
          function unescape(string2) {
            string2 = toString(string2);
            return string2 && reHasEscapedHtml.test(string2) ? string2.replace(reEscapedHtml, unescapeHtmlChar) : string2;
          }
          var upperCase = createCompounder(function(result2, word, index) {
            return result2 + (index ? " " : "") + word.toUpperCase();
          });
          var upperFirst = createCaseFirst("toUpperCase");
          function words(string2, pattern, guard) {
            string2 = toString(string2);
            pattern = guard ? undefined$1 : pattern;
            if (pattern === undefined$1) {
              return hasUnicodeWord(string2) ? unicodeWords(string2) : asciiWords(string2);
            }
            return string2.match(pattern) || [];
          }
          var attempt = baseRest(function(func, args) {
            try {
              return apply(func, undefined$1, args);
            } catch (e) {
              return isError(e) ? e : new Error2(e);
            }
          });
          var bindAll = flatRest(function(object, methodNames) {
            arrayEach(methodNames, function(key) {
              key = toKey(key);
              baseAssignValue(object, key, bind(object[key], object));
            });
            return object;
          });
          function cond(pairs) {
            var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
            pairs = !length ? [] : arrayMap(pairs, function(pair) {
              if (typeof pair[1] != "function") {
                throw new TypeError2(FUNC_ERROR_TEXT);
              }
              return [toIteratee(pair[0]), pair[1]];
            });
            return baseRest(function(args) {
              var index = -1;
              while (++index < length) {
                var pair = pairs[index];
                if (apply(pair[0], this, args)) {
                  return apply(pair[1], this, args);
                }
              }
            });
          }
          function conforms(source) {
            return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
          }
          function constant(value2) {
            return function() {
              return value2;
            };
          }
          function defaultTo(value2, defaultValue) {
            return value2 == null || value2 !== value2 ? defaultValue : value2;
          }
          var flow = createFlow();
          var flowRight = createFlow(true);
          function identity(value2) {
            return value2;
          }
          function iteratee(func) {
            return baseIteratee(typeof func == "function" ? func : baseClone(func, CLONE_DEEP_FLAG));
          }
          function matches(source) {
            return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
          }
          function matchesProperty(path, srcValue) {
            return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
          }
          var method = baseRest(function(path, args) {
            return function(object) {
              return baseInvoke(object, path, args);
            };
          });
          var methodOf = baseRest(function(object, args) {
            return function(path) {
              return baseInvoke(object, path, args);
            };
          });
          function mixin(object, source, options) {
            var props = keys(source), methodNames = baseFunctions(source, props);
            if (options == null && !(isObject2(source) && (methodNames.length || !props.length))) {
              options = source;
              source = object;
              object = this;
              methodNames = baseFunctions(source, keys(source));
            }
            var chain2 = !(isObject2(options) && "chain" in options) || !!options.chain, isFunc = isFunction(object);
            arrayEach(methodNames, function(methodName) {
              var func = source[methodName];
              object[methodName] = func;
              if (isFunc) {
                object.prototype[methodName] = function() {
                  var chainAll = this.__chain__;
                  if (chain2 || chainAll) {
                    var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray(this.__actions__);
                    actions.push({ "func": func, "args": arguments, "thisArg": object });
                    result2.__chain__ = chainAll;
                    return result2;
                  }
                  return func.apply(object, arrayPush([this.value()], arguments));
                };
              }
            });
            return object;
          }
          function noConflict() {
            if (root._ === this) {
              root._ = oldDash;
            }
            return this;
          }
          function noop() {
          }
          function nthArg(n) {
            n = toInteger(n);
            return baseRest(function(args) {
              return baseNth(args, n);
            });
          }
          var over = createOver(arrayMap);
          var overEvery = createOver(arrayEvery);
          var overSome = createOver(arraySome);
          function property(path) {
            return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
          }
          function propertyOf(object) {
            return function(path) {
              return object == null ? undefined$1 : baseGet(object, path);
            };
          }
          var range2 = createRange();
          var rangeRight = createRange(true);
          function stubArray() {
            return [];
          }
          function stubFalse() {
            return false;
          }
          function stubObject() {
            return {};
          }
          function stubString() {
            return "";
          }
          function stubTrue() {
            return true;
          }
          function times(n, iteratee2) {
            n = toInteger(n);
            if (n < 1 || n > MAX_SAFE_INTEGER2) {
              return [];
            }
            var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);
            iteratee2 = getIteratee(iteratee2);
            n -= MAX_ARRAY_LENGTH;
            var result2 = baseTimes(length, iteratee2);
            while (++index < n) {
              iteratee2(index);
            }
            return result2;
          }
          function toPath(value2) {
            if (isArray(value2)) {
              return arrayMap(value2, toKey);
            }
            return isSymbol(value2) ? [value2] : copyArray(stringToPath(toString(value2)));
          }
          function uniqueId(prefix) {
            var id = ++idCounter;
            return toString(prefix) + id;
          }
          var add2 = createMathOperation(function(augend, addend) {
            return augend + addend;
          }, 0);
          var ceil2 = createRound("ceil");
          var divide2 = createMathOperation(function(dividend, divisor) {
            return dividend / divisor;
          }, 1);
          var floor2 = createRound("floor");
          function max2(array) {
            return array && array.length ? baseExtremum(array, identity, baseGt) : undefined$1;
          }
          function maxBy(array, iteratee2) {
            return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseGt) : undefined$1;
          }
          function mean(array) {
            return baseMean(array, identity);
          }
          function meanBy(array, iteratee2) {
            return baseMean(array, getIteratee(iteratee2, 2));
          }
          function min2(array) {
            return array && array.length ? baseExtremum(array, identity, baseLt) : undefined$1;
          }
          function minBy(array, iteratee2) {
            return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseLt) : undefined$1;
          }
          var multiply = createMathOperation(function(multiplier, multiplicand) {
            return multiplier * multiplicand;
          }, 1);
          var round2 = createRound("round");
          var subtract = createMathOperation(function(minuend, subtrahend) {
            return minuend - subtrahend;
          }, 0);
          function sum2(array) {
            return array && array.length ? baseSum(array, identity) : 0;
          }
          function sumBy(array, iteratee2) {
            return array && array.length ? baseSum(array, getIteratee(iteratee2, 2)) : 0;
          }
          lodash2.after = after;
          lodash2.ary = ary;
          lodash2.assign = assign;
          lodash2.assignIn = assignIn;
          lodash2.assignInWith = assignInWith;
          lodash2.assignWith = assignWith;
          lodash2.at = at;
          lodash2.before = before;
          lodash2.bind = bind;
          lodash2.bindAll = bindAll;
          lodash2.bindKey = bindKey;
          lodash2.castArray = castArray;
          lodash2.chain = chain;
          lodash2.chunk = chunk;
          lodash2.compact = compact;
          lodash2.concat = concat;
          lodash2.cond = cond;
          lodash2.conforms = conforms;
          lodash2.constant = constant;
          lodash2.countBy = countBy;
          lodash2.create = create;
          lodash2.curry = curry;
          lodash2.curryRight = curryRight;
          lodash2.debounce = debounce;
          lodash2.defaults = defaults;
          lodash2.defaultsDeep = defaultsDeep;
          lodash2.defer = defer;
          lodash2.delay = delay;
          lodash2.difference = difference;
          lodash2.differenceBy = differenceBy;
          lodash2.differenceWith = differenceWith;
          lodash2.drop = drop;
          lodash2.dropRight = dropRight;
          lodash2.dropRightWhile = dropRightWhile;
          lodash2.dropWhile = dropWhile;
          lodash2.fill = fill;
          lodash2.filter = filter;
          lodash2.flatMap = flatMap;
          lodash2.flatMapDeep = flatMapDeep;
          lodash2.flatMapDepth = flatMapDepth;
          lodash2.flatten = flatten;
          lodash2.flattenDeep = flattenDeep;
          lodash2.flattenDepth = flattenDepth;
          lodash2.flip = flip;
          lodash2.flow = flow;
          lodash2.flowRight = flowRight;
          lodash2.fromPairs = fromPairs;
          lodash2.functions = functions;
          lodash2.functionsIn = functionsIn;
          lodash2.groupBy = groupBy;
          lodash2.initial = initial;
          lodash2.intersection = intersection;
          lodash2.intersectionBy = intersectionBy;
          lodash2.intersectionWith = intersectionWith;
          lodash2.invert = invert;
          lodash2.invertBy = invertBy;
          lodash2.invokeMap = invokeMap;
          lodash2.iteratee = iteratee;
          lodash2.keyBy = keyBy;
          lodash2.keys = keys;
          lodash2.keysIn = keysIn;
          lodash2.map = map2;
          lodash2.mapKeys = mapKeys;
          lodash2.mapValues = mapValues;
          lodash2.matches = matches;
          lodash2.matchesProperty = matchesProperty;
          lodash2.memoize = memoize2;
          lodash2.merge = merge;
          lodash2.mergeWith = mergeWith;
          lodash2.method = method;
          lodash2.methodOf = methodOf;
          lodash2.mixin = mixin;
          lodash2.negate = negate;
          lodash2.nthArg = nthArg;
          lodash2.omit = omit;
          lodash2.omitBy = omitBy;
          lodash2.once = once;
          lodash2.orderBy = orderBy;
          lodash2.over = over;
          lodash2.overArgs = overArgs;
          lodash2.overEvery = overEvery;
          lodash2.overSome = overSome;
          lodash2.partial = partial;
          lodash2.partialRight = partialRight;
          lodash2.partition = partition;
          lodash2.pick = pick;
          lodash2.pickBy = pickBy;
          lodash2.property = property;
          lodash2.propertyOf = propertyOf;
          lodash2.pull = pull;
          lodash2.pullAll = pullAll;
          lodash2.pullAllBy = pullAllBy;
          lodash2.pullAllWith = pullAllWith;
          lodash2.pullAt = pullAt;
          lodash2.range = range2;
          lodash2.rangeRight = rangeRight;
          lodash2.rearg = rearg;
          lodash2.reject = reject;
          lodash2.remove = remove;
          lodash2.rest = rest;
          lodash2.reverse = reverse;
          lodash2.sampleSize = sampleSize;
          lodash2.set = set;
          lodash2.setWith = setWith;
          lodash2.shuffle = shuffle;
          lodash2.slice = slice;
          lodash2.sortBy = sortBy;
          lodash2.sortedUniq = sortedUniq;
          lodash2.sortedUniqBy = sortedUniqBy;
          lodash2.split = split;
          lodash2.spread = spread;
          lodash2.tail = tail;
          lodash2.take = take;
          lodash2.takeRight = takeRight;
          lodash2.takeRightWhile = takeRightWhile;
          lodash2.takeWhile = takeWhile;
          lodash2.tap = tap;
          lodash2.throttle = throttle;
          lodash2.thru = thru;
          lodash2.toArray = toArray;
          lodash2.toPairs = toPairs;
          lodash2.toPairsIn = toPairsIn;
          lodash2.toPath = toPath;
          lodash2.toPlainObject = toPlainObject;
          lodash2.transform = transform;
          lodash2.unary = unary;
          lodash2.union = union;
          lodash2.unionBy = unionBy;
          lodash2.unionWith = unionWith;
          lodash2.uniq = uniq;
          lodash2.uniqBy = uniqBy;
          lodash2.uniqWith = uniqWith;
          lodash2.unset = unset;
          lodash2.unzip = unzip;
          lodash2.unzipWith = unzipWith;
          lodash2.update = update;
          lodash2.updateWith = updateWith;
          lodash2.values = values;
          lodash2.valuesIn = valuesIn;
          lodash2.without = without;
          lodash2.words = words;
          lodash2.wrap = wrap;
          lodash2.xor = xor;
          lodash2.xorBy = xorBy;
          lodash2.xorWith = xorWith;
          lodash2.zip = zip;
          lodash2.zipObject = zipObject;
          lodash2.zipObjectDeep = zipObjectDeep;
          lodash2.zipWith = zipWith;
          lodash2.entries = toPairs;
          lodash2.entriesIn = toPairsIn;
          lodash2.extend = assignIn;
          lodash2.extendWith = assignInWith;
          mixin(lodash2, lodash2);
          lodash2.add = add2;
          lodash2.attempt = attempt;
          lodash2.camelCase = camelCase;
          lodash2.capitalize = capitalize;
          lodash2.ceil = ceil2;
          lodash2.clamp = clamp2;
          lodash2.clone = clone2;
          lodash2.cloneDeep = cloneDeep;
          lodash2.cloneDeepWith = cloneDeepWith;
          lodash2.cloneWith = cloneWith;
          lodash2.conformsTo = conformsTo;
          lodash2.deburr = deburr;
          lodash2.defaultTo = defaultTo;
          lodash2.divide = divide2;
          lodash2.endsWith = endsWith;
          lodash2.eq = eq;
          lodash2.escape = escape;
          lodash2.escapeRegExp = escapeRegExp;
          lodash2.every = every;
          lodash2.find = find;
          lodash2.findIndex = findIndex;
          lodash2.findKey = findKey;
          lodash2.findLast = findLast;
          lodash2.findLastIndex = findLastIndex;
          lodash2.findLastKey = findLastKey;
          lodash2.floor = floor2;
          lodash2.forEach = forEach;
          lodash2.forEachRight = forEachRight;
          lodash2.forIn = forIn;
          lodash2.forInRight = forInRight;
          lodash2.forOwn = forOwn;
          lodash2.forOwnRight = forOwnRight;
          lodash2.get = get;
          lodash2.gt = gt;
          lodash2.gte = gte;
          lodash2.has = has;
          lodash2.hasIn = hasIn;
          lodash2.head = head;
          lodash2.identity = identity;
          lodash2.includes = includes;
          lodash2.indexOf = indexOf;
          lodash2.inRange = inRange;
          lodash2.invoke = invoke;
          lodash2.isArguments = isArguments;
          lodash2.isArray = isArray;
          lodash2.isArrayBuffer = isArrayBuffer;
          lodash2.isArrayLike = isArrayLike;
          lodash2.isArrayLikeObject = isArrayLikeObject;
          lodash2.isBoolean = isBoolean;
          lodash2.isBuffer = isBuffer;
          lodash2.isDate = isDate;
          lodash2.isElement = isElement;
          lodash2.isEmpty = isEmpty;
          lodash2.isEqual = isEqual;
          lodash2.isEqualWith = isEqualWith;
          lodash2.isError = isError;
          lodash2.isFinite = isFinite2;
          lodash2.isFunction = isFunction;
          lodash2.isInteger = isInteger2;
          lodash2.isLength = isLength;
          lodash2.isMap = isMap;
          lodash2.isMatch = isMatch;
          lodash2.isMatchWith = isMatchWith;
          lodash2.isNaN = isNaN2;
          lodash2.isNative = isNative;
          lodash2.isNil = isNil;
          lodash2.isNull = isNull;
          lodash2.isNumber = isNumber2;
          lodash2.isObject = isObject2;
          lodash2.isObjectLike = isObjectLike;
          lodash2.isPlainObject = isPlainObject;
          lodash2.isRegExp = isRegExp;
          lodash2.isSafeInteger = isSafeInteger2;
          lodash2.isSet = isSet;
          lodash2.isString = isString;
          lodash2.isSymbol = isSymbol;
          lodash2.isTypedArray = isTypedArray;
          lodash2.isUndefined = isUndefined;
          lodash2.isWeakMap = isWeakMap;
          lodash2.isWeakSet = isWeakSet;
          lodash2.join = join;
          lodash2.kebabCase = kebabCase;
          lodash2.last = last;
          lodash2.lastIndexOf = lastIndexOf;
          lodash2.lowerCase = lowerCase;
          lodash2.lowerFirst = lowerFirst;
          lodash2.lt = lt;
          lodash2.lte = lte;
          lodash2.max = max2;
          lodash2.maxBy = maxBy;
          lodash2.mean = mean;
          lodash2.meanBy = meanBy;
          lodash2.min = min2;
          lodash2.minBy = minBy;
          lodash2.stubArray = stubArray;
          lodash2.stubFalse = stubFalse;
          lodash2.stubObject = stubObject;
          lodash2.stubString = stubString;
          lodash2.stubTrue = stubTrue;
          lodash2.multiply = multiply;
          lodash2.nth = nth;
          lodash2.noConflict = noConflict;
          lodash2.noop = noop;
          lodash2.now = now2;
          lodash2.pad = pad;
          lodash2.padEnd = padEnd;
          lodash2.padStart = padStart;
          lodash2.parseInt = parseInt2;
          lodash2.random = random2;
          lodash2.reduce = reduce;
          lodash2.reduceRight = reduceRight;
          lodash2.repeat = repeat2;
          lodash2.replace = replace;
          lodash2.result = result;
          lodash2.round = round2;
          lodash2.runInContext = runInContext2;
          lodash2.sample = sample;
          lodash2.size = size;
          lodash2.snakeCase = snakeCase;
          lodash2.some = some;
          lodash2.sortedIndex = sortedIndex;
          lodash2.sortedIndexBy = sortedIndexBy;
          lodash2.sortedIndexOf = sortedIndexOf;
          lodash2.sortedLastIndex = sortedLastIndex;
          lodash2.sortedLastIndexBy = sortedLastIndexBy;
          lodash2.sortedLastIndexOf = sortedLastIndexOf;
          lodash2.startCase = startCase;
          lodash2.startsWith = startsWith2;
          lodash2.subtract = subtract;
          lodash2.sum = sum2;
          lodash2.sumBy = sumBy;
          lodash2.template = template;
          lodash2.times = times;
          lodash2.toFinite = toFinite;
          lodash2.toInteger = toInteger;
          lodash2.toLength = toLength;
          lodash2.toLower = toLower;
          lodash2.toNumber = toNumber;
          lodash2.toSafeInteger = toSafeInteger;
          lodash2.toString = toString;
          lodash2.toUpper = toUpper;
          lodash2.trim = trim;
          lodash2.trimEnd = trimEnd2;
          lodash2.trimStart = trimStart2;
          lodash2.truncate = truncate2;
          lodash2.unescape = unescape;
          lodash2.uniqueId = uniqueId;
          lodash2.upperCase = upperCase;
          lodash2.upperFirst = upperFirst;
          lodash2.each = forEach;
          lodash2.eachRight = forEachRight;
          lodash2.first = head;
          mixin(lodash2, function() {
            var source = {};
            baseForOwn(lodash2, function(func, methodName) {
              if (!hasOwnProperty.call(lodash2.prototype, methodName)) {
                source[methodName] = func;
              }
            });
            return source;
          }(), { "chain": false });
          lodash2.VERSION = VERSION;
          arrayEach(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
            lodash2[methodName].placeholder = lodash2;
          });
          arrayEach(["drop", "take"], function(methodName, index) {
            LazyWrapper.prototype[methodName] = function(n) {
              n = n === undefined$1 ? 1 : nativeMax(toInteger(n), 0);
              var result2 = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
              if (result2.__filtered__) {
                result2.__takeCount__ = nativeMin(n, result2.__takeCount__);
              } else {
                result2.__views__.push({
                  "size": nativeMin(n, MAX_ARRAY_LENGTH),
                  "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
                });
              }
              return result2;
            };
            LazyWrapper.prototype[methodName + "Right"] = function(n) {
              return this.reverse()[methodName](n).reverse();
            };
          });
          arrayEach(["filter", "map", "takeWhile"], function(methodName, index) {
            var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
            LazyWrapper.prototype[methodName] = function(iteratee2) {
              var result2 = this.clone();
              result2.__iteratees__.push({
                "iteratee": getIteratee(iteratee2, 3),
                "type": type
              });
              result2.__filtered__ = result2.__filtered__ || isFilter;
              return result2;
            };
          });
          arrayEach(["head", "last"], function(methodName, index) {
            var takeName = "take" + (index ? "Right" : "");
            LazyWrapper.prototype[methodName] = function() {
              return this[takeName](1).value()[0];
            };
          });
          arrayEach(["initial", "tail"], function(methodName, index) {
            var dropName = "drop" + (index ? "" : "Right");
            LazyWrapper.prototype[methodName] = function() {
              return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
            };
          });
          LazyWrapper.prototype.compact = function() {
            return this.filter(identity);
          };
          LazyWrapper.prototype.find = function(predicate) {
            return this.filter(predicate).head();
          };
          LazyWrapper.prototype.findLast = function(predicate) {
            return this.reverse().find(predicate);
          };
          LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
            if (typeof path == "function") {
              return new LazyWrapper(this);
            }
            return this.map(function(value2) {
              return baseInvoke(value2, path, args);
            });
          });
          LazyWrapper.prototype.reject = function(predicate) {
            return this.filter(negate(getIteratee(predicate)));
          };
          LazyWrapper.prototype.slice = function(start, end) {
            start = toInteger(start);
            var result2 = this;
            if (result2.__filtered__ && (start > 0 || end < 0)) {
              return new LazyWrapper(result2);
            }
            if (start < 0) {
              result2 = result2.takeRight(-start);
            } else if (start) {
              result2 = result2.drop(start);
            }
            if (end !== undefined$1) {
              end = toInteger(end);
              result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start);
            }
            return result2;
          };
          LazyWrapper.prototype.takeRightWhile = function(predicate) {
            return this.reverse().takeWhile(predicate).reverse();
          };
          LazyWrapper.prototype.toArray = function() {
            return this.take(MAX_ARRAY_LENGTH);
          };
          baseForOwn(LazyWrapper.prototype, function(func, methodName) {
            var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash2[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
            if (!lodashFunc) {
              return;
            }
            lodash2.prototype[methodName] = function() {
              var value2 = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value2 instanceof LazyWrapper, iteratee2 = args[0], useLazy = isLazy || isArray(value2);
              var interceptor = function(value3) {
                var result3 = lodashFunc.apply(lodash2, arrayPush([value3], args));
                return isTaker && chainAll ? result3[0] : result3;
              };
              if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
                isLazy = useLazy = false;
              }
              var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
              if (!retUnwrapped && useLazy) {
                value2 = onlyLazy ? value2 : new LazyWrapper(this);
                var result2 = func.apply(value2, args);
                result2.__actions__.push({ "func": thru, "args": [interceptor], "thisArg": undefined$1 });
                return new LodashWrapper(result2, chainAll);
              }
              if (isUnwrapped && onlyLazy) {
                return func.apply(this, args);
              }
              result2 = this.thru(interceptor);
              return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
            };
          });
          arrayEach(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
            var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
            lodash2.prototype[methodName] = function() {
              var args = arguments;
              if (retUnwrapped && !this.__chain__) {
                var value2 = this.value();
                return func.apply(isArray(value2) ? value2 : [], args);
              }
              return this[chainName](function(value3) {
                return func.apply(isArray(value3) ? value3 : [], args);
              });
            };
          });
          baseForOwn(LazyWrapper.prototype, function(func, methodName) {
            var lodashFunc = lodash2[methodName];
            if (lodashFunc) {
              var key = lodashFunc.name + "";
              if (!hasOwnProperty.call(realNames, key)) {
                realNames[key] = [];
              }
              realNames[key].push({ "name": methodName, "func": lodashFunc });
            }
          });
          realNames[createHybrid(undefined$1, WRAP_BIND_KEY_FLAG).name] = [{
            "name": "wrapper",
            "func": undefined$1
          }];
          LazyWrapper.prototype.clone = lazyClone;
          LazyWrapper.prototype.reverse = lazyReverse;
          LazyWrapper.prototype.value = lazyValue;
          lodash2.prototype.at = wrapperAt;
          lodash2.prototype.chain = wrapperChain;
          lodash2.prototype.commit = wrapperCommit;
          lodash2.prototype.next = wrapperNext;
          lodash2.prototype.plant = wrapperPlant;
          lodash2.prototype.reverse = wrapperReverse;
          lodash2.prototype.toJSON = lodash2.prototype.valueOf = lodash2.prototype.value = wrapperValue;
          lodash2.prototype.first = lodash2.prototype.head;
          if (symIterator) {
            lodash2.prototype[symIterator] = wrapperToIterator;
          }
          return lodash2;
        };
        var _ = runInContext();
        if (freeModule) {
          (freeModule.exports = _)._ = _;
          freeExports._ = _;
        } else {
          root._ = _;
        }
      }).call(lodash);
    })(lodash$1, lodash$1.exports);
    return lodash$1.exports;
  }
  var lodashExports = requireLodash();
  function createTypeParser(parser2) {
    return (value2) => {
      if (isNullish(value2)) return;
      return parser2(value2);
    };
  }
  function quantityLike(value2) {
    const { value: valueQuantity, comparator, unit, system: system2, code: code2 } = value2;
    return { value: valueQuantity, comparator, unit, system: system2, code: code2 };
  }
  const quantity = createTypeParser(quantityLike);
  const dateTime = createTypeParser((value2) => value2);
  const reference = createTypeParser((value2) => {
    const { reference: reference2, display } = value2;
    return {
      reference: reference2,
      display
    };
  });
  const annotation = createTypeParser((value2) => {
    const { time, text, authorReference } = value2;
    return {
      time: dateTime(time),
      text,
      author: reference(authorReference)
    };
  });
  const boolean = createTypeParser((value2) => value2);
  function code(value2) {
    if (isNullish(value2)) return;
    return value2;
  }
  const nictizIdValueXMap = {
    "BodySite-Qualifier": "codeableConcept",
    "BodySite-Morphology": "codeableConcept",
    "deviceUseStatement-reasonReferenceSTU3": "reference",
    "zib-MedicalDevice-Organization": "reference",
    "zib-MedicalDevice-Practitioner": "reference",
    "zib-MedicationUse-AsAgreedIndicator": "boolean",
    "zib-MedicationUse-Prescriber": "reference",
    "zib-MedicationUse-Author": "reference",
    "zib-MedicationUse-ReasonForChangeOrDiscontinuationOfUse": "codeableConcept",
    "zib-Medication-MedicationTreatment": "identifier",
    "zib-Medication-RepeatPeriodCyclicalSchedule": "duration",
    "zib-MedicationUse-Duration": "duration",
    "zib-Product-Description": "string",
    "zib-NutritionAdvice-Explanation": "string",
    "zib-Medication-PeriodOfUse": "period",
    "zib-Medication-AdditionalInformation": "codeableConcept",
    "zib-Medication-StopType": "codeableConcept",
    "zib-AdministrationAgreement-AuthoredOn": "dateTime",
    "zib-AdministrationAgreement-AgreementReason": "string",
    "zib-AdvanceDirective-Disorder": "reference",
    "zib-VaccinationRecommendation-OrderStatus": "codeableConcept",
    "ext-Vaccination.PharmaceuticalProduct": "reference",
    "ext-PharmaceuticalProduct.Description": "string",
    "EpisodeOfCare-Title": "string",
    "EpisodeOfCare-DateFirstEncounter": "dateTime",
    "EpisodeOfCare-DateLastEncounter": "dateTime",
    Comment: "string"
  };
  function extensionNictiz(resource, zibId) {
    return extension(
      resource,
      `http://nictiz.nl/fhir/StructureDefinition/${zibId}`,
      nictizIdValueXMap[zibId]
    );
  }
  function passThrough(value2) {
    return value2;
  }
  function findComponentByCode(components, code2) {
    return components?.find((component) => component.code.coding?.find((x) => x.code === code2));
  }
  function oneOfValueX(value2, valueArray, valuePrefix = "value") {
    if (isNullish(value2)) return {};
    for (const valueKey of valueArray) {
      const parsedValue = valueX(
        value2,
        valueKey,
        valuePrefix
      );
      if (isNonNullish(parsedValue)) {
        return {
          [`${valuePrefix}${capitalizeFirstLetter(valueKey)}`]: parsedValue
        };
      }
    }
    return {};
  }
  function filterCodeableConceptByCoding(items, iteratee) {
    return items?.filter((item) => item.coding?.some(iteratee));
  }
  function filterPrimitive(element, key, metaFilter) {
    if (!element) return void 0;
    const value2 = element[key];
    const valueMeta = element[`_${key}`];
    if (Array.isArray(value2)) {
      if (!Array.isArray(valueMeta)) {
        return [];
      }
      return value2.filter((_x, i) => {
        const meta = valueMeta[i];
        return meta && metaFilter(meta);
      });
    }
    if (valueMeta && metaFilter(valueMeta)) {
      return value2;
    }
    return void 0;
  }
  function filterPrimitiveByExtension(element, key, extension2) {
    return filterPrimitive(element, key, (meta) => {
      if (!meta.extension) {
        return false;
      }
      const extensionEntries = Object.entries(extension2);
      return meta.extension.some((ext) => {
        for (const [key2, value2] of extensionEntries) {
          if (ext[key2] !== value2) return false;
        }
        return true;
      });
    });
  }
  function intersectCodeableConcept(items, intersectItems) {
    return items?.filter((x) => {
      const codings = x.coding ?? [];
      const matchingCodes = lodashExports.intersectionWith(codings, intersectItems, (item1, item2) => {
        return item1?.code === item2.code && item1.system === item2.system;
      });
      return matchingCodes.length;
    });
  }
  const coding = createTypeParser((value2) => {
    const { code: code2, display, system: system2 } = value2;
    return {
      code: code2,
      display,
      system: system2
    };
  });
  const codeableConcept = createTypeParser((value2) => {
    if (!value2.coding?.length) {
      return {
        text: value2.text,
        coding: []
      };
    }
    return {
      text: value2.text,
      coding: map(value2.coding, coding, true)
    };
  });
  const date = createTypeParser((value2) => value2);
  const instant = createTypeParser((value2) => value2);
  const duration = createTypeParser(quantityLike);
  const identifier = createTypeParser((value2) => {
    const { use, system: system2, value: identifierValue, type } = value2;
    return {
      use,
      system: system2,
      value: identifierValue,
      type: codeableConcept(type)
    };
  });
  const period = createTypeParser((value2) => {
    const { start, end } = value2;
    return {
      start: dateTime(start),
      end: dateTime(end)
    };
  });
  const range = createTypeParser((value2) => {
    return {
      low: quantity(value2.low),
      high: quantity(value2.high)
    };
  });
  const ratio = createTypeParser((value2) => {
    const { numerator, denominator } = value2;
    return {
      numerator: quantity(numerator),
      denominator: quantity(denominator)
    };
  });
  const string = createTypeParser((value2) => value2);
  const decimal = createTypeParser(passThrough);
  const unsignedInt = createTypeParser(passThrough);
  const integer = createTypeParser(passThrough);
  const integer64 = createTypeParser(passThrough);
  const positiveInt = createTypeParser(passThrough);
  const parse = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    annotation,
    boolean,
    code,
    codeableConcept,
    coding,
    date,
    dateTime,
    decimal,
    duration,
    identifier,
    instant,
    integer,
    integer64,
    period,
    positiveInt,
    quantity,
    range,
    ratio,
    reference,
    string,
    unsignedInt
  }, Symbol.toStringTag, { value: "Module" }));
  function valueX(value2, valueXType, valuePrefix = "value") {
    if (isNullish(value2)) return;
    const parser2 = parse[valueXType];
    const valueX2 = value2[`${valuePrefix}${lodashExports.upperFirst(valueXType)}`];
    return parser2(valueX2);
  }
  function getExtension(resource, url) {
    return resource?.extension?.find((x) => x.url === url) ?? resource?.modifierExtension?.find((x) => x.url === url);
  }
  function extension(resource, url, valueType) {
    const extension2 = getExtension(resource, url);
    return valueX(extension2, valueType);
  }
  function resourceMeta(resource, profile2, fhirVersion) {
    const { resourceType: fhirResourceType, id, meta } = resource;
    if (!meta?.profile?.includes(profile2)) {
      throw new Error(
        `Resource does not have the expected profile: "${profile2}". Got: ${meta?.profile}`
      );
    }
    const resourceId = string(id);
    const resourceType = string(fhirResourceType);
    return {
      id: resourceId,
      referenceId: `${resourceType}/${resourceId}`,
      resourceType,
      profile: profile2,
      fhirVersion: `${fhirVersion}`
    };
  }
  const i18n$M = "r3.gp_diagnostic_result";
  const uiSchema$O = (resource, context) => {
    const ui = context.ui;
    return {
      label: resource.context?.display ?? context.formatMessage(i18n$M),
      children: [
        {
          label: `${i18n$M}.group_details`,
          children: [
            ui.identifier(`${i18n$M}.identifier`, resource.identifier),
            ui.reference(`${i18n$M}.context`, resource.context),
            ui.reference(`${i18n$M}.subject`, resource.subject),
            ui.dateTime(`${i18n$M}.effective`, resource.effective),
            ui.reference(`${i18n$M}.performer`, resource.performer),
            ui.string(`${i18n$M}.status`, resource.status),
            ui.codeableConcept(`${i18n$M}.code`, resource.code),
            ui.string(`${i18n$M}.comment`, resource.comment),
            ui.codeableConcept(`${i18n$M}.method`, resource.method),
            ...ui.oneOfValueX(`${i18n$M}.value`, resource, "value")
          ]
        }
      ]
    };
  };
  const profile$O = "http://nictiz.nl/fhir/StructureDefinition/gp-DiagnosticResult";
  function parseGpDiagnosticResult(resource) {
    return {
      ...resourceMeta(resource, profile$O, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      context: reference(resource.context),
      subject: reference(resource.subject),
      effective: dateTime(resource.effectiveDateTime),
      performer: map(resource.performer, reference),
      status: string(resource.status),
      code: codeableConcept(resource.code),
      ...oneOfValueX(resource, [
        "quantity",
        "codeableConcept",
        "string",
        "boolean",
        "range",
        "dateTime",
        "period"
      ]),
      comment: string(resource.comment),
      method: codeableConcept(resource.method)
    };
  }
  const gpDiagnosticResult = {
    profile: profile$O,
    parse: parseGpDiagnosticResult,
    uiSchema: uiSchema$O
  };
  const uiSchemaGroup$B = (resource, context) => {
    const ui = context.ui;
    return {
      label: "Encounter.participant",
      children: [ui.reference(`Encounter.participant.individual`, resource.individual)]
    };
  };
  function parseEncounterParticipant(value2) {
    return {
      individual: reference(value2?.individual)
    };
  }
  const encounterParticipant = {
    parse: parseEncounterParticipant
  };
  const i18n$L = "r3.gp_encounter";
  const uiSchema$N = (resource, context) => {
    const ui = context.ui;
    const participants = map(
      resource.participant,
      (x) => uiSchemaGroup$B(x, context),
      true
    ).flat();
    return {
      label: resource.serviceProvider?.display ?? context.formatMessage(i18n$L),
      children: [
        {
          label: `${i18n$L}`,
          children: [
            ui.coding(`${i18n$L}.class`, resource.class),
            ...ui.helpers.getChildren(participants),
            ui.reference(`${i18n$L}.serviceProvider`, resource.serviceProvider),
            ...ui.period(`${i18n$L}.period`, resource.period),
            ui.codeableConcept(`${i18n$L}.reason`, resource.reason)
          ]
        }
      ]
    };
  };
  const profile$N = "http://nictiz.nl/fhir/StructureDefinition/gp-Encounter";
  function parseGpEncounter(resource) {
    return {
      ...resourceMeta(resource, profile$N, FhirVersion.R3),
      class: coding(resource.class),
      participant: map(resource.participant, encounterParticipant.parse),
      serviceProvider: reference(resource.serviceProvider),
      period: period(resource.period),
      reason: map(resource.reason, codeableConcept)
    };
  }
  const gpEncounter = {
    profile: profile$N,
    parse: parseGpEncounter,
    uiSchema: uiSchema$N
  };
  function parseSection(value2) {
    return {
      code: codeableConcept(value2?.code),
      entry: map(value2?.entry, reference)
    };
  }
  const uiSchemaGroup$A = (resource, context) => {
    const ui = context.ui;
    const profile2 = "EncounterReport.Section";
    return {
      label: profile2,
      children: [
        ui.codeableConcept(`${profile2}.code`, resource.code),
        ...map(resource.entry, (entry) => ui.reference(`${profile2}.entry`, entry), true)
      ]
    };
  };
  const i18n$K = "r3.gp_encounter_report";
  const uiSchema$M = (resource, context) => {
    const ui = context.ui;
    const section = map(resource.section, (x) => uiSchemaGroup$A(x, context), true);
    return {
      label: resource.title ?? context.formatMessage(i18n$K),
      children: [
        {
          label: `${i18n$K}`,
          children: [
            ui.string(`${i18n$K}.title`, resource.title),
            ui.string(`${i18n$K}.status`, resource.status),
            ui.coding(`${i18n$K}.type`, resource.type),
            ui.reference(`${i18n$K}.encounter`, resource.encounter),
            ui.dateTime(`${i18n$K}.date`, resource.date),
            ui.reference(`${i18n$K}.author`, resource.author)
          ]
        },
        ...section
      ]
    };
  };
  const profile$M = "http://nictiz.nl/fhir/StructureDefinition/gp-EncounterReport";
  function parseGpEncounterReport(resource) {
    return {
      ...resourceMeta(resource, profile$M, FhirVersion.R3),
      identifier: identifier(resource.identifier),
      status: string(resource.status),
      type: map(resource.type.coding, coding),
      encounter: reference(resource.encounter),
      date: dateTime(resource.date),
      author: map(resource.author, reference),
      title: string(resource.title),
      section: map(resource.section, parseSection)
    };
  }
  const gpEncounterReport = {
    profile: profile$M,
    parse: parseGpEncounterReport,
    uiSchema: uiSchema$M
  };
  const i18n$J = "r3.gp_journal_entry";
  const uiSchema$L = (resource, context) => {
    const ui = context.ui;
    return {
      label: resource.context?.display ?? context.formatMessage(i18n$J),
      children: [
        {
          label: `${i18n$J}.group_details`,
          children: [
            ui.identifier(`${i18n$J}.identifier`, resource.identifier),
            ui.string(`${i18n$J}.status`, resource.status),
            ui.codeableConcept(`${i18n$J}.code`, resource.code),
            ui.reference(`${i18n$J}.context`, resource.context),
            ...ui.oneOfValueX(`${i18n$J}.effective`, resource, "effective"),
            ui.reference(`${i18n$J}.performer`, resource.performer),
            ui.string(`${i18n$J}.valueString`, resource.valueString),
            ui.codeableConcept(`${i18n$J}.ICPC_S`, resource.ICPC_S.valueCodeableConcept),
            ui.codeableConcept(`${i18n$J}.ICPC_E`, resource.ICPC_E.valueCodeableConcept)
          ]
        }
      ]
    };
  };
  const profile$L = "http://nictiz.nl/fhir/StructureDefinition/gp-JournalEntry";
  function parseGpJournalEntry(resource) {
    const ICPC_S = findComponentByCode(resource.component, "ADMDX");
    const ICPC_E = findComponentByCode(resource.component, "DISDX");
    return {
      ...resourceMeta(resource, profile$L, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      status: string(resource.status),
      code: codeableConcept(resource.code),
      context: reference(resource.context),
      ...oneOfValueX(resource, ["dateTime", "period"], "effective"),
      performer: map(resource.performer, reference),
      valueString: string(resource.valueString),
      ICPC_S: {
        valueCodeableConcept: codeableConcept(ICPC_S?.valueCodeableConcept)
      },
      ICPC_E: {
        valueCodeableConcept: codeableConcept(ICPC_E?.valueCodeableConcept)
      }
    };
  }
  const gpJournalEntry = {
    profile: profile$L,
    parse: parseGpJournalEntry,
    uiSchema: uiSchema$L
  };
  const SNOMED_SYSTEM = "http://snomed.info/sct";
  var Snomed = /* @__PURE__ */ ((Snomed2) => {
    Snomed2["LABORATORY_TEST_FINDING"] = "49581000146104";
    Snomed2["HEMATOLOGY"] = "252275004";
    Snomed2["CHEMISTRY"] = "275711006";
    Snomed2["SEROLOGY"] = "68793005";
    Snomed2["VIROLOGY"] = "395124008";
    Snomed2["TOXICOLOGY"] = "314076009";
    Snomed2["MICROBIOLOGY"] = "19851009";
    Snomed2["MOLECULAR_GENETICS"] = "405825005";
    Snomed2["ABOVE_REFERENCE_RANGE"] = "281302008";
    Snomed2["BELOW_REFERENCE_RANGE"] = "281300000";
    Snomed2["INTERMEDIATE"] = "11896004";
    Snomed2["RESISTANT"] = "30714006";
    Snomed2["SUSCEPTIBLE"] = "131196009";
    return Snomed2;
  })(Snomed || {});
  const SnomedResultTypes = [
    "252275004",
    "275711006",
    "68793005",
    "395124008",
    "314076009",
    "19851009",
    "405825005"
    /* MOLECULAR_GENETICS */
  ];
  const InterpretatieVlaggenCodelijst = [
    "281302008",
    "281300000",
    "11896004",
    "30714006",
    "131196009"
    /* SUSCEPTIBLE */
  ];
  const i18n$I = "r3.zib_laboratory_test_result_observation.reference_range";
  const uiSchemaGroup$z = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    return {
      label: formatMessage2(i18n$I),
      children: [
        ui.quantity(`${i18n$I}.low`, resource.low),
        ui.quantity(`${i18n$I}.high`, resource.high),
        ui.codeableConcept(`${i18n$I}.type`, resource.type)
      ]
    };
  };
  const summary$6 = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const formatSystemCode = systemCode(context);
    let typeCoding = {
      system: "http://hl7.org/fhir/referencerange-meaning",
      // NOSONAR,
      code: "normal"
    };
    if (resource.type) {
      typeCoding = resource.type?.coding.find(
        (x) => x.system === "http://hl7.org/fhir/referencerange-meaning"
        // NOSONAR,
      ) ?? resource.type?.coding[0];
    }
    return {
      label: formatSystemCode(typeCoding) ?? formatMessage2("summary.r3.zib_laboratory_test_result_observation.reference_range"),
      children: [...ui.range(`summary.${i18n$I}`, resource)]
    };
  };
  function parseReferenceRange(value2) {
    return {
      low: quantity(value2?.low),
      high: quantity(value2?.high),
      type: codeableConcept(value2?.type),
      appliesTo: map(value2?.appliesTo, codeableConcept),
      age: range(value2?.age)
    };
  }
  const referenceRange = {
    parse: parseReferenceRange,
    uiSchemaGroup: uiSchemaGroup$z,
    summary: summary$6
  };
  const uiSchemaGroup$y = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    return {
      label: formatMessage2("r3.zib_laboratory_test_result_observation.related"),
      children: [
        ui.reference(`r3.zib_laboratory_test_result_observation.related`, resource.target)
      ]
    };
  };
  function parseRelated(value2) {
    return {
      target: reference(value2?.target)
    };
  }
  const related = {
    parse: parseRelated
  };
  function organization({ formatMessage: formatMessage2, organization: organization2 }) {
    return {
      type: "SINGLE_VALUE",
      label: formatMessage2(`summary.organization`),
      display: organization2?.name
    };
  }
  function summaryOptions({ formatMessage: formatMessage2 }, i18n2, resource) {
    return {
      label: formatMessage2(`summary.options`),
      children: [
        {
          type: "REFERENCE_LINK",
          label: formatMessage2(`summary.${i18n2}.show_details`),
          reference: resource.referenceId
        }
      ]
    };
  }
  const i18n$H = "r3.zib_laboratory_test_result_observation";
  function getLabel$5(resource, { formatMessage: formatMessage2 }) {
    return lodashExports.capitalize(resource.code?.coding.at(0)?.display) || formatMessage2(i18n$H);
  }
  const uiSchema$K = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const hcimLaboratoryTestResult = {
      BasedOn: ui.reference(`${i18n$H}.based_on`, resource.basedOn),
      Status: ui.code(`${i18n$H}.status`, resource.status),
      ResultType: ui.codeableConcept(`${i18n$H}.result_type`, resource.resultType),
      Code: ui.codeableConcept(`${i18n$H}.code`, resource.code),
      Effective: ui.oneOfValueX(`${i18n$H}.effective`, resource, "effective"),
      Value: ui.oneOfValueX(`${i18n$H}.value`, resource),
      Interpretation: ui.codeableConcept(`${i18n$H}.interpretation`, resource.interpretation),
      Comment: ui.string(`${i18n$H}.comment`, resource.comment),
      Method: ui.codeableConcept(`${i18n$H}.method`, resource.method),
      Specimen: ui.reference(`${i18n$H}.specimen`, resource.specimen),
      ReferenceRange: map(
        resource.referenceRange,
        (x) => uiSchemaGroup$z(x, context),
        true
      ).flat(),
      Related: map(resource.related, (x) => uiSchemaGroup$y(x, context), true).flat()
    };
    const hcimBasicElements = {
      Identifier: ui.identifier(`${i18n$H}.identifier`, resource.identifier),
      Subject: ui.reference(`${i18n$H}.subject`, resource.subject),
      Context: ui.reference(`${i18n$H}.context`, resource.context),
      Performer: ui.reference(`${i18n$H}.performer`, resource.performer)
    };
    return {
      label: getLabel$5(resource, context),
      children: [
        {
          label: formatMessage2(i18n$H),
          children: [
            hcimBasicElements.Identifier,
            hcimBasicElements.Subject,
            hcimBasicElements.Context,
            ...hcimLaboratoryTestResult.Effective
          ]
        },
        {
          label: formatMessage2(`${i18n$H}.general_test_information`),
          children: [hcimLaboratoryTestResult.ResultType, hcimLaboratoryTestResult.Comment]
        },
        {
          label: formatMessage2(`${i18n$H}.lab_test`),
          children: [
            hcimLaboratoryTestResult.Code,
            hcimLaboratoryTestResult.Method,
            ...hcimLaboratoryTestResult.Effective,
            ...hcimLaboratoryTestResult.Value,
            hcimLaboratoryTestResult.Status,
            ...ui.helpers.getChildren(hcimLaboratoryTestResult.ReferenceRange),
            hcimLaboratoryTestResult.Interpretation
          ]
        }
      ]
    };
  };
  const summary$5 = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const referenceRangeSummary = map(
      resource.referenceRange,
      (x) => referenceRange.summary(x, context),
      true
    );
    const resultFlags = resource.interpretation?.coding.filter(
      (x) => x.system === SNOMED_SYSTEM && InterpretatieVlaggenCodelijst.includes(x.code)
    );
    return {
      label: getLabel$5(resource, context),
      children: [
        {
          children: [
            ...ui.oneOfValueX(`summary.${i18n$H}.effective`, resource, "effective"),
            ...ui.oneOfValueX(`summary.${i18n$H}.value`, resource),
            ui.coding(`summary.${i18n$H}.interpretation`, resultFlags)
          ]
        },
        {
          label: formatMessage2(`summary.${i18n$H}.group_test_details`),
          children: [
            ui.code(`summary.${i18n$H}.status`, resource.status, {
              i18nCode: "r3.observation.status"
            }),
            ui.reference(`summary.${i18n$H}.specimen`, resource.specimen)
          ]
        },
        ...referenceRangeSummary,
        {
          label: formatMessage2(`summary.${i18n$H}.group_performer`),
          children: [
            ui.reference(`summary.${i18n$H}.performer`, resource.performer),
            organization(context)
          ]
        },
        summaryOptions(context, i18n$H, resource)
      ]
    };
  };
  const profile$K = "http://nictiz.nl/fhir/StructureDefinition/zib-LaboratoryTestResult-Observation";
  function parseZibLaboratoryTestResultObservationBase(resource) {
    const laboratoryTestResultCode = filterCodeableConceptByCoding(
      resource.category,
      (x) => x.system === SNOMED_SYSTEM && x.code === Snomed.LABORATORY_TEST_FINDING
    );
    const resultType = filterCodeableConceptByCoding(
      resource.category,
      (x) => x.system === SNOMED_SYSTEM && SnomedResultTypes.includes(x.code)
    );
    return {
      identifier: map(resource.identifier, identifier),
      subject: reference(resource.subject),
      context: reference(resource.context),
      code: codeableConcept(resource?.code),
      method: codeableConcept(resource?.method),
      ...oneOfValueX(resource, ["dateTime", "period"], "effective"),
      ...oneOfValueX(resource, [
        "quantity",
        "codeableConcept",
        "string",
        "boolean",
        "range",
        "ratio",
        "dateTime",
        "period"
      ]),
      status: code(resource?.status),
      referenceRange: map(resource?.referenceRange, referenceRange.parse),
      interpretation: codeableConcept(resource?.interpretation),
      specimen: reference(resource.specimen),
      comment: string(resource.comment),
      laboratoryTestResultCode: map(laboratoryTestResultCode, codeableConcept),
      resultType: map(resultType, codeableConcept),
      related: map(resource.related, related.parse),
      basedOn: map(resource.basedOn, reference),
      performer: map(resource.performer, reference)
    };
  }
  function parseZibLaboratoryTestResultObservation(resource) {
    return {
      ...resourceMeta(resource, profile$K, FhirVersion.R3),
      ...parseZibLaboratoryTestResultObservationBase(resource)
    };
  }
  const zibLaboratoryTestResultObservation = {
    profile: profile$K,
    parse: parseZibLaboratoryTestResultObservation,
    uiSchema: uiSchema$K,
    summary: summary$5
  };
  const i18n$G = "r3.gp_laboratory_result";
  function getLabel$4(resource, { formatMessage: formatMessage2 }) {
    return lodashExports.capitalize(resource.context?.display) || formatMessage2(i18n$G);
  }
  const uiSchema$J = (resource, context) => {
    return {
      ...zibLaboratoryTestResultObservation.uiSchema(resource, context),
      label: getLabel$4(resource, context)
    };
  };
  const summary$4 = (resource, context) => {
    return {
      ...zibLaboratoryTestResultObservation.summary(resource, context),
      label: getLabel$4(resource, context)
    };
  };
  const profile$J = "http://nictiz.nl/fhir/StructureDefinition/gp-LaboratoryResult";
  function parseGpLaboratoryResult(resource) {
    const { ...rest } = parseZibLaboratoryTestResultObservationBase(resource);
    return {
      ...rest,
      ...resourceMeta(resource, profile$J, FhirVersion.R3)
    };
  }
  const gpLaboratoryResult = {
    profile: profile$J,
    parse: parseGpLaboratoryResult,
    uiSchema: uiSchema$J,
    summary: summary$4
  };
  const uiSchemaGroup$x = (resource, context) => {
    const i18n2 = "r3.attachment";
    const ui = context.ui;
    return {
      label: i18n2,
      children: [
        ui.string(`${i18n2}.contentType`, resource.contentType),
        ui.string(`${i18n2}.language`, resource.language),
        ui.string(`${i18n2}.data`, resource.data),
        ui.string(`${i18n2}.url`, resource.url),
        ui.unsignedInt(`${i18n2}.size`, resource.size),
        ui.string(`${i18n2}.hash`, resource.hash),
        ui.string(`${i18n2}.title`, resource.title),
        ui.dateTime(`${i18n2}.creation`, resource.creation)
      ]
    };
  };
  function parseAttachment(value2) {
    return {
      contentType: string(value2?.contentType),
      language: string(value2?.language),
      data: string(value2?.data),
      url: string(value2?.url),
      size: unsignedInt(value2?.size),
      hash: string(value2?.hash),
      title: string(value2?.title),
      creation: dateTime(value2?.creation)
    };
  }
  const attachment = {
    parse: parseAttachment,
    uiSchemaGroup: uiSchemaGroup$x
  };
  const uiSchemaGroup$w = (resource, context) => {
    const i18n2 = "r3.nl_core_address";
    const ui = context.ui;
    return {
      label: i18n2,
      children: [
        ui.code(`${i18n2}.use`, resource?.use),
        ui.code(`${i18n2}.type`, resource?.type),
        ui.string(`${i18n2}.text`, resource?.text),
        ui.string(`${i18n2}.city`, resource?.city),
        ui.string(`${i18n2}.district`, resource?.district),
        ui.string(`${i18n2}.state`, resource?.state),
        ui.string(`${i18n2}.postalCode`, resource?.postalCode),
        ui.string(`${i18n2}.country`, resource?.country),
        ...ui.period(`${i18n2}.period`, resource?.period)
      ]
    };
  };
  function parseNlCoreAddress(value2) {
    return {
      use: code(value2?.use),
      type: code(value2?.type),
      text: string(value2?.text),
      line: map(value2?.line, string),
      city: string(value2?.city),
      district: string(value2?.district),
      state: string(value2?.state),
      postalCode: string(value2?.postalCode),
      country: string(value2?.country),
      period: period(value2?.period)
    };
  }
  const nlCoreAddress = {
    parse: parseNlCoreAddress,
    uiSchemaGroup: uiSchemaGroup$w
  };
  const uiSchemaGroup$v = (resource, context) => {
    const i18n2 = "r3.nl_core_contact_point";
    const ui = context.ui;
    return {
      label: i18n2,
      children: [
        ui.code(`${i18n2}.system`, resource?.system),
        ui.string(`${i18n2}.value`, resource?.value),
        ui.code(`${i18n2}.use`, resource?.use),
        ui.positiveInt(`${i18n2}.rank`, resource?.rank),
        ...ui.period(`${i18n2}.period`, resource.period)
      ]
    };
  };
  function parseNlCoreContactpoint(value2) {
    return {
      system: code(value2?.system),
      value: string(value2?.value),
      use: code(value2?.use),
      rank: positiveInt(value2?.rank),
      period: period(value2?.period)
    };
  }
  const nlCoreContactpoint = {
    parse: parseNlCoreContactpoint,
    uiSchemaGroup: uiSchemaGroup$v
  };
  const uiSchemaGroup$u = (resource, context) => {
    const i18n2 = "r3.nl_core_humanname";
    const ui = context.ui;
    return {
      label: i18n2,
      children: [
        ui.string(`${i18n2}.family`, resource?.family),
        ui.string(`${i18n2}.given`, resource?.given),
        ...ui.period(`${i18n2}.period`, resource?.period),
        ui.string(`${i18n2}.prefix`, resource?.prefix),
        ui.string(`${i18n2}.suffix`, resource?.suffix),
        ui.string(`${i18n2}.use`, resource?.use),
        ui.string(`${i18n2}.text`, resource?.text)
      ]
    };
  };
  function parseNlCoreHumanname(value2) {
    return {
      family: string(value2?.family),
      given: map(value2?.given, string),
      period: period(value2?.period),
      prefix: map(value2?.prefix, string),
      suffix: map(value2?.suffix, string),
      text: string(value2?.text),
      use: string(value2?.use)
    };
  }
  const nlCoreHumanname = {
    parse: parseNlCoreHumanname,
    uiSchemaGroup: uiSchemaGroup$u
  };
  const uiSchemaGroup$t = (resource, { ui, formatMessage: formatMessage2 }) => {
    const i18n2 = "r3.zib_administration_schedule";
    const { repeat: repeat2 } = resource;
    const hcimInstructionsForUse = {
      DoseDuration: ui.oneOfValueX(`${i18n2}.repeat.bounds`, repeat2, "bounds"),
      DurationOfAdministration: ui.valueWithUnit(
        `${i18n2}.repeat.duration`,
        repeat2?.duration,
        repeat2?.durationUnit
      ),
      Frequency: ui.integer(`${i18n2}.repeat.frequency`, repeat2?.frequency),
      FrequencyMax: ui.integer(`${i18n2}.repeat.frequency_max`, repeat2?.frequencyMax),
      FrequencyOrInterval: ui.valueWithUnit(
        `${i18n2}.repeat.period`,
        repeat2?.period,
        repeat2?.periodUnit
      ),
      WeekDay: ui.code(`${i18n2}.repeat.day_of_week`, repeat2?.dayOfWeek),
      AdministrationTime: ui.dateTime(`${i18n2}.repeat.time_of_day`, repeat2?.timeOfDay),
      TimeOfDay: ui.code(`${i18n2}.repeat.when`, repeat2?.when)
    };
    return {
      label: formatMessage2(i18n2),
      children: [
        ...hcimInstructionsForUse.DoseDuration,
        hcimInstructionsForUse.DurationOfAdministration,
        hcimInstructionsForUse.Frequency,
        hcimInstructionsForUse.FrequencyMax,
        hcimInstructionsForUse.FrequencyOrInterval,
        hcimInstructionsForUse.WeekDay,
        hcimInstructionsForUse.AdministrationTime,
        hcimInstructionsForUse.TimeOfDay
      ]
    };
  };
  function parseZibAdministrationSchedule(value2) {
    const { repeat: repeat2 } = value2 ?? {};
    return {
      repeat: {
        ...oneOfValueX(repeat2, ["duration", "range", "period"], "bounds"),
        duration: decimal(repeat2?.duration),
        durationUnit: code(repeat2?.durationUnit),
        frequency: integer(repeat2?.frequency),
        frequencyMax: integer(repeat2?.frequencyMax),
        period: decimal(repeat2?.period),
        periodUnit: code(repeat2?.periodUnit),
        dayOfWeek: map(repeat2?.dayOfWeek, code),
        timeOfDay: map(repeat2?.timeOfDay, dateTime),
        when: map(repeat2?.when, code)
      }
    };
  }
  const zibAdministrationSchedule = {
    parse: parseZibAdministrationSchedule,
    uiSchemaGroup: uiSchemaGroup$t
  };
  const i18n$F = "r3.zib_instructions_for_use";
  const uiSchemaGroup$s = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const hcimInstructionsForUse = {
      SequenceNumber: ui.integer(`${i18n$F}.sequence`, resource.sequence),
      Description: ui.string(`${i18n$F}.text`, resource.text),
      AdditionalInstructions: ui.codeableConcept(
        `${i18n$F}.additional_instruction`,
        resource.additionalInstruction
      ),
      AdministeringSchedule: zibAdministrationSchedule.uiSchemaGroup(resource.timing, context),
      AsNeeded: ui.codeableConcept(`${i18n$F}.as_needed_codeable_concept`, resource.asNeeded),
      RouteOfAdministration: ui.codeableConcept(`${i18n$F}.route`, resource.route),
      Dose: ui.oneOfValueX(`${i18n$F}.dose`, resource, "dose"),
      MaximumDose: ui.ratio(`${i18n$F}.max_dose_per_period`, resource.maxDosePerPeriod),
      AdministeringSpeed: ui.oneOfValueX(`${i18n$F}.rate`, resource, "rate")
    };
    return [
      {
        label: formatMessage2(i18n$F),
        children: [
          hcimInstructionsForUse.Description,
          hcimInstructionsForUse.RouteOfAdministration,
          hcimInstructionsForUse.AdditionalInstructions,
          ...hcimInstructionsForUse.AdministeringSpeed,
          hcimInstructionsForUse.SequenceNumber,
          ...hcimInstructionsForUse.Dose,
          ...hcimInstructionsForUse.MaximumDose,
          hcimInstructionsForUse.AsNeeded
        ]
      },
      hcimInstructionsForUse.AdministeringSchedule
    ];
  };
  const summary$3 = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    return {
      label: formatMessage2(`summary.${i18n$F}`, { sequence: resource.sequence }),
      children: [
        ui.string(`summary.${i18n$F}.text`, resource.text),
        ...ui.oneOfValueX(`summary.${i18n$F}.dose`, resource, "dose")
      ]
    };
  };
  function parseZibInstructionsForUse(value2) {
    return {
      sequence: integer(value2?.sequence),
      text: string(value2?.text),
      additionalInstruction: map(value2?.additionalInstruction, codeableConcept),
      asNeeded: codeableConcept(value2?.asNeededCodeableConcept),
      route: codeableConcept(value2?.route),
      ...oneOfValueX(value2, ["range", "quantity"], "dose"),
      maxDosePerPeriod: ratio(value2?.maxDosePerPeriod),
      ...oneOfValueX(value2, ["ratio", "range", "quantity"], "rate"),
      timing: zibAdministrationSchedule.parse(value2?.timing)
    };
  }
  const zibInstructionsForUse = {
    parse: parseZibInstructionsForUse,
    uiSchemaGroup: uiSchemaGroup$s,
    summary: summary$3
  };
  const uiSchemaGroup$r = (resource, context) => {
    const i18n2 = "r3.zib_product_ingredient";
    const ui = context.ui;
    return {
      label: i18n2,
      children: [
        ui.codeableConcept(`${i18n2}.item`, resource.item),
        ...ui.ratio(`${i18n2}.amount`, resource.amount)
      ]
    };
  };
  function parseZibProductIngredient(value2) {
    return {
      item: codeableConcept(value2?.itemCodeableConcept),
      amount: ratio(value2?.amount)
    };
  }
  const zibProductIngredient = {
    parse: parseZibProductIngredient,
    uiSchemaGroup: uiSchemaGroup$r
  };
  const uiSchemaGroup$q = (resource, context) => {
    const i18n2 = "r3.zib_product_package";
    const ui = context.ui;
    const contents = map(
      resource.content,
      (content) => {
        return [
          ui.codeableConcept(`${i18n2}.content_item`, content.item),
          ui.reference(`${i18n2}.content_reference`, content.reference)
        ];
      },
      true
    );
    return {
      label: i18n2,
      children: [...contents.flat()]
    };
  };
  function parseZibProductPackage(value2) {
    return {
      content: map(value2?.content, ({ itemCodeableConcept, itemReference }) => ({
        item: codeableConcept(itemCodeableConcept),
        reference: reference(itemReference)
      }))
    };
  }
  const zibProductPackage = {
    parse: parseZibProductPackage,
    uiSchemaGroup: uiSchemaGroup$q
  };
  const i18n$E = "r3.nl_core_organization";
  const uiSchema$I = (resource, context) => {
    const ui = context.ui;
    const address = map(
      resource.address,
      (x) => nlCoreAddress.uiSchemaGroup(x, context),
      true
    ).flat();
    const telecom = map(
      resource.telecom,
      (x) => nlCoreContactpoint.uiSchemaGroup(x, context),
      true
    ).flat();
    return {
      label: resource.name ?? context.formatMessage(i18n$E),
      children: [
        {
          label: `${i18n$E}.group_details`,
          children: [
            ui.identifier(`${i18n$E}.identifier`, resource.identifier),
            ui.string(`${i18n$E}.name`, resource.name),
            ui.codeableConcept(
              `${i18n$E}.department_specialty`,
              resource.departmentSpecialty
            ),
            ui.codeableConcept(`${i18n$E}.organization_type`, resource.organizationType)
          ]
        },
        ...address,
        ...telecom
      ]
    };
  };
  const profile$I = "http://fhir.nl/fhir/StructureDefinition/nl-core-organization";
  function parseNlCoreOrganization(resource) {
    return {
      ...resourceMeta(resource, profile$I, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      name: string(resource.name),
      departmentSpecialty: map(
        filterCodeableConceptByCoding(
          resource.type,
          (x) => x.system === "urn:oid:2.16.840.1.113883.2.4.6.7"
        ),
        codeableConcept
      ),
      telecom: map(resource.telecom, nlCoreContactpoint.parse),
      address: map(resource.address, nlCoreAddress.parse),
      organizationType: map(
        filterCodeableConceptByCoding(
          resource.type,
          (x) => x.system === "http://nictiz.nl/fhir/NamingSystem/organization-type"
          // NOSONAR
        ),
        codeableConcept
      )
    };
  }
  const nlCoreOrganization = {
    profile: profile$I,
    parse: parseNlCoreOrganization,
    uiSchema: uiSchema$I
  };
  const uiSchemaGroup$p = (resource, context) => {
    const i18n2 = "r3.nl_core_patient.communication";
    const ui = context.ui;
    return {
      label: i18n2,
      children: [
        ui.codeableConcept(`${i18n2}.language`, resource.language),
        ui.boolean(`${i18n2}.preferred`, resource.preferred)
      ]
    };
  };
  function parseCommunication(value2) {
    return {
      language: codeableConcept(value2?.language),
      preferred: boolean(value2?.preferred)
    };
  }
  const communication = {
    parse: parseCommunication
  };
  const uiSchemaGroup$o = (resource, context) => {
    const i18n2 = "r3.nl_core_patient.contact";
    const ui = context.ui;
    const telecom = map(
      resource.telecom,
      (x) => nlCoreContactpoint.uiSchemaGroup(x, context),
      true
    ).flat();
    return {
      label: i18n2,
      children: [
        ...nlCoreHumanname.uiSchemaGroup(resource.name, context).children,
        ...ui.helpers.getChildren(telecom),
        ...nlCoreAddress.uiSchemaGroup(resource.address, context).children,
        ui.code(`${i18n2}.gender`, resource.gender),
        ui.reference(`${i18n2}.organization`, resource.organization),
        ...ui.period(`${i18n2}.period`, resource.period)
      ].filter(isNonNullish)
    };
  };
  function parseContact(value2) {
    return {
      relationship: map(value2?.relationship, codeableConcept, true),
      name: nlCoreHumanname.parse(value2?.name),
      telecom: map(value2?.telecom, nlCoreContactpoint.parse, true),
      address: nlCoreAddress.parse(value2?.address),
      gender: code(value2?.gender),
      organization: reference(value2?.organization),
      period: period(value2?.period)
    };
  }
  const contact = {
    parse: parseContact
  };
  const uiSchemaGroup$n = (resource, context) => {
    const i18n2 = "r3.nl_core_patient.link";
    const ui = context.ui;
    return {
      label: i18n2,
      children: [
        ui.reference(`${i18n2}.other`, resource.other),
        ui.code(`${i18n2}.type`, resource.type)
      ]
    };
  };
  function parseLink(value2) {
    return {
      other: reference(value2?.other),
      type: code(value2?.type)
    };
  }
  const link = {
    parse: parseLink
  };
  const i18n$D = "r3.nl_core_patient";
  const uiSchema$H = (resource, context) => {
    const ui = context.ui;
    const address = map(resource.address, (x) => nlCoreAddress.uiSchemaGroup(x, context), true);
    const communication2 = map(
      resource.communication,
      (x) => uiSchemaGroup$p(x, context),
      true
    );
    const contact2 = map(resource.contact, (x) => uiSchemaGroup$o(x, context), true);
    const link2 = map(resource.link, (x) => uiSchemaGroup$n(x, context), true);
    const name = map(resource.name, (x) => nlCoreHumanname.uiSchemaGroup(x, context), true);
    const photo = map(resource.photo, (x) => uiSchemaGroup$x(x, context), true);
    const telecom = map(
      resource.telecom,
      (x) => nlCoreContactpoint.uiSchemaGroup(x, context),
      true
    );
    return {
      label: resource.name?.at(0)?.text ?? context.formatMessage(i18n$D),
      children: [
        {
          label: `${i18n$D}.group_details`,
          children: [
            ui.boolean(`${i18n$D}.active`, resource.active),
            ui.date(`${i18n$D}.birth_date`, resource.birthDate),
            ui.boolean(`${i18n$D}.deceased`, resource.deceased),
            ui.dateTime(`${i18n$D}.deceased_date_time`, resource.deceasedDateTime),
            ui.code(`${i18n$D}.gender`, resource.gender),
            ui.reference(`${i18n$D}.general_practitioner`, resource.generalPractitioner),
            ui.identifier(`${i18n$D}.identifier`, resource.identifier),
            ui.reference(`${i18n$D}.managing_organization`, resource.managingOrganization),
            ui.codeableConcept(`${i18n$D}.marital_status`, resource.maritalStatus),
            ui.boolean(`${i18n$D}.multiple_birth`, resource.multipleBirth),
            ui.integer(`${i18n$D}.multiple_birth_integer`, resource.multipleBirthInteger)
          ]
        },
        ...address,
        ...communication2,
        ...contact2,
        ...link2,
        ...name,
        ...photo,
        ...telecom
      ]
    };
  };
  const profile$H = "http://fhir.nl/fhir/StructureDefinition/nl-core-patient";
  function parseNlCorePatient$1(resource) {
    return {
      ...resourceMeta(resource, profile$H, FhirVersion.R3),
      active: boolean(resource.active),
      address: map(resource.address, nlCoreAddress.parse),
      birthDate: date(resource.birthDate),
      communication: map(resource.communication, communication.parse),
      contact: map(resource.contact, contact.parse),
      deceased: boolean(resource.deceasedBoolean),
      deceasedDateTime: dateTime(resource.deceasedDateTime),
      gender: code(resource.gender),
      generalPractitioner: map(resource.generalPractitioner, reference),
      identifier: map(resource.identifier, identifier),
      link: map(resource.link, link.parse),
      managingOrganization: reference(resource.managingOrganization),
      maritalStatus: codeableConcept(resource.maritalStatus),
      multipleBirth: boolean(resource.multipleBirthBoolean),
      multipleBirthInteger: integer(resource.multipleBirthInteger),
      name: map(resource.name, nlCoreHumanname.parse),
      photo: map(resource.photo, attachment.parse),
      telecom: map(resource.telecom, nlCoreContactpoint.parse)
    };
  }
  const nlCorePatient = {
    profile: profile$H,
    parse: parseNlCorePatient$1,
    uiSchema: uiSchema$H
  };
  const i18n$C = "r3.nl_core_practitioner";
  const uiSchema$G = (resource, context) => {
    const ui = context.ui;
    const address = map(resource.address, (x) => nlCoreAddress.uiSchemaGroup(x, context), true);
    const name = map(resource.name, (x) => nlCoreHumanname.uiSchemaGroup(x, context), true);
    const telecom = map(
      resource.telecom,
      (x) => nlCoreContactpoint.uiSchemaGroup(x, context),
      true
    );
    return {
      label: resource.name?.at(0)?.text ?? context.formatMessage(i18n$C),
      children: [
        {
          label: `${i18n$C}.group_details`,
          children: [ui.identifier(`${i18n$C}.identifier`, resource.identifier)]
        },
        ...address,
        ...name,
        ...telecom
      ]
    };
  };
  const profile$G = "http://fhir.nl/fhir/StructureDefinition/nl-core-practitioner";
  function parseNlCorePractitioner(resource) {
    return {
      ...resourceMeta(resource, profile$G, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      name: map(resource.name, nlCoreHumanname.parse),
      address: map(resource.address, nlCoreAddress.parse),
      telecom: map(resource.telecom, nlCoreContactpoint.parse)
    };
  }
  const nlCorePractitioner = {
    profile: profile$G,
    parse: parseNlCorePractitioner,
    uiSchema: uiSchema$G
  };
  const i18n$B = "r3.nl_core_practitionerrole";
  const uiSchema$F = (resource, context) => {
    const ui = context.ui;
    const telecom = map(
      resource.telecom,
      (x) => nlCoreContactpoint.uiSchemaGroup(x, context),
      true
    );
    return {
      label: resource.identifier?.at(0)?.value ?? context.formatMessage(i18n$B),
      children: [
        {
          label: `${i18n$B}.group_details`,
          children: [
            ui.identifier(`${i18n$B}.identifier`, resource.identifier),
            ui.reference(`${i18n$B}.organization`, resource.organization),
            ui.codeableConcept(`${i18n$B}.specialty`, resource.specialty)
          ]
        },
        ...telecom
      ]
    };
  };
  const profile$F = "http://fhir.nl/fhir/StructureDefinition/nl-core-practitionerrole";
  function parseNlCorePractitionerRole(resource) {
    return {
      ...resourceMeta(resource, profile$F, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      organization: reference(resource.organization),
      specialty: map(resource.specialty, codeableConcept),
      telecom: map(resource.telecom, nlCoreContactpoint.parse)
    };
  }
  const nlCorePractitionerRole = {
    profile: profile$F,
    parse: parseNlCorePractitionerRole,
    uiSchema: uiSchema$F
  };
  const i18n$A = "r3.nl_core_episodeofcare";
  const uiSchema$E = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const hcimBasicElements = {
      Identifier: ui.identifier(`${i18n$A}.identifier`, resource.identifier),
      Patient: ui.reference(`${i18n$A}.patient`, resource.patient),
      Period: ui.period(`${i18n$A}.period`, resource.period)
    };
    const hcimConcernForTransfer = {
      Type: ui.codeableConcept(`${i18n$A}.type`, resource.type)
    };
    return {
      label: resource.title ?? formatMessage2(i18n$A),
      children: [
        {
          label: formatMessage2(i18n$A),
          children: [
            hcimBasicElements.Identifier,
            hcimBasicElements.Patient,
            ...hcimBasicElements.Period,
            hcimConcernForTransfer.Type
          ]
        }
      ]
    };
  };
  function parseDiagnosis$1(value2) {
    return {
      condition: reference(value2?.condition),
      role: codeableConcept(value2?.role),
      rank: positiveInt(value2?.rank)
    };
  }
  const diagnosis$1 = {
    parse: parseDiagnosis$1
  };
  function parseStatusHistory(value2) {
    return {
      status: code(value2?.status),
      period: period(value2?.period)
    };
  }
  const statusHistory = {
    parse: parseStatusHistory
  };
  const profile$E = "http://fhir.nl/fhir/StructureDefinition/nl-core-episodeofcare";
  function parseNlCoreEpisodeofcare(resource) {
    return {
      ...resourceMeta(resource, profile$E, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      title: extensionNictiz(resource, "EpisodeOfCare-Title"),
      status: code(resource.status),
      statusHistory: map(resource.statusHistory, statusHistory.parse),
      type: map(resource.type, codeableConcept),
      diagnosis: map(resource.diagnosis, diagnosis$1.parse),
      patient: reference(resource.patient),
      managingOrganization: reference(resource.managingOrganization),
      period: period(resource.period),
      referralRequest: map(resource.referralRequest, reference),
      careManager: reference(resource.careManager),
      team: map(resource.team, reference),
      account: map(resource.account, reference),
      dateFirstEncounter: extensionNictiz(resource, "EpisodeOfCare-DateFirstEncounter"),
      dateLastEncounter: extensionNictiz(resource, "EpisodeOfCare-DateLastEncounter")
    };
  }
  const nlCoreEpisodeofcare = {
    profile: profile$E,
    parse: parseNlCoreEpisodeofcare,
    uiSchema: uiSchema$E
  };
  const i18n$z = "r3.e_afspraak_appointment";
  const uiSchema$D = (resource, context) => {
    const ui = context.ui;
    return {
      label: resource.description ?? context.formatMessage(i18n$z),
      children: [
        {
          label: `${i18n$z}`,
          children: [
            ui.string(`${i18n$z}.status.order_status`, resource.status),
            ui.codeableConcept(`${i18n$z}.specialty`, resource.specialty),
            ui.string(`${i18n$z}.description`, resource.description),
            ui.dateTime(`${i18n$z}.start`, resource.start),
            ui.dateTime(`${i18n$z}.end`, resource.end),
            ui.reference(
              `${i18n$z}.participant`,
              resource.participant?.flatMap((x) => x.actor).filter(isNonNullish)
            )
          ]
        }
      ]
    };
  };
  const profile$D = "http://nictiz.nl/fhir/StructureDefinition/eAfspraak-Appointment";
  function parseEAfspraakAppointment(resource) {
    return {
      ...resourceMeta(resource, profile$D, FhirVersion.R3),
      status: string(resource.status),
      specialty: map(resource.specialty, codeableConcept),
      description: string(resource.description),
      start: dateTime(resource.start),
      end: dateTime(resource.end),
      participant: map(resource.participant, (x) => ({ actor: reference(x.actor) }))
    };
  }
  const eAfspraakAppointment = {
    profile: profile$D,
    parse: parseEAfspraakAppointment,
    uiSchema: uiSchema$D
  };
  const i18n$y = "r3.nl_core_observation";
  const uiSchema$C = (resource, context) => {
    const ui = context.ui;
    return {
      label: resource.identifier?.[0]?.value ?? context.formatMessage(i18n$y),
      children: [
        {
          label: `${i18n$y}.group_details`,
          children: [
            ui.identifier(`${i18n$y}.identifier`, resource.identifier),
            ui.code(`${i18n$y}.status`, resource.status),
            ui.codeableConcept(`${i18n$y}.category`, resource.category),
            ui.reference(`${i18n$y}.subject`, resource.subject),
            ui.reference(`${i18n$y}.context`, resource.context),
            Object.prototype.hasOwnProperty.call(resource, "effectiveDateTime") ? ui.dateTime(
              `${i18n$y}.effective_date_time`,
              resource.effectiveDateTime
            ) : void 0,
            ...ui.period(`${i18n$y}.effective_period`, resource.effectivePeriod),
            ui.codeableConcept(`${i18n$y}.data_absent_reason`, resource.dataAbsentReason),
            ui.string(`${i18n$y}.comment`, resource.comment),
            ui.codeableConcept(`${i18n$y}.body_site`, resource.bodySite)
          ].filter(isNonNullish)
        }
      ]
    };
  };
  const profile$C = "http://fhir.nl/fhir/StructureDefinition/nl-core-observation";
  function parseNlCoreObservationBase(resource) {
    return {
      identifier: map(resource.identifier, identifier),
      status: code(resource.status),
      category: map(resource.category, codeableConcept),
      subject: reference(resource.subject),
      context: reference(resource.context),
      valueQuantity: quantity(resource.valueQuantity),
      valueCodeableConcept: codeableConcept(resource.valueCodeableConcept),
      effectivePeriod: period(resource.effectivePeriod),
      dataAbsentReason: codeableConcept(resource.dataAbsentReason),
      method: codeableConcept(resource.method),
      bodySite: codeableConcept(resource.bodySite),
      effectiveDateTime: dateTime(resource.effectiveDateTime),
      comment: string(resource.comment)
    };
  }
  function parseNlCoreObservation(resource) {
    return {
      ...resourceMeta(resource, profile$C, FhirVersion.R3),
      ...parseNlCoreObservationBase(resource)
    };
  }
  const nlCoreObservation = {
    profile: profile$C,
    parse: parseNlCoreObservation,
    uiSchema: uiSchema$C
  };
  const performerGroup = (resource, context) => {
    const { formatMessage: formatMessage2 } = context;
    const profile2 = "r3.zib_administration_agreement.performer";
    return {
      label: formatMessage2(profile2),
      children: [
        context.ui.reference(`${profile2}.actor`, resource.actor),
        context.ui.reference(`${profile2}.on_behalf_of`, resource.onBehalfOf)
      ]
    };
  };
  const i18n$x = "r3.zib_administration_agreement";
  function getLabel$3(resource, { formatMessage: formatMessage2 }) {
    return lodashExports.capitalize(resource.medicationReference?.display) || formatMessage2(i18n$x);
  }
  const uiSchema$B = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const hcimAdministrationAgreement = {
      AdministrationAgreementDateTime: ui.dateTime(`${i18n$x}.authored_on`, resource.authoredOn),
      AgreementReason: ui.string(`${i18n$x}.agreement_reason`, resource.agreementReason),
      PeriodOfUsePeriod: ui.period(`${i18n$x}.period_of_use`, resource.periodOfUse),
      UsageDuration: ui.duration(`${i18n$x}.usage_duration`, resource.usageDuration),
      AdministrationAgreementAdditionalInformation: ui.codeableConcept(
        `${i18n$x}.additional_information`,
        resource.additionalInformation
      ),
      StopType: ui.codeableConcept(`${i18n$x}.stop_type`, resource.stopType),
      CanceledIndicator: ui.code(`${i18n$x}.status`, resource.status),
      MedicineForAdministrationAgreement: ui.reference(
        `${i18n$x}.medication_reference`,
        resource.medicationReference
      ),
      Supplier: map(resource.performer, (x) => performerGroup(x, context), true),
      MedicationAgreement: ui.reference(
        `${i18n$x}.authorizing_prescription`,
        resource.authorizingPrescription
      ),
      Comment: ui.annotation(`${i18n$x}.note`, resource.note)
    };
    const hcimInstructionsForUse = map(
      resource.dossageInstruction,
      (x) => uiSchemaGroup$s(x, context),
      true
    ).flat();
    const uiSchema2 = {
      label: getLabel$3(resource, context),
      children: [
        {
          label: formatMessage2(`fhir.group_general_info`),
          children: [
            hcimAdministrationAgreement.AdministrationAgreementDateTime,
            hcimAdministrationAgreement.AgreementReason,
            ...hcimAdministrationAgreement.PeriodOfUsePeriod,
            hcimAdministrationAgreement.UsageDuration,
            hcimAdministrationAgreement.AdministrationAgreementAdditionalInformation,
            hcimAdministrationAgreement.StopType,
            hcimAdministrationAgreement.CanceledIndicator,
            hcimAdministrationAgreement.MedicineForAdministrationAgreement,
            hcimAdministrationAgreement.MedicationAgreement,
            hcimAdministrationAgreement.Comment
          ]
        },
        ...hcimAdministrationAgreement.Supplier,
        ...hcimInstructionsForUse
      ]
    };
    return uiSchema2;
  };
  function parsePerformer$1(value2) {
    return {
      actor: reference(value2?.actor),
      onBehalfOf: reference(value2?.onBehalfOf)
    };
  }
  const profile$B = "http://nictiz.nl/fhir/StructureDefinition/zib-AdministrationAgreement";
  function parseZibAdministrationAgreement(resource) {
    return {
      ...resourceMeta(resource, profile$B, FhirVersion.R3),
      authoredOn: extensionNictiz(resource, "zib-AdministrationAgreement-AuthoredOn"),
      agreementReason: extensionNictiz(
        resource,
        "zib-AdministrationAgreement-AgreementReason"
      ),
      periodOfUse: extensionNictiz(resource, "zib-Medication-PeriodOfUse"),
      usageDuration: extensionNictiz(resource, "zib-MedicationUse-Duration"),
      additionalInformation: extensionNictiz(
        resource,
        "zib-Medication-AdditionalInformation"
      ),
      medicationTreatment: extensionNictiz(resource, "zib-Medication-MedicationTreatment"),
      stopType: extensionNictiz(resource, "zib-Medication-StopType"),
      repeatPeriodCyclicalSchedule: extensionNictiz(
        resource,
        "zib-Medication-RepeatPeriodCyclicalSchedule"
      ),
      identifier: map(resource.identifier, identifier),
      status: code(resource.status),
      category: codeableConcept(resource.category),
      medicationReference: reference(resource.medicationReference),
      quantity: quantity(resource.quantity),
      daysSupply: quantity(resource.daysSupply),
      note: map(resource.note, annotation),
      dossageInstruction: map(resource.dosageInstruction, zibInstructionsForUse.parse),
      performer: map(resource.performer, parsePerformer$1),
      authorizingPrescription: map(resource.authorizingPrescription, reference)
    };
  }
  const zibAdministrationAgreement = {
    profile: profile$B,
    parse: parseZibAdministrationAgreement,
    uiSchema: uiSchema$B
  };
  const i18n$w = "r3.zib_advance_directive";
  function getLabel$2(resource, { formatMessage: formatMessage2 }) {
    return resource.dateTime ?? formatMessage2(i18n$w);
  }
  const uiSchema$A = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const hcimAdvanceDirective = {
      Disorder: ui.reference(`${i18n$w}.disorder`, resource.disorder),
      Comment: ui.string(`${i18n$w}.comment`, resource.comment),
      LivingWillType: ui.codeableConcept(
        `${i18n$w}.type_of_living_will`,
        resource.typeOfLivingWill
      ),
      LivingWillDate: ui.dateTime(`${i18n$w}.date_time`, resource.dateTime),
      ConsentingParty: ui.reference(`${i18n$w}.consenting_party`, resource.consentingParty)
    };
    const attachment2 = uiSchemaGroup$x(resource.source.attachment, context);
    return {
      label: getLabel$2(resource, context),
      children: [
        {
          label: formatMessage2(`fhir.group_general_info`),
          children: [
            hcimAdvanceDirective.Disorder,
            hcimAdvanceDirective.Comment,
            hcimAdvanceDirective.LivingWillType,
            hcimAdvanceDirective.LivingWillDate,
            hcimAdvanceDirective.ConsentingParty
          ]
        },
        attachment2
      ]
    };
  };
  const typeOfLivingWillValueSet = [
    {
      system: "http://hl7.org/fhir/v3/NullFlavor",
      // NOSONAR;
      code: "OTH"
    },
    {
      system: "urn:oid:2.16.840.1.113883.2.4.3.11.60.40.4.14.1",
      code: "NR"
    },
    {
      system: "urn:oid:2.16.840.1.113883.2.4.3.11.60.40.4.14.1",
      code: "VOL"
    },
    {
      system: "urn:oid:2.16.840.1.113883.2.4.3.11.60.40.4.14.1",
      code: "VERB"
    },
    {
      system: "urn:oid:2.16.840.1.113883.2.4.3.11.60.40.4.14.1",
      code: "VERBVL"
    },
    {
      system: "urn:oid:2.16.840.1.113883.2.4.3.11.60.40.4.14.1",
      code: "MON"
    },
    {
      system: "urn:oid:2.16.840.1.113883.2.4.3.11.60.40.4.14.1",
      code: "EU"
    },
    {
      system: "urn:oid:2.16.840.1.113883.2.4.3.11.60.40.4.14.1",
      code: "EUD"
    },
    {
      system: "urn:oid:2.16.840.1.113883.2.4.3.11.60.40.4.14.1",
      code: "LW"
    },
    {
      system: "urn:oid:2.16.840.1.113883.2.4.3.11.60.40.4.14.1",
      code: "DO"
    }
  ];
  const profile$A = "http://nictiz.nl/fhir/StructureDefinition/zib-AdvanceDirective";
  function parseZibAdvanceDirective(resource) {
    const typeOfLivingWillCodeableConcepts = intersectCodeableConcept(
      resource.category,
      typeOfLivingWillValueSet
    );
    return {
      ...resourceMeta(resource, profile$A, FhirVersion.R3),
      category: map(resource.category, codeableConcept),
      dateTime: dateTime(resource.dateTime),
      disorder: extensionNictiz(resource, "zib-AdvanceDirective-Disorder"),
      consentingParty: map(resource.consentingParty, reference),
      source: {
        attachment: attachment.parse(resource.sourceAttachment),
        identifier: identifier(resource.sourceIdentifier),
        reference: reference(resource.sourceReference)
      },
      comment: extensionNictiz(resource, "Comment"),
      typeOfLivingWill: map(typeOfLivingWillCodeableConcepts, codeableConcept)
    };
  }
  const zibAdvanceDirective = {
    profile: profile$A,
    parse: parseZibAdvanceDirective,
    uiSchema: uiSchema$A
  };
  const i18n$v = "r3.zib_alcohol_use";
  const uiSchema$z = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const hcimAlcoholUse = {
      StartDate: ui.dateTime(`${i18n$v}.effective_period.start`, resource.effectivePeriod?.start),
      EndDate: ui.dateTime(`${i18n$v}.effective_period.end`, resource.effectivePeriod?.end),
      AlcoholUseStatus: ui.codeableConcept(`${i18n$v}.value`, resource.valueCodeableConcept),
      Comment: ui.string(`${i18n$v}.comment`, resource.comment),
      Amount: ui.quantity(`${i18n$v}.amount.value`, resource.component.amount)
    };
    const hcimBasicElements = {
      IdentificationNumber: ui.identifier(`${i18n$v}.identifier`, resource.identifier),
      Subject: ui.reference(`${i18n$v}.subject`, resource.subject),
      Author: ui.reference(`${i18n$v}.performer`, resource.performer)
    };
    return {
      label: formatMessage2(i18n$v),
      children: [
        {
          label: formatMessage2(`fhir.group_general_info`),
          children: [
            hcimAlcoholUse.StartDate,
            hcimAlcoholUse.EndDate,
            hcimAlcoholUse.AlcoholUseStatus,
            hcimAlcoholUse.Comment,
            hcimAlcoholUse.Amount,
            hcimBasicElements.IdentificationNumber,
            hcimBasicElements.Subject,
            hcimBasicElements.Author
          ]
        }
      ]
    };
  };
  const profile$z = "http://nictiz.nl/fhir/StructureDefinition/zib-AlcoholUse";
  function parseZibAlcoholUse(resource) {
    const { effectiveDateTime: _, ...rest } = parseNlCoreObservationBase(resource);
    return {
      ...rest,
      ...resourceMeta(resource, profile$z, FhirVersion.R3),
      component: { amount: quantity(resource.component?.[0]?.valueQuantity) },
      performer: map(resource.performer, reference)
    };
  }
  const zibAlcoholUse = {
    profile: profile$z,
    parse: parseZibAlcoholUse,
    uiSchema: uiSchema$z
  };
  const i18n$u = "r3.zib_alert";
  const uiSchema$y = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const hcimAlert = {
      Condition: ui.reference(`${i18n$u}.concern_reference`, resource.concernReference),
      AlertType: ui.codeableConcept(`${i18n$u}.category`, resource.category),
      AlertName: ui.codeableConcept(`${i18n$u}.code`, resource.code),
      StartDateTime: ui.dateTime(`${i18n$u}.period.start`, resource.period?.start)
    };
    const hcimBasicElements = {
      IdentificationNumber: ui.identifier(`${i18n$u}.identifier`, resource.identifier),
      Author: ui.reference(`${i18n$u}.author`, resource.author)
    };
    return {
      label: formatMessage2(i18n$u),
      children: [
        {
          label: resource.code?.coding?.[0]?.display ?? context.formatMessage(i18n$u),
          children: [
            hcimAlert.Condition,
            hcimAlert.AlertType,
            hcimAlert.AlertName,
            hcimAlert.StartDateTime,
            hcimBasicElements.IdentificationNumber,
            hcimBasicElements.Author
          ]
        }
      ]
    };
  };
  const profile$y = "http://nictiz.nl/fhir/StructureDefinition/zib-Alert";
  function parseZibAlert(resource) {
    return {
      ...resourceMeta(resource, profile$y, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      status: code(resource.status),
      category: codeableConcept(resource.category),
      code: codeableConcept(resource.code),
      subject: reference(resource.subject),
      period: period(resource.period),
      encounter: reference(resource.encounter),
      author: reference(resource.author),
      concernReference: extension(
        resource,
        "http://hl7.org/fhir/StructureDefinition/flag-detail",
        // NOSONAR
        "reference"
      )
    };
  }
  const zibAlert = {
    profile: profile$y,
    parse: parseZibAlert,
    uiSchema: uiSchema$y
  };
  const i18n$t = "r3.zib_allergy_intolerance";
  const uiSchema$x = (resource, context) => {
    const ui = context.ui;
    return {
      label: resource.identifier?.at(0)?.value ?? context.formatMessage(i18n$t),
      children: [
        {
          label: `${i18n$t}.group_details`,
          children: [
            ui.identifier(`${i18n$t}.identifier`, resource.identifier),
            ui.code(`${i18n$t}.clinical_status`, resource.clinicalStatus),
            ui.code(`${i18n$t}.verification_status`, resource.verificationStatus),
            ui.code(`${i18n$t}.type`, resource.type),
            ui.code(`${i18n$t}.category`, resource.category),
            ui.code(`${i18n$t}.criticality`, resource.criticality),
            ui.codeableConcept(`${i18n$t}.code`, resource.code),
            ui.reference(`${i18n$t}.patient`, resource.patient)
          ]
        }
      ]
    };
  };
  const profile$x = "http://nictiz.nl/fhir/StructureDefinition/zib-AllergyIntolerance";
  function parseZibAllergyIntolerance(resource) {
    return {
      ...resourceMeta(resource, profile$x, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      clinicalStatus: code(resource.clinicalStatus),
      verificationStatus: code(resource.verificationStatus),
      type: code(resource.type),
      category: map(resource.category, code),
      criticality: code(resource.criticality),
      code: codeableConcept(resource.code),
      patient: reference(resource.patient)
    };
  }
  const zibAllergyIntolerance = {
    profile: profile$x,
    parse: parseZibAllergyIntolerance,
    uiSchema: uiSchema$x
  };
  const i18n$s = "r3.zib_blood_pressure";
  const uiSchema$w = (resource, context) => {
    const ui = context.ui;
    return {
      label: resource.effectiveDateTime ?? context.formatMessage(i18n$s),
      children: [
        {
          label: `${i18n$s}`,
          children: [
            ui.codeableConcept(`${i18n$s}.method`, resource.method),
            ui.codeableConcept(
              `${i18n$s}.cuff_type_loinc`,
              resource.cuffTypeLOINC.valueCodeableConcept
            ),
            ui.codeableConcept(
              `${i18n$s}.cuff_type_snomed`,
              resource.cuffTypeSNOMED.valueCodeableConcept
            ),
            ui.codeableConcept(`${i18n$s}.bodySite`, resource.bodySite),
            ui.codeableConcept(
              `${i18n$s}.diastolic_endpoint`,
              resource.diastolicEndpoint.valueCodeableConcept
            ),
            ui.quantity(`${i18n$s}.systolic_bp`, resource.systolicBP.valueQuantity),
            ui.quantity(`${i18n$s}.diastolic_bp.code`, resource.diastolicBP.valueQuantity),
            ui.quantity(
              `${i18n$s}.average_blood_pressure_loinc`,
              resource.averageBloodPressureLOINC.valueQuantity
            ),
            ui.quantity(
              `${i18n$s}.average_blood_pressure_snomed`,
              resource.averageBloodPressureSNOMED.valueQuantity
            ),
            ui.dateTime(`${i18n$s}.effective`, resource.effectiveDateTime),
            ui.string(`${i18n$s}.comment`, resource.comment),
            ui.codeableConcept(
              `${i18n$s}.position_snomed`,
              resource.positionSNOMED.valueCodeableConcept
            ),
            ui.codeableConcept(
              `${i18n$s}.position_loinc`,
              resource.positionLOINC.valueCodeableConcept
            )
          ]
        }
      ]
    };
  };
  const profile$w = "http://nictiz.nl/fhir/StructureDefinition/zib-BloodPressure";
  function parseZibBloodPressure(resource) {
    const cuffTypeLOINC = findComponentByCode(resource.component, "8358-4");
    const cuffTypeSNOMED = findComponentByCode(resource.component, "70665002");
    const diastolicEndpoint = findComponentByCode(resource.component, "85549003");
    const systolicBP = findComponentByCode(resource.component, "8480-6");
    const diastolicBP = findComponentByCode(resource.component, "8462-4");
    const averageBloodPressureLOINC = findComponentByCode(resource.component, "8478-0");
    const averageBloodPressureSNOMED = findComponentByCode(resource.component, "6797001");
    const positionSNOMED = findComponentByCode(resource.component, "424724000");
    const positionLOINC = findComponentByCode(resource.component, "8361-8");
    return {
      ...parseNlCoreObservationBase(resource),
      ...resourceMeta(resource, profile$w, FhirVersion.R3),
      cuffTypeLOINC: {
        valueCodeableConcept: codeableConcept(cuffTypeLOINC?.valueCodeableConcept)
      },
      cuffTypeSNOMED: {
        valueCodeableConcept: codeableConcept(cuffTypeSNOMED?.valueCodeableConcept)
      },
      diastolicEndpoint: {
        valueCodeableConcept: codeableConcept(diastolicEndpoint?.valueCodeableConcept)
      },
      systolicBP: {
        valueQuantity: quantity(systolicBP?.valueQuantity)
      },
      diastolicBP: {
        valueQuantity: quantity(diastolicBP?.valueQuantity)
      },
      averageBloodPressureLOINC: {
        valueQuantity: quantity(averageBloodPressureLOINC?.valueQuantity)
      },
      averageBloodPressureSNOMED: {
        valueQuantity: quantity(averageBloodPressureSNOMED?.valueQuantity)
      },
      positionSNOMED: {
        valueCodeableConcept: codeableConcept(positionSNOMED?.valueCodeableConcept)
      },
      positionLOINC: {
        valueCodeableConcept: codeableConcept(positionLOINC?.valueCodeableConcept)
      }
    };
  }
  const zibBloodPressure = {
    profile: profile$w,
    parse: parseZibBloodPressure,
    uiSchema: uiSchema$w
  };
  const i18n$r = "r3.zib_body_height";
  const uiSchema$v = (resource, context) => {
    const ui = context.ui;
    return {
      label: resource.effectiveDateTime ?? context.formatMessage(i18n$r),
      children: [
        {
          label: `${i18n$r}`,
          children: [
            ui.quantity(i18n$r, resource.valueQuantity),
            ui.dateTime(`${i18n$r}.effective`, resource.effectiveDateTime),
            ui.string(`${i18n$r}.comment`, resource.comment)
          ]
        }
      ]
    };
  };
  const profile$v = "http://nictiz.nl/fhir/StructureDefinition/zib-BodyHeight";
  function parseZibBodyHeight(resource) {
    return {
      ...parseNlCoreObservationBase(resource),
      ...resourceMeta(resource, profile$v, FhirVersion.R3)
    };
  }
  const zibBodyHeight = {
    profile: profile$v,
    parse: parseZibBodyHeight,
    uiSchema: uiSchema$v
  };
  const i18n$q = "r3.zib_body_weight";
  const uiSchema$u = (resource, context) => {
    const ui = context.ui;
    return {
      label: resource.effectiveDateTime ?? context.formatMessage(i18n$q),
      children: [
        {
          label: `${i18n$q}`,
          children: [
            ui.quantity(i18n$q, resource.valueQuantity),
            ui.string(`${i18n$q}.comment`, resource.comment),
            ui.dateTime(`${i18n$q}.effective`, resource.effectiveDateTime),
            ui.codeableConcept(`${i18n$q}.clothing`, resource.clothing.valueCodeableConcept)
          ]
        }
      ]
    };
  };
  const profile$u = "http://nictiz.nl/fhir/StructureDefinition/zib-BodyWeight";
  function parseZibBodyWeight(resource) {
    const clothing = findComponentByCode(resource.component, "8352-7");
    return {
      ...parseNlCoreObservationBase(resource),
      ...resourceMeta(resource, profile$u, FhirVersion.R3),
      clothing: {
        valueCodeableConcept: codeableConcept(clothing?.valueCodeableConcept)
      }
    };
  }
  const zibBodyWeight = {
    profile: profile$u,
    parse: parseZibBodyWeight,
    uiSchema: uiSchema$u
  };
  const uiSchema$t = (resource, context) => {
    return nlCoreObservation.uiSchema(resource, context);
  };
  const profile$t = "http://nictiz.nl/fhir/StructureDefinition/zib-DrugUse";
  function parseZibDrugUse(resource) {
    const { effectiveDateTime: _, ...rest } = parseNlCoreObservationBase(resource);
    return {
      ...rest,
      ...resourceMeta(resource, profile$t, FhirVersion.R3)
    };
  }
  const zibDrugUse = {
    profile: profile$t,
    parse: parseZibDrugUse,
    uiSchema: uiSchema$t
  };
  const uiSchemaGroup$m = (resource, context) => {
    const ui = context.ui;
    return {
      label: "Encounter.diagnosis",
      children: [ui.reference(`Encounter.diagnosis.condition`, resource.condition)]
    };
  };
  function parseDiagnosis(value2) {
    return {
      condition: reference(value2?.condition),
      role: codeableConcept(value2?.role),
      rank: positiveInt(value2?.rank)
    };
  }
  const diagnosis = {
    parse: parseDiagnosis
  };
  const uiSchemaGroup$l = (resource, context) => {
    const ui = context.ui;
    return {
      label: "Encounter.hospitalization",
      children: [
        ui.codeableConcept(`Encounter.hospitalization.admitSource`, resource.admitSource),
        ui.codeableConcept(
          `Encounter.hospitalization.dischargeDisposition`,
          resource.dischargeDisposition
        )
      ]
    };
  };
  function parseHospitalization(value2) {
    return {
      admitSource: codeableConcept(value2?.admitSource),
      dischargeDisposition: codeableConcept(value2?.dischargeDisposition)
    };
  }
  const hospitalization = {
    parse: parseHospitalization,
    uiSchemaGroup: uiSchemaGroup$l
  };
  const i18n$p = "r3.zib_encounter";
  const uiSchema$s = (resource, context) => {
    const ui = context.ui;
    const diagnosis2 = map(resource.diagnosis, (x) => uiSchemaGroup$m(x, context), true);
    const participants = map(
      resource.participant,
      (x) => uiSchemaGroup$B(x, context),
      true
    );
    return {
      label: resource.serviceProvider?.display ?? context.formatMessage(i18n$p),
      children: [
        {
          label: `${i18n$p}`,
          children: [
            ui.coding(`${i18n$p}.class`, resource.class),
            ...ui.helpers.getChildren(participants),
            ui.reference(`${i18n$p}.serviceProvider`, resource.serviceProvider),
            ...ui.period(`${i18n$p}.period`, resource.period),
            ...ui.helpers.getChildren(diagnosis2),
            ui.codeableConcept(`${i18n$p}.reason`, resource.reason),
            ...ui.helpers.getChildren(
              uiSchemaGroup$l(resource.hospitalization, context)
            )
          ]
        }
      ]
    };
  };
  const profile$s = "http://nictiz.nl/fhir/StructureDefinition/zib-Encounter";
  function parseZibEncounter(resource) {
    return {
      ...resourceMeta(resource, profile$s, FhirVersion.R3),
      class: coding(resource.class),
      participant: map(resource.participant, encounterParticipant.parse),
      serviceProvider: reference(resource.serviceProvider),
      period: period(resource.period),
      diagnosis: map(resource.diagnosis, diagnosis.parse),
      reason: map(resource.reason, codeableConcept),
      hospitalization: hospitalization.parse(resource.hospitalization)
    };
  }
  const zibEncounter = {
    profile: profile$s,
    parse: parseZibEncounter,
    uiSchema: uiSchema$s
  };
  const uiSchema$r = (resource, context) => {
    return nlCoreObservation.uiSchema(resource, context);
  };
  const profile$r = "http://nictiz.nl/fhir/StructureDefinition/zib-FunctionalOrMentalStatus";
  function parseZibFunctionalOrMentalStatus(resource) {
    const { effectiveDateTime: _, ...rest } = parseNlCoreObservationBase(resource);
    return {
      ...rest,
      ...resourceMeta(resource, profile$r, FhirVersion.R3)
    };
  }
  const zibFunctionalOrMentalStatus = {
    profile: profile$r,
    parse: parseZibFunctionalOrMentalStatus,
    uiSchema: uiSchema$r
  };
  const uiSchemaGroup$k = (resource, context) => {
    const ui = context.ui;
    const i18n2 = "r3.zib_laboratory_test_result_specimen.container";
    return {
      label: `${i18n2}`,
      children: [
        ui.identifier(`${i18n2}.identifier`, resource.identifier),
        ui.codeableConcept(`${i18n2}.type`, resource.type)
      ]
    };
  };
  function parseContainer$1(value2) {
    return {
      identifier: map(value2?.identifier, identifier),
      type: codeableConcept(value2?.type)
    };
  }
  const container$1 = {
    parse: parseContainer$1
  };
  const i18n$o = "r3.zib_laboratory_test_result_specimen";
  const uiSchema$q = (resource, context) => {
    const ui = context.ui;
    const container2 = map(resource.container, (x) => uiSchemaGroup$k(x, context), true);
    return {
      label: resource.type?.coding?.[0]?.display ?? context.formatMessage(i18n$o),
      children: [
        {
          label: i18n$o,
          children: [
            ui.identifier(`${i18n$o}.identifier`, resource.identifier),
            ...ui.helpers.getChildren(container2),
            ui.codeableConcept(`${i18n$o}.type`, resource.type),
            ui.quantity(`${i18n$o}.quantity`, resource.collection.quantity),
            ...ui.oneOfValueX(`${i18n$o}.collected`, resource.collection, "collected"),
            ui.dateTime(`${i18n$o}.received_time`, resource.receivedTime),
            ui.codeableConcept(`${i18n$o}.collection.method`, resource.collection.method),
            ui.codeableConcept(`${i18n$o}.body_site`, resource.collection.bodySite.value),
            ui.codeableConcept(
              `${i18n$o}.body_site.laterality`,
              resource.collection.bodySite.laterality
            ),
            ui.codeableConcept(
              `${i18n$o}.body_site.morphology`,
              resource.collection.bodySite.morphology
            ),
            ui.reference(`${i18n$o}.subject`, resource.subject),
            ui.annotation(`${i18n$o}.note`, resource.note)
          ]
        }
      ]
    };
  };
  const profile$q = "http://nictiz.nl/fhir/StructureDefinition/zib-LaboratoryTestResult-Specimen";
  function parseZibLaboratoryTestResultSpecimen(resource) {
    const collection = resource.collection;
    return {
      ...resourceMeta(resource, profile$q, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      // NL-CM:13.1.15
      subject: reference(resource.subject),
      // NL-CM:13.1.29
      container: map(resource.container, container$1.parse),
      // NL-CM:13.1.20 & NL-CM:13.1.21
      type: codeableConcept(resource.type),
      // NL-CM:13.1.16
      receivedTime: dateTime(resource.receivedTime),
      // NL-CM:13.1.25
      collection: {
        quantity: quantity(collection?.quantity),
        // NL-CM:13.1.23
        ...oneOfValueX(collection, ["dateTime", "period"], "collected"),
        // dateTime NL-CM:13.1.17, period NL-CM:13.1.24
        method: codeableConcept(collection?.method),
        // NL-CM:13.1.18
        bodySite: {
          value: codeableConcept(collection?.bodySite),
          // NL-CM:13.1.26
          laterality: extensionNictiz(collection?.bodySite, "BodySite-Qualifier"),
          // NL-CM:13.1.27
          morphology: extensionNictiz(collection?.bodySite, "BodySite-Morphology")
          // NL-CM:13.1.28
        }
      },
      note: map(resource.note, annotation)
      // NL-CM:13.1.19
    };
  }
  const zibLaboratoryTestResultSpecimen = {
    profile: profile$q,
    parse: parseZibLaboratoryTestResultSpecimen,
    uiSchema: uiSchema$q
  };
  const uiSchemaGroup$j = (resource, context) => {
    const ui = context.ui;
    const i18n2 = "r3.zib_laboratory_test_result_specimen_isolate.container";
    return {
      label: `${i18n2}`,
      children: [
        ui.identifier(`${i18n2}.identifier`, resource.identifier),
        ui.codeableConcept(`${i18n2}.type`, resource.type)
      ]
    };
  };
  function parseContainer(value2) {
    return {
      identifier: map(value2?.identifier, identifier),
      type: codeableConcept(value2?.type)
    };
  }
  const container = {
    parse: parseContainer
  };
  const i18n$n = "r3.zib_laboratory_test_result_specimen_isolate";
  const uiSchema$p = (resource, context) => {
    const ui = context.ui;
    const container2 = map(resource.container, (x) => uiSchemaGroup$j(x, context), true);
    return {
      label: resource.type?.coding?.[0]?.display ?? context.formatMessage(i18n$n),
      children: [
        {
          label: `${i18n$n}`,
          children: [
            ui.identifier(`${i18n$n}.identifier`, resource.identifier),
            ...ui.helpers.getChildren(container2),
            ui.codeableConcept(`${i18n$n}.type`, resource.type),
            ui.quantity(`${i18n$n}.quantity`, resource.collection.quantity),
            ...ui.oneOfValueX(`${i18n$n}.collected`, resource.collection, "collected"),
            ui.dateTime(`${i18n$n}.received_time`, resource.receivedTime),
            ui.codeableConcept(`${i18n$n}.collection.method`, resource.collection.method),
            ui.codeableConcept(`${i18n$n}.body_site`, resource.collection.bodySite.value),
            ui.codeableConcept(
              `${i18n$n}.body_site.laterality`,
              resource.collection.bodySite.laterality
            ),
            ui.codeableConcept(
              `${i18n$n}.body_site.morphology`,
              resource.collection.bodySite.morphology
            ),
            ui.reference(`${i18n$n}.subject`, resource.subject),
            ui.annotation(`${i18n$n}.note`, resource.note)
          ]
        }
      ]
    };
  };
  const profile$p = "http://nictiz.nl/fhir/StructureDefinition/zib-LaboratoryTestResult-Specimen-Isolate";
  function parseZibLaboratoryTestResultSpecimenIsolate(resource) {
    const collection = resource.collection;
    return {
      ...resourceMeta(resource, profile$p, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      // NL-CM:13.1.15
      subject: reference(resource.subject),
      // NL-CM:13.1.29
      container: map(resource.container, container.parse),
      // NL-CM:13.1.20 & NL-CM:13.1.21
      type: codeableConcept(resource.type),
      // NL-CM:13.1.22
      receivedTime: dateTime(resource.receivedTime),
      // NL-CM:13.1.25
      collection: {
        quantity: quantity(collection?.quantity),
        // NL-CM:13.1.23
        ...oneOfValueX(collection, ["dateTime", "period"], "collected"),
        // dateTime NL-CM:13.1.17, period NL-CM:13.1.24
        method: codeableConcept(collection?.method),
        // NL-CM:13.1.18
        bodySite: {
          value: codeableConcept(collection?.bodySite),
          // NL-CM:13.1.26
          laterality: extensionNictiz(collection?.bodySite, "BodySite-Qualifier"),
          // NL-CM:13.1.27
          morphology: extensionNictiz(collection?.bodySite, "BodySite-Morphology")
          // NL-CM:13.1.28
        }
      },
      note: map(resource.note, annotation)
      // NL-CM:13.1.19
    };
  }
  const zibLaboratoryTestResultSpecimenIsolate = {
    profile: profile$p,
    parse: parseZibLaboratoryTestResultSpecimenIsolate,
    uiSchema: uiSchema$p
  };
  const uiSchema$o = (resource, context) => {
    const ui = context.ui;
    const i18n2 = "r3.zib_laboratory_test_result_substance";
    return {
      label: context.formatMessage(i18n2),
      children: [
        {
          label: `${i18n2}`,
          children: [ui.codeableConcept(`${i18n2}.code`, resource.code)]
        }
      ]
    };
  };
  const profile$o = "http://nictiz.nl/fhir/StructureDefinition/zib-LaboratoryTestResult-Substance";
  function parseZibLaboratoryTestResultSubstance(resource) {
    return {
      ...resourceMeta(resource, profile$o, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      status: string(resource?.status),
      category: map(resource.category, codeableConcept),
      code: codeableConcept(resource.code),
      // NL-CM:13.1.22
      description: string(resource.description)
    };
  }
  const zibLaboratoryTestResultSubstance = {
    profile: profile$o,
    parse: parseZibLaboratoryTestResultSubstance,
    uiSchema: uiSchema$o
  };
  const uiSchema$n = (resource, context) => {
    return nlCoreObservation.uiSchema(resource, context);
  };
  const profile$n = "http://nictiz.nl/fhir/StructureDefinition/zib-LivingSituation";
  const parseZibLivingSituation = (resource) => {
    return {
      ...parseNlCoreObservationBase(resource),
      ...resourceMeta(resource, profile$n, FhirVersion.R3)
    };
  };
  const zibLivingSituation = {
    profile: profile$n,
    parse: parseZibLivingSituation,
    uiSchema: uiSchema$n
  };
  const i18n$m = "r3.zib_medical_device";
  const uiSchema$m = (resource, context) => {
    const ui = context.ui;
    return {
      label: resource.device?.display ?? context.formatMessage(i18n$m),
      children: [
        {
          label: `${i18n$m}.group_product`,
          children: [
            ui.identifier(`${i18n$m}.identifier`, resource.identifier),
            ui.code(`${i18n$m}.clinical_status`, resource.status),
            ui.reference(`${i18n$m}.device`, resource.device),
            ...ui.period(`${i18n$m}.whenUsed`, resource.whenUsed),
            ui.dateTime(`${i18n$m}.recordedOn`, resource.recordedOn)
          ]
        },
        {
          label: `${i18n$m}.group_indication`,
          children: [
            ui.annotation(`${i18n$m}.note`, resource.note),
            ui.codeableConcept(`${i18n$m}.bodySite`, resource.bodySite),
            ui.codeableConcept(`${i18n$m}.laterality`, resource.laterality),
            ui.reference(`${i18n$m}.reason`, resource.reason)
          ]
        },
        {
          label: `${i18n$m}.group_general`,
          children: [
            ui.reference(`${i18n$m}.patient`, resource.patient),
            ui.reference(`${i18n$m}.source`, resource.source),
            ui.reference(`${i18n$m}.organization`, resource.organization),
            ui.reference(`${i18n$m}.practitioner`, resource.practitioner)
          ]
        }
      ]
    };
  };
  const profile$m = "http://nictiz.nl/fhir/StructureDefinition/zib-MedicalDevice";
  function parseZibMedicalDevice(resource) {
    return {
      ...resourceMeta(resource, profile$m, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      organization: extensionNictiz(resource, "zib-MedicalDevice-Organization"),
      practitioner: extensionNictiz(resource, "zib-MedicalDevice-Practitioner"),
      reason: extensionNictiz(resource, "deviceUseStatement-reasonReferenceSTU3"),
      status: code(resource.status),
      patient: reference(resource.subject),
      whenUsed: period(resource.whenUsed),
      // timing
      recordedOn: dateTime(resource.recordedOn),
      source: reference(resource.source),
      device: reference(resource.device),
      // indication
      bodySite: codeableConcept(resource.bodySite),
      laterality: extensionNictiz(resource.bodySite, "BodySite-Qualifier"),
      note: map(resource.note, annotation)
    };
  }
  const zibMedicalDevice = {
    profile: profile$m,
    parse: parseZibMedicalDevice,
    uiSchema: uiSchema$m
  };
  const i18n$l = "r3.zib_medical_device_product";
  const uiSchema$l = (resource, context) => {
    const ui = context.ui;
    return {
      label: resource.id ?? context.formatMessage(i18n$l),
      children: [
        {
          label: `${i18n$l}.group_general_information`,
          children: [
            ui.reference(`${i18n$l}.patient`, resource.patient),
            ui.annotation(`${i18n$l}.note`, resource.note),
            ui.dateTime(`${i18n$l}.expiration_date`, resource.expirationDate)
          ]
        }
      ]
    };
  };
  const profile$l = "http://nictiz.nl/fhir/StructureDefinition/zib-MedicalDeviceProduct";
  function parseZibMedicalDeviceProduct(resource) {
    return {
      ...resourceMeta(resource, profile$l, FhirVersion.R3),
      note: map(resource.note, annotation),
      patient: reference(resource.patient),
      expirationDate: dateTime(resource.expirationDate)
    };
  }
  const zibMedicalDeviceProduct = {
    profile: profile$l,
    parse: parseZibMedicalDeviceProduct,
    uiSchema: uiSchema$l
  };
  const i18n$k = "r3.zib_medical_device_request";
  const uiSchema$k = (resource, context) => {
    const ui = context.ui;
    return {
      label: resource.occurrence?.start ?? context.formatMessage(i18n$k),
      children: [
        {
          label: `${i18n$k}`,
          children: [
            ui.string(`${i18n$k}.status.order_status`, resource.status),
            ...ui.period(`${i18n$k}.occurrence_period`, resource.occurrence),
            ...ui.oneOfValueX(`${i18n$k}.code`, resource, "code"),
            ui.reference(`${i18n$k}.perfomer`, resource.perfomer)
          ]
        }
      ]
    };
  };
  const profile$k = "http://nictiz.nl/fhir/StructureDefinition/zib-MedicalDeviceRequest";
  function parseZibMedicalDeviceRequest(resource) {
    return {
      ...resourceMeta(resource, profile$k, FhirVersion.R3),
      status: string(resource.status),
      occurrence: period(resource.occurrencePeriod),
      ...oneOfValueX(resource, ["reference", "codeableConcept"], "code"),
      intent: codeableConcept(resource.intent),
      subject: reference(resource.subject),
      perfomer: reference(resource.performer)
    };
  }
  const zibMedicalDeviceRequest = {
    profile: profile$k,
    parse: parseZibMedicalDeviceRequest,
    uiSchema: uiSchema$k
  };
  const i18n$j = "r3.zib_medication_agreement";
  const uiSchema$j = (resource, context) => {
    const ui = context.ui;
    const instructionsForUse = map(
      resource.dossageInstruction,
      (x) => uiSchemaGroup$s(x, context),
      true
    ).flat();
    return {
      label: resource.medicationReference?.display ?? context.formatMessage(i18n$j),
      children: [
        {
          label: `${i18n$j}.group_general_information`,
          children: [
            ...ui.period(`${i18n$j}.period_of_use`, resource.periodOfUse),
            ui.duration(`${i18n$j}.usage_duration`, resource.usageDuration),
            ui.identifier(`${i18n$j}.medication_treatment`, resource.medicationTreatment),
            ui.codeableConcept(`${i18n$j}.stop_type`, resource.stopType),
            ui.duration(
              `${i18n$j}.repeat_period_cyclical_schedule`,
              resource.repeatPeriodCyclicalSchedule
            ),
            ui.identifier(`${i18n$j}.identifier`, resource.identifier),
            ui.reference(`${i18n$j}.definition`, resource.definition),
            ui.reference(`${i18n$j}.basedOn`, resource.basedOn),
            ui.identifier(`${i18n$j}.group_identifier`, resource.groupIdentifier),
            ui.code(`${i18n$j}.status`, resource.status),
            ui.code(`${i18n$j}.intent`, resource.intent),
            ui.codeableConcept(`${i18n$j}.category`, resource.category),
            ui.code(`${i18n$j}.priority`, resource.priority),
            ui.reference(`${i18n$j}.medication_reference`, resource.medicationReference),
            ui.annotation(`${i18n$j}.note`, resource.note)
          ]
        },
        ...instructionsForUse
      ]
    };
  };
  const profile$j = "http://nictiz.nl/fhir/StructureDefinition/zib-MedicationAgreement";
  function parseZibMedicationAgreement(resource) {
    return {
      ...resourceMeta(resource, profile$j, FhirVersion.R3),
      periodOfUse: extensionNictiz(resource, "zib-Medication-PeriodOfUse"),
      usageDuration: extensionNictiz(resource, "zib-MedicationUse-Duration"),
      medicationTreatment: extensionNictiz(resource, "zib-Medication-MedicationTreatment"),
      stopType: extensionNictiz(resource, "zib-Medication-StopType"),
      repeatPeriodCyclicalSchedule: extensionNictiz(
        resource,
        "zib-Medication-RepeatPeriodCyclicalSchedule"
      ),
      identifier: map(resource.identifier, identifier),
      definition: map(resource.definition, reference),
      basedOn: map(resource.basedOn, reference),
      groupIdentifier: identifier(resource.groupIdentifier),
      status: code(resource.status),
      intent: code(resource.intent),
      category: codeableConcept(resource.category),
      priority: code(resource.priority),
      medicationReference: reference(resource.medicationReference),
      note: map(resource.note, annotation),
      dossageInstruction: map(resource.dosageInstruction, zibInstructionsForUse.parse)
    };
  }
  const zibMedicationAgreement = {
    profile: profile$j,
    parse: parseZibMedicationAgreement,
    uiSchema: uiSchema$j
  };
  const i18n$i = "r3.zib_medication_use";
  function getLabel$1(resource, { formatMessage: formatMessage2 }) {
    return lodashExports.capitalize(resource.medicationReference?.display) || formatMessage2(i18n$i);
  }
  const uiSchema$i = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const hcimMedicationUse2 = {
      AsAgreedIndicator: ui.boolean(`${i18n$i}.as_agreed_indicator`, resource.asAgreedIndicator),
      Prescriber: ui.reference(`${i18n$i}.prescriber`, resource.prescriber),
      ReasonForChangeOrDiscontinuationOfUse: ui.codeableConcept(
        `${i18n$i}.reason_for_change_or_discontinuation_of_use`,
        resource.reasonForChangeOrDiscontinuationOfUse
      ),
      MedicationUseStopType: ui.code(`${i18n$i}.status`, resource.status),
      ProductUsed: ui.reference(`${i18n$i}.medication_reference`, resource.medicationReference),
      PeriodOfUsePeriod: ui.period(`${i18n$i}.effective_period`, resource.effectivePeriod),
      PeriodOfUseDuration: ui.duration(
        `${i18n$i}.effective_period.duration`,
        resource.effectiveDuration
      ),
      MedicationUseDateTime: ui.dateTime(`${i18n$i}.date_asserted`, resource.dateAsserted),
      UseIndicator: ui.code(`${i18n$i}.taken`, resource.taken),
      ReasonForUse: ui.codeableConcept(`${i18n$i}.reason_code.text`, resource.reasonCode),
      Comment: ui.annotation(`${i18n$i}.note`, resource.note)
    };
    const hcimInstructionsForUse = {
      InstructionsForUse: map(
        resource.dosage,
        (x) => uiSchemaGroup$s(x, context),
        true
      ).flat(),
      RepeatPeriodCyclicalSchedule: ui.duration(
        `${i18n$i}.repeat_period_cyclical_schedule`,
        resource.repeatPeriodCyclicalSchedule
      )
    };
    return {
      label: getLabel$1(resource, context),
      children: [
        {
          label: formatMessage2(`fhir.group_general_info`),
          children: [
            hcimMedicationUse2.ProductUsed,
            hcimMedicationUse2.MedicationUseDateTime,
            ...hcimMedicationUse2.PeriodOfUsePeriod,
            hcimMedicationUse2.PeriodOfUseDuration,
            hcimMedicationUse2.Prescriber,
            hcimMedicationUse2.ReasonForUse,
            hcimMedicationUse2.AsAgreedIndicator,
            hcimMedicationUse2.UseIndicator,
            hcimMedicationUse2.MedicationUseStopType,
            hcimMedicationUse2.ReasonForChangeOrDiscontinuationOfUse,
            hcimInstructionsForUse.RepeatPeriodCyclicalSchedule,
            ui.identifier(`${i18n$i}.medication_treatment`, resource.medicationTreatment),
            hcimMedicationUse2.Comment
          ]
        },
        ...hcimInstructionsForUse.InstructionsForUse.flat()
      ]
    };
  };
  const summary$2 = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const instructions = map(
      resource.dosage,
      (x) => zibInstructionsForUse.summary(x, context),
      true
    );
    const hasSingleInstruction = instructions.length === 1;
    return {
      label: getLabel$1(resource, context),
      children: [
        {
          children: [
            ...hasSingleInstruction ? instructions[0].children : [],
            ui.code(`summary.${i18n$i}.status`, resource.status, {
              i18nCode: "r3.zib_medication_use.status"
            }),
            ui.codeableConcept(`${i18n$i}.reason_code.text`, resource.reasonCode)
          ]
        },
        ...hasSingleInstruction ? [] : instructions,
        {
          label: formatMessage2(`summary.${i18n$i}.group_period`),
          children: [...ui.period(`${i18n$i}.effective_period`, resource.effectivePeriod)]
        },
        {
          label: formatMessage2(`summary.${i18n$i}.group_prescriber`),
          children: [
            ui.reference(`summary.${i18n$i}.prescriber`, resource.prescriber),
            organization(context)
          ]
        },
        summaryOptions(context, i18n$i, resource)
      ]
    };
  };
  const profile$i = "http://nictiz.nl/fhir/StructureDefinition/zib-MedicationUse";
  function parseZibMedicationUse(resource) {
    return {
      ...resourceMeta(resource, profile$i, FhirVersion.R3),
      asAgreedIndicator: extensionNictiz(resource, "zib-MedicationUse-AsAgreedIndicator"),
      prescriber: extensionNictiz(resource, "zib-MedicationUse-Prescriber"),
      author: extensionNictiz(resource, "zib-MedicationUse-Author"),
      medicationTreatment: extensionNictiz(resource, "zib-Medication-MedicationTreatment"),
      reasonForChangeOrDiscontinuationOfUse: extensionNictiz(
        resource,
        "zib-MedicationUse-ReasonForChangeOrDiscontinuationOfUse"
      ),
      repeatPeriodCyclicalSchedule: extensionNictiz(
        resource,
        "zib-Medication-RepeatPeriodCyclicalSchedule"
      ),
      identifier: map(resource.identifier, identifier),
      status: code(resource.status),
      category: codeableConcept(resource.category),
      medicationReference: reference(resource.medicationReference),
      effectivePeriod: period(resource.effectivePeriod),
      effectiveDuration: extensionNictiz(
        resource.effectivePeriod,
        "zib-MedicationUse-Duration"
      ),
      dateAsserted: dateTime(resource.dateAsserted),
      informationSource: reference(resource.informationSource),
      subject: reference(resource.subject),
      taken: code(resource.taken),
      reasonCode: map(resource.reasonCode, codeableConcept),
      note: map(resource.note, annotation),
      dosage: map(resource.dosage, zibInstructionsForUse.parse)
    };
  }
  const zibMedicationUse = {
    profile: profile$i,
    parse: parseZibMedicationUse,
    summary: summary$2,
    uiSchema: uiSchema$i
  };
  const i18n$h = "r3.zib_nutrition_advice";
  const uiSchema$h = (resource, context) => {
    const ui = context.ui;
    return {
      label: resource.identifier?.at(0)?.value ?? context.formatMessage(i18n$h),
      children: [
        {
          label: `${i18n$h}.group_details`,
          children: [
            ui.string(`${i18n$h}.comment`, resource.comment),
            ui.identifier(`${i18n$h}.identifier`, resource.identifier),
            ui.code(`${i18n$h}.status`, resource.status),
            ui.reference(`${i18n$h}.patient`, resource.patient),
            ui.dateTime(`${i18n$h}.dateTime`, resource.dateTime),
            ui.codeableConcept(
              `${i18n$h}.food_preference_modifier`,
              resource.foodPreferenceModifier
            )
          ]
        }
      ]
    };
  };
  const profile$h = "http://nictiz.nl/fhir/StructureDefinition/zib-NutritionAdvice";
  function parseZibNutritionAdvice(resource) {
    return {
      ...resourceMeta(resource, profile$h, FhirVersion.R3),
      comment: extensionNictiz(resource, "zib-NutritionAdvice-Explanation"),
      identifier: map(resource.identifier, identifier),
      status: code(resource.status),
      patient: reference(resource.patient),
      dateTime: dateTime(resource.dateTime),
      foodPreferenceModifier: map(resource.foodPreferenceModifier, codeableConcept)
    };
  }
  const zibNutritionAdvice = {
    profile: profile$h,
    parse: parseZibNutritionAdvice,
    uiSchema: uiSchema$h
  };
  const uiSchemaGroup$i = (resource, context) => {
    const i18n2 = "r3.zib_payer.grouping";
    const ui = context.ui;
    return {
      label: i18n2,
      children: [
        ui.string(`${i18n2}.group`, resource.groupDisplay),
        ui.string(`${i18n2}.sub_group`, resource.subGroupDisplay),
        ui.string(`${i18n2}.plan`, resource.planDisplay),
        ui.string(`${i18n2}.sub_plan`, resource.subPlanDisplay),
        ui.string(`${i18n2}.class`, resource.classDisplay),
        ui.string(`${i18n2}.sub_class`, resource.subClassDisplay)
      ]
    };
  };
  function parseGrouping(value2) {
    return {
      group: string(value2?.group),
      groupDisplay: string(value2?.groupDisplay),
      subGroup: string(value2?.subGroup),
      subGroupDisplay: string(value2?.subGroupDisplay),
      plan: string(value2?.plan),
      planDisplay: string(value2?.planDisplay),
      subPlan: string(value2?.subPlan),
      subPlanDisplay: string(value2?.subPlanDisplay),
      class: string(value2?.class),
      classDisplay: string(value2?.classDisplay),
      subClass: string(value2?.subClass),
      subClassDisplay: string(value2?.subClassDisplay)
    };
  }
  const grouping = {
    parse: parseGrouping,
    uiSchemaGroup: uiSchemaGroup$i
  };
  const i18n$g = "r3.zib_payer";
  const uiSchema$g = (resource, context) => {
    const ui = context.ui;
    return {
      label: resource.identifier?.at(0)?.value ?? context.formatMessage(i18n$g),
      children: [
        {
          label: `${i18n$g}.group_details`,
          children: [
            ui.identifier(`${i18n$g}.identifier`, resource.identifier),
            ui.code(`${i18n$g}.status`, resource.status),
            ui.codeableConcept(`${i18n$g}.type`, resource.type),
            ui.reference(`${i18n$g}.policy_holder`, resource.policyHolder),
            ui.reference(`${i18n$g}.subscriber`, resource.subscriber),
            ui.string(`${i18n$g}.subscriber_id`, resource.subscriberId),
            ui.reference(`${i18n$g}.beneficiary`, resource.beneficiary),
            ui.codeableConcept(`${i18n$g}.relationship`, resource.relationship),
            ...ui.period(`${i18n$g}.period`, resource.period),
            ui.reference(`${i18n$g}.payor`, resource.payor),
            ui.string(`${i18n$g}.dependent`, resource.dependent),
            ui.string(`${i18n$g}.sequence`, resource.sequence),
            ui.positiveInt(`${i18n$g}.order`, resource.order),
            ui.string(`${i18n$g}.network`, resource.network),
            ui.reference(`${i18n$g}.contract`, resource.contract)
          ]
        },
        uiSchemaGroup$i(resource.grouping, context)
      ]
    };
  };
  const profile$g = "http://nictiz.nl/fhir/StructureDefinition/zib-Payer";
  function parseZibPayer(resource) {
    return {
      ...resourceMeta(resource, profile$g, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      status: code(resource.status),
      type: codeableConcept(resource.type),
      policyHolder: reference(resource.policyHolder),
      subscriber: reference(resource.subscriber),
      subscriberId: string(resource.subscriberId),
      beneficiary: reference(resource.beneficiary),
      relationship: codeableConcept(resource.relationship),
      period: period(resource.period),
      payor: map(resource.payor, reference),
      grouping: grouping.parse(resource.grouping),
      dependent: string(resource.dependent),
      sequence: string(resource.sequence),
      order: positiveInt(resource.order),
      network: string(resource.network),
      contract: map(resource.contract, reference)
    };
  }
  const zibPayer = {
    profile: profile$g,
    parse: parseZibPayer,
    uiSchema: uiSchema$g
  };
  const uiSchemaGroup$h = (resource, context) => {
    const i18n2 = "r3.evidence";
    const ui = context.ui;
    return {
      label: i18n2,
      children: [
        ui.codeableConcept(`${i18n2}.code`, resource.code),
        ui.reference(`${i18n2}.detail`, resource.detail)
      ]
    };
  };
  function parseEvidence(value2) {
    return {
      code: map(value2?.code, codeableConcept),
      detail: map(value2?.detail, reference)
    };
  }
  const evidence = {
    parse: parseEvidence
  };
  const uiSchemaGroup$g = (resource, context) => {
    const i18n2 = "r3.stage";
    const ui = context.ui;
    return {
      label: i18n2,
      children: [
        ui.codeableConcept(`${i18n2}.summary`, resource.summary),
        ui.reference(`${i18n2}.assessment`, resource.assessment)
      ]
    };
  };
  function parseStage(value2) {
    return {
      summary: codeableConcept(value2?.summary),
      assessment: map(value2?.assessment, reference)
    };
  }
  const stage = {
    parse: parseStage,
    uiSchemaGroup: uiSchemaGroup$g
  };
  const i18n$f = "r3.zib_problem";
  const uiSchema$f = (resource, context) => {
    const ui = context.ui;
    const stage2 = uiSchemaGroup$g(resource.stage, context);
    const evidence2 = map(resource.evidence, (x) => uiSchemaGroup$h(x, context), true);
    return {
      label: resource.code?.coding?.at(0)?.display ?? context.formatMessage(i18n$f),
      children: [
        {
          label: `${i18n$f}.group_general_information`,
          children: [
            ui.code(`${i18n$f}.clinicalStatus`, resource.clinicalStatus),
            ui.codeableConcept(`${i18n$f}.category`, resource.category),
            ui.dateTime(`${i18n$f}.onsetDateTime`, resource.onsetDateTime),
            ui.dateTime(`${i18n$f}.abatementDateTime`, resource.abatementDateTime),
            ui.codeableConcept(`${i18n$f}.bodySite`, resource.bodySite),
            ui.annotation(`${i18n$f}.note`, resource.note)
          ]
        },
        {
          label: `${i18n$f}.group_others`,
          children: [
            ui.identifier(`${i18n$f}.identifier`, resource.identifier),
            ui.code(`${i18n$f}.verificationStatus`, resource.verificationStatus),
            ui.codeableConcept(`${i18n$f}.severity`, resource.severity),
            ui.codeableConcept(`${i18n$f}.code`, resource.code),
            ui.reference(`${i18n$f}.subject`, resource.subject),
            ui.reference(`${i18n$f}.context`, resource.context),
            ui.dateTime(`${i18n$f}.assertedDate`, resource.assertedDate),
            ui.reference(`${i18n$f}.asserter`, resource.asserter)
          ]
        },
        stage2,
        ...evidence2
      ]
    };
  };
  const profile$f = "http://nictiz.nl/fhir/StructureDefinition/zib-Problem";
  function parseZibProblem(resource) {
    return {
      ...resourceMeta(resource, profile$f, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      clinicalStatus: code(resource.clinicalStatus),
      verificationStatus: code(resource.verificationStatus),
      category: map(resource.category, codeableConcept),
      severity: codeableConcept(resource.severity),
      code: codeableConcept(resource.code),
      bodySite: map(resource.bodySite, codeableConcept),
      subject: reference(resource.subject),
      context: reference(resource.context),
      onsetDateTime: dateTime(resource.onsetDateTime),
      abatementDateTime: dateTime(resource.abatementDateTime),
      assertedDate: dateTime(resource.assertedDate),
      asserter: reference(resource.asserter),
      stage: stage.parse(resource.stage),
      evidence: map(resource.evidence, evidence.parse),
      note: map(resource.note, annotation)
    };
  }
  const zibProblem = {
    profile: profile$f,
    parse: parseZibProblem,
    uiSchema: uiSchema$f
  };
  const uiSchemaGroup$f = (resource, context) => {
    const ui = context.ui;
    return {
      label: "zib_procedure.focal_device",
      children: [ui.reference(`r3.zib_procedure.focal_device.manipulated`, resource.manipulated)]
    };
  };
  function parseFocalDevice(value2) {
    return {
      manipulated: reference(value2?.manipulated)
    };
  }
  const focalDevice = {
    parse: parseFocalDevice
  };
  const uiSchemaGroup$e = (resource, context) => {
    const ui = context.ui;
    return {
      label: "zib_procedure.performer",
      children: [ui.reference(`r3.zib_procedure.performer`, resource.actor)]
    };
  };
  function parsePerformer(value2) {
    return {
      actor: reference(value2?.actor)
    };
  }
  const performer = {
    parse: parsePerformer
  };
  const i18n$e = "r3.zib_procedure";
  const uiSchema$e = (resource, context) => {
    const ui = context.ui;
    const focalDevices = map(resource.focalDevice, (x) => uiSchemaGroup$f(x, context), true);
    const performers = map(resource.performer, (x) => uiSchemaGroup$e(x, context), true);
    return {
      label: resource.code?.coding?.at(0)?.display ?? context.formatMessage(i18n$e),
      children: [
        {
          label: `${i18n$e}`,
          children: [
            ...ui.period(`${i18n$e}.performed_period`, resource.performedPeriod),
            ui.codeableConcept(`${i18n$e}.body_site`, resource.bodySite),
            ui.codeableConcept(
              `${i18n$e}.bodySite.extension:ProcedureLaterality`,
              resource.bodySiteQualifier
            ),
            ui.reference(`${i18n$e}.reason_reference`, resource.reasonReference),
            ui.codeableConcept(`${i18n$e}.code`, resource.code),
            ui.codeableConcept(`${i18n$e}.procedure_method`, resource.procedureMethod),
            ...ui.helpers.getChildren(focalDevices),
            ui.reference(`${i18n$e}.location`, resource.location),
            ...ui.helpers.getChildren(performers),
            ui.reference(`${i18n$e}.subject`, resource.subject)
          ]
        }
      ]
    };
  };
  const profile$e = "http://nictiz.nl/fhir/StructureDefinition/zib-Procedure";
  function parseZibProcedure(resource) {
    return {
      ...resourceMeta(resource, profile$e, FhirVersion.R3),
      performedPeriod: period(resource.performedPeriod),
      bodySite: map(resource.bodySite, codeableConcept),
      bodySiteQualifier: resource.bodySite?.map((x) => extensionNictiz(x, "BodySite-Qualifier")).filter(isNonNullish),
      reasonReference: map(resource.reasonReference, reference),
      code: codeableConcept(resource.code),
      procedureMethod: extension(
        resource,
        "http://hl7.org/fhir/StructureDefinition/procedure-method",
        // NOSONAR
        "codeableConcept"
      ),
      focalDevice: map(resource.focalDevice, focalDevice.parse),
      location: reference(resource.location),
      performer: map(resource.performer, performer.parse),
      subject: reference(resource.subject)
    };
  }
  const zibProcedure = {
    profile: profile$e,
    parse: parseZibProcedure,
    uiSchema: uiSchema$e
  };
  const i18n$d = "r3.zib_procedure_request";
  const uiSchema$d = (resource, context) => {
    const ui = context.ui;
    return {
      label: resource.code?.coding?.at(0)?.display ?? context.formatMessage(i18n$d),
      children: [
        {
          label: `${i18n$d}`,
          children: [
            ui.string(`${i18n$d}.status.order_status`, resource.status),
            ...ui.period(`${i18n$d}.occurrence_period`, resource.occurrence),
            ui.codeableConcept(`${i18n$d}.code`, resource.code),
            ui.reference(`${i18n$d}.perfomer`, resource.perfomer)
          ]
        }
      ]
    };
  };
  const profile$d = "http://nictiz.nl/fhir/StructureDefinition/zib-ProcedureRequest";
  function parseZibProcedureRequest(resource) {
    return {
      ...resourceMeta(resource, profile$d, FhirVersion.R3),
      status: string(resource.status),
      occurrence: period(resource.occurrencePeriod),
      code: codeableConcept(resource.code),
      intent: string(resource.intent),
      subject: reference(resource.subject),
      perfomer: reference(resource.performer),
      reason: map(resource.reasonReference, reference)
    };
  }
  const zibProcedureRequest = {
    profile: profile$d,
    parse: parseZibProcedureRequest,
    uiSchema: uiSchema$d
  };
  const i18n$c = "r3.zib_product";
  const uiSchema$c = (resource, context) => {
    const ui = context.ui;
    const productPackage = zibProductPackage.uiSchemaGroup(resource.package, context);
    const ingredients = map(
      resource.ingredient,
      (x) => zibProductIngredient.uiSchemaGroup(x, context),
      true
    );
    return {
      label: resource.description ?? context.formatMessage(i18n$c),
      children: [
        {
          label: `${i18n$c}.group_general_information`,
          children: [
            ui.codeableConcept(`${i18n$c}.code`, resource.code),
            ui.codeableConcept(`${i18n$c}.form`, resource.form)
          ]
        },
        {
          label: `${i18n$c}.group_ingredients`,
          children: ui.helpers.getChildren(ingredients)
        },
        productPackage
      ]
    };
  };
  const profile$c = "http://nictiz.nl/fhir/StructureDefinition/zib-Product";
  function parseZibProduct(resource) {
    return {
      ...resourceMeta(resource, profile$c, FhirVersion.R3),
      description: extensionNictiz(resource, "zib-Product-Description"),
      code: codeableConcept(resource.code),
      form: codeableConcept(resource.form),
      ingredient: map(resource.ingredient, zibProductIngredient.parse),
      package: zibProductPackage.parse(resource.package)
    };
  }
  const zibProduct = {
    profile: profile$c,
    parse: parseZibProduct,
    uiSchema: uiSchema$c
  };
  const uiSchema$b = (resource, context) => {
    return nlCoreObservation.uiSchema(resource, context);
  };
  const profile$b = "http://nictiz.nl/fhir/StructureDefinition/zib-TobaccoUse";
  function parseZibTobaccoUse(resource) {
    const { effectiveDateTime: _, ...rest } = parseNlCoreObservationBase(resource);
    return {
      ...rest,
      ...resourceMeta(resource, profile$b, FhirVersion.R3)
    };
  }
  const zibTobaccoUse = {
    profile: profile$b,
    parse: parseZibTobaccoUse,
    uiSchema: uiSchema$b
  };
  const uiSchemaGroup$d = (resource, context) => {
    const i18n2 = "r3.zib_treatment_directive.actor";
    const ui = context.ui;
    return {
      label: i18n2,
      children: [
        ui.codeableConcept(`${i18n2}.role`, resource.role),
        ui.reference(`${i18n2}.reference`, resource.reference)
      ]
    };
  };
  function parseActor$1(value2) {
    return {
      role: codeableConcept(value2?.role),
      reference: reference(value2?.reference)
    };
  }
  const actor$1 = {
    parse: parseActor$1
  };
  const uiSchemaGroup$c = (resource, context) => {
    const i18n2 = "r3.zib_treatment_directive.data";
    const ui = context.ui;
    return {
      label: i18n2,
      children: [
        ui.code(`${i18n2}.meaning`, resource.meaning),
        ui.reference(`${i18n2}.reference`, resource.reference)
      ]
    };
  };
  function parseData(value2) {
    return {
      meaning: code(value2?.meaning),
      reference: reference(value2?.reference)
    };
  }
  const data = {
    parse: parseData
  };
  const uiSchemaGroup$b = (resource, context) => {
    const i18n2 = "r3.zib_treatment_directive.except";
    const ui = context.ui;
    const actor2 = map(resource.actor, (x) => uiSchemaGroup$d(x, context));
    const data2 = map(resource.data, (x) => uiSchemaGroup$c(x, context));
    return {
      label: i18n2,
      children: [
        ui.code(`${i18n2}.type`, resource.type),
        ...ui.period(`${i18n2}.period`, resource.period),
        ui.codeableConcept(`${i18n2}.action`, resource.action),
        ui.coding(`${i18n2}.security_label`, resource.securityLabel),
        ui.coding(`${i18n2}.purpose`, resource.purpose),
        ui.coding(`${i18n2}.class`, resource.class),
        ui.coding(`${i18n2}.code`, resource.code),
        ...ui.period(`${i18n2}.plan`, resource.dataPeriod),
        ...ui.helpers.getChildren(actor2),
        ...ui.helpers.getChildren(data2)
      ]
    };
  };
  function parseExcept(value2) {
    return {
      type: code(value2?.type),
      period: period(value2?.period),
      actor: map(value2?.actor, actor$1.parse),
      action: map(value2?.action, codeableConcept),
      securityLabel: map(value2?.securityLabel, coding),
      purpose: map(value2?.purpose, coding),
      class: map(value2?.class, coding),
      code: map(value2?.code, coding),
      dataPeriod: period(value2?.dataPeriod),
      data: map(value2?.data, data.parse)
    };
  }
  const except = {
    parse: parseExcept
  };
  const uiSchemaGroup$a = (resource, context) => {
    const i18n2 = "r3.zib_treatment_directive.policy";
    const ui = context.ui;
    return {
      label: i18n2,
      children: [
        ui.string(`${i18n2}.id`, resource.id),
        ui.string(`${i18n2}.authority`, resource.authority),
        ui.string(`${i18n2}.uri`, resource.uri)
      ]
    };
  };
  function parsePolicy(value2) {
    return {
      id: string(value2?.id),
      authority: string(value2?.authority),
      uri: string(value2?.uri)
    };
  }
  const policy = {
    parse: parsePolicy
  };
  const i18n$b = "r3.zib_treatment_directive";
  const uiSchema$a = (resource, context) => {
    const ui = context.ui;
    const actor2 = map(resource.actor, (x) => uiSchemaGroup$d(x, context), true);
    const data2 = map(resource.data, (x) => uiSchemaGroup$c(x, context), true);
    const except2 = map(resource.except, (x) => uiSchemaGroup$b(x, context), true);
    const policy2 = map(resource.policy, (x) => uiSchemaGroup$a(x, context), true);
    return {
      label: resource.identifier?.value ?? context.formatMessage(i18n$b),
      children: [
        {
          label: `${i18n$b}.group_details`,
          children: [
            ui.identifier(`${i18n$b}.identifier`, resource.identifier),
            ui.code(`${i18n$b}.status`, resource.status),
            ui.codeableConcept(`${i18n$b}.category`, resource.category),
            ui.reference(`${i18n$b}.patient`, resource.patient),
            ...ui.period(`${i18n$b}.period`, resource.period),
            ui.dateTime(`${i18n$b}.date_time`, resource.dateTime),
            ui.reference(`${i18n$b}.consenting_party`, resource.consentingParty),
            ui.codeableConcept(`${i18n$b}.action`, resource.action),
            ui.reference(`${i18n$b}.organization`, resource.organization),
            ui.identifier(`${i18n$b}.source_identifier`, resource.sourceIdentifier),
            ui.reference(`${i18n$b}.source_reference`, resource.sourceReference),
            ui.string(`${i18n$b}.policy_rule`, resource.policyRule),
            ui.coding(`${i18n$b}.security_label`, resource.securityLabel),
            ui.coding(`${i18n$b}.purpose`, resource.purpose),
            ...ui.period(`${i18n$b}.data_period`, resource.dataPeriod)
          ]
        },
        uiSchemaGroup$x(resource.sourceAttachment, context),
        ...actor2,
        ...data2,
        ...except2,
        ...policy2
      ]
    };
  };
  const profile$a = "http://nictiz.nl/fhir/StructureDefinition/zib-TreatmentDirective";
  function parseZibTreatmentDirective(resource) {
    return {
      ...resourceMeta(resource, profile$a, FhirVersion.R3),
      identifier: identifier(resource.identifier),
      status: code(resource.status),
      category: map(resource.category, codeableConcept),
      patient: reference(resource.patient),
      period: period(resource.period),
      dateTime: dateTime(resource.dateTime),
      consentingParty: map(resource.consentingParty, reference),
      actor: map(resource.actor, actor$1.parse),
      action: map(resource.action, codeableConcept),
      organization: map(resource.organization, reference),
      sourceAttachment: attachment.parse(resource.sourceAttachment),
      sourceIdentifier: identifier(resource.sourceIdentifier),
      sourceReference: reference(resource.sourceReference),
      policy: map(resource.policy, policy.parse),
      policyRule: string(resource.policyRule),
      securityLabel: map(resource.securityLabel, coding),
      purpose: map(resource.purpose, coding),
      dataPeriod: period(resource.dataPeriod),
      data: map(resource.data, data.parse),
      except: map(resource.except, except.parse)
    };
  }
  const zibTreatmentDirective = {
    profile: profile$a,
    parse: parseZibTreatmentDirective,
    uiSchema: uiSchema$a
  };
  const uiSchemaGroup$9 = (resource, context) => {
    const ui = context.ui;
    return {
      label: "r3.immunization.practitioner.actor",
      children: [ui.reference(`r3.immunization.practitioner.actor`, resource.actor)]
    };
  };
  function parseActor(value2) {
    return {
      actor: reference(value2?.actor)
    };
  }
  const actor = {
    parse: parseActor
  };
  const i18n$a = "r3.zib_vaccination";
  const uiSchema$9 = (resource, context) => {
    const ui = context.ui;
    const practitioners = map(resource.practitioner, (x) => uiSchemaGroup$9(x, context), true);
    return {
      label: resource.vaccineCode?.coding?.[0]?.display ?? context.formatMessage(i18n$a),
      children: [
        {
          label: i18n$a,
          children: [
            ui.codeableConcept(`${i18n$a}.vaccineCode`, resource.vaccineCode),
            ui.quantity(`${i18n$a}.doseQuantity`, resource.dose),
            ui.dateTime(`${i18n$a}.date`, resource.vaccinationDate),
            ui.annotation(`${i18n$a}.note.text`, resource.note),
            ...ui.helpers.getChildren(practitioners)
          ]
        }
      ]
    };
  };
  const profile$9 = "http://nictiz.nl/fhir/StructureDefinition/zib-Vaccination";
  function parseZibVaccination(resource) {
    return {
      ...resourceMeta(resource, profile$9, FhirVersion.R3),
      identifier: map(resource.identifier, identifier),
      patient: reference(resource.patient),
      vaccineCode: codeableConcept(resource.vaccineCode),
      dose: quantity(resource.doseQuantity),
      vaccinationDate: date(resource.date),
      practitioner: map(resource.practitioner, actor.parse),
      note: map(resource.note, annotation)
    };
  }
  const zibVaccination = {
    profile: profile$9,
    parse: parseZibVaccination,
    uiSchema: uiSchema$9
  };
  const uiSchemaGroup$8 = (resource, context) => {
    const profile2 = "zib_vaccination_recommendation.recommendation";
    const ui = context.ui;
    return {
      label: profile2,
      children: [
        ui.dateTime(`${profile2}.date`, resource.date),
        ui.codeableConcept(`${profile2}.vaccine_code`, resource.code),
        ui.dateTime(`${profile2}.date_criterion`, resource.dateCriterion)
      ]
    };
  };
  function parseRecommendation(value2) {
    return {
      date: dateTime(value2?.date),
      code: codeableConcept(value2?.vaccineCode),
      dateCriterion: map(value2?.dateCriterion, (x) => dateTime(x.value))
    };
  }
  const recommendation = {
    parse: parseRecommendation
  };
  const i18n$9 = "r3.zib_vaccination_recommendation";
  const uiSchema$8 = (resource, context) => {
    const ui = context.ui;
    const recommendation2 = map(
      resource.recommendation,
      (x) => uiSchemaGroup$8(x, context),
      true
    );
    return {
      label: resource.recommendation?.at(0)?.code?.coding?.at(0)?.display ?? context.formatMessage(i18n$9),
      children: [
        {
          label: `${i18n$9}`,
          children: [
            ui.codeableConcept(`${i18n$9}.order_status`, resource.orderStatus),
            ...ui.helpers.getChildren(recommendation2)
          ]
        }
      ]
    };
  };
  const profile$8 = "http://nictiz.nl/fhir/StructureDefinition/zib-VaccinationRecommendation";
  function parseZibVaccinationRecommendation(resource) {
    return {
      ...resourceMeta(resource, profile$8, FhirVersion.R3),
      orderStatus: extensionNictiz(resource, "zib-VaccinationRecommendation-OrderStatus"),
      recommendation: map(resource.recommendation, recommendation.parse)
    };
  }
  const zibVaccinationRecommendation = {
    profile: profile$8,
    parse: parseZibVaccinationRecommendation,
    uiSchema: uiSchema$8
  };
  function parseContent(value2) {
    return {
      attachment: value2?.attachment ? attachment.parse(value2.attachment) : void 0
    };
  }
  const i18n$8 = "r3.ihe_mhd_minimal_document_reference";
  const uiSchema$7 = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const generalInformation = {
      MasterIdentifier: ui.identifier(`${i18n$8}.master_identifier`, resource.masterIdentifier),
      Status: ui.code(`${i18n$8}.status`, resource.status),
      Type: ui.codeableConcept(`${i18n$8}.type`, resource.type),
      Class: ui.codeableConcept(`${i18n$8}.class`, resource.class),
      Subject: ui.reference(`${i18n$8}.subject`, resource.subject),
      Indexed: ui.instant(`${i18n$8}.indexed`, resource.indexed),
      Author: ui.reference(`${i18n$8}.author`, resource.author),
      SecurityLabel: ui.codeableConcept(`${i18n$8}.security_label`, resource.securityLabel)
    };
    const content = resource.content.attachment ? {
      Title: ui.string(
        `${i18n$8}.content.attachment.title`,
        resource.content.attachment.title
      ),
      ContentType: ui.string(
        `${i18n$8}.content.attachment.content_type`,
        resource.content.attachment.contentType
      ),
      Language: ui.string(
        `${i18n$8}.content.attachment.language`,
        resource.content.attachment.language
      ),
      Location: ui.attachment(resource.content.attachment)
    } : null;
    return {
      label: content?.Title.display ?? formatMessage2("fhir.unknown"),
      children: [
        {
          label: formatMessage2(`fhir.group_general_info`),
          children: [
            generalInformation.Subject,
            generalInformation.Indexed,
            generalInformation.MasterIdentifier,
            generalInformation.Status,
            generalInformation.SecurityLabel,
            generalInformation.Type
          ]
        },
        {
          label: formatMessage2(`details.${i18n$8}.group_author`),
          children: [generalInformation.Author]
        },
        ...content ? [
          {
            label: formatMessage2(`${i18n$8}.content`),
            children: [content.ContentType, content.Language]
          },
          {
            label: formatMessage2(`details.${i18n$8}.group_attachment`),
            children: [content.Location]
          }
        ] : [
          {
            label: formatMessage2(`${i18n$8}.content`),
            children: [
              {
                label: formatMessage2(`${i18n$8}.content`),
                type: "SINGLE_VALUE",
                display: void 0
              }
            ]
          }
        ]
      ]
    };
  };
  const summary$1 = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    return {
      label: resource.content.attachment?.title ?? formatMessage2("fhir.unknown"),
      children: [
        {
          children: [
            ui.instant(`${i18n$8}.indexed`, resource.indexed),
            ui.reference(`${i18n$8}.subject`, resource.subject),
            ui.codeableConcept(`${i18n$8}.type`, resource.type)
          ]
        },
        {
          label: formatMessage2(`summary.${i18n$8}.group_attachment`),
          children: [ui.attachment(resource.content.attachment)]
        },
        {
          label: formatMessage2(`summary.${i18n$8}.group_author`),
          children: [ui.reference(`${i18n$8}.author`, resource.author), organization(context)]
        },
        summaryOptions(context, i18n$8, resource)
      ]
    };
  };
  const profile$7 = "http://nictiz.nl/fhir/StructureDefinition/IHE.MHD.Minimal.DocumentReference";
  function parseIheMhdMinimalDocumentReference(resource) {
    return {
      ...resourceMeta(resource, profile$7, FhirVersion.R3),
      masterIdentifier: identifier(resource.masterIdentifier),
      status: code(resource.status),
      type: codeableConcept(resource.type),
      class: codeableConcept(resource.class),
      subject: reference(resource.subject),
      indexed: instant(resource.indexed),
      author: map(resource.author, reference),
      content: parseContent(resource.content[0]),
      securityLabel: map(resource.securityLabel, codeableConcept)
    };
  }
  const iheMhdMinimalDocumentReference = {
    profile: profile$7,
    parse: parseIheMhdMinimalDocumentReference,
    uiSchema: uiSchema$7,
    summary: summary$1
  };
  const resourcesR3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    eAfspraakAppointment,
    gpDiagnosticResult,
    gpEncounter,
    gpEncounterReport,
    gpJournalEntry,
    gpLaboratoryResult,
    iheMhdMinimalDocumentReference,
    nlCoreEpisodeofcare,
    nlCoreObservation,
    nlCoreOrganization,
    nlCorePatient,
    nlCorePractitioner,
    nlCorePractitionerRole,
    zibAdministrationAgreement,
    zibAdvanceDirective,
    zibAlcoholUse,
    zibAlert,
    zibAllergyIntolerance,
    zibBloodPressure,
    zibBodyHeight,
    zibBodyWeight,
    zibDrugUse,
    zibEncounter,
    zibFunctionalOrMentalStatus,
    zibLaboratoryTestResultObservation,
    zibLaboratoryTestResultSpecimen,
    zibLaboratoryTestResultSpecimenIsolate,
    zibLaboratoryTestResultSubstance,
    zibLivingSituation,
    zibMedicalDevice,
    zibMedicalDeviceProduct,
    zibMedicalDeviceRequest,
    zibMedicationAgreement,
    zibMedicationUse,
    zibNutritionAdvice,
    zibPayer,
    zibProblem,
    zibProcedure,
    zibProcedureRequest,
    zibProduct,
    zibTobaccoUse,
    zibTreatmentDirective,
    zibVaccination,
    zibVaccinationRecommendation
  }, Symbol.toStringTag, { value: "Module" }));
  const uiSchemaGroup$7 = (resource, context) => {
    const i18n2 = "r4.zib_address_information";
    const { ui, formatMessage: formatMessage2 } = context;
    return {
      label: formatMessage2(i18n2),
      children: [
        ui.string(`${i18n2}.line.street_name.value`, resource?.streetName),
        ui.string(`${i18n2}.line.house_number.value`, resource?.houseNumber),
        ui.string(
          `${i18n2}.line.house_number_letter_house_number_addition.value`,
          resource?.houseNumberAddition
        ),
        ui.string(
          `${i18n2}.line.house_number_indication.value`,
          resource?.houseNumberIndication
        ),
        ui.string(`${i18n2}.line.additional_information.value`, resource?.additionalInformation),
        ui.string(`${i18n2}.city`, resource?.city),
        ui.string(`${i18n2}.district`, resource?.district),
        ui.string(`${i18n2}.postal_code`, resource?.postalCode),
        ui.string(`${i18n2}.country.country_code.value`, resource?.country),
        ui.codeableConcept(`${i18n2}.type`, resource?.addressType)
      ]
    };
  };
  function parseNlCoreAddressInformation(value2) {
    const lineMeta = value2?._line?.[0];
    const streetName = extension(
      lineMeta,
      "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetName",
      // NOSONAR
      "string"
    );
    const houseNumber = extension(
      lineMeta,
      "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-houseNumber",
      // NOSONAR
      "string"
    );
    const houseNumberAddition = extension(
      lineMeta,
      "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-buildingNumberSuffix",
      // NOSONAR
      "string"
    );
    const houseNumberIndication = extension(
      lineMeta,
      "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-additionalLocator",
      // NOSONAR
      "string"
    );
    const additionalInformation = extension(
      lineMeta,
      "http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-unitID",
      // NOSONAR
      "string"
    );
    const countryCode = extension(
      value2?._country,
      "http://nictiz.nl/fhir/StructureDefinition/ext-CodeSpecification",
      // NOSONAR
      "codeableConcept"
    );
    const addressType = extension(
      value2,
      "http://nictiz.nl/fhir/StructureDefinition/ext-AddressInformation.AddressType",
      // NOSONAR
      "codeableConcept"
    );
    return {
      line: string(value2?.line?.[0]),
      streetName,
      houseNumber,
      houseNumberAddition,
      houseNumberIndication,
      additionalInformation,
      city: string(value2?.city),
      district: string(value2?.district),
      postalCode: string(value2?.postalCode),
      country: string(value2?.country),
      countryCode,
      addressType,
      period: period(value2?.period)
    };
  }
  const nlCoreAddressInformation = {
    parse: parseNlCoreAddressInformation,
    uiSchemaGroup: uiSchemaGroup$7
  };
  const uiSchemaGroup$6 = (resource, context) => {
    const i18n2 = "r4.nl_core_contact_information_email_addresses";
    const { ui, formatMessage: formatMessage2 } = context;
    return {
      label: formatMessage2(i18n2),
      children: [
        ui.string(`${i18n2}.value`, resource?.value),
        ui.code(`${i18n2}.use`, resource?.use)
      ]
    };
  };
  function parseNlCoreContactInformationEmailAddresses(value2) {
    if (value2?.system !== "email") return;
    return {
      system: value2.system,
      value: string(value2?.value),
      use: code(value2?.use)
    };
  }
  const nlCoreContactInformationEmailAddresses = {
    parse: parseNlCoreContactInformationEmailAddresses,
    uiSchemaGroup: uiSchemaGroup$6
  };
  const uiSchemaGroup$5 = (resource, context) => {
    const i18n2 = "r4.nl_core_contact_information_telephone_numbers";
    const { ui, formatMessage: formatMessage2 } = context;
    return {
      label: formatMessage2(i18n2),
      children: [
        ui.string(`${i18n2}.value`, resource?.value),
        ui.code(`${i18n2}.use`, resource?.use),
        ui.string(`${i18n2}.comment`, resource?.comment),
        ui.codeableConcept(`${i18n2}.telecom_type`, resource?.telecomType)
      ]
    };
  };
  function parseNlCoreContactInformationTelephoneNumbers(value2) {
    if (value2?.system !== "phone") return;
    return {
      system: value2.system,
      telecomType: extension(
        value2._system,
        "http://nictiz.nl/fhir/StructureDefinition/ext-CodeSpecification",
        // NOSONAR
        "codeableConcept"
      ),
      value: string(value2?.value),
      use: code(value2?.use),
      comment: extension(
        value2,
        "http://nictiz.nl/fhir/StructureDefinition/ext-Comment",
        // NOSONAR
        "string"
      )
    };
  }
  const nlCoreContactInformationTelephoneNumbers = {
    parse: parseNlCoreContactInformationTelephoneNumbers,
    uiSchemaGroup: uiSchemaGroup$5
  };
  const uiSchemaGroup$4 = (resource, context) => {
    const ui = context.ui;
    if (resource?.use === "usual") {
      const i18n22 = "nl_name_information_given_name";
      return {
        label: i18n22,
        children: [ui.string(`${i18n22}.given`, resource.given)]
      };
    }
    const i18n2 = "nl_name_information";
    return {
      label: i18n2,
      children: [
        ui.string(`${i18n2}.text`, resource?.text),
        ui.string(`${i18n2}.family`, resource?.family),
        ui.string(`${i18n2}.given`, resource?.given),
        ui.string(`${i18n2}.name_usage`, resource?.nameUsage),
        ui.string(`${i18n2}.prefix`, resource?.prefix),
        ui.string(`${i18n2}.suffix`, resource?.suffix)
      ]
    };
  };
  function parseNlCoreNameInformation(value2) {
    if (value2?.use === "usual") {
      return {
        use: value2.use,
        given: map(value2?.given, string),
        period: period(value2?.period),
        text: string(value2?.text)
      };
    }
    const nameValues = filterPrimitiveByExtension(value2, "given", {
      url: "http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier",
      // NOSONAR
      valueCode: "BR"
    });
    const initialValues = filterPrimitiveByExtension(value2, "given", {
      url: "http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier",
      // NOSONAR
      valueCode: "IN"
    });
    return {
      nameUsage: extension(
        value2,
        "http://hl7.org/fhir/StructureDefinition/humanname-assembly-order",
        // NOSONAR
        "code"
      ),
      family: string(value2?.family),
      given: map(value2?.given, string),
      givenNames: map(nameValues, string),
      givenInitials: map(initialValues, string),
      period: period(value2?.period),
      prefix: map(value2?.prefix, string),
      suffix: map(value2?.suffix, string),
      text: string(value2?.text),
      use: string(value2?.use)
    };
  }
  const nlCoreNameInformation = {
    parse: parseNlCoreNameInformation,
    uiSchemaGroup: uiSchemaGroup$4
  };
  const i18n$7 = "r4.nl_core_healtcare_provider";
  const uiSchema$6 = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const zibHealthcareProvider = {
      LocationName: ui.string(`${i18n$7}.name`, resource.name),
      AddressInformation: ui.helpers.getChildren(
        nlCoreAddressInformation.uiSchemaGroup(resource.address, context)
      )
    };
    const zibContactInformation = {
      TelephoneNumbers: map(
        resource.telephoneNumbers,
        (x) => nlCoreContactInformationTelephoneNumbers.uiSchemaGroup(x, context),
        true
      ).flat(),
      EmailAddresses: map(
        resource.emailAddresses,
        (x) => nlCoreContactInformationEmailAddresses.uiSchemaGroup(x, context),
        true
      ).flat()
    };
    return {
      label: resource.managingOrganization?.display ?? formatMessage2(i18n$7),
      children: [
        {
          label: formatMessage2(i18n$7),
          children: [
            zibHealthcareProvider.LocationName,
            ...zibHealthcareProvider.AddressInformation
          ]
        },
        ...zibContactInformation.TelephoneNumbers,
        ...zibContactInformation.EmailAddresses
      ]
    };
  };
  const profile$6 = "http://nictiz.nl/fhir/StructureDefinition/nl-core-HealthcareProvider";
  function parseNlCoreHealtcareProvider(resource) {
    return {
      ...resourceMeta(resource, profile$6, FhirVersion.R4),
      identifier: map(resource.identifier, identifier),
      name: string(resource.name),
      telephoneNumbers: map(resource.telecom, nlCoreContactInformationTelephoneNumbers.parse),
      emailAddresses: map(resource.telecom, nlCoreContactInformationEmailAddresses.parse),
      address: nlCoreAddressInformation.parse(resource.address),
      managingOrganization: reference(resource.managingOrganization)
    };
  }
  const nlCoreHealtcareProvider = {
    profile: profile$6,
    parse: parseNlCoreHealtcareProvider,
    uiSchema: uiSchema$6
  };
  const uiSchemaGroup$3 = (resource, context) => {
    const profile2 = "nl_core_health_professional_practitioner.qualification";
    const ui = context.ui;
    return {
      label: `${profile2}.group_details`,
      children: [
        ui.identifier(`${profile2}.identifier`, resource.identifier),
        ui.codeableConcept(`${profile2}.code`, resource.code),
        ...ui.period(`${profile2}.period`, resource.period),
        ui.reference(`${profile2}.issuer`, resource.issuer)
      ]
    };
  };
  function parseQualification(value2) {
    return {
      identifier: map(value2?.identifier, identifier),
      code: codeableConcept(value2?.code),
      period: period(value2?.period),
      issuer: reference(value2?.issuer)
    };
  }
  const qualification = {
    parse: parseQualification
  };
  const i18n$6 = "r4.nl_core_health_professional_practitioner";
  const uiSchema$5 = (resource, context) => {
    const ui = context.ui;
    const address = map(
      resource.address,
      (x) => nlCoreAddressInformation.uiSchemaGroup(x, context),
      true
    );
    const name = map(resource.name, (x) => nlCoreNameInformation.uiSchemaGroup(x, context), true);
    const emailAddresses = map(
      resource.emailAddresses,
      (x) => nlCoreContactInformationEmailAddresses.uiSchemaGroup(x, context),
      true
    );
    const telephoneNumbers = map(
      resource.telephoneNumbers,
      (x) => nlCoreContactInformationTelephoneNumbers.uiSchemaGroup(x, context),
      true
    );
    const qualification2 = map(
      resource.qualification,
      (x) => uiSchemaGroup$3(x, context),
      true
    );
    return {
      label: resource.name?.at(0)?.text ?? context.formatMessage(i18n$6),
      children: [
        {
          label: `${i18n$6}.group_details`,
          children: [
            ui.identifier(`${i18n$6}.identifier`, resource.identifier),
            ui.code(`${i18n$6}.gender`, resource.gender),
            ui.date(`${i18n$6}.birth_date`, resource.birthDate),
            ui.codeableConcept(`${i18n$6}.communication`, resource.communication)
          ]
        },
        ...name,
        ...emailAddresses,
        ...telephoneNumbers,
        ...address,
        ...qualification2
      ]
    };
  };
  const profile$5 = "http://nictiz.nl/fhir/StructureDefinition/nl-core-HealthProfessional-Practitioner";
  function parseNlCoreHealthProfessionalPractitioner(resource) {
    return {
      ...resourceMeta(resource, profile$5, FhirVersion.R4),
      identifier: map(resource.identifier, identifier),
      // NL-CM:17.1.2
      name: map(resource.name, nlCoreNameInformation.parse),
      // NL-CM:17.1.3
      telephoneNumbers: map(resource.telecom, nlCoreContactInformationTelephoneNumbers.parse),
      // NL-CM-20.6.2
      emailAddresses: map(resource.telecom, nlCoreContactInformationEmailAddresses.parse),
      // NL-CM-20.6.3
      address: map(resource.address, nlCoreAddressInformation.parse),
      // NL-CM:17.1.7
      gender: code(resource.gender),
      // NL-CM:17.1.9
      birthDate: date(resource.birthDate),
      qualification: map(resource.qualification, qualification.parse),
      communication: map(resource.communication, codeableConcept)
    };
  }
  const r4NlCoreHealthProfessionalPractitioner = {
    profile: profile$5,
    parse: parseNlCoreHealthProfessionalPractitioner,
    uiSchema: uiSchema$5
  };
  const i18n$5 = "r4.nl_core_health_professional_practitioner_role";
  const uiSchema$4 = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const zibHealthProfessional = {
      Organization: ui.reference(`${i18n$5}.organization`, resource.organization),
      Speciality: ui.codeableConcept(`${i18n$5}.speciality`, resource.speciality)
    };
    const zibContactInformation = {
      TelephoneNumbers: map(
        resource.telephoneNumbers,
        (x) => nlCoreContactInformationTelephoneNumbers.uiSchemaGroup(x, context),
        true
      ).flat(),
      EmailAddresses: map(
        resource.emailAddresses,
        (x) => nlCoreContactInformationEmailAddresses.uiSchemaGroup(x, context),
        true
      ).flat()
    };
    return {
      label: resource.speciality?.at(0)?.coding.at(0)?.display ?? formatMessage2(i18n$5),
      children: [
        {
          label: formatMessage2(i18n$5),
          children: [zibHealthProfessional.Organization, zibHealthProfessional.Speciality]
        },
        ...zibContactInformation.EmailAddresses,
        ...zibContactInformation.TelephoneNumbers
      ]
    };
  };
  const profile$4 = "http://nictiz.nl/fhir/StructureDefinition/nl-core-HealthProfessional-PractitionerRole";
  function parseNlCoreHealthProfessionalPractitionerRole(resource) {
    return {
      ...resourceMeta(resource, profile$4, FhirVersion.R4),
      practitioner: reference(resource.practitioner),
      organization: reference(resource.organization),
      location: map(resource.location, reference),
      speciality: map(resource.specialty, codeableConcept),
      telephoneNumbers: map(resource.telecom, nlCoreContactInformationTelephoneNumbers.parse),
      emailAddresses: map(resource.telecom, nlCoreContactInformationEmailAddresses.parse)
    };
  }
  const nlCoreHealthProfessionalPractitionerRole = {
    profile: profile$4,
    parse: parseNlCoreHealthProfessionalPractitionerRole,
    uiSchema: uiSchema$4
  };
  const i18n$4 = "r4.nl_core_healthcare_provider_organization";
  const uiSchema$3 = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const zibHealthcareProvider = {
      HealthcareProviderIdentificationNumber: ui.identifier(
        `${i18n$4}.identifier`,
        resource.identifier
      ),
      DepartmentSpecialty: ui.codeableConcept(
        `${i18n$4}.department_speciality`,
        resource.departmentSpecialty
      ),
      OrganizationType: ui.codeableConcept(
        `${i18n$4}.organization_type`,
        resource.organizationType
      ),
      OrganizationName: ui.string(`${i18n$4}.name`, resource.name)
    };
    return {
      label: resource.name ?? formatMessage2(i18n$4),
      children: [
        {
          label: formatMessage2(i18n$4),
          children: [
            zibHealthcareProvider.HealthcareProviderIdentificationNumber,
            zibHealthcareProvider.DepartmentSpecialty,
            zibHealthcareProvider.OrganizationType,
            zibHealthcareProvider.OrganizationName
          ]
        }
      ]
    };
  };
  const profile$3 = "http://nictiz.nl/fhir/StructureDefinition/nl-core-HealthcareProvider-Organization";
  function parseNlCoreHealthcareProviderOrganization(resource) {
    return {
      ...resourceMeta(resource, profile$3, FhirVersion.R4),
      identifier: map(resource.identifier, identifier),
      departmentSpecialty: map(
        filterCodeableConceptByCoding(
          resource.type,
          (x) => x.system === "urn:oid:2.16.840.1.113883.2.4.6.7"
        ),
        codeableConcept
      ),
      organizationType: map(
        filterCodeableConceptByCoding(
          resource.type,
          (x) => x.system === "http://nictiz.nl/fhir/NamingSystem/organization-type"
          // NOSONAR
        ),
        codeableConcept
      ),
      name: string(resource.name),
      telephoneNumbers: map(resource.telecom, nlCoreContactInformationTelephoneNumbers.parse),
      emailAddresses: map(resource.telecom, nlCoreContactInformationEmailAddresses.parse),
      address: map(resource.address, nlCoreAddressInformation.parse)
    };
  }
  const nlCoreHealthcareProviderOrganization = {
    profile: profile$3,
    parse: parseNlCoreHealthcareProviderOrganization,
    uiSchema: uiSchema$3
  };
  const i18n$3 = "r4.nl_core_patient";
  const uiSchema$2 = (resource, context) => {
    const ui = context.ui;
    const name = map(resource.name, (x) => nlCoreNameInformation.uiSchemaGroup(x, context), true);
    const addresses = map(
      resource.address,
      (x) => nlCoreAddressInformation.uiSchemaGroup(x, context),
      true
    );
    return {
      label: resource.name?.at(0)?.text ?? context.formatMessage(i18n$3),
      children: [
        ...name,
        {
          label: `${i18n$3}.group_details`,
          children: [
            ui.identifier(`${i18n$3}.identifier`, resource.identifier),
            ui.date(`${i18n$3}.birth_date`, resource.birthDate),
            ui.boolean(`${i18n$3}.deceased`, resource.deceased),
            ui.dateTime(`${i18n$3}.deceased_date_time`, resource.deceasedDateTime),
            ui.code(`${i18n$3}.gender`, resource.gender),
            ui.reference(`${i18n$3}.general_practitioner`, resource.generalPractitioner),
            ui.reference(`${i18n$3}.managing_organization`, resource.managingOrganization),
            ui.codeableConcept(`${i18n$3}.marital_status`, resource.maritalStatus),
            ui.boolean(`${i18n$3}.multiple_birth`, resource.multipleBirth)
          ]
        },
        ...addresses
      ]
    };
  };
  const profile$2 = "http://nictiz.nl/fhir/StructureDefinition/nl-core-Patient";
  function parseNlCorePatient(resource) {
    return {
      ...resourceMeta(resource, profile$2, FhirVersion.R4),
      name: map(resource.name, nlCoreNameInformation.parse),
      identifier: map(resource.identifier, identifier),
      // NL-CM:0.1.7
      birthDate: date(resource.birthDate),
      // NL-CM:0.1.10
      gender: code(resource.gender),
      // NL-CM:0.1.9
      multipleBirth: boolean(resource.multipleBirthBoolean),
      // NL-CM:0.1.31
      deceased: boolean(resource.deceasedBoolean),
      // NL-CM:0.1.32
      deceasedDateTime: dateTime(resource.deceasedDateTime),
      // NL-CM:0.1.33
      address: map(resource?.address, nlCoreAddressInformation.parse),
      generalPractitioner: map(resource.generalPractitioner, reference),
      managingOrganization: reference(resource.managingOrganization),
      maritalStatus: codeableConcept(resource.maritalStatus)
    };
  }
  const r4NlCorePatient = {
    profile: profile$2,
    parse: parseNlCorePatient,
    uiSchema: uiSchema$2
  };
  const uiSchemaGroup$2 = (resource, context) => {
    const profile2 = "r4.zib_pharmaceutical_product.batch";
    const { ui, formatMessage: formatMessage2 } = context;
    return {
      label: formatMessage2(profile2),
      children: [
        ui.string(`${profile2}.lot_number`, resource.lotNumber),
        ui.dateTime(`${profile2}.expiration_date`, resource.expirationDate)
      ]
    };
  };
  function parseBatch(value2) {
    return {
      lotNumber: string(value2?.lotNumber),
      expirationDate: dateTime(value2?.expirationDate)
    };
  }
  const batch = {
    parse: parseBatch,
    uiSchemaGroup: uiSchemaGroup$2
  };
  const uiSchemaGroup$1 = (resource, context) => {
    const profile2 = "r4.zib_pharmaceutical_product.ingredient";
    const { ui, formatMessage: formatMessage2 } = context;
    return {
      label: formatMessage2(profile2),
      children: [
        ...ui.oneOfValueX(`${profile2}.item`, resource, "item"),
        ...ui.ratio(`${profile2}.strength`, resource.strength)
      ]
    };
  };
  function parseIngredient(value2) {
    return {
      ...oneOfValueX(value2, ["codeableConcept", "reference"], "item"),
      strength: ratio(value2?.strength)
    };
  }
  const ingredient = {
    parse: parseIngredient,
    uiSchemaGroup: uiSchemaGroup$1
  };
  const i18n$2 = "r4.zib_pharmaceutical_product";
  const uiSchema$1 = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const zibPharmaceuticalProduct = {
      MedicationCode: ui.codeableConcept(`${i18n$2}.code`, resource.code),
      PharmaceuticalForm: ui.codeableConcept(`${i18n$2}.form`, resource.form),
      Ingredient: map(resource.ingredient, (x) => ingredient.uiSchemaGroup(x, context), true)
    };
    const artDECORDatasetVaccinationImmunization = {
      SerialNumber: ui.identifier(`${i18n$2}.identifier`, resource.identifier),
      Batch: batch.uiSchemaGroup(resource.batch, context),
      Description: ui.string(`${i18n$2}.description`, resource.description)
    };
    return {
      label: resource.name ?? formatMessage2(i18n$2),
      children: [
        {
          label: formatMessage2(i18n$2),
          children: [
            zibPharmaceuticalProduct.MedicationCode,
            zibPharmaceuticalProduct.PharmaceuticalForm,
            ...ui.helpers.getChildren(zibPharmaceuticalProduct.Ingredient),
            artDECORDatasetVaccinationImmunization.SerialNumber,
            ...ui.helpers.getChildren(artDECORDatasetVaccinationImmunization.Batch),
            artDECORDatasetVaccinationImmunization.Description
          ]
        }
      ]
    };
  };
  const profile$1 = "http://nictiz.nl/fhir/StructureDefinition/nl-core-PharmaceuticalProduct";
  function parseNlCorePharmaceuticalProduct(resource) {
    return {
      ...resourceMeta(resource, profile$1, FhirVersion.R4),
      description: extensionNictiz(resource, "ext-PharmaceuticalProduct.Description"),
      code: codeableConcept(resource.code),
      status: code(resource.status),
      manufacturer: reference(resource.manufacturer),
      form: codeableConcept(resource.form),
      amount: ratio(resource.amount),
      ingredient: map(resource.ingredient, ingredient.parse),
      batch: batch.parse(resource.batch),
      identifier: map(resource.identifier, identifier),
      name: string(resource.code?.text)
    };
  }
  const nlCorePharmaceuticalProductR4 = {
    profile: profile$1,
    parse: parseNlCorePharmaceuticalProduct,
    uiSchema: uiSchema$1
  };
  var VaccinationIndication = /* @__PURE__ */ ((VaccinationIndication2) => {
    VaccinationIndication2["FRAIL_ELDERLY"] = "404904002";
    VaccinationIndication2["DISORDER_OF_LUNG"] = "19829001";
    VaccinationIndication2["OVERWEIGHT"] = "238131007";
    VaccinationIndication2["IMMUNODEFICIENCY_DISORDER"] = "234532001";
    VaccinationIndication2["PREGNANCY"] = "77386006";
    VaccinationIndication2["WOUND"] = "416462003";
    return VaccinationIndication2;
  })(VaccinationIndication || {});
  var VaccinationMotive = /* @__PURE__ */ ((VaccinationMotive2) => {
    VaccinationMotive2["VACCINATION_NEEDED_AS_PART_OF_IMMUNIZATION_PROGRAMME"] = "159741000146107";
    VaccinationMotive2["VACCINATION_NEEDED_AS_PART_OF_NATIONAL_IMMUNIZATION_PROGRAMME"] = "159731000146104";
    VaccinationMotive2["OCCUPATIONAL_VACCINATION_NEEDED"] = "159721000146101";
    VaccinationMotive2["ACTIVE_IMMUNIZATION"] = "33879002";
    VaccinationMotive2["PASSIVE_IMMUNISATION"] = "51116004";
    VaccinationMotive2["ELECTIVE_IMMUNIZATION_FOR_INTERNATIONAL_TRAVEL"] = "14747002";
    return VaccinationMotive2;
  })(VaccinationMotive || {});
  function parseProtocolApplied(value2) {
    return {
      authority: reference(value2?.authority),
      targetDisease: map(value2?.targetDisease, codeableConcept),
      ...oneOfValueX(value2, ["string", "positiveInt"], "doseNumber"),
      ...oneOfValueX(value2, ["string", "positiveInt"], "seriesDoses")
    };
  }
  const i18n$1 = "r4.nl_core_vaccination_event.protocol_applied";
  const uiSchemaGroup = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    return {
      label: formatMessage2(i18n$1),
      children: [
        ui.reference(`${i18n$1}.authority`, resource.authority),
        ui.codeableConcept(`${i18n$1}.target_disease`, resource.targetDisease),
        ...ui.oneOfValueX(`${i18n$1}.dose_number`, resource, "doseNumber"),
        ...ui.oneOfValueX(`${i18n$1}.series_doses`, resource, "seriesDoses")
      ]
    };
  };
  const i18n = "r4.nl_core_vaccination_event";
  function getLabel(resource, context) {
    return lodashExports.capitalize(resource.vaccineCode?.coding?.at(0)?.display) || context.formatMessage(i18n);
  }
  const uiSchema = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    const artDecorDatasetVaccinationImmunization = {
      PharmaceuticalProduct: ui.reference(
        `${i18n}.pharmaceutical_product`,
        resource.pharmaceuticalProduct
      ),
      Identifier: ui.identifier(`${i18n}.identifier`, resource.identifier),
      Status: ui.string(`${i18n}.status`, resource.status),
      Patient: ui.reference(`${i18n}.patient`, resource.patient),
      Location: ui.reference(`${i18n}.location`, resource.location),
      Route: ui.codeableConcept(`${i18n}.route`, resource.route),
      Site: ui.codeableConcept(`${i18n}.site`, resource.site),
      Performer: map(resource.performer, (x) => ui.reference(`${i18n}.performer`, x), true),
      VaccinationIndication: ui.codeableConcept(
        `${i18n}.vaccination_indication`,
        resource.vaccinationIndication
      ),
      VaccinationMotive: ui.codeableConcept(
        `${i18n}.vaccination_motive`,
        resource.vaccinationMotive
      ),
      ProtocolApplied: map(
        resource.protocolApplied,
        (x) => uiSchemaGroup(x, context),
        true
      )
    };
    const zibVaccinationv4 = {
      VaccineCode: ui.codeableConcept(`${i18n}.vaccine_code`, resource.vaccineCode),
      OccurrenceDateTime: ui.dateTime(
        `${i18n}.occurrence_date_time`,
        resource.occurrenceDateTime
      ),
      DoseQuantity: ui.quantity(`${i18n}.dose_quantity`, resource.doseQuantity),
      Note: ui.annotation(`${i18n}.note`, resource.note)
    };
    return {
      label: getLabel(resource, context),
      children: [
        {
          label: formatMessage2(`fhir.group_general_info`),
          children: [
            zibVaccinationv4.VaccineCode,
            zibVaccinationv4.DoseQuantity,
            artDecorDatasetVaccinationImmunization.Patient,
            zibVaccinationv4.OccurrenceDateTime,
            zibVaccinationv4.Note
          ]
        },
        {
          label: formatMessage2(`${i18n}.performed_by`),
          children: [
            ...artDecorDatasetVaccinationImmunization.Performer,
            artDecorDatasetVaccinationImmunization.Location
          ]
        },
        {
          label: formatMessage2(`${i18n}.extra`),
          children: [
            artDecorDatasetVaccinationImmunization.VaccinationMotive,
            ...ui.helpers.getChildren(
              artDecorDatasetVaccinationImmunization.ProtocolApplied
            ),
            artDecorDatasetVaccinationImmunization.Route,
            artDecorDatasetVaccinationImmunization.Site
          ]
        }
      ]
    };
  };
  const summary = (resource, context) => {
    const { ui, formatMessage: formatMessage2 } = context;
    return {
      label: getLabel(resource, context),
      children: [
        {
          children: [
            ui.dateTime(`${i18n}.occurrence_date_time`, resource.occurrenceDateTime),
            ui.annotation(`${i18n}.note`, resource.note)
          ]
        },
        {
          label: formatMessage2(`summary.${i18n}.group_performer`),
          children: [
            ...map(resource.performer, (x) => ui.reference(`${i18n}.performer`, x), true),
            organization(context)
          ]
        },
        summaryOptions(context, i18n, resource)
      ]
    };
  };
  const profile = "http://nictiz.nl/fhir/StructureDefinition/nl-core-Vaccination-event";
  function parseNlCoreVaccinationEvent(resource) {
    const vaccinationIndication = filterCodeableConceptByCoding(
      resource.reasonCode,
      (x) => x.code && Object.values(VaccinationIndication).includes(x.code)
    );
    const vaccinationMotive = filterCodeableConceptByCoding(
      resource.reasonCode,
      (x) => x.code && Object.values(VaccinationMotive).includes(x.code)
    );
    return {
      ...resourceMeta(resource, profile, FhirVersion.R4),
      pharmaceuticalProduct: extensionNictiz(
        resource,
        "ext-Vaccination.PharmaceuticalProduct"
      ),
      // NL-CM:9.7.19926
      identifier: map(resource.identifier, identifier),
      status: string(resource.status),
      // imm-dataelement-144
      vaccineCode: codeableConcept(resource.vaccineCode),
      // NL-CM:9.7.19927
      patient: reference(resource.patient),
      // NL-CM:0.1.1
      occurrenceDateTime: dateTime(resource.occurrenceDateTime),
      // NL-CM:11.1.3
      location: reference(resource.location),
      // NL-CM:17.2.1 | NL-CM:17.2.9
      site: codeableConcept(resource.site),
      // NL-CM:20.7.4
      route: codeableConcept(resource.route),
      // NL-CM:9.13.21195
      doseQuantity: quantity(resource.doseQuantity),
      // NL-CM:11.1.4
      performer: map(resource.performer, (p) => reference(p.actor)),
      // NL-CM:17.1.1
      note: map(resource.note, annotation),
      // NL-CM:11.1.7
      vaccinationIndication: map(vaccinationIndication, codeableConcept),
      // imm-dataelement-160
      vaccinationMotive: map(vaccinationMotive, codeableConcept),
      // imm-dataelement-158
      protocolApplied: map(resource.protocolApplied, parseProtocolApplied)
    };
  }
  const r4NlCoreVaccinationEvent = {
    profile,
    parse: parseNlCoreVaccinationEvent,
    uiSchema,
    summary
  };
  const resourcesR4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    nlCoreHealtcareProvider,
    nlCoreHealthProfessionalPractitionerRole,
    nlCoreHealthcareProviderOrganization,
    nlCorePharmaceuticalProductR4,
    r4NlCoreHealthProfessionalPractitioner,
    r4NlCorePatient,
    r4NlCoreVaccinationEvent
  }, Symbol.toStringTag, { value: "Module" }));
  const resourcesMapR3 = Object.fromEntries(
    Object.entries(resourcesR3).map(([_name, config2]) => [config2.profile, config2])
  );
  const resourcesMapR4 = Object.fromEntries(
    Object.entries(resourcesR4).map(([_name, config2]) => [config2.profile, config2])
  );
  function getResourceConfig(profile2, fhirVersion) {
    const resourcesMap = FhirVersion[fhirVersion] === FhirVersion.R3 ? resourcesMapR3 : resourcesMapR4;
    if (Array.isArray(profile2)) {
      profile2 = profile2.find((x) => !!resourcesMap[x]) ?? profile2[0];
    }
    if (resourcesMap[profile2]) {
      return resourcesMap[profile2];
    }
  }
  function getDetails(resource, options) {
    if (!isMgoResource(resource)) {
      throw new Error(
        `input does not seem to be a valid MGO Resource. Received MGO resource profile: "${resource?.profile}"`
      );
    }
    const config2 = getResourceConfig(resource.profile, resource.fhirVersion);
    if (!config2) {
      throw new Error(
        `No config found for MGO Resource with profile: "${resource.profile}" and fhir version: "${resource.fhirVersion}"`
      );
    }
    const context = createSchemaContext({
      locale: options?.locale ?? Locale.NL_NL,
      ignoreMissingTranslations: true,
      ...options
    });
    const uiSchema2 = config2.uiSchema(resource, context);
    return setEmptyEntries(context)(uiSchema2);
  }
  const defaultOptions = {
    fhirVersion: FhirVersion.R3
  };
  function getMgoResource(resource, options = {}) {
    const { fhirVersion } = { ...defaultOptions, ...options };
    if (!isFhirResource(resource)) {
      throw new Error(
        `input does not seem to be a valid Fhir Resource. Received resourceType: "${resource?.resourceType}"`
      );
    }
    const config2 = getResourceConfig(resource.meta?.profile ?? [], fhirVersion);
    if (!config2) {
      console.error(
        `No config found for fhir resourceType: "${resource.resourceType}" with profile: "${resource.meta?.profile}" for fhir version: "${fhirVersion}"`
      );
      return;
    }
    return config2.parse(resource);
  }
  function getSummary(resource, options) {
    if (!isMgoResource(resource)) {
      throw new Error(
        `input does not seem to be a valid MGO Resource. Received MGO resource profile: "${resource?.profile}"`
      );
    }
    const config2 = getResourceConfig(resource.profile, resource.fhirVersion);
    if (!config2) {
      throw new Error(
        `No config found for MGO Resource with profile: "${resource.profile}" and fhir version: "${resource.fhirVersion}"`
      );
    }
    if (!config2.summary) {
      return {
        label: resource.id ?? resource.profile,
        children: [
          {
            label: "Opties",
            children: [
              {
                type: "REFERENCE_LINK",
                label: "Bekijk alle gegevens",
                reference: resource.referenceId
              }
            ]
          }
        ]
      };
    }
    const context = createSchemaContext({
      locale: options?.locale ?? Locale.NL_NL,
      ignoreMissingTranslations: true,
      isSummary: true,
      ...options
    });
    const summaryUiSchema = config2.summary(resource, context);
    return setEmptyEntries(context)(summaryUiSchema);
  }
  const getBundleResourcesJson = createJsonApi(getBundleResources);
  const getMgoResourceJson = createJsonApi(getMgoResource);
  const getSummaryJson = createJsonApi(getSummary);
  const getDetailsJson = createJsonApi(getDetails);
  exports.getBundleResourcesJson = getBundleResourcesJson;
  exports.getDetailsJson = getDetailsJson;
  exports.getMgoResourceJson = getMgoResourceJson;
  exports.getSummaryJson = getSummaryJson;
  Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
  return exports;
}({});
